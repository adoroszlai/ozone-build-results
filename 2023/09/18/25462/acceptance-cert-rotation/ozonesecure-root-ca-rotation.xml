<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 6.1.1 (Python 3.8.10 on linux)" generated="20230918 17:16:27.963" rpa="false" schemaversion="4">
<suite id="s1" name="ozonesecure-root-ca-rotation">
<suite id="s1-s1" name="Kinit" source="/opt/hadoop/smoketest/kinit.robot">
<test id="s1-s1-t1" name="Kinit" line="27">
<kw name="Kinit test user" library="commonlib">
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230918 17:13:32.002" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230918 17:13:32.006" level="INFO">${rc} = 0</msg>
<msg timestamp="20230918 17:13:32.006" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230918 17:13:32.000" endtime="20230918 17:13:32.007"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230918 17:13:32.008" level="INFO">scm</msg>
<status status="PASS" starttime="20230918 17:13:32.007" endtime="20230918 17:13:32.008"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230918 17:13:32.008" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230918 17:13:32.008" endtime="20230918 17:13:32.008"/>
</kw>
<status status="PASS" starttime="20230918 17:13:31.999" endtime="20230918 17:13:32.009"/>
</kw>
<msg timestamp="20230918 17:13:32.009" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230918 17:13:31.999" endtime="20230918 17:13:32.009"/>
</kw>
<msg timestamp="20230918 17:13:32.009" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230918 17:13:31.998" endtime="20230918 17:13:32.009"/>
</kw>
<msg timestamp="20230918 17:13:32.009" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230918 17:13:31.998" endtime="20230918 17:13:32.009"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230918 17:13:32.010" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230918 17:13:32.009" endtime="20230918 17:13:32.010"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230918 17:13:32.014" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20230918 17:13:32.069" level="INFO">${rc} = 0</msg>
<msg timestamp="20230918 17:13:32.069" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230918 17:13:32.012" endtime="20230918 17:13:32.069"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230918 17:13:32.070" level="INFO"/>
<status status="PASS" starttime="20230918 17:13:32.070" endtime="20230918 17:13:32.070"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230918 17:13:32.071" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230918 17:13:32.070" endtime="20230918 17:13:32.071"/>
</kw>
<status status="PASS" starttime="20230918 17:13:32.011" endtime="20230918 17:13:32.071"/>
</kw>
<msg timestamp="20230918 17:13:32.071" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230918 17:13:32.011" endtime="20230918 17:13:32.071"/>
</kw>
<status status="PASS" starttime="20230918 17:13:32.010" endtime="20230918 17:13:32.072"/>
</kw>
<status status="PASS" starttime="20230918 17:13:32.010" endtime="20230918 17:13:32.072"/>
</kw>
<status status="PASS" starttime="20230918 17:13:31.997" endtime="20230918 17:13:32.072"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20230918 17:13:31.996" endtime="20230918 17:13:32.072"/>
</test>
<doc>Kinit test user</doc>
<status status="PASS" starttime="20230918 17:13:31.942" endtime="20230918 17:13:32.074"/>
</suite>
<suite id="s1-s2" name="Root-Ca-Rotation-Client-Checks" source="/opt/hadoop/smoketest/certrotation/root-ca-rotation-client-checks.robot">
<test id="s1-s2-t1" name="Create a volume and bucket" line="27">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230918 17:14:02.822" level="INFO">Running command 'ozone sh volume create rootca-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20230918 17:14:08.352" level="INFO">${rc} = 0</msg>
<msg timestamp="20230918 17:14:08.352" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230918 17:14:02.819" endtime="20230918 17:14:08.353"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230918 17:14:08.354" level="INFO"/>
<status status="PASS" starttime="20230918 17:14:08.353" endtime="20230918 17:14:08.354"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230918 17:14:08.354" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230918 17:14:08.354" endtime="20230918 17:14:08.354"/>
</kw>
<status status="PASS" starttime="20230918 17:14:02.819" endtime="20230918 17:14:08.355"/>
</kw>
<msg timestamp="20230918 17:14:08.355" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230918 17:14:02.818" endtime="20230918 17:14:08.355"/>
</kw>
<msg timestamp="20230918 17:14:08.355" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230918 17:14:02.818" endtime="20230918 17:14:08.355"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230918 17:14:08.355" endtime="20230918 17:14:08.356"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230918 17:14:08.360" level="INFO">Running command 'ozone sh bucket create /rootca-volume/rootca-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230918 17:14:14.325" level="INFO">${rc} = 0</msg>
<msg timestamp="20230918 17:14:14.325" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230918 17:14:08.357" endtime="20230918 17:14:14.325"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230918 17:14:14.326" level="INFO"/>
<status status="PASS" starttime="20230918 17:14:14.326" endtime="20230918 17:14:14.326"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230918 17:14:14.327" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230918 17:14:14.327" endtime="20230918 17:14:14.327"/>
</kw>
<status status="PASS" starttime="20230918 17:14:08.357" endtime="20230918 17:14:14.327"/>
</kw>
<msg timestamp="20230918 17:14:14.328" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230918 17:14:08.356" endtime="20230918 17:14:14.328"/>
</kw>
<msg timestamp="20230918 17:14:14.328" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230918 17:14:08.356" endtime="20230918 17:14:14.328"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230918 17:14:14.328" endtime="20230918 17:14:14.328"/>
</kw>
<tag>create-volume-and-bucket</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230918 17:14:02.817" endtime="20230918 17:14:14.329"/>
</test>
<test id="s1-s2-t2" name="Create key" line="34">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230918 17:14:14.334" level="INFO">Running command 'echo "rootca: key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20230918 17:14:14.336" level="INFO">${rc} = 0</msg>
<msg timestamp="20230918 17:14:14.336" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230918 17:14:14.331" endtime="20230918 17:14:14.336"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230918 17:14:14.337" level="INFO"/>
<status status="PASS" starttime="20230918 17:14:14.336" endtime="20230918 17:14:14.337"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230918 17:14:14.338" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230918 17:14:14.337" endtime="20230918 17:14:14.338"/>
</kw>
<status status="PASS" starttime="20230918 17:14:14.331" endtime="20230918 17:14:14.338"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230918 17:14:14.342" level="INFO">Running command 'ozone sh key put /rootca-volume/rootca-bucket/rootca-key /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230918 17:14:25.112" level="INFO">${rc} = 0</msg>
<msg timestamp="20230918 17:14:25.112" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230918 17:14:14.340" endtime="20230918 17:14:25.112"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230918 17:14:25.113" level="INFO"/>
<status status="PASS" starttime="20230918 17:14:25.113" endtime="20230918 17:14:25.114"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230918 17:14:25.114" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230918 17:14:25.114" endtime="20230918 17:14:25.114"/>
</kw>
<status status="PASS" starttime="20230918 17:14:14.339" endtime="20230918 17:14:25.115"/>
</kw>
<msg timestamp="20230918 17:14:25.115" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230918 17:14:14.339" endtime="20230918 17:14:25.115"/>
</kw>
<msg timestamp="20230918 17:14:25.115" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230918 17:14:14.338" endtime="20230918 17:14:25.115"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230918 17:14:25.115" endtime="20230918 17:14:25.115"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230918 17:14:25.119" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230918 17:14:25.122" level="INFO">${rc} = 0</msg>
<msg timestamp="20230918 17:14:25.122" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230918 17:14:25.116" endtime="20230918 17:14:25.122"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230918 17:14:25.123" level="INFO"/>
<status status="PASS" starttime="20230918 17:14:25.122" endtime="20230918 17:14:25.123"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230918 17:14:25.124" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230918 17:14:25.123" endtime="20230918 17:14:25.124"/>
</kw>
<status status="PASS" starttime="20230918 17:14:25.116" endtime="20230918 17:14:25.124"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230918 17:14:14.330" endtime="20230918 17:14:25.124"/>
</test>
<test id="s1-s2-t3" name="Read data from previously created key" line="40">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230918 17:14:25.126" level="INFO">${random} = 43851</msg>
<status status="PASS" starttime="20230918 17:14:25.126" endtime="20230918 17:14:25.126"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230918 17:14:25.130" level="INFO">Running command 'ozone sh key get /rootca-volume/rootca-bucket/rootca-key /tmp/key-43851 2&gt;&amp;1'.</msg>
<msg timestamp="20230918 17:14:34.653" level="INFO">${rc} = 0</msg>
<msg timestamp="20230918 17:14:34.653" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230918 17:14:25.128" endtime="20230918 17:14:34.653"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230918 17:14:34.654" level="INFO"/>
<status status="PASS" starttime="20230918 17:14:34.653" endtime="20230918 17:14:34.654"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230918 17:14:34.655" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230918 17:14:34.654" endtime="20230918 17:14:34.655"/>
</kw>
<status status="PASS" starttime="20230918 17:14:25.127" endtime="20230918 17:14:34.655"/>
</kw>
<msg timestamp="20230918 17:14:34.655" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230918 17:14:25.127" endtime="20230918 17:14:34.655"/>
</kw>
<msg timestamp="20230918 17:14:34.656" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230918 17:14:25.126" endtime="20230918 17:14:34.656"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230918 17:14:34.656" endtime="20230918 17:14:34.656"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230918 17:14:34.659" level="INFO">Running command 'cat /tmp/key-43851 2&gt;&amp;1'.</msg>
<msg timestamp="20230918 17:14:34.662" level="INFO">${rc} = 0</msg>
<msg timestamp="20230918 17:14:34.662" level="INFO">${output} = rootca: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230918 17:14:34.657" endtime="20230918 17:14:34.662"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230918 17:14:34.663" level="INFO">rootca: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230918 17:14:34.662" endtime="20230918 17:14:34.663"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230918 17:14:34.664" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230918 17:14:34.663" endtime="20230918 17:14:34.664"/>
</kw>
<msg timestamp="20230918 17:14:34.664" level="INFO">${output} = rootca: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230918 17:14:34.656" endtime="20230918 17:14:34.664"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230918 17:14:34.664" endtime="20230918 17:14:34.665"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230918 17:14:34.668" level="INFO">Running command 'rm /tmp/key-43851 2&gt;&amp;1'.</msg>
<msg timestamp="20230918 17:14:34.671" level="INFO">${rc} = 0</msg>
<msg timestamp="20230918 17:14:34.671" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230918 17:14:34.666" endtime="20230918 17:14:34.671"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230918 17:14:34.672" level="INFO"/>
<status status="PASS" starttime="20230918 17:14:34.671" endtime="20230918 17:14:34.672"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230918 17:14:34.673" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230918 17:14:34.672" endtime="20230918 17:14:34.673"/>
</kw>
<status status="PASS" starttime="20230918 17:14:34.665" endtime="20230918 17:14:34.673"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230918 17:14:25.125" endtime="20230918 17:14:34.673"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20230918 17:14:02.767" endtime="20230918 17:14:34.675"/>
</suite>
<suite id="s1-s3" name="Root-Ca-Rotation-Client-Checks" source="/opt/hadoop/smoketest/certrotation/root-ca-rotation-client-checks.robot">
<test id="s1-s3-t1" name="Create a volume and bucket" line="27">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230918 17:15:36.650" level="INFO">Running command 'ozone sh volume create rootca2-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20230918 17:15:41.740" level="INFO">${rc} = 0</msg>
<msg timestamp="20230918 17:15:41.740" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230918 17:15:36.647" endtime="20230918 17:15:41.740"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230918 17:15:41.742" level="INFO"/>
<status status="PASS" starttime="20230918 17:15:41.741" endtime="20230918 17:15:41.742"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230918 17:15:41.743" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230918 17:15:41.742" endtime="20230918 17:15:41.743"/>
</kw>
<status status="PASS" starttime="20230918 17:15:36.647" endtime="20230918 17:15:41.743"/>
</kw>
<msg timestamp="20230918 17:15:41.743" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230918 17:15:36.646" endtime="20230918 17:15:41.743"/>
</kw>
<msg timestamp="20230918 17:15:41.744" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230918 17:15:36.646" endtime="20230918 17:15:41.744"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230918 17:15:41.744" endtime="20230918 17:15:41.744"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230918 17:15:41.749" level="INFO">Running command 'ozone sh bucket create /rootca2-volume/rootca2-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230918 17:15:47.595" level="INFO">${rc} = 0</msg>
<msg timestamp="20230918 17:15:47.595" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230918 17:15:41.746" endtime="20230918 17:15:47.595"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230918 17:15:47.597" level="INFO"/>
<status status="PASS" starttime="20230918 17:15:47.596" endtime="20230918 17:15:47.597"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230918 17:15:47.598" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230918 17:15:47.597" endtime="20230918 17:15:47.598"/>
</kw>
<status status="PASS" starttime="20230918 17:15:41.746" endtime="20230918 17:15:47.598"/>
</kw>
<msg timestamp="20230918 17:15:47.598" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230918 17:15:41.745" endtime="20230918 17:15:47.598"/>
</kw>
<msg timestamp="20230918 17:15:47.598" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230918 17:15:41.745" endtime="20230918 17:15:47.598"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230918 17:15:47.598" endtime="20230918 17:15:47.599"/>
</kw>
<tag>create-volume-and-bucket</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230918 17:15:36.645" endtime="20230918 17:15:47.599"/>
</test>
<test id="s1-s3-t2" name="Create key" line="34">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230918 17:15:47.605" level="INFO">Running command 'echo "rootca2: key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20230918 17:15:47.606" level="INFO">${rc} = 0</msg>
<msg timestamp="20230918 17:15:47.607" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230918 17:15:47.602" endtime="20230918 17:15:47.607"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230918 17:15:47.608" level="INFO"/>
<status status="PASS" starttime="20230918 17:15:47.607" endtime="20230918 17:15:47.608"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230918 17:15:47.608" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230918 17:15:47.608" endtime="20230918 17:15:47.608"/>
</kw>
<status status="PASS" starttime="20230918 17:15:47.601" endtime="20230918 17:15:47.609"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230918 17:15:47.613" level="INFO">Running command 'ozone sh key put /rootca2-volume/rootca2-bucket/rootca2-key /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230918 17:15:56.072" level="INFO">${rc} = 0</msg>
<msg timestamp="20230918 17:15:56.072" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230918 17:15:47.611" endtime="20230918 17:15:56.072"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230918 17:15:56.073" level="INFO"/>
<status status="PASS" starttime="20230918 17:15:56.073" endtime="20230918 17:15:56.073"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230918 17:15:56.074" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230918 17:15:56.073" endtime="20230918 17:15:56.074"/>
</kw>
<status status="PASS" starttime="20230918 17:15:47.610" endtime="20230918 17:15:56.074"/>
</kw>
<msg timestamp="20230918 17:15:56.074" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230918 17:15:47.610" endtime="20230918 17:15:56.074"/>
</kw>
<msg timestamp="20230918 17:15:56.075" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230918 17:15:47.609" endtime="20230918 17:15:56.075"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230918 17:15:56.075" endtime="20230918 17:15:56.075"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230918 17:15:56.079" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230918 17:15:56.082" level="INFO">${rc} = 0</msg>
<msg timestamp="20230918 17:15:56.082" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230918 17:15:56.076" endtime="20230918 17:15:56.082"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230918 17:15:56.083" level="INFO"/>
<status status="PASS" starttime="20230918 17:15:56.082" endtime="20230918 17:15:56.083"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230918 17:15:56.084" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230918 17:15:56.083" endtime="20230918 17:15:56.084"/>
</kw>
<status status="PASS" starttime="20230918 17:15:56.075" endtime="20230918 17:15:56.084"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230918 17:15:47.600" endtime="20230918 17:15:56.084"/>
</test>
<test id="s1-s3-t3" name="Read data from previously created key" line="40">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230918 17:15:56.086" level="INFO">${random} = 50028</msg>
<status status="PASS" starttime="20230918 17:15:56.086" endtime="20230918 17:15:56.086"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230918 17:15:56.091" level="INFO">Running command 'ozone sh key get /rootca2-volume/rootca2-bucket/rootca2-key /tmp/key-50028 2&gt;&amp;1'.</msg>
<msg timestamp="20230918 17:16:04.621" level="INFO">${rc} = 0</msg>
<msg timestamp="20230918 17:16:04.621" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230918 17:15:56.088" endtime="20230918 17:16:04.621"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230918 17:16:04.622" level="INFO"/>
<status status="PASS" starttime="20230918 17:16:04.621" endtime="20230918 17:16:04.622"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230918 17:16:04.623" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230918 17:16:04.622" endtime="20230918 17:16:04.623"/>
</kw>
<status status="PASS" starttime="20230918 17:15:56.088" endtime="20230918 17:16:04.623"/>
</kw>
<msg timestamp="20230918 17:16:04.623" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230918 17:15:56.088" endtime="20230918 17:16:04.623"/>
</kw>
<msg timestamp="20230918 17:16:04.623" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230918 17:15:56.087" endtime="20230918 17:16:04.623"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230918 17:16:04.624" endtime="20230918 17:16:04.624"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230918 17:16:04.627" level="INFO">Running command 'cat /tmp/key-50028 2&gt;&amp;1'.</msg>
<msg timestamp="20230918 17:16:04.630" level="INFO">${rc} = 0</msg>
<msg timestamp="20230918 17:16:04.630" level="INFO">${output} = rootca2: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230918 17:16:04.625" endtime="20230918 17:16:04.630"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230918 17:16:04.631" level="INFO">rootca2: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230918 17:16:04.631" endtime="20230918 17:16:04.631"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230918 17:16:04.632" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230918 17:16:04.631" endtime="20230918 17:16:04.632"/>
</kw>
<msg timestamp="20230918 17:16:04.632" level="INFO">${output} = rootca2: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230918 17:16:04.624" endtime="20230918 17:16:04.632"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230918 17:16:04.632" endtime="20230918 17:16:04.633"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230918 17:16:04.636" level="INFO">Running command 'rm /tmp/key-50028 2&gt;&amp;1'.</msg>
<msg timestamp="20230918 17:16:04.638" level="INFO">${rc} = 0</msg>
<msg timestamp="20230918 17:16:04.638" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230918 17:16:04.633" endtime="20230918 17:16:04.638"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230918 17:16:04.640" level="INFO"/>
<status status="PASS" starttime="20230918 17:16:04.639" endtime="20230918 17:16:04.640"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230918 17:16:04.640" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230918 17:16:04.640" endtime="20230918 17:16:04.640"/>
</kw>
<status status="PASS" starttime="20230918 17:16:04.633" endtime="20230918 17:16:04.641"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230918 17:15:56.085" endtime="20230918 17:16:04.641"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20230918 17:15:36.596" endtime="20230918 17:16:04.642"/>
</suite>
<suite id="s1-s4" name="Root-Ca-Rotation" source="/opt/hadoop/smoketest/scmha/root-ca-rotation.robot">
<test id="s1-s4-t1" name="Verify root CA rotation metrics" line="26">
<kw name="Execute" library="os">
<var>${successRotationLine}</var>
<arg>curl -sS 'http://localhost:9876/jmx' | grep NumSuccessRotation</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230918 17:16:07.999" level="INFO">Running command 'curl -sS 'http://localhost:9876/jmx' | grep NumSuccessRotation 2&gt;&amp;1'.</msg>
<msg timestamp="20230918 17:16:08.551" level="INFO">${rc} = 0</msg>
<msg timestamp="20230918 17:16:08.551" level="INFO">${output} =     "NumSuccessRotation" : 2,</msg>
<status status="PASS" starttime="20230918 17:16:07.996" endtime="20230918 17:16:08.551"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230918 17:16:08.552" level="INFO">    "NumSuccessRotation" : 2,</msg>
<status status="PASS" starttime="20230918 17:16:08.551" endtime="20230918 17:16:08.552"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230918 17:16:08.553" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230918 17:16:08.553" endtime="20230918 17:16:08.553"/>
</kw>
<status status="PASS" starttime="20230918 17:16:07.996" endtime="20230918 17:16:08.553"/>
</kw>
<msg timestamp="20230918 17:16:08.553" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230918 17:16:07.995" endtime="20230918 17:16:08.553"/>
</kw>
<msg timestamp="20230918 17:16:08.554" level="INFO">${successRotationLine} =     "NumSuccessRotation" : 2,</msg>
<status status="PASS" starttime="20230918 17:16:07.995" endtime="20230918 17:16:08.554"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${successRotationLine}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230918 17:16:08.554" level="INFO">    "NumSuccessRotation" : 2,</msg>
<status status="PASS" starttime="20230918 17:16:08.554" endtime="20230918 17:16:08.554"/>
</kw>
<kw name="Split String" library="String">
<var>${temp_1}</var>
<arg>${successRotationLine}</arg>
<arg>:</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20230918 17:16:08.555" level="INFO">${temp_1} = ['    "NumSuccessRotation" ', ' 2,']</msg>
<status status="PASS" starttime="20230918 17:16:08.555" endtime="20230918 17:16:08.555"/>
</kw>
<kw name="Strip String" library="String">
<var>${temp_2}</var>
<arg>${temp_1[1]}</arg>
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<msg timestamp="20230918 17:16:08.557" level="INFO">${temp_2} = 2,</msg>
<status status="PASS" starttime="20230918 17:16:08.555" endtime="20230918 17:16:08.557"/>
</kw>
<kw name="Split String" library="String">
<var>${temp_3}</var>
<arg>${temp_2}</arg>
<arg>,</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20230918 17:16:08.558" level="INFO">${temp_3} = ['2', '']</msg>
<status status="PASS" starttime="20230918 17:16:08.557" endtime="20230918 17:16:08.558"/>
</kw>
<kw name="Strip String" library="String">
<var>${successRotation}</var>
<arg>${temp_3[0]}</arg>
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<msg timestamp="20230918 17:16:08.560" level="INFO">${successRotation} = 2</msg>
<status status="PASS" starttime="20230918 17:16:08.558" endtime="20230918 17:16:08.560"/>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<var>${successRotation}</var>
<arg>${successRotation}</arg>
<doc>Converts the given item to a floating point number.</doc>
<msg timestamp="20230918 17:16:08.560" level="INFO">${successRotation} = 2.0</msg>
<status status="PASS" starttime="20230918 17:16:08.560" endtime="20230918 17:16:08.560"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${successRotation} &gt;= 1</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230918 17:16:08.560" endtime="20230918 17:16:08.561"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230918 17:16:07.994" endtime="20230918 17:16:08.561"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20230918 17:16:07.943" endtime="20230918 17:16:08.563"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="60706"/>
</suite>
<statistics>
<total>
<stat pass="8" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="2" fail="0" skip="0">create-volume-and-bucket</stat>
</tag>
<suite>
<stat pass="8" fail="0" skip="0" id="s1" name="ozonesecure-root-ca-rotation">ozonesecure-root-ca-rotation</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1" name="Kinit">ozonesecure-root-ca-rotation.Kinit</stat>
<stat pass="3" fail="0" skip="0" id="s1-s2" name="Root-Ca-Rotation-Client-Checks">ozonesecure-root-ca-rotation.Root-Ca-Rotation-Client-Checks</stat>
<stat pass="3" fail="0" skip="0" id="s1-s3" name="Root-Ca-Rotation-Client-Checks">ozonesecure-root-ca-rotation.Root-Ca-Rotation-Client-Checks</stat>
<stat pass="1" fail="0" skip="0" id="s1-s4" name="Root-Ca-Rotation">ozonesecure-root-ca-rotation.Root-Ca-Rotation</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
