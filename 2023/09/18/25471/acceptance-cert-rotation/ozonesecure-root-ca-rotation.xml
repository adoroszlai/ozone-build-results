<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 6.1.1 (Python 3.8.10 on linux)" generated="20230918 22:14:29.687" rpa="false" schemaversion="4">
<suite id="s1" name="ozonesecure-root-ca-rotation">
<suite id="s1-s1" name="Kinit" source="/opt/hadoop/smoketest/kinit.robot">
<test id="s1-s1-t1" name="Kinit" line="27">
<kw name="Kinit test user" library="commonlib">
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230918 22:11:31.892" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230918 22:11:31.897" level="INFO">${rc} = 0</msg>
<msg timestamp="20230918 22:11:31.897" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230918 22:11:31.878" endtime="20230918 22:11:31.897"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230918 22:11:31.913" level="INFO">scm</msg>
<status status="PASS" starttime="20230918 22:11:31.898" endtime="20230918 22:11:31.914"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230918 22:11:31.915" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230918 22:11:31.914" endtime="20230918 22:11:31.915"/>
</kw>
<status status="PASS" starttime="20230918 22:11:31.874" endtime="20230918 22:11:31.915"/>
</kw>
<msg timestamp="20230918 22:11:31.915" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230918 22:11:31.860" endtime="20230918 22:11:31.916"/>
</kw>
<msg timestamp="20230918 22:11:31.916" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230918 22:11:31.859" endtime="20230918 22:11:31.916"/>
</kw>
<msg timestamp="20230918 22:11:31.916" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230918 22:11:31.859" endtime="20230918 22:11:31.916"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230918 22:11:31.917" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230918 22:11:31.917" endtime="20230918 22:11:31.917"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230918 22:11:31.934" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20230918 22:11:32.158" level="INFO">${rc} = 0</msg>
<msg timestamp="20230918 22:11:32.158" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230918 22:11:31.926" endtime="20230918 22:11:32.159"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230918 22:11:32.166" level="INFO"/>
<status status="PASS" starttime="20230918 22:11:32.159" endtime="20230918 22:11:32.166"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230918 22:11:32.172" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230918 22:11:32.168" endtime="20230918 22:11:32.172"/>
</kw>
<status status="PASS" starttime="20230918 22:11:31.925" endtime="20230918 22:11:32.172"/>
</kw>
<msg timestamp="20230918 22:11:32.173" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230918 22:11:31.925" endtime="20230918 22:11:32.173"/>
</kw>
<status status="PASS" starttime="20230918 22:11:31.924" endtime="20230918 22:11:32.173"/>
</kw>
<status status="PASS" starttime="20230918 22:11:31.917" endtime="20230918 22:11:32.173"/>
</kw>
<status status="PASS" starttime="20230918 22:11:31.857" endtime="20230918 22:11:32.173"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20230918 22:11:31.854" endtime="20230918 22:11:32.174"/>
</test>
<doc>Kinit test user</doc>
<status status="PASS" starttime="20230918 22:11:31.489" endtime="20230918 22:11:32.176"/>
</suite>
<suite id="s1-s2" name="Root-Ca-Rotation-Client-Checks" source="/opt/hadoop/smoketest/certrotation/root-ca-rotation-client-checks.robot">
<test id="s1-s2-t1" name="Create a volume and bucket" line="27">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230918 22:11:53.704" level="INFO">Running command 'ozone sh volume create rootca-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20230918 22:12:01.798" level="INFO">${rc} = 0</msg>
<msg timestamp="20230918 22:12:01.798" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230918 22:11:53.701" endtime="20230918 22:12:01.798"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230918 22:12:01.800" level="INFO"/>
<status status="PASS" starttime="20230918 22:12:01.799" endtime="20230918 22:12:01.800"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230918 22:12:01.801" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230918 22:12:01.800" endtime="20230918 22:12:01.801"/>
</kw>
<status status="PASS" starttime="20230918 22:11:53.700" endtime="20230918 22:12:01.801"/>
</kw>
<msg timestamp="20230918 22:12:01.801" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230918 22:11:53.700" endtime="20230918 22:12:01.801"/>
</kw>
<msg timestamp="20230918 22:12:01.802" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230918 22:11:53.699" endtime="20230918 22:12:01.802"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230918 22:12:01.802" endtime="20230918 22:12:01.803"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230918 22:12:01.808" level="INFO">Running command 'ozone sh bucket create /rootca-volume/rootca-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230918 22:12:10.774" level="INFO">${rc} = 0</msg>
<msg timestamp="20230918 22:12:10.774" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230918 22:12:01.805" endtime="20230918 22:12:10.774"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230918 22:12:10.776" level="INFO"/>
<status status="PASS" starttime="20230918 22:12:10.775" endtime="20230918 22:12:10.776"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230918 22:12:10.777" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230918 22:12:10.776" endtime="20230918 22:12:10.777"/>
</kw>
<status status="PASS" starttime="20230918 22:12:01.804" endtime="20230918 22:12:10.778"/>
</kw>
<msg timestamp="20230918 22:12:10.778" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230918 22:12:01.804" endtime="20230918 22:12:10.778"/>
</kw>
<msg timestamp="20230918 22:12:10.778" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230918 22:12:01.803" endtime="20230918 22:12:10.778"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230918 22:12:10.779" endtime="20230918 22:12:10.779"/>
</kw>
<tag>create-volume-and-bucket</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230918 22:11:53.698" endtime="20230918 22:12:10.779"/>
</test>
<test id="s1-s2-t2" name="Create key" line="34">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230918 22:12:10.786" level="INFO">Running command 'echo "rootca: key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20230918 22:12:10.789" level="INFO">${rc} = 0</msg>
<msg timestamp="20230918 22:12:10.789" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230918 22:12:10.783" endtime="20230918 22:12:10.789"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230918 22:12:10.791" level="INFO"/>
<status status="PASS" starttime="20230918 22:12:10.790" endtime="20230918 22:12:10.791"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230918 22:12:10.792" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230918 22:12:10.791" endtime="20230918 22:12:10.792"/>
</kw>
<status status="PASS" starttime="20230918 22:12:10.782" endtime="20230918 22:12:10.792"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230918 22:12:10.798" level="INFO">Running command 'ozone sh key put /rootca-volume/rootca-bucket/rootca-key /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230918 22:12:26.471" level="INFO">${rc} = 0</msg>
<msg timestamp="20230918 22:12:26.471" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230918 22:12:10.795" endtime="20230918 22:12:26.471"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230918 22:12:26.475" level="INFO"/>
<status status="PASS" starttime="20230918 22:12:26.472" endtime="20230918 22:12:26.475"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230918 22:12:26.476" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230918 22:12:26.475" endtime="20230918 22:12:26.476"/>
</kw>
<status status="PASS" starttime="20230918 22:12:10.794" endtime="20230918 22:12:26.476"/>
</kw>
<msg timestamp="20230918 22:12:26.476" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230918 22:12:10.794" endtime="20230918 22:12:26.476"/>
</kw>
<msg timestamp="20230918 22:12:26.477" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230918 22:12:10.793" endtime="20230918 22:12:26.477"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230918 22:12:26.477" endtime="20230918 22:12:26.477"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230918 22:12:26.481" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230918 22:12:26.485" level="INFO">${rc} = 0</msg>
<msg timestamp="20230918 22:12:26.485" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230918 22:12:26.478" endtime="20230918 22:12:26.485"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230918 22:12:26.486" level="INFO"/>
<status status="PASS" starttime="20230918 22:12:26.485" endtime="20230918 22:12:26.486"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230918 22:12:26.487" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230918 22:12:26.486" endtime="20230918 22:12:26.487"/>
</kw>
<status status="PASS" starttime="20230918 22:12:26.478" endtime="20230918 22:12:26.487"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230918 22:12:10.781" endtime="20230918 22:12:26.488"/>
</test>
<test id="s1-s2-t3" name="Read data from previously created key" line="40">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230918 22:12:26.491" level="INFO">${random} = 66116</msg>
<status status="PASS" starttime="20230918 22:12:26.490" endtime="20230918 22:12:26.491"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230918 22:12:26.496" level="INFO">Running command 'ozone sh key get /rootca-volume/rootca-bucket/rootca-key /tmp/key-66116 2&gt;&amp;1'.</msg>
<msg timestamp="20230918 22:12:39.446" level="INFO">${rc} = 0</msg>
<msg timestamp="20230918 22:12:39.446" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230918 22:12:26.493" endtime="20230918 22:12:39.446"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230918 22:12:39.448" level="INFO"/>
<status status="PASS" starttime="20230918 22:12:39.447" endtime="20230918 22:12:39.448"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230918 22:12:39.449" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230918 22:12:39.449" endtime="20230918 22:12:39.449"/>
</kw>
<status status="PASS" starttime="20230918 22:12:26.492" endtime="20230918 22:12:39.450"/>
</kw>
<msg timestamp="20230918 22:12:39.450" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230918 22:12:26.492" endtime="20230918 22:12:39.450"/>
</kw>
<msg timestamp="20230918 22:12:39.450" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230918 22:12:26.491" endtime="20230918 22:12:39.450"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230918 22:12:39.450" endtime="20230918 22:12:39.451"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230918 22:12:39.456" level="INFO">Running command 'cat /tmp/key-66116 2&gt;&amp;1'.</msg>
<msg timestamp="20230918 22:12:39.460" level="INFO">${rc} = 0</msg>
<msg timestamp="20230918 22:12:39.460" level="INFO">${output} = rootca: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230918 22:12:39.452" endtime="20230918 22:12:39.460"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230918 22:12:39.462" level="INFO">rootca: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230918 22:12:39.461" endtime="20230918 22:12:39.462"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230918 22:12:39.463" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230918 22:12:39.462" endtime="20230918 22:12:39.463"/>
</kw>
<msg timestamp="20230918 22:12:39.463" level="INFO">${output} = rootca: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230918 22:12:39.451" endtime="20230918 22:12:39.463"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230918 22:12:39.464" endtime="20230918 22:12:39.464"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230918 22:12:39.468" level="INFO">Running command 'rm /tmp/key-66116 2&gt;&amp;1'.</msg>
<msg timestamp="20230918 22:12:39.472" level="INFO">${rc} = 0</msg>
<msg timestamp="20230918 22:12:39.473" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230918 22:12:39.465" endtime="20230918 22:12:39.473"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230918 22:12:39.474" level="INFO"/>
<status status="PASS" starttime="20230918 22:12:39.473" endtime="20230918 22:12:39.474"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230918 22:12:39.475" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230918 22:12:39.475" endtime="20230918 22:12:39.475"/>
</kw>
<status status="PASS" starttime="20230918 22:12:39.464" endtime="20230918 22:12:39.476"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230918 22:12:26.489" endtime="20230918 22:12:39.476"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20230918 22:11:53.625" endtime="20230918 22:12:39.479"/>
</suite>
<suite id="s1-s3" name="Root-Ca-Rotation-Client-Checks" source="/opt/hadoop/smoketest/certrotation/root-ca-rotation-client-checks.robot">
<test id="s1-s3-t1" name="Create a volume and bucket" line="27">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230918 22:13:24.039" level="INFO">Running command 'ozone sh volume create rootca2-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20230918 22:13:31.826" level="INFO">${rc} = 0</msg>
<msg timestamp="20230918 22:13:31.826" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230918 22:13:24.036" endtime="20230918 22:13:31.826"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230918 22:13:31.828" level="INFO"/>
<status status="PASS" starttime="20230918 22:13:31.827" endtime="20230918 22:13:31.828"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230918 22:13:31.829" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230918 22:13:31.828" endtime="20230918 22:13:31.829"/>
</kw>
<status status="PASS" starttime="20230918 22:13:24.035" endtime="20230918 22:13:31.830"/>
</kw>
<msg timestamp="20230918 22:13:31.830" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230918 22:13:24.035" endtime="20230918 22:13:31.830"/>
</kw>
<msg timestamp="20230918 22:13:31.831" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230918 22:13:24.034" endtime="20230918 22:13:31.831"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230918 22:13:31.831" endtime="20230918 22:13:31.832"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230918 22:13:31.838" level="INFO">Running command 'ozone sh bucket create /rootca2-volume/rootca2-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230918 22:13:40.274" level="INFO">${rc} = 0</msg>
<msg timestamp="20230918 22:13:40.275" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230918 22:13:31.834" endtime="20230918 22:13:40.275"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230918 22:13:40.277" level="INFO"/>
<status status="PASS" starttime="20230918 22:13:40.275" endtime="20230918 22:13:40.277"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230918 22:13:40.278" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230918 22:13:40.277" endtime="20230918 22:13:40.278"/>
</kw>
<status status="PASS" starttime="20230918 22:13:31.834" endtime="20230918 22:13:40.278"/>
</kw>
<msg timestamp="20230918 22:13:40.278" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230918 22:13:31.833" endtime="20230918 22:13:40.278"/>
</kw>
<msg timestamp="20230918 22:13:40.279" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230918 22:13:31.832" endtime="20230918 22:13:40.279"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230918 22:13:40.279" endtime="20230918 22:13:40.279"/>
</kw>
<tag>create-volume-and-bucket</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230918 22:13:24.033" endtime="20230918 22:13:40.280"/>
</test>
<test id="s1-s3-t2" name="Create key" line="34">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230918 22:13:40.286" level="INFO">Running command 'echo "rootca2: key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20230918 22:13:40.289" level="INFO">${rc} = 0</msg>
<msg timestamp="20230918 22:13:40.289" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230918 22:13:40.283" endtime="20230918 22:13:40.289"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230918 22:13:40.290" level="INFO"/>
<status status="PASS" starttime="20230918 22:13:40.289" endtime="20230918 22:13:40.290"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230918 22:13:40.291" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230918 22:13:40.291" endtime="20230918 22:13:40.291"/>
</kw>
<status status="PASS" starttime="20230918 22:13:40.282" endtime="20230918 22:13:40.292"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230918 22:13:40.297" level="INFO">Running command 'ozone sh key put /rootca2-volume/rootca2-bucket/rootca2-key /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230918 22:13:52.468" level="INFO">${rc} = 0</msg>
<msg timestamp="20230918 22:13:52.468" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230918 22:13:40.294" endtime="20230918 22:13:52.468"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230918 22:13:52.470" level="INFO"/>
<status status="PASS" starttime="20230918 22:13:52.469" endtime="20230918 22:13:52.470"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230918 22:13:52.471" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230918 22:13:52.470" endtime="20230918 22:13:52.471"/>
</kw>
<status status="PASS" starttime="20230918 22:13:40.293" endtime="20230918 22:13:52.472"/>
</kw>
<msg timestamp="20230918 22:13:52.472" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230918 22:13:40.293" endtime="20230918 22:13:52.472"/>
</kw>
<msg timestamp="20230918 22:13:52.472" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230918 22:13:40.292" endtime="20230918 22:13:52.472"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230918 22:13:52.472" endtime="20230918 22:13:52.473"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230918 22:13:52.477" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230918 22:13:52.481" level="INFO">${rc} = 0</msg>
<msg timestamp="20230918 22:13:52.481" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230918 22:13:52.474" endtime="20230918 22:13:52.481"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230918 22:13:52.483" level="INFO"/>
<status status="PASS" starttime="20230918 22:13:52.482" endtime="20230918 22:13:52.483"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230918 22:13:52.484" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230918 22:13:52.483" endtime="20230918 22:13:52.484"/>
</kw>
<status status="PASS" starttime="20230918 22:13:52.473" endtime="20230918 22:13:52.484"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230918 22:13:40.281" endtime="20230918 22:13:52.485"/>
</test>
<test id="s1-s3-t3" name="Read data from previously created key" line="40">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230918 22:13:52.487" level="INFO">${random} = 10162</msg>
<status status="PASS" starttime="20230918 22:13:52.487" endtime="20230918 22:13:52.487"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230918 22:13:52.493" level="INFO">Running command 'ozone sh key get /rootca2-volume/rootca2-bucket/rootca2-key /tmp/key-10162 2&gt;&amp;1'.</msg>
<msg timestamp="20230918 22:14:02.656" level="INFO">${rc} = 0</msg>
<msg timestamp="20230918 22:14:02.656" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230918 22:13:52.490" endtime="20230918 22:14:02.656"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230918 22:14:02.658" level="INFO"/>
<status status="PASS" starttime="20230918 22:14:02.657" endtime="20230918 22:14:02.658"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230918 22:14:02.658" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230918 22:14:02.658" endtime="20230918 22:14:02.659"/>
</kw>
<status status="PASS" starttime="20230918 22:13:52.489" endtime="20230918 22:14:02.659"/>
</kw>
<msg timestamp="20230918 22:14:02.659" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230918 22:13:52.489" endtime="20230918 22:14:02.659"/>
</kw>
<msg timestamp="20230918 22:14:02.660" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230918 22:13:52.488" endtime="20230918 22:14:02.660"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230918 22:14:02.660" endtime="20230918 22:14:02.661"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230918 22:14:02.665" level="INFO">Running command 'cat /tmp/key-10162 2&gt;&amp;1'.</msg>
<msg timestamp="20230918 22:14:02.670" level="INFO">${rc} = 0</msg>
<msg timestamp="20230918 22:14:02.670" level="INFO">${output} = rootca2: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230918 22:14:02.662" endtime="20230918 22:14:02.670"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230918 22:14:02.672" level="INFO">rootca2: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230918 22:14:02.670" endtime="20230918 22:14:02.672"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230918 22:14:02.673" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230918 22:14:02.672" endtime="20230918 22:14:02.673"/>
</kw>
<msg timestamp="20230918 22:14:02.674" level="INFO">${output} = rootca2: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230918 22:14:02.661" endtime="20230918 22:14:02.674"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230918 22:14:02.674" endtime="20230918 22:14:02.674"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230918 22:14:02.679" level="INFO">Running command 'rm /tmp/key-10162 2&gt;&amp;1'.</msg>
<msg timestamp="20230918 22:14:02.683" level="INFO">${rc} = 0</msg>
<msg timestamp="20230918 22:14:02.683" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230918 22:14:02.676" endtime="20230918 22:14:02.683"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230918 22:14:02.685" level="INFO"/>
<status status="PASS" starttime="20230918 22:14:02.684" endtime="20230918 22:14:02.685"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230918 22:14:02.686" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230918 22:14:02.685" endtime="20230918 22:14:02.686"/>
</kw>
<status status="PASS" starttime="20230918 22:14:02.675" endtime="20230918 22:14:02.686"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230918 22:13:52.486" endtime="20230918 22:14:02.687"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20230918 22:13:23.962" endtime="20230918 22:14:02.689"/>
</suite>
<suite id="s1-s4" name="Root-Ca-Rotation" source="/opt/hadoop/smoketest/scmha/root-ca-rotation.robot">
<test id="s1-s4-t1" name="Verify root CA rotation metrics" line="26">
<kw name="Execute" library="os">
<var>${successRotationLine}</var>
<arg>curl -sS 'http://localhost:9876/jmx' | grep NumSuccessRotation</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230918 22:14:07.197" level="INFO">Running command 'curl -sS 'http://localhost:9876/jmx' | grep NumSuccessRotation 2&gt;&amp;1'.</msg>
<msg timestamp="20230918 22:14:07.900" level="INFO">${rc} = 0</msg>
<msg timestamp="20230918 22:14:07.900" level="INFO">${output} =     "NumSuccessRotation" : 2,</msg>
<status status="PASS" starttime="20230918 22:14:07.194" endtime="20230918 22:14:07.900"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230918 22:14:07.902" level="INFO">    "NumSuccessRotation" : 2,</msg>
<status status="PASS" starttime="20230918 22:14:07.901" endtime="20230918 22:14:07.902"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230918 22:14:07.903" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230918 22:14:07.903" endtime="20230918 22:14:07.904"/>
</kw>
<status status="PASS" starttime="20230918 22:14:07.193" endtime="20230918 22:14:07.904"/>
</kw>
<msg timestamp="20230918 22:14:07.904" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230918 22:14:07.193" endtime="20230918 22:14:07.904"/>
</kw>
<msg timestamp="20230918 22:14:07.904" level="INFO">${successRotationLine} =     "NumSuccessRotation" : 2,</msg>
<status status="PASS" starttime="20230918 22:14:07.192" endtime="20230918 22:14:07.904"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${successRotationLine}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230918 22:14:07.905" level="INFO">    "NumSuccessRotation" : 2,</msg>
<status status="PASS" starttime="20230918 22:14:07.905" endtime="20230918 22:14:07.905"/>
</kw>
<kw name="Split String" library="String">
<var>${temp_1}</var>
<arg>${successRotationLine}</arg>
<arg>:</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20230918 22:14:07.906" level="INFO">${temp_1} = ['    "NumSuccessRotation" ', ' 2,']</msg>
<status status="PASS" starttime="20230918 22:14:07.906" endtime="20230918 22:14:07.906"/>
</kw>
<kw name="Strip String" library="String">
<var>${temp_2}</var>
<arg>${temp_1[1]}</arg>
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<msg timestamp="20230918 22:14:07.908" level="INFO">${temp_2} = 2,</msg>
<status status="PASS" starttime="20230918 22:14:07.907" endtime="20230918 22:14:07.909"/>
</kw>
<kw name="Split String" library="String">
<var>${temp_3}</var>
<arg>${temp_2}</arg>
<arg>,</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20230918 22:14:07.909" level="INFO">${temp_3} = ['2', '']</msg>
<status status="PASS" starttime="20230918 22:14:07.909" endtime="20230918 22:14:07.909"/>
</kw>
<kw name="Strip String" library="String">
<var>${successRotation}</var>
<arg>${temp_3[0]}</arg>
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<msg timestamp="20230918 22:14:07.911" level="INFO">${successRotation} = 2</msg>
<status status="PASS" starttime="20230918 22:14:07.910" endtime="20230918 22:14:07.911"/>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<var>${successRotation}</var>
<arg>${successRotation}</arg>
<doc>Converts the given item to a floating point number.</doc>
<msg timestamp="20230918 22:14:07.913" level="INFO">${successRotation} = 2.0</msg>
<status status="PASS" starttime="20230918 22:14:07.912" endtime="20230918 22:14:07.913"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${successRotation} &gt;= 1</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230918 22:14:07.913" endtime="20230918 22:14:07.914"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230918 22:14:07.191" endtime="20230918 22:14:07.915"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20230918 22:14:07.122" endtime="20230918 22:14:07.916"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="86062"/>
</suite>
<statistics>
<total>
<stat pass="8" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="2" fail="0" skip="0">create-volume-and-bucket</stat>
</tag>
<suite>
<stat pass="8" fail="0" skip="0" id="s1" name="ozonesecure-root-ca-rotation">ozonesecure-root-ca-rotation</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1" name="Kinit">ozonesecure-root-ca-rotation.Kinit</stat>
<stat pass="3" fail="0" skip="0" id="s1-s2" name="Root-Ca-Rotation-Client-Checks">ozonesecure-root-ca-rotation.Root-Ca-Rotation-Client-Checks</stat>
<stat pass="3" fail="0" skip="0" id="s1-s3" name="Root-Ca-Rotation-Client-Checks">ozonesecure-root-ca-rotation.Root-Ca-Rotation-Client-Checks</stat>
<stat pass="1" fail="0" skip="0" id="s1-s4" name="Root-Ca-Rotation">ozonesecure-root-ca-rotation.Root-Ca-Rotation</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
