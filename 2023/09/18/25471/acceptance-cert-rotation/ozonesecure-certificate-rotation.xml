<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 6.1.1 (Python 3.8.10 on linux)" generated="20230918 22:08:42.313" rpa="false" schemaversion="4">
<suite id="s1" name="ozonesecure-certificate-rotation" source="/opt/hadoop/smoketest/certrotation">
<suite id="s1-s1" name="Cert-Rotation" source="/opt/hadoop/smoketest/certrotation/cert-rotation.robot">
<kw name="Setup Test" type="SETUP">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230918 22:06:32.716" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230918 22:06:32.727" level="INFO">${rc} = 0</msg>
<msg timestamp="20230918 22:06:32.727" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230918 22:06:32.708" endtime="20230918 22:06:32.727"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230918 22:06:32.728" level="INFO">scm</msg>
<status status="PASS" starttime="20230918 22:06:32.728" endtime="20230918 22:06:32.728"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230918 22:06:32.732" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230918 22:06:32.732" endtime="20230918 22:06:32.732"/>
</kw>
<status status="PASS" starttime="20230918 22:06:32.707" endtime="20230918 22:06:32.733"/>
</kw>
<msg timestamp="20230918 22:06:32.733" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230918 22:06:32.707" endtime="20230918 22:06:32.733"/>
</kw>
<msg timestamp="20230918 22:06:32.733" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230918 22:06:32.706" endtime="20230918 22:06:32.733"/>
</kw>
<msg timestamp="20230918 22:06:32.734" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230918 22:06:32.706" endtime="20230918 22:06:32.734"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230918 22:06:32.735" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230918 22:06:32.734" endtime="20230918 22:06:32.735"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230918 22:06:32.744" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20230918 22:06:33.074" level="INFO">${rc} = 0</msg>
<msg timestamp="20230918 22:06:33.074" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230918 22:06:32.740" endtime="20230918 22:06:33.074"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230918 22:06:33.075" level="INFO"/>
<status status="PASS" starttime="20230918 22:06:33.075" endtime="20230918 22:06:33.075"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230918 22:06:33.076" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230918 22:06:33.076" endtime="20230918 22:06:33.076"/>
</kw>
<status status="PASS" starttime="20230918 22:06:32.737" endtime="20230918 22:06:33.076"/>
</kw>
<msg timestamp="20230918 22:06:33.077" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230918 22:06:32.737" endtime="20230918 22:06:33.077"/>
</kw>
<status status="PASS" starttime="20230918 22:06:32.736" endtime="20230918 22:06:33.077"/>
</kw>
<status status="PASS" starttime="20230918 22:06:32.735" endtime="20230918 22:06:33.077"/>
</kw>
<status status="PASS" starttime="20230918 22:06:32.705" endtime="20230918 22:06:33.077"/>
</kw>
<status status="PASS" starttime="20230918 22:06:32.704" endtime="20230918 22:06:33.077"/>
</kw>
<status status="PASS" starttime="20230918 22:06:32.704" endtime="20230918 22:06:33.077"/>
</kw>
<test id="s1-s1-t1" name="Test datanode functions before and after certificate rotation" line="55">
<kw name="Basic key generation and validation">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>10</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230918 22:06:33.088" level="INFO">${random} = pVjm3K3mX3</msg>
<status status="PASS" starttime="20230918 22:06:33.087" endtime="20230918 22:06:33.088"/>
</kw>
<kw name="Freon OCKG" library="freon">
<arg>prefix=${random}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230918 22:06:33.111" level="INFO">Running command 'ozone freon ockg  -t 1 -n1 -p pVjm3K3mX3  2&gt;&amp;1'.</msg>
<msg timestamp="20230918 22:06:55.681" level="INFO">${rc} = 0</msg>
<msg timestamp="20230918 22:06:55.681" level="INFO">${output} = 2023-09-18 22:06:39,647 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-18 22:06:39,819 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230918 22:06:33.103" endtime="20230918 22:06:55.681"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230918 22:06:55.683" level="INFO">2023-09-18 22:06:39,647 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-18 22:06:39,819 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-09-18 22:06:39,819 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-09-18 22:06:39,925 [main] INFO freon.BaseFreonGenerator: Executing test with prefix pVjm3K3mX3 and number-of-tests 1
2023-09-18 22:06:40,031 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-18 22:06:41,037 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-18 22:06:42,037 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-18 22:06:43,038 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-18 22:06:44,041 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-18 22:06:44,992 [main] INFO rpc.RpcClient: Creating Volume: vol1, with testuser as owner and space quota set to -1 bytes, counts quota set to -1
2023-09-18 22:06:45,044 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-18 22:06:45,427 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with server-side default bucket layout, testuser as owner, Versioning false, Storage Type set to DISK and Encryption set to false, Replication Type set to server-side default replication type, Namespace Quota set to -1, Space Quota set to -1 
2023-09-18 22:06:46,046 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-18 22:06:47,047 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-18 22:06:48,051 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-18 22:06:48,441 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2023-09-18 22:06:48,609 [pool-2-thread-1] INFO netty.NettyConfigKeys$DataStream: setTlsConf GrpcTlsConfig0-
2023-09-18 22:06:49,053 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-18 22:06:49,707 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2023-09-18 22:06:50,054 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-18 22:06:51,054 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-18 22:06:52,058 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-18 22:06:53,075 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-18 22:06:54,075 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-18 22:06:55,077 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2023-09-18 22:06:55,273 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=1, min=8543.202888, max=8543.202888, mean=8543.202888, stddev=0.0, median=8543.202888, p75=8543.202888, p95=8543.202888, p98=8543.202888, p99=8543.202888, p999=8543.202888, mean_rate=0.10430922395339712, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-09-18 22:06:55,274 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 15
2023-09-18 22:06:55,274 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-09-18 22:06:55,274 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20230918 22:06:55.682" endtime="20230918 22:06:55.683"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230918 22:06:55.685" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230918 22:06:55.684" endtime="20230918 22:06:55.685"/>
</kw>
<status status="PASS" starttime="20230918 22:06:33.098" endtime="20230918 22:06:55.688"/>
</kw>
<msg timestamp="20230918 22:06:55.688" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230918 22:06:33.098" endtime="20230918 22:06:55.688"/>
</kw>
<msg timestamp="20230918 22:06:55.691" level="INFO">${result} = 2023-09-18 22:06:39,647 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-18 22:06:39,819 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230918 22:06:33.097" endtime="20230918 22:06:55.691"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230918 22:06:55.691" endtime="20230918 22:06:55.696"/>
</kw>
<status status="PASS" starttime="20230918 22:06:33.088" endtime="20230918 22:06:55.696"/>
</kw>
<kw name="Freon OCKV" library="freon">
<arg>prefix=${random}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockv ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230918 22:06:55.736" level="INFO">Running command 'ozone freon ockv  -t 1 -n1 -p pVjm3K3mX3  2&gt;&amp;1'.</msg>
<msg timestamp="20230918 22:07:09.797" level="INFO">${rc} = 0</msg>
<msg timestamp="20230918 22:07:09.797" level="INFO">${output} = 2023-09-18 22:06:59,986 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-18 22:07:00,143 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230918 22:06:55.710" endtime="20230918 22:07:09.797"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230918 22:07:09.799" level="INFO">2023-09-18 22:06:59,986 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-18 22:07:00,143 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-09-18 22:07:00,143 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-09-18 22:07:00,241 [main] INFO freon.BaseFreonGenerator: Executing test with prefix pVjm3K3mX3 and number-of-tests 1
2023-09-18 22:07:00,309 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-18 22:07:01,326 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-18 22:07:02,326 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-18 22:07:03,327 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-18 22:07:04,328 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-18 22:07:04,908 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2023-09-18 22:07:05,330 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-18 22:07:06,332 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-18 22:07:07,333 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-18 22:07:08,333 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-18 22:07:09,334 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2023-09-18 22:07:09,412 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-validate, count=1, min=174.689431, max=174.689431, mean=174.689431, stddev=0.0, median=174.689431, p75=174.689431, p95=174.689431, p98=174.689431, p99=174.689431, p999=174.689431, mean_rate=0.8226727558490882, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-09-18 22:07:09,413 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 9
2023-09-18 22:07:09,414 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-09-18 22:07:09,414 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20230918 22:07:09.798" endtime="20230918 22:07:09.799"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230918 22:07:09.800" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230918 22:07:09.799" endtime="20230918 22:07:09.800"/>
</kw>
<status status="PASS" starttime="20230918 22:06:55.709" endtime="20230918 22:07:09.800"/>
</kw>
<msg timestamp="20230918 22:07:09.800" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230918 22:06:55.709" endtime="20230918 22:07:09.801"/>
</kw>
<msg timestamp="20230918 22:07:09.801" level="INFO">${result} = 2023-09-18 22:06:59,986 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-18 22:07:00,143 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230918 22:06:55.702" endtime="20230918 22:07:09.801"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230918 22:07:09.801" endtime="20230918 22:07:09.802"/>
</kw>
<status status="PASS" starttime="20230918 22:06:55.696" endtime="20230918 22:07:09.802"/>
</kw>
<status status="PASS" starttime="20230918 22:06:33.086" endtime="20230918 22:07:09.802"/>
</kw>
<kw name="Find certificate duration">
<var>${certDuration}</var>
<kw name="Execute" library="os">
<var>${waitTime}</var>
<arg>ozone getconf confKey hdds.x509.default.duration | sed 's/PT//'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230918 22:07:09.809" level="INFO">Running command 'ozone getconf confKey hdds.x509.default.duration | sed 's/PT//' 2&gt;&amp;1'.</msg>
<msg timestamp="20230918 22:07:12.152" level="INFO">${rc} = 0</msg>
<msg timestamp="20230918 22:07:12.152" level="INFO">${output} = 40s</msg>
<status status="PASS" starttime="20230918 22:07:09.805" endtime="20230918 22:07:12.153"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230918 22:07:12.156" level="INFO">40s</msg>
<status status="PASS" starttime="20230918 22:07:12.153" endtime="20230918 22:07:12.156"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230918 22:07:12.159" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230918 22:07:12.157" endtime="20230918 22:07:12.159"/>
</kw>
<status status="PASS" starttime="20230918 22:07:09.804" endtime="20230918 22:07:12.160"/>
</kw>
<msg timestamp="20230918 22:07:12.160" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230918 22:07:09.803" endtime="20230918 22:07:12.161"/>
</kw>
<msg timestamp="20230918 22:07:12.161" level="INFO">${waitTime} = 40s</msg>
<status status="PASS" starttime="20230918 22:07:09.803" endtime="20230918 22:07:12.161"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>"${waitTime}" != "${EMPTY}"</arg>
<arg>${waitTime}</arg>
<arg>0s</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230918 22:07:12.167" level="INFO">${result} = 40s</msg>
<status status="PASS" starttime="20230918 22:07:12.164" endtime="20230918 22:07:12.167"/>
</kw>
<msg timestamp="20230918 22:07:12.169" level="INFO">${certDuration} = 40s</msg>
<status status="PASS" starttime="20230918 22:07:09.802" endtime="20230918 22:07:12.169"/>
</kw>
<kw name="Double duration">
<var>${doubleDuration}</var>
<arg>${certDuration}</arg>
<kw name="Add Time To Time" library="DateTime">
<var>${doubleDuration}</var>
<arg>${duration}</arg>
<arg>${duration}</arg>
<doc>Adds time to another time and returns the resulting time.</doc>
<msg timestamp="20230918 22:07:12.172" level="INFO">${doubleDuration} = 80.0</msg>
<status status="PASS" starttime="20230918 22:07:12.170" endtime="20230918 22:07:12.172"/>
</kw>
<msg timestamp="20230918 22:07:12.173" level="INFO">${doubleDuration} = 80.0</msg>
<status status="PASS" starttime="20230918 22:07:12.170" endtime="20230918 22:07:12.173"/>
</kw>
<kw name="Get datanode cert serial">
<var>${certId1}</var>
<kw name="Execute" library="os">
<var>${certSerial}</var>
<arg>openssl s_client -connect "${datanode}":"${port}" -showcerts | openssl x509 -noout -serial | grep serial | sed 's/serial=//'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230918 22:07:12.179" level="INFO">Running command 'openssl s_client -connect "datanode":"9859" -showcerts | openssl x509 -noout -serial | grep serial | sed 's/serial=//' 2&gt;&amp;1'.</msg>
<msg timestamp="20230918 22:07:12.520" level="INFO">${rc} = 0</msg>
<msg timestamp="20230918 22:07:12.520" level="INFO">${output} = FD525BB884</msg>
<status status="PASS" starttime="20230918 22:07:12.176" endtime="20230918 22:07:12.520"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230918 22:07:12.522" level="INFO">FD525BB884</msg>
<status status="PASS" starttime="20230918 22:07:12.521" endtime="20230918 22:07:12.522"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230918 22:07:12.523" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230918 22:07:12.522" endtime="20230918 22:07:12.523"/>
</kw>
<status status="PASS" starttime="20230918 22:07:12.175" endtime="20230918 22:07:12.523"/>
</kw>
<msg timestamp="20230918 22:07:12.523" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230918 22:07:12.175" endtime="20230918 22:07:12.524"/>
</kw>
<msg timestamp="20230918 22:07:12.525" level="INFO">${certSerial} = FD525BB884</msg>
<status status="PASS" starttime="20230918 22:07:12.173" endtime="20230918 22:07:12.525"/>
</kw>
<msg timestamp="20230918 22:07:12.525" level="INFO">${certId1} = FD525BB884</msg>
<status status="PASS" starttime="20230918 22:07:12.173" endtime="20230918 22:07:12.526"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${doubleDuration}</arg>
<arg>5sec</arg>
<arg>Datanode has new certificate</arg>
<arg>${certId1}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Datanode has new certificate">
<arg>${certId1}</arg>
<kw name="Get datanode cert serial">
<var>${newCertId}</var>
<kw name="Execute" library="os">
<var>${certSerial}</var>
<arg>openssl s_client -connect "${datanode}":"${port}" -showcerts | openssl x509 -noout -serial | grep serial | sed 's/serial=//'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230918 22:07:12.533" level="INFO">Running command 'openssl s_client -connect "datanode":"9859" -showcerts | openssl x509 -noout -serial | grep serial | sed 's/serial=//' 2&gt;&amp;1'.</msg>
<msg timestamp="20230918 22:07:12.881" level="INFO">${rc} = 0</msg>
<msg timestamp="20230918 22:07:12.881" level="INFO">${output} = FBD5C21E01</msg>
<status status="PASS" starttime="20230918 22:07:12.530" endtime="20230918 22:07:12.881"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230918 22:07:12.883" level="INFO">FBD5C21E01</msg>
<status status="PASS" starttime="20230918 22:07:12.882" endtime="20230918 22:07:12.883"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230918 22:07:12.884" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230918 22:07:12.883" endtime="20230918 22:07:12.884"/>
</kw>
<status status="PASS" starttime="20230918 22:07:12.529" endtime="20230918 22:07:12.884"/>
</kw>
<msg timestamp="20230918 22:07:12.885" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230918 22:07:12.529" endtime="20230918 22:07:12.885"/>
</kw>
<msg timestamp="20230918 22:07:12.885" level="INFO">${certSerial} = FBD5C21E01</msg>
<status status="PASS" starttime="20230918 22:07:12.528" endtime="20230918 22:07:12.885"/>
</kw>
<msg timestamp="20230918 22:07:12.885" level="INFO">${newCertId} = FBD5C21E01</msg>
<status status="PASS" starttime="20230918 22:07:12.527" endtime="20230918 22:07:12.885"/>
</kw>
<kw name="Should Not Be Equal" library="BuiltIn">
<arg>${certId}</arg>
<arg>${newCertId}</arg>
<doc>Fails if the given objects are equal.</doc>
<status status="PASS" starttime="20230918 22:07:12.886" endtime="20230918 22:07:12.886"/>
</kw>
<status status="PASS" starttime="20230918 22:07:12.527" endtime="20230918 22:07:12.886"/>
</kw>
<status status="PASS" starttime="20230918 22:07:12.526" endtime="20230918 22:07:12.887"/>
</kw>
<kw name="Basic key generation and validation">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>10</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230918 22:07:12.889" level="INFO">${random} = Gq7wZGlLV1</msg>
<status status="PASS" starttime="20230918 22:07:12.888" endtime="20230918 22:07:12.889"/>
</kw>
<kw name="Freon OCKG" library="freon">
<arg>prefix=${random}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230918 22:07:12.897" level="INFO">Running command 'ozone freon ockg  -t 1 -n1 -p Gq7wZGlLV1  2&gt;&amp;1'.</msg>
<msg timestamp="20230918 22:07:25.299" level="INFO">${rc} = 0</msg>
<msg timestamp="20230918 22:07:25.299" level="INFO">${output} = 2023-09-18 22:07:17,147 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-18 22:07:17,377 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230918 22:07:12.894" endtime="20230918 22:07:25.299"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230918 22:07:25.301" level="INFO">2023-09-18 22:07:17,147 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-18 22:07:17,377 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-09-18 22:07:17,377 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-09-18 22:07:17,515 [main] INFO freon.BaseFreonGenerator: Executing test with prefix Gq7wZGlLV1 and number-of-tests 1
2023-09-18 22:07:17,609 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-18 22:07:18,614 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-18 22:07:19,616 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-18 22:07:20,617 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-18 22:07:21,032 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2023-09-18 22:07:21,116 [pool-2-thread-1] INFO netty.NettyConfigKeys$DataStream: setTlsConf GrpcTlsConfig0-
2023-09-18 22:07:21,617 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-18 22:07:21,681 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2023-09-18 22:07:22,627 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-18 22:07:23,628 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-18 22:07:24,628 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2023-09-18 22:07:24,881 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=1, min=3479.207823, max=3479.207823, mean=3479.207823, stddev=0.0, median=3479.207823, p75=3479.207823, p95=3479.207823, p98=3479.207823, p99=3479.207823, p999=3479.207823, mean_rate=0.2276153948521769, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-09-18 22:07:24,883 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 7
2023-09-18 22:07:24,883 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-09-18 22:07:24,883 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20230918 22:07:25.300" endtime="20230918 22:07:25.301"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230918 22:07:25.302" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230918 22:07:25.301" endtime="20230918 22:07:25.302"/>
</kw>
<status status="PASS" starttime="20230918 22:07:12.893" endtime="20230918 22:07:25.302"/>
</kw>
<msg timestamp="20230918 22:07:25.302" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230918 22:07:12.892" endtime="20230918 22:07:25.303"/>
</kw>
<msg timestamp="20230918 22:07:25.303" level="INFO">${result} = 2023-09-18 22:07:17,147 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-18 22:07:17,377 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230918 22:07:12.891" endtime="20230918 22:07:25.303"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230918 22:07:25.303" endtime="20230918 22:07:25.318"/>
</kw>
<status status="PASS" starttime="20230918 22:07:12.889" endtime="20230918 22:07:25.318"/>
</kw>
<kw name="Freon OCKV" library="freon">
<arg>prefix=${random}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockv ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230918 22:07:25.359" level="INFO">Running command 'ozone freon ockv  -t 1 -n1 -p Gq7wZGlLV1  2&gt;&amp;1'.</msg>
<msg timestamp="20230918 22:07:39.859" level="INFO">${rc} = 0</msg>
<msg timestamp="20230918 22:07:39.860" level="INFO">${output} = 2023-09-18 22:07:30,740 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-18 22:07:31,008 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230918 22:07:25.329" endtime="20230918 22:07:39.860"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230918 22:07:39.861" level="INFO">2023-09-18 22:07:30,740 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-18 22:07:31,008 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-09-18 22:07:31,008 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-09-18 22:07:31,175 [main] INFO freon.BaseFreonGenerator: Executing test with prefix Gq7wZGlLV1 and number-of-tests 1
2023-09-18 22:07:31,262 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-18 22:07:32,265 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-18 22:07:33,266 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-18 22:07:34,267 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-18 22:07:35,269 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-18 22:07:35,807 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2023-09-18 22:07:36,270 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-18 22:07:37,270 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-18 22:07:38,271 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2023-09-18 22:07:39,477 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-validate, count=1, min=66.052963, max=66.052963, mean=66.052963, stddev=0.0, median=66.052963, p75=66.052963, p95=66.052963, p98=66.052963, p99=66.052963, p999=66.052963, mean_rate=0.7478024464111754, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-09-18 22:07:39,478 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 8
2023-09-18 22:07:39,478 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-09-18 22:07:39,478 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20230918 22:07:39.860" endtime="20230918 22:07:39.862"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230918 22:07:39.862" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230918 22:07:39.862" endtime="20230918 22:07:39.862"/>
</kw>
<status status="PASS" starttime="20230918 22:07:25.328" endtime="20230918 22:07:39.863"/>
</kw>
<msg timestamp="20230918 22:07:39.863" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230918 22:07:25.328" endtime="20230918 22:07:39.863"/>
</kw>
<msg timestamp="20230918 22:07:39.863" level="INFO">${result} = 2023-09-18 22:07:30,740 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-18 22:07:31,008 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230918 22:07:25.327" endtime="20230918 22:07:39.863"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230918 22:07:39.864" endtime="20230918 22:07:39.864"/>
</kw>
<status status="PASS" starttime="20230918 22:07:25.318" endtime="20230918 22:07:39.864"/>
</kw>
<status status="PASS" starttime="20230918 22:07:12.887" endtime="20230918 22:07:39.864"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230918 22:06:33.078" endtime="20230918 22:07:39.865"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20230918 22:06:32.591" endtime="20230918 22:07:39.867"/>
</suite>
<suite id="s1-s2" name="Root-Ca-Rotation-Client-Checks" source="/opt/hadoop/smoketest/certrotation/root-ca-rotation-client-checks.robot">
<test id="s1-s2-t1" name="Create a volume and bucket" line="27">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230918 22:07:39.885" level="INFO">Running command 'ozone sh volume create rootca-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20230918 22:07:48.516" level="INFO">${rc} = 0</msg>
<msg timestamp="20230918 22:07:48.517" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230918 22:07:39.882" endtime="20230918 22:07:48.517"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230918 22:07:48.518" level="INFO"/>
<status status="PASS" starttime="20230918 22:07:48.517" endtime="20230918 22:07:48.519"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230918 22:07:48.519" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230918 22:07:48.519" endtime="20230918 22:07:48.520"/>
</kw>
<status status="PASS" starttime="20230918 22:07:39.881" endtime="20230918 22:07:48.520"/>
</kw>
<msg timestamp="20230918 22:07:48.520" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230918 22:07:39.880" endtime="20230918 22:07:48.520"/>
</kw>
<msg timestamp="20230918 22:07:48.520" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230918 22:07:39.880" endtime="20230918 22:07:48.520"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230918 22:07:48.521" endtime="20230918 22:07:48.521"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230918 22:07:48.527" level="INFO">Running command 'ozone sh bucket create /rootca-volume/rootca-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230918 22:07:58.001" level="INFO">${rc} = 0</msg>
<msg timestamp="20230918 22:07:58.001" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230918 22:07:48.523" endtime="20230918 22:07:58.001"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230918 22:07:58.003" level="INFO"/>
<status status="PASS" starttime="20230918 22:07:58.002" endtime="20230918 22:07:58.003"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230918 22:07:58.004" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230918 22:07:58.003" endtime="20230918 22:07:58.004"/>
</kw>
<status status="PASS" starttime="20230918 22:07:48.522" endtime="20230918 22:07:58.004"/>
</kw>
<msg timestamp="20230918 22:07:58.004" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230918 22:07:48.522" endtime="20230918 22:07:58.005"/>
</kw>
<msg timestamp="20230918 22:07:58.005" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230918 22:07:48.521" endtime="20230918 22:07:58.005"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230918 22:07:58.005" endtime="20230918 22:07:58.006"/>
</kw>
<tag>create-volume-and-bucket</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230918 22:07:39.879" endtime="20230918 22:07:58.006"/>
</test>
<test id="s1-s2-t2" name="Create key" line="34">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230918 22:07:58.012" level="INFO">Running command 'echo "rootca: key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20230918 22:07:58.015" level="INFO">${rc} = 0</msg>
<msg timestamp="20230918 22:07:58.015" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230918 22:07:58.009" endtime="20230918 22:07:58.015"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230918 22:07:58.017" level="INFO"/>
<status status="PASS" starttime="20230918 22:07:58.016" endtime="20230918 22:07:58.017"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230918 22:07:58.018" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230918 22:07:58.017" endtime="20230918 22:07:58.018"/>
</kw>
<status status="PASS" starttime="20230918 22:07:58.008" endtime="20230918 22:07:58.019"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230918 22:07:58.024" level="INFO">Running command 'ozone sh key put /rootca-volume/rootca-bucket/rootca-key /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230918 22:08:11.105" level="INFO">${rc} = 0</msg>
<msg timestamp="20230918 22:08:11.105" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230918 22:07:58.021" endtime="20230918 22:08:11.105"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230918 22:08:11.107" level="INFO"/>
<status status="PASS" starttime="20230918 22:08:11.106" endtime="20230918 22:08:11.107"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230918 22:08:11.108" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230918 22:08:11.107" endtime="20230918 22:08:11.108"/>
</kw>
<status status="PASS" starttime="20230918 22:07:58.020" endtime="20230918 22:08:11.108"/>
</kw>
<msg timestamp="20230918 22:08:11.108" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230918 22:07:58.020" endtime="20230918 22:08:11.109"/>
</kw>
<msg timestamp="20230918 22:08:11.109" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230918 22:07:58.019" endtime="20230918 22:08:11.109"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230918 22:08:11.109" endtime="20230918 22:08:11.109"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230918 22:08:11.114" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230918 22:08:11.118" level="INFO">${rc} = 0</msg>
<msg timestamp="20230918 22:08:11.118" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230918 22:08:11.111" endtime="20230918 22:08:11.118"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230918 22:08:11.120" level="INFO"/>
<status status="PASS" starttime="20230918 22:08:11.119" endtime="20230918 22:08:11.120"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230918 22:08:11.120" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230918 22:08:11.120" endtime="20230918 22:08:11.121"/>
</kw>
<status status="PASS" starttime="20230918 22:08:11.110" endtime="20230918 22:08:11.121"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230918 22:07:58.007" endtime="20230918 22:08:11.121"/>
</test>
<test id="s1-s2-t3" name="Read data from previously created key" line="40">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230918 22:08:11.124" level="INFO">${random} = 15741</msg>
<status status="PASS" starttime="20230918 22:08:11.123" endtime="20230918 22:08:11.124"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230918 22:08:11.132" level="INFO">Running command 'ozone sh key get /rootca-volume/rootca-bucket/rootca-key /tmp/key-15741 2&gt;&amp;1'.</msg>
<msg timestamp="20230918 22:08:23.654" level="INFO">${rc} = 0</msg>
<msg timestamp="20230918 22:08:23.654" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230918 22:08:11.128" endtime="20230918 22:08:23.654"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230918 22:08:23.656" level="INFO"/>
<status status="PASS" starttime="20230918 22:08:23.655" endtime="20230918 22:08:23.656"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230918 22:08:23.657" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230918 22:08:23.656" endtime="20230918 22:08:23.657"/>
</kw>
<status status="PASS" starttime="20230918 22:08:11.126" endtime="20230918 22:08:23.657"/>
</kw>
<msg timestamp="20230918 22:08:23.657" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230918 22:08:11.125" endtime="20230918 22:08:23.657"/>
</kw>
<msg timestamp="20230918 22:08:23.658" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230918 22:08:11.124" endtime="20230918 22:08:23.658"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230918 22:08:23.658" endtime="20230918 22:08:23.659"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230918 22:08:23.663" level="INFO">Running command 'cat /tmp/key-15741 2&gt;&amp;1'.</msg>
<msg timestamp="20230918 22:08:23.667" level="INFO">${rc} = 0</msg>
<msg timestamp="20230918 22:08:23.667" level="INFO">${output} = rootca: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230918 22:08:23.660" endtime="20230918 22:08:23.667"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230918 22:08:23.669" level="INFO">rootca: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230918 22:08:23.668" endtime="20230918 22:08:23.669"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230918 22:08:23.670" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230918 22:08:23.669" endtime="20230918 22:08:23.670"/>
</kw>
<msg timestamp="20230918 22:08:23.670" level="INFO">${output} = rootca: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230918 22:08:23.659" endtime="20230918 22:08:23.670"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230918 22:08:23.671" endtime="20230918 22:08:23.671"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230918 22:08:23.675" level="INFO">Running command 'rm /tmp/key-15741 2&gt;&amp;1'.</msg>
<msg timestamp="20230918 22:08:23.679" level="INFO">${rc} = 0</msg>
<msg timestamp="20230918 22:08:23.680" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230918 22:08:23.672" endtime="20230918 22:08:23.680"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230918 22:08:23.681" level="INFO"/>
<status status="PASS" starttime="20230918 22:08:23.680" endtime="20230918 22:08:23.682"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230918 22:08:23.683" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230918 22:08:23.682" endtime="20230918 22:08:23.683"/>
</kw>
<status status="PASS" starttime="20230918 22:08:23.672" endtime="20230918 22:08:23.683"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230918 22:08:11.122" endtime="20230918 22:08:23.684"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20230918 22:07:39.869" endtime="20230918 22:08:23.686"/>
</suite>
<status status="PASS" starttime="20230918 22:06:32.502" endtime="20230918 22:08:23.690"/>
</suite>
<statistics>
<total>
<stat pass="4" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="1" fail="0" skip="0">create-volume-and-bucket</stat>
</tag>
<suite>
<stat pass="4" fail="0" skip="0" id="s1" name="ozonesecure-certificate-rotation">ozonesecure-certificate-rotation</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1" name="Cert-Rotation">ozonesecure-certificate-rotation.Cert-Rotation</stat>
<stat pass="3" fail="0" skip="0" id="s1-s2" name="Root-Ca-Rotation-Client-Checks">ozonesecure-certificate-rotation.Root-Ca-Rotation-Client-Checks</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
