<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 6.1.1 (Python 3.8.10 on linux)" generated="20230906 06:41:16.748" rpa="false" schemaversion="4">
<suite id="s1" name="ozonesecure-root-ca-rotation">
<suite id="s1-s1" name="Kinit" source="/opt/hadoop/smoketest/kinit.robot">
<test id="s1-s1-t1" name="Kinit" line="27">
<kw name="Kinit test user" library="commonlib">
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230906 06:38:14.729" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230906 06:38:14.737" level="INFO">${rc} = 0</msg>
<msg timestamp="20230906 06:38:14.737" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230906 06:38:14.726" endtime="20230906 06:38:14.737"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230906 06:38:14.739" level="INFO">scm</msg>
<status status="PASS" starttime="20230906 06:38:14.738" endtime="20230906 06:38:14.739"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230906 06:38:14.740" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230906 06:38:14.739" endtime="20230906 06:38:14.740"/>
</kw>
<status status="PASS" starttime="20230906 06:38:14.725" endtime="20230906 06:38:14.740"/>
</kw>
<msg timestamp="20230906 06:38:14.740" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230906 06:38:14.725" endtime="20230906 06:38:14.740"/>
</kw>
<msg timestamp="20230906 06:38:14.741" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230906 06:38:14.724" endtime="20230906 06:38:14.741"/>
</kw>
<msg timestamp="20230906 06:38:14.741" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230906 06:38:14.724" endtime="20230906 06:38:14.741"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230906 06:38:14.742" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230906 06:38:14.741" endtime="20230906 06:38:14.742"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230906 06:38:14.747" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20230906 06:38:14.896" level="INFO">${rc} = 0</msg>
<msg timestamp="20230906 06:38:14.896" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230906 06:38:14.744" endtime="20230906 06:38:14.896"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230906 06:38:14.898" level="INFO"/>
<status status="PASS" starttime="20230906 06:38:14.897" endtime="20230906 06:38:14.898"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230906 06:38:14.899" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230906 06:38:14.898" endtime="20230906 06:38:14.899"/>
</kw>
<status status="PASS" starttime="20230906 06:38:14.744" endtime="20230906 06:38:14.899"/>
</kw>
<msg timestamp="20230906 06:38:14.899" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230906 06:38:14.744" endtime="20230906 06:38:14.899"/>
</kw>
<status status="PASS" starttime="20230906 06:38:14.743" endtime="20230906 06:38:14.900"/>
</kw>
<status status="PASS" starttime="20230906 06:38:14.742" endtime="20230906 06:38:14.900"/>
</kw>
<status status="PASS" starttime="20230906 06:38:14.723" endtime="20230906 06:38:14.900"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20230906 06:38:14.722" endtime="20230906 06:38:14.900"/>
</test>
<doc>Kinit test user</doc>
<status status="PASS" starttime="20230906 06:38:14.649" endtime="20230906 06:38:14.903"/>
</suite>
<suite id="s1-s2" name="Root-Ca-Rotation-Client-Checks" source="/opt/hadoop/smoketest/certrotation/root-ca-rotation-client-checks.robot">
<test id="s1-s2-t1" name="Create a volume and bucket" line="27">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230906 06:38:37.624" level="INFO">Running command 'ozone sh volume create rootca-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20230906 06:38:47.775" level="INFO">${rc} = 0</msg>
<msg timestamp="20230906 06:38:47.776" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230906 06:38:37.620" endtime="20230906 06:38:47.776"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230906 06:38:47.777" level="INFO"/>
<status status="PASS" starttime="20230906 06:38:47.776" endtime="20230906 06:38:47.778"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230906 06:38:47.778" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230906 06:38:47.778" endtime="20230906 06:38:47.779"/>
</kw>
<status status="PASS" starttime="20230906 06:38:37.619" endtime="20230906 06:38:47.779"/>
</kw>
<msg timestamp="20230906 06:38:47.779" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230906 06:38:37.618" endtime="20230906 06:38:47.779"/>
</kw>
<msg timestamp="20230906 06:38:47.780" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230906 06:38:37.618" endtime="20230906 06:38:47.780"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230906 06:38:47.780" endtime="20230906 06:38:47.780"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230906 06:38:47.787" level="INFO">Running command 'ozone sh bucket create /rootca-volume/rootca-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230906 06:38:57.686" level="INFO">${rc} = 0</msg>
<msg timestamp="20230906 06:38:57.686" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230906 06:38:47.783" endtime="20230906 06:38:57.686"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230906 06:38:57.688" level="INFO"/>
<status status="PASS" starttime="20230906 06:38:57.687" endtime="20230906 06:38:57.688"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230906 06:38:57.689" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230906 06:38:57.689" endtime="20230906 06:38:57.689"/>
</kw>
<status status="PASS" starttime="20230906 06:38:47.782" endtime="20230906 06:38:57.689"/>
</kw>
<msg timestamp="20230906 06:38:57.690" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230906 06:38:47.782" endtime="20230906 06:38:57.690"/>
</kw>
<msg timestamp="20230906 06:38:57.690" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230906 06:38:47.781" endtime="20230906 06:38:57.690"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230906 06:38:57.690" endtime="20230906 06:38:57.691"/>
</kw>
<tag>create-volume-and-bucket</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230906 06:38:37.617" endtime="20230906 06:38:57.691"/>
</test>
<test id="s1-s2-t2" name="Create key" line="34">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230906 06:38:57.698" level="INFO">Running command 'echo "rootca: key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20230906 06:38:57.701" level="INFO">${rc} = 0</msg>
<msg timestamp="20230906 06:38:57.701" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230906 06:38:57.694" endtime="20230906 06:38:57.701"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230906 06:38:57.703" level="INFO"/>
<status status="PASS" starttime="20230906 06:38:57.702" endtime="20230906 06:38:57.703"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230906 06:38:57.704" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230906 06:38:57.703" endtime="20230906 06:38:57.704"/>
</kw>
<status status="PASS" starttime="20230906 06:38:57.694" endtime="20230906 06:38:57.704"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230906 06:38:57.710" level="INFO">Running command 'ozone sh key put /rootca-volume/rootca-bucket/rootca-key /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230906 06:39:14.146" level="INFO">${rc} = 0</msg>
<msg timestamp="20230906 06:39:14.146" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230906 06:38:57.707" endtime="20230906 06:39:14.146"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230906 06:39:14.148" level="INFO"/>
<status status="PASS" starttime="20230906 06:39:14.147" endtime="20230906 06:39:14.148"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230906 06:39:14.149" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230906 06:39:14.148" endtime="20230906 06:39:14.149"/>
</kw>
<status status="PASS" starttime="20230906 06:38:57.706" endtime="20230906 06:39:14.149"/>
</kw>
<msg timestamp="20230906 06:39:14.149" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230906 06:38:57.705" endtime="20230906 06:39:14.150"/>
</kw>
<msg timestamp="20230906 06:39:14.150" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230906 06:38:57.705" endtime="20230906 06:39:14.150"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230906 06:39:14.150" endtime="20230906 06:39:14.151"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230906 06:39:14.167" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230906 06:39:14.169" level="INFO">${rc} = 0</msg>
<msg timestamp="20230906 06:39:14.169" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230906 06:39:14.152" endtime="20230906 06:39:14.169"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230906 06:39:14.172" level="INFO"/>
<status status="PASS" starttime="20230906 06:39:14.170" endtime="20230906 06:39:14.172"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230906 06:39:14.174" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230906 06:39:14.173" endtime="20230906 06:39:14.174"/>
</kw>
<status status="PASS" starttime="20230906 06:39:14.151" endtime="20230906 06:39:14.174"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230906 06:38:57.693" endtime="20230906 06:39:14.175"/>
</test>
<test id="s1-s2-t3" name="Read data from previously created key" line="40">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230906 06:39:14.180" level="INFO">${random} = 77856</msg>
<status status="PASS" starttime="20230906 06:39:14.178" endtime="20230906 06:39:14.180"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230906 06:39:14.190" level="INFO">Running command 'ozone sh key get /rootca-volume/rootca-bucket/rootca-key /tmp/key-77856 2&gt;&amp;1'.</msg>
<msg timestamp="20230906 06:39:27.162" level="INFO">${rc} = 0</msg>
<msg timestamp="20230906 06:39:27.162" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230906 06:39:14.185" endtime="20230906 06:39:27.162"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230906 06:39:27.164" level="INFO"/>
<status status="PASS" starttime="20230906 06:39:27.163" endtime="20230906 06:39:27.164"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230906 06:39:27.165" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230906 06:39:27.164" endtime="20230906 06:39:27.165"/>
</kw>
<status status="PASS" starttime="20230906 06:39:14.183" endtime="20230906 06:39:27.165"/>
</kw>
<msg timestamp="20230906 06:39:27.165" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230906 06:39:14.182" endtime="20230906 06:39:27.165"/>
</kw>
<msg timestamp="20230906 06:39:27.166" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230906 06:39:14.180" endtime="20230906 06:39:27.166"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230906 06:39:27.166" endtime="20230906 06:39:27.166"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230906 06:39:27.170" level="INFO">Running command 'cat /tmp/key-77856 2&gt;&amp;1'.</msg>
<msg timestamp="20230906 06:39:27.175" level="INFO">${rc} = 0</msg>
<msg timestamp="20230906 06:39:27.175" level="INFO">${output} = rootca: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230906 06:39:27.167" endtime="20230906 06:39:27.175"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230906 06:39:27.177" level="INFO">rootca: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230906 06:39:27.176" endtime="20230906 06:39:27.177"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230906 06:39:27.178" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230906 06:39:27.177" endtime="20230906 06:39:27.178"/>
</kw>
<msg timestamp="20230906 06:39:27.178" level="INFO">${output} = rootca: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230906 06:39:27.167" endtime="20230906 06:39:27.178"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230906 06:39:27.179" endtime="20230906 06:39:27.179"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230906 06:39:27.185" level="INFO">Running command 'rm /tmp/key-77856 2&gt;&amp;1'.</msg>
<msg timestamp="20230906 06:39:27.188" level="INFO">${rc} = 0</msg>
<msg timestamp="20230906 06:39:27.189" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230906 06:39:27.181" endtime="20230906 06:39:27.189"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230906 06:39:27.190" level="INFO"/>
<status status="PASS" starttime="20230906 06:39:27.189" endtime="20230906 06:39:27.191"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230906 06:39:27.192" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230906 06:39:27.191" endtime="20230906 06:39:27.192"/>
</kw>
<status status="PASS" starttime="20230906 06:39:27.180" endtime="20230906 06:39:27.192"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230906 06:39:14.177" endtime="20230906 06:39:27.193"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20230906 06:38:37.542" endtime="20230906 06:39:27.195"/>
</suite>
<suite id="s1-s3" name="Root-Ca-Rotation-Client-Checks" source="/opt/hadoop/smoketest/certrotation/root-ca-rotation-client-checks.robot">
<test id="s1-s3-t1" name="Create a volume and bucket" line="27">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230906 06:40:10.721" level="INFO">Running command 'ozone sh volume create rootca2-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20230906 06:40:18.834" level="INFO">${rc} = 0</msg>
<msg timestamp="20230906 06:40:18.834" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230906 06:40:10.718" endtime="20230906 06:40:18.834"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230906 06:40:18.836" level="INFO"/>
<status status="PASS" starttime="20230906 06:40:18.835" endtime="20230906 06:40:18.836"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230906 06:40:18.837" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230906 06:40:18.836" endtime="20230906 06:40:18.837"/>
</kw>
<status status="PASS" starttime="20230906 06:40:10.717" endtime="20230906 06:40:18.837"/>
</kw>
<msg timestamp="20230906 06:40:18.837" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230906 06:40:10.717" endtime="20230906 06:40:18.838"/>
</kw>
<msg timestamp="20230906 06:40:18.838" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230906 06:40:10.716" endtime="20230906 06:40:18.838"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230906 06:40:18.838" endtime="20230906 06:40:18.838"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230906 06:40:18.844" level="INFO">Running command 'ozone sh bucket create /rootca2-volume/rootca2-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230906 06:40:27.566" level="INFO">${rc} = 0</msg>
<msg timestamp="20230906 06:40:27.566" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230906 06:40:18.841" endtime="20230906 06:40:27.566"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230906 06:40:27.568" level="INFO"/>
<status status="PASS" starttime="20230906 06:40:27.567" endtime="20230906 06:40:27.568"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230906 06:40:27.569" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230906 06:40:27.568" endtime="20230906 06:40:27.569"/>
</kw>
<status status="PASS" starttime="20230906 06:40:18.840" endtime="20230906 06:40:27.569"/>
</kw>
<msg timestamp="20230906 06:40:27.570" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230906 06:40:18.840" endtime="20230906 06:40:27.570"/>
</kw>
<msg timestamp="20230906 06:40:27.570" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230906 06:40:18.839" endtime="20230906 06:40:27.570"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230906 06:40:27.570" endtime="20230906 06:40:27.571"/>
</kw>
<tag>create-volume-and-bucket</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230906 06:40:10.715" endtime="20230906 06:40:27.571"/>
</test>
<test id="s1-s3-t2" name="Create key" line="34">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230906 06:40:27.578" level="INFO">Running command 'echo "rootca2: key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20230906 06:40:27.580" level="INFO">${rc} = 0</msg>
<msg timestamp="20230906 06:40:27.580" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230906 06:40:27.574" endtime="20230906 06:40:27.580"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230906 06:40:27.582" level="INFO"/>
<status status="PASS" starttime="20230906 06:40:27.581" endtime="20230906 06:40:27.582"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230906 06:40:27.583" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230906 06:40:27.582" endtime="20230906 06:40:27.584"/>
</kw>
<status status="PASS" starttime="20230906 06:40:27.574" endtime="20230906 06:40:27.584"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230906 06:40:27.590" level="INFO">Running command 'ozone sh key put /rootca2-volume/rootca2-bucket/rootca2-key /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230906 06:40:37.738" level="INFO">${rc} = 0</msg>
<msg timestamp="20230906 06:40:37.738" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230906 06:40:27.587" endtime="20230906 06:40:37.738"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230906 06:40:37.741" level="INFO"/>
<status status="PASS" starttime="20230906 06:40:37.739" endtime="20230906 06:40:37.741"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230906 06:40:37.742" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230906 06:40:37.741" endtime="20230906 06:40:37.742"/>
</kw>
<status status="PASS" starttime="20230906 06:40:27.586" endtime="20230906 06:40:37.742"/>
</kw>
<msg timestamp="20230906 06:40:37.742" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230906 06:40:27.585" endtime="20230906 06:40:37.742"/>
</kw>
<msg timestamp="20230906 06:40:37.742" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230906 06:40:27.584" endtime="20230906 06:40:37.742"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230906 06:40:37.743" endtime="20230906 06:40:37.743"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230906 06:40:37.747" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230906 06:40:37.752" level="INFO">${rc} = 0</msg>
<msg timestamp="20230906 06:40:37.752" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230906 06:40:37.744" endtime="20230906 06:40:37.752"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230906 06:40:37.753" level="INFO"/>
<status status="PASS" starttime="20230906 06:40:37.753" endtime="20230906 06:40:37.754"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230906 06:40:37.754" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230906 06:40:37.754" endtime="20230906 06:40:37.754"/>
</kw>
<status status="PASS" starttime="20230906 06:40:37.743" endtime="20230906 06:40:37.755"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230906 06:40:27.572" endtime="20230906 06:40:37.755"/>
</test>
<test id="s1-s3-t3" name="Read data from previously created key" line="40">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230906 06:40:37.758" level="INFO">${random} = 15566</msg>
<status status="PASS" starttime="20230906 06:40:37.757" endtime="20230906 06:40:37.758"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230906 06:40:37.766" level="INFO">Running command 'ozone sh key get /rootca2-volume/rootca2-bucket/rootca2-key /tmp/key-15566 2&gt;&amp;1'.</msg>
<msg timestamp="20230906 06:40:48.686" level="INFO">${rc} = 0</msg>
<msg timestamp="20230906 06:40:48.686" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230906 06:40:37.762" endtime="20230906 06:40:48.686"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230906 06:40:48.687" level="INFO"/>
<status status="PASS" starttime="20230906 06:40:48.687" endtime="20230906 06:40:48.688"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230906 06:40:48.688" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230906 06:40:48.688" endtime="20230906 06:40:48.689"/>
</kw>
<status status="PASS" starttime="20230906 06:40:37.760" endtime="20230906 06:40:48.689"/>
</kw>
<msg timestamp="20230906 06:40:48.689" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230906 06:40:37.759" endtime="20230906 06:40:48.689"/>
</kw>
<msg timestamp="20230906 06:40:48.689" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230906 06:40:37.758" endtime="20230906 06:40:48.689"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230906 06:40:48.690" endtime="20230906 06:40:48.690"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230906 06:40:48.694" level="INFO">Running command 'cat /tmp/key-15566 2&gt;&amp;1'.</msg>
<msg timestamp="20230906 06:40:48.698" level="INFO">${rc} = 0</msg>
<msg timestamp="20230906 06:40:48.698" level="INFO">${output} = rootca2: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230906 06:40:48.691" endtime="20230906 06:40:48.698"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230906 06:40:48.699" level="INFO">rootca2: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230906 06:40:48.698" endtime="20230906 06:40:48.700"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230906 06:40:48.700" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230906 06:40:48.700" endtime="20230906 06:40:48.700"/>
</kw>
<msg timestamp="20230906 06:40:48.701" level="INFO">${output} = rootca2: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230906 06:40:48.690" endtime="20230906 06:40:48.701"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230906 06:40:48.701" endtime="20230906 06:40:48.702"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230906 06:40:48.705" level="INFO">Running command 'rm /tmp/key-15566 2&gt;&amp;1'.</msg>
<msg timestamp="20230906 06:40:48.709" level="INFO">${rc} = 0</msg>
<msg timestamp="20230906 06:40:48.709" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230906 06:40:48.702" endtime="20230906 06:40:48.709"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230906 06:40:48.710" level="INFO"/>
<status status="PASS" starttime="20230906 06:40:48.709" endtime="20230906 06:40:48.710"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230906 06:40:48.711" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230906 06:40:48.710" endtime="20230906 06:40:48.711"/>
</kw>
<status status="PASS" starttime="20230906 06:40:48.702" endtime="20230906 06:40:48.712"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230906 06:40:37.756" endtime="20230906 06:40:48.712"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20230906 06:40:10.636" endtime="20230906 06:40:48.714"/>
</suite>
<suite id="s1-s4" name="Root-Ca-Rotation" source="/opt/hadoop/smoketest/scmha/root-ca-rotation.robot">
<test id="s1-s4-t1" name="Verify root CA rotation metrics" line="26">
<kw name="Execute" library="os">
<var>${successRotationLine}</var>
<arg>curl -sS 'http://localhost:9876/jmx' | grep NumSuccessRotation</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230906 06:40:52.831" level="INFO">Running command 'curl -sS 'http://localhost:9876/jmx' | grep NumSuccessRotation 2&gt;&amp;1'.</msg>
<msg timestamp="20230906 06:40:55.052" level="INFO">${rc} = 0</msg>
<msg timestamp="20230906 06:40:55.052" level="INFO">${output} =     "NumSuccessRotation" : 2,</msg>
<status status="PASS" starttime="20230906 06:40:52.827" endtime="20230906 06:40:55.052"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230906 06:40:55.053" level="INFO">    "NumSuccessRotation" : 2,</msg>
<status status="PASS" starttime="20230906 06:40:55.052" endtime="20230906 06:40:55.053"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230906 06:40:55.060" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230906 06:40:55.053" endtime="20230906 06:40:55.060"/>
</kw>
<status status="PASS" starttime="20230906 06:40:52.825" endtime="20230906 06:40:55.060"/>
</kw>
<msg timestamp="20230906 06:40:55.060" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230906 06:40:52.822" endtime="20230906 06:40:55.064"/>
</kw>
<msg timestamp="20230906 06:40:55.064" level="INFO">${successRotationLine} =     "NumSuccessRotation" : 2,</msg>
<status status="PASS" starttime="20230906 06:40:52.821" endtime="20230906 06:40:55.064"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${successRotationLine}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230906 06:40:55.069" level="INFO">    "NumSuccessRotation" : 2,</msg>
<status status="PASS" starttime="20230906 06:40:55.065" endtime="20230906 06:40:55.069"/>
</kw>
<kw name="Split String" library="String">
<var>${temp_1}</var>
<arg>${successRotationLine}</arg>
<arg>:</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20230906 06:40:55.070" level="INFO">${temp_1} = ['    "NumSuccessRotation" ', ' 2,']</msg>
<status status="PASS" starttime="20230906 06:40:55.070" endtime="20230906 06:40:55.070"/>
</kw>
<kw name="Strip String" library="String">
<var>${temp_2}</var>
<arg>${temp_1[1]}</arg>
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<msg timestamp="20230906 06:40:55.080" level="INFO">${temp_2} = 2,</msg>
<status status="PASS" starttime="20230906 06:40:55.074" endtime="20230906 06:40:55.080"/>
</kw>
<kw name="Split String" library="String">
<var>${temp_3}</var>
<arg>${temp_2}</arg>
<arg>,</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20230906 06:40:55.081" level="INFO">${temp_3} = ['2', '']</msg>
<status status="PASS" starttime="20230906 06:40:55.080" endtime="20230906 06:40:55.081"/>
</kw>
<kw name="Strip String" library="String">
<var>${successRotation}</var>
<arg>${temp_3[0]}</arg>
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<msg timestamp="20230906 06:40:55.083" level="INFO">${successRotation} = 2</msg>
<status status="PASS" starttime="20230906 06:40:55.082" endtime="20230906 06:40:55.083"/>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<var>${successRotation}</var>
<arg>${successRotation}</arg>
<doc>Converts the given item to a floating point number.</doc>
<msg timestamp="20230906 06:40:55.084" level="INFO">${successRotation} = 2.0</msg>
<status status="PASS" starttime="20230906 06:40:55.083" endtime="20230906 06:40:55.084"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${successRotation} &gt;= 1</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230906 06:40:55.084" endtime="20230906 06:40:55.085"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230906 06:40:52.820" endtime="20230906 06:40:55.085"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20230906 06:40:52.749" endtime="20230906 06:40:55.088"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="90324"/>
</suite>
<statistics>
<total>
<stat pass="8" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="2" fail="0" skip="0">create-volume-and-bucket</stat>
</tag>
<suite>
<stat pass="8" fail="0" skip="0" id="s1" name="ozonesecure-root-ca-rotation">ozonesecure-root-ca-rotation</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1" name="Kinit">ozonesecure-root-ca-rotation.Kinit</stat>
<stat pass="3" fail="0" skip="0" id="s1-s2" name="Root-Ca-Rotation-Client-Checks">ozonesecure-root-ca-rotation.Root-Ca-Rotation-Client-Checks</stat>
<stat pass="3" fail="0" skip="0" id="s1-s3" name="Root-Ca-Rotation-Client-Checks">ozonesecure-root-ca-rotation.Root-Ca-Rotation-Client-Checks</stat>
<stat pass="1" fail="0" skip="0" id="s1-s4" name="Root-Ca-Rotation">ozonesecure-root-ca-rotation.Root-Ca-Rotation</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
