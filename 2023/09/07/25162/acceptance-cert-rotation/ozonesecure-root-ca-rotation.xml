<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 6.1.1 (Python 3.8.10 on linux)" generated="20230907 05:13:20.005" rpa="false" schemaversion="4">
<suite id="s1" name="ozonesecure-root-ca-rotation">
<suite id="s1-s1" name="Kinit" source="/opt/hadoop/smoketest/kinit.robot">
<test id="s1-s1-t1" name="Kinit" line="27">
<kw name="Kinit test user" library="commonlib">
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230907 05:10:18.900" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230907 05:10:18.904" level="INFO">${rc} = 0</msg>
<msg timestamp="20230907 05:10:18.905" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230907 05:10:18.897" endtime="20230907 05:10:18.905"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230907 05:10:18.906" level="INFO">scm</msg>
<status status="PASS" starttime="20230907 05:10:18.905" endtime="20230907 05:10:18.906"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230907 05:10:18.907" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230907 05:10:18.906" endtime="20230907 05:10:18.907"/>
</kw>
<status status="PASS" starttime="20230907 05:10:18.896" endtime="20230907 05:10:18.907"/>
</kw>
<msg timestamp="20230907 05:10:18.908" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230907 05:10:18.895" endtime="20230907 05:10:18.908"/>
</kw>
<msg timestamp="20230907 05:10:18.908" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230907 05:10:18.892" endtime="20230907 05:10:18.908"/>
</kw>
<msg timestamp="20230907 05:10:18.909" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230907 05:10:18.891" endtime="20230907 05:10:18.909"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230907 05:10:18.910" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230907 05:10:18.909" endtime="20230907 05:10:18.910"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230907 05:10:18.915" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20230907 05:10:18.952" level="INFO">${rc} = 0</msg>
<msg timestamp="20230907 05:10:18.952" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230907 05:10:18.913" endtime="20230907 05:10:18.953"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230907 05:10:18.954" level="INFO"/>
<status status="PASS" starttime="20230907 05:10:18.953" endtime="20230907 05:10:18.954"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230907 05:10:18.955" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230907 05:10:18.955" endtime="20230907 05:10:18.955"/>
</kw>
<status status="PASS" starttime="20230907 05:10:18.912" endtime="20230907 05:10:18.956"/>
</kw>
<msg timestamp="20230907 05:10:18.956" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230907 05:10:18.912" endtime="20230907 05:10:18.956"/>
</kw>
<status status="PASS" starttime="20230907 05:10:18.911" endtime="20230907 05:10:18.956"/>
</kw>
<status status="PASS" starttime="20230907 05:10:18.910" endtime="20230907 05:10:18.956"/>
</kw>
<status status="PASS" starttime="20230907 05:10:18.890" endtime="20230907 05:10:18.957"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20230907 05:10:18.889" endtime="20230907 05:10:18.957"/>
</test>
<doc>Kinit test user</doc>
<status status="PASS" starttime="20230907 05:10:18.746" endtime="20230907 05:10:18.959"/>
</suite>
<suite id="s1-s2" name="Root-Ca-Rotation-Client-Checks" source="/opt/hadoop/smoketest/certrotation/root-ca-rotation-client-checks.robot">
<test id="s1-s2-t1" name="Create a volume and bucket" line="27">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230907 05:10:40.873" level="INFO">Running command 'ozone sh volume create rootca-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20230907 05:10:49.827" level="INFO">${rc} = 0</msg>
<msg timestamp="20230907 05:10:49.827" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230907 05:10:40.871" endtime="20230907 05:10:49.827"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230907 05:10:49.829" level="INFO"/>
<status status="PASS" starttime="20230907 05:10:49.828" endtime="20230907 05:10:49.829"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230907 05:10:49.830" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230907 05:10:49.829" endtime="20230907 05:10:49.830"/>
</kw>
<status status="PASS" starttime="20230907 05:10:40.870" endtime="20230907 05:10:49.830"/>
</kw>
<msg timestamp="20230907 05:10:49.831" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230907 05:10:40.870" endtime="20230907 05:10:49.831"/>
</kw>
<msg timestamp="20230907 05:10:49.831" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230907 05:10:40.868" endtime="20230907 05:10:49.831"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230907 05:10:49.831" endtime="20230907 05:10:49.832"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230907 05:10:49.837" level="INFO">Running command 'ozone sh bucket create /rootca-volume/rootca-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230907 05:10:56.821" level="INFO">${rc} = 0</msg>
<msg timestamp="20230907 05:10:56.821" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230907 05:10:49.834" endtime="20230907 05:10:56.821"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230907 05:10:56.826" level="INFO"/>
<status status="PASS" starttime="20230907 05:10:56.824" endtime="20230907 05:10:56.826"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230907 05:10:56.827" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230907 05:10:56.826" endtime="20230907 05:10:56.828"/>
</kw>
<status status="PASS" starttime="20230907 05:10:49.833" endtime="20230907 05:10:56.828"/>
</kw>
<msg timestamp="20230907 05:10:56.828" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230907 05:10:49.833" endtime="20230907 05:10:56.828"/>
</kw>
<msg timestamp="20230907 05:10:56.828" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230907 05:10:49.832" endtime="20230907 05:10:56.829"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230907 05:10:56.829" endtime="20230907 05:10:56.829"/>
</kw>
<tag>create-volume-and-bucket</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230907 05:10:40.867" endtime="20230907 05:10:56.830"/>
</test>
<test id="s1-s2-t2" name="Create key" line="34">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230907 05:10:56.842" level="INFO">Running command 'echo "rootca: key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20230907 05:10:56.844" level="INFO">${rc} = 0</msg>
<msg timestamp="20230907 05:10:56.844" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230907 05:10:56.839" endtime="20230907 05:10:56.844"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230907 05:10:56.845" level="INFO"/>
<status status="PASS" starttime="20230907 05:10:56.845" endtime="20230907 05:10:56.845"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230907 05:10:56.846" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230907 05:10:56.846" endtime="20230907 05:10:56.846"/>
</kw>
<status status="PASS" starttime="20230907 05:10:56.838" endtime="20230907 05:10:56.846"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230907 05:10:56.851" level="INFO">Running command 'ozone sh key put /rootca-volume/rootca-bucket/rootca-key /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230907 05:11:11.292" level="INFO">${rc} = 0</msg>
<msg timestamp="20230907 05:11:11.292" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230907 05:10:56.849" endtime="20230907 05:11:11.292"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230907 05:11:11.294" level="INFO"/>
<status status="PASS" starttime="20230907 05:11:11.293" endtime="20230907 05:11:11.294"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230907 05:11:11.295" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230907 05:11:11.294" endtime="20230907 05:11:11.295"/>
</kw>
<status status="PASS" starttime="20230907 05:10:56.848" endtime="20230907 05:11:11.295"/>
</kw>
<msg timestamp="20230907 05:11:11.296" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230907 05:10:56.848" endtime="20230907 05:11:11.296"/>
</kw>
<msg timestamp="20230907 05:11:11.296" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230907 05:10:56.847" endtime="20230907 05:11:11.296"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230907 05:11:11.296" endtime="20230907 05:11:11.297"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230907 05:11:11.302" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230907 05:11:11.305" level="INFO">${rc} = 0</msg>
<msg timestamp="20230907 05:11:11.305" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230907 05:11:11.298" endtime="20230907 05:11:11.305"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230907 05:11:11.307" level="INFO"/>
<status status="PASS" starttime="20230907 05:11:11.306" endtime="20230907 05:11:11.307"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230907 05:11:11.307" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230907 05:11:11.307" endtime="20230907 05:11:11.308"/>
</kw>
<status status="PASS" starttime="20230907 05:11:11.297" endtime="20230907 05:11:11.308"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230907 05:10:56.831" endtime="20230907 05:11:11.308"/>
</test>
<test id="s1-s2-t3" name="Read data from previously created key" line="40">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230907 05:11:11.312" level="INFO">${random} = 27868</msg>
<status status="PASS" starttime="20230907 05:11:11.311" endtime="20230907 05:11:11.312"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230907 05:11:11.325" level="INFO">Running command 'ozone sh key get /rootca-volume/rootca-bucket/rootca-key /tmp/key-27868 2&gt;&amp;1'.</msg>
<msg timestamp="20230907 05:11:22.466" level="INFO">${rc} = 0</msg>
<msg timestamp="20230907 05:11:22.466" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230907 05:11:11.315" endtime="20230907 05:11:22.466"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230907 05:11:22.467" level="INFO"/>
<status status="PASS" starttime="20230907 05:11:22.466" endtime="20230907 05:11:22.467"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230907 05:11:22.468" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230907 05:11:22.467" endtime="20230907 05:11:22.468"/>
</kw>
<status status="PASS" starttime="20230907 05:11:11.313" endtime="20230907 05:11:22.468"/>
</kw>
<msg timestamp="20230907 05:11:22.469" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230907 05:11:11.313" endtime="20230907 05:11:22.469"/>
</kw>
<msg timestamp="20230907 05:11:22.469" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230907 05:11:11.312" endtime="20230907 05:11:22.469"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230907 05:11:22.470" endtime="20230907 05:11:22.471"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230907 05:11:22.476" level="INFO">Running command 'cat /tmp/key-27868 2&gt;&amp;1'.</msg>
<msg timestamp="20230907 05:11:22.479" level="INFO">${rc} = 0</msg>
<msg timestamp="20230907 05:11:22.480" level="INFO">${output} = rootca: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230907 05:11:22.472" endtime="20230907 05:11:22.480"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230907 05:11:22.481" level="INFO">rootca: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230907 05:11:22.480" endtime="20230907 05:11:22.481"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230907 05:11:22.482" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230907 05:11:22.481" endtime="20230907 05:11:22.482"/>
</kw>
<msg timestamp="20230907 05:11:22.482" level="INFO">${output} = rootca: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230907 05:11:22.471" endtime="20230907 05:11:22.482"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230907 05:11:22.483" endtime="20230907 05:11:22.483"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230907 05:11:22.488" level="INFO">Running command 'rm /tmp/key-27868 2&gt;&amp;1'.</msg>
<msg timestamp="20230907 05:11:22.492" level="INFO">${rc} = 0</msg>
<msg timestamp="20230907 05:11:22.492" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230907 05:11:22.484" endtime="20230907 05:11:22.492"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230907 05:11:22.493" level="INFO"/>
<status status="PASS" starttime="20230907 05:11:22.493" endtime="20230907 05:11:22.494"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230907 05:11:22.495" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230907 05:11:22.494" endtime="20230907 05:11:22.495"/>
</kw>
<status status="PASS" starttime="20230907 05:11:22.483" endtime="20230907 05:11:22.495"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230907 05:11:11.310" endtime="20230907 05:11:22.495"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20230907 05:10:40.795" endtime="20230907 05:11:22.497"/>
</suite>
<suite id="s1-s3" name="Root-Ca-Rotation-Client-Checks" source="/opt/hadoop/smoketest/certrotation/root-ca-rotation-client-checks.robot">
<test id="s1-s3-t1" name="Create a volume and bucket" line="27">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230907 05:12:14.074" level="INFO">Running command 'ozone sh volume create rootca2-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20230907 05:12:22.242" level="INFO">${rc} = 0</msg>
<msg timestamp="20230907 05:12:22.242" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230907 05:12:14.070" endtime="20230907 05:12:22.242"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230907 05:12:22.244" level="INFO"/>
<status status="PASS" starttime="20230907 05:12:22.243" endtime="20230907 05:12:22.244"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230907 05:12:22.245" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230907 05:12:22.244" endtime="20230907 05:12:22.245"/>
</kw>
<status status="PASS" starttime="20230907 05:12:14.070" endtime="20230907 05:12:22.245"/>
</kw>
<msg timestamp="20230907 05:12:22.245" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230907 05:12:14.069" endtime="20230907 05:12:22.245"/>
</kw>
<msg timestamp="20230907 05:12:22.246" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230907 05:12:14.068" endtime="20230907 05:12:22.246"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230907 05:12:22.246" endtime="20230907 05:12:22.246"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230907 05:12:22.251" level="INFO">Running command 'ozone sh bucket create /rootca2-volume/rootca2-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230907 05:12:30.931" level="INFO">${rc} = 0</msg>
<msg timestamp="20230907 05:12:30.931" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230907 05:12:22.248" endtime="20230907 05:12:30.931"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230907 05:12:30.944" level="INFO"/>
<status status="PASS" starttime="20230907 05:12:30.940" endtime="20230907 05:12:30.944"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230907 05:12:30.952" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230907 05:12:30.944" endtime="20230907 05:12:30.959"/>
</kw>
<status status="PASS" starttime="20230907 05:12:22.248" endtime="20230907 05:12:30.959"/>
</kw>
<msg timestamp="20230907 05:12:30.959" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230907 05:12:22.247" endtime="20230907 05:12:30.962"/>
</kw>
<msg timestamp="20230907 05:12:30.962" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230907 05:12:22.247" endtime="20230907 05:12:30.962"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230907 05:12:30.963" endtime="20230907 05:12:30.977"/>
</kw>
<tag>create-volume-and-bucket</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230907 05:12:14.067" endtime="20230907 05:12:30.977"/>
</test>
<test id="s1-s3-t2" name="Create key" line="34">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230907 05:12:31.013" level="INFO">Running command 'echo "rootca2: key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20230907 05:12:31.022" level="INFO">${rc} = 0</msg>
<msg timestamp="20230907 05:12:31.024" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230907 05:12:30.992" endtime="20230907 05:12:31.024"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230907 05:12:31.028" level="INFO"/>
<status status="PASS" starttime="20230907 05:12:31.025" endtime="20230907 05:12:31.030"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230907 05:12:31.032" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230907 05:12:31.030" endtime="20230907 05:12:31.032"/>
</kw>
<status status="PASS" starttime="20230907 05:12:30.990" endtime="20230907 05:12:31.032"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230907 05:12:31.039" level="INFO">Running command 'ozone sh key put /rootca2-volume/rootca2-bucket/rootca2-key /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230907 05:12:42.688" level="INFO">${rc} = 0</msg>
<msg timestamp="20230907 05:12:42.689" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230907 05:12:31.036" endtime="20230907 05:12:42.689"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230907 05:12:42.690" level="INFO"/>
<status status="PASS" starttime="20230907 05:12:42.689" endtime="20230907 05:12:42.690"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230907 05:12:42.691" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230907 05:12:42.690" endtime="20230907 05:12:42.691"/>
</kw>
<status status="PASS" starttime="20230907 05:12:31.035" endtime="20230907 05:12:42.691"/>
</kw>
<msg timestamp="20230907 05:12:42.691" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230907 05:12:31.034" endtime="20230907 05:12:42.692"/>
</kw>
<msg timestamp="20230907 05:12:42.692" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230907 05:12:31.033" endtime="20230907 05:12:42.692"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230907 05:12:42.692" endtime="20230907 05:12:42.692"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230907 05:12:42.696" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230907 05:12:42.700" level="INFO">${rc} = 0</msg>
<msg timestamp="20230907 05:12:42.700" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230907 05:12:42.694" endtime="20230907 05:12:42.700"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230907 05:12:42.701" level="INFO"/>
<status status="PASS" starttime="20230907 05:12:42.700" endtime="20230907 05:12:42.702"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230907 05:12:42.702" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230907 05:12:42.702" endtime="20230907 05:12:42.703"/>
</kw>
<status status="PASS" starttime="20230907 05:12:42.693" endtime="20230907 05:12:42.703"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230907 05:12:30.984" endtime="20230907 05:12:42.703"/>
</test>
<test id="s1-s3-t3" name="Read data from previously created key" line="40">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230907 05:12:42.706" level="INFO">${random} = 17090</msg>
<status status="PASS" starttime="20230907 05:12:42.705" endtime="20230907 05:12:42.706"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230907 05:12:42.711" level="INFO">Running command 'ozone sh key get /rootca2-volume/rootca2-bucket/rootca2-key /tmp/key-17090 2&gt;&amp;1'.</msg>
<msg timestamp="20230907 05:12:53.735" level="INFO">${rc} = 0</msg>
<msg timestamp="20230907 05:12:53.735" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230907 05:12:42.708" endtime="20230907 05:12:53.735"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230907 05:12:53.737" level="INFO"/>
<status status="PASS" starttime="20230907 05:12:53.736" endtime="20230907 05:12:53.737"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230907 05:12:53.738" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230907 05:12:53.738" endtime="20230907 05:12:53.738"/>
</kw>
<status status="PASS" starttime="20230907 05:12:42.707" endtime="20230907 05:12:53.739"/>
</kw>
<msg timestamp="20230907 05:12:53.739" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230907 05:12:42.707" endtime="20230907 05:12:53.739"/>
</kw>
<msg timestamp="20230907 05:12:53.739" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230907 05:12:42.706" endtime="20230907 05:12:53.739"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230907 05:12:53.739" endtime="20230907 05:12:53.740"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230907 05:12:53.745" level="INFO">Running command 'cat /tmp/key-17090 2&gt;&amp;1'.</msg>
<msg timestamp="20230907 05:12:53.754" level="INFO">${rc} = 0</msg>
<msg timestamp="20230907 05:12:53.754" level="INFO">${output} = rootca2: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230907 05:12:53.741" endtime="20230907 05:12:53.754"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230907 05:12:53.756" level="INFO">rootca2: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230907 05:12:53.755" endtime="20230907 05:12:53.756"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230907 05:12:53.757" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230907 05:12:53.756" endtime="20230907 05:12:53.757"/>
</kw>
<msg timestamp="20230907 05:12:53.758" level="INFO">${output} = rootca2: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230907 05:12:53.740" endtime="20230907 05:12:53.758"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230907 05:12:53.758" endtime="20230907 05:12:53.759"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230907 05:12:53.763" level="INFO">Running command 'rm /tmp/key-17090 2&gt;&amp;1'.</msg>
<msg timestamp="20230907 05:12:53.766" level="INFO">${rc} = 0</msg>
<msg timestamp="20230907 05:12:53.766" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230907 05:12:53.760" endtime="20230907 05:12:53.766"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230907 05:12:53.768" level="INFO"/>
<status status="PASS" starttime="20230907 05:12:53.767" endtime="20230907 05:12:53.769"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230907 05:12:53.770" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230907 05:12:53.769" endtime="20230907 05:12:53.770"/>
</kw>
<status status="PASS" starttime="20230907 05:12:53.759" endtime="20230907 05:12:53.770"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230907 05:12:42.704" endtime="20230907 05:12:53.771"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20230907 05:12:13.991" endtime="20230907 05:12:53.773"/>
</suite>
<suite id="s1-s4" name="Root-Ca-Rotation" source="/opt/hadoop/smoketest/scmha/root-ca-rotation.robot">
<test id="s1-s4-t1" name="Verify root CA rotation metrics" line="26">
<kw name="Execute" library="os">
<var>${successRotationLine}</var>
<arg>curl -sS 'http://localhost:9876/jmx' | grep NumSuccessRotation</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230907 05:12:57.975" level="INFO">Running command 'curl -sS 'http://localhost:9876/jmx' | grep NumSuccessRotation 2&gt;&amp;1'.</msg>
<msg timestamp="20230907 05:12:58.764" level="INFO">${rc} = 0</msg>
<msg timestamp="20230907 05:12:58.764" level="INFO">${output} =     "NumSuccessRotation" : 2,</msg>
<status status="PASS" starttime="20230907 05:12:57.971" endtime="20230907 05:12:58.764"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230907 05:12:58.765" level="INFO">    "NumSuccessRotation" : 2,</msg>
<status status="PASS" starttime="20230907 05:12:58.764" endtime="20230907 05:12:58.765"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230907 05:12:58.767" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230907 05:12:58.766" endtime="20230907 05:12:58.767"/>
</kw>
<status status="PASS" starttime="20230907 05:12:57.970" endtime="20230907 05:12:58.767"/>
</kw>
<msg timestamp="20230907 05:12:58.767" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230907 05:12:57.970" endtime="20230907 05:12:58.767"/>
</kw>
<msg timestamp="20230907 05:12:58.768" level="INFO">${successRotationLine} =     "NumSuccessRotation" : 2,</msg>
<status status="PASS" starttime="20230907 05:12:57.969" endtime="20230907 05:12:58.768"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${successRotationLine}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230907 05:12:58.768" level="INFO">    "NumSuccessRotation" : 2,</msg>
<status status="PASS" starttime="20230907 05:12:58.768" endtime="20230907 05:12:58.769"/>
</kw>
<kw name="Split String" library="String">
<var>${temp_1}</var>
<arg>${successRotationLine}</arg>
<arg>:</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20230907 05:12:58.770" level="INFO">${temp_1} = ['    "NumSuccessRotation" ', ' 2,']</msg>
<status status="PASS" starttime="20230907 05:12:58.769" endtime="20230907 05:12:58.770"/>
</kw>
<kw name="Strip String" library="String">
<var>${temp_2}</var>
<arg>${temp_1[1]}</arg>
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<msg timestamp="20230907 05:12:58.774" level="INFO">${temp_2} = 2,</msg>
<status status="PASS" starttime="20230907 05:12:58.772" endtime="20230907 05:12:58.774"/>
</kw>
<kw name="Split String" library="String">
<var>${temp_3}</var>
<arg>${temp_2}</arg>
<arg>,</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20230907 05:12:58.774" level="INFO">${temp_3} = ['2', '']</msg>
<status status="PASS" starttime="20230907 05:12:58.774" endtime="20230907 05:12:58.775"/>
</kw>
<kw name="Strip String" library="String">
<var>${successRotation}</var>
<arg>${temp_3[0]}</arg>
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<msg timestamp="20230907 05:12:58.776" level="INFO">${successRotation} = 2</msg>
<status status="PASS" starttime="20230907 05:12:58.775" endtime="20230907 05:12:58.776"/>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<var>${successRotation}</var>
<arg>${successRotation}</arg>
<doc>Converts the given item to a floating point number.</doc>
<msg timestamp="20230907 05:12:58.777" level="INFO">${successRotation} = 2.0</msg>
<status status="PASS" starttime="20230907 05:12:58.776" endtime="20230907 05:12:58.777"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${successRotation} &gt;= 1</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230907 05:12:58.777" endtime="20230907 05:12:58.778"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230907 05:12:57.967" endtime="20230907 05:12:58.778"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20230907 05:12:57.890" endtime="20230907 05:12:58.780"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="82587"/>
</suite>
<statistics>
<total>
<stat pass="8" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="2" fail="0" skip="0">create-volume-and-bucket</stat>
</tag>
<suite>
<stat pass="8" fail="0" skip="0" id="s1" name="ozonesecure-root-ca-rotation">ozonesecure-root-ca-rotation</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1" name="Kinit">ozonesecure-root-ca-rotation.Kinit</stat>
<stat pass="3" fail="0" skip="0" id="s1-s2" name="Root-Ca-Rotation-Client-Checks">ozonesecure-root-ca-rotation.Root-Ca-Rotation-Client-Checks</stat>
<stat pass="3" fail="0" skip="0" id="s1-s3" name="Root-Ca-Rotation-Client-Checks">ozonesecure-root-ca-rotation.Root-Ca-Rotation-Client-Checks</stat>
<stat pass="1" fail="0" skip="0" id="s1-s4" name="Root-Ca-Rotation">ozonesecure-root-ca-rotation.Root-Ca-Rotation</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
