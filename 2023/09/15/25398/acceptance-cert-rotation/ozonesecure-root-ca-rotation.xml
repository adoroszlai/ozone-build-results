<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 6.1.1 (Python 3.8.10 on linux)" generated="20230915 07:13:23.820" rpa="false" schemaversion="4">
<suite id="s1" name="ozonesecure-root-ca-rotation">
<suite id="s1-s1" name="Kinit" source="/opt/hadoop/smoketest/kinit.robot">
<test id="s1-s1-t1" name="Kinit" line="27">
<kw name="Kinit test user" library="commonlib">
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 07:10:33.362" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 07:10:33.368" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 07:10:33.368" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230915 07:10:33.358" endtime="20230915 07:10:33.368"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 07:10:33.377" level="INFO">scm</msg>
<status status="PASS" starttime="20230915 07:10:33.370" endtime="20230915 07:10:33.378"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 07:10:33.378" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 07:10:33.378" endtime="20230915 07:10:33.379"/>
</kw>
<status status="PASS" starttime="20230915 07:10:33.357" endtime="20230915 07:10:33.379"/>
</kw>
<msg timestamp="20230915 07:10:33.379" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 07:10:33.357" endtime="20230915 07:10:33.379"/>
</kw>
<msg timestamp="20230915 07:10:33.379" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230915 07:10:33.356" endtime="20230915 07:10:33.379"/>
</kw>
<msg timestamp="20230915 07:10:33.380" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230915 07:10:33.356" endtime="20230915 07:10:33.380"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230915 07:10:33.380" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230915 07:10:33.380" endtime="20230915 07:10:33.381"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 07:10:33.387" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 07:10:33.418" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 07:10:33.418" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230915 07:10:33.383" endtime="20230915 07:10:33.418"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 07:10:33.420" level="INFO"/>
<status status="PASS" starttime="20230915 07:10:33.419" endtime="20230915 07:10:33.420"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 07:10:33.420" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 07:10:33.420" endtime="20230915 07:10:33.421"/>
</kw>
<status status="PASS" starttime="20230915 07:10:33.383" endtime="20230915 07:10:33.421"/>
</kw>
<msg timestamp="20230915 07:10:33.421" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 07:10:33.382" endtime="20230915 07:10:33.421"/>
</kw>
<status status="PASS" starttime="20230915 07:10:33.381" endtime="20230915 07:10:33.421"/>
</kw>
<status status="PASS" starttime="20230915 07:10:33.381" endtime="20230915 07:10:33.421"/>
</kw>
<status status="PASS" starttime="20230915 07:10:33.355" endtime="20230915 07:10:33.421"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20230915 07:10:33.353" endtime="20230915 07:10:33.422"/>
</test>
<doc>Kinit test user</doc>
<status status="PASS" starttime="20230915 07:10:33.280" endtime="20230915 07:10:33.424"/>
</suite>
<suite id="s1-s2" name="Root-Ca-Rotation-Client-Checks" source="/opt/hadoop/smoketest/certrotation/root-ca-rotation-client-checks.robot">
<test id="s1-s2-t1" name="Create a volume and bucket" line="27">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 07:10:56.698" level="INFO">Running command 'ozone sh volume create rootca-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 07:11:03.904" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 07:11:03.904" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230915 07:10:56.694" endtime="20230915 07:11:03.904"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 07:11:03.905" level="INFO"/>
<status status="PASS" starttime="20230915 07:11:03.904" endtime="20230915 07:11:03.905"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 07:11:03.906" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 07:11:03.905" endtime="20230915 07:11:03.906"/>
</kw>
<status status="PASS" starttime="20230915 07:10:56.694" endtime="20230915 07:11:03.907"/>
</kw>
<msg timestamp="20230915 07:11:03.907" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 07:10:56.693" endtime="20230915 07:11:03.907"/>
</kw>
<msg timestamp="20230915 07:11:03.908" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230915 07:10:56.693" endtime="20230915 07:11:03.908"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 07:11:03.909" endtime="20230915 07:11:03.910"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 07:11:03.923" level="INFO">Running command 'ozone sh bucket create /rootca-volume/rootca-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 07:11:11.807" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 07:11:11.808" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230915 07:11:03.917" endtime="20230915 07:11:11.808"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 07:11:11.809" level="INFO"/>
<status status="PASS" starttime="20230915 07:11:11.808" endtime="20230915 07:11:11.809"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 07:11:11.810" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 07:11:11.809" endtime="20230915 07:11:11.810"/>
</kw>
<status status="PASS" starttime="20230915 07:11:03.914" endtime="20230915 07:11:11.810"/>
</kw>
<msg timestamp="20230915 07:11:11.810" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 07:11:03.912" endtime="20230915 07:11:11.811"/>
</kw>
<msg timestamp="20230915 07:11:11.811" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230915 07:11:03.911" endtime="20230915 07:11:11.811"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 07:11:11.811" endtime="20230915 07:11:11.811"/>
</kw>
<tag>create-volume-and-bucket</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230915 07:10:56.692" endtime="20230915 07:11:11.812"/>
</test>
<test id="s1-s2-t2" name="Create key" line="34">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 07:11:11.817" level="INFO">Running command 'echo "rootca: key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20230915 07:11:11.820" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 07:11:11.820" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230915 07:11:11.814" endtime="20230915 07:11:11.820"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 07:11:11.821" level="INFO"/>
<status status="PASS" starttime="20230915 07:11:11.820" endtime="20230915 07:11:11.821"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 07:11:11.822" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 07:11:11.821" endtime="20230915 07:11:11.822"/>
</kw>
<status status="PASS" starttime="20230915 07:11:11.813" endtime="20230915 07:11:11.822"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 07:11:11.827" level="INFO">Running command 'ozone sh key put /rootca-volume/rootca-bucket/rootca-key /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 07:11:25.480" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 07:11:25.480" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230915 07:11:11.824" endtime="20230915 07:11:25.480"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 07:11:25.482" level="INFO"/>
<status status="PASS" starttime="20230915 07:11:25.481" endtime="20230915 07:11:25.482"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 07:11:25.483" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 07:11:25.482" endtime="20230915 07:11:25.483"/>
</kw>
<status status="PASS" starttime="20230915 07:11:11.824" endtime="20230915 07:11:25.483"/>
</kw>
<msg timestamp="20230915 07:11:25.483" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 07:11:11.823" endtime="20230915 07:11:25.483"/>
</kw>
<msg timestamp="20230915 07:11:25.483" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230915 07:11:11.822" endtime="20230915 07:11:25.483"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 07:11:25.483" endtime="20230915 07:11:25.484"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 07:11:25.488" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 07:11:25.492" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 07:11:25.492" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230915 07:11:25.485" endtime="20230915 07:11:25.492"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 07:11:25.493" level="INFO"/>
<status status="PASS" starttime="20230915 07:11:25.492" endtime="20230915 07:11:25.493"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 07:11:25.494" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 07:11:25.493" endtime="20230915 07:11:25.494"/>
</kw>
<status status="PASS" starttime="20230915 07:11:25.484" endtime="20230915 07:11:25.494"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230915 07:11:11.813" endtime="20230915 07:11:25.494"/>
</test>
<test id="s1-s2-t3" name="Read data from previously created key" line="40">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230915 07:11:25.497" level="INFO">${random} = 97199</msg>
<status status="PASS" starttime="20230915 07:11:25.497" endtime="20230915 07:11:25.497"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 07:11:25.504" level="INFO">Running command 'ozone sh key get /rootca-volume/rootca-bucket/rootca-key /tmp/key-97199 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 07:11:35.180" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 07:11:35.180" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230915 07:11:25.499" endtime="20230915 07:11:35.180"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 07:11:35.182" level="INFO"/>
<status status="PASS" starttime="20230915 07:11:35.181" endtime="20230915 07:11:35.182"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 07:11:35.183" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 07:11:35.183" endtime="20230915 07:11:35.186"/>
</kw>
<status status="PASS" starttime="20230915 07:11:25.499" endtime="20230915 07:11:35.186"/>
</kw>
<msg timestamp="20230915 07:11:35.186" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 07:11:25.498" endtime="20230915 07:11:35.188"/>
</kw>
<msg timestamp="20230915 07:11:35.188" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230915 07:11:25.498" endtime="20230915 07:11:35.188"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 07:11:35.189" endtime="20230915 07:11:35.191"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 07:11:35.210" level="INFO">Running command 'cat /tmp/key-97199 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 07:11:35.224" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 07:11:35.224" level="INFO">${output} = rootca: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230915 07:11:35.199" endtime="20230915 07:11:35.224"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 07:11:35.226" level="INFO">rootca: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230915 07:11:35.225" endtime="20230915 07:11:35.226"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 07:11:35.227" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 07:11:35.226" endtime="20230915 07:11:35.227"/>
</kw>
<msg timestamp="20230915 07:11:35.227" level="INFO">${output} = rootca: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230915 07:11:35.195" endtime="20230915 07:11:35.227"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 07:11:35.228" endtime="20230915 07:11:35.228"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 07:11:35.235" level="INFO">Running command 'rm /tmp/key-97199 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 07:11:35.244" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 07:11:35.244" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230915 07:11:35.229" endtime="20230915 07:11:35.244"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 07:11:35.246" level="INFO"/>
<status status="PASS" starttime="20230915 07:11:35.245" endtime="20230915 07:11:35.246"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 07:11:35.247" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 07:11:35.246" endtime="20230915 07:11:35.247"/>
</kw>
<status status="PASS" starttime="20230915 07:11:35.228" endtime="20230915 07:11:35.250"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230915 07:11:25.495" endtime="20230915 07:11:35.251"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20230915 07:10:56.632" endtime="20230915 07:11:35.256"/>
</suite>
<suite id="s1-s3" name="Root-Ca-Rotation-Client-Checks" source="/opt/hadoop/smoketest/certrotation/root-ca-rotation-client-checks.robot">
<test id="s1-s3-t1" name="Create a volume and bucket" line="27">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 07:12:23.712" level="INFO">Running command 'ozone sh volume create rootca2-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 07:12:30.463" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 07:12:30.463" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230915 07:12:23.709" endtime="20230915 07:12:30.463"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 07:12:30.465" level="INFO"/>
<status status="PASS" starttime="20230915 07:12:30.464" endtime="20230915 07:12:30.465"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 07:12:30.466" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 07:12:30.465" endtime="20230915 07:12:30.466"/>
</kw>
<status status="PASS" starttime="20230915 07:12:23.708" endtime="20230915 07:12:30.466"/>
</kw>
<msg timestamp="20230915 07:12:30.466" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 07:12:23.708" endtime="20230915 07:12:30.466"/>
</kw>
<msg timestamp="20230915 07:12:30.467" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230915 07:12:23.707" endtime="20230915 07:12:30.467"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 07:12:30.467" endtime="20230915 07:12:30.467"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 07:12:30.473" level="INFO">Running command 'ozone sh bucket create /rootca2-volume/rootca2-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 07:12:38.627" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 07:12:38.628" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230915 07:12:30.469" endtime="20230915 07:12:38.628"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 07:12:38.629" level="INFO"/>
<status status="PASS" starttime="20230915 07:12:38.628" endtime="20230915 07:12:38.629"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 07:12:38.630" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 07:12:38.629" endtime="20230915 07:12:38.630"/>
</kw>
<status status="PASS" starttime="20230915 07:12:30.469" endtime="20230915 07:12:38.630"/>
</kw>
<msg timestamp="20230915 07:12:38.630" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 07:12:30.468" endtime="20230915 07:12:38.630"/>
</kw>
<msg timestamp="20230915 07:12:38.630" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230915 07:12:30.468" endtime="20230915 07:12:38.631"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 07:12:38.631" endtime="20230915 07:12:38.631"/>
</kw>
<tag>create-volume-and-bucket</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230915 07:12:23.706" endtime="20230915 07:12:38.631"/>
</test>
<test id="s1-s3-t2" name="Create key" line="34">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 07:12:38.637" level="INFO">Running command 'echo "rootca2: key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20230915 07:12:38.640" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 07:12:38.640" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230915 07:12:38.634" endtime="20230915 07:12:38.640"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 07:12:38.641" level="INFO"/>
<status status="PASS" starttime="20230915 07:12:38.640" endtime="20230915 07:12:38.641"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 07:12:38.642" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 07:12:38.642" endtime="20230915 07:12:38.642"/>
</kw>
<status status="PASS" starttime="20230915 07:12:38.633" endtime="20230915 07:12:38.642"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 07:12:38.648" level="INFO">Running command 'ozone sh key put /rootca2-volume/rootca2-bucket/rootca2-key /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 07:12:47.817" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 07:12:47.817" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230915 07:12:38.645" endtime="20230915 07:12:47.817"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 07:12:47.819" level="INFO"/>
<status status="PASS" starttime="20230915 07:12:47.818" endtime="20230915 07:12:47.819"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 07:12:47.820" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 07:12:47.819" endtime="20230915 07:12:47.820"/>
</kw>
<status status="PASS" starttime="20230915 07:12:38.644" endtime="20230915 07:12:47.821"/>
</kw>
<msg timestamp="20230915 07:12:47.821" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 07:12:38.643" endtime="20230915 07:12:47.821"/>
</kw>
<msg timestamp="20230915 07:12:47.821" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230915 07:12:38.643" endtime="20230915 07:12:47.821"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 07:12:47.821" endtime="20230915 07:12:47.822"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 07:12:47.826" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 07:12:47.831" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 07:12:47.831" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230915 07:12:47.823" endtime="20230915 07:12:47.832"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 07:12:47.833" level="INFO"/>
<status status="PASS" starttime="20230915 07:12:47.832" endtime="20230915 07:12:47.833"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 07:12:47.834" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 07:12:47.833" endtime="20230915 07:12:47.834"/>
</kw>
<status status="PASS" starttime="20230915 07:12:47.822" endtime="20230915 07:12:47.834"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230915 07:12:38.632" endtime="20230915 07:12:47.835"/>
</test>
<test id="s1-s3-t3" name="Read data from previously created key" line="40">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230915 07:12:47.838" level="INFO">${random} = 75660</msg>
<status status="PASS" starttime="20230915 07:12:47.837" endtime="20230915 07:12:47.838"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 07:12:47.843" level="INFO">Running command 'ozone sh key get /rootca2-volume/rootca2-bucket/rootca2-key /tmp/key-75660 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 07:12:56.994" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 07:12:56.994" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230915 07:12:47.840" endtime="20230915 07:12:56.994"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 07:12:56.995" level="INFO"/>
<status status="PASS" starttime="20230915 07:12:56.994" endtime="20230915 07:12:56.995"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 07:12:56.996" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 07:12:56.995" endtime="20230915 07:12:56.996"/>
</kw>
<status status="PASS" starttime="20230915 07:12:47.839" endtime="20230915 07:12:56.996"/>
</kw>
<msg timestamp="20230915 07:12:56.996" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 07:12:47.839" endtime="20230915 07:12:56.996"/>
</kw>
<msg timestamp="20230915 07:12:56.997" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230915 07:12:47.838" endtime="20230915 07:12:56.997"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 07:12:56.997" endtime="20230915 07:12:56.997"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 07:12:57.003" level="INFO">Running command 'cat /tmp/key-75660 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 07:12:57.006" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 07:12:57.006" level="INFO">${output} = rootca2: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230915 07:12:56.998" endtime="20230915 07:12:57.006"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 07:12:57.007" level="INFO">rootca2: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230915 07:12:57.007" endtime="20230915 07:12:57.007"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 07:12:57.008" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 07:12:57.007" endtime="20230915 07:12:57.008"/>
</kw>
<msg timestamp="20230915 07:12:57.008" level="INFO">${output} = rootca2: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230915 07:12:56.997" endtime="20230915 07:12:57.008"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 07:12:57.009" endtime="20230915 07:12:57.009"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 07:12:57.013" level="INFO">Running command 'rm /tmp/key-75660 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 07:12:57.018" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 07:12:57.018" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230915 07:12:57.010" endtime="20230915 07:12:57.018"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 07:12:57.019" level="INFO"/>
<status status="PASS" starttime="20230915 07:12:57.019" endtime="20230915 07:12:57.019"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 07:12:57.020" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 07:12:57.019" endtime="20230915 07:12:57.020"/>
</kw>
<status status="PASS" starttime="20230915 07:12:57.009" endtime="20230915 07:12:57.020"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230915 07:12:47.836" endtime="20230915 07:12:57.021"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20230915 07:12:23.645" endtime="20230915 07:12:57.023"/>
</suite>
<suite id="s1-s4" name="Root-Ca-Rotation" source="/opt/hadoop/smoketest/scmha/root-ca-rotation.robot">
<test id="s1-s4-t1" name="Verify root CA rotation metrics" line="26">
<kw name="Execute" library="os">
<var>${successRotationLine}</var>
<arg>curl -sS 'http://localhost:9876/jmx' | grep NumSuccessRotation</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 07:13:01.075" level="INFO">Running command 'curl -sS 'http://localhost:9876/jmx' | grep NumSuccessRotation 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 07:13:01.729" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 07:13:01.729" level="INFO">${output} =     "NumSuccessRotation" : 2,</msg>
<status status="PASS" starttime="20230915 07:13:01.072" endtime="20230915 07:13:01.729"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 07:13:01.731" level="INFO">    "NumSuccessRotation" : 2,</msg>
<status status="PASS" starttime="20230915 07:13:01.730" endtime="20230915 07:13:01.731"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 07:13:01.732" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 07:13:01.731" endtime="20230915 07:13:01.732"/>
</kw>
<status status="PASS" starttime="20230915 07:13:01.071" endtime="20230915 07:13:01.732"/>
</kw>
<msg timestamp="20230915 07:13:01.732" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 07:13:01.070" endtime="20230915 07:13:01.732"/>
</kw>
<msg timestamp="20230915 07:13:01.732" level="INFO">${successRotationLine} =     "NumSuccessRotation" : 2,</msg>
<status status="PASS" starttime="20230915 07:13:01.070" endtime="20230915 07:13:01.732"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${successRotationLine}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 07:13:01.733" level="INFO">    "NumSuccessRotation" : 2,</msg>
<status status="PASS" starttime="20230915 07:13:01.733" endtime="20230915 07:13:01.733"/>
</kw>
<kw name="Split String" library="String">
<var>${temp_1}</var>
<arg>${successRotationLine}</arg>
<arg>:</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20230915 07:13:01.734" level="INFO">${temp_1} = ['    "NumSuccessRotation" ', ' 2,']</msg>
<status status="PASS" starttime="20230915 07:13:01.733" endtime="20230915 07:13:01.734"/>
</kw>
<kw name="Strip String" library="String">
<var>${temp_2}</var>
<arg>${temp_1[1]}</arg>
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<msg timestamp="20230915 07:13:01.738" level="INFO">${temp_2} = 2,</msg>
<status status="PASS" starttime="20230915 07:13:01.734" endtime="20230915 07:13:01.738"/>
</kw>
<kw name="Split String" library="String">
<var>${temp_3}</var>
<arg>${temp_2}</arg>
<arg>,</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20230915 07:13:01.740" level="INFO">${temp_3} = ['2', '']</msg>
<status status="PASS" starttime="20230915 07:13:01.739" endtime="20230915 07:13:01.740"/>
</kw>
<kw name="Strip String" library="String">
<var>${successRotation}</var>
<arg>${temp_3[0]}</arg>
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<msg timestamp="20230915 07:13:01.741" level="INFO">${successRotation} = 2</msg>
<status status="PASS" starttime="20230915 07:13:01.740" endtime="20230915 07:13:01.741"/>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<var>${successRotation}</var>
<arg>${successRotation}</arg>
<doc>Converts the given item to a floating point number.</doc>
<msg timestamp="20230915 07:13:01.742" level="INFO">${successRotation} = 2.0</msg>
<status status="PASS" starttime="20230915 07:13:01.741" endtime="20230915 07:13:01.742"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${successRotation} &gt;= 1</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230915 07:13:01.742" endtime="20230915 07:13:01.743"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230915 07:13:01.069" endtime="20230915 07:13:01.743"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20230915 07:13:01.012" endtime="20230915 07:13:01.744"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="72878"/>
</suite>
<statistics>
<total>
<stat pass="8" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="2" fail="0" skip="0">create-volume-and-bucket</stat>
</tag>
<suite>
<stat pass="8" fail="0" skip="0" id="s1" name="ozonesecure-root-ca-rotation">ozonesecure-root-ca-rotation</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1" name="Kinit">ozonesecure-root-ca-rotation.Kinit</stat>
<stat pass="3" fail="0" skip="0" id="s1-s2" name="Root-Ca-Rotation-Client-Checks">ozonesecure-root-ca-rotation.Root-Ca-Rotation-Client-Checks</stat>
<stat pass="3" fail="0" skip="0" id="s1-s3" name="Root-Ca-Rotation-Client-Checks">ozonesecure-root-ca-rotation.Root-Ca-Rotation-Client-Checks</stat>
<stat pass="1" fail="0" skip="0" id="s1-s4" name="Root-Ca-Rotation">ozonesecure-root-ca-rotation.Root-Ca-Rotation</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
