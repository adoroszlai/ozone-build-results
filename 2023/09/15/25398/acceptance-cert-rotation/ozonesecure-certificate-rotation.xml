<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 6.1.1 (Python 3.8.10 on linux)" generated="20230915 07:08:08.898" rpa="false" schemaversion="4">
<suite id="s1" name="ozonesecure-certificate-rotation" source="/opt/hadoop/smoketest/certrotation">
<suite id="s1-s1" name="Cert-Rotation" source="/opt/hadoop/smoketest/certrotation/cert-rotation.robot">
<kw name="Setup Test" type="SETUP">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 07:06:10.892" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 07:06:10.961" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 07:06:10.961" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230915 07:06:10.862" endtime="20230915 07:06:10.961"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 07:06:10.963" level="INFO">scm</msg>
<status status="PASS" starttime="20230915 07:06:10.961" endtime="20230915 07:06:10.964"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 07:06:10.966" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 07:06:10.964" endtime="20230915 07:06:10.966"/>
</kw>
<status status="PASS" starttime="20230915 07:06:10.861" endtime="20230915 07:06:10.967"/>
</kw>
<msg timestamp="20230915 07:06:10.968" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 07:06:10.861" endtime="20230915 07:06:10.968"/>
</kw>
<msg timestamp="20230915 07:06:10.968" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230915 07:06:10.861" endtime="20230915 07:06:10.968"/>
</kw>
<msg timestamp="20230915 07:06:10.969" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230915 07:06:10.860" endtime="20230915 07:06:10.969"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230915 07:06:10.969" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230915 07:06:10.969" endtime="20230915 07:06:10.971"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 07:06:11.120" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 07:06:11.351" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 07:06:11.351" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230915 07:06:10.998" endtime="20230915 07:06:11.352"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 07:06:11.363" level="INFO"/>
<status status="PASS" starttime="20230915 07:06:11.352" endtime="20230915 07:06:11.363"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 07:06:11.367" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 07:06:11.364" endtime="20230915 07:06:11.367"/>
</kw>
<status status="PASS" starttime="20230915 07:06:10.993" endtime="20230915 07:06:11.367"/>
</kw>
<msg timestamp="20230915 07:06:11.367" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 07:06:10.977" endtime="20230915 07:06:11.368"/>
</kw>
<status status="PASS" starttime="20230915 07:06:10.976" endtime="20230915 07:06:11.369"/>
</kw>
<status status="PASS" starttime="20230915 07:06:10.971" endtime="20230915 07:06:11.369"/>
</kw>
<status status="PASS" starttime="20230915 07:06:10.860" endtime="20230915 07:06:11.369"/>
</kw>
<status status="PASS" starttime="20230915 07:06:10.859" endtime="20230915 07:06:11.369"/>
</kw>
<status status="PASS" starttime="20230915 07:06:10.856" endtime="20230915 07:06:11.369"/>
</kw>
<test id="s1-s1-t1" name="Test datanode functions before and after certificate rotation" line="55">
<kw name="Basic key generation and validation">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>10</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230915 07:06:11.394" level="INFO">${random} = qG5Ynan7Oy</msg>
<status status="PASS" starttime="20230915 07:06:11.390" endtime="20230915 07:06:11.394"/>
</kw>
<kw name="Freon OCKG" library="freon">
<arg>prefix=${random}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 07:06:11.423" level="INFO">Running command 'ozone freon ockg  -t 1 -n1 -p qG5Ynan7Oy  2&gt;&amp;1'.</msg>
<msg timestamp="20230915 07:06:32.088" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 07:06:32.088" level="INFO">${output} = 2023-09-15 07:06:17,229 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-15 07:06:17,362 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230915 07:06:11.409" endtime="20230915 07:06:32.088"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 07:06:32.090" level="INFO">2023-09-15 07:06:17,229 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-15 07:06:17,362 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-09-15 07:06:17,362 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-09-15 07:06:17,465 [main] INFO freon.BaseFreonGenerator: Executing test with prefix qG5Ynan7Oy and number-of-tests 1
2023-09-15 07:06:17,528 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-15 07:06:18,554 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-15 07:06:19,555 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-15 07:06:20,555 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-15 07:06:21,007 [main] INFO rpc.RpcClient: Creating Volume: vol1, with testuser as owner and space quota set to -1 bytes, counts quota set to -1
2023-09-15 07:06:21,365 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with server-side default bucket layout, testuser as owner, Versioning false, Storage Type set to DISK and Encryption set to false, Replication Type set to server-side default replication type, Namespace Quota set to -1, Space Quota set to -1 
2023-09-15 07:06:21,556 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-15 07:06:22,556 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-15 07:06:22,729 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2023-09-15 07:06:22,816 [pool-2-thread-1] INFO netty.NettyConfigKeys$DataStream: setTlsConf GrpcTlsConfig0-
2023-09-15 07:06:23,252 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2023-09-15 07:06:23,557 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-15 07:06:24,557 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-15 07:06:25,569 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-15 07:06:26,570 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-15 07:06:27,571 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-15 07:06:28,571 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-15 07:06:29,572 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-15 07:06:30,580 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-15 07:06:31,581 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2023-09-15 07:06:31,666 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=1, min=9275.572174, max=9275.572174, mean=9275.572174, stddev=0.0, median=9275.572174, p75=9275.572174, p95=9275.572174, p98=9275.572174, p99=9275.572174, p999=9275.572174, mean_rate=0.09804632473690963, m1=0.015991117074135343, m5=0.0033057092356765017, m15=0.0011080303990206543, rate_unit=events/second, duration_unit=milliseconds
2023-09-15 07:06:31,670 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 14
2023-09-15 07:06:31,671 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-09-15 07:06:31,671 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20230915 07:06:32.089" endtime="20230915 07:06:32.090"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 07:06:32.091" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 07:06:32.090" endtime="20230915 07:06:32.091"/>
</kw>
<status status="PASS" starttime="20230915 07:06:11.406" endtime="20230915 07:06:32.091"/>
</kw>
<msg timestamp="20230915 07:06:32.091" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 07:06:11.405" endtime="20230915 07:06:32.091"/>
</kw>
<msg timestamp="20230915 07:06:32.092" level="INFO">${result} = 2023-09-15 07:06:17,229 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-15 07:06:17,362 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230915 07:06:11.401" endtime="20230915 07:06:32.092"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 07:06:32.092" endtime="20230915 07:06:32.092"/>
</kw>
<status status="PASS" starttime="20230915 07:06:11.395" endtime="20230915 07:06:32.092"/>
</kw>
<kw name="Freon OCKV" library="freon">
<arg>prefix=${random}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockv ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 07:06:32.100" level="INFO">Running command 'ozone freon ockv  -t 1 -n1 -p qG5Ynan7Oy  2&gt;&amp;1'.</msg>
<msg timestamp="20230915 07:06:41.892" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 07:06:41.892" level="INFO">${output} = 2023-09-15 07:06:34,974 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-15 07:06:35,111 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230915 07:06:32.096" endtime="20230915 07:06:41.892"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 07:06:41.894" level="INFO">2023-09-15 07:06:34,974 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-15 07:06:35,111 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-09-15 07:06:35,111 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-09-15 07:06:35,205 [main] INFO freon.BaseFreonGenerator: Executing test with prefix qG5Ynan7Oy and number-of-tests 1
2023-09-15 07:06:35,273 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-15 07:06:36,282 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-15 07:06:37,282 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-15 07:06:38,283 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-15 07:06:38,488 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2023-09-15 07:06:39,284 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-15 07:06:40,285 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-15 07:06:41,285 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2023-09-15 07:06:41,505 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-validate, count=1, min=68.890189, max=68.890189, mean=68.890189, stddev=0.0, median=68.890189, p75=68.890189, p95=68.890189, p98=68.890189, p99=68.890189, p999=68.890189, mean_rate=0.9197438472180973, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-09-15 07:06:41,506 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 6
2023-09-15 07:06:41,507 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-09-15 07:06:41,508 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20230915 07:06:41.893" endtime="20230915 07:06:41.894"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 07:06:41.894" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 07:06:41.894" endtime="20230915 07:06:41.895"/>
</kw>
<status status="PASS" starttime="20230915 07:06:32.096" endtime="20230915 07:06:41.895"/>
</kw>
<msg timestamp="20230915 07:06:41.895" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 07:06:32.095" endtime="20230915 07:06:41.895"/>
</kw>
<msg timestamp="20230915 07:06:41.895" level="INFO">${result} = 2023-09-15 07:06:34,974 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-15 07:06:35,111 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230915 07:06:32.094" endtime="20230915 07:06:41.895"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 07:06:41.896" endtime="20230915 07:06:41.896"/>
</kw>
<status status="PASS" starttime="20230915 07:06:32.093" endtime="20230915 07:06:41.896"/>
</kw>
<status status="PASS" starttime="20230915 07:06:11.379" endtime="20230915 07:06:41.896"/>
</kw>
<kw name="Find certificate duration">
<var>${certDuration}</var>
<kw name="Execute" library="os">
<var>${waitTime}</var>
<arg>ozone getconf confKey hdds.x509.default.duration | sed 's/PT//'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 07:06:41.903" level="INFO">Running command 'ozone getconf confKey hdds.x509.default.duration | sed 's/PT//' 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 07:06:43.610" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 07:06:43.610" level="INFO">${output} = 40s</msg>
<status status="PASS" starttime="20230915 07:06:41.899" endtime="20230915 07:06:43.610"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 07:06:43.611" level="INFO">40s</msg>
<status status="PASS" starttime="20230915 07:06:43.610" endtime="20230915 07:06:43.612"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 07:06:43.612" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 07:06:43.612" endtime="20230915 07:06:43.612"/>
</kw>
<status status="PASS" starttime="20230915 07:06:41.898" endtime="20230915 07:06:43.613"/>
</kw>
<msg timestamp="20230915 07:06:43.613" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 07:06:41.898" endtime="20230915 07:06:43.613"/>
</kw>
<msg timestamp="20230915 07:06:43.613" level="INFO">${waitTime} = 40s</msg>
<status status="PASS" starttime="20230915 07:06:41.897" endtime="20230915 07:06:43.613"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>"${waitTime}" != "${EMPTY}"</arg>
<arg>${waitTime}</arg>
<arg>0s</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230915 07:06:43.615" level="INFO">${result} = 40s</msg>
<status status="PASS" starttime="20230915 07:06:43.613" endtime="20230915 07:06:43.615"/>
</kw>
<msg timestamp="20230915 07:06:43.615" level="INFO">${certDuration} = 40s</msg>
<status status="PASS" starttime="20230915 07:06:41.896" endtime="20230915 07:06:43.615"/>
</kw>
<kw name="Double duration">
<var>${doubleDuration}</var>
<arg>${certDuration}</arg>
<kw name="Add Time To Time" library="DateTime">
<var>${doubleDuration}</var>
<arg>${duration}</arg>
<arg>${duration}</arg>
<doc>Adds time to another time and returns the resulting time.</doc>
<msg timestamp="20230915 07:06:43.616" level="INFO">${doubleDuration} = 80.0</msg>
<status status="PASS" starttime="20230915 07:06:43.616" endtime="20230915 07:06:43.616"/>
</kw>
<msg timestamp="20230915 07:06:43.617" level="INFO">${doubleDuration} = 80.0</msg>
<status status="PASS" starttime="20230915 07:06:43.615" endtime="20230915 07:06:43.617"/>
</kw>
<kw name="Get datanode cert serial">
<var>${certId1}</var>
<kw name="Execute" library="os">
<var>${certSerial}</var>
<arg>openssl s_client -connect "${datanode}":"${port}" -showcerts | openssl x509 -noout -serial | grep serial | sed 's/serial=//'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 07:06:43.623" level="INFO">Running command 'openssl s_client -connect "datanode":"9859" -showcerts | openssl x509 -noout -serial | grep serial | sed 's/serial=//' 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 07:06:43.769" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 07:06:43.769" level="INFO">${output} = E4427E42DC</msg>
<status status="PASS" starttime="20230915 07:06:43.619" endtime="20230915 07:06:43.769"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 07:06:43.771" level="INFO">E4427E42DC</msg>
<status status="PASS" starttime="20230915 07:06:43.770" endtime="20230915 07:06:43.771"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 07:06:43.772" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 07:06:43.771" endtime="20230915 07:06:43.772"/>
</kw>
<status status="PASS" starttime="20230915 07:06:43.618" endtime="20230915 07:06:43.772"/>
</kw>
<msg timestamp="20230915 07:06:43.772" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 07:06:43.618" endtime="20230915 07:06:43.772"/>
</kw>
<msg timestamp="20230915 07:06:43.773" level="INFO">${certSerial} = E4427E42DC</msg>
<status status="PASS" starttime="20230915 07:06:43.617" endtime="20230915 07:06:43.773"/>
</kw>
<msg timestamp="20230915 07:06:43.773" level="INFO">${certId1} = E4427E42DC</msg>
<status status="PASS" starttime="20230915 07:06:43.617" endtime="20230915 07:06:43.773"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${doubleDuration}</arg>
<arg>5sec</arg>
<arg>Datanode has new certificate</arg>
<arg>${certId1}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Datanode has new certificate">
<arg>${certId1}</arg>
<kw name="Get datanode cert serial">
<var>${newCertId}</var>
<kw name="Execute" library="os">
<var>${certSerial}</var>
<arg>openssl s_client -connect "${datanode}":"${port}" -showcerts | openssl x509 -noout -serial | grep serial | sed 's/serial=//'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 07:06:43.779" level="INFO">Running command 'openssl s_client -connect "datanode":"9859" -showcerts | openssl x509 -noout -serial | grep serial | sed 's/serial=//' 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 07:06:43.905" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 07:06:43.905" level="INFO">${output} = E4427E42DC</msg>
<status status="PASS" starttime="20230915 07:06:43.776" endtime="20230915 07:06:43.905"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 07:06:43.906" level="INFO">E4427E42DC</msg>
<status status="PASS" starttime="20230915 07:06:43.906" endtime="20230915 07:06:43.907"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 07:06:43.908" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 07:06:43.907" endtime="20230915 07:06:43.908"/>
</kw>
<status status="PASS" starttime="20230915 07:06:43.776" endtime="20230915 07:06:43.908"/>
</kw>
<msg timestamp="20230915 07:06:43.908" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 07:06:43.775" endtime="20230915 07:06:43.908"/>
</kw>
<msg timestamp="20230915 07:06:43.909" level="INFO">${certSerial} = E4427E42DC</msg>
<status status="PASS" starttime="20230915 07:06:43.775" endtime="20230915 07:06:43.909"/>
</kw>
<msg timestamp="20230915 07:06:43.909" level="INFO">${newCertId} = E4427E42DC</msg>
<status status="PASS" starttime="20230915 07:06:43.774" endtime="20230915 07:06:43.909"/>
</kw>
<kw name="Should Not Be Equal" library="BuiltIn">
<arg>${certId}</arg>
<arg>${newCertId}</arg>
<doc>Fails if the given objects are equal.</doc>
<msg timestamp="20230915 07:06:43.910" level="FAIL">E4427E42DC == E4427E42DC</msg>
<status status="FAIL" starttime="20230915 07:06:43.909" endtime="20230915 07:06:43.910"/>
</kw>
<status status="FAIL" starttime="20230915 07:06:43.774" endtime="20230915 07:06:43.910"/>
</kw>
<kw name="Datanode has new certificate">
<arg>${certId1}</arg>
<kw name="Get datanode cert serial">
<var>${newCertId}</var>
<kw name="Execute" library="os">
<var>${certSerial}</var>
<arg>openssl s_client -connect "${datanode}":"${port}" -showcerts | openssl x509 -noout -serial | grep serial | sed 's/serial=//'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 07:06:48.966" level="INFO">Running command 'openssl s_client -connect "datanode":"9859" -showcerts | openssl x509 -noout -serial | grep serial | sed 's/serial=//' 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 07:06:49.075" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 07:06:49.076" level="INFO">${output} = E79731FE77</msg>
<status status="PASS" starttime="20230915 07:06:48.928" endtime="20230915 07:06:49.076"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 07:06:49.081" level="INFO">E79731FE77</msg>
<status status="PASS" starttime="20230915 07:06:49.077" endtime="20230915 07:06:49.081"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 07:06:49.084" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 07:06:49.081" endtime="20230915 07:06:49.084"/>
</kw>
<status status="PASS" starttime="20230915 07:06:48.925" endtime="20230915 07:06:49.086"/>
</kw>
<msg timestamp="20230915 07:06:49.088" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 07:06:48.924" endtime="20230915 07:06:49.088"/>
</kw>
<msg timestamp="20230915 07:06:49.088" level="INFO">${certSerial} = E79731FE77</msg>
<status status="PASS" starttime="20230915 07:06:48.922" endtime="20230915 07:06:49.088"/>
</kw>
<msg timestamp="20230915 07:06:49.088" level="INFO">${newCertId} = E79731FE77</msg>
<status status="PASS" starttime="20230915 07:06:48.918" endtime="20230915 07:06:49.088"/>
</kw>
<kw name="Should Not Be Equal" library="BuiltIn">
<arg>${certId}</arg>
<arg>${newCertId}</arg>
<doc>Fails if the given objects are equal.</doc>
<status status="PASS" starttime="20230915 07:06:49.094" endtime="20230915 07:06:49.097"/>
</kw>
<status status="PASS" starttime="20230915 07:06:48.914" endtime="20230915 07:06:49.097"/>
</kw>
<status status="PASS" starttime="20230915 07:06:43.773" endtime="20230915 07:06:49.108"/>
</kw>
<kw name="Basic key generation and validation">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>10</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230915 07:06:49.114" level="INFO">${random} = GNDb7652E1</msg>
<status status="PASS" starttime="20230915 07:06:49.113" endtime="20230915 07:06:49.114"/>
</kw>
<kw name="Freon OCKG" library="freon">
<arg>prefix=${random}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 07:06:49.143" level="INFO">Running command 'ozone freon ockg  -t 1 -n1 -p GNDb7652E1  2&gt;&amp;1'.</msg>
<msg timestamp="20230915 07:07:01.145" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 07:07:01.145" level="INFO">${output} = 2023-09-15 07:06:53,072 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-15 07:06:53,298 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230915 07:06:49.130" endtime="20230915 07:07:01.146"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 07:07:01.147" level="INFO">2023-09-15 07:06:53,072 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-15 07:06:53,298 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-09-15 07:06:53,298 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-09-15 07:06:53,419 [main] INFO freon.BaseFreonGenerator: Executing test with prefix GNDb7652E1 and number-of-tests 1
2023-09-15 07:06:53,490 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-15 07:06:54,491 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-15 07:06:55,491 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-15 07:06:56,492 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-15 07:06:56,812 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2023-09-15 07:06:56,887 [pool-2-thread-1] INFO netty.NettyConfigKeys$DataStream: setTlsConf GrpcTlsConfig0-
2023-09-15 07:06:57,493 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-15 07:06:57,512 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2023-09-15 07:06:58,494 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-15 07:06:59,494 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-15 07:07:00,495 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2023-09-15 07:07:00,553 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=1, min=3154.380317, max=3154.380317, mean=3154.380317, stddev=0.0, median=3154.380317, p75=3154.380317, p95=3154.380317, p98=3154.380317, p99=3154.380317, p999=3154.380317, mean_rate=0.24189243273362523, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-09-15 07:07:00,554 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 7
2023-09-15 07:07:00,554 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-09-15 07:07:00,554 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20230915 07:07:01.146" endtime="20230915 07:07:01.147"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 07:07:01.148" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 07:07:01.147" endtime="20230915 07:07:01.148"/>
</kw>
<status status="PASS" starttime="20230915 07:06:49.124" endtime="20230915 07:07:01.148"/>
</kw>
<msg timestamp="20230915 07:07:01.149" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 07:06:49.123" endtime="20230915 07:07:01.149"/>
</kw>
<msg timestamp="20230915 07:07:01.149" level="INFO">${result} = 2023-09-15 07:06:53,072 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-15 07:06:53,298 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230915 07:06:49.120" endtime="20230915 07:07:01.149"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 07:07:01.150" endtime="20230915 07:07:01.150"/>
</kw>
<status status="PASS" starttime="20230915 07:06:49.114" endtime="20230915 07:07:01.151"/>
</kw>
<kw name="Freon OCKV" library="freon">
<arg>prefix=${random}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockv ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 07:07:01.157" level="INFO">Running command 'ozone freon ockv  -t 1 -n1 -p GNDb7652E1  2&gt;&amp;1'.</msg>
<msg timestamp="20230915 07:07:12.846" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 07:07:12.846" level="INFO">${output} = 2023-09-15 07:07:04,109 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-15 07:07:04,299 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230915 07:07:01.154" endtime="20230915 07:07:12.846"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 07:07:12.847" level="INFO">2023-09-15 07:07:04,109 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-15 07:07:04,299 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-09-15 07:07:04,300 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-09-15 07:07:04,438 [main] INFO freon.BaseFreonGenerator: Executing test with prefix GNDb7652E1 and number-of-tests 1
2023-09-15 07:07:04,517 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-15 07:07:05,520 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-15 07:07:06,520 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-15 07:07:07,521 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-15 07:07:08,524 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-15 07:07:09,528 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-15 07:07:09,760 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2023-09-15 07:07:10,547 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-15 07:07:11,548 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2023-09-15 07:07:12,464 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-validate, count=1, min=71.982368, max=71.982368, mean=71.982368, stddev=0.0, median=71.982368, p75=71.982368, p95=71.982368, p98=71.982368, p99=71.982368, p999=71.982368, mean_rate=0.9000890530107267, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-09-15 07:07:12,465 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 8
2023-09-15 07:07:12,466 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-09-15 07:07:12,466 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20230915 07:07:12.846" endtime="20230915 07:07:12.847"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 07:07:12.848" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 07:07:12.848" endtime="20230915 07:07:12.848"/>
</kw>
<status status="PASS" starttime="20230915 07:07:01.153" endtime="20230915 07:07:12.849"/>
</kw>
<msg timestamp="20230915 07:07:12.849" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 07:07:01.153" endtime="20230915 07:07:12.849"/>
</kw>
<msg timestamp="20230915 07:07:12.849" level="INFO">${result} = 2023-09-15 07:07:04,109 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-15 07:07:04,299 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230915 07:07:01.152" endtime="20230915 07:07:12.849"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 07:07:12.849" endtime="20230915 07:07:12.850"/>
</kw>
<status status="PASS" starttime="20230915 07:07:01.151" endtime="20230915 07:07:12.850"/>
</kw>
<status status="PASS" starttime="20230915 07:06:49.110" endtime="20230915 07:07:12.850"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230915 07:06:11.373" endtime="20230915 07:07:12.850"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20230915 07:06:10.637" endtime="20230915 07:07:12.852"/>
</suite>
<suite id="s1-s2" name="Root-Ca-Rotation-Client-Checks" source="/opt/hadoop/smoketest/certrotation/root-ca-rotation-client-checks.robot">
<test id="s1-s2-t1" name="Create a volume and bucket" line="27">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 07:07:12.869" level="INFO">Running command 'ozone sh volume create rootca-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 07:07:20.200" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 07:07:20.200" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230915 07:07:12.865" endtime="20230915 07:07:20.200"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 07:07:20.201" level="INFO"/>
<status status="PASS" starttime="20230915 07:07:20.200" endtime="20230915 07:07:20.201"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 07:07:20.203" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 07:07:20.202" endtime="20230915 07:07:20.203"/>
</kw>
<status status="PASS" starttime="20230915 07:07:12.865" endtime="20230915 07:07:20.203"/>
</kw>
<msg timestamp="20230915 07:07:20.203" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 07:07:12.864" endtime="20230915 07:07:20.203"/>
</kw>
<msg timestamp="20230915 07:07:20.203" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230915 07:07:12.864" endtime="20230915 07:07:20.203"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 07:07:20.204" endtime="20230915 07:07:20.204"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 07:07:20.210" level="INFO">Running command 'ozone sh bucket create /rootca-volume/rootca-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 07:07:27.983" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 07:07:27.983" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230915 07:07:20.206" endtime="20230915 07:07:27.983"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 07:07:27.985" level="INFO"/>
<status status="PASS" starttime="20230915 07:07:27.984" endtime="20230915 07:07:27.985"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 07:07:27.986" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 07:07:27.985" endtime="20230915 07:07:27.986"/>
</kw>
<status status="PASS" starttime="20230915 07:07:20.206" endtime="20230915 07:07:27.986"/>
</kw>
<msg timestamp="20230915 07:07:27.986" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 07:07:20.205" endtime="20230915 07:07:27.986"/>
</kw>
<msg timestamp="20230915 07:07:27.987" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230915 07:07:20.205" endtime="20230915 07:07:27.987"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 07:07:27.987" endtime="20230915 07:07:27.987"/>
</kw>
<tag>create-volume-and-bucket</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230915 07:07:12.863" endtime="20230915 07:07:27.987"/>
</test>
<test id="s1-s2-t2" name="Create key" line="34">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 07:07:28.012" level="INFO">Running command 'echo "rootca: key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20230915 07:07:28.018" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 07:07:28.018" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230915 07:07:27.993" endtime="20230915 07:07:28.018"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 07:07:28.020" level="INFO"/>
<status status="PASS" starttime="20230915 07:07:28.019" endtime="20230915 07:07:28.020"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 07:07:28.026" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 07:07:28.020" endtime="20230915 07:07:28.027"/>
</kw>
<status status="PASS" starttime="20230915 07:07:27.992" endtime="20230915 07:07:28.027"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 07:07:28.036" level="INFO">Running command 'ozone sh key put /rootca-volume/rootca-bucket/rootca-key /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 07:07:40.715" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 07:07:40.715" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230915 07:07:28.032" endtime="20230915 07:07:40.715"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 07:07:40.717" level="INFO"/>
<status status="PASS" starttime="20230915 07:07:40.716" endtime="20230915 07:07:40.717"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 07:07:40.720" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 07:07:40.717" endtime="20230915 07:07:40.720"/>
</kw>
<status status="PASS" starttime="20230915 07:07:28.030" endtime="20230915 07:07:40.721"/>
</kw>
<msg timestamp="20230915 07:07:40.721" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 07:07:28.029" endtime="20230915 07:07:40.721"/>
</kw>
<msg timestamp="20230915 07:07:40.721" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230915 07:07:28.028" endtime="20230915 07:07:40.721"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 07:07:40.721" endtime="20230915 07:07:40.722"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 07:07:40.726" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 07:07:40.730" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 07:07:40.730" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230915 07:07:40.723" endtime="20230915 07:07:40.730"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 07:07:40.731" level="INFO"/>
<status status="PASS" starttime="20230915 07:07:40.731" endtime="20230915 07:07:40.731"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 07:07:40.732" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 07:07:40.732" endtime="20230915 07:07:40.732"/>
</kw>
<status status="PASS" starttime="20230915 07:07:40.723" endtime="20230915 07:07:40.732"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230915 07:07:27.988" endtime="20230915 07:07:40.733"/>
</test>
<test id="s1-s2-t3" name="Read data from previously created key" line="40">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230915 07:07:40.735" level="INFO">${random} = 97781</msg>
<status status="PASS" starttime="20230915 07:07:40.735" endtime="20230915 07:07:40.736"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 07:07:40.741" level="INFO">Running command 'ozone sh key get /rootca-volume/rootca-bucket/rootca-key /tmp/key-97781 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 07:07:51.248" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 07:07:51.248" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230915 07:07:40.738" endtime="20230915 07:07:51.249"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 07:07:51.250" level="INFO"/>
<status status="PASS" starttime="20230915 07:07:51.249" endtime="20230915 07:07:51.250"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 07:07:51.251" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 07:07:51.251" endtime="20230915 07:07:51.251"/>
</kw>
<status status="PASS" starttime="20230915 07:07:40.737" endtime="20230915 07:07:51.251"/>
</kw>
<msg timestamp="20230915 07:07:51.252" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 07:07:40.737" endtime="20230915 07:07:51.252"/>
</kw>
<msg timestamp="20230915 07:07:51.252" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230915 07:07:40.736" endtime="20230915 07:07:51.252"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 07:07:51.252" endtime="20230915 07:07:51.253"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 07:07:51.257" level="INFO">Running command 'cat /tmp/key-97781 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 07:07:51.260" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 07:07:51.260" level="INFO">${output} = rootca: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230915 07:07:51.254" endtime="20230915 07:07:51.260"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 07:07:51.262" level="INFO">rootca: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230915 07:07:51.261" endtime="20230915 07:07:51.262"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 07:07:51.263" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 07:07:51.262" endtime="20230915 07:07:51.263"/>
</kw>
<msg timestamp="20230915 07:07:51.263" level="INFO">${output} = rootca: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230915 07:07:51.253" endtime="20230915 07:07:51.263"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 07:07:51.263" endtime="20230915 07:07:51.264"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 07:07:51.270" level="INFO">Running command 'rm /tmp/key-97781 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 07:07:51.272" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 07:07:51.272" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230915 07:07:51.265" endtime="20230915 07:07:51.272"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 07:07:51.273" level="INFO"/>
<status status="PASS" starttime="20230915 07:07:51.272" endtime="20230915 07:07:51.273"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 07:07:51.274" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 07:07:51.273" endtime="20230915 07:07:51.275"/>
</kw>
<status status="PASS" starttime="20230915 07:07:51.264" endtime="20230915 07:07:51.275"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230915 07:07:40.734" endtime="20230915 07:07:51.275"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20230915 07:07:12.855" endtime="20230915 07:07:51.277"/>
</suite>
<status status="PASS" starttime="20230915 07:06:10.533" endtime="20230915 07:07:51.279"/>
</suite>
<statistics>
<total>
<stat pass="4" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="1" fail="0" skip="0">create-volume-and-bucket</stat>
</tag>
<suite>
<stat pass="4" fail="0" skip="0" id="s1" name="ozonesecure-certificate-rotation">ozonesecure-certificate-rotation</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1" name="Cert-Rotation">ozonesecure-certificate-rotation.Cert-Rotation</stat>
<stat pass="3" fail="0" skip="0" id="s1-s2" name="Root-Ca-Rotation-Client-Checks">ozonesecure-certificate-rotation.Root-Ca-Rotation-Client-Checks</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
