<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 6.1.1 (Python 3.8.10 on linux)" generated="20230915 20:32:39.645" rpa="false" schemaversion="4">
<suite id="s1" name="ozonesecure-ha-root-ca-rotation">
<suite id="s1-s1" name="Kinit" source="/opt/hadoop/smoketest/kinit.robot">
<test id="s1-s1-t1" name="Kinit" line="27">
<kw name="Kinit test user" library="commonlib">
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 20:20:28.305" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 20:20:28.312" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 20:20:28.312" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230915 20:20:28.301" endtime="20230915 20:20:28.312"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 20:20:28.314" level="INFO">scm</msg>
<status status="PASS" starttime="20230915 20:20:28.313" endtime="20230915 20:20:28.314"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 20:20:28.314" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 20:20:28.314" endtime="20230915 20:20:28.314"/>
</kw>
<status status="PASS" starttime="20230915 20:20:28.300" endtime="20230915 20:20:28.315"/>
</kw>
<msg timestamp="20230915 20:20:28.315" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 20:20:28.299" endtime="20230915 20:20:28.315"/>
</kw>
<msg timestamp="20230915 20:20:28.315" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230915 20:20:28.299" endtime="20230915 20:20:28.315"/>
</kw>
<msg timestamp="20230915 20:20:28.315" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230915 20:20:28.298" endtime="20230915 20:20:28.315"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230915 20:20:28.316" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230915 20:20:28.315" endtime="20230915 20:20:28.316"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 20:20:28.321" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 20:20:28.549" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 20:20:28.549" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230915 20:20:28.318" endtime="20230915 20:20:28.549"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 20:20:28.551" level="INFO"/>
<status status="PASS" starttime="20230915 20:20:28.550" endtime="20230915 20:20:28.551"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 20:20:28.552" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 20:20:28.551" endtime="20230915 20:20:28.552"/>
</kw>
<status status="PASS" starttime="20230915 20:20:28.318" endtime="20230915 20:20:28.553"/>
</kw>
<msg timestamp="20230915 20:20:28.553" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 20:20:28.317" endtime="20230915 20:20:28.553"/>
</kw>
<status status="PASS" starttime="20230915 20:20:28.317" endtime="20230915 20:20:28.553"/>
</kw>
<status status="PASS" starttime="20230915 20:20:28.316" endtime="20230915 20:20:28.553"/>
</kw>
<status status="PASS" starttime="20230915 20:20:28.297" endtime="20230915 20:20:28.553"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20230915 20:20:28.295" endtime="20230915 20:20:28.553"/>
</test>
<doc>Kinit test user</doc>
<status status="PASS" starttime="20230915 20:20:28.190" endtime="20230915 20:20:28.557"/>
</suite>
<suite id="s1-s2" name="Scm-Leader-Transfer" source="/opt/hadoop/smoketest/scmha/scm-leader-transfer.robot">
<test id="s1-s2-t1" name="Transfer Leadership" line="47">
<kw name="Get SCM Leader Node">
<var>${leaderSCM}</var>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin scm roles --service-id=scmservice</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 20:20:46.962" level="INFO">Running command 'ozone admin scm roles --service-id=scmservice 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 20:20:55.259" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 20:20:55.259" level="INFO">${output} = scm1.org:9894:LEADER:4f4f6bf2-4e5c-452e-91d1-f08f37034a8e:172.25.0.116
scm2.org:9894:FOLLOWER:49a1a242-8a71-4366-b94d-a4e0c824d0dd:172.25.0.117
scm3.org:9894:FOLLOWER:b6d5800a-a8c9-41c6-b053-59fead19e...</msg>
<status status="PASS" starttime="20230915 20:20:46.956" endtime="20230915 20:20:55.259"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 20:20:55.261" level="INFO">scm1.org:9894:LEADER:4f4f6bf2-4e5c-452e-91d1-f08f37034a8e:172.25.0.116
scm2.org:9894:FOLLOWER:49a1a242-8a71-4366-b94d-a4e0c824d0dd:172.25.0.117
scm3.org:9894:FOLLOWER:b6d5800a-a8c9-41c6-b053-59fead19ea5f:172.25.0.118</msg>
<status status="PASS" starttime="20230915 20:20:55.259" endtime="20230915 20:20:55.261"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 20:20:55.261" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 20:20:55.261" endtime="20230915 20:20:55.262"/>
</kw>
<status status="PASS" starttime="20230915 20:20:46.956" endtime="20230915 20:20:55.262"/>
</kw>
<msg timestamp="20230915 20:20:55.262" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 20:20:46.955" endtime="20230915 20:20:55.262"/>
</kw>
<msg timestamp="20230915 20:20:55.262" level="INFO">${result} = scm1.org:9894:LEADER:4f4f6bf2-4e5c-452e-91d1-f08f37034a8e:172.25.0.116
scm2.org:9894:FOLLOWER:49a1a242-8a71-4366-b94d-a4e0c824d0dd:172.25.0.117
scm3.org:9894:FOLLOWER:b6d5800a-a8c9-41c6-b053-59fead19e...</msg>
<status status="PASS" starttime="20230915 20:20:46.954" endtime="20230915 20:20:55.262"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 20:20:55.263" level="INFO">scm1.org:9894:LEADER:4f4f6bf2-4e5c-452e-91d1-f08f37034a8e:172.25.0.116
scm2.org:9894:FOLLOWER:49a1a242-8a71-4366-b94d-a4e0c824d0dd:172.25.0.117
scm3.org:9894:FOLLOWER:b6d5800a-a8c9-41c6-b053-59fead19ea5f:172.25.0.118</msg>
<status status="PASS" starttime="20230915 20:20:55.263" endtime="20230915 20:20:55.263"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>LEADER</arg>
<arg>1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 20:20:55.263" endtime="20230915 20:20:55.264"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>FOLLOWER</arg>
<arg>2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 20:20:55.264" endtime="20230915 20:20:55.264"/>
</kw>
<kw name="Get Lines Containing String" library="String">
<var>${scmLine}</var>
<arg>${result}</arg>
<arg>LEADER</arg>
<doc>Returns lines of the given ``string`` that contain the ``pattern``.</doc>
<msg timestamp="20230915 20:20:55.265" level="INFO">1 out of 3 lines matched</msg>
<msg timestamp="20230915 20:20:55.265" level="INFO">${scmLine} = scm1.org:9894:LEADER:4f4f6bf2-4e5c-452e-91d1-f08f37034a8e:172.25.0.116</msg>
<status status="PASS" starttime="20230915 20:20:55.265" endtime="20230915 20:20:55.265"/>
</kw>
<kw name="Split String" library="String">
<var>${splits}</var>
<arg>${scmLine}</arg>
<arg>:</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20230915 20:20:55.266" level="INFO">${splits} = ['scm1.org', '9894', 'LEADER', '4f4f6bf2-4e5c-452e-91d1-f08f37034a8e', '172.25.0.116']</msg>
<status status="PASS" starttime="20230915 20:20:55.265" endtime="20230915 20:20:55.266"/>
</kw>
<kw name="Strip String" library="String">
<var>${leaderSCM}</var>
<arg>${splits[3]}</arg>
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<msg timestamp="20230915 20:20:55.267" level="INFO">${leaderSCM} = 4f4f6bf2-4e5c-452e-91d1-f08f37034a8e</msg>
<status status="PASS" starttime="20230915 20:20:55.266" endtime="20230915 20:20:55.268"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Leader SCM: ${leaderSCM}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 20:20:55.268" level="INFO">Leader SCM: 4f4f6bf2-4e5c-452e-91d1-f08f37034a8e</msg>
<status status="PASS" starttime="20230915 20:20:55.268" endtime="20230915 20:20:55.268"/>
</kw>
<msg timestamp="20230915 20:20:55.269" level="INFO">${leaderSCM} = 4f4f6bf2-4e5c-452e-91d1-f08f37034a8e</msg>
<status status="PASS" starttime="20230915 20:20:46.954" endtime="20230915 20:20:55.269"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Leader SCM: ${leaderSCM}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 20:20:55.270" level="INFO">Leader SCM: 4f4f6bf2-4e5c-452e-91d1-f08f37034a8e</msg>
<status status="PASS" starttime="20230915 20:20:55.269" endtime="20230915 20:20:55.270"/>
</kw>
<kw name="Get SCM UUID">
<var>${target_scm_uuid}</var>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin scm roles --service-id=scmservice</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 20:20:55.276" level="INFO">Running command 'ozone admin scm roles --service-id=scmservice 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 20:21:03.269" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 20:21:03.269" level="INFO">${output} = scm1.org:9894:LEADER:4f4f6bf2-4e5c-452e-91d1-f08f37034a8e:172.25.0.116
scm2.org:9894:FOLLOWER:49a1a242-8a71-4366-b94d-a4e0c824d0dd:172.25.0.117
scm3.org:9894:FOLLOWER:b6d5800a-a8c9-41c6-b053-59fead19e...</msg>
<status status="PASS" starttime="20230915 20:20:55.272" endtime="20230915 20:21:03.269"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 20:21:03.273" level="INFO">scm1.org:9894:LEADER:4f4f6bf2-4e5c-452e-91d1-f08f37034a8e:172.25.0.116
scm2.org:9894:FOLLOWER:49a1a242-8a71-4366-b94d-a4e0c824d0dd:172.25.0.117
scm3.org:9894:FOLLOWER:b6d5800a-a8c9-41c6-b053-59fead19ea5f:172.25.0.118</msg>
<status status="PASS" starttime="20230915 20:21:03.270" endtime="20230915 20:21:03.274"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 20:21:03.274" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 20:21:03.274" endtime="20230915 20:21:03.278"/>
</kw>
<status status="PASS" starttime="20230915 20:20:55.271" endtime="20230915 20:21:03.278"/>
</kw>
<msg timestamp="20230915 20:21:03.278" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 20:20:55.271" endtime="20230915 20:21:03.278"/>
</kw>
<msg timestamp="20230915 20:21:03.279" level="INFO">${result} = scm1.org:9894:LEADER:4f4f6bf2-4e5c-452e-91d1-f08f37034a8e:172.25.0.116
scm2.org:9894:FOLLOWER:49a1a242-8a71-4366-b94d-a4e0c824d0dd:172.25.0.117
scm3.org:9894:FOLLOWER:b6d5800a-a8c9-41c6-b053-59fead19e...</msg>
<status status="PASS" starttime="20230915 20:20:55.270" endtime="20230915 20:21:03.279"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 20:21:03.281" level="INFO">scm1.org:9894:LEADER:4f4f6bf2-4e5c-452e-91d1-f08f37034a8e:172.25.0.116
scm2.org:9894:FOLLOWER:49a1a242-8a71-4366-b94d-a4e0c824d0dd:172.25.0.117
scm3.org:9894:FOLLOWER:b6d5800a-a8c9-41c6-b053-59fead19ea5f:172.25.0.118</msg>
<status status="PASS" starttime="20230915 20:21:03.281" endtime="20230915 20:21:03.282"/>
</kw>
<kw name="Get Lines Containing String" library="String">
<var>${scm_line}</var>
<arg>${result}</arg>
<arg>${TARGET_SCM}</arg>
<doc>Returns lines of the given ``string`` that contain the ``pattern``.</doc>
<msg timestamp="20230915 20:21:03.285" level="INFO">1 out of 3 lines matched</msg>
<msg timestamp="20230915 20:21:03.285" level="INFO">${scm_line} = scm2.org:9894:FOLLOWER:49a1a242-8a71-4366-b94d-a4e0c824d0dd:172.25.0.117</msg>
<status status="PASS" starttime="20230915 20:21:03.282" endtime="20230915 20:21:03.285"/>
</kw>
<kw name="Split String" library="String">
<var>${scm_split}</var>
<arg>${scm_line}</arg>
<arg>:</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20230915 20:21:03.287" level="INFO">${scm_split} = ['scm2.org', '9894', 'FOLLOWER', '49a1a242-8a71-4366-b94d-a4e0c824d0dd', '172.25.0.117']</msg>
<status status="PASS" starttime="20230915 20:21:03.286" endtime="20230915 20:21:03.287"/>
</kw>
<kw name="Strip String" library="String">
<var>${scm_uuid}</var>
<arg>${scm_split[3]}</arg>
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<msg timestamp="20230915 20:21:03.290" level="INFO">${scm_uuid} = 49a1a242-8a71-4366-b94d-a4e0c824d0dd</msg>
<status status="PASS" starttime="20230915 20:21:03.287" endtime="20230915 20:21:03.290"/>
</kw>
<msg timestamp="20230915 20:21:03.291" level="INFO">${target_scm_uuid} = 49a1a242-8a71-4366-b94d-a4e0c824d0dd</msg>
<status status="PASS" starttime="20230915 20:20:55.270" endtime="20230915 20:21:03.291"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin scm transfer --service-id=scmservice -n ${target_scm_uuid}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 20:21:03.301" level="INFO">Running command 'ozone admin scm transfer --service-id=scmservice -n 49a1a242-8a71-4366-b94d-a4e0c824d0dd 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 20:21:12.379" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 20:21:12.379" level="INFO">${output} = Transfer leadership successfully to 49a1a242-8a71-4366-b94d-a4e0c824d0dd.</msg>
<status status="PASS" starttime="20230915 20:21:03.295" endtime="20230915 20:21:12.379"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 20:21:12.381" level="INFO">Transfer leadership successfully to 49a1a242-8a71-4366-b94d-a4e0c824d0dd.</msg>
<status status="PASS" starttime="20230915 20:21:12.380" endtime="20230915 20:21:12.381"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 20:21:12.382" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 20:21:12.381" endtime="20230915 20:21:12.382"/>
</kw>
<status status="PASS" starttime="20230915 20:21:03.294" endtime="20230915 20:21:12.382"/>
</kw>
<msg timestamp="20230915 20:21:12.382" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 20:21:03.293" endtime="20230915 20:21:12.383"/>
</kw>
<msg timestamp="20230915 20:21:12.383" level="INFO">${result} = Transfer leadership successfully to 49a1a242-8a71-4366-b94d-a4e0c824d0dd.</msg>
<status status="PASS" starttime="20230915 20:21:03.291" endtime="20230915 20:21:12.383"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 20:21:12.384" level="INFO">Transfer leadership successfully to 49a1a242-8a71-4366-b94d-a4e0c824d0dd.</msg>
<status status="PASS" starttime="20230915 20:21:12.383" endtime="20230915 20:21:12.384"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Transfer leadership successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 20:21:12.384" endtime="20230915 20:21:12.385"/>
</kw>
<kw name="Get SCM Leader Node">
<var>${newLeaderSCM}</var>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin scm roles --service-id=scmservice</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 20:21:12.392" level="INFO">Running command 'ozone admin scm roles --service-id=scmservice 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 20:21:24.851" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 20:21:24.851" level="INFO">${output} = scm1.org:9894:FOLLOWER:4f4f6bf2-4e5c-452e-91d1-f08f37034a8e:172.25.0.116
scm2.org:9894:LEADER:49a1a242-8a71-4366-b94d-a4e0c824d0dd:172.25.0.117
scm3.org:9894:FOLLOWER:b6d5800a-a8c9-41c6-b053-59fead19e...</msg>
<status status="PASS" starttime="20230915 20:21:12.388" endtime="20230915 20:21:24.851"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 20:21:24.853" level="INFO">scm1.org:9894:FOLLOWER:4f4f6bf2-4e5c-452e-91d1-f08f37034a8e:172.25.0.116
scm2.org:9894:LEADER:49a1a242-8a71-4366-b94d-a4e0c824d0dd:172.25.0.117
scm3.org:9894:FOLLOWER:b6d5800a-a8c9-41c6-b053-59fead19ea5f:172.25.0.118</msg>
<status status="PASS" starttime="20230915 20:21:24.852" endtime="20230915 20:21:24.853"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 20:21:24.854" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 20:21:24.853" endtime="20230915 20:21:24.854"/>
</kw>
<status status="PASS" starttime="20230915 20:21:12.387" endtime="20230915 20:21:24.855"/>
</kw>
<msg timestamp="20230915 20:21:24.855" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 20:21:12.386" endtime="20230915 20:21:24.855"/>
</kw>
<msg timestamp="20230915 20:21:24.855" level="INFO">${result} = scm1.org:9894:FOLLOWER:4f4f6bf2-4e5c-452e-91d1-f08f37034a8e:172.25.0.116
scm2.org:9894:LEADER:49a1a242-8a71-4366-b94d-a4e0c824d0dd:172.25.0.117
scm3.org:9894:FOLLOWER:b6d5800a-a8c9-41c6-b053-59fead19e...</msg>
<status status="PASS" starttime="20230915 20:21:12.386" endtime="20230915 20:21:24.855"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 20:21:24.856" level="INFO">scm1.org:9894:FOLLOWER:4f4f6bf2-4e5c-452e-91d1-f08f37034a8e:172.25.0.116
scm2.org:9894:LEADER:49a1a242-8a71-4366-b94d-a4e0c824d0dd:172.25.0.117
scm3.org:9894:FOLLOWER:b6d5800a-a8c9-41c6-b053-59fead19ea5f:172.25.0.118</msg>
<status status="PASS" starttime="20230915 20:21:24.856" endtime="20230915 20:21:24.856"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>LEADER</arg>
<arg>1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 20:21:24.856" endtime="20230915 20:21:24.857"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>FOLLOWER</arg>
<arg>2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 20:21:24.857" endtime="20230915 20:21:24.858"/>
</kw>
<kw name="Get Lines Containing String" library="String">
<var>${scmLine}</var>
<arg>${result}</arg>
<arg>LEADER</arg>
<doc>Returns lines of the given ``string`` that contain the ``pattern``.</doc>
<msg timestamp="20230915 20:21:24.858" level="INFO">1 out of 3 lines matched</msg>
<msg timestamp="20230915 20:21:24.859" level="INFO">${scmLine} = scm2.org:9894:LEADER:49a1a242-8a71-4366-b94d-a4e0c824d0dd:172.25.0.117</msg>
<status status="PASS" starttime="20230915 20:21:24.858" endtime="20230915 20:21:24.859"/>
</kw>
<kw name="Split String" library="String">
<var>${splits}</var>
<arg>${scmLine}</arg>
<arg>:</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20230915 20:21:24.859" level="INFO">${splits} = ['scm2.org', '9894', 'LEADER', '49a1a242-8a71-4366-b94d-a4e0c824d0dd', '172.25.0.117']</msg>
<status status="PASS" starttime="20230915 20:21:24.859" endtime="20230915 20:21:24.859"/>
</kw>
<kw name="Strip String" library="String">
<var>${leaderSCM}</var>
<arg>${splits[3]}</arg>
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<msg timestamp="20230915 20:21:24.861" level="INFO">${leaderSCM} = 49a1a242-8a71-4366-b94d-a4e0c824d0dd</msg>
<status status="PASS" starttime="20230915 20:21:24.860" endtime="20230915 20:21:24.861"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Leader SCM: ${leaderSCM}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 20:21:24.862" level="INFO">Leader SCM: 49a1a242-8a71-4366-b94d-a4e0c824d0dd</msg>
<status status="PASS" starttime="20230915 20:21:24.861" endtime="20230915 20:21:24.862"/>
</kw>
<msg timestamp="20230915 20:21:24.862" level="INFO">${newLeaderSCM} = 49a1a242-8a71-4366-b94d-a4e0c824d0dd</msg>
<status status="PASS" starttime="20230915 20:21:12.385" endtime="20230915 20:21:24.862"/>
</kw>
<kw name="Should Not Be Equal" library="BuiltIn">
<arg>${leaderSCM}</arg>
<arg>${newLeaderSCM}</arg>
<doc>Fails if the given objects are equal.</doc>
<status status="PASS" starttime="20230915 20:21:24.862" endtime="20230915 20:21:24.863"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230915 20:20:46.952" endtime="20230915 20:21:24.863"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20230915 20:20:46.886" endtime="20230915 20:21:24.866"/>
</suite>
<suite id="s1-s3" name="Root-Ca-Rotation-Client-Checks" source="/opt/hadoop/smoketest/certrotation/root-ca-rotation-client-checks.robot">
<test id="s1-s3-t1" name="Create a volume and bucket" line="27">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 20:21:33.639" level="INFO">Running command 'ozone sh volume create rootca-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 20:21:43.776" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 20:21:43.776" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230915 20:21:33.630" endtime="20230915 20:21:43.776"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 20:21:43.778" level="INFO"/>
<status status="PASS" starttime="20230915 20:21:43.776" endtime="20230915 20:21:43.780"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 20:21:43.781" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 20:21:43.780" endtime="20230915 20:21:43.783"/>
</kw>
<status status="PASS" starttime="20230915 20:21:33.628" endtime="20230915 20:21:43.784"/>
</kw>
<msg timestamp="20230915 20:21:43.784" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 20:21:33.627" endtime="20230915 20:21:43.784"/>
</kw>
<msg timestamp="20230915 20:21:43.784" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230915 20:21:33.624" endtime="20230915 20:21:43.784"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 20:21:43.787" endtime="20230915 20:21:43.787"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 20:21:43.796" level="INFO">Running command 'ozone sh bucket create /rootca-volume/rootca-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 20:22:02.647" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 20:22:02.648" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230915 20:21:43.792" endtime="20230915 20:22:02.648"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 20:22:02.650" level="INFO"/>
<status status="PASS" starttime="20230915 20:22:02.648" endtime="20230915 20:22:02.650"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 20:22:02.651" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 20:22:02.650" endtime="20230915 20:22:02.651"/>
</kw>
<status status="PASS" starttime="20230915 20:21:43.790" endtime="20230915 20:22:02.651"/>
</kw>
<msg timestamp="20230915 20:22:02.651" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 20:21:43.790" endtime="20230915 20:22:02.651"/>
</kw>
<msg timestamp="20230915 20:22:02.652" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230915 20:21:43.787" endtime="20230915 20:22:02.652"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 20:22:02.652" endtime="20230915 20:22:02.652"/>
</kw>
<tag>create-volume-and-bucket</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230915 20:21:33.621" endtime="20230915 20:22:02.653"/>
</test>
<test id="s1-s3-t2" name="Create key" line="34">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 20:22:02.660" level="INFO">Running command 'echo "rootca: key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20230915 20:22:02.664" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 20:22:02.664" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230915 20:22:02.656" endtime="20230915 20:22:02.664"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 20:22:02.666" level="INFO"/>
<status status="PASS" starttime="20230915 20:22:02.665" endtime="20230915 20:22:02.666"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 20:22:02.667" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 20:22:02.666" endtime="20230915 20:22:02.667"/>
</kw>
<status status="PASS" starttime="20230915 20:22:02.656" endtime="20230915 20:22:02.667"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 20:22:02.674" level="INFO">Running command 'ozone sh key put /rootca-volume/rootca-bucket/rootca-key /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 20:22:22.145" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 20:22:22.145" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230915 20:22:02.670" endtime="20230915 20:22:22.145"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 20:22:22.160" level="INFO"/>
<status status="PASS" starttime="20230915 20:22:22.155" endtime="20230915 20:22:22.160"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 20:22:22.170" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 20:22:22.161" endtime="20230915 20:22:22.170"/>
</kw>
<status status="PASS" starttime="20230915 20:22:02.669" endtime="20230915 20:22:22.172"/>
</kw>
<msg timestamp="20230915 20:22:22.173" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 20:22:02.669" endtime="20230915 20:22:22.173"/>
</kw>
<msg timestamp="20230915 20:22:22.173" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230915 20:22:02.667" endtime="20230915 20:22:22.173"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 20:22:22.181" endtime="20230915 20:22:22.182"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 20:22:22.239" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 20:22:22.247" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 20:22:22.255" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230915 20:22:22.191" endtime="20230915 20:22:22.255"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 20:22:22.266" level="INFO"/>
<status status="PASS" starttime="20230915 20:22:22.256" endtime="20230915 20:22:22.274"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 20:22:22.281" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 20:22:22.274" endtime="20230915 20:22:22.282"/>
</kw>
<status status="PASS" starttime="20230915 20:22:22.187" endtime="20230915 20:22:22.282"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230915 20:22:02.655" endtime="20230915 20:22:22.288"/>
</test>
<test id="s1-s3-t3" name="Read data from previously created key" line="40">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230915 20:22:22.307" level="INFO">${random} = 14470</msg>
<status status="PASS" starttime="20230915 20:22:22.304" endtime="20230915 20:22:22.307"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 20:22:22.321" level="INFO">Running command 'ozone sh key get /rootca-volume/rootca-bucket/rootca-key /tmp/key-14470 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 20:22:35.018" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 20:22:35.018" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230915 20:22:22.313" endtime="20230915 20:22:35.018"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 20:22:35.020" level="INFO"/>
<status status="PASS" starttime="20230915 20:22:35.019" endtime="20230915 20:22:35.020"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 20:22:35.021" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 20:22:35.020" endtime="20230915 20:22:35.021"/>
</kw>
<status status="PASS" starttime="20230915 20:22:22.311" endtime="20230915 20:22:35.021"/>
</kw>
<msg timestamp="20230915 20:22:35.021" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 20:22:22.310" endtime="20230915 20:22:35.022"/>
</kw>
<msg timestamp="20230915 20:22:35.022" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230915 20:22:22.307" endtime="20230915 20:22:35.022"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 20:22:35.022" endtime="20230915 20:22:35.023"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 20:22:35.027" level="INFO">Running command 'cat /tmp/key-14470 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 20:22:35.032" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 20:22:35.032" level="INFO">${output} = rootca: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230915 20:22:35.024" endtime="20230915 20:22:35.032"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 20:22:35.034" level="INFO">rootca: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230915 20:22:35.033" endtime="20230915 20:22:35.034"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 20:22:35.035" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 20:22:35.034" endtime="20230915 20:22:35.035"/>
</kw>
<msg timestamp="20230915 20:22:35.035" level="INFO">${output} = rootca: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230915 20:22:35.023" endtime="20230915 20:22:35.035"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 20:22:35.036" endtime="20230915 20:22:35.036"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 20:22:35.040" level="INFO">Running command 'rm /tmp/key-14470 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 20:22:35.045" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 20:22:35.045" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230915 20:22:35.037" endtime="20230915 20:22:35.045"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 20:22:35.046" level="INFO"/>
<status status="PASS" starttime="20230915 20:22:35.045" endtime="20230915 20:22:35.046"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 20:22:35.047" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 20:22:35.046" endtime="20230915 20:22:35.047"/>
</kw>
<status status="PASS" starttime="20230915 20:22:35.036" endtime="20230915 20:22:35.047"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230915 20:22:22.299" endtime="20230915 20:22:35.048"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20230915 20:21:33.487" endtime="20230915 20:22:35.050"/>
</suite>
<suite id="s1-s4" name="Pipeline" source="/opt/hadoop/smoketest/admincli/pipeline.robot">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 20:23:01.928" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 20:23:01.934" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 20:23:01.934" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230915 20:23:01.923" endtime="20230915 20:23:01.934"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 20:23:01.936" level="INFO">scm</msg>
<status status="PASS" starttime="20230915 20:23:01.935" endtime="20230915 20:23:01.936"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 20:23:01.936" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 20:23:01.936" endtime="20230915 20:23:01.937"/>
</kw>
<status status="PASS" starttime="20230915 20:23:01.923" endtime="20230915 20:23:01.937"/>
</kw>
<msg timestamp="20230915 20:23:01.937" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 20:23:01.922" endtime="20230915 20:23:01.937"/>
</kw>
<msg timestamp="20230915 20:23:01.937" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230915 20:23:01.922" endtime="20230915 20:23:01.937"/>
</kw>
<msg timestamp="20230915 20:23:01.938" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230915 20:23:01.921" endtime="20230915 20:23:01.938"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230915 20:23:01.938" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230915 20:23:01.938" endtime="20230915 20:23:01.938"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 20:23:01.944" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 20:23:02.066" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 20:23:02.067" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230915 20:23:01.941" endtime="20230915 20:23:02.067"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 20:23:02.068" level="INFO"/>
<status status="PASS" starttime="20230915 20:23:02.067" endtime="20230915 20:23:02.068"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 20:23:02.069" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 20:23:02.068" endtime="20230915 20:23:02.069"/>
</kw>
<status status="PASS" starttime="20230915 20:23:01.940" endtime="20230915 20:23:02.069"/>
</kw>
<msg timestamp="20230915 20:23:02.069" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 20:23:01.940" endtime="20230915 20:23:02.070"/>
</kw>
<status status="PASS" starttime="20230915 20:23:01.939" endtime="20230915 20:23:02.070"/>
</kw>
<status status="PASS" starttime="20230915 20:23:01.939" endtime="20230915 20:23:02.070"/>
</kw>
<status status="PASS" starttime="20230915 20:23:01.921" endtime="20230915 20:23:02.070"/>
</kw>
<status status="PASS" starttime="20230915 20:23:01.919" endtime="20230915 20:23:02.070"/>
</kw>
<test id="s1-s4-t1" name="Create pipeline" line="28">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin pipeline create</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 20:23:02.077" level="INFO">Running command 'ozone admin pipeline create 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 20:23:11.028" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 20:23:11.028" level="INFO">${output} = PipelineID=751dcdcb-2f00-4d65-9190-41afe7693058 is created. Pipeline[ Id: 751dcdcb-2f00-4d65-9190-41afe7693058, Nodes: b23307c5-dd93-4572-a401-d0995d26fcac(ozonesecure-ha_datanode1_1.ozonesecure-ha_oz...</msg>
<status status="PASS" starttime="20230915 20:23:02.073" endtime="20230915 20:23:11.028"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 20:23:11.029" level="INFO">PipelineID=751dcdcb-2f00-4d65-9190-41afe7693058 is created. Pipeline[ Id: 751dcdcb-2f00-4d65-9190-41afe7693058, Nodes: b23307c5-dd93-4572-a401-d0995d26fcac(ozonesecure-ha_datanode1_1.ozonesecure-ha_ozone_net/172.25.0.102), ReplicationConfig: STANDALONE/ONE, State:OPEN, leaderId:, CreationTimestamp2023-09-15T20:23:10.403Z[UTC]]</msg>
<status status="PASS" starttime="20230915 20:23:11.028" endtime="20230915 20:23:11.029"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 20:23:11.030" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 20:23:11.029" endtime="20230915 20:23:11.030"/>
</kw>
<status status="PASS" starttime="20230915 20:23:02.072" endtime="20230915 20:23:11.030"/>
</kw>
<msg timestamp="20230915 20:23:11.030" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 20:23:02.072" endtime="20230915 20:23:11.031"/>
</kw>
<msg timestamp="20230915 20:23:11.031" level="INFO">${output} = PipelineID=751dcdcb-2f00-4d65-9190-41afe7693058 is created. Pipeline[ Id: 751dcdcb-2f00-4d65-9190-41afe7693058, Nodes: b23307c5-dd93-4572-a401-d0995d26fcac(ozonesecure-ha_datanode1_1.ozonesecure-ha_oz...</msg>
<status status="PASS" starttime="20230915 20:23:02.071" endtime="20230915 20:23:11.031"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>is created.</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 20:23:11.031" endtime="20230915 20:23:11.032"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>STANDALONE/ONE</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 20:23:11.032" endtime="20230915 20:23:11.032"/>
</kw>
<kw name="Execute" library="os">
<var>${pipeline}</var>
<arg>echo "${output}" | grep 'is created' | cut -f1 -d' ' | cut -f2 -d'='</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 20:23:11.039" level="INFO">Running command 'echo "PipelineID=751dcdcb-2f00-4d65-9190-41afe7693058 is created. Pipeline[ Id: 751dcdcb-2f00-4d65-9190-41afe7693058, Nodes: b23307c5-dd93-4572-a401-d0995d26fcac(ozonesecure-ha_datanode1_1.ozonesecure-ha_ozone_net/172.25.0.102), ReplicationConfig: STANDALONE/ONE, State:OPEN, leaderId:, CreationTimestamp2023-09-15T20:23:10.403Z[UTC]]" | grep 'is created' | cut -f1 -d' ' | cut -f2 -d'=' 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 20:23:11.044" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 20:23:11.044" level="INFO">${output} = 751dcdcb-2f00-4d65-9190-41afe7693058</msg>
<status status="PASS" starttime="20230915 20:23:11.035" endtime="20230915 20:23:11.044"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 20:23:11.046" level="INFO">751dcdcb-2f00-4d65-9190-41afe7693058</msg>
<status status="PASS" starttime="20230915 20:23:11.045" endtime="20230915 20:23:11.046"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 20:23:11.047" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 20:23:11.047" endtime="20230915 20:23:11.047"/>
</kw>
<status status="PASS" starttime="20230915 20:23:11.034" endtime="20230915 20:23:11.048"/>
</kw>
<msg timestamp="20230915 20:23:11.048" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 20:23:11.034" endtime="20230915 20:23:11.048"/>
</kw>
<msg timestamp="20230915 20:23:11.048" level="INFO">${pipeline} = 751dcdcb-2f00-4d65-9190-41afe7693058</msg>
<status status="PASS" starttime="20230915 20:23:11.033" endtime="20230915 20:23:11.048"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${PIPELINE}</arg>
<arg>${pipeline}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230915 20:23:11.049" level="INFO">${PIPELINE} = 751dcdcb-2f00-4d65-9190-41afe7693058</msg>
<status status="PASS" starttime="20230915 20:23:11.049" endtime="20230915 20:23:11.049"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230915 20:23:02.070" endtime="20230915 20:23:11.050"/>
</test>
<test id="s1-s4-t2" name="List pipelines" line="35">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin pipeline list</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 20:23:11.057" level="INFO">Running command 'ozone admin pipeline list 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 20:23:21.107" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 20:23:21.108" level="INFO">${output} = Pipeline[ Id: 254712e3-d0ca-4241-b91f-ee97dc4d9e4a, Nodes: 9de21ffc-39c0-406d-8c6b-a929856c7f33(ozonesecure-ha_datanode3_1.ozonesecure-ha_ozone_net/172.25.0.104), ReplicationConfig: RATIS/ONE, State:O...</msg>
<status status="PASS" starttime="20230915 20:23:11.054" endtime="20230915 20:23:21.108"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 20:23:21.110" level="INFO">Pipeline[ Id: 254712e3-d0ca-4241-b91f-ee97dc4d9e4a, Nodes: 9de21ffc-39c0-406d-8c6b-a929856c7f33(ozonesecure-ha_datanode3_1.ozonesecure-ha_ozone_net/172.25.0.104), ReplicationConfig: RATIS/ONE, State:OPEN, leaderId:9de21ffc-39c0-406d-8c6b-a929856c7f33, CreationTimestamp2023-09-15T20:18:41.687Z[UTC]]
Pipeline[ Id: 5e21aae7-b64f-4ed3-98e5-d4a0b1bbb964, Nodes: b23307c5-dd93-4572-a401-d0995d26fcac(ozonesecure-ha_datanode1_1.ozonesecure-ha_ozone_net/172.25.0.102), ReplicationConfig: RATIS/ONE, State:OPEN, leaderId:b23307c5-dd93-4572-a401-d0995d26fcac, CreationTimestamp2023-09-15T20:18:43.239Z[UTC]]
Pipeline[ Id: 33539a65-1499-48c3-952d-e4e60f6c85ac, Nodes: 9de21ffc-39c0-406d-8c6b-a929856c7f33(ozonesecure-ha_datanode3_1.ozonesecure-ha_ozone_net/172.25.0.104)44fb1de7-81de-440d-96f5-aad5868e221e(ozonesecure-ha_datanode2_1.ozonesecure-ha_ozone_net/172.25.0.103)b23307c5-dd93-4572-a401-d0995d26fcac(ozonesecure-ha_datanode1_1.ozonesecure-ha_ozone_net/172.25.0.102), ReplicationConfig: RATIS/THREE, State:OPEN, leaderId:b23307c5-dd93-4572-a401-d0995d26fcac, CreationTimestamp2023-09-15T20:18:43.297Z[UTC]]
Pipeline[ Id: 14df9748-0392-40b2-a81e-fe0f65adfba1, Nodes: 44fb1de7-81de-440d-96f5-aad5868e221e(ozonesecure-ha_datanode2_1.ozonesecure-ha_ozone_net/172.25.0.103), ReplicationConfig: RATIS/ONE, State:OPEN, leaderId:44fb1de7-81de-440d-96f5-aad5868e221e, CreationTimestamp2023-09-15T20:18:34.813Z[UTC]]
Pipeline[ Id: b1592bcf-d05d-46c5-bd20-c443bf86be61, Nodes: 9de21ffc-39c0-406d-8c6b-a929856c7f33(ozonesecure-ha_datanode3_1.ozonesecure-ha_ozone_net/172.25.0.104)b23307c5-dd93-4572-a401-d0995d26fcac(ozonesecure-ha_datanode1_1.ozonesecure-ha_ozone_net/172.25.0.102)44fb1de7-81de-440d-96f5-aad5868e221e(ozonesecure-ha_datanode2_1.ozonesecure-ha_ozone_net/172.25.0.103), ReplicationConfig: RATIS/THREE, State:OPEN, leaderId:9de21ffc-39c0-406d-8c6b-a929856c7f33, CreationTimestamp2023-09-15T20:18:43.475Z[UTC]]
Pipeline[ Id: 751dcdcb-2f00-4d65-9190-41afe7693058, Nodes: b23307c5-dd93-4572-a401-d0995d26fcac(ozonesecure-ha_datanode1_1.ozonesecure-ha_ozone_net/172.25.0.102), ReplicationConfig: STANDALONE/ONE, State:OPEN, leaderId:, CreationTimestamp2023-09-15T20:23:10.403Z[UTC]]</msg>
<status status="PASS" starttime="20230915 20:23:21.109" endtime="20230915 20:23:21.110"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 20:23:21.111" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 20:23:21.110" endtime="20230915 20:23:21.112"/>
</kw>
<status status="PASS" starttime="20230915 20:23:11.053" endtime="20230915 20:23:21.112"/>
</kw>
<msg timestamp="20230915 20:23:21.112" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 20:23:11.053" endtime="20230915 20:23:21.113"/>
</kw>
<msg timestamp="20230915 20:23:21.113" level="INFO">${output} = Pipeline[ Id: 254712e3-d0ca-4241-b91f-ee97dc4d9e4a, Nodes: 9de21ffc-39c0-406d-8c6b-a929856c7f33(ozonesecure-ha_datanode3_1.ozonesecure-ha_ozone_net/172.25.0.104), ReplicationConfig: RATIS/ONE, State:O...</msg>
<status status="PASS" starttime="20230915 20:23:11.052" endtime="20230915 20:23:21.113"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>STANDALONE/ONE</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 20:23:21.113" endtime="20230915 20:23:21.114"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230915 20:23:11.051" endtime="20230915 20:23:21.114"/>
</test>
<test id="s1-s4-t3" name="List pipelines with explicit host" line="39">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin pipeline list --scm ${SCM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 20:23:21.125" level="INFO">Running command 'ozone admin pipeline list --scm scm1.org 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 20:23:29.078" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 20:23:29.078" level="INFO">${output} = Pipeline[ Id: 254712e3-d0ca-4241-b91f-ee97dc4d9e4a, Nodes: 9de21ffc-39c0-406d-8c6b-a929856c7f33(ozonesecure-ha_datanode3_1.ozonesecure-ha_ozone_net/172.25.0.104), ReplicationConfig: RATIS/ONE, State:O...</msg>
<status status="PASS" starttime="20230915 20:23:21.121" endtime="20230915 20:23:29.078"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 20:23:29.080" level="INFO">Pipeline[ Id: 254712e3-d0ca-4241-b91f-ee97dc4d9e4a, Nodes: 9de21ffc-39c0-406d-8c6b-a929856c7f33(ozonesecure-ha_datanode3_1.ozonesecure-ha_ozone_net/172.25.0.104), ReplicationConfig: RATIS/ONE, State:OPEN, leaderId:9de21ffc-39c0-406d-8c6b-a929856c7f33, CreationTimestamp2023-09-15T20:18:41.687Z[UTC]]
Pipeline[ Id: 5e21aae7-b64f-4ed3-98e5-d4a0b1bbb964, Nodes: b23307c5-dd93-4572-a401-d0995d26fcac(ozonesecure-ha_datanode1_1.ozonesecure-ha_ozone_net/172.25.0.102), ReplicationConfig: RATIS/ONE, State:OPEN, leaderId:b23307c5-dd93-4572-a401-d0995d26fcac, CreationTimestamp2023-09-15T20:18:43.239Z[UTC]]
Pipeline[ Id: 33539a65-1499-48c3-952d-e4e60f6c85ac, Nodes: 9de21ffc-39c0-406d-8c6b-a929856c7f33(ozonesecure-ha_datanode3_1.ozonesecure-ha_ozone_net/172.25.0.104)44fb1de7-81de-440d-96f5-aad5868e221e(ozonesecure-ha_datanode2_1.ozonesecure-ha_ozone_net/172.25.0.103)b23307c5-dd93-4572-a401-d0995d26fcac(ozonesecure-ha_datanode1_1.ozonesecure-ha_ozone_net/172.25.0.102), ReplicationConfig: RATIS/THREE, State:OPEN, leaderId:b23307c5-dd93-4572-a401-d0995d26fcac, CreationTimestamp2023-09-15T20:18:43.297Z[UTC]]
Pipeline[ Id: 14df9748-0392-40b2-a81e-fe0f65adfba1, Nodes: 44fb1de7-81de-440d-96f5-aad5868e221e(ozonesecure-ha_datanode2_1.ozonesecure-ha_ozone_net/172.25.0.103), ReplicationConfig: RATIS/ONE, State:OPEN, leaderId:44fb1de7-81de-440d-96f5-aad5868e221e, CreationTimestamp2023-09-15T20:18:34.813Z[UTC]]
Pipeline[ Id: b1592bcf-d05d-46c5-bd20-c443bf86be61, Nodes: 9de21ffc-39c0-406d-8c6b-a929856c7f33(ozonesecure-ha_datanode3_1.ozonesecure-ha_ozone_net/172.25.0.104)b23307c5-dd93-4572-a401-d0995d26fcac(ozonesecure-ha_datanode1_1.ozonesecure-ha_ozone_net/172.25.0.102)44fb1de7-81de-440d-96f5-aad5868e221e(ozonesecure-ha_datanode2_1.ozonesecure-ha_ozone_net/172.25.0.103), ReplicationConfig: RATIS/THREE, State:OPEN, leaderId:9de21ffc-39c0-406d-8c6b-a929856c7f33, CreationTimestamp2023-09-15T20:18:43.475Z[UTC]]
Pipeline[ Id: 751dcdcb-2f00-4d65-9190-41afe7693058, Nodes: b23307c5-dd93-4572-a401-d0995d26fcac(ozonesecure-ha_datanode1_1.ozonesecure-ha_ozone_net/172.25.0.102), ReplicationConfig: STANDALONE/ONE, State:OPEN, leaderId:, CreationTimestamp2023-09-15T20:23:10.403Z[UTC]]</msg>
<status status="PASS" starttime="20230915 20:23:29.079" endtime="20230915 20:23:29.080"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 20:23:29.082" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 20:23:29.080" endtime="20230915 20:23:29.082"/>
</kw>
<status status="PASS" starttime="20230915 20:23:21.119" endtime="20230915 20:23:29.082"/>
</kw>
<msg timestamp="20230915 20:23:29.082" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 20:23:21.119" endtime="20230915 20:23:29.082"/>
</kw>
<msg timestamp="20230915 20:23:29.083" level="INFO">${output} = Pipeline[ Id: 254712e3-d0ca-4241-b91f-ee97dc4d9e4a, Nodes: 9de21ffc-39c0-406d-8c6b-a929856c7f33(ozonesecure-ha_datanode3_1.ozonesecure-ha_ozone_net/172.25.0.104), ReplicationConfig: RATIS/ONE, State:O...</msg>
<status status="PASS" starttime="20230915 20:23:21.118" endtime="20230915 20:23:29.083"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>STANDALONE/ONE</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 20:23:29.083" endtime="20230915 20:23:29.084"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230915 20:23:21.116" endtime="20230915 20:23:29.084"/>
</test>
<test id="s1-s4-t4" name="Deactivate pipeline" line="43">
<kw name="Execute" library="os">
<arg>ozone admin pipeline deactivate "${PIPELINE}"</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 20:23:29.092" level="INFO">Running command 'ozone admin pipeline deactivate "751dcdcb-2f00-4d65-9190-41afe7693058" 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 20:23:37.862" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 20:23:37.862" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230915 20:23:29.088" endtime="20230915 20:23:37.862"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 20:23:37.864" level="INFO"/>
<status status="PASS" starttime="20230915 20:23:37.863" endtime="20230915 20:23:37.864"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 20:23:37.865" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 20:23:37.864" endtime="20230915 20:23:37.865"/>
</kw>
<status status="PASS" starttime="20230915 20:23:29.087" endtime="20230915 20:23:37.865"/>
</kw>
<msg timestamp="20230915 20:23:37.865" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 20:23:29.087" endtime="20230915 20:23:37.866"/>
</kw>
<status status="PASS" starttime="20230915 20:23:29.086" endtime="20230915 20:23:37.866"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin pipeline list | grep "${PIPELINE}"</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 20:23:37.871" level="INFO">Running command 'ozone admin pipeline list | grep "751dcdcb-2f00-4d65-9190-41afe7693058" 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 20:23:45.805" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 20:23:45.806" level="INFO">${output} = Pipeline[ Id: 751dcdcb-2f00-4d65-9190-41afe7693058, Nodes: b23307c5-dd93-4572-a401-d0995d26fcac(ozonesecure-ha_datanode1_1.ozonesecure-ha_ozone_net/172.25.0.102), ReplicationConfig: STANDALONE/ONE, St...</msg>
<status status="PASS" starttime="20230915 20:23:37.868" endtime="20230915 20:23:45.806"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 20:23:45.807" level="INFO">Pipeline[ Id: 751dcdcb-2f00-4d65-9190-41afe7693058, Nodes: b23307c5-dd93-4572-a401-d0995d26fcac(ozonesecure-ha_datanode1_1.ozonesecure-ha_ozone_net/172.25.0.102), ReplicationConfig: STANDALONE/ONE, State:DORMANT, leaderId:, CreationTimestamp2023-09-15T20:23:10.403Z[UTC]]</msg>
<status status="PASS" starttime="20230915 20:23:45.806" endtime="20230915 20:23:45.807"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 20:23:45.809" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 20:23:45.808" endtime="20230915 20:23:45.809"/>
</kw>
<status status="PASS" starttime="20230915 20:23:37.867" endtime="20230915 20:23:45.809"/>
</kw>
<msg timestamp="20230915 20:23:45.809" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 20:23:37.867" endtime="20230915 20:23:45.809"/>
</kw>
<msg timestamp="20230915 20:23:45.810" level="INFO">${output} = Pipeline[ Id: 751dcdcb-2f00-4d65-9190-41afe7693058, Nodes: b23307c5-dd93-4572-a401-d0995d26fcac(ozonesecure-ha_datanode1_1.ozonesecure-ha_ozone_net/172.25.0.102), ReplicationConfig: STANDALONE/ONE, St...</msg>
<status status="PASS" starttime="20230915 20:23:37.866" endtime="20230915 20:23:45.810"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>DORMANT</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 20:23:45.810" endtime="20230915 20:23:45.810"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230915 20:23:29.085" endtime="20230915 20:23:45.811"/>
</test>
<test id="s1-s4-t5" name="Activate pipeline" line="48">
<kw name="Execute" library="os">
<arg>ozone admin pipeline activate "${PIPELINE}"</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 20:23:45.819" level="INFO">Running command 'ozone admin pipeline activate "751dcdcb-2f00-4d65-9190-41afe7693058" 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 20:23:55.345" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 20:23:55.345" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230915 20:23:45.815" endtime="20230915 20:23:55.345"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 20:23:55.347" level="INFO"/>
<status status="PASS" starttime="20230915 20:23:55.346" endtime="20230915 20:23:55.347"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 20:23:55.348" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 20:23:55.348" endtime="20230915 20:23:55.348"/>
</kw>
<status status="PASS" starttime="20230915 20:23:45.814" endtime="20230915 20:23:55.349"/>
</kw>
<msg timestamp="20230915 20:23:55.349" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 20:23:45.814" endtime="20230915 20:23:55.349"/>
</kw>
<status status="PASS" starttime="20230915 20:23:45.813" endtime="20230915 20:23:55.349"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin pipeline list | grep "${PIPELINE}"</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 20:23:55.356" level="INFO">Running command 'ozone admin pipeline list | grep "751dcdcb-2f00-4d65-9190-41afe7693058" 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 20:24:04.287" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 20:24:04.287" level="INFO">${output} = Pipeline[ Id: 751dcdcb-2f00-4d65-9190-41afe7693058, Nodes: b23307c5-dd93-4572-a401-d0995d26fcac(ozonesecure-ha_datanode1_1.ozonesecure-ha_ozone_net/172.25.0.102), ReplicationConfig: STANDALONE/ONE, St...</msg>
<status status="PASS" starttime="20230915 20:23:55.351" endtime="20230915 20:24:04.287"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 20:24:04.289" level="INFO">Pipeline[ Id: 751dcdcb-2f00-4d65-9190-41afe7693058, Nodes: b23307c5-dd93-4572-a401-d0995d26fcac(ozonesecure-ha_datanode1_1.ozonesecure-ha_ozone_net/172.25.0.102), ReplicationConfig: STANDALONE/ONE, State:OPEN, leaderId:, CreationTimestamp2023-09-15T20:23:10.403Z[UTC]]</msg>
<status status="PASS" starttime="20230915 20:24:04.288" endtime="20230915 20:24:04.289"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 20:24:04.290" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 20:24:04.289" endtime="20230915 20:24:04.290"/>
</kw>
<status status="PASS" starttime="20230915 20:23:55.350" endtime="20230915 20:24:04.291"/>
</kw>
<msg timestamp="20230915 20:24:04.291" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 20:23:55.350" endtime="20230915 20:24:04.291"/>
</kw>
<msg timestamp="20230915 20:24:04.291" level="INFO">${output} = Pipeline[ Id: 751dcdcb-2f00-4d65-9190-41afe7693058, Nodes: b23307c5-dd93-4572-a401-d0995d26fcac(ozonesecure-ha_datanode1_1.ozonesecure-ha_ozone_net/172.25.0.102), ReplicationConfig: STANDALONE/ONE, St...</msg>
<status status="PASS" starttime="20230915 20:23:55.349" endtime="20230915 20:24:04.291"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>OPEN</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 20:24:04.291" endtime="20230915 20:24:04.292"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230915 20:23:45.812" endtime="20230915 20:24:04.292"/>
</test>
<test id="s1-s4-t6" name="Close pipeline" line="53">
<kw name="Execute" library="os">
<arg>ozone admin pipeline close "${PIPELINE}"</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 20:24:04.299" level="INFO">Running command 'ozone admin pipeline close "751dcdcb-2f00-4d65-9190-41afe7693058" 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 20:24:12.312" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 20:24:12.313" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230915 20:24:04.296" endtime="20230915 20:24:12.313"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 20:24:12.315" level="INFO"/>
<status status="PASS" starttime="20230915 20:24:12.313" endtime="20230915 20:24:12.315"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 20:24:12.315" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 20:24:12.315" endtime="20230915 20:24:12.316"/>
</kw>
<status status="PASS" starttime="20230915 20:24:04.295" endtime="20230915 20:24:12.316"/>
</kw>
<msg timestamp="20230915 20:24:12.316" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 20:24:04.295" endtime="20230915 20:24:12.316"/>
</kw>
<status status="PASS" starttime="20230915 20:24:04.294" endtime="20230915 20:24:12.316"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin pipeline list</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 20:24:12.322" level="INFO">Running command 'ozone admin pipeline list 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 20:24:26.626" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 20:24:26.627" level="INFO">${output} = Pipeline[ Id: 254712e3-d0ca-4241-b91f-ee97dc4d9e4a, Nodes: 9de21ffc-39c0-406d-8c6b-a929856c7f33(ozonesecure-ha_datanode3_1.ozonesecure-ha_ozone_net/172.25.0.104), ReplicationConfig: RATIS/ONE, State:O...</msg>
<status status="PASS" starttime="20230915 20:24:12.318" endtime="20230915 20:24:26.627"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 20:24:26.628" level="INFO">Pipeline[ Id: 254712e3-d0ca-4241-b91f-ee97dc4d9e4a, Nodes: 9de21ffc-39c0-406d-8c6b-a929856c7f33(ozonesecure-ha_datanode3_1.ozonesecure-ha_ozone_net/172.25.0.104), ReplicationConfig: RATIS/ONE, State:OPEN, leaderId:9de21ffc-39c0-406d-8c6b-a929856c7f33, CreationTimestamp2023-09-15T20:18:41.687Z[UTC]]
Pipeline[ Id: 5e21aae7-b64f-4ed3-98e5-d4a0b1bbb964, Nodes: b23307c5-dd93-4572-a401-d0995d26fcac(ozonesecure-ha_datanode1_1.ozonesecure-ha_ozone_net/172.25.0.102), ReplicationConfig: RATIS/ONE, State:OPEN, leaderId:b23307c5-dd93-4572-a401-d0995d26fcac, CreationTimestamp2023-09-15T20:18:43.239Z[UTC]]
Pipeline[ Id: 33539a65-1499-48c3-952d-e4e60f6c85ac, Nodes: 9de21ffc-39c0-406d-8c6b-a929856c7f33(ozonesecure-ha_datanode3_1.ozonesecure-ha_ozone_net/172.25.0.104)44fb1de7-81de-440d-96f5-aad5868e221e(ozonesecure-ha_datanode2_1.ozonesecure-ha_ozone_net/172.25.0.103)b23307c5-dd93-4572-a401-d0995d26fcac(ozonesecure-ha_datanode1_1.ozonesecure-ha_ozone_net/172.25.0.102), ReplicationConfig: RATIS/THREE, State:OPEN, leaderId:b23307c5-dd93-4572-a401-d0995d26fcac, CreationTimestamp2023-09-15T20:18:43.297Z[UTC]]
Pipeline[ Id: 14df9748-0392-40b2-a81e-fe0f65adfba1, Nodes: 44fb1de7-81de-440d-96f5-aad5868e221e(ozonesecure-ha_datanode2_1.ozonesecure-ha_ozone_net/172.25.0.103), ReplicationConfig: RATIS/ONE, State:OPEN, leaderId:44fb1de7-81de-440d-96f5-aad5868e221e, CreationTimestamp2023-09-15T20:18:34.813Z[UTC]]
Pipeline[ Id: b1592bcf-d05d-46c5-bd20-c443bf86be61, Nodes: 9de21ffc-39c0-406d-8c6b-a929856c7f33(ozonesecure-ha_datanode3_1.ozonesecure-ha_ozone_net/172.25.0.104)b23307c5-dd93-4572-a401-d0995d26fcac(ozonesecure-ha_datanode1_1.ozonesecure-ha_ozone_net/172.25.0.102)44fb1de7-81de-440d-96f5-aad5868e221e(ozonesecure-ha_datanode2_1.ozonesecure-ha_ozone_net/172.25.0.103), ReplicationConfig: RATIS/THREE, State:OPEN, leaderId:9de21ffc-39c0-406d-8c6b-a929856c7f33, CreationTimestamp2023-09-15T20:18:43.475Z[UTC]]
Pipeline[ Id: 751dcdcb-2f00-4d65-9190-41afe7693058, Nodes: b23307c5-dd93-4572-a401-d0995d26fcac(ozonesecure-ha_datanode1_1.ozonesecure-ha_ozone_net/172.25.0.102), ReplicationConfig: STANDALONE/ONE, State:CLOSED, leaderId:, CreationTimestamp2023-09-15T20:23:10.403Z[UTC]]</msg>
<status status="PASS" starttime="20230915 20:24:26.627" endtime="20230915 20:24:26.629"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 20:24:26.629" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 20:24:26.629" endtime="20230915 20:24:26.629"/>
</kw>
<status status="PASS" starttime="20230915 20:24:12.318" endtime="20230915 20:24:26.630"/>
</kw>
<msg timestamp="20230915 20:24:26.630" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 20:24:12.317" endtime="20230915 20:24:26.630"/>
</kw>
<msg timestamp="20230915 20:24:26.630" level="INFO">${output} = Pipeline[ Id: 254712e3-d0ca-4241-b91f-ee97dc4d9e4a, Nodes: 9de21ffc-39c0-406d-8c6b-a929856c7f33(ozonesecure-ha_datanode3_1.ozonesecure-ha_ozone_net/172.25.0.104), ReplicationConfig: RATIS/ONE, State:O...</msg>
<status status="PASS" starttime="20230915 20:24:12.317" endtime="20230915 20:24:26.630"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${PIPELINE}' not in '''${output}'''</arg>
<arg>Pipeline already scrubbed</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20230915 20:24:26.631" endtime="20230915 20:24:26.631"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${output}</arg>
<arg>${PIPELINE}.*CLOSED</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20230915 20:24:26.631" endtime="20230915 20:24:26.632"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230915 20:24:04.293" endtime="20230915 20:24:26.632"/>
</test>
<test id="s1-s4-t7" name="Incomplete command" line="59">
<kw name="Execute And Ignore Error" library="os">
<var>${output}</var>
<arg>ozone admin pipeline</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 20:24:26.639" level="INFO">Running command 'ozone admin pipeline 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 20:24:31.720" level="INFO">${rc} = 255</msg>
<msg timestamp="20230915 20:24:31.720" level="INFO">${output} = Incomplete command
Usage: ozone admin pipeline [-hV] [COMMAND]
Pipeline specific operations
  -h, --help      Show this help message and exit.
  -V, --version   Print version information and exit.
Com...</msg>
<status status="PASS" starttime="20230915 20:24:26.635" endtime="20230915 20:24:31.720"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 20:24:31.723" level="INFO">Incomplete command
Usage: ozone admin pipeline [-hV] [COMMAND]
Pipeline specific operations
  -h, --help      Show this help message and exit.
  -V, --version   Print version information and exit.
Commands:
  list        List all active pipelines
  activate    Activates the given Pipeline
  deactivate  Deactivates the given Pipeline
  create      create pipeline
  close       Close pipeline</msg>
<status status="PASS" starttime="20230915 20:24:31.721" endtime="20230915 20:24:31.723"/>
</kw>
<msg timestamp="20230915 20:24:31.723" level="INFO">${output} = Incomplete command
Usage: ozone admin pipeline [-hV] [COMMAND]
Pipeline specific operations
  -h, --help      Show this help message and exit.
  -V, --version   Print version information and exit.
Com...</msg>
<status status="PASS" starttime="20230915 20:24:26.635" endtime="20230915 20:24:31.723"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Incomplete command</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 20:24:31.724" endtime="20230915 20:24:31.724"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>close</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 20:24:31.724" endtime="20230915 20:24:31.725"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>create</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 20:24:31.725" endtime="20230915 20:24:31.726"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>deactivate</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 20:24:31.726" endtime="20230915 20:24:31.727"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>list</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 20:24:31.727" endtime="20230915 20:24:31.727"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230915 20:24:26.634" endtime="20230915 20:24:31.728"/>
</test>
<doc>Test ozone admin pipeline command</doc>
<status status="PASS" starttime="20230915 20:23:01.841" endtime="20230915 20:24:31.730"/>
</suite>
<suite id="s1-s5" name="Kinit" source="/opt/hadoop/smoketest/kinit.robot">
<test id="s1-s5-t1" name="Kinit" line="27">
<kw name="Kinit test user" library="commonlib">
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 20:25:30.413" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 20:25:30.434" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 20:25:30.434" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230915 20:25:30.392" endtime="20230915 20:25:30.434"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 20:25:30.436" level="INFO">scm</msg>
<status status="PASS" starttime="20230915 20:25:30.435" endtime="20230915 20:25:30.436"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 20:25:30.437" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 20:25:30.436" endtime="20230915 20:25:30.437"/>
</kw>
<status status="PASS" starttime="20230915 20:25:30.389" endtime="20230915 20:25:30.437"/>
</kw>
<msg timestamp="20230915 20:25:30.437" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 20:25:30.388" endtime="20230915 20:25:30.437"/>
</kw>
<msg timestamp="20230915 20:25:30.438" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230915 20:25:30.386" endtime="20230915 20:25:30.438"/>
</kw>
<msg timestamp="20230915 20:25:30.438" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230915 20:25:30.382" endtime="20230915 20:25:30.438"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230915 20:25:30.439" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230915 20:25:30.438" endtime="20230915 20:25:30.439"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 20:25:30.450" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 20:25:30.657" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 20:25:30.657" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230915 20:25:30.443" endtime="20230915 20:25:30.657"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 20:25:30.659" level="INFO"/>
<status status="PASS" starttime="20230915 20:25:30.658" endtime="20230915 20:25:30.659"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 20:25:30.661" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 20:25:30.660" endtime="20230915 20:25:30.662"/>
</kw>
<status status="PASS" starttime="20230915 20:25:30.442" endtime="20230915 20:25:30.662"/>
</kw>
<msg timestamp="20230915 20:25:30.663" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 20:25:30.442" endtime="20230915 20:25:30.663"/>
</kw>
<status status="PASS" starttime="20230915 20:25:30.440" endtime="20230915 20:25:30.663"/>
</kw>
<status status="PASS" starttime="20230915 20:25:30.439" endtime="20230915 20:25:30.663"/>
</kw>
<status status="PASS" starttime="20230915 20:25:30.379" endtime="20230915 20:25:30.664"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20230915 20:25:30.375" endtime="20230915 20:25:30.665"/>
</test>
<doc>Kinit test user</doc>
<status status="PASS" starttime="20230915 20:25:30.097" endtime="20230915 20:25:30.673"/>
</suite>
<suite id="s1-s6" name="Root-Ca-Rotation-Client-Checks" source="/opt/hadoop/smoketest/certrotation/root-ca-rotation-client-checks.robot">
<test id="s1-s6-t1" name="Create a volume and bucket" line="27">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 20:26:18.878" level="INFO">Running command 'ozone sh volume create rootca2-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 20:26:28.519" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 20:26:28.519" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230915 20:26:18.872" endtime="20230915 20:26:28.519"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 20:26:28.521" level="INFO"/>
<status status="PASS" starttime="20230915 20:26:28.520" endtime="20230915 20:26:28.522"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 20:26:28.522" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 20:26:28.522" endtime="20230915 20:26:28.523"/>
</kw>
<status status="PASS" starttime="20230915 20:26:18.871" endtime="20230915 20:26:28.523"/>
</kw>
<msg timestamp="20230915 20:26:28.523" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 20:26:18.871" endtime="20230915 20:26:28.523"/>
</kw>
<msg timestamp="20230915 20:26:28.523" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230915 20:26:18.868" endtime="20230915 20:26:28.523"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 20:26:28.524" endtime="20230915 20:26:28.524"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 20:26:28.531" level="INFO">Running command 'ozone sh bucket create /rootca2-volume/rootca2-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 20:26:38.646" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 20:26:38.646" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230915 20:26:28.526" endtime="20230915 20:26:38.646"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 20:26:38.648" level="INFO"/>
<status status="PASS" starttime="20230915 20:26:38.647" endtime="20230915 20:26:38.648"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 20:26:38.649" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 20:26:38.648" endtime="20230915 20:26:38.649"/>
</kw>
<status status="PASS" starttime="20230915 20:26:28.526" endtime="20230915 20:26:38.649"/>
</kw>
<msg timestamp="20230915 20:26:38.649" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 20:26:28.525" endtime="20230915 20:26:38.649"/>
</kw>
<msg timestamp="20230915 20:26:38.650" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230915 20:26:28.524" endtime="20230915 20:26:38.650"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 20:26:38.650" endtime="20230915 20:26:38.650"/>
</kw>
<tag>create-volume-and-bucket</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230915 20:26:18.865" endtime="20230915 20:26:38.651"/>
</test>
<test id="s1-s6-t2" name="Create key" line="34">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 20:26:38.659" level="INFO">Running command 'echo "rootca2: key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20230915 20:26:38.663" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 20:26:38.663" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230915 20:26:38.654" endtime="20230915 20:26:38.663"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 20:26:38.664" level="INFO"/>
<status status="PASS" starttime="20230915 20:26:38.664" endtime="20230915 20:26:38.664"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 20:26:38.665" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 20:26:38.665" endtime="20230915 20:26:38.665"/>
</kw>
<status status="PASS" starttime="20230915 20:26:38.654" endtime="20230915 20:26:38.666"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 20:26:38.672" level="INFO">Running command 'ozone sh key put /rootca2-volume/rootca2-bucket/rootca2-key /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 20:31:38.654" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20230915 20:26:38.668" endtime="20230915 20:31:38.654"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230915 20:31:38.654" endtime="20230915 20:31:38.654"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20230915 20:31:38.655" endtime="20230915 20:31:38.655"/>
</kw>
<status status="FAIL" starttime="20230915 20:26:38.667" endtime="20230915 20:31:38.655"/>
</kw>
<msg timestamp="20230915 20:31:38.655" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20230915 20:26:38.667" endtime="20230915 20:31:38.655"/>
</kw>
<status status="FAIL" starttime="20230915 20:26:38.666" endtime="20230915 20:31:38.656"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230915 20:31:38.656" endtime="20230915 20:31:38.656"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<status status="NOT RUN" starttime="20230915 20:31:38.656" endtime="20230915 20:31:38.657"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20230915 20:26:38.652" endtime="20230915 20:31:38.657">Test timeout 5 minutes exceeded.</status>
</test>
<test id="s1-s6-t3" name="Read data from previously created key" line="40">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230915 20:31:38.663" level="INFO">${random} = 13278</msg>
<status status="PASS" starttime="20230915 20:31:38.662" endtime="20230915 20:31:38.663"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 20:31:38.669" level="INFO">Running command 'ozone sh key get /rootca2-volume/rootca2-bucket/rootca2-key /tmp/key-13278 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 20:31:51.478" level="INFO">${rc} = 255</msg>
<msg timestamp="20230915 20:31:51.478" level="INFO">${output} = KEY_NOT_FOUND Key:rootca2-key not found</msg>
<status status="PASS" starttime="20230915 20:31:38.665" endtime="20230915 20:31:51.478"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 20:31:51.480" level="INFO">KEY_NOT_FOUND Key:rootca2-key not found</msg>
<status status="PASS" starttime="20230915 20:31:51.479" endtime="20230915 20:31:51.480"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 20:31:51.481" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<msg timestamp="20230915 20:31:51.481" level="FAIL">255 != 0</msg>
<status status="FAIL" starttime="20230915 20:31:51.480" endtime="20230915 20:31:51.482"/>
</kw>
<status status="FAIL" starttime="20230915 20:31:38.665" endtime="20230915 20:31:51.482"/>
</kw>
<msg timestamp="20230915 20:31:51.482" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20230915 20:31:38.664" endtime="20230915 20:31:51.482"/>
</kw>
<status status="FAIL" starttime="20230915 20:31:38.663" endtime="20230915 20:31:51.482"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230915 20:31:51.482" endtime="20230915 20:31:51.482"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/key-${random}</arg>
<arg>0</arg>
<status status="NOT RUN" starttime="20230915 20:31:51.483" endtime="20230915 20:31:51.483"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230915 20:31:51.483" endtime="20230915 20:31:51.483"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/key-${random}</arg>
<arg>0</arg>
<status status="NOT RUN" starttime="20230915 20:31:51.483" endtime="20230915 20:31:51.483"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20230915 20:31:38.659" endtime="20230915 20:31:51.483">255 != 0</status>
</test>
<doc>Generate data</doc>
<status status="FAIL" starttime="20230915 20:26:18.759" endtime="20230915 20:31:51.486"/>
</suite>
<status status="FAIL" starttime="N/A" endtime="N/A" elapsedtime="523102"/>
</suite>
<statistics>
<total>
<stat pass="14" fail="2" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="2" fail="0" skip="0">create-volume-and-bucket</stat>
</tag>
<suite>
<stat pass="14" fail="2" skip="0" id="s1" name="ozonesecure-ha-root-ca-rotation">ozonesecure-ha-root-ca-rotation</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1" name="Kinit">ozonesecure-ha-root-ca-rotation.Kinit</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2" name="Scm-Leader-Transfer">ozonesecure-ha-root-ca-rotation.Scm-Leader-Transfer</stat>
<stat pass="3" fail="0" skip="0" id="s1-s3" name="Root-Ca-Rotation-Client-Checks">ozonesecure-ha-root-ca-rotation.Root-Ca-Rotation-Client-Checks</stat>
<stat pass="7" fail="0" skip="0" id="s1-s4" name="Pipeline">ozonesecure-ha-root-ca-rotation.Pipeline</stat>
<stat pass="1" fail="0" skip="0" id="s1-s5" name="Kinit">ozonesecure-ha-root-ca-rotation.Kinit</stat>
<stat pass="1" fail="2" skip="0" id="s1-s6" name="Root-Ca-Rotation-Client-Checks">ozonesecure-ha-root-ca-rotation.Root-Ca-Rotation-Client-Checks</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
