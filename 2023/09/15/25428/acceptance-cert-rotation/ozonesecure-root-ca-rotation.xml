<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 6.1.1 (Python 3.8.10 on linux)" generated="20230915 20:42:17.987" rpa="false" schemaversion="4">
<suite id="s1" name="ozonesecure-root-ca-rotation">
<suite id="s1-s1" name="Kinit" source="/opt/hadoop/smoketest/kinit.robot">
<test id="s1-s1-t1" name="Kinit" line="27">
<kw name="Kinit test user" library="commonlib">
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 20:39:24.607" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 20:39:24.611" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 20:39:24.611" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230915 20:39:24.603" endtime="20230915 20:39:24.611"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 20:39:24.613" level="INFO">scm</msg>
<status status="PASS" starttime="20230915 20:39:24.612" endtime="20230915 20:39:24.613"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 20:39:24.614" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 20:39:24.613" endtime="20230915 20:39:24.614"/>
</kw>
<status status="PASS" starttime="20230915 20:39:24.603" endtime="20230915 20:39:24.614"/>
</kw>
<msg timestamp="20230915 20:39:24.614" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 20:39:24.602" endtime="20230915 20:39:24.615"/>
</kw>
<msg timestamp="20230915 20:39:24.615" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230915 20:39:24.602" endtime="20230915 20:39:24.615"/>
</kw>
<msg timestamp="20230915 20:39:24.615" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230915 20:39:24.602" endtime="20230915 20:39:24.615"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230915 20:39:24.616" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230915 20:39:24.615" endtime="20230915 20:39:24.616"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 20:39:24.634" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 20:39:24.692" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 20:39:24.692" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230915 20:39:24.619" endtime="20230915 20:39:24.693"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 20:39:24.694" level="INFO"/>
<status status="PASS" starttime="20230915 20:39:24.693" endtime="20230915 20:39:24.694"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 20:39:24.695" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 20:39:24.694" endtime="20230915 20:39:24.695"/>
</kw>
<status status="PASS" starttime="20230915 20:39:24.618" endtime="20230915 20:39:24.695"/>
</kw>
<msg timestamp="20230915 20:39:24.695" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 20:39:24.617" endtime="20230915 20:39:24.696"/>
</kw>
<status status="PASS" starttime="20230915 20:39:24.617" endtime="20230915 20:39:24.696"/>
</kw>
<status status="PASS" starttime="20230915 20:39:24.616" endtime="20230915 20:39:24.696"/>
</kw>
<status status="PASS" starttime="20230915 20:39:24.601" endtime="20230915 20:39:24.696"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20230915 20:39:24.600" endtime="20230915 20:39:24.696"/>
</test>
<doc>Kinit test user</doc>
<status status="PASS" starttime="20230915 20:39:24.542" endtime="20230915 20:39:24.700"/>
</suite>
<suite id="s1-s2" name="Root-Ca-Rotation-Client-Checks" source="/opt/hadoop/smoketest/certrotation/root-ca-rotation-client-checks.robot">
<test id="s1-s2-t1" name="Create a volume and bucket" line="27">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 20:39:47.922" level="INFO">Running command 'ozone sh volume create rootca-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 20:39:54.544" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 20:39:54.544" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230915 20:39:47.919" endtime="20230915 20:39:54.544"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 20:39:54.546" level="INFO"/>
<status status="PASS" starttime="20230915 20:39:54.545" endtime="20230915 20:39:54.546"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 20:39:54.547" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 20:39:54.546" endtime="20230915 20:39:54.547"/>
</kw>
<status status="PASS" starttime="20230915 20:39:47.919" endtime="20230915 20:39:54.547"/>
</kw>
<msg timestamp="20230915 20:39:54.547" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 20:39:47.918" endtime="20230915 20:39:54.547"/>
</kw>
<msg timestamp="20230915 20:39:54.548" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230915 20:39:47.918" endtime="20230915 20:39:54.548"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 20:39:54.548" endtime="20230915 20:39:54.548"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 20:39:54.553" level="INFO">Running command 'ozone sh bucket create /rootca-volume/rootca-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 20:40:02.347" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 20:40:02.347" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230915 20:39:54.550" endtime="20230915 20:40:02.348"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 20:40:02.349" level="INFO"/>
<status status="PASS" starttime="20230915 20:40:02.348" endtime="20230915 20:40:02.349"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 20:40:02.350" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 20:40:02.349" endtime="20230915 20:40:02.350"/>
</kw>
<status status="PASS" starttime="20230915 20:39:54.550" endtime="20230915 20:40:02.350"/>
</kw>
<msg timestamp="20230915 20:40:02.350" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 20:39:54.549" endtime="20230915 20:40:02.350"/>
</kw>
<msg timestamp="20230915 20:40:02.350" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230915 20:39:54.549" endtime="20230915 20:40:02.350"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 20:40:02.351" endtime="20230915 20:40:02.351"/>
</kw>
<tag>create-volume-and-bucket</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230915 20:39:47.917" endtime="20230915 20:40:02.351"/>
</test>
<test id="s1-s2-t2" name="Create key" line="34">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 20:40:02.357" level="INFO">Running command 'echo "rootca: key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20230915 20:40:02.360" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 20:40:02.360" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230915 20:40:02.354" endtime="20230915 20:40:02.360"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 20:40:02.361" level="INFO"/>
<status status="PASS" starttime="20230915 20:40:02.360" endtime="20230915 20:40:02.361"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 20:40:02.362" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 20:40:02.361" endtime="20230915 20:40:02.362"/>
</kw>
<status status="PASS" starttime="20230915 20:40:02.354" endtime="20230915 20:40:02.362"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 20:40:02.368" level="INFO">Running command 'ozone sh key put /rootca-volume/rootca-bucket/rootca-key /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 20:40:16.893" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 20:40:16.893" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230915 20:40:02.365" endtime="20230915 20:40:16.893"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 20:40:16.895" level="INFO"/>
<status status="PASS" starttime="20230915 20:40:16.894" endtime="20230915 20:40:16.895"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 20:40:16.896" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 20:40:16.895" endtime="20230915 20:40:16.896"/>
</kw>
<status status="PASS" starttime="20230915 20:40:02.364" endtime="20230915 20:40:16.896"/>
</kw>
<msg timestamp="20230915 20:40:16.897" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 20:40:02.364" endtime="20230915 20:40:16.897"/>
</kw>
<msg timestamp="20230915 20:40:16.897" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230915 20:40:02.363" endtime="20230915 20:40:16.897"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 20:40:16.897" endtime="20230915 20:40:16.898"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 20:40:16.902" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 20:40:16.905" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 20:40:16.905" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230915 20:40:16.899" endtime="20230915 20:40:16.905"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 20:40:16.907" level="INFO"/>
<status status="PASS" starttime="20230915 20:40:16.906" endtime="20230915 20:40:16.907"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 20:40:16.908" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 20:40:16.907" endtime="20230915 20:40:16.908"/>
</kw>
<status status="PASS" starttime="20230915 20:40:16.898" endtime="20230915 20:40:16.908"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230915 20:40:02.352" endtime="20230915 20:40:16.908"/>
</test>
<test id="s1-s2-t3" name="Read data from previously created key" line="40">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230915 20:40:16.911" level="INFO">${random} = 60937</msg>
<status status="PASS" starttime="20230915 20:40:16.910" endtime="20230915 20:40:16.911"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 20:40:16.915" level="INFO">Running command 'ozone sh key get /rootca-volume/rootca-bucket/rootca-key /tmp/key-60937 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 20:40:25.273" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 20:40:25.273" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230915 20:40:16.913" endtime="20230915 20:40:25.273"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 20:40:25.275" level="INFO"/>
<status status="PASS" starttime="20230915 20:40:25.274" endtime="20230915 20:40:25.275"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 20:40:25.275" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 20:40:25.275" endtime="20230915 20:40:25.276"/>
</kw>
<status status="PASS" starttime="20230915 20:40:16.912" endtime="20230915 20:40:25.276"/>
</kw>
<msg timestamp="20230915 20:40:25.276" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 20:40:16.912" endtime="20230915 20:40:25.276"/>
</kw>
<msg timestamp="20230915 20:40:25.276" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230915 20:40:16.911" endtime="20230915 20:40:25.276"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 20:40:25.276" endtime="20230915 20:40:25.277"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 20:40:25.281" level="INFO">Running command 'cat /tmp/key-60937 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 20:40:25.285" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 20:40:25.285" level="INFO">${output} = rootca: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230915 20:40:25.278" endtime="20230915 20:40:25.285"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 20:40:25.286" level="INFO">rootca: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230915 20:40:25.285" endtime="20230915 20:40:25.286"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 20:40:25.287" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 20:40:25.287" endtime="20230915 20:40:25.287"/>
</kw>
<msg timestamp="20230915 20:40:25.288" level="INFO">${output} = rootca: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230915 20:40:25.277" endtime="20230915 20:40:25.288"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 20:40:25.288" endtime="20230915 20:40:25.288"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 20:40:25.292" level="INFO">Running command 'rm /tmp/key-60937 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 20:40:25.295" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 20:40:25.296" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230915 20:40:25.289" endtime="20230915 20:40:25.296"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 20:40:25.297" level="INFO"/>
<status status="PASS" starttime="20230915 20:40:25.296" endtime="20230915 20:40:25.297"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 20:40:25.298" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 20:40:25.297" endtime="20230915 20:40:25.298"/>
</kw>
<status status="PASS" starttime="20230915 20:40:25.289" endtime="20230915 20:40:25.298"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230915 20:40:16.909" endtime="20230915 20:40:25.298"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20230915 20:39:47.859" endtime="20230915 20:40:25.300"/>
</suite>
<suite id="s1-s3" name="Root-Ca-Rotation-Client-Checks" source="/opt/hadoop/smoketest/certrotation/root-ca-rotation-client-checks.robot">
<test id="s1-s3-t1" name="Create a volume and bucket" line="27">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 20:41:18.014" level="INFO">Running command 'ozone sh volume create rootca2-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 20:41:24.499" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 20:41:24.500" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230915 20:41:18.011" endtime="20230915 20:41:24.500"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 20:41:24.501" level="INFO"/>
<status status="PASS" starttime="20230915 20:41:24.500" endtime="20230915 20:41:24.501"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 20:41:24.502" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 20:41:24.501" endtime="20230915 20:41:24.502"/>
</kw>
<status status="PASS" starttime="20230915 20:41:18.010" endtime="20230915 20:41:24.502"/>
</kw>
<msg timestamp="20230915 20:41:24.502" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 20:41:18.010" endtime="20230915 20:41:24.502"/>
</kw>
<msg timestamp="20230915 20:41:24.503" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230915 20:41:18.009" endtime="20230915 20:41:24.503"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 20:41:24.503" endtime="20230915 20:41:24.503"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 20:41:24.509" level="INFO">Running command 'ozone sh bucket create /rootca2-volume/rootca2-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 20:41:32.510" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 20:41:32.510" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230915 20:41:24.505" endtime="20230915 20:41:32.510"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 20:41:32.511" level="INFO"/>
<status status="PASS" starttime="20230915 20:41:32.511" endtime="20230915 20:41:32.511"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 20:41:32.512" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 20:41:32.512" endtime="20230915 20:41:32.512"/>
</kw>
<status status="PASS" starttime="20230915 20:41:24.505" endtime="20230915 20:41:32.513"/>
</kw>
<msg timestamp="20230915 20:41:32.513" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 20:41:24.504" endtime="20230915 20:41:32.513"/>
</kw>
<msg timestamp="20230915 20:41:32.513" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230915 20:41:24.504" endtime="20230915 20:41:32.513"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 20:41:32.513" endtime="20230915 20:41:32.514"/>
</kw>
<tag>create-volume-and-bucket</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230915 20:41:18.008" endtime="20230915 20:41:32.514"/>
</test>
<test id="s1-s3-t2" name="Create key" line="34">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 20:41:32.521" level="INFO">Running command 'echo "rootca2: key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20230915 20:41:32.523" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 20:41:32.523" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230915 20:41:32.517" endtime="20230915 20:41:32.523"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 20:41:32.524" level="INFO"/>
<status status="PASS" starttime="20230915 20:41:32.524" endtime="20230915 20:41:32.525"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 20:41:32.526" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 20:41:32.525" endtime="20230915 20:41:32.526"/>
</kw>
<status status="PASS" starttime="20230915 20:41:32.517" endtime="20230915 20:41:32.526"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 20:41:32.532" level="INFO">Running command 'ozone sh key put /rootca2-volume/rootca2-bucket/rootca2-key /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 20:41:41.940" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 20:41:41.940" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230915 20:41:32.529" endtime="20230915 20:41:41.940"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 20:41:41.942" level="INFO"/>
<status status="PASS" starttime="20230915 20:41:41.941" endtime="20230915 20:41:41.942"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 20:41:41.943" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 20:41:41.942" endtime="20230915 20:41:41.943"/>
</kw>
<status status="PASS" starttime="20230915 20:41:32.528" endtime="20230915 20:41:41.943"/>
</kw>
<msg timestamp="20230915 20:41:41.943" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 20:41:32.527" endtime="20230915 20:41:41.943"/>
</kw>
<msg timestamp="20230915 20:41:41.943" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230915 20:41:32.526" endtime="20230915 20:41:41.943"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 20:41:41.944" endtime="20230915 20:41:41.944"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 20:41:41.948" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 20:41:41.951" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 20:41:41.951" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230915 20:41:41.945" endtime="20230915 20:41:41.951"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 20:41:41.953" level="INFO"/>
<status status="PASS" starttime="20230915 20:41:41.952" endtime="20230915 20:41:41.953"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 20:41:41.953" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 20:41:41.953" endtime="20230915 20:41:41.953"/>
</kw>
<status status="PASS" starttime="20230915 20:41:41.944" endtime="20230915 20:41:41.954"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230915 20:41:32.516" endtime="20230915 20:41:41.954"/>
</test>
<test id="s1-s3-t3" name="Read data from previously created key" line="40">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230915 20:41:41.956" level="INFO">${random} = 54590</msg>
<status status="PASS" starttime="20230915 20:41:41.955" endtime="20230915 20:41:41.956"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 20:41:41.960" level="INFO">Running command 'ozone sh key get /rootca2-volume/rootca2-bucket/rootca2-key /tmp/key-54590 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 20:41:51.724" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 20:41:51.724" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230915 20:41:41.958" endtime="20230915 20:41:51.724"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 20:41:51.725" level="INFO"/>
<status status="PASS" starttime="20230915 20:41:51.725" endtime="20230915 20:41:51.725"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 20:41:51.726" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 20:41:51.726" endtime="20230915 20:41:51.726"/>
</kw>
<status status="PASS" starttime="20230915 20:41:41.957" endtime="20230915 20:41:51.727"/>
</kw>
<msg timestamp="20230915 20:41:51.727" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 20:41:41.957" endtime="20230915 20:41:51.727"/>
</kw>
<msg timestamp="20230915 20:41:51.727" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230915 20:41:41.956" endtime="20230915 20:41:51.727"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 20:41:51.727" endtime="20230915 20:41:51.728"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 20:41:51.733" level="INFO">Running command 'cat /tmp/key-54590 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 20:41:51.742" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 20:41:51.742" level="INFO">${output} = rootca2: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230915 20:41:51.729" endtime="20230915 20:41:51.742"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 20:41:51.744" level="INFO">rootca2: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230915 20:41:51.743" endtime="20230915 20:41:51.744"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 20:41:51.745" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 20:41:51.744" endtime="20230915 20:41:51.745"/>
</kw>
<msg timestamp="20230915 20:41:51.746" level="INFO">${output} = rootca2: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230915 20:41:51.728" endtime="20230915 20:41:51.746"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 20:41:51.746" endtime="20230915 20:41:51.747"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 20:41:51.751" level="INFO">Running command 'rm /tmp/key-54590 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 20:41:51.754" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 20:41:51.754" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230915 20:41:51.748" endtime="20230915 20:41:51.754"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 20:41:51.756" level="INFO"/>
<status status="PASS" starttime="20230915 20:41:51.755" endtime="20230915 20:41:51.756"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 20:41:51.757" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 20:41:51.756" endtime="20230915 20:41:51.757"/>
</kw>
<status status="PASS" starttime="20230915 20:41:51.747" endtime="20230915 20:41:51.757"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230915 20:41:41.954" endtime="20230915 20:41:51.757"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20230915 20:41:17.950" endtime="20230915 20:41:51.759"/>
</suite>
<suite id="s1-s4" name="Root-Ca-Rotation" source="/opt/hadoop/smoketest/scmha/root-ca-rotation.robot">
<test id="s1-s4-t1" name="Verify root CA rotation metrics" line="26">
<kw name="Execute" library="os">
<var>${successRotationLine}</var>
<arg>curl -sS 'http://localhost:9876/jmx' | grep NumSuccessRotation</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 20:41:55.781" level="INFO">Running command 'curl -sS 'http://localhost:9876/jmx' | grep NumSuccessRotation 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 20:41:56.418" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 20:41:56.418" level="INFO">${output} =     "NumSuccessRotation" : 2,</msg>
<status status="PASS" starttime="20230915 20:41:55.778" endtime="20230915 20:41:56.418"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 20:41:56.420" level="INFO">    "NumSuccessRotation" : 2,</msg>
<status status="PASS" starttime="20230915 20:41:56.419" endtime="20230915 20:41:56.420"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 20:41:56.421" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 20:41:56.420" endtime="20230915 20:41:56.421"/>
</kw>
<status status="PASS" starttime="20230915 20:41:55.777" endtime="20230915 20:41:56.421"/>
</kw>
<msg timestamp="20230915 20:41:56.421" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 20:41:55.776" endtime="20230915 20:41:56.422"/>
</kw>
<msg timestamp="20230915 20:41:56.422" level="INFO">${successRotationLine} =     "NumSuccessRotation" : 2,</msg>
<status status="PASS" starttime="20230915 20:41:55.775" endtime="20230915 20:41:56.422"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${successRotationLine}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 20:41:56.422" level="INFO">    "NumSuccessRotation" : 2,</msg>
<status status="PASS" starttime="20230915 20:41:56.422" endtime="20230915 20:41:56.423"/>
</kw>
<kw name="Split String" library="String">
<var>${temp_1}</var>
<arg>${successRotationLine}</arg>
<arg>:</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20230915 20:41:56.423" level="INFO">${temp_1} = ['    "NumSuccessRotation" ', ' 2,']</msg>
<status status="PASS" starttime="20230915 20:41:56.423" endtime="20230915 20:41:56.423"/>
</kw>
<kw name="Strip String" library="String">
<var>${temp_2}</var>
<arg>${temp_1[1]}</arg>
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<msg timestamp="20230915 20:41:56.427" level="INFO">${temp_2} = 2,</msg>
<status status="PASS" starttime="20230915 20:41:56.424" endtime="20230915 20:41:56.427"/>
</kw>
<kw name="Split String" library="String">
<var>${temp_3}</var>
<arg>${temp_2}</arg>
<arg>,</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20230915 20:41:56.428" level="INFO">${temp_3} = ['2', '']</msg>
<status status="PASS" starttime="20230915 20:41:56.428" endtime="20230915 20:41:56.428"/>
</kw>
<kw name="Strip String" library="String">
<var>${successRotation}</var>
<arg>${temp_3[0]}</arg>
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<msg timestamp="20230915 20:41:56.430" level="INFO">${successRotation} = 2</msg>
<status status="PASS" starttime="20230915 20:41:56.429" endtime="20230915 20:41:56.430"/>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<var>${successRotation}</var>
<arg>${successRotation}</arg>
<doc>Converts the given item to a floating point number.</doc>
<msg timestamp="20230915 20:41:56.431" level="INFO">${successRotation} = 2.0</msg>
<status status="PASS" starttime="20230915 20:41:56.430" endtime="20230915 20:41:56.431"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${successRotation} &gt;= 1</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230915 20:41:56.431" endtime="20230915 20:41:56.432"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230915 20:41:55.775" endtime="20230915 20:41:56.432"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20230915 20:41:55.707" endtime="20230915 20:41:56.434"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="72135"/>
</suite>
<statistics>
<total>
<stat pass="8" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="2" fail="0" skip="0">create-volume-and-bucket</stat>
</tag>
<suite>
<stat pass="8" fail="0" skip="0" id="s1" name="ozonesecure-root-ca-rotation">ozonesecure-root-ca-rotation</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1" name="Kinit">ozonesecure-root-ca-rotation.Kinit</stat>
<stat pass="3" fail="0" skip="0" id="s1-s2" name="Root-Ca-Rotation-Client-Checks">ozonesecure-root-ca-rotation.Root-Ca-Rotation-Client-Checks</stat>
<stat pass="3" fail="0" skip="0" id="s1-s3" name="Root-Ca-Rotation-Client-Checks">ozonesecure-root-ca-rotation.Root-Ca-Rotation-Client-Checks</stat>
<stat pass="1" fail="0" skip="0" id="s1-s4" name="Root-Ca-Rotation">ozonesecure-root-ca-rotation.Root-Ca-Rotation</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
