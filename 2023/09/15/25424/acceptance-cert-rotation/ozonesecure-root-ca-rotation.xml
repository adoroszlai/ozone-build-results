<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 6.1.1 (Python 3.8.10 on linux)" generated="20230915 17:50:02.243" rpa="false" schemaversion="4">
<suite id="s1" name="ozonesecure-root-ca-rotation">
<suite id="s1-s1" name="Kinit" source="/opt/hadoop/smoketest/kinit.robot">
<test id="s1-s1-t1" name="Kinit" line="27">
<kw name="Kinit test user" library="commonlib">
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 17:46:57.236" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 17:46:57.282" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 17:46:57.282" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230915 17:46:57.212" endtime="20230915 17:46:57.282"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 17:46:57.284" level="INFO">scm</msg>
<status status="PASS" starttime="20230915 17:46:57.283" endtime="20230915 17:46:57.284"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 17:46:57.285" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 17:46:57.284" endtime="20230915 17:46:57.285"/>
</kw>
<status status="PASS" starttime="20230915 17:46:57.206" endtime="20230915 17:46:57.287"/>
</kw>
<msg timestamp="20230915 17:46:57.287" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 17:46:57.206" endtime="20230915 17:46:57.289"/>
</kw>
<msg timestamp="20230915 17:46:57.290" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230915 17:46:57.197" endtime="20230915 17:46:57.290"/>
</kw>
<msg timestamp="20230915 17:46:57.290" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230915 17:46:57.196" endtime="20230915 17:46:57.290"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230915 17:46:57.294" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230915 17:46:57.292" endtime="20230915 17:46:57.294"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 17:46:57.308" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 17:46:57.463" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 17:46:57.463" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230915 17:46:57.300" endtime="20230915 17:46:57.463"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 17:46:57.466" level="INFO"/>
<status status="PASS" starttime="20230915 17:46:57.465" endtime="20230915 17:46:57.466"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 17:46:57.467" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 17:46:57.467" endtime="20230915 17:46:57.467"/>
</kw>
<status status="PASS" starttime="20230915 17:46:57.298" endtime="20230915 17:46:57.468"/>
</kw>
<msg timestamp="20230915 17:46:57.468" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 17:46:57.298" endtime="20230915 17:46:57.468"/>
</kw>
<status status="PASS" starttime="20230915 17:46:57.296" endtime="20230915 17:46:57.470"/>
</kw>
<status status="PASS" starttime="20230915 17:46:57.294" endtime="20230915 17:46:57.470"/>
</kw>
<status status="PASS" starttime="20230915 17:46:57.193" endtime="20230915 17:46:57.471"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20230915 17:46:57.191" endtime="20230915 17:46:57.471"/>
</test>
<doc>Kinit test user</doc>
<status status="PASS" starttime="20230915 17:46:56.594" endtime="20230915 17:46:57.473"/>
</suite>
<suite id="s1-s2" name="Root-Ca-Rotation-Client-Checks" source="/opt/hadoop/smoketest/certrotation/root-ca-rotation-client-checks.robot">
<test id="s1-s2-t1" name="Create a volume and bucket" line="27">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 17:47:19.112" level="INFO">Running command 'ozone sh volume create rootca-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 17:47:27.539" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 17:47:27.539" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230915 17:47:19.105" endtime="20230915 17:47:27.539"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 17:47:27.540" level="INFO"/>
<status status="PASS" starttime="20230915 17:47:27.539" endtime="20230915 17:47:27.543"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 17:47:27.554" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 17:47:27.544" endtime="20230915 17:47:27.554"/>
</kw>
<status status="PASS" starttime="20230915 17:47:19.103" endtime="20230915 17:47:27.562"/>
</kw>
<msg timestamp="20230915 17:47:27.562" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 17:47:19.101" endtime="20230915 17:47:27.562"/>
</kw>
<msg timestamp="20230915 17:47:27.563" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230915 17:47:19.099" endtime="20230915 17:47:27.563"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 17:47:27.565" endtime="20230915 17:47:27.567"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 17:47:27.579" level="INFO">Running command 'ozone sh bucket create /rootca-volume/rootca-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 17:47:37.165" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 17:47:37.165" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230915 17:47:27.573" endtime="20230915 17:47:37.165"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 17:47:37.167" level="INFO"/>
<status status="PASS" starttime="20230915 17:47:37.166" endtime="20230915 17:47:37.167"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 17:47:37.168" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 17:47:37.167" endtime="20230915 17:47:37.168"/>
</kw>
<status status="PASS" starttime="20230915 17:47:27.572" endtime="20230915 17:47:37.169"/>
</kw>
<msg timestamp="20230915 17:47:37.169" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 17:47:27.570" endtime="20230915 17:47:37.169"/>
</kw>
<msg timestamp="20230915 17:47:37.169" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230915 17:47:27.568" endtime="20230915 17:47:37.169"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 17:47:37.169" endtime="20230915 17:47:37.170"/>
</kw>
<tag>create-volume-and-bucket</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230915 17:47:19.097" endtime="20230915 17:47:37.171"/>
</test>
<test id="s1-s2-t2" name="Create key" line="34">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 17:47:37.178" level="INFO">Running command 'echo "rootca: key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20230915 17:47:37.181" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 17:47:37.181" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230915 17:47:37.175" endtime="20230915 17:47:37.182"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 17:47:37.183" level="INFO"/>
<status status="PASS" starttime="20230915 17:47:37.182" endtime="20230915 17:47:37.183"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 17:47:37.184" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 17:47:37.183" endtime="20230915 17:47:37.184"/>
</kw>
<status status="PASS" starttime="20230915 17:47:37.174" endtime="20230915 17:47:37.184"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 17:47:37.190" level="INFO">Running command 'ozone sh key put /rootca-volume/rootca-bucket/rootca-key /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 17:47:53.684" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 17:47:53.684" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230915 17:47:37.187" endtime="20230915 17:47:53.684"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 17:47:53.686" level="INFO"/>
<status status="PASS" starttime="20230915 17:47:53.685" endtime="20230915 17:47:53.686"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 17:47:53.687" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 17:47:53.686" endtime="20230915 17:47:53.688"/>
</kw>
<status status="PASS" starttime="20230915 17:47:37.186" endtime="20230915 17:47:53.689"/>
</kw>
<msg timestamp="20230915 17:47:53.689" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 17:47:37.186" endtime="20230915 17:47:53.689"/>
</kw>
<msg timestamp="20230915 17:47:53.689" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230915 17:47:37.185" endtime="20230915 17:47:53.689"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 17:47:53.690" endtime="20230915 17:47:53.690"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 17:47:53.695" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 17:47:53.698" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 17:47:53.699" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230915 17:47:53.691" endtime="20230915 17:47:53.699"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 17:47:53.700" level="INFO"/>
<status status="PASS" starttime="20230915 17:47:53.699" endtime="20230915 17:47:53.700"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 17:47:53.701" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 17:47:53.700" endtime="20230915 17:47:53.701"/>
</kw>
<status status="PASS" starttime="20230915 17:47:53.690" endtime="20230915 17:47:53.701"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230915 17:47:37.173" endtime="20230915 17:47:53.701"/>
</test>
<test id="s1-s2-t3" name="Read data from previously created key" line="40">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230915 17:47:53.704" level="INFO">${random} = 94266</msg>
<status status="PASS" starttime="20230915 17:47:53.704" endtime="20230915 17:47:53.704"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 17:47:53.709" level="INFO">Running command 'ozone sh key get /rootca-volume/rootca-bucket/rootca-key /tmp/key-94266 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 17:48:07.094" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 17:48:07.094" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230915 17:47:53.706" endtime="20230915 17:48:07.094"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 17:48:07.096" level="INFO"/>
<status status="PASS" starttime="20230915 17:48:07.095" endtime="20230915 17:48:07.096"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 17:48:07.097" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 17:48:07.096" endtime="20230915 17:48:07.097"/>
</kw>
<status status="PASS" starttime="20230915 17:47:53.706" endtime="20230915 17:48:07.097"/>
</kw>
<msg timestamp="20230915 17:48:07.097" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 17:47:53.705" endtime="20230915 17:48:07.098"/>
</kw>
<msg timestamp="20230915 17:48:07.098" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230915 17:47:53.705" endtime="20230915 17:48:07.098"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 17:48:07.098" endtime="20230915 17:48:07.099"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 17:48:07.106" level="INFO">Running command 'cat /tmp/key-94266 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 17:48:07.110" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 17:48:07.110" level="INFO">${output} = rootca: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230915 17:48:07.100" endtime="20230915 17:48:07.111"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 17:48:07.112" level="INFO">rootca: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230915 17:48:07.111" endtime="20230915 17:48:07.112"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 17:48:07.113" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 17:48:07.112" endtime="20230915 17:48:07.113"/>
</kw>
<msg timestamp="20230915 17:48:07.114" level="INFO">${output} = rootca: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230915 17:48:07.099" endtime="20230915 17:48:07.114"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 17:48:07.114" endtime="20230915 17:48:07.114"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 17:48:07.119" level="INFO">Running command 'rm /tmp/key-94266 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 17:48:07.123" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 17:48:07.124" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230915 17:48:07.115" endtime="20230915 17:48:07.124"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 17:48:07.125" level="INFO"/>
<status status="PASS" starttime="20230915 17:48:07.124" endtime="20230915 17:48:07.125"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 17:48:07.126" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 17:48:07.125" endtime="20230915 17:48:07.126"/>
</kw>
<status status="PASS" starttime="20230915 17:48:07.115" endtime="20230915 17:48:07.126"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230915 17:47:53.703" endtime="20230915 17:48:07.127"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20230915 17:47:18.967" endtime="20230915 17:48:07.129"/>
</suite>
<suite id="s1-s3" name="Root-Ca-Rotation-Client-Checks" source="/opt/hadoop/smoketest/certrotation/root-ca-rotation-client-checks.robot">
<test id="s1-s3-t1" name="Create a volume and bucket" line="27">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 17:48:52.088" level="INFO">Running command 'ozone sh volume create rootca2-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 17:49:00.821" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 17:49:00.821" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230915 17:48:52.082" endtime="20230915 17:49:00.821"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 17:49:00.823" level="INFO"/>
<status status="PASS" starttime="20230915 17:49:00.822" endtime="20230915 17:49:00.823"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 17:49:00.824" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 17:49:00.823" endtime="20230915 17:49:00.824"/>
</kw>
<status status="PASS" starttime="20230915 17:48:52.081" endtime="20230915 17:49:00.824"/>
</kw>
<msg timestamp="20230915 17:49:00.825" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 17:48:52.080" endtime="20230915 17:49:00.825"/>
</kw>
<msg timestamp="20230915 17:49:00.825" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230915 17:48:52.079" endtime="20230915 17:49:00.825"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 17:49:00.825" endtime="20230915 17:49:00.826"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 17:49:00.831" level="INFO">Running command 'ozone sh bucket create /rootca2-volume/rootca2-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 17:49:08.802" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 17:49:08.802" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230915 17:49:00.828" endtime="20230915 17:49:08.802"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 17:49:08.804" level="INFO"/>
<status status="PASS" starttime="20230915 17:49:08.803" endtime="20230915 17:49:08.805"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 17:49:08.807" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 17:49:08.805" endtime="20230915 17:49:08.807"/>
</kw>
<status status="PASS" starttime="20230915 17:49:00.827" endtime="20230915 17:49:08.808"/>
</kw>
<msg timestamp="20230915 17:49:08.808" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 17:49:00.827" endtime="20230915 17:49:08.808"/>
</kw>
<msg timestamp="20230915 17:49:08.808" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230915 17:49:00.826" endtime="20230915 17:49:08.808"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 17:49:08.809" endtime="20230915 17:49:08.810"/>
</kw>
<tag>create-volume-and-bucket</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230915 17:48:52.077" endtime="20230915 17:49:08.810"/>
</test>
<test id="s1-s3-t2" name="Create key" line="34">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 17:49:08.816" level="INFO">Running command 'echo "rootca2: key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20230915 17:49:08.818" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 17:49:08.819" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230915 17:49:08.813" endtime="20230915 17:49:08.819"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 17:49:08.820" level="INFO"/>
<status status="PASS" starttime="20230915 17:49:08.819" endtime="20230915 17:49:08.820"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 17:49:08.821" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 17:49:08.820" endtime="20230915 17:49:08.821"/>
</kw>
<status status="PASS" starttime="20230915 17:49:08.812" endtime="20230915 17:49:08.821"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 17:49:08.827" level="INFO">Running command 'ozone sh key put /rootca2-volume/rootca2-bucket/rootca2-key /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 17:49:21.963" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 17:49:21.963" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230915 17:49:08.824" endtime="20230915 17:49:21.964"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 17:49:21.966" level="INFO"/>
<status status="PASS" starttime="20230915 17:49:21.964" endtime="20230915 17:49:21.966"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 17:49:21.967" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 17:49:21.966" endtime="20230915 17:49:21.967"/>
</kw>
<status status="PASS" starttime="20230915 17:49:08.823" endtime="20230915 17:49:21.968"/>
</kw>
<msg timestamp="20230915 17:49:21.968" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 17:49:08.822" endtime="20230915 17:49:21.968"/>
</kw>
<msg timestamp="20230915 17:49:21.968" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230915 17:49:08.821" endtime="20230915 17:49:21.968"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 17:49:21.969" endtime="20230915 17:49:21.969"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 17:49:21.974" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 17:49:21.977" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 17:49:21.978" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230915 17:49:21.970" endtime="20230915 17:49:21.978"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 17:49:21.979" level="INFO"/>
<status status="PASS" starttime="20230915 17:49:21.978" endtime="20230915 17:49:21.979"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 17:49:21.980" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 17:49:21.979" endtime="20230915 17:49:21.980"/>
</kw>
<status status="PASS" starttime="20230915 17:49:21.970" endtime="20230915 17:49:21.980"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230915 17:49:08.811" endtime="20230915 17:49:21.980"/>
</test>
<test id="s1-s3-t3" name="Read data from previously created key" line="40">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230915 17:49:21.983" level="INFO">${random} = 64608</msg>
<status status="PASS" starttime="20230915 17:49:21.983" endtime="20230915 17:49:21.983"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 17:49:21.989" level="INFO">Running command 'ozone sh key get /rootca2-volume/rootca2-bucket/rootca2-key /tmp/key-64608 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 17:49:33.401" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 17:49:33.402" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230915 17:49:21.986" endtime="20230915 17:49:33.402"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 17:49:33.403" level="INFO"/>
<status status="PASS" starttime="20230915 17:49:33.402" endtime="20230915 17:49:33.403"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 17:49:33.404" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 17:49:33.404" endtime="20230915 17:49:33.404"/>
</kw>
<status status="PASS" starttime="20230915 17:49:21.985" endtime="20230915 17:49:33.405"/>
</kw>
<msg timestamp="20230915 17:49:33.405" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 17:49:21.984" endtime="20230915 17:49:33.405"/>
</kw>
<msg timestamp="20230915 17:49:33.405" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230915 17:49:21.984" endtime="20230915 17:49:33.405"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 17:49:33.406" endtime="20230915 17:49:33.406"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 17:49:33.410" level="INFO">Running command 'cat /tmp/key-64608 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 17:49:33.417" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 17:49:33.418" level="INFO">${output} = rootca2: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230915 17:49:33.407" endtime="20230915 17:49:33.418"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 17:49:33.419" level="INFO">rootca2: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230915 17:49:33.418" endtime="20230915 17:49:33.419"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 17:49:33.420" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 17:49:33.420" endtime="20230915 17:49:33.420"/>
</kw>
<msg timestamp="20230915 17:49:33.421" level="INFO">${output} = rootca2: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230915 17:49:33.406" endtime="20230915 17:49:33.421"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 17:49:33.421" endtime="20230915 17:49:33.422"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 17:49:33.427" level="INFO">Running command 'rm /tmp/key-64608 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 17:49:33.429" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 17:49:33.429" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230915 17:49:33.422" endtime="20230915 17:49:33.429"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 17:49:33.431" level="INFO"/>
<status status="PASS" starttime="20230915 17:49:33.430" endtime="20230915 17:49:33.431"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 17:49:33.432" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 17:49:33.431" endtime="20230915 17:49:33.432"/>
</kw>
<status status="PASS" starttime="20230915 17:49:33.422" endtime="20230915 17:49:33.432"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230915 17:49:21.981" endtime="20230915 17:49:33.433"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20230915 17:48:51.960" endtime="20230915 17:49:33.435"/>
</suite>
<suite id="s1-s4" name="Root-Ca-Rotation" source="/opt/hadoop/smoketest/scmha/root-ca-rotation.robot">
<test id="s1-s4-t1" name="Verify root CA rotation metrics" line="26">
<kw name="Execute" library="os">
<var>${successRotationLine}</var>
<arg>curl -sS 'http://localhost:9876/jmx' | grep NumSuccessRotation</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 17:49:38.108" level="INFO">Running command 'curl -sS 'http://localhost:9876/jmx' | grep NumSuccessRotation 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 17:49:38.949" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 17:49:38.949" level="INFO">${output} =     "NumSuccessRotation" : 2,</msg>
<status status="PASS" starttime="20230915 17:49:38.104" endtime="20230915 17:49:38.949"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 17:49:38.952" level="INFO">    "NumSuccessRotation" : 2,</msg>
<status status="PASS" starttime="20230915 17:49:38.950" endtime="20230915 17:49:38.952"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 17:49:38.953" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 17:49:38.952" endtime="20230915 17:49:38.953"/>
</kw>
<status status="PASS" starttime="20230915 17:49:38.102" endtime="20230915 17:49:38.953"/>
</kw>
<msg timestamp="20230915 17:49:38.953" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 17:49:38.102" endtime="20230915 17:49:38.953"/>
</kw>
<msg timestamp="20230915 17:49:38.954" level="INFO">${successRotationLine} =     "NumSuccessRotation" : 2,</msg>
<status status="PASS" starttime="20230915 17:49:38.101" endtime="20230915 17:49:38.954"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${successRotationLine}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 17:49:38.954" level="INFO">    "NumSuccessRotation" : 2,</msg>
<status status="PASS" starttime="20230915 17:49:38.954" endtime="20230915 17:49:38.954"/>
</kw>
<kw name="Split String" library="String">
<var>${temp_1}</var>
<arg>${successRotationLine}</arg>
<arg>:</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20230915 17:49:38.955" level="INFO">${temp_1} = ['    "NumSuccessRotation" ', ' 2,']</msg>
<status status="PASS" starttime="20230915 17:49:38.955" endtime="20230915 17:49:38.955"/>
</kw>
<kw name="Strip String" library="String">
<var>${temp_2}</var>
<arg>${temp_1[1]}</arg>
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<msg timestamp="20230915 17:49:38.957" level="INFO">${temp_2} = 2,</msg>
<status status="PASS" starttime="20230915 17:49:38.956" endtime="20230915 17:49:38.957"/>
</kw>
<kw name="Split String" library="String">
<var>${temp_3}</var>
<arg>${temp_2}</arg>
<arg>,</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20230915 17:49:38.958" level="INFO">${temp_3} = ['2', '']</msg>
<status status="PASS" starttime="20230915 17:49:38.957" endtime="20230915 17:49:38.958"/>
</kw>
<kw name="Strip String" library="String">
<var>${successRotation}</var>
<arg>${temp_3[0]}</arg>
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<msg timestamp="20230915 17:49:38.960" level="INFO">${successRotation} = 2</msg>
<status status="PASS" starttime="20230915 17:49:38.958" endtime="20230915 17:49:38.960"/>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<var>${successRotation}</var>
<arg>${successRotation}</arg>
<doc>Converts the given item to a floating point number.</doc>
<msg timestamp="20230915 17:49:38.961" level="INFO">${successRotation} = 2.0</msg>
<status status="PASS" starttime="20230915 17:49:38.960" endtime="20230915 17:49:38.961"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${successRotation} &gt;= 1</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230915 17:49:38.961" endtime="20230915 17:49:38.962"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230915 17:49:38.100" endtime="20230915 17:49:38.962"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20230915 17:49:38.013" endtime="20230915 17:49:38.965"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="91468"/>
</suite>
<statistics>
<total>
<stat pass="8" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="2" fail="0" skip="0">create-volume-and-bucket</stat>
</tag>
<suite>
<stat pass="8" fail="0" skip="0" id="s1" name="ozonesecure-root-ca-rotation">ozonesecure-root-ca-rotation</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1" name="Kinit">ozonesecure-root-ca-rotation.Kinit</stat>
<stat pass="3" fail="0" skip="0" id="s1-s2" name="Root-Ca-Rotation-Client-Checks">ozonesecure-root-ca-rotation.Root-Ca-Rotation-Client-Checks</stat>
<stat pass="3" fail="0" skip="0" id="s1-s3" name="Root-Ca-Rotation-Client-Checks">ozonesecure-root-ca-rotation.Root-Ca-Rotation-Client-Checks</stat>
<stat pass="1" fail="0" skip="0" id="s1-s4" name="Root-Ca-Rotation">ozonesecure-root-ca-rotation.Root-Ca-Rotation</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
