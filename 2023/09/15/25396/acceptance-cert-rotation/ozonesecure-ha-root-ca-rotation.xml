<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 6.1.1 (Python 3.8.10 on linux)" generated="20230915 06:20:44.715" rpa="false" schemaversion="4">
<suite id="s1" name="ozonesecure-ha-root-ca-rotation">
<suite id="s1-s1" name="Kinit" source="/opt/hadoop/smoketest/kinit.robot">
<test id="s1-s1-t1" name="Kinit" line="27">
<kw name="Kinit test user" library="commonlib">
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 06:18:27.906" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 06:18:27.919" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 06:18:27.919" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230915 06:18:27.898" endtime="20230915 06:18:27.919"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 06:18:27.921" level="INFO">scm</msg>
<status status="PASS" starttime="20230915 06:18:27.920" endtime="20230915 06:18:27.921"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 06:18:27.922" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 06:18:27.921" endtime="20230915 06:18:27.922"/>
</kw>
<status status="PASS" starttime="20230915 06:18:27.898" endtime="20230915 06:18:27.922"/>
</kw>
<msg timestamp="20230915 06:18:27.922" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 06:18:27.897" endtime="20230915 06:18:27.922"/>
</kw>
<msg timestamp="20230915 06:18:27.923" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230915 06:18:27.897" endtime="20230915 06:18:27.923"/>
</kw>
<msg timestamp="20230915 06:18:27.923" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230915 06:18:27.896" endtime="20230915 06:18:27.923"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230915 06:18:27.924" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230915 06:18:27.923" endtime="20230915 06:18:27.924"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 06:18:27.934" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 06:18:27.970" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 06:18:27.971" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230915 06:18:27.927" endtime="20230915 06:18:27.971"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 06:18:27.972" level="INFO"/>
<status status="PASS" starttime="20230915 06:18:27.971" endtime="20230915 06:18:27.973"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 06:18:27.973" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 06:18:27.973" endtime="20230915 06:18:27.974"/>
</kw>
<status status="PASS" starttime="20230915 06:18:27.926" endtime="20230915 06:18:27.974"/>
</kw>
<msg timestamp="20230915 06:18:27.974" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 06:18:27.926" endtime="20230915 06:18:27.974"/>
</kw>
<status status="PASS" starttime="20230915 06:18:27.925" endtime="20230915 06:18:27.974"/>
</kw>
<status status="PASS" starttime="20230915 06:18:27.924" endtime="20230915 06:18:27.974"/>
</kw>
<status status="PASS" starttime="20230915 06:18:27.895" endtime="20230915 06:18:27.975"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20230915 06:18:27.894" endtime="20230915 06:18:27.975"/>
</test>
<doc>Kinit test user</doc>
<status status="PASS" starttime="20230915 06:18:27.827" endtime="20230915 06:18:27.976"/>
</suite>
<suite id="s1-s2" name="Scm-Leader-Transfer" source="/opt/hadoop/smoketest/scmha/scm-leader-transfer.robot">
<test id="s1-s2-t1" name="Transfer Leadership" line="47">
<kw name="Get SCM Leader Node">
<var>${leaderSCM}</var>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin scm roles --service-id=scmservice</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 06:18:43.033" level="INFO">Running command 'ozone admin scm roles --service-id=scmservice 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 06:18:48.595" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 06:18:48.595" level="INFO">${output} = scm3.org:9894:FOLLOWER:bda6801b-ee6f-4889-a521-5a15eda3ade2:172.25.0.118
scm2.org:9894:FOLLOWER:fbbcb28d-2cdb-445f-8f2a-09cdca61e23f:172.25.0.117
scm1.org:9894:LEADER:a70fee8a-720e-42c0-9156-9df00b5a4...</msg>
<status status="PASS" starttime="20230915 06:18:43.029" endtime="20230915 06:18:48.595"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 06:18:48.597" level="INFO">scm3.org:9894:FOLLOWER:bda6801b-ee6f-4889-a521-5a15eda3ade2:172.25.0.118
scm2.org:9894:FOLLOWER:fbbcb28d-2cdb-445f-8f2a-09cdca61e23f:172.25.0.117
scm1.org:9894:LEADER:a70fee8a-720e-42c0-9156-9df00b5a43ff:172.25.0.116</msg>
<status status="PASS" starttime="20230915 06:18:48.596" endtime="20230915 06:18:48.597"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 06:18:48.597" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 06:18:48.597" endtime="20230915 06:18:48.598"/>
</kw>
<status status="PASS" starttime="20230915 06:18:43.028" endtime="20230915 06:18:48.598"/>
</kw>
<msg timestamp="20230915 06:18:48.598" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 06:18:43.028" endtime="20230915 06:18:48.598"/>
</kw>
<msg timestamp="20230915 06:18:48.598" level="INFO">${result} = scm3.org:9894:FOLLOWER:bda6801b-ee6f-4889-a521-5a15eda3ade2:172.25.0.118
scm2.org:9894:FOLLOWER:fbbcb28d-2cdb-445f-8f2a-09cdca61e23f:172.25.0.117
scm1.org:9894:LEADER:a70fee8a-720e-42c0-9156-9df00b5a4...</msg>
<status status="PASS" starttime="20230915 06:18:43.027" endtime="20230915 06:18:48.598"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 06:18:48.599" level="INFO">scm3.org:9894:FOLLOWER:bda6801b-ee6f-4889-a521-5a15eda3ade2:172.25.0.118
scm2.org:9894:FOLLOWER:fbbcb28d-2cdb-445f-8f2a-09cdca61e23f:172.25.0.117
scm1.org:9894:LEADER:a70fee8a-720e-42c0-9156-9df00b5a43ff:172.25.0.116</msg>
<status status="PASS" starttime="20230915 06:18:48.598" endtime="20230915 06:18:48.599"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>LEADER</arg>
<arg>1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 06:18:48.599" endtime="20230915 06:18:48.599"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>FOLLOWER</arg>
<arg>2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 06:18:48.599" endtime="20230915 06:18:48.600"/>
</kw>
<kw name="Get Lines Containing String" library="String">
<var>${scmLine}</var>
<arg>${result}</arg>
<arg>LEADER</arg>
<doc>Returns lines of the given ``string`` that contain the ``pattern``.</doc>
<msg timestamp="20230915 06:18:48.600" level="INFO">1 out of 3 lines matched</msg>
<msg timestamp="20230915 06:18:48.601" level="INFO">${scmLine} = scm1.org:9894:LEADER:a70fee8a-720e-42c0-9156-9df00b5a43ff:172.25.0.116</msg>
<status status="PASS" starttime="20230915 06:18:48.600" endtime="20230915 06:18:48.601"/>
</kw>
<kw name="Split String" library="String">
<var>${splits}</var>
<arg>${scmLine}</arg>
<arg>:</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20230915 06:18:48.601" level="INFO">${splits} = ['scm1.org', '9894', 'LEADER', 'a70fee8a-720e-42c0-9156-9df00b5a43ff', '172.25.0.116']</msg>
<status status="PASS" starttime="20230915 06:18:48.601" endtime="20230915 06:18:48.601"/>
</kw>
<kw name="Strip String" library="String">
<var>${leaderSCM}</var>
<arg>${splits[3]}</arg>
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<msg timestamp="20230915 06:18:48.602" level="INFO">${leaderSCM} = a70fee8a-720e-42c0-9156-9df00b5a43ff</msg>
<status status="PASS" starttime="20230915 06:18:48.601" endtime="20230915 06:18:48.602"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Leader SCM: ${leaderSCM}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 06:18:48.603" level="INFO">Leader SCM: a70fee8a-720e-42c0-9156-9df00b5a43ff</msg>
<status status="PASS" starttime="20230915 06:18:48.603" endtime="20230915 06:18:48.603"/>
</kw>
<msg timestamp="20230915 06:18:48.603" level="INFO">${leaderSCM} = a70fee8a-720e-42c0-9156-9df00b5a43ff</msg>
<status status="PASS" starttime="20230915 06:18:43.027" endtime="20230915 06:18:48.603"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Leader SCM: ${leaderSCM}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 06:18:48.604" level="INFO">Leader SCM: a70fee8a-720e-42c0-9156-9df00b5a43ff</msg>
<status status="PASS" starttime="20230915 06:18:48.603" endtime="20230915 06:18:48.604"/>
</kw>
<kw name="Get SCM UUID">
<var>${target_scm_uuid}</var>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin scm roles --service-id=scmservice</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 06:18:48.608" level="INFO">Running command 'ozone admin scm roles --service-id=scmservice 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 06:18:56.372" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 06:18:56.372" level="INFO">${output} = scm3.org:9894:FOLLOWER:bda6801b-ee6f-4889-a521-5a15eda3ade2:172.25.0.118
scm2.org:9894:FOLLOWER:fbbcb28d-2cdb-445f-8f2a-09cdca61e23f:172.25.0.117
scm1.org:9894:LEADER:a70fee8a-720e-42c0-9156-9df00b5a4...</msg>
<status status="PASS" starttime="20230915 06:18:48.605" endtime="20230915 06:18:56.373"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 06:18:56.374" level="INFO">scm3.org:9894:FOLLOWER:bda6801b-ee6f-4889-a521-5a15eda3ade2:172.25.0.118
scm2.org:9894:FOLLOWER:fbbcb28d-2cdb-445f-8f2a-09cdca61e23f:172.25.0.117
scm1.org:9894:LEADER:a70fee8a-720e-42c0-9156-9df00b5a43ff:172.25.0.116</msg>
<status status="PASS" starttime="20230915 06:18:56.373" endtime="20230915 06:18:56.374"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 06:18:56.375" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 06:18:56.374" endtime="20230915 06:18:56.375"/>
</kw>
<status status="PASS" starttime="20230915 06:18:48.605" endtime="20230915 06:18:56.375"/>
</kw>
<msg timestamp="20230915 06:18:56.375" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 06:18:48.605" endtime="20230915 06:18:56.375"/>
</kw>
<msg timestamp="20230915 06:18:56.376" level="INFO">${result} = scm3.org:9894:FOLLOWER:bda6801b-ee6f-4889-a521-5a15eda3ade2:172.25.0.118
scm2.org:9894:FOLLOWER:fbbcb28d-2cdb-445f-8f2a-09cdca61e23f:172.25.0.117
scm1.org:9894:LEADER:a70fee8a-720e-42c0-9156-9df00b5a4...</msg>
<status status="PASS" starttime="20230915 06:18:48.604" endtime="20230915 06:18:56.376"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 06:18:56.376" level="INFO">scm3.org:9894:FOLLOWER:bda6801b-ee6f-4889-a521-5a15eda3ade2:172.25.0.118
scm2.org:9894:FOLLOWER:fbbcb28d-2cdb-445f-8f2a-09cdca61e23f:172.25.0.117
scm1.org:9894:LEADER:a70fee8a-720e-42c0-9156-9df00b5a43ff:172.25.0.116</msg>
<status status="PASS" starttime="20230915 06:18:56.376" endtime="20230915 06:18:56.376"/>
</kw>
<kw name="Get Lines Containing String" library="String">
<var>${scm_line}</var>
<arg>${result}</arg>
<arg>${TARGET_SCM}</arg>
<doc>Returns lines of the given ``string`` that contain the ``pattern``.</doc>
<msg timestamp="20230915 06:18:56.377" level="INFO">1 out of 3 lines matched</msg>
<msg timestamp="20230915 06:18:56.377" level="INFO">${scm_line} = scm2.org:9894:FOLLOWER:fbbcb28d-2cdb-445f-8f2a-09cdca61e23f:172.25.0.117</msg>
<status status="PASS" starttime="20230915 06:18:56.376" endtime="20230915 06:18:56.377"/>
</kw>
<kw name="Split String" library="String">
<var>${scm_split}</var>
<arg>${scm_line}</arg>
<arg>:</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20230915 06:18:56.377" level="INFO">${scm_split} = ['scm2.org', '9894', 'FOLLOWER', 'fbbcb28d-2cdb-445f-8f2a-09cdca61e23f', '172.25.0.117']</msg>
<status status="PASS" starttime="20230915 06:18:56.377" endtime="20230915 06:18:56.378"/>
</kw>
<kw name="Strip String" library="String">
<var>${scm_uuid}</var>
<arg>${scm_split[3]}</arg>
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<msg timestamp="20230915 06:18:56.379" level="INFO">${scm_uuid} = fbbcb28d-2cdb-445f-8f2a-09cdca61e23f</msg>
<status status="PASS" starttime="20230915 06:18:56.378" endtime="20230915 06:18:56.379"/>
</kw>
<msg timestamp="20230915 06:18:56.379" level="INFO">${target_scm_uuid} = fbbcb28d-2cdb-445f-8f2a-09cdca61e23f</msg>
<status status="PASS" starttime="20230915 06:18:48.604" endtime="20230915 06:18:56.379"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin scm transfer --service-id=scmservice -n ${target_scm_uuid}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 06:18:56.384" level="INFO">Running command 'ozone admin scm transfer --service-id=scmservice -n fbbcb28d-2cdb-445f-8f2a-09cdca61e23f 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 06:19:08.932" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 06:19:08.932" level="INFO">${output} = Transfer leadership successfully to fbbcb28d-2cdb-445f-8f2a-09cdca61e23f.</msg>
<status status="PASS" starttime="20230915 06:18:56.381" endtime="20230915 06:19:08.933"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 06:19:08.934" level="INFO">Transfer leadership successfully to fbbcb28d-2cdb-445f-8f2a-09cdca61e23f.</msg>
<status status="PASS" starttime="20230915 06:19:08.933" endtime="20230915 06:19:08.934"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 06:19:08.935" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 06:19:08.935" endtime="20230915 06:19:08.935"/>
</kw>
<status status="PASS" starttime="20230915 06:18:56.381" endtime="20230915 06:19:08.935"/>
</kw>
<msg timestamp="20230915 06:19:08.936" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 06:18:56.380" endtime="20230915 06:19:08.936"/>
</kw>
<msg timestamp="20230915 06:19:08.937" level="INFO">${result} = Transfer leadership successfully to fbbcb28d-2cdb-445f-8f2a-09cdca61e23f.</msg>
<status status="PASS" starttime="20230915 06:18:56.379" endtime="20230915 06:19:08.937"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 06:19:08.938" level="INFO">Transfer leadership successfully to fbbcb28d-2cdb-445f-8f2a-09cdca61e23f.</msg>
<status status="PASS" starttime="20230915 06:19:08.937" endtime="20230915 06:19:08.938"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Transfer leadership successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 06:19:08.938" endtime="20230915 06:19:08.938"/>
</kw>
<kw name="Get SCM Leader Node">
<var>${newLeaderSCM}</var>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin scm roles --service-id=scmservice</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 06:19:08.943" level="INFO">Running command 'ozone admin scm roles --service-id=scmservice 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 06:19:16.930" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 06:19:16.931" level="INFO">${output} = scm3.org:9894:FOLLOWER:bda6801b-ee6f-4889-a521-5a15eda3ade2:172.25.0.118
scm2.org:9894:LEADER:fbbcb28d-2cdb-445f-8f2a-09cdca61e23f:172.25.0.117
scm1.org:9894:FOLLOWER:a70fee8a-720e-42c0-9156-9df00b5a4...</msg>
<status status="PASS" starttime="20230915 06:19:08.940" endtime="20230915 06:19:16.931"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 06:19:16.932" level="INFO">scm3.org:9894:FOLLOWER:bda6801b-ee6f-4889-a521-5a15eda3ade2:172.25.0.118
scm2.org:9894:LEADER:fbbcb28d-2cdb-445f-8f2a-09cdca61e23f:172.25.0.117
scm1.org:9894:FOLLOWER:a70fee8a-720e-42c0-9156-9df00b5a43ff:172.25.0.116</msg>
<status status="PASS" starttime="20230915 06:19:16.931" endtime="20230915 06:19:16.932"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 06:19:16.935" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 06:19:16.932" endtime="20230915 06:19:16.935"/>
</kw>
<status status="PASS" starttime="20230915 06:19:08.940" endtime="20230915 06:19:16.935"/>
</kw>
<msg timestamp="20230915 06:19:16.935" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 06:19:08.939" endtime="20230915 06:19:16.935"/>
</kw>
<msg timestamp="20230915 06:19:16.938" level="INFO">${result} = scm3.org:9894:FOLLOWER:bda6801b-ee6f-4889-a521-5a15eda3ade2:172.25.0.118
scm2.org:9894:LEADER:fbbcb28d-2cdb-445f-8f2a-09cdca61e23f:172.25.0.117
scm1.org:9894:FOLLOWER:a70fee8a-720e-42c0-9156-9df00b5a4...</msg>
<status status="PASS" starttime="20230915 06:19:08.939" endtime="20230915 06:19:16.938"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 06:19:16.938" level="INFO">scm3.org:9894:FOLLOWER:bda6801b-ee6f-4889-a521-5a15eda3ade2:172.25.0.118
scm2.org:9894:LEADER:fbbcb28d-2cdb-445f-8f2a-09cdca61e23f:172.25.0.117
scm1.org:9894:FOLLOWER:a70fee8a-720e-42c0-9156-9df00b5a43ff:172.25.0.116</msg>
<status status="PASS" starttime="20230915 06:19:16.938" endtime="20230915 06:19:16.938"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>LEADER</arg>
<arg>1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 06:19:16.938" endtime="20230915 06:19:16.941"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>FOLLOWER</arg>
<arg>2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 06:19:16.941" endtime="20230915 06:19:16.942"/>
</kw>
<kw name="Get Lines Containing String" library="String">
<var>${scmLine}</var>
<arg>${result}</arg>
<arg>LEADER</arg>
<doc>Returns lines of the given ``string`` that contain the ``pattern``.</doc>
<msg timestamp="20230915 06:19:16.943" level="INFO">1 out of 3 lines matched</msg>
<msg timestamp="20230915 06:19:16.943" level="INFO">${scmLine} = scm2.org:9894:LEADER:fbbcb28d-2cdb-445f-8f2a-09cdca61e23f:172.25.0.117</msg>
<status status="PASS" starttime="20230915 06:19:16.942" endtime="20230915 06:19:16.943"/>
</kw>
<kw name="Split String" library="String">
<var>${splits}</var>
<arg>${scmLine}</arg>
<arg>:</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20230915 06:19:16.944" level="INFO">${splits} = ['scm2.org', '9894', 'LEADER', 'fbbcb28d-2cdb-445f-8f2a-09cdca61e23f', '172.25.0.117']</msg>
<status status="PASS" starttime="20230915 06:19:16.943" endtime="20230915 06:19:16.944"/>
</kw>
<kw name="Strip String" library="String">
<var>${leaderSCM}</var>
<arg>${splits[3]}</arg>
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<msg timestamp="20230915 06:19:16.946" level="INFO">${leaderSCM} = fbbcb28d-2cdb-445f-8f2a-09cdca61e23f</msg>
<status status="PASS" starttime="20230915 06:19:16.944" endtime="20230915 06:19:16.946"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Leader SCM: ${leaderSCM}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 06:19:16.947" level="INFO">Leader SCM: fbbcb28d-2cdb-445f-8f2a-09cdca61e23f</msg>
<status status="PASS" starttime="20230915 06:19:16.946" endtime="20230915 06:19:16.947"/>
</kw>
<msg timestamp="20230915 06:19:16.947" level="INFO">${newLeaderSCM} = fbbcb28d-2cdb-445f-8f2a-09cdca61e23f</msg>
<status status="PASS" starttime="20230915 06:19:08.939" endtime="20230915 06:19:16.947"/>
</kw>
<kw name="Should Not Be Equal" library="BuiltIn">
<arg>${leaderSCM}</arg>
<arg>${newLeaderSCM}</arg>
<doc>Fails if the given objects are equal.</doc>
<status status="PASS" starttime="20230915 06:19:16.947" endtime="20230915 06:19:16.948"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230915 06:18:43.026" endtime="20230915 06:19:16.948"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20230915 06:18:42.971" endtime="20230915 06:19:16.950"/>
</suite>
<suite id="s1-s3" name="Root-Ca-Rotation-Client-Checks" source="/opt/hadoop/smoketest/certrotation/root-ca-rotation-client-checks.robot">
<test id="s1-s3-t1" name="Create a volume and bucket" line="27">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 06:19:24.455" level="INFO">Running command 'ozone sh volume create rootca-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 06:19:31.845" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 06:19:31.845" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230915 06:19:24.451" endtime="20230915 06:19:31.846"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 06:19:31.854" level="INFO"/>
<status status="PASS" starttime="20230915 06:19:31.849" endtime="20230915 06:19:31.854"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 06:19:31.861" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 06:19:31.854" endtime="20230915 06:19:31.861"/>
</kw>
<status status="PASS" starttime="20230915 06:19:24.451" endtime="20230915 06:19:31.861"/>
</kw>
<msg timestamp="20230915 06:19:31.861" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 06:19:24.450" endtime="20230915 06:19:31.861"/>
</kw>
<msg timestamp="20230915 06:19:31.861" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230915 06:19:24.449" endtime="20230915 06:19:31.865"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 06:19:31.865" endtime="20230915 06:19:31.866"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 06:19:31.884" level="INFO">Running command 'ozone sh bucket create /rootca-volume/rootca-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 06:19:40.585" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 06:19:40.586" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230915 06:19:31.873" endtime="20230915 06:19:40.586"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 06:19:40.591" level="INFO"/>
<status status="PASS" starttime="20230915 06:19:40.589" endtime="20230915 06:19:40.591"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 06:19:40.594" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 06:19:40.591" endtime="20230915 06:19:40.594"/>
</kw>
<status status="PASS" starttime="20230915 06:19:31.873" endtime="20230915 06:19:40.594"/>
</kw>
<msg timestamp="20230915 06:19:40.595" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 06:19:31.869" endtime="20230915 06:19:40.596"/>
</kw>
<msg timestamp="20230915 06:19:40.596" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230915 06:19:31.866" endtime="20230915 06:19:40.596"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 06:19:40.597" endtime="20230915 06:19:40.598"/>
</kw>
<tag>create-volume-and-bucket</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230915 06:19:24.448" endtime="20230915 06:19:40.598"/>
</test>
<test id="s1-s3-t2" name="Create key" line="34">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 06:19:40.610" level="INFO">Running command 'echo "rootca: key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20230915 06:19:40.613" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 06:19:40.613" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230915 06:19:40.605" endtime="20230915 06:19:40.613"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 06:19:40.615" level="INFO"/>
<status status="PASS" starttime="20230915 06:19:40.615" endtime="20230915 06:19:40.616"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 06:19:40.618" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 06:19:40.616" endtime="20230915 06:19:40.618"/>
</kw>
<status status="PASS" starttime="20230915 06:19:40.604" endtime="20230915 06:19:40.618"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 06:19:40.627" level="INFO">Running command 'ozone sh key put /rootca-volume/rootca-bucket/rootca-key /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 06:19:55.470" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 06:19:55.470" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230915 06:19:40.624" endtime="20230915 06:19:55.470"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 06:19:55.471" level="INFO"/>
<status status="PASS" starttime="20230915 06:19:55.470" endtime="20230915 06:19:55.471"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 06:19:55.476" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 06:19:55.475" endtime="20230915 06:19:55.484"/>
</kw>
<status status="PASS" starttime="20230915 06:19:40.620" endtime="20230915 06:19:55.487"/>
</kw>
<msg timestamp="20230915 06:19:55.487" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 06:19:40.619" endtime="20230915 06:19:55.489"/>
</kw>
<msg timestamp="20230915 06:19:55.489" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230915 06:19:40.618" endtime="20230915 06:19:55.489"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 06:19:55.489" endtime="20230915 06:19:55.490"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 06:19:55.511" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 06:19:55.516" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 06:19:55.516" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230915 06:19:55.498" endtime="20230915 06:19:55.516"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 06:19:55.520" level="INFO"/>
<status status="PASS" starttime="20230915 06:19:55.516" endtime="20230915 06:19:55.520"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 06:19:55.523" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 06:19:55.521" endtime="20230915 06:19:55.523"/>
</kw>
<status status="PASS" starttime="20230915 06:19:55.496" endtime="20230915 06:19:55.524"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230915 06:19:40.603" endtime="20230915 06:19:55.524"/>
</test>
<test id="s1-s3-t3" name="Read data from previously created key" line="40">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230915 06:19:55.531" level="INFO">${random} = 11696</msg>
<status status="PASS" starttime="20230915 06:19:55.531" endtime="20230915 06:19:55.531"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 06:19:55.546" level="INFO">Running command 'ozone sh key get /rootca-volume/rootca-bucket/rootca-key /tmp/key-11696 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 06:20:10.636" level="INFO">${rc} = 255</msg>
<msg timestamp="20230915 06:20:10.636" level="INFO">${output} = java.util.concurrent.ExecutionException: org.apache.ratis.thirdparty.io.grpc.StatusRuntimeException: UNAVAILABLE: io exception</msg>
<status status="PASS" starttime="20230915 06:19:55.539" endtime="20230915 06:20:10.636"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 06:20:10.638" level="INFO">java.util.concurrent.ExecutionException: org.apache.ratis.thirdparty.io.grpc.StatusRuntimeException: UNAVAILABLE: io exception</msg>
<status status="PASS" starttime="20230915 06:20:10.637" endtime="20230915 06:20:10.638"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 06:20:10.639" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<msg timestamp="20230915 06:20:10.639" level="FAIL">255 != 0</msg>
<status status="FAIL" starttime="20230915 06:20:10.638" endtime="20230915 06:20:10.639"/>
</kw>
<status status="FAIL" starttime="20230915 06:19:55.538" endtime="20230915 06:20:10.639"/>
</kw>
<msg timestamp="20230915 06:20:10.639" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20230915 06:19:55.536" endtime="20230915 06:20:10.639"/>
</kw>
<status status="FAIL" starttime="20230915 06:19:55.534" endtime="20230915 06:20:10.640"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230915 06:20:10.640" endtime="20230915 06:20:10.640"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/key-${random}</arg>
<arg>0</arg>
<status status="NOT RUN" starttime="20230915 06:20:10.640" endtime="20230915 06:20:10.640"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230915 06:20:10.640" endtime="20230915 06:20:10.640"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/key-${random}</arg>
<arg>0</arg>
<status status="NOT RUN" starttime="20230915 06:20:10.640" endtime="20230915 06:20:10.640"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20230915 06:19:55.530" endtime="20230915 06:20:10.641">255 != 0</status>
</test>
<doc>Generate data</doc>
<status status="FAIL" starttime="20230915 06:19:24.360" endtime="20230915 06:20:10.642"/>
</suite>
<status status="FAIL" starttime="N/A" endtime="N/A" elapsedtime="80410"/>
</suite>
<statistics>
<total>
<stat pass="4" fail="1" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="1" fail="0" skip="0">create-volume-and-bucket</stat>
</tag>
<suite>
<stat pass="4" fail="1" skip="0" id="s1" name="ozonesecure-ha-root-ca-rotation">ozonesecure-ha-root-ca-rotation</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1" name="Kinit">ozonesecure-ha-root-ca-rotation.Kinit</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2" name="Scm-Leader-Transfer">ozonesecure-ha-root-ca-rotation.Scm-Leader-Transfer</stat>
<stat pass="2" fail="1" skip="0" id="s1-s3" name="Root-Ca-Rotation-Client-Checks">ozonesecure-ha-root-ca-rotation.Root-Ca-Rotation-Client-Checks</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
