<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 6.1.1 (Python 3.8.10 on linux)" generated="20230915 06:28:55.846" rpa="false" schemaversion="4">
<suite id="s1" name="ozonesecure-root-ca-rotation">
<suite id="s1-s1" name="Kinit" source="/opt/hadoop/smoketest/kinit.robot">
<test id="s1-s1-t1" name="Kinit" line="27">
<kw name="Kinit test user" library="commonlib">
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 06:26:04.437" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 06:26:04.441" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 06:26:04.441" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230915 06:26:04.431" endtime="20230915 06:26:04.441"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 06:26:04.442" level="INFO">scm</msg>
<status status="PASS" starttime="20230915 06:26:04.441" endtime="20230915 06:26:04.442"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 06:26:04.443" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 06:26:04.442" endtime="20230915 06:26:04.443"/>
</kw>
<status status="PASS" starttime="20230915 06:26:04.419" endtime="20230915 06:26:04.443"/>
</kw>
<msg timestamp="20230915 06:26:04.443" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 06:26:04.418" endtime="20230915 06:26:04.443"/>
</kw>
<msg timestamp="20230915 06:26:04.443" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230915 06:26:04.418" endtime="20230915 06:26:04.443"/>
</kw>
<msg timestamp="20230915 06:26:04.444" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230915 06:26:04.417" endtime="20230915 06:26:04.444"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230915 06:26:04.444" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230915 06:26:04.444" endtime="20230915 06:26:04.444"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 06:26:04.449" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 06:26:04.474" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 06:26:04.474" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230915 06:26:04.446" endtime="20230915 06:26:04.474"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 06:26:04.475" level="INFO"/>
<status status="PASS" starttime="20230915 06:26:04.474" endtime="20230915 06:26:04.475"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 06:26:04.476" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 06:26:04.475" endtime="20230915 06:26:04.476"/>
</kw>
<status status="PASS" starttime="20230915 06:26:04.446" endtime="20230915 06:26:04.476"/>
</kw>
<msg timestamp="20230915 06:26:04.476" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 06:26:04.445" endtime="20230915 06:26:04.476"/>
</kw>
<status status="PASS" starttime="20230915 06:26:04.445" endtime="20230915 06:26:04.476"/>
</kw>
<status status="PASS" starttime="20230915 06:26:04.444" endtime="20230915 06:26:04.476"/>
</kw>
<status status="PASS" starttime="20230915 06:26:04.416" endtime="20230915 06:26:04.477"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20230915 06:26:04.415" endtime="20230915 06:26:04.477"/>
</test>
<doc>Kinit test user</doc>
<status status="PASS" starttime="20230915 06:26:04.338" endtime="20230915 06:26:04.478"/>
</suite>
<suite id="s1-s2" name="Root-Ca-Rotation-Client-Checks" source="/opt/hadoop/smoketest/certrotation/root-ca-rotation-client-checks.robot">
<test id="s1-s2-t1" name="Create a volume and bucket" line="27">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 06:26:30.637" level="INFO">Running command 'ozone sh volume create rootca-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 06:26:35.998" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 06:26:35.998" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230915 06:26:30.634" endtime="20230915 06:26:35.998"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 06:26:35.999" level="INFO"/>
<status status="PASS" starttime="20230915 06:26:35.998" endtime="20230915 06:26:36.000"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 06:26:36.000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 06:26:36.000" endtime="20230915 06:26:36.001"/>
</kw>
<status status="PASS" starttime="20230915 06:26:30.634" endtime="20230915 06:26:36.001"/>
</kw>
<msg timestamp="20230915 06:26:36.001" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 06:26:30.633" endtime="20230915 06:26:36.001"/>
</kw>
<msg timestamp="20230915 06:26:36.001" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230915 06:26:30.633" endtime="20230915 06:26:36.001"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 06:26:36.001" endtime="20230915 06:26:36.002"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 06:26:36.007" level="INFO">Running command 'ozone sh bucket create /rootca-volume/rootca-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 06:26:41.705" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 06:26:41.705" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230915 06:26:36.003" endtime="20230915 06:26:41.705"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 06:26:41.706" level="INFO"/>
<status status="PASS" starttime="20230915 06:26:41.706" endtime="20230915 06:26:41.707"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 06:26:41.707" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 06:26:41.707" endtime="20230915 06:26:41.707"/>
</kw>
<status status="PASS" starttime="20230915 06:26:36.003" endtime="20230915 06:26:41.707"/>
</kw>
<msg timestamp="20230915 06:26:41.707" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 06:26:36.003" endtime="20230915 06:26:41.708"/>
</kw>
<msg timestamp="20230915 06:26:41.708" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230915 06:26:36.002" endtime="20230915 06:26:41.708"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 06:26:41.708" endtime="20230915 06:26:41.708"/>
</kw>
<tag>create-volume-and-bucket</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230915 06:26:30.632" endtime="20230915 06:26:41.709"/>
</test>
<test id="s1-s2-t2" name="Create key" line="34">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 06:26:41.714" level="INFO">Running command 'echo "rootca: key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20230915 06:26:41.716" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 06:26:41.716" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230915 06:26:41.711" endtime="20230915 06:26:41.716"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 06:26:41.717" level="INFO"/>
<status status="PASS" starttime="20230915 06:26:41.716" endtime="20230915 06:26:41.717"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 06:26:41.718" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 06:26:41.717" endtime="20230915 06:26:41.718"/>
</kw>
<status status="PASS" starttime="20230915 06:26:41.711" endtime="20230915 06:26:41.718"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 06:26:41.722" level="INFO">Running command 'ozone sh key put /rootca-volume/rootca-bucket/rootca-key /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 06:26:53.213" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 06:26:53.213" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230915 06:26:41.720" endtime="20230915 06:26:53.213"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 06:26:53.214" level="INFO"/>
<status status="PASS" starttime="20230915 06:26:53.213" endtime="20230915 06:26:53.214"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 06:26:53.215" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 06:26:53.214" endtime="20230915 06:26:53.215"/>
</kw>
<status status="PASS" starttime="20230915 06:26:41.719" endtime="20230915 06:26:53.215"/>
</kw>
<msg timestamp="20230915 06:26:53.215" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 06:26:41.719" endtime="20230915 06:26:53.215"/>
</kw>
<msg timestamp="20230915 06:26:53.216" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230915 06:26:41.718" endtime="20230915 06:26:53.216"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 06:26:53.216" endtime="20230915 06:26:53.216"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 06:26:53.219" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 06:26:53.222" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 06:26:53.222" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230915 06:26:53.217" endtime="20230915 06:26:53.222"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 06:26:53.223" level="INFO"/>
<status status="PASS" starttime="20230915 06:26:53.223" endtime="20230915 06:26:53.223"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 06:26:53.224" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 06:26:53.224" endtime="20230915 06:26:53.224"/>
</kw>
<status status="PASS" starttime="20230915 06:26:53.216" endtime="20230915 06:26:53.224"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230915 06:26:41.710" endtime="20230915 06:26:53.225"/>
</test>
<test id="s1-s2-t3" name="Read data from previously created key" line="40">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230915 06:26:53.227" level="INFO">${random} = 17253</msg>
<status status="PASS" starttime="20230915 06:26:53.227" endtime="20230915 06:26:53.227"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 06:26:53.231" level="INFO">Running command 'ozone sh key get /rootca-volume/rootca-bucket/rootca-key /tmp/key-17253 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 06:27:01.269" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 06:27:01.270" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230915 06:26:53.229" endtime="20230915 06:27:01.270"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 06:27:01.271" level="INFO"/>
<status status="PASS" starttime="20230915 06:27:01.270" endtime="20230915 06:27:01.271"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 06:27:01.272" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 06:27:01.271" endtime="20230915 06:27:01.272"/>
</kw>
<status status="PASS" starttime="20230915 06:26:53.228" endtime="20230915 06:27:01.272"/>
</kw>
<msg timestamp="20230915 06:27:01.273" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 06:26:53.228" endtime="20230915 06:27:01.273"/>
</kw>
<msg timestamp="20230915 06:27:01.273" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230915 06:26:53.227" endtime="20230915 06:27:01.273"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 06:27:01.273" endtime="20230915 06:27:01.274"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 06:27:01.277" level="INFO">Running command 'cat /tmp/key-17253 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 06:27:01.280" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 06:27:01.280" level="INFO">${output} = rootca: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230915 06:27:01.274" endtime="20230915 06:27:01.280"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 06:27:01.281" level="INFO">rootca: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230915 06:27:01.280" endtime="20230915 06:27:01.281"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 06:27:01.282" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 06:27:01.281" endtime="20230915 06:27:01.282"/>
</kw>
<msg timestamp="20230915 06:27:01.282" level="INFO">${output} = rootca: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230915 06:27:01.274" endtime="20230915 06:27:01.282"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 06:27:01.282" endtime="20230915 06:27:01.283"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 06:27:01.286" level="INFO">Running command 'rm /tmp/key-17253 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 06:27:01.288" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 06:27:01.289" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230915 06:27:01.284" endtime="20230915 06:27:01.289"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 06:27:01.290" level="INFO"/>
<status status="PASS" starttime="20230915 06:27:01.289" endtime="20230915 06:27:01.290"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 06:27:01.290" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 06:27:01.290" endtime="20230915 06:27:01.290"/>
</kw>
<status status="PASS" starttime="20230915 06:27:01.283" endtime="20230915 06:27:01.291"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230915 06:26:53.226" endtime="20230915 06:27:01.291"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20230915 06:26:30.583" endtime="20230915 06:27:01.292"/>
</suite>
<suite id="s1-s3" name="Root-Ca-Rotation-Client-Checks" source="/opt/hadoop/smoketest/certrotation/root-ca-rotation-client-checks.robot">
<test id="s1-s3-t1" name="Create a volume and bucket" line="27">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 06:28:06.767" level="INFO">Running command 'ozone sh volume create rootca2-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 06:28:12.246" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 06:28:12.246" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230915 06:28:06.765" endtime="20230915 06:28:12.246"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 06:28:12.247" level="INFO"/>
<status status="PASS" starttime="20230915 06:28:12.247" endtime="20230915 06:28:12.247"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 06:28:12.248" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 06:28:12.248" endtime="20230915 06:28:12.248"/>
</kw>
<status status="PASS" starttime="20230915 06:28:06.764" endtime="20230915 06:28:12.248"/>
</kw>
<msg timestamp="20230915 06:28:12.248" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 06:28:06.764" endtime="20230915 06:28:12.248"/>
</kw>
<msg timestamp="20230915 06:28:12.249" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230915 06:28:06.763" endtime="20230915 06:28:12.249"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 06:28:12.249" endtime="20230915 06:28:12.249"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 06:28:12.253" level="INFO">Running command 'ozone sh bucket create /rootca2-volume/rootca2-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 06:28:17.086" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 06:28:17.086" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230915 06:28:12.251" endtime="20230915 06:28:17.086"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 06:28:17.087" level="INFO"/>
<status status="PASS" starttime="20230915 06:28:17.086" endtime="20230915 06:28:17.087"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 06:28:17.088" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 06:28:17.088" endtime="20230915 06:28:17.088"/>
</kw>
<status status="PASS" starttime="20230915 06:28:12.250" endtime="20230915 06:28:17.088"/>
</kw>
<msg timestamp="20230915 06:28:17.088" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 06:28:12.250" endtime="20230915 06:28:17.089"/>
</kw>
<msg timestamp="20230915 06:28:17.089" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230915 06:28:12.250" endtime="20230915 06:28:17.089"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 06:28:17.089" endtime="20230915 06:28:17.089"/>
</kw>
<tag>create-volume-and-bucket</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230915 06:28:06.762" endtime="20230915 06:28:17.090"/>
</test>
<test id="s1-s3-t2" name="Create key" line="34">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 06:28:17.096" level="INFO">Running command 'echo "rootca2: key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20230915 06:28:17.099" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 06:28:17.099" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230915 06:28:17.093" endtime="20230915 06:28:17.099"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 06:28:17.100" level="INFO"/>
<status status="PASS" starttime="20230915 06:28:17.099" endtime="20230915 06:28:17.100"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 06:28:17.101" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 06:28:17.100" endtime="20230915 06:28:17.101"/>
</kw>
<status status="PASS" starttime="20230915 06:28:17.093" endtime="20230915 06:28:17.101"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 06:28:17.106" level="INFO">Running command 'ozone sh key put /rootca2-volume/rootca2-bucket/rootca2-key /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 06:28:25.257" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 06:28:25.257" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230915 06:28:17.104" endtime="20230915 06:28:25.257"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 06:28:25.258" level="INFO"/>
<status status="PASS" starttime="20230915 06:28:25.257" endtime="20230915 06:28:25.258"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 06:28:25.259" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 06:28:25.258" endtime="20230915 06:28:25.259"/>
</kw>
<status status="PASS" starttime="20230915 06:28:17.103" endtime="20230915 06:28:25.259"/>
</kw>
<msg timestamp="20230915 06:28:25.259" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 06:28:17.102" endtime="20230915 06:28:25.259"/>
</kw>
<msg timestamp="20230915 06:28:25.260" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230915 06:28:17.102" endtime="20230915 06:28:25.260"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 06:28:25.260" endtime="20230915 06:28:25.260"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 06:28:25.264" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 06:28:25.266" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 06:28:25.267" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230915 06:28:25.261" endtime="20230915 06:28:25.267"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 06:28:25.268" level="INFO"/>
<status status="PASS" starttime="20230915 06:28:25.267" endtime="20230915 06:28:25.268"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 06:28:25.268" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 06:28:25.268" endtime="20230915 06:28:25.268"/>
</kw>
<status status="PASS" starttime="20230915 06:28:25.260" endtime="20230915 06:28:25.269"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230915 06:28:17.091" endtime="20230915 06:28:25.269"/>
</test>
<test id="s1-s3-t3" name="Read data from previously created key" line="40">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230915 06:28:25.272" level="INFO">${random} = 45268</msg>
<status status="PASS" starttime="20230915 06:28:25.271" endtime="20230915 06:28:25.272"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 06:28:25.276" level="INFO">Running command 'ozone sh key get /rootca2-volume/rootca2-bucket/rootca2-key /tmp/key-45268 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 06:28:32.769" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 06:28:32.769" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230915 06:28:25.274" endtime="20230915 06:28:32.770"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 06:28:32.771" level="INFO"/>
<status status="PASS" starttime="20230915 06:28:32.770" endtime="20230915 06:28:32.771"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 06:28:32.771" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 06:28:32.771" endtime="20230915 06:28:32.772"/>
</kw>
<status status="PASS" starttime="20230915 06:28:25.274" endtime="20230915 06:28:32.772"/>
</kw>
<msg timestamp="20230915 06:28:32.772" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 06:28:25.273" endtime="20230915 06:28:32.772"/>
</kw>
<msg timestamp="20230915 06:28:32.772" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230915 06:28:25.272" endtime="20230915 06:28:32.772"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 06:28:32.772" endtime="20230915 06:28:32.773"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 06:28:32.776" level="INFO">Running command 'cat /tmp/key-45268 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 06:28:32.779" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 06:28:32.779" level="INFO">${output} = rootca2: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230915 06:28:32.773" endtime="20230915 06:28:32.779"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 06:28:32.780" level="INFO">rootca2: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230915 06:28:32.779" endtime="20230915 06:28:32.780"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 06:28:32.781" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 06:28:32.780" endtime="20230915 06:28:32.781"/>
</kw>
<msg timestamp="20230915 06:28:32.781" level="INFO">${output} = rootca2: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230915 06:28:32.773" endtime="20230915 06:28:32.781"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 06:28:32.781" endtime="20230915 06:28:32.782"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 06:28:32.785" level="INFO">Running command 'rm /tmp/key-45268 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 06:28:32.787" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 06:28:32.787" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230915 06:28:32.782" endtime="20230915 06:28:32.787"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 06:28:32.789" level="INFO"/>
<status status="PASS" starttime="20230915 06:28:32.788" endtime="20230915 06:28:32.789"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 06:28:32.789" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 06:28:32.789" endtime="20230915 06:28:32.789"/>
</kw>
<status status="PASS" starttime="20230915 06:28:32.782" endtime="20230915 06:28:32.790"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230915 06:28:25.271" endtime="20230915 06:28:32.790"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20230915 06:28:06.715" endtime="20230915 06:28:32.791"/>
</suite>
<suite id="s1-s4" name="Root-Ca-Rotation" source="/opt/hadoop/smoketest/scmha/root-ca-rotation.robot">
<test id="s1-s4-t1" name="Verify root CA rotation metrics" line="26">
<kw name="Execute" library="os">
<var>${successRotationLine}</var>
<arg>curl -sS 'http://localhost:9876/jmx' | grep NumSuccessRotation</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 06:28:36.304" level="INFO">Running command 'curl -sS 'http://localhost:9876/jmx' | grep NumSuccessRotation 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 06:28:36.754" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 06:28:36.754" level="INFO">${output} =     "NumSuccessRotation" : 2,</msg>
<status status="PASS" starttime="20230915 06:28:36.302" endtime="20230915 06:28:36.755"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 06:28:36.756" level="INFO">    "NumSuccessRotation" : 2,</msg>
<status status="PASS" starttime="20230915 06:28:36.755" endtime="20230915 06:28:36.756"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 06:28:36.757" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 06:28:36.756" endtime="20230915 06:28:36.757"/>
</kw>
<status status="PASS" starttime="20230915 06:28:36.301" endtime="20230915 06:28:36.757"/>
</kw>
<msg timestamp="20230915 06:28:36.757" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 06:28:36.301" endtime="20230915 06:28:36.757"/>
</kw>
<msg timestamp="20230915 06:28:36.757" level="INFO">${successRotationLine} =     "NumSuccessRotation" : 2,</msg>
<status status="PASS" starttime="20230915 06:28:36.300" endtime="20230915 06:28:36.757"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${successRotationLine}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 06:28:36.758" level="INFO">    "NumSuccessRotation" : 2,</msg>
<status status="PASS" starttime="20230915 06:28:36.758" endtime="20230915 06:28:36.758"/>
</kw>
<kw name="Split String" library="String">
<var>${temp_1}</var>
<arg>${successRotationLine}</arg>
<arg>:</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20230915 06:28:36.759" level="INFO">${temp_1} = ['    "NumSuccessRotation" ', ' 2,']</msg>
<status status="PASS" starttime="20230915 06:28:36.758" endtime="20230915 06:28:36.759"/>
</kw>
<kw name="Strip String" library="String">
<var>${temp_2}</var>
<arg>${temp_1[1]}</arg>
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<msg timestamp="20230915 06:28:36.761" level="INFO">${temp_2} = 2,</msg>
<status status="PASS" starttime="20230915 06:28:36.759" endtime="20230915 06:28:36.761"/>
</kw>
<kw name="Split String" library="String">
<var>${temp_3}</var>
<arg>${temp_2}</arg>
<arg>,</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20230915 06:28:36.762" level="INFO">${temp_3} = ['2', '']</msg>
<status status="PASS" starttime="20230915 06:28:36.761" endtime="20230915 06:28:36.763"/>
</kw>
<kw name="Strip String" library="String">
<var>${successRotation}</var>
<arg>${temp_3[0]}</arg>
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<msg timestamp="20230915 06:28:36.764" level="INFO">${successRotation} = 2</msg>
<status status="PASS" starttime="20230915 06:28:36.763" endtime="20230915 06:28:36.764"/>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<var>${successRotation}</var>
<arg>${successRotation}</arg>
<doc>Converts the given item to a floating point number.</doc>
<msg timestamp="20230915 06:28:36.765" level="INFO">${successRotation} = 2.0</msg>
<status status="PASS" starttime="20230915 06:28:36.764" endtime="20230915 06:28:36.765"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${successRotation} &gt;= 1</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230915 06:28:36.765" endtime="20230915 06:28:36.765"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230915 06:28:36.299" endtime="20230915 06:28:36.766"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20230915 06:28:36.244" endtime="20230915 06:28:36.768"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="57449"/>
</suite>
<statistics>
<total>
<stat pass="8" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="2" fail="0" skip="0">create-volume-and-bucket</stat>
</tag>
<suite>
<stat pass="8" fail="0" skip="0" id="s1" name="ozonesecure-root-ca-rotation">ozonesecure-root-ca-rotation</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1" name="Kinit">ozonesecure-root-ca-rotation.Kinit</stat>
<stat pass="3" fail="0" skip="0" id="s1-s2" name="Root-Ca-Rotation-Client-Checks">ozonesecure-root-ca-rotation.Root-Ca-Rotation-Client-Checks</stat>
<stat pass="3" fail="0" skip="0" id="s1-s3" name="Root-Ca-Rotation-Client-Checks">ozonesecure-root-ca-rotation.Root-Ca-Rotation-Client-Checks</stat>
<stat pass="1" fail="0" skip="0" id="s1-s4" name="Root-Ca-Rotation">ozonesecure-root-ca-rotation.Root-Ca-Rotation</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
