<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 6.1.1 (Python 3.8.10 on linux)" generated="20230915 04:57:40.816" rpa="false" schemaversion="4">
<suite id="s1" name="ozone-om-prepare">
<suite id="s1-s1" name="Om-Prepare" source="/opt/hadoop/smoketest/omha/om-prepare.robot">
<kw name="Create Specific OM data for prepare" type="SETUP">
<kw name="Freon OCKG" library="freon">
<arg>prefix=om-prepare</arg>
<arg>n=100</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 04:52:16.924" level="INFO">Running command 'ozone freon ockg --om-service-id=omservice -t 1 -n100 -p om-prepare  2&gt;&amp;1'.</msg>
<msg timestamp="20230915 04:52:31.261" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 04:52:31.261" level="INFO">${output} = 2023-09-15 04:52:18,636 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-15 04:52:18,760 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230915 04:52:16.922" endtime="20230915 04:52:31.261"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 04:52:31.262" level="INFO">2023-09-15 04:52:18,636 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-15 04:52:18,760 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-09-15 04:52:18,760 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-09-15 04:52:18,825 [main] INFO freon.BaseFreonGenerator: Executing test with prefix om-prepare and number-of-tests 100
2023-09-15 04:52:18,858 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2023-09-15 04:52:19,530 [main] INFO rpc.RpcClient: Creating Volume: vol1, with hadoop as owner and space quota set to -1 bytes, counts quota set to -1
2023-09-15 04:52:19,687 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Encryption set to false, Replication Type set to server-side default replication type, Namespace Quota set to -1, Space Quota set to -1 
2023-09-15 04:52:19,861 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2023-09-15 04:52:20,577 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2023-09-15 04:52:20,842 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2023-09-15 04:52:20,861 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2023-09-15 04:52:21,862 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2023-09-15 04:52:22,863 [Thread-3] INFO freon.ProgressBar: Progress: 3.00 % (3 out of 100)
2023-09-15 04:52:23,866 [Thread-3] INFO freon.ProgressBar: Progress: 8.00 % (8 out of 100)
2023-09-15 04:52:24,866 [Thread-3] INFO freon.ProgressBar: Progress: 16.00 % (16 out of 100)
2023-09-15 04:52:25,869 [Thread-3] INFO freon.ProgressBar: Progress: 28.00 % (28 out of 100)
2023-09-15 04:52:26,869 [Thread-3] INFO freon.ProgressBar: Progress: 40.00 % (40 out of 100)
2023-09-15 04:52:27,870 [Thread-3] INFO freon.ProgressBar: Progress: 51.00 % (51 out of 100)
2023-09-15 04:52:28,870 [Thread-3] INFO freon.ProgressBar: Progress: 66.00 % (66 out of 100)
2023-09-15 04:52:29,870 [Thread-3] INFO freon.ProgressBar: Progress: 83.00 % (83 out of 100)
2023-09-15 04:52:30,871 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (100 out of 100)
2023-09-15 04:52:30,911 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=100, min=42.957682, max=2248.327177, mean=107.16502722364467, stddev=219.2415752392063, median=69.079372, p75=92.511451, p95=156.283904, p98=532.138669, p99=600.238291, p999=2248.327177, mean_rate=9.023214479111582, m1=4.015546970780902, m5=3.3685911710195016, m15=3.2565095503500534, rate_unit=events/second, duration_unit=milliseconds
2023-09-15 04:52:30,911 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 12
2023-09-15 04:52:30,912 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-09-15 04:52:30,912 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 100</msg>
<status status="PASS" starttime="20230915 04:52:31.262" endtime="20230915 04:52:31.262"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 04:52:31.263" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 04:52:31.263" endtime="20230915 04:52:31.263"/>
</kw>
<status status="PASS" starttime="20230915 04:52:16.922" endtime="20230915 04:52:31.263"/>
</kw>
<msg timestamp="20230915 04:52:31.263" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 04:52:16.922" endtime="20230915 04:52:31.263"/>
</kw>
<msg timestamp="20230915 04:52:31.264" level="INFO">${result} = 2023-09-15 04:52:18,636 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-15 04:52:18,760 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230915 04:52:16.921" endtime="20230915 04:52:31.264"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 04:52:31.264" endtime="20230915 04:52:31.264"/>
</kw>
<status status="PASS" starttime="20230915 04:52:16.920" endtime="20230915 04:52:31.264"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230915 04:52:31.265" level="INFO">${random} = 49031</msg>
<status status="PASS" starttime="20230915 04:52:31.264" endtime="20230915 04:52:31.265"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${volume_name}</arg>
<arg>${random}-volume-for-prepare</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230915 04:52:31.266" level="INFO">${volume_name} = 49031-volume-for-prepare</msg>
<status status="PASS" starttime="20230915 04:52:31.265" endtime="20230915 04:52:31.266"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${bucket_name}</arg>
<arg>${random}-bucket-for-prepare</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230915 04:52:31.268" level="INFO">${bucket_name} = 49031-bucket-for-prepare</msg>
<status status="PASS" starttime="20230915 04:52:31.267" endtime="20230915 04:52:31.268"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create /${volume_name}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 04:52:31.271" level="INFO">Running command 'ozone sh volume create /49031-volume-for-prepare 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 04:52:34.017" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 04:52:34.017" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230915 04:52:31.269" endtime="20230915 04:52:34.017"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 04:52:34.018" level="INFO"/>
<status status="PASS" starttime="20230915 04:52:34.018" endtime="20230915 04:52:34.018"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 04:52:34.019" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 04:52:34.019" endtime="20230915 04:52:34.019"/>
</kw>
<status status="PASS" starttime="20230915 04:52:31.269" endtime="20230915 04:52:34.019"/>
</kw>
<msg timestamp="20230915 04:52:34.019" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 04:52:31.268" endtime="20230915 04:52:34.019"/>
</kw>
<status status="PASS" starttime="20230915 04:52:31.268" endtime="20230915 04:52:34.019"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create /${volume_name}/${bucket_name}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 04:52:34.023" level="INFO">Running command 'ozone sh bucket create /49031-volume-for-prepare/49031-bucket-for-prepare 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 04:52:36.507" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 04:52:36.508" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230915 04:52:34.021" endtime="20230915 04:52:36.508"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 04:52:36.509" level="INFO"/>
<status status="PASS" starttime="20230915 04:52:36.508" endtime="20230915 04:52:36.509"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 04:52:36.509" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 04:52:36.509" endtime="20230915 04:52:36.509"/>
</kw>
<status status="PASS" starttime="20230915 04:52:34.020" endtime="20230915 04:52:36.509"/>
</kw>
<msg timestamp="20230915 04:52:36.509" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 04:52:34.020" endtime="20230915 04:52:36.509"/>
</kw>
<status status="PASS" starttime="20230915 04:52:34.020" endtime="20230915 04:52:36.510"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put /${volume_name}/${bucket_name}/prepare-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 04:52:36.513" level="INFO">Running command 'ozone sh key put /49031-volume-for-prepare/49031-bucket-for-prepare/prepare-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 04:52:41.165" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 04:52:41.165" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230915 04:52:36.511" endtime="20230915 04:52:41.165"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 04:52:41.166" level="INFO"/>
<status status="PASS" starttime="20230915 04:52:41.165" endtime="20230915 04:52:41.166"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 04:52:41.166" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 04:52:41.166" endtime="20230915 04:52:41.167"/>
</kw>
<status status="PASS" starttime="20230915 04:52:36.510" endtime="20230915 04:52:41.167"/>
</kw>
<msg timestamp="20230915 04:52:41.167" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 04:52:36.510" endtime="20230915 04:52:41.167"/>
</kw>
<status status="PASS" starttime="20230915 04:52:36.510" endtime="20230915 04:52:41.167"/>
</kw>
<status status="PASS" starttime="20230915 04:52:16.920" endtime="20230915 04:52:41.167"/>
</kw>
<test id="s1-s1-t1" name="Prepare Ozone Manager" line="39">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230915 04:52:41.168" endtime="20230915 04:52:41.169"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om prepare -id=omservice</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 04:52:41.172" level="INFO">Running command 'ozone admin om prepare -id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 04:52:49.138" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 04:52:49.138" level="INFO">${output} = Ozone Manager Prepare Request successfully returned with Transaction Id : [413].

Checking individual OM instances for prepare request completion...
OM : [om1], Prepare Status : [PREPARE_COMPLETED], C...</msg>
<status status="PASS" starttime="20230915 04:52:41.170" endtime="20230915 04:52:49.138"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 04:52:49.139" level="INFO">Ozone Manager Prepare Request successfully returned with Transaction Id : [413].

Checking individual OM instances for prepare request completion...
OM : [om1], Prepare Status : [PREPARE_COMPLETED], Current Transaction Id : [413]
OM : [om3], Prepare Status : [PREPARE_COMPLETED], Current Transaction Id : [413]
OM : [om2], Prepare Status : [PREPARE_COMPLETED], Current Transaction Id : [413]

OM Preparation successful! 
All OMs are prepared
No new write requests will be allowed until preparation is cancelled or upgrade/downgrade is done.</msg>
<status status="PASS" starttime="20230915 04:52:49.139" endtime="20230915 04:52:49.140"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 04:52:49.140" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 04:52:49.140" endtime="20230915 04:52:49.140"/>
</kw>
<status status="PASS" starttime="20230915 04:52:41.170" endtime="20230915 04:52:49.140"/>
</kw>
<msg timestamp="20230915 04:52:49.140" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 04:52:41.169" endtime="20230915 04:52:49.141"/>
</kw>
<msg timestamp="20230915 04:52:49.141" level="INFO">${result} = Ozone Manager Prepare Request successfully returned with Transaction Id : [413].

Checking individual OM instances for prepare request completion...
OM : [om1], Prepare Status : [PREPARE_COMPLETED], C...</msg>
<status status="PASS" starttime="20230915 04:52:41.169" endtime="20230915 04:52:49.141"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>OM Preparation successful!</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>OM Preparation successful!</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 04:52:49.141" endtime="20230915 04:52:49.142"/>
</kw>
<status status="PASS" starttime="20230915 04:52:49.141" endtime="20230915 04:52:49.142"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230915 04:52:41.167" endtime="20230915 04:52:49.142"/>
</test>
<test id="s1-s1-t2" name="Checks if the expected data is present in OM" line="43">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230915 04:52:49.144" endtime="20230915 04:52:49.144"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info /${volume_name}/${bucket_name}/prepare-key</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 04:52:49.148" level="INFO">Running command 'ozone sh key info /49031-volume-for-prepare/49031-bucket-for-prepare/prepare-key 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 04:52:52.356" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 04:52:52.356" level="INFO">${output} = {
  "volumeName" : "49031-volume-for-prepare",
  "bucketName" : "49031-bucket-for-prepare",
  "name" : "prepare-key",
  "dataSize" : 17289,
  "creationTime" : "2023-09-15T04:52:39.300Z",
  "modificati...</msg>
<status status="PASS" starttime="20230915 04:52:49.146" endtime="20230915 04:52:52.356"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 04:52:52.357" level="INFO">{
  "volumeName" : "49031-volume-for-prepare",
  "bucketName" : "49031-bucket-for-prepare",
  "name" : "prepare-key",
  "dataSize" : 17289,
  "creationTime" : "2023-09-15T04:52:39.300Z",
  "modificationTime" : "2023-09-15T04:52:40.774Z",
  "replicationConfig" : {
    "replicationFactor" : "ONE",
    "requiredNodes" : 1,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "ozoneKeyLocations" : [ {
    "containerID" : 2,
    "localID" : 111677748019200101,
    "length" : 17289,
    "offset" : 0,
    "keyOffset" : 0
  } ],
  "file" : true
}</msg>
<status status="PASS" starttime="20230915 04:52:52.356" endtime="20230915 04:52:52.357"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 04:52:52.358" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 04:52:52.357" endtime="20230915 04:52:52.358"/>
</kw>
<status status="PASS" starttime="20230915 04:52:49.145" endtime="20230915 04:52:52.358"/>
</kw>
<msg timestamp="20230915 04:52:52.358" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 04:52:49.145" endtime="20230915 04:52:52.358"/>
</kw>
<msg timestamp="20230915 04:52:52.358" level="INFO">${result} = {
  "volumeName" : "49031-volume-for-prepare",
  "bucketName" : "49031-bucket-for-prepare",
  "name" : "prepare-key",
  "dataSize" : 17289,
  "creationTime" : "2023-09-15T04:52:39.300Z",
  "modificati...</msg>
<status status="PASS" starttime="20230915 04:52:49.145" endtime="20230915 04:52:52.358"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"name\" : \"prepare-key\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 04:52:52.358" endtime="20230915 04:52:52.359"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230915 04:52:49.143" endtime="20230915 04:52:52.359"/>
</test>
<test id="s1-s1-t3" name="Test write operation fails" line="47">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230915 04:52:52.361" endtime="20230915 04:52:52.361"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh key put /${volume_name}/${bucket_name}/prepare-key2 /opt/hadoop/NOTICE.txt</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 04:52:52.364" level="INFO">Running command 'ozone sh key put /49031-volume-for-prepare/49031-bucket-for-prepare/prepare-key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 04:52:54.824" level="INFO">${rc} = 255</msg>
<msg timestamp="20230915 04:52:54.825" level="INFO">${output} = NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateKey when OM is in prepare mode.</msg>
<status status="PASS" starttime="20230915 04:52:52.362" endtime="20230915 04:52:54.825"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 04:52:54.826" level="INFO">NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateKey when OM is in prepare mode.</msg>
<status status="PASS" starttime="20230915 04:52:54.825" endtime="20230915 04:52:54.826"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 04:52:54.826" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 04:52:54.826" endtime="20230915 04:52:54.826"/>
</kw>
<msg timestamp="20230915 04:52:54.827" level="INFO">${result} = NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateKey when OM is in prepare mode.</msg>
<status status="PASS" starttime="20230915 04:52:52.361" endtime="20230915 04:52:54.827"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>OM is in prepare mode</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 04:52:54.827" endtime="20230915 04:52:54.827"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>ozone sh key info /${volume_name}/${bucket_name}/prepare-key2</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 04:52:54.830" level="INFO">Running command 'ozone sh key info /49031-volume-for-prepare/49031-bucket-for-prepare/prepare-key2 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 04:52:57.569" level="INFO">${rc} = 255</msg>
<msg timestamp="20230915 04:52:57.569" level="INFO">${output} = KEY_NOT_FOUND Key:prepare-key2 not found</msg>
<status status="PASS" starttime="20230915 04:52:54.828" endtime="20230915 04:52:57.569"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 04:52:57.570" level="INFO">KEY_NOT_FOUND Key:prepare-key2 not found</msg>
<status status="PASS" starttime="20230915 04:52:57.569" endtime="20230915 04:52:57.570"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 04:52:57.570" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 04:52:57.570" endtime="20230915 04:52:57.571"/>
</kw>
<status status="PASS" starttime="20230915 04:52:54.827" endtime="20230915 04:52:57.571"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230915 04:52:52.360" endtime="20230915 04:52:57.571"/>
</test>
<doc>Smoke test to test preparing OMs in an OM HA cluster.</doc>
<status status="PASS" starttime="20230915 04:52:16.865" endtime="20230915 04:52:57.572"/>
</suite>
<suite id="s1-s2" name="Om-Cancel-Prepare" source="/opt/hadoop/smoketest/omha/om-cancel-prepare.robot">
<kw name="Generate volume and bucket names" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230915 04:53:00.013" level="INFO">${random} = 54213</msg>
<status status="PASS" starttime="20230915 04:53:00.013" endtime="20230915 04:53:00.014"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${volume_name}</arg>
<arg>${random}-volume-for-cancel</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230915 04:53:00.015" level="INFO">${volume_name} = 54213-volume-for-cancel</msg>
<status status="PASS" starttime="20230915 04:53:00.014" endtime="20230915 04:53:00.015"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${bucket_name}</arg>
<arg>${random}-bucket-for-cancel</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230915 04:53:00.016" level="INFO">${bucket_name} = 54213-bucket-for-cancel</msg>
<status status="PASS" starttime="20230915 04:53:00.015" endtime="20230915 04:53:00.016"/>
</kw>
<status status="PASS" starttime="20230915 04:53:00.013" endtime="20230915 04:53:00.016"/>
</kw>
<test id="s1-s2-t1" name="Cancel Ozone Manager Prepare" line="33">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230915 04:53:00.017" endtime="20230915 04:53:00.017"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om cancelprepare -id=omservice</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 04:53:00.021" level="INFO">Running command 'ozone admin om cancelprepare -id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 04:53:03.047" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 04:53:03.047" level="INFO">${output} = Cancel prepare succeeded, cluster can now accept write requests.</msg>
<status status="PASS" starttime="20230915 04:53:00.019" endtime="20230915 04:53:03.047"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 04:53:03.049" level="INFO">Cancel prepare succeeded, cluster can now accept write requests.</msg>
<status status="PASS" starttime="20230915 04:53:03.048" endtime="20230915 04:53:03.049"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 04:53:03.049" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 04:53:03.049" endtime="20230915 04:53:03.050"/>
</kw>
<status status="PASS" starttime="20230915 04:53:00.018" endtime="20230915 04:53:03.050"/>
</kw>
<msg timestamp="20230915 04:53:03.050" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 04:53:00.018" endtime="20230915 04:53:03.050"/>
</kw>
<msg timestamp="20230915 04:53:03.050" level="INFO">${result} = Cancel prepare succeeded, cluster can now accept write requests.</msg>
<status status="PASS" starttime="20230915 04:53:00.018" endtime="20230915 04:53:03.050"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>5sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Cancel prepare succeeded</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Cancel prepare succeeded</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 04:53:03.051" endtime="20230915 04:53:03.051"/>
</kw>
<status status="PASS" starttime="20230915 04:53:03.050" endtime="20230915 04:53:03.051"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230915 04:53:00.017" endtime="20230915 04:53:03.051"/>
</test>
<test id="s1-s2-t2" name="Test write operations" line="37">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230915 04:53:03.052" endtime="20230915 04:53:03.052"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create /${volume_name}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 04:53:03.056" level="INFO">Running command 'ozone sh volume create /54213-volume-for-cancel 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 04:53:05.710" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 04:53:05.710" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230915 04:53:03.054" endtime="20230915 04:53:05.710"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 04:53:05.711" level="INFO"/>
<status status="PASS" starttime="20230915 04:53:05.710" endtime="20230915 04:53:05.711"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 04:53:05.712" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 04:53:05.711" endtime="20230915 04:53:05.712"/>
</kw>
<status status="PASS" starttime="20230915 04:53:03.053" endtime="20230915 04:53:05.712"/>
</kw>
<msg timestamp="20230915 04:53:05.712" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 04:53:03.053" endtime="20230915 04:53:05.712"/>
</kw>
<status status="PASS" starttime="20230915 04:53:03.053" endtime="20230915 04:53:05.712"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create /${volume_name}/${bucket_name}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 04:53:05.716" level="INFO">Running command 'ozone sh bucket create /54213-volume-for-cancel/54213-bucket-for-cancel 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 04:53:08.354" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 04:53:08.355" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230915 04:53:05.714" endtime="20230915 04:53:08.355"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 04:53:08.356" level="INFO"/>
<status status="PASS" starttime="20230915 04:53:08.355" endtime="20230915 04:53:08.356"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 04:53:08.357" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 04:53:08.357" endtime="20230915 04:53:08.357"/>
</kw>
<status status="PASS" starttime="20230915 04:53:05.713" endtime="20230915 04:53:08.357"/>
</kw>
<msg timestamp="20230915 04:53:08.357" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 04:53:05.713" endtime="20230915 04:53:08.357"/>
</kw>
<status status="PASS" starttime="20230915 04:53:05.712" endtime="20230915 04:53:08.358"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key put /${volume_name}/${bucket_name}/cancel-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 04:53:08.363" level="INFO">Running command 'ozone sh key put /54213-volume-for-cancel/54213-bucket-for-cancel/cancel-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 04:53:12.960" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 04:53:12.960" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230915 04:53:08.360" endtime="20230915 04:53:12.960"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 04:53:12.962" level="INFO"/>
<status status="PASS" starttime="20230915 04:53:12.961" endtime="20230915 04:53:12.962"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 04:53:12.962" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 04:53:12.962" endtime="20230915 04:53:12.962"/>
</kw>
<status status="PASS" starttime="20230915 04:53:08.360" endtime="20230915 04:53:12.962"/>
</kw>
<msg timestamp="20230915 04:53:12.962" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 04:53:08.359" endtime="20230915 04:53:12.962"/>
</kw>
<msg timestamp="20230915 04:53:12.963" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230915 04:53:08.358" endtime="20230915 04:53:12.963"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info /${volume_name}/${bucket_name}/cancel-key</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 04:53:12.966" level="INFO">Running command 'ozone sh key info /54213-volume-for-cancel/54213-bucket-for-cancel/cancel-key 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 04:53:15.746" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 04:53:15.746" level="INFO">${output} = {
  "volumeName" : "54213-volume-for-cancel",
  "bucketName" : "54213-bucket-for-cancel",
  "name" : "cancel-key",
  "dataSize" : 17289,
  "creationTime" : "2023-09-15T04:53:11.010Z",
  "modificationT...</msg>
<status status="PASS" starttime="20230915 04:53:12.964" endtime="20230915 04:53:15.746"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 04:53:15.747" level="INFO">{
  "volumeName" : "54213-volume-for-cancel",
  "bucketName" : "54213-bucket-for-cancel",
  "name" : "cancel-key",
  "dataSize" : 17289,
  "creationTime" : "2023-09-15T04:53:11.010Z",
  "modificationTime" : "2023-09-15T04:53:12.584Z",
  "replicationConfig" : {
    "replicationFactor" : "ONE",
    "requiredNodes" : 1,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "ozoneKeyLocations" : [ {
    "containerID" : 3,
    "localID" : 111677748019200103,
    "length" : 17289,
    "offset" : 0,
    "keyOffset" : 0
  } ],
  "file" : true
}</msg>
<status status="PASS" starttime="20230915 04:53:15.746" endtime="20230915 04:53:15.747"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 04:53:15.748" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 04:53:15.748" endtime="20230915 04:53:15.748"/>
</kw>
<status status="PASS" starttime="20230915 04:53:12.964" endtime="20230915 04:53:15.748"/>
</kw>
<msg timestamp="20230915 04:53:15.748" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 04:53:12.963" endtime="20230915 04:53:15.748"/>
</kw>
<msg timestamp="20230915 04:53:15.748" level="INFO">${result} = {
  "volumeName" : "54213-volume-for-cancel",
  "bucketName" : "54213-bucket-for-cancel",
  "name" : "cancel-key",
  "dataSize" : 17289,
  "creationTime" : "2023-09-15T04:53:11.010Z",
  "modificationT...</msg>
<status status="PASS" starttime="20230915 04:53:12.963" endtime="20230915 04:53:15.749"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"name\" : \"cancel-key\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 04:53:15.749" endtime="20230915 04:53:15.749"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230915 04:53:03.052" endtime="20230915 04:53:15.749"/>
</test>
<doc>Smoke test for ozone manager cancel prepare</doc>
<status status="PASS" starttime="20230915 04:52:59.967" endtime="20230915 04:53:15.751"/>
</suite>
<suite id="s1-s3" name="Om-Prepare" source="/opt/hadoop/smoketest/omha/om-prepare.robot">
<kw name="Create Specific OM data for prepare" type="SETUP">
<kw name="Freon OCKG" library="freon">
<arg>prefix=om-prepare</arg>
<arg>n=100</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 04:53:18.225" level="INFO">Running command 'ozone freon ockg --om-service-id=omservice -t 1 -n100 -p om-prepare  2&gt;&amp;1'.</msg>
<msg timestamp="20230915 04:53:28.967" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 04:53:28.967" level="INFO">${output} = 2023-09-15 04:53:19,726 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-15 04:53:19,848 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230915 04:53:18.223" endtime="20230915 04:53:28.967"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 04:53:28.968" level="INFO">2023-09-15 04:53:19,726 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-15 04:53:19,848 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-09-15 04:53:19,848 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-09-15 04:53:19,916 [main] INFO freon.BaseFreonGenerator: Executing test with prefix om-prepare and number-of-tests 100
2023-09-15 04:53:19,957 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2023-09-15 04:53:20,962 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2023-09-15 04:53:21,119 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2023-09-15 04:53:21,359 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2023-09-15 04:53:21,963 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2023-09-15 04:53:22,963 [Thread-3] INFO freon.ProgressBar: Progress: 15.00 % (15 out of 100)
2023-09-15 04:53:23,965 [Thread-3] INFO freon.ProgressBar: Progress: 29.00 % (29 out of 100)
2023-09-15 04:53:24,967 [Thread-3] INFO freon.ProgressBar: Progress: 46.00 % (46 out of 100)
2023-09-15 04:53:25,967 [Thread-3] INFO freon.ProgressBar: Progress: 64.00 % (64 out of 100)
2023-09-15 04:53:26,968 [Thread-3] INFO freon.ProgressBar: Progress: 83.00 % (83 out of 100)
2023-09-15 04:53:27,969 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (100 out of 100)
2023-09-15 04:53:28,623 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=100, min=40.849383, max=1413.227295, mean=72.92806004781383, stddev=131.85012969356015, median=56.224565, p75=66.426585, p95=85.576988, p98=107.124134, p99=135.318832, p999=1413.227295, mean_rate=12.424111122094715, m1=11.4, m5=11.4, m15=11.4, rate_unit=events/second, duration_unit=milliseconds
2023-09-15 04:53:28,624 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 9
2023-09-15 04:53:28,625 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-09-15 04:53:28,625 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 100</msg>
<status status="PASS" starttime="20230915 04:53:28.967" endtime="20230915 04:53:28.968"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 04:53:28.969" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 04:53:28.968" endtime="20230915 04:53:28.969"/>
</kw>
<status status="PASS" starttime="20230915 04:53:18.222" endtime="20230915 04:53:28.969"/>
</kw>
<msg timestamp="20230915 04:53:28.969" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 04:53:18.222" endtime="20230915 04:53:28.969"/>
</kw>
<msg timestamp="20230915 04:53:28.969" level="INFO">${result} = 2023-09-15 04:53:19,726 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-15 04:53:19,848 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230915 04:53:18.222" endtime="20230915 04:53:28.969"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 04:53:28.969" endtime="20230915 04:53:28.970"/>
</kw>
<status status="PASS" starttime="20230915 04:53:18.221" endtime="20230915 04:53:28.970"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230915 04:53:28.971" level="INFO">${random} = 51644</msg>
<status status="PASS" starttime="20230915 04:53:28.970" endtime="20230915 04:53:28.971"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${volume_name}</arg>
<arg>${random}-volume-for-prepare</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230915 04:53:28.972" level="INFO">${volume_name} = 51644-volume-for-prepare</msg>
<status status="PASS" starttime="20230915 04:53:28.971" endtime="20230915 04:53:28.972"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${bucket_name}</arg>
<arg>${random}-bucket-for-prepare</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230915 04:53:28.973" level="INFO">${bucket_name} = 51644-bucket-for-prepare</msg>
<status status="PASS" starttime="20230915 04:53:28.972" endtime="20230915 04:53:28.973"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create /${volume_name}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 04:53:28.977" level="INFO">Running command 'ozone sh volume create /51644-volume-for-prepare 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 04:53:31.735" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 04:53:31.735" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230915 04:53:28.975" endtime="20230915 04:53:31.736"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 04:53:31.736" level="INFO"/>
<status status="PASS" starttime="20230915 04:53:31.736" endtime="20230915 04:53:31.737"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 04:53:31.737" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 04:53:31.737" endtime="20230915 04:53:31.737"/>
</kw>
<status status="PASS" starttime="20230915 04:53:28.974" endtime="20230915 04:53:31.737"/>
</kw>
<msg timestamp="20230915 04:53:31.737" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 04:53:28.974" endtime="20230915 04:53:31.738"/>
</kw>
<status status="PASS" starttime="20230915 04:53:28.974" endtime="20230915 04:53:31.738"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create /${volume_name}/${bucket_name}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 04:53:31.741" level="INFO">Running command 'ozone sh bucket create /51644-volume-for-prepare/51644-bucket-for-prepare 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 04:53:34.582" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 04:53:34.582" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230915 04:53:31.739" endtime="20230915 04:53:34.582"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 04:53:34.583" level="INFO"/>
<status status="PASS" starttime="20230915 04:53:34.582" endtime="20230915 04:53:34.583"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 04:53:34.584" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 04:53:34.583" endtime="20230915 04:53:34.584"/>
</kw>
<status status="PASS" starttime="20230915 04:53:31.739" endtime="20230915 04:53:34.584"/>
</kw>
<msg timestamp="20230915 04:53:34.584" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 04:53:31.738" endtime="20230915 04:53:34.584"/>
</kw>
<status status="PASS" starttime="20230915 04:53:31.738" endtime="20230915 04:53:34.584"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put /${volume_name}/${bucket_name}/prepare-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 04:53:34.589" level="INFO">Running command 'ozone sh key put /51644-volume-for-prepare/51644-bucket-for-prepare/prepare-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 04:53:39.224" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 04:53:39.224" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230915 04:53:34.586" endtime="20230915 04:53:39.224"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 04:53:39.225" level="INFO"/>
<status status="PASS" starttime="20230915 04:53:39.224" endtime="20230915 04:53:39.225"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 04:53:39.225" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 04:53:39.225" endtime="20230915 04:53:39.225"/>
</kw>
<status status="PASS" starttime="20230915 04:53:34.585" endtime="20230915 04:53:39.226"/>
</kw>
<msg timestamp="20230915 04:53:39.226" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 04:53:34.585" endtime="20230915 04:53:39.226"/>
</kw>
<status status="PASS" starttime="20230915 04:53:34.584" endtime="20230915 04:53:39.226"/>
</kw>
<status status="PASS" starttime="20230915 04:53:18.220" endtime="20230915 04:53:39.226"/>
</kw>
<test id="s1-s3-t1" name="Prepare Ozone Manager" line="39">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230915 04:53:39.227" endtime="20230915 04:53:39.228"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om prepare -id=omservice</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 04:53:39.232" level="INFO">Running command 'ozone admin om prepare -id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 04:53:47.209" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 04:53:47.209" level="INFO">${output} = Ozone Manager Prepare Request successfully returned with Transaction Id : [833].

Checking individual OM instances for prepare request completion...
OM : [om1], Prepare Status : [PREPARE_COMPLETED], C...</msg>
<status status="PASS" starttime="20230915 04:53:39.229" endtime="20230915 04:53:47.209"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 04:53:47.210" level="INFO">Ozone Manager Prepare Request successfully returned with Transaction Id : [833].

Checking individual OM instances for prepare request completion...
OM : [om1], Prepare Status : [PREPARE_COMPLETED], Current Transaction Id : [833]
OM : [om3], Prepare Status : [PREPARE_COMPLETED], Current Transaction Id : [833]
OM : [om2], Prepare Status : [PREPARE_COMPLETED], Current Transaction Id : [833]

OM Preparation successful! 
All OMs are prepared
No new write requests will be allowed until preparation is cancelled or upgrade/downgrade is done.</msg>
<status status="PASS" starttime="20230915 04:53:47.209" endtime="20230915 04:53:47.210"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 04:53:47.211" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 04:53:47.210" endtime="20230915 04:53:47.211"/>
</kw>
<status status="PASS" starttime="20230915 04:53:39.229" endtime="20230915 04:53:47.211"/>
</kw>
<msg timestamp="20230915 04:53:47.211" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 04:53:39.228" endtime="20230915 04:53:47.211"/>
</kw>
<msg timestamp="20230915 04:53:47.211" level="INFO">${result} = Ozone Manager Prepare Request successfully returned with Transaction Id : [833].

Checking individual OM instances for prepare request completion...
OM : [om1], Prepare Status : [PREPARE_COMPLETED], C...</msg>
<status status="PASS" starttime="20230915 04:53:39.228" endtime="20230915 04:53:47.211"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>OM Preparation successful!</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>OM Preparation successful!</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 04:53:47.212" endtime="20230915 04:53:47.212"/>
</kw>
<status status="PASS" starttime="20230915 04:53:47.211" endtime="20230915 04:53:47.212"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230915 04:53:39.226" endtime="20230915 04:53:47.212"/>
</test>
<test id="s1-s3-t2" name="Checks if the expected data is present in OM" line="43">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230915 04:53:47.214" endtime="20230915 04:53:47.214"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info /${volume_name}/${bucket_name}/prepare-key</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 04:53:47.218" level="INFO">Running command 'ozone sh key info /51644-volume-for-prepare/51644-bucket-for-prepare/prepare-key 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 04:53:50.023" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 04:53:50.023" level="INFO">${output} = {
  "volumeName" : "51644-volume-for-prepare",
  "bucketName" : "51644-bucket-for-prepare",
  "name" : "prepare-key",
  "dataSize" : 17289,
  "creationTime" : "2023-09-15T04:53:37.358Z",
  "modificati...</msg>
<status status="PASS" starttime="20230915 04:53:47.216" endtime="20230915 04:53:50.023"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 04:53:50.024" level="INFO">{
  "volumeName" : "51644-volume-for-prepare",
  "bucketName" : "51644-bucket-for-prepare",
  "name" : "prepare-key",
  "dataSize" : 17289,
  "creationTime" : "2023-09-15T04:53:37.358Z",
  "modificationTime" : "2023-09-15T04:53:38.858Z",
  "replicationConfig" : {
    "replicationFactor" : "ONE",
    "requiredNodes" : 1,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "ozoneKeyLocations" : [ {
    "containerID" : 4,
    "localID" : 111677748019200204,
    "length" : 17289,
    "offset" : 0,
    "keyOffset" : 0
  } ],
  "file" : true
}</msg>
<status status="PASS" starttime="20230915 04:53:50.023" endtime="20230915 04:53:50.024"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 04:53:50.025" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 04:53:50.024" endtime="20230915 04:53:50.025"/>
</kw>
<status status="PASS" starttime="20230915 04:53:47.215" endtime="20230915 04:53:50.025"/>
</kw>
<msg timestamp="20230915 04:53:50.025" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 04:53:47.215" endtime="20230915 04:53:50.025"/>
</kw>
<msg timestamp="20230915 04:53:50.025" level="INFO">${result} = {
  "volumeName" : "51644-volume-for-prepare",
  "bucketName" : "51644-bucket-for-prepare",
  "name" : "prepare-key",
  "dataSize" : 17289,
  "creationTime" : "2023-09-15T04:53:37.358Z",
  "modificati...</msg>
<status status="PASS" starttime="20230915 04:53:47.214" endtime="20230915 04:53:50.025"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"name\" : \"prepare-key\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 04:53:50.025" endtime="20230915 04:53:50.026"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230915 04:53:47.213" endtime="20230915 04:53:50.026"/>
</test>
<test id="s1-s3-t3" name="Test write operation fails" line="47">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230915 04:53:50.027" endtime="20230915 04:53:50.028"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh key put /${volume_name}/${bucket_name}/prepare-key2 /opt/hadoop/NOTICE.txt</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 04:53:50.031" level="INFO">Running command 'ozone sh key put /51644-volume-for-prepare/51644-bucket-for-prepare/prepare-key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 04:53:52.652" level="INFO">${rc} = 255</msg>
<msg timestamp="20230915 04:53:52.652" level="INFO">${output} = NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateKey when OM is in prepare mode.</msg>
<status status="PASS" starttime="20230915 04:53:50.029" endtime="20230915 04:53:52.652"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 04:53:52.653" level="INFO">NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateKey when OM is in prepare mode.</msg>
<status status="PASS" starttime="20230915 04:53:52.652" endtime="20230915 04:53:52.653"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 04:53:52.654" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 04:53:52.653" endtime="20230915 04:53:52.654"/>
</kw>
<msg timestamp="20230915 04:53:52.654" level="INFO">${result} = NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateKey when OM is in prepare mode.</msg>
<status status="PASS" starttime="20230915 04:53:50.028" endtime="20230915 04:53:52.654"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>OM is in prepare mode</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 04:53:52.654" endtime="20230915 04:53:52.654"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>ozone sh key info /${volume_name}/${bucket_name}/prepare-key2</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 04:53:52.657" level="INFO">Running command 'ozone sh key info /51644-volume-for-prepare/51644-bucket-for-prepare/prepare-key2 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 04:53:55.205" level="INFO">${rc} = 255</msg>
<msg timestamp="20230915 04:53:55.205" level="INFO">${output} = KEY_NOT_FOUND Key:prepare-key2 not found</msg>
<status status="PASS" starttime="20230915 04:53:52.655" endtime="20230915 04:53:55.205"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 04:53:55.206" level="INFO">KEY_NOT_FOUND Key:prepare-key2 not found</msg>
<status status="PASS" starttime="20230915 04:53:55.205" endtime="20230915 04:53:55.206"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 04:53:55.207" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 04:53:55.206" endtime="20230915 04:53:55.207"/>
</kw>
<status status="PASS" starttime="20230915 04:53:52.655" endtime="20230915 04:53:55.207"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230915 04:53:50.027" endtime="20230915 04:53:55.207"/>
</test>
<doc>Smoke test to test preparing OMs in an OM HA cluster.</doc>
<status status="PASS" starttime="20230915 04:53:18.167" endtime="20230915 04:53:55.209"/>
</suite>
<suite id="s1-s4" name="Om-Prepared" source="/opt/hadoop/smoketest/omha/om-prepared.robot">
<test id="s1-s4-t1" name="Test create volume fails" line="26">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230915 04:53:57.707" endtime="20230915 04:53:57.708"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230915 04:53:57.709" level="INFO">${random} = 35676</msg>
<status status="PASS" starttime="20230915 04:53:57.708" endtime="20230915 04:53:57.709"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${volume_name}</arg>
<arg>${random}-volume-for-prepare</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230915 04:53:57.710" level="INFO">${volume_name} = 35676-volume-for-prepare</msg>
<status status="PASS" starttime="20230915 04:53:57.709" endtime="20230915 04:53:57.710"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh volume create /${volume_name}</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 04:53:57.713" level="INFO">Running command 'ozone sh volume create /35676-volume-for-prepare 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 04:54:00.325" level="INFO">${rc} = 255</msg>
<msg timestamp="20230915 04:54:00.325" level="INFO">${output} = NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateVolume when OM is in prepare mode.</msg>
<status status="PASS" starttime="20230915 04:53:57.711" endtime="20230915 04:54:00.325"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 04:54:00.326" level="INFO">NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateVolume when OM is in prepare mode.</msg>
<status status="PASS" starttime="20230915 04:54:00.325" endtime="20230915 04:54:00.326"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 04:54:00.327" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 04:54:00.326" endtime="20230915 04:54:00.327"/>
</kw>
<msg timestamp="20230915 04:54:00.327" level="INFO">${result} = NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateVolume when OM is in prepare mode.</msg>
<status status="PASS" starttime="20230915 04:53:57.710" endtime="20230915 04:54:00.327"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>OM is in prepare mode</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 04:54:00.327" endtime="20230915 04:54:00.328"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh volume info /${volume_name}</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 04:54:00.330" level="INFO">Running command 'ozone sh volume info /35676-volume-for-prepare 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 04:54:03.123" level="INFO">${rc} = 255</msg>
<msg timestamp="20230915 04:54:03.123" level="INFO">${output} = VOLUME_NOT_FOUND Volume 35676-volume-for-prepare is not found</msg>
<status status="PASS" starttime="20230915 04:54:00.328" endtime="20230915 04:54:03.123"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 04:54:03.125" level="INFO">VOLUME_NOT_FOUND Volume 35676-volume-for-prepare is not found</msg>
<status status="PASS" starttime="20230915 04:54:03.124" endtime="20230915 04:54:03.125"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 04:54:03.125" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 04:54:03.125" endtime="20230915 04:54:03.125"/>
</kw>
<msg timestamp="20230915 04:54:03.125" level="INFO">${result} = VOLUME_NOT_FOUND Volume 35676-volume-for-prepare is not found</msg>
<status status="PASS" starttime="20230915 04:54:00.328" endtime="20230915 04:54:03.125"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 04:54:03.126" endtime="20230915 04:54:03.126"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230915 04:53:57.707" endtime="20230915 04:54:03.126"/>
</test>
<test id="s1-s4-t2" name="Test list volumes succeeds" line="34">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230915 04:54:03.128" endtime="20230915 04:54:03.128"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 04:54:03.132" level="INFO">Running command 'ozone sh volume list 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 04:54:05.962" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 04:54:05.962" level="INFO">${output} = [ {
  "metadata" : { },
  "name" : "51644-volume-for-prepare",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "...</msg>
<status status="PASS" starttime="20230915 04:54:03.129" endtime="20230915 04:54:05.963"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 04:54:05.964" level="INFO">[ {
  "metadata" : { },
  "name" : "51644-volume-for-prepare",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2023-09-15T04:53:31.708Z",
  "modificationTime" : "2023-09-15T04:53:31.708Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "49031-volume-for-prepare",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2023-09-15T04:52:33.978Z",
  "modificationTime" : "2023-09-15T04:52:33.978Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "s3v",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 0,
  "creationTime" : "2023-09-15T04:51:49.833Z",
  "modificationTime" : "2023-09-15T04:51:49.833Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "vol1",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2023-09-15T04:52:19.539Z",
  "modificationTime" : "2023-09-15T04:52:19.539Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "54213-volume-for-cancel",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2023-09-15T04:53:05.665Z",
  "modificationTime" : "2023-09-15T04:53:05.665Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "refCount" : 0
} ]</msg>
<status status="PASS" starttime="20230915 04:54:05.963" endtime="20230915 04:54:05.964"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 04:54:05.964" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 04:54:05.964" endtime="20230915 04:54:05.965"/>
</kw>
<status status="PASS" starttime="20230915 04:54:03.129" endtime="20230915 04:54:05.965"/>
</kw>
<msg timestamp="20230915 04:54:05.965" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 04:54:03.129" endtime="20230915 04:54:05.965"/>
</kw>
<msg timestamp="20230915 04:54:05.965" level="INFO">${result} = [ {
  "metadata" : { },
  "name" : "51644-volume-for-prepare",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "...</msg>
<status status="PASS" starttime="20230915 04:54:03.128" endtime="20230915 04:54:05.965"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230915 04:54:03.127" endtime="20230915 04:54:05.965"/>
</test>
<doc>Smoke test to test that OMs are prepared in an OM HA cluster.</doc>
<status status="PASS" starttime="20230915 04:53:57.657" endtime="20230915 04:54:05.967"/>
</suite>
<suite id="s1-s5" name="Om-Prepared" source="/opt/hadoop/smoketest/omha/om-prepared.robot">
<test id="s1-s5-t1" name="Test create volume fails" line="26">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230915 04:55:28.402" endtime="20230915 04:55:28.403"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230915 04:55:28.403" level="INFO">${random} = 93332</msg>
<status status="PASS" starttime="20230915 04:55:28.403" endtime="20230915 04:55:28.403"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${volume_name}</arg>
<arg>${random}-volume-for-prepare</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230915 04:55:28.405" level="INFO">${volume_name} = 93332-volume-for-prepare</msg>
<status status="PASS" starttime="20230915 04:55:28.404" endtime="20230915 04:55:28.405"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh volume create /${volume_name}</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 04:55:28.408" level="INFO">Running command 'ozone sh volume create /93332-volume-for-prepare 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 04:55:31.404" level="INFO">${rc} = 255</msg>
<msg timestamp="20230915 04:55:31.404" level="INFO">${output} = NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateVolume when OM is in prepare mode.</msg>
<status status="PASS" starttime="20230915 04:55:28.406" endtime="20230915 04:55:31.405"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 04:55:31.406" level="INFO">NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateVolume when OM is in prepare mode.</msg>
<status status="PASS" starttime="20230915 04:55:31.405" endtime="20230915 04:55:31.406"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 04:55:31.406" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 04:55:31.406" endtime="20230915 04:55:31.406"/>
</kw>
<msg timestamp="20230915 04:55:31.407" level="INFO">${result} = NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateVolume when OM is in prepare mode.</msg>
<status status="PASS" starttime="20230915 04:55:28.405" endtime="20230915 04:55:31.407"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>OM is in prepare mode</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 04:55:31.407" endtime="20230915 04:55:31.407"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh volume info /${volume_name}</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 04:55:31.410" level="INFO">Running command 'ozone sh volume info /93332-volume-for-prepare 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 04:55:34.302" level="INFO">${rc} = 255</msg>
<msg timestamp="20230915 04:55:34.302" level="INFO">${output} = VOLUME_NOT_FOUND Volume 93332-volume-for-prepare is not found</msg>
<status status="PASS" starttime="20230915 04:55:31.408" endtime="20230915 04:55:34.302"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 04:55:34.303" level="INFO">VOLUME_NOT_FOUND Volume 93332-volume-for-prepare is not found</msg>
<status status="PASS" starttime="20230915 04:55:34.303" endtime="20230915 04:55:34.304"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 04:55:34.304" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 04:55:34.304" endtime="20230915 04:55:34.304"/>
</kw>
<msg timestamp="20230915 04:55:34.304" level="INFO">${result} = VOLUME_NOT_FOUND Volume 93332-volume-for-prepare is not found</msg>
<status status="PASS" starttime="20230915 04:55:31.407" endtime="20230915 04:55:34.304"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 04:55:34.305" endtime="20230915 04:55:34.305"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230915 04:55:28.401" endtime="20230915 04:55:34.305"/>
</test>
<test id="s1-s5-t2" name="Test list volumes succeeds" line="34">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230915 04:55:34.306" endtime="20230915 04:55:34.307"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 04:55:34.310" level="INFO">Running command 'ozone sh volume list 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 04:55:37.371" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 04:55:37.371" level="INFO">${output} = [ {
  "metadata" : { },
  "name" : "51644-volume-for-prepare",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "...</msg>
<status status="PASS" starttime="20230915 04:55:34.308" endtime="20230915 04:55:37.372"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 04:55:37.373" level="INFO">[ {
  "metadata" : { },
  "name" : "51644-volume-for-prepare",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2023-09-15T04:53:31.708Z",
  "modificationTime" : "2023-09-15T04:53:31.708Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "49031-volume-for-prepare",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2023-09-15T04:52:33.978Z",
  "modificationTime" : "2023-09-15T04:52:33.978Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "s3v",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 0,
  "creationTime" : "2023-09-15T04:51:50.579Z",
  "modificationTime" : "2023-09-15T04:51:50.579Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "vol1",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2023-09-15T04:52:19.539Z",
  "modificationTime" : "2023-09-15T04:52:19.539Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "54213-volume-for-cancel",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2023-09-15T04:53:05.665Z",
  "modificationTime" : "2023-09-15T04:53:05.665Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "refCount" : 0
} ]</msg>
<status status="PASS" starttime="20230915 04:55:37.372" endtime="20230915 04:55:37.373"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 04:55:37.373" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 04:55:37.373" endtime="20230915 04:55:37.374"/>
</kw>
<status status="PASS" starttime="20230915 04:55:34.307" endtime="20230915 04:55:37.374"/>
</kw>
<msg timestamp="20230915 04:55:37.374" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 04:55:34.307" endtime="20230915 04:55:37.374"/>
</kw>
<msg timestamp="20230915 04:55:37.374" level="INFO">${result} = [ {
  "metadata" : { },
  "name" : "51644-volume-for-prepare",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "...</msg>
<status status="PASS" starttime="20230915 04:55:34.307" endtime="20230915 04:55:37.374"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230915 04:55:34.306" endtime="20230915 04:55:37.374"/>
</test>
<doc>Smoke test to test that OMs are prepared in an OM HA cluster.</doc>
<status status="PASS" starttime="20230915 04:55:28.354" endtime="20230915 04:55:37.375"/>
</suite>
<suite id="s1-s6" name="Loaddata" source="/opt/hadoop/smoketest/topology/loaddata.robot">
<test id="s1-s6-t1" name="Create a volume, bucket and key" line="27">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create topvol1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 04:57:07.600" level="INFO">Running command 'ozone sh volume create topvol1 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 04:57:10.514" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 04:57:10.514" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230915 04:57:07.598" endtime="20230915 04:57:10.514"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 04:57:10.515" level="INFO"/>
<status status="PASS" starttime="20230915 04:57:10.514" endtime="20230915 04:57:10.520"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 04:57:10.521" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 04:57:10.520" endtime="20230915 04:57:10.521"/>
</kw>
<status status="PASS" starttime="20230915 04:57:07.597" endtime="20230915 04:57:10.521"/>
</kw>
<msg timestamp="20230915 04:57:10.521" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 04:57:07.597" endtime="20230915 04:57:10.521"/>
</kw>
<msg timestamp="20230915 04:57:10.521" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230915 04:57:07.597" endtime="20230915 04:57:10.521"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 04:57:10.521" endtime="20230915 04:57:10.526"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /topvol1/bucket1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 04:57:10.533" level="INFO">Running command 'ozone sh bucket create /topvol1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 04:57:13.480" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 04:57:13.480" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230915 04:57:10.528" endtime="20230915 04:57:13.480"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 04:57:13.481" level="INFO"/>
<status status="PASS" starttime="20230915 04:57:13.480" endtime="20230915 04:57:13.481"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 04:57:13.481" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 04:57:13.481" endtime="20230915 04:57:13.481"/>
</kw>
<status status="PASS" starttime="20230915 04:57:10.527" endtime="20230915 04:57:13.482"/>
</kw>
<msg timestamp="20230915 04:57:13.482" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 04:57:10.527" endtime="20230915 04:57:13.482"/>
</kw>
<msg timestamp="20230915 04:57:13.482" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230915 04:57:10.527" endtime="20230915 04:57:13.482"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 04:57:13.482" endtime="20230915 04:57:13.482"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /topvol1/bucket1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 04:57:13.486" level="INFO">Running command 'ozone sh key put /topvol1/bucket1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 04:57:19.194" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 04:57:19.194" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230915 04:57:13.484" endtime="20230915 04:57:19.194"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 04:57:19.196" level="INFO"/>
<status status="PASS" starttime="20230915 04:57:19.195" endtime="20230915 04:57:19.196"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 04:57:19.196" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 04:57:19.196" endtime="20230915 04:57:19.196"/>
</kw>
<status status="PASS" starttime="20230915 04:57:13.483" endtime="20230915 04:57:19.196"/>
</kw>
<msg timestamp="20230915 04:57:19.196" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 04:57:13.483" endtime="20230915 04:57:19.197"/>
</kw>
<msg timestamp="20230915 04:57:19.197" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230915 04:57:13.483" endtime="20230915 04:57:19.197"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 04:57:19.197" endtime="20230915 04:57:19.197"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230915 04:57:07.596" endtime="20230915 04:57:19.197"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20230915 04:57:07.539" endtime="20230915 04:57:19.198"/>
</suite>
<suite id="s1-s7" name="Readdata" source="/opt/hadoop/smoketest/topology/readdata.robot">
<test id="s1-s7-t1" name="Read data from previously created key" line="27">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230915 04:57:21.694" level="INFO">${random} = 86954</msg>
<status status="PASS" starttime="20230915 04:57:21.694" endtime="20230915 04:57:21.694"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /topvol1/bucket1/key1 /tmp/key1-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 04:57:21.698" level="INFO">Running command 'ozone sh key get /topvol1/bucket1/key1 /tmp/key1-86954 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 04:57:26.555" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 04:57:26.555" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230915 04:57:21.696" endtime="20230915 04:57:26.555"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 04:57:26.556" level="INFO"/>
<status status="PASS" starttime="20230915 04:57:26.555" endtime="20230915 04:57:26.556"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 04:57:26.556" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 04:57:26.556" endtime="20230915 04:57:26.556"/>
</kw>
<status status="PASS" starttime="20230915 04:57:21.695" endtime="20230915 04:57:26.557"/>
</kw>
<msg timestamp="20230915 04:57:26.557" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 04:57:21.695" endtime="20230915 04:57:26.557"/>
</kw>
<msg timestamp="20230915 04:57:26.557" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230915 04:57:21.694" endtime="20230915 04:57:26.557"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 04:57:26.557" endtime="20230915 04:57:26.557"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230915 04:57:21.693" endtime="20230915 04:57:26.558"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20230915 04:57:21.647" endtime="20230915 04:57:26.559"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="127435"/>
</suite>
<statistics>
<total>
<stat pass="14" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="14" fail="0" skip="0" id="s1" name="ozone-om-prepare">ozone-om-prepare</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1" name="Om-Prepare">ozone-om-prepare.Om-Prepare</stat>
<stat pass="2" fail="0" skip="0" id="s1-s2" name="Om-Cancel-Prepare">ozone-om-prepare.Om-Cancel-Prepare</stat>
<stat pass="3" fail="0" skip="0" id="s1-s3" name="Om-Prepare">ozone-om-prepare.Om-Prepare</stat>
<stat pass="2" fail="0" skip="0" id="s1-s4" name="Om-Prepared">ozone-om-prepare.Om-Prepared</stat>
<stat pass="2" fail="0" skip="0" id="s1-s5" name="Om-Prepared">ozone-om-prepare.Om-Prepared</stat>
<stat pass="1" fail="0" skip="0" id="s1-s6" name="Loaddata">ozone-om-prepare.Loaddata</stat>
<stat pass="1" fail="0" skip="0" id="s1-s7" name="Readdata">ozone-om-prepare.Readdata</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
