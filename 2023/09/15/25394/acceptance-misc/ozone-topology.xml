<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 6.1.1 (Python 3.8.10 on linux)" generated="20230915 05:03:52.523" rpa="false" schemaversion="4">
<suite id="s1" name="ozone-topology">
<suite id="s1-s1" name="Basic" source="/opt/hadoop/smoketest/basic/basic.robot">
<test id="s1-s1-t1" name="Check webui static resources" line="29">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230915 04:59:12.083" endtime="20230915 04:59:12.084"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -s -I http://${SCM}:9876/static/bootstrap-3.4.1/js/bootstrap.min.js</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 04:59:12.094" level="INFO">Running command 'curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 04:59:12.466" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 04:59:12.466" level="INFO">${output} = HTTP/1.1 200 OK
Date: Fri, 15 Sep 2023 04:59:12 GMT
X-Content-Type-Options: nosniff
X-XSS-Protection: 1; mode=block
X-FRAME-OPTIONS: SAMEORIGIN
Last-Modified: Fri, 15 Sep 2023 04:24:24 GMT
Content-Typ...</msg>
<status status="PASS" starttime="20230915 04:59:12.088" endtime="20230915 04:59:12.466"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 04:59:12.467" level="INFO">HTTP/1.1 200 OK
Date: Fri, 15 Sep 2023 04:59:12 GMT
X-Content-Type-Options: nosniff
X-XSS-Protection: 1; mode=block
X-FRAME-OPTIONS: SAMEORIGIN
Last-Modified: Fri, 15 Sep 2023 04:24:24 GMT
Content-Type: application/javascript
Accept-Ranges: bytes
Content-Length: 39680
</msg>
<status status="PASS" starttime="20230915 04:59:12.466" endtime="20230915 04:59:12.467"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 04:59:12.468" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 04:59:12.467" endtime="20230915 04:59:12.468"/>
</kw>
<status status="PASS" starttime="20230915 04:59:12.088" endtime="20230915 04:59:12.468"/>
</kw>
<msg timestamp="20230915 04:59:12.468" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 04:59:12.088" endtime="20230915 04:59:12.468"/>
</kw>
<msg timestamp="20230915 04:59:12.468" level="INFO">${result} = HTTP/1.1 200 OK
Date: Fri, 15 Sep 2023 04:59:12 GMT
X-Content-Type-Options: nosniff
X-XSS-Protection: 1; mode=block
X-FRAME-OPTIONS: SAMEORIGIN
Last-Modified: Fri, 15 Sep 2023 04:24:24 GMT
Content-Typ...</msg>
<status status="PASS" starttime="20230915 04:59:12.084" endtime="20230915 04:59:12.469"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 04:59:12.469" endtime="20230915 04:59:12.469"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230915 04:59:12.079" endtime="20230915 04:59:12.472"/>
</test>
<test id="s1-s1-t2" name="Basic Freon smoketest" line="34">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230915 04:59:12.476" endtime="20230915 04:59:12.477"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>10</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230915 04:59:12.480" level="INFO">${random} = 4llTlOrLiD</msg>
<status status="PASS" starttime="20230915 04:59:12.477" endtime="20230915 04:59:12.480"/>
</kw>
<kw name="Freon OCKG" library="freon">
<arg>prefix=${random}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 04:59:12.553" level="INFO">Running command 'ozone freon ockg  -t 1 -n1 -p 4llTlOrLiD  2&gt;&amp;1'.</msg>
<msg timestamp="20230915 04:59:36.345" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 04:59:36.345" level="INFO">${output} = 2023-09-15 04:59:18,834 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-15 04:59:19,165 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230915 04:59:12.492" endtime="20230915 04:59:36.345"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 04:59:36.347" level="INFO">2023-09-15 04:59:18,834 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-15 04:59:19,165 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-09-15 04:59:19,166 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-09-15 04:59:19,537 [main] INFO freon.BaseFreonGenerator: Executing test with prefix 4llTlOrLiD and number-of-tests 1
2023-09-15 04:59:19,813 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-15 04:59:20,832 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-15 04:59:21,834 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-15 04:59:22,835 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-15 04:59:23,835 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-15 04:59:24,836 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-15 04:59:25,374 [main] INFO retry.RetryInvocationHandler: com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.ozone.om.exceptions.OMNotLeaderException): OM:om1 is not the leader. Could not determine the leader node.
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createNotLeaderException(OzoneManagerProtocolServerSideTranslatorPB.java:246)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createLeaderErrorException(OzoneManagerProtocolServerSideTranslatorPB.java:234)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitReadRequestToOM(OzoneManagerProtocolServerSideTranslatorPB.java:227)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.processRequest(OzoneManagerProtocolServerSideTranslatorPB.java:179)
	at org.apache.hadoop.hdds.server.OzoneProtocolMessageDispatcher.processRequest(OzoneProtocolMessageDispatcher.java:87)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitRequest(OzoneManagerProtocolServerSideTranslatorPB.java:148)
	at org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos$OzoneManagerService$2.callBlockingMethod(OzoneManagerProtocolProtos.java)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Server.processCall(ProtobufRpcEngine.java:484)
	at org.apache.hadoop.ipc.ProtobufRpcEngine2$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine2.java:595)
	at org.apache.hadoop.ipc.ProtobufRpcEngine2$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine2.java:573)
	at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:1227)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:1094)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:1017)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/javax.security.auth.Subject.doAs(Subject.java:423)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1899)
	at org.apache.hadoop.ipc.Server$Handler.run(Server.java:3048)
, while invoking $Proxy25.submitRequest over nodeId=null,nodeAddress=om:9862 after 1 failover attempts. Trying to failover after sleeping for 4000ms. Current retry count: 1.
2023-09-15 04:59:25,836 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-15 04:59:26,836 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-15 04:59:27,837 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-15 04:59:28,837 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-15 04:59:29,838 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-15 04:59:29,920 [main] INFO rpc.RpcClient: Creating Volume: vol1, with hadoop as owner and space quota set to -1 bytes, counts quota set to -1
2023-09-15 04:59:30,310 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Encryption set to false, Replication Type set to server-side default replication type, Namespace Quota set to -1, Space Quota set to -1 
2023-09-15 04:59:30,841 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-15 04:59:31,807 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2023-09-15 04:59:31,842 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-15 04:59:32,321 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2023-09-15 04:59:32,842 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-15 04:59:33,843 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-15 04:59:34,843 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-15 04:59:35,844 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2023-09-15 04:59:35,907 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=1, min=4362.72542, max=4362.72542, mean=4362.72542, stddev=0.0, median=4362.72542, p75=4362.72542, p95=4362.72542, p98=4362.72542, p99=4362.72542, p999=4362.72542, mean_rate=0.1839114408046391, m1=0.2, m5=0.2, m15=0.2, rate_unit=events/second, duration_unit=milliseconds
2023-09-15 04:59:35,908 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 16
2023-09-15 04:59:35,909 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-09-15 04:59:35,909 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20230915 04:59:36.346" endtime="20230915 04:59:36.347"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 04:59:36.348" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 04:59:36.347" endtime="20230915 04:59:36.348"/>
</kw>
<status status="PASS" starttime="20230915 04:59:12.489" endtime="20230915 04:59:36.348"/>
</kw>
<msg timestamp="20230915 04:59:36.348" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 04:59:12.489" endtime="20230915 04:59:36.348"/>
</kw>
<msg timestamp="20230915 04:59:36.349" level="INFO">${result} = 2023-09-15 04:59:18,834 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-15 04:59:19,165 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230915 04:59:12.485" endtime="20230915 04:59:36.349"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 04:59:36.349" endtime="20230915 04:59:36.349"/>
</kw>
<status status="PASS" starttime="20230915 04:59:12.480" endtime="20230915 04:59:36.349"/>
</kw>
<kw name="Freon OCKV" library="freon">
<arg>prefix=${random}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockv ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 04:59:36.355" level="INFO">Running command 'ozone freon ockv  -t 1 -n1 -p 4llTlOrLiD  2&gt;&amp;1'.</msg>
<msg timestamp="20230915 04:59:43.978" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 04:59:43.979" level="INFO">${output} = 2023-09-15 04:59:38,826 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-15 04:59:39,009 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230915 04:59:36.352" endtime="20230915 04:59:43.979"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 04:59:43.980" level="INFO">2023-09-15 04:59:38,826 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-15 04:59:39,009 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-09-15 04:59:39,009 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-09-15 04:59:39,088 [main] INFO freon.BaseFreonGenerator: Executing test with prefix 4llTlOrLiD and number-of-tests 1
2023-09-15 04:59:39,133 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-15 04:59:40,140 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-15 04:59:41,140 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-15 04:59:41,475 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2023-09-15 04:59:42,141 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-15 04:59:43,141 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2023-09-15 04:59:43,626 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-validate, count=1, min=108.586015, max=108.586015, mean=108.586015, stddev=0.0, median=108.586015, p75=108.586015, p95=108.586015, p98=108.586015, p99=108.586015, p999=108.586015, mean_rate=0.9062152861490989, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-09-15 04:59:43,627 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 5
2023-09-15 04:59:43,627 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-09-15 04:59:43,627 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20230915 04:59:43.979" endtime="20230915 04:59:43.980"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 04:59:43.980" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 04:59:43.980" endtime="20230915 04:59:43.980"/>
</kw>
<status status="PASS" starttime="20230915 04:59:36.352" endtime="20230915 04:59:43.981"/>
</kw>
<msg timestamp="20230915 04:59:43.981" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 04:59:36.352" endtime="20230915 04:59:43.981"/>
</kw>
<msg timestamp="20230915 04:59:43.981" level="INFO">${result} = 2023-09-15 04:59:38,826 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-15 04:59:39,009 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230915 04:59:36.351" endtime="20230915 04:59:43.981"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 04:59:43.981" endtime="20230915 04:59:43.981"/>
</kw>
<status status="PASS" starttime="20230915 04:59:36.349" endtime="20230915 04:59:43.982"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230915 04:59:12.473" endtime="20230915 04:59:43.982"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20230915 04:59:11.879" endtime="20230915 04:59:43.983"/>
</suite>
<suite id="s1-s2" name="Cli" source="/opt/hadoop/smoketest/topology/cli.robot">
<test id="s1-s2-t1" name="Run printTopology" line="27">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin printTopology</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 04:59:46.700" level="INFO">Running command 'ozone admin printTopology 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 04:59:50.370" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 04:59:50.370" level="INFO">${output} = State = HEALTHY
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rac...</msg>
<status status="PASS" starttime="20230915 04:59:46.697" endtime="20230915 04:59:50.370"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 04:59:50.371" level="INFO">State = HEALTHY
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.8(ozone-topology_datanode_5_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.9(ozone-topology_datanode_6_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1</msg>
<status status="PASS" starttime="20230915 04:59:50.370" endtime="20230915 04:59:50.371"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 04:59:50.372" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 04:59:50.371" endtime="20230915 04:59:50.372"/>
</kw>
<status status="PASS" starttime="20230915 04:59:46.697" endtime="20230915 04:59:50.372"/>
</kw>
<msg timestamp="20230915 04:59:50.372" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 04:59:46.697" endtime="20230915 04:59:50.372"/>
</kw>
<msg timestamp="20230915 04:59:50.372" level="INFO">${output} = State = HEALTHY
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rac...</msg>
<status status="PASS" starttime="20230915 04:59:46.696" endtime="20230915 04:59:50.372"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net)</arg>
<arg>IN_SERVICE</arg>
<arg>/rack2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 04:59:50.373" endtime="20230915 04:59:50.373"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230915 04:59:46.696" endtime="20230915 04:59:50.373"/>
</test>
<test id="s1-s2-t2" name="Run printTopology -o" line="30">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin printTopology -o</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 04:59:50.378" level="INFO">Running command 'ozone admin printTopology -o 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 04:59:55.779" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 04:59:55.779" level="INFO">${output} = State = HEALTHY
Location: /rack1
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net) IN_SERVICE
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net) IN_SERVICE
 10.5.0.5(ozone-topology_data...</msg>
<status status="PASS" starttime="20230915 04:59:50.376" endtime="20230915 04:59:55.779"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 04:59:55.780" level="INFO">State = HEALTHY
Location: /rack1
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net) IN_SERVICE
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net) IN_SERVICE
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net) IN_SERVICE
Location: /rack2
 10.5.0.8(ozone-topology_datanode_5_1.ozone-topology_net) IN_SERVICE
 10.5.0.9(ozone-topology_datanode_6_1.ozone-topology_net) IN_SERVICE
 10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net) IN_SERVICE</msg>
<status status="PASS" starttime="20230915 04:59:55.779" endtime="20230915 04:59:55.780"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 04:59:55.781" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 04:59:55.780" endtime="20230915 04:59:55.781"/>
</kw>
<status status="PASS" starttime="20230915 04:59:50.376" endtime="20230915 04:59:55.781"/>
</kw>
<msg timestamp="20230915 04:59:55.781" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 04:59:50.375" endtime="20230915 04:59:55.781"/>
</kw>
<msg timestamp="20230915 04:59:55.781" level="INFO">${output} = State = HEALTHY
Location: /rack1
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net) IN_SERVICE
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net) IN_SERVICE
 10.5.0.5(ozone-topology_data...</msg>
<status status="PASS" starttime="20230915 04:59:50.375" endtime="20230915 04:59:55.781"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Location: /rack2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 04:59:55.781" endtime="20230915 04:59:55.782"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net) IN_SERVICE</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 04:59:55.782" endtime="20230915 04:59:55.782"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230915 04:59:50.374" endtime="20230915 04:59:55.782"/>
</test>
<test id="s1-s2-t3" name="Run printTopology --operational-state IN_SERVICE" line="34">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin printTopology --operational-state IN_SERVICE</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 04:59:55.787" level="INFO">Running command 'ozone admin printTopology --operational-state IN_SERVICE 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 04:59:59.663" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 04:59:59.663" level="INFO">${output} = State = HEALTHY
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rac...</msg>
<status status="PASS" starttime="20230915 04:59:55.785" endtime="20230915 04:59:59.663"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 04:59:59.664" level="INFO">State = HEALTHY
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.8(ozone-topology_datanode_5_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.9(ozone-topology_datanode_6_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1</msg>
<status status="PASS" starttime="20230915 04:59:59.663" endtime="20230915 04:59:59.664"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 04:59:59.665" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 04:59:59.664" endtime="20230915 04:59:59.665"/>
</kw>
<status status="PASS" starttime="20230915 04:59:55.785" endtime="20230915 04:59:59.665"/>
</kw>
<msg timestamp="20230915 04:59:59.665" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 04:59:55.784" endtime="20230915 04:59:59.665"/>
</kw>
<msg timestamp="20230915 04:59:59.665" level="INFO">${output} = State = HEALTHY
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rac...</msg>
<status status="PASS" starttime="20230915 04:59:55.784" endtime="20230915 04:59:59.665"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net)</arg>
<arg>IN_SERVICE</arg>
<arg>/rack2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 04:59:59.665" endtime="20230915 04:59:59.666"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230915 04:59:55.783" endtime="20230915 04:59:59.666"/>
</test>
<test id="s1-s2-t4" name="Run printTopology --node-state HEALTHY" line="37">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin printTopology --node-state HEALTHY</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 04:59:59.671" level="INFO">Running command 'ozone admin printTopology --node-state HEALTHY 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 05:00:03.582" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 05:00:03.582" level="INFO">${output} = State = HEALTHY
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rac...</msg>
<status status="PASS" starttime="20230915 04:59:59.669" endtime="20230915 05:00:03.582"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 05:00:03.584" level="INFO">State = HEALTHY
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.8(ozone-topology_datanode_5_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.9(ozone-topology_datanode_6_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1</msg>
<status status="PASS" starttime="20230915 05:00:03.583" endtime="20230915 05:00:03.584"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 05:00:03.584" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 05:00:03.584" endtime="20230915 05:00:03.584"/>
</kw>
<status status="PASS" starttime="20230915 04:59:59.668" endtime="20230915 05:00:03.584"/>
</kw>
<msg timestamp="20230915 05:00:03.584" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 04:59:59.668" endtime="20230915 05:00:03.585"/>
</kw>
<msg timestamp="20230915 05:00:03.585" level="INFO">${output} = State = HEALTHY
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rac...</msg>
<status status="PASS" starttime="20230915 04:59:59.668" endtime="20230915 05:00:03.585"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net)</arg>
<arg>IN_SERVICE</arg>
<arg>/rack2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 05:00:03.585" endtime="20230915 05:00:03.585"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230915 04:59:59.667" endtime="20230915 05:00:03.585"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20230915 04:59:46.650" endtime="20230915 05:00:03.587"/>
</suite>
<suite id="s1-s3" name="Recon" source="/opt/hadoop/smoketest/recon">
<suite id="s1-s3-s1" name="Recon-Api" source="/opt/hadoop/smoketest/recon/recon-api.robot">
<test id="s1-s3-s1-t1" name="Check if Recon picks up OM data" line="61">
<kw name="Execute" library="os">
<arg>ozone sh volume create recon</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 05:00:06.337" level="INFO">Running command 'ozone sh volume create recon 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 05:00:10.695" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 05:00:10.695" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230915 05:00:06.334" endtime="20230915 05:00:10.695"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 05:00:10.696" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230915 05:00:10.696" endtime="20230915 05:00:10.697"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 05:00:10.697" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 05:00:10.697" endtime="20230915 05:00:10.697"/>
</kw>
<status status="PASS" starttime="20230915 05:00:06.334" endtime="20230915 05:00:10.697"/>
</kw>
<msg timestamp="20230915 05:00:10.697" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 05:00:06.334" endtime="20230915 05:00:10.698"/>
</kw>
<status status="PASS" starttime="20230915 05:00:06.333" endtime="20230915 05:00:10.698"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create recon/api --layout=LEGACY</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 05:00:10.702" level="INFO">Running command 'ozone sh bucket create recon/api --layout=LEGACY 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 05:00:14.658" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 05:00:14.658" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230915 05:00:10.700" endtime="20230915 05:00:14.658"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 05:00:14.659" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230915 05:00:14.658" endtime="20230915 05:00:14.659"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 05:00:14.660" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 05:00:14.659" endtime="20230915 05:00:14.660"/>
</kw>
<status status="PASS" starttime="20230915 05:00:10.699" endtime="20230915 05:00:14.660"/>
</kw>
<msg timestamp="20230915 05:00:14.660" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 05:00:10.698" endtime="20230915 05:00:14.660"/>
</kw>
<status status="PASS" starttime="20230915 05:00:10.698" endtime="20230915 05:00:14.660"/>
</kw>
<kw name="Freon OCKG" library="freon">
<arg>n=10</arg>
<arg>args=-s 1025 -v recon -b api</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 05:00:14.665" level="INFO">Running command 'ozone freon ockg  -t 1 -n10 -p ockg -s 1025 -v recon -b api 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 05:00:23.941" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 05:00:23.941" level="INFO">${output} = 2023-09-15 05:00:16,704 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-15 05:00:16,819 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230915 05:00:14.662" endtime="20230915 05:00:23.941"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 05:00:23.942" level="INFO">2023-09-15 05:00:16,704 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-15 05:00:16,819 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-09-15 05:00:16,819 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-09-15 05:00:16,922 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ockg and number-of-tests 10
2023-09-15 05:00:16,998 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2023-09-15 05:00:18,007 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2023-09-15 05:00:18,852 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2023-09-15 05:00:19,007 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2023-09-15 05:00:19,176 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2023-09-15 05:00:20,008 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2023-09-15 05:00:21,009 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2023-09-15 05:00:22,010 [Thread-5] INFO freon.ProgressBar: Progress: 50.00 % (5 out of 10)
2023-09-15 05:00:23,011 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (10 out of 10)
2023-09-15 05:00:23,442 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=10, min=95.882902, max=2734.237687, mean=416.57476420626455, stddev=772.1998369941831, median=125.675717, p75=237.991902, p95=2734.237687, p98=2734.237687, p99=2734.237687, p999=2734.237687, mean_rate=1.9548698286107893, m1=2.0, m5=2.0, m15=2.0, rate_unit=events/second, duration_unit=milliseconds
2023-09-15 05:00:23,442 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 6
2023-09-15 05:00:23,447 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-09-15 05:00:23,447 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 10</msg>
<status status="PASS" starttime="20230915 05:00:23.942" endtime="20230915 05:00:23.942"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 05:00:23.943" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 05:00:23.943" endtime="20230915 05:00:23.943"/>
</kw>
<status status="PASS" starttime="20230915 05:00:14.662" endtime="20230915 05:00:23.943"/>
</kw>
<msg timestamp="20230915 05:00:23.943" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 05:00:14.662" endtime="20230915 05:00:23.943"/>
</kw>
<msg timestamp="20230915 05:00:23.944" level="INFO">${result} = 2023-09-15 05:00:16,704 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-15 05:00:16,819 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230915 05:00:14.661" endtime="20230915 05:00:23.944"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 05:00:23.944" endtime="20230915 05:00:23.944"/>
</kw>
<status status="PASS" starttime="20230915 05:00:14.660" endtime="20230915 05:00:23.944"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Check if Recon picks up container from OM</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit as ozone admin</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230915 05:00:23.945" endtime="20230915 05:00:23.946"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/containers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 05:00:23.949" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 05:00:24.175" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 05:00:24.175" level="INFO">${output} = {"data":{"totalCount":3,"prevKey":3,"containers":[{"ContainerID":1,"NumberOfKeys":0,"pipelines":null},{"ContainerID":2,"NumberOfKeys":0,"pipelines":null},{"ContainerID":3,"NumberOfKeys":0,"pipelines":...</msg>
<status status="PASS" starttime="20230915 05:00:23.947" endtime="20230915 05:00:24.175"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 05:00:24.176" level="INFO">{"data":{"totalCount":3,"prevKey":3,"containers":[{"ContainerID":1,"NumberOfKeys":0,"pipelines":null},{"ContainerID":2,"NumberOfKeys":0,"pipelines":null},{"ContainerID":3,"NumberOfKeys":0,"pipelines":null}]}}</msg>
<status status="PASS" starttime="20230915 05:00:24.176" endtime="20230915 05:00:24.176"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 05:00:24.177" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 05:00:24.176" endtime="20230915 05:00:24.177"/>
</kw>
<status status="PASS" starttime="20230915 05:00:23.946" endtime="20230915 05:00:24.177"/>
</kw>
<msg timestamp="20230915 05:00:24.177" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 05:00:23.946" endtime="20230915 05:00:24.177"/>
</kw>
<msg timestamp="20230915 05:00:24.178" level="INFO">${result} = {"data":{"totalCount":3,"prevKey":3,"containers":[{"ContainerID":1,"NumberOfKeys":0,"pipelines":null},{"ContainerID":2,"NumberOfKeys":0,"pipelines":null},{"ContainerID":3,"NumberOfKeys":0,"pipelines":...</msg>
<status status="PASS" starttime="20230915 05:00:23.946" endtime="20230915 05:00:24.178"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"ContainerID\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 05:00:24.178" endtime="20230915 05:00:24.178"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/utilization/fileCount</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 05:00:24.183" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 05:00:24.206" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 05:00:24.206" level="INFO">${output} = [{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20230915 05:00:24.180" endtime="20230915 05:00:24.206"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 05:00:24.208" level="INFO">[{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20230915 05:00:24.207" endtime="20230915 05:00:24.208"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 05:00:24.208" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 05:00:24.208" endtime="20230915 05:00:24.209"/>
</kw>
<status status="PASS" starttime="20230915 05:00:24.179" endtime="20230915 05:00:24.209"/>
</kw>
<msg timestamp="20230915 05:00:24.209" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 05:00:24.179" endtime="20230915 05:00:24.209"/>
</kw>
<msg timestamp="20230915 05:00:24.209" level="INFO">${result} = [{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20230915 05:00:24.178" endtime="20230915 05:00:24.209"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20230915 05:00:24.210" level="FAIL">'[{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]' does not contain '"fileSize":2048,"count":10'</msg>
<status status="FAIL" starttime="20230915 05:00:24.209" endtime="20230915 05:00:24.210"/>
</kw>
<status status="FAIL" starttime="20230915 05:00:23.945" endtime="20230915 05:00:24.210"/>
</kw>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit as ozone admin</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230915 05:00:34.211" endtime="20230915 05:00:34.212"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/containers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 05:00:34.216" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 05:00:34.231" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 05:00:34.231" level="INFO">${output} = {"data":{"totalCount":3,"prevKey":3,"containers":[{"ContainerID":1,"NumberOfKeys":0,"pipelines":null},{"ContainerID":2,"NumberOfKeys":0,"pipelines":null},{"ContainerID":3,"NumberOfKeys":0,"pipelines":...</msg>
<status status="PASS" starttime="20230915 05:00:34.213" endtime="20230915 05:00:34.231"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 05:00:34.232" level="INFO">{"data":{"totalCount":3,"prevKey":3,"containers":[{"ContainerID":1,"NumberOfKeys":0,"pipelines":null},{"ContainerID":2,"NumberOfKeys":0,"pipelines":null},{"ContainerID":3,"NumberOfKeys":0,"pipelines":null}]}}</msg>
<status status="PASS" starttime="20230915 05:00:34.231" endtime="20230915 05:00:34.232"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 05:00:34.233" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 05:00:34.232" endtime="20230915 05:00:34.233"/>
</kw>
<status status="PASS" starttime="20230915 05:00:34.213" endtime="20230915 05:00:34.233"/>
</kw>
<msg timestamp="20230915 05:00:34.233" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 05:00:34.213" endtime="20230915 05:00:34.233"/>
</kw>
<msg timestamp="20230915 05:00:34.234" level="INFO">${result} = {"data":{"totalCount":3,"prevKey":3,"containers":[{"ContainerID":1,"NumberOfKeys":0,"pipelines":null},{"ContainerID":2,"NumberOfKeys":0,"pipelines":null},{"ContainerID":3,"NumberOfKeys":0,"pipelines":...</msg>
<status status="PASS" starttime="20230915 05:00:34.212" endtime="20230915 05:00:34.234"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"ContainerID\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 05:00:34.234" endtime="20230915 05:00:34.234"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/utilization/fileCount</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 05:00:34.238" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 05:00:34.253" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 05:00:34.253" level="INFO">${output} = [{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20230915 05:00:34.236" endtime="20230915 05:00:34.253"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 05:00:34.254" level="INFO">[{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20230915 05:00:34.253" endtime="20230915 05:00:34.254"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 05:00:34.255" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 05:00:34.254" endtime="20230915 05:00:34.255"/>
</kw>
<status status="PASS" starttime="20230915 05:00:34.235" endtime="20230915 05:00:34.255"/>
</kw>
<msg timestamp="20230915 05:00:34.255" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 05:00:34.235" endtime="20230915 05:00:34.255"/>
</kw>
<msg timestamp="20230915 05:00:34.255" level="INFO">${result} = [{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20230915 05:00:34.234" endtime="20230915 05:00:34.255"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20230915 05:00:34.256" level="FAIL">'[{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]' does not contain '"fileSize":2048,"count":10'</msg>
<status status="FAIL" starttime="20230915 05:00:34.255" endtime="20230915 05:00:34.256"/>
</kw>
<status status="FAIL" starttime="20230915 05:00:34.211" endtime="20230915 05:00:34.256"/>
</kw>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit as ozone admin</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230915 05:00:44.257" endtime="20230915 05:00:44.258"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/containers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 05:00:44.262" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 05:00:44.276" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 05:00:44.276" level="INFO">${output} = {"data":{"totalCount":3,"prevKey":3,"containers":[{"ContainerID":1,"NumberOfKeys":0,"pipelines":null},{"ContainerID":2,"NumberOfKeys":0,"pipelines":null},{"ContainerID":3,"NumberOfKeys":0,"pipelines":...</msg>
<status status="PASS" starttime="20230915 05:00:44.259" endtime="20230915 05:00:44.276"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 05:00:44.278" level="INFO">{"data":{"totalCount":3,"prevKey":3,"containers":[{"ContainerID":1,"NumberOfKeys":0,"pipelines":null},{"ContainerID":2,"NumberOfKeys":0,"pipelines":null},{"ContainerID":3,"NumberOfKeys":0,"pipelines":null}]}}</msg>
<status status="PASS" starttime="20230915 05:00:44.277" endtime="20230915 05:00:44.278"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 05:00:44.278" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 05:00:44.278" endtime="20230915 05:00:44.279"/>
</kw>
<status status="PASS" starttime="20230915 05:00:44.259" endtime="20230915 05:00:44.279"/>
</kw>
<msg timestamp="20230915 05:00:44.279" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 05:00:44.258" endtime="20230915 05:00:44.279"/>
</kw>
<msg timestamp="20230915 05:00:44.279" level="INFO">${result} = {"data":{"totalCount":3,"prevKey":3,"containers":[{"ContainerID":1,"NumberOfKeys":0,"pipelines":null},{"ContainerID":2,"NumberOfKeys":0,"pipelines":null},{"ContainerID":3,"NumberOfKeys":0,"pipelines":...</msg>
<status status="PASS" starttime="20230915 05:00:44.258" endtime="20230915 05:00:44.279"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"ContainerID\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 05:00:44.279" endtime="20230915 05:00:44.280"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/utilization/fileCount</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 05:00:44.283" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 05:00:44.297" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 05:00:44.297" level="INFO">${output} = [{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20230915 05:00:44.281" endtime="20230915 05:00:44.297"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 05:00:44.298" level="INFO">[{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20230915 05:00:44.298" endtime="20230915 05:00:44.298"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 05:00:44.299" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 05:00:44.299" endtime="20230915 05:00:44.299"/>
</kw>
<status status="PASS" starttime="20230915 05:00:44.281" endtime="20230915 05:00:44.299"/>
</kw>
<msg timestamp="20230915 05:00:44.299" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 05:00:44.281" endtime="20230915 05:00:44.300"/>
</kw>
<msg timestamp="20230915 05:00:44.300" level="INFO">${result} = [{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20230915 05:00:44.280" endtime="20230915 05:00:44.300"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20230915 05:00:44.300" level="FAIL">'[{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]' does not contain '"fileSize":2048,"count":10'</msg>
<status status="FAIL" starttime="20230915 05:00:44.300" endtime="20230915 05:00:44.301"/>
</kw>
<status status="FAIL" starttime="20230915 05:00:44.257" endtime="20230915 05:00:44.301"/>
</kw>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit as ozone admin</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230915 05:00:54.302" endtime="20230915 05:00:54.302"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/containers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 05:00:54.306" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 05:00:54.321" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 05:00:54.321" level="INFO">${output} = {"data":{"totalCount":3,"prevKey":3,"containers":[{"ContainerID":1,"NumberOfKeys":0,"pipelines":null},{"ContainerID":2,"NumberOfKeys":0,"pipelines":null},{"ContainerID":3,"NumberOfKeys":0,"pipelines":...</msg>
<status status="PASS" starttime="20230915 05:00:54.303" endtime="20230915 05:00:54.321"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 05:00:54.322" level="INFO">{"data":{"totalCount":3,"prevKey":3,"containers":[{"ContainerID":1,"NumberOfKeys":0,"pipelines":null},{"ContainerID":2,"NumberOfKeys":0,"pipelines":null},{"ContainerID":3,"NumberOfKeys":0,"pipelines":null}]}}</msg>
<status status="PASS" starttime="20230915 05:00:54.322" endtime="20230915 05:00:54.322"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 05:00:54.323" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 05:00:54.323" endtime="20230915 05:00:54.323"/>
</kw>
<status status="PASS" starttime="20230915 05:00:54.303" endtime="20230915 05:00:54.323"/>
</kw>
<msg timestamp="20230915 05:00:54.323" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 05:00:54.303" endtime="20230915 05:00:54.324"/>
</kw>
<msg timestamp="20230915 05:00:54.324" level="INFO">${result} = {"data":{"totalCount":3,"prevKey":3,"containers":[{"ContainerID":1,"NumberOfKeys":0,"pipelines":null},{"ContainerID":2,"NumberOfKeys":0,"pipelines":null},{"ContainerID":3,"NumberOfKeys":0,"pipelines":...</msg>
<status status="PASS" starttime="20230915 05:00:54.302" endtime="20230915 05:00:54.324"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"ContainerID\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 05:00:54.324" endtime="20230915 05:00:54.324"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/utilization/fileCount</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 05:00:54.328" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 05:00:54.343" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 05:00:54.343" level="INFO">${output} = [{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1},{"volume":"recon","bucket":"api","fileSize":2048,"count":10}]</msg>
<status status="PASS" starttime="20230915 05:00:54.326" endtime="20230915 05:00:54.343"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 05:00:54.345" level="INFO">[{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1},{"volume":"recon","bucket":"api","fileSize":2048,"count":10}]</msg>
<status status="PASS" starttime="20230915 05:00:54.344" endtime="20230915 05:00:54.345"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 05:00:54.346" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 05:00:54.345" endtime="20230915 05:00:54.346"/>
</kw>
<status status="PASS" starttime="20230915 05:00:54.325" endtime="20230915 05:00:54.346"/>
</kw>
<msg timestamp="20230915 05:00:54.346" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 05:00:54.325" endtime="20230915 05:00:54.346"/>
</kw>
<msg timestamp="20230915 05:00:54.347" level="INFO">${result} = [{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1},{"volume":"recon","bucket":"api","fileSize":2048,"count":10}]</msg>
<status status="PASS" starttime="20230915 05:00:54.325" endtime="20230915 05:00:54.347"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 05:00:54.347" endtime="20230915 05:00:54.347"/>
</kw>
<status status="PASS" starttime="20230915 05:00:54.301" endtime="20230915 05:00:54.347"/>
</kw>
<status status="PASS" starttime="20230915 05:00:23.944" endtime="20230915 05:00:54.347"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230915 05:00:06.333" endtime="20230915 05:00:54.347"/>
</test>
<test id="s1-s3-s1-t2" name="Check if Recon picks up DN heartbeats" line="71">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/datanodes</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 05:00:54.353" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/datanodes 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 05:00:54.395" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 05:00:54.395" level="INFO">${output} = {"totalCount":6,"datanodes":[{"uuid":"c2f762c2-15db-4396-bae9-ae7212ad146e","hostname":"ozone-topology_datanode_6_1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":0,"stor...</msg>
<status status="PASS" starttime="20230915 05:00:54.351" endtime="20230915 05:00:54.395"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 05:00:54.396" level="INFO">{"totalCount":6,"datanodes":[{"uuid":"c2f762c2-15db-4396-bae9-ae7212ad146e","hostname":"ozone-topology_datanode_6_1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":0,"storageReport":{"capacity":89297309696,"used":22536,"remaining":15325941760},"pipelines":[{"pipelineID":"8546a292-aaca-4c76-a198-5c45ccf8f935","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_5_1.ozone-topology_net"},{"pipelineID":"8096e4dd-6cce-40c1-9b68-42536948f96b","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_4_1.ozone-topology_net"},{"pipelineID":"855b04d7-26e7-4d61-b451-acfebe86212c","replicationType":"RATIS","replicationFactor":"ONE","leaderNode":"ozone-topology_datanode_6_1.ozone-topology_net"}],"containers":2,"openContainers":3,"leaderCount":1,"version":"1.4.0-SNAPSHOT","setupTime":1694753881353,"revision":"82d3155cb08efca6577f13712b66e8b0d335507f","buildDate":"2023-09-15T04:24Z","layoutVersion":7,"networkLocation":"/rack2"},{"uuid":"d48547e2-8cb6-485e-bf35-3d0a2835f6c7","hostname":"ozone-topology_datanode_4_1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":0,"storageReport":{"capacity":89297309696,"used":20486,"remaining":15325941760},"pipelines":[{"pipelineID":"dd2a08fe-6e87-42ba-a746-52ded4a11d05","replicationType":"RATIS","replicationFactor":"ONE","leaderNode":"ozone-topology_datanode_4_1.ozone-topology_net"},{"pipelineID":"8ca0c23a-bf60-461a-96c8-60212a6f772d","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_2_1.ozone-topology_net"},{"pipelineID":"8096e4dd-6cce-40c1-9b68-42536948f96b","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_4_1.ozone-topology_net"}],"containers":2,"openContainers":2,"leaderCount":2,"version":"1.4.0-SNAPSHOT","setupTime":1694753882896,"revision":"82d3155cb08efca6577f13712b66e8b0d335507f","buildDate":"2023-09-15T04:24Z","layoutVersion":7,"networkLocation":"/rack2"},{"uuid":"965a47da-d16e-4a56-9fe8-585f31b3631e","hostname":"ozone-topology_datanode_5_1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":0,"storageReport":{"capacity":89297309696,"used":14342,"remaining":15325941760},"pipelines":[{"pipelineID":"c18302d4-d8f9-4c01-8381-8da180e49788","replicationType":"RATIS","replicationFactor":"ONE","leaderNode":"ozone-topology_datanode_5_1.ozone-topology_net"},{"pipelineID":"8546a292-aaca-4c76-a198-5c45ccf8f935","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_5_1.ozone-topology_net"},{"pipelineID":"8ca0c23a-bf60-461a-96c8-60212a6f772d","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_2_1.ozone-topology_net"}],"containers":2,"openContainers":3,"leaderCount":2,"version":"1.4.0-SNAPSHOT","setupTime":1694753883575,"revision":"82d3155cb08efca6577f13712b66e8b0d335507f","buildDate":"2023-09-15T04:24Z","layoutVersion":7,"networkLocation":"/rack2"},{"uuid":"89d77dd4-e0d2-4f2b-934a-ad3669181dbd","hostname":"ozone-topology_datanode_3_1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":0,"storageReport":{"capacity":89297309696,"used":4096,"remaining":15325941760},"pipelines":[{"pipelineID":"432ac635-d623-46fb-becf-dd042d3788d4","replicationType":"RATIS","replicationFactor":"ONE","leaderNode":"ozone-topology_datanode_3_1.ozone-topology_net"}],"containers":0,"openContainers":0,"leaderCount":1,"version":"1.4.0-SNAPSHOT","setupTime":1694753883491,"revision":"82d3155cb08efca6577f13712b66e8b0d335507f","buildDate":"2023-09-15T04:24Z","layoutVersion":7,"networkLocation":"/rack1"},{"uuid":"e8637f62-f3de-43f8-9a69-9b0f2f16cb72","hostname":"ozone-topology_datanode_2_1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":0,"storageReport":{"capacity":89297309696,"used":10246,"remaining":15325941760},"pipelines":[{"pipelineID":"b7cdb3ad-23d0-485c-80a2-4bed4a5fc58b","replicationType":"RATIS","replicationFactor":"ONE","leaderNode":"ozone-topology_datanode_2_1.ozone-topology_net"},{"pipelineID":"8546a292-aaca-4c76-a198-5c45ccf8f935","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_5_1.ozone-topology_net"},{"pipelineID":"8ca0c23a-bf60-461a-96c8-60212a6f772d","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_2_1.ozone-topology_net"}],"containers":2,"openContainers":3,"leaderCount":2,"version":"1.4.0-SNAPSHOT","setupTime":1694753882479,"revision":"82d3155cb08efca6577f13712b66e8b0d335507f","buildDate":"2023-09-15T04:24Z","layoutVersion":7,"networkLocation":"/rack1"},{"uuid":"c64e2407-cb3c-47ec-82d7-d8ea31f15f5d","hostname":"ozone-topology_datanode_1_1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":0,"storageReport":{"capacity":89297309696,"used":14336,"remaining":15626674176},"pipelines":[{"pipelineID":"8096e4dd-6cce-40c1-9b68-42536948f96b","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_4_1.ozone-topology_net"},{"pipelineID":"e85dcac5-d46f-49ff-a420-2ea7f015c6b6","replicationType":"RATIS","replicationFactor":"ONE","leaderNode":"ozone-topology_datanode_1_1.ozone-topology_net"}],"containers":1,"openContainers":1,"leaderCount":1,"version":"1.4.0-SNAPSHOT","setupTime":1694753882506,"revision":"82d3155cb08efca6577f13712b66e8b0d335507f","buildDate":"2023-09-15T04:24Z","layoutVersion":7,"networkLocation":"/rack1"}]}</msg>
<status status="PASS" starttime="20230915 05:00:54.396" endtime="20230915 05:00:54.397"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 05:00:54.397" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 05:00:54.397" endtime="20230915 05:00:54.397"/>
</kw>
<status status="PASS" starttime="20230915 05:00:54.350" endtime="20230915 05:00:54.398"/>
</kw>
<msg timestamp="20230915 05:00:54.398" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 05:00:54.350" endtime="20230915 05:00:54.398"/>
</kw>
<msg timestamp="20230915 05:00:54.398" level="INFO">${result} = {"totalCount":6,"datanodes":[{"uuid":"c2f762c2-15db-4396-bae9-ae7212ad146e","hostname":"ozone-topology_datanode_6_1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":0,"stor...</msg>
<status status="PASS" starttime="20230915 05:00:54.349" endtime="20230915 05:00:54.398"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>datanodes</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 05:00:54.398" endtime="20230915 05:00:54.398"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>datanode_1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 05:00:54.399" endtime="20230915 05:00:54.399"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>datanode_2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 05:00:54.399" endtime="20230915 05:00:54.399"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>datanode_3</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 05:00:54.399" endtime="20230915 05:00:54.400"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/pipelines</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 05:00:54.405" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/pipelines 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 05:00:54.450" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 05:00:54.450" level="INFO">${output} = {"totalCount":9,"pipelines":[{"pipelineId":"c18302d4-d8f9-4c01-8381-8da180e49788","status":"OPEN","leaderNode":"ozone-topology_datanode_5_1.ozone-topology_net","datanodes":[{"level":0,"parent":null,"c...</msg>
<status status="PASS" starttime="20230915 05:00:54.402" endtime="20230915 05:00:54.450"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 05:00:54.452" level="INFO">{"totalCount":9,"pipelines":[{"pipelineId":"c18302d4-d8f9-4c01-8381-8da180e49788","status":"OPEN","leaderNode":"ozone-topology_datanode_5_1.ozone-topology_net","datanodes":[{"level":0,"parent":null,"cost":0,"uuid":"965a47da-d16e-4a56-9fe8-585f31b3631e","uuidString":"965a47da-d16e-4a56-9fe8-585f31b3631e","ipAddress":"10.5.0.8","hostName":"ozone-topology_datanode_5_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":9864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":1207355595,"decommissioned":false,"maintenance":false,"networkFullPath":"/rack2/965a47da-d16e-4a56-9fe8-585f31b3631e","networkLocation":"/rack2","numOfLeaves":1,"networkName":"965a47da-d16e-4a56-9fe8-585f31b3631e"}],"lastLeaderElection":0,"duration":116146,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"ONE","containers":0},{"pipelineId":"dd2a08fe-6e87-42ba-a746-52ded4a11d05","status":"OPEN","leaderNode":"ozone-topology_datanode_4_1.ozone-topology_net","datanodes":[{"level":0,"parent":null,"cost":0,"uuid":"d48547e2-8cb6-485e-bf35-3d0a2835f6c7","uuidString":"d48547e2-8cb6-485e-bf35-3d0a2835f6c7","ipAddress":"10.5.0.7","hostName":"ozone-topology_datanode_4_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":9864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":-1841404748,"decommissioned":false,"maintenance":false,"networkFullPath":"/rack2/d48547e2-8cb6-485e-bf35-3d0a2835f6c7","networkLocation":"/rack2","numOfLeaves":1,"networkName":"d48547e2-8cb6-485e-bf35-3d0a2835f6c7"}],"lastLeaderElection":0,"duration":116093,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"ONE","containers":0},{"pipelineId":"b7cdb3ad-23d0-485c-80a2-4bed4a5fc58b","status":"OPEN","leaderNode":"ozone-topology_datanode_2_1.ozone-topology_net","datanodes":[{"level":0,"parent":null,"cost":0,"uuid":"e8637f62-f3de-43f8-9a69-9b0f2f16cb72","uuidString":"e8637f62-f3de-43f8-9a69-9b0f2f16cb72","ipAddress":"10.5.0.5","hostName":"ozone-topology_datanode_2_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":9864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":-1002946195,"decommissioned":false,"maintenance":false,"networkFullPath":"/rack1/e8637f62-f3de-43f8-9a69-9b0f2f16cb72","networkLocation":"/rack1","numOfLeaves":1,"networkName":"e8637f62-f3de-43f8-9a69-9b0f2f16cb72"}],"lastLeaderElection":0,"duration":116029,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"ONE","containers":0},{"pipelineId":"8546a292-aaca-4c76-a198-5c45ccf8f935","status":"OPEN","leaderNode":"ozone-topology_datanode_5_1.ozone-topology_net","datanodes":[{"level":0,"parent":null,"cost":0,"uuid":"c2f762c2-15db-4396-bae9-ae7212ad146e","uuidString":"c2f762c2-15db-4396-bae9-ae7212ad146e","ipAddress":"10.5.0.9","hostName":"ozone-topology_datanode_6_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":9864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":1847790950,"decommissioned":false,"maintenance":false,"networkFullPath":"/rack2/c2f762c2-15db-4396-bae9-ae7212ad146e","networkLocation":"/rack2","numOfLeaves":1,"networkName":"c2f762c2-15db-4396-bae9-ae7212ad146e"},{"level":0,"parent":null,"cost":0,"uuid":"e8637f62-f3de-43f8-9a69-9b0f2f16cb72","uuidString":"e8637f62-f3de-43f8-9a69-9b0f2f16cb72","ipAddress":"10.5.0.5","hostName":"ozone-topology_datanode_2_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":9864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":-1002946195,"decommissioned":false,"maintenance":false,"networkFullPath":"/rack1/e8637f62-f3de-43f8-9a69-9b0f2f16cb72","networkLocation":"/rack1","numOfLeaves":1,"networkName":"e8637f62-f3de-43f8-9a69-9b0f2f16cb72"},{"level":0,"parent":null,"cost":0,"uuid":"965a47da-d16e-4a56-9fe8-585f31b3631e","uuidString":"965a47da-d16e-4a56-9fe8-585f31b3631e","ipAddress":"10.5.0.8","hostName":"ozone-topology_datanode_5_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":9864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":1207355595,"decommissioned":false,"maintenance":false,"networkFullPath":"/rack2/965a47da-d16e-4a56-9fe8-585f31b3631e","networkLocation":"/rack2","numOfLeaves":1,"networkName":"965a47da-d16e-4a56-9fe8-585f31b3631e"}],"lastLeaderElection":0,"duration":116179,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"THREE","containers":1},{"pipelineId":"8ca0c23a-bf60-461a-96c8-60212a6f772d","status":"OPEN","leaderNode":"ozone-topology_datanode_2_1.ozone-topology_net","datanodes":[{"level":0,"parent":null,"cost":0,"uuid":"965a47da-d16e-4a56-9fe8-585f31b3631e","uuidString":"965a47da-d16e-4a56-9fe8-585f31b3631e","ipAddress":"10.5.0.8","hostName":"ozone-topology_datanode_5_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":9864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":1207355595,"decommissioned":false,"maintenance":false,"networkFullPath":"/rack2/965a47da-d16e-4a56-9fe8-585f31b3631e","networkLocation":"/rack2","numOfLeaves":1,"networkName":"965a47da-d16e-4a56-9fe8-585f31b3631e"},{"level":0,"parent":null,"cost":0,"uuid":"e8637f62-f3de-43f8-9a69-9b0f2f16cb72","uuidString":"e8637f62-f3de-43f8-9a69-9b0f2f16cb72","ipAddress":"10.5.0.5","hostName":"ozone-topology_datanode_2_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":9864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":-1002946195,"decommissioned":false,"maintenance":false,"networkFullPath":"/rack1/e8637f62-f3de-43f8-9a69-9b0f2f16cb72","networkLocation":"/rack1","numOfLeaves":1,"networkName":"e8637f62-f3de-43f8-9a69-9b0f2f16cb72"},{"level":0,"parent":null,"cost":0,"uuid":"d48547e2-8cb6-485e-bf35-3d0a2835f6c7","uuidString":"d48547e2-8cb6-485e-bf35-3d0a2835f6c7","ipAddress":"10.5.0.7","hostName":"ozone-topology_datanode_4_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":9864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":-1841404748,"decommissioned":false,"maintenance":false,"networkFullPath":"/rack2/d48547e2-8cb6-485e-bf35-3d0a2835f6c7","networkLocation":"/rack2","numOfLeaves":1,"networkName":"d48547e2-8cb6-485e-bf35-3d0a2835f6c7"}],"lastLeaderElection":0,"duration":116042,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"THREE","containers":1},{"pipelineId":"8096e4dd-6cce-40c1-9b68-42536948f96b","status":"OPEN","leaderNode":"ozone-topology_datanode_4_1.ozone-topology_net","datanodes":[{"level":0,"parent":null,"cost":0,"uuid":"d48547e2-8cb6-485e-bf35-3d0a2835f6c7","uuidString":"d48547e2-8cb6-485e-bf35-3d0a2835f6c7","ipAddress":"10.5.0.7","hostName":"ozone-topology_datanode_4_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":9864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":-1841404748,"decommissioned":false,"maintenance":false,"networkFullPath":"/rack2/d48547e2-8cb6-485e-bf35-3d0a2835f6c7","networkLocation":"/rack2","numOfLeaves":1,"networkName":"d48547e2-8cb6-485e-bf35-3d0a2835f6c7"},{"level":0,"parent":null,"cost":0,"uuid":"c64e2407-cb3c-47ec-82d7-d8ea31f15f5d","uuidString":"c64e2407-cb3c-47ec-82d7-d8ea31f15f5d","ipAddress":"10.5.0.4","hostName":"ozone-topology_datanode_1_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":9864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":-1168146560,"decommissioned":false,"maintenance":false,"networkFullPath":"/rack1/c64e2407-cb3c-47ec-82d7-d8ea31f15f5d","networkLocation":"/rack1","numOfLeaves":1,"networkName":"c64e2407-cb3c-47ec-82d7-d8ea31f15f5d"},{"level":0,"parent":null,"cost":0,"uuid":"c2f762c2-15db-4396-bae9-ae7212ad146e","uuidString":"c2f762c2-15db-4396-bae9-ae7212ad146e","ipAddress":"10.5.0.9","hostName":"ozone-topology_datanode_6_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":9864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":1847790950,"decommissioned":false,"maintenance":false,"networkFullPath":"/rack2/c2f762c2-15db-4396-bae9-ae7212ad146e","networkLocation":"/rack2","numOfLeaves":1,"networkName":"c2f762c2-15db-4396-bae9-ae7212ad146e"}],"lastLeaderElection":0,"duration":116113,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"THREE","containers":1},{"pipelineId":"e85dcac5-d46f-49ff-a420-2ea7f015c6b6","status":"OPEN","leaderNode":"ozone-topology_datanode_1_1.ozone-topology_net","datanodes":[{"level":0,"parent":null,"cost":0,"uuid":"c64e2407-cb3c-47ec-82d7-d8ea31f15f5d","uuidString":"c64e2407-cb3c-47ec-82d7-d8ea31f15f5d","ipAddress":"10.5.0.4","hostName":"ozone-topology_datanode_1_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":9864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":-1168146560,"decommissioned":false,"maintenance":false,"networkFullPath":"/rack1/c64e2407-cb3c-47ec-82d7-d8ea31f15f5d","networkLocation":"/rack1","numOfLeaves":1,"networkName":"c64e2407-cb3c-47ec-82d7-d8ea31f15f5d"}],"lastLeaderElection":0,"duration":116009,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"ONE","containers":0},{"pipelineId":"855b04d7-26e7-4d61-b451-acfebe86212c","status":"OPEN","leaderNode":"ozone-topology_datanode_6_1.ozone-topology_net","datanodes":[{"level":0,"parent":null,"cost":0,"uuid":"c2f762c2-15db-4396-bae9-ae7212ad146e","uuidString":"c2f762c2-15db-4396-bae9-ae7212ad146e","ipAddress":"10.5.0.9","hostName":"ozone-topology_datanode_6_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":9864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":1847790950,"decommissioned":false,"maintenance":false,"networkFullPath":"/rack2/c2f762c2-15db-4396-bae9-ae7212ad146e","networkLocation":"/rack2","numOfLeaves":1,"networkName":"c2f762c2-15db-4396-bae9-ae7212ad146e"}],"lastLeaderElection":0,"duration":117068,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"ONE","containers":0},{"pipelineId":"432ac635-d623-46fb-becf-dd042d3788d4","status":"OPEN","leaderNode":"ozone-topology_datanode_3_1.ozone-topology_net","datanodes":[{"level":0,"parent":null,"cost":0,"uuid":"89d77dd4-e0d2-4f2b-934a-ad3669181dbd","uuidString":"89d77dd4-e0d2-4f2b-934a-ad3669181dbd","ipAddress":"10.5.0.6","hostName":"ozone-topology_datanode_3_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":9864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":1359306033,"decommissioned":false,"maintenance":false,"networkFullPath":"/rack1/89d77dd4-e0d2-4f2b-934a-ad3669181dbd","networkLocation":"/rack1","numOfLeaves":1,"networkName":"89d77dd4-e0d2-4f2b-934a-ad3669181dbd"}],"lastLeaderElection":0,"duration":115822,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"ONE","containers":0}]}</msg>
<status status="PASS" starttime="20230915 05:00:54.451" endtime="20230915 05:00:54.452"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 05:00:54.452" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 05:00:54.452" endtime="20230915 05:00:54.453"/>
</kw>
<status status="PASS" starttime="20230915 05:00:54.402" endtime="20230915 05:00:54.453"/>
</kw>
<msg timestamp="20230915 05:00:54.453" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 05:00:54.401" endtime="20230915 05:00:54.453"/>
</kw>
<msg timestamp="20230915 05:00:54.453" level="INFO">${result} = {"totalCount":9,"pipelines":[{"pipelineId":"c18302d4-d8f9-4c01-8381-8da180e49788","status":"OPEN","leaderNode":"ozone-topology_datanode_5_1.ozone-topology_net","datanodes":[{"level":0,"parent":null,"c...</msg>
<status status="PASS" starttime="20230915 05:00:54.401" endtime="20230915 05:00:54.453"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>pipelines</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 05:00:54.454" endtime="20230915 05:00:54.454"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 05:00:54.454" endtime="20230915 05:00:54.454"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>OPEN</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 05:00:54.454" endtime="20230915 05:00:54.455"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>datanode_1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 05:00:54.455" endtime="20230915 05:00:54.455"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>datanode_2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 05:00:54.455" endtime="20230915 05:00:54.456"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>datanode_3</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 05:00:54.456" endtime="20230915 05:00:54.456"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/clusterState</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 05:00:54.461" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/clusterState 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 05:00:54.535" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 05:00:54.535" level="INFO">${output} = {"deletedDirs":0,"pipelines":9,"totalDatanodes":6,"healthyDatanodes":6,"storageReport":{"capacity":535783858176,"used":86042,"remaining":92256382976},"containers":3,"missingContainers":0,"openContaine...</msg>
<status status="PASS" starttime="20230915 05:00:54.458" endtime="20230915 05:00:54.535"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 05:00:54.536" level="INFO">{"deletedDirs":0,"pipelines":9,"totalDatanodes":6,"healthyDatanodes":6,"storageReport":{"capacity":535783858176,"used":86042,"remaining":92256382976},"containers":3,"missingContainers":0,"openContainers":3,"deletedContainers":0,"volumes":3,"buckets":2,"keys":11,"keysPendingDeletion":0}</msg>
<status status="PASS" starttime="20230915 05:00:54.536" endtime="20230915 05:00:54.536"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 05:00:54.537" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 05:00:54.537" endtime="20230915 05:00:54.537"/>
</kw>
<status status="PASS" starttime="20230915 05:00:54.457" endtime="20230915 05:00:54.537"/>
</kw>
<msg timestamp="20230915 05:00:54.537" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 05:00:54.457" endtime="20230915 05:00:54.537"/>
</kw>
<msg timestamp="20230915 05:00:54.538" level="INFO">${result} = {"deletedDirs":0,"pipelines":9,"totalDatanodes":6,"healthyDatanodes":6,"storageReport":{"capacity":535783858176,"used":86042,"remaining":92256382976},"containers":3,"missingContainers":0,"openContaine...</msg>
<status status="PASS" starttime="20230915 05:00:54.456" endtime="20230915 05:00:54.538"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"totalDatanodes\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 05:00:54.538" endtime="20230915 05:00:54.538"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"healthyDatanodes\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 05:00:54.538" endtime="20230915 05:00:54.538"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"pipelines\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 05:00:54.539" endtime="20230915 05:00:54.539"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/containers/1/replicaHistory</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 05:00:54.543" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/containers/1/replicaHistory 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 05:00:54.562" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 05:00:54.562" level="INFO">${output} = [{"containerId":1,"datanodeUuid":"c2f762c2-15db-4396-bae9-ae7212ad146e","datanodeHost":"ozone-topology_datanode_6_1.ozone-topology_net","firstSeenTime":1694753973897,"lastSeenTime":1694753973897,"stat...</msg>
<status status="PASS" starttime="20230915 05:00:54.540" endtime="20230915 05:00:54.562"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 05:00:54.563" level="INFO">[{"containerId":1,"datanodeUuid":"c2f762c2-15db-4396-bae9-ae7212ad146e","datanodeHost":"ozone-topology_datanode_6_1.ozone-topology_net","firstSeenTime":1694753973897,"lastSeenTime":1694753973897,"state":"OPEN","lastBcsId":0},{"containerId":1,"datanodeUuid":"d48547e2-8cb6-485e-bf35-3d0a2835f6c7","datanodeHost":"ozone-topology_datanode_4_1.ozone-topology_net","firstSeenTime":1694753973684,"lastSeenTime":1694753973684,"state":"OPEN","lastBcsId":0},{"containerId":1,"datanodeUuid":"c64e2407-cb3c-47ec-82d7-d8ea31f15f5d","datanodeHost":"ozone-topology_datanode_1_1.ozone-topology_net","firstSeenTime":1694753974485,"lastSeenTime":1694753974485,"state":"OPEN","lastBcsId":0}]</msg>
<status status="PASS" starttime="20230915 05:00:54.563" endtime="20230915 05:00:54.564"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 05:00:54.564" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 05:00:54.564" endtime="20230915 05:00:54.564"/>
</kw>
<status status="PASS" starttime="20230915 05:00:54.540" endtime="20230915 05:00:54.564"/>
</kw>
<msg timestamp="20230915 05:00:54.565" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 05:00:54.539" endtime="20230915 05:00:54.565"/>
</kw>
<msg timestamp="20230915 05:00:54.565" level="INFO">${result} = [{"containerId":1,"datanodeUuid":"c2f762c2-15db-4396-bae9-ae7212ad146e","datanodeHost":"ozone-topology_datanode_6_1.ozone-topology_net","firstSeenTime":1694753973897,"lastSeenTime":1694753973897,"stat...</msg>
<status status="PASS" starttime="20230915 05:00:54.539" endtime="20230915 05:00:54.565"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"containerId\":1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 05:00:54.565" endtime="20230915 05:00:54.565"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230915 05:00:54.349" endtime="20230915 05:00:54.566"/>
</test>
<test id="s1-s3-s1-t3" name="Check if Recon Web UI is up" line="94">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230915 05:00:54.568" endtime="20230915 05:00:54.569"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${ENDPOINT_URL}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 05:00:54.572" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 05:00:54.591" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 05:00:54.591" level="INFO">${output} = &lt;!doctype html&gt;&lt;html lang="en"&gt;&lt;head&gt;&lt;meta charset="utf-8"/&gt;&lt;link rel="shortcut icon" href="/favicon.ico"/&gt;&lt;meta name="viewport" content="width=device-width,initial-scale=1"/&gt;&lt;meta name="theme-color" ...</msg>
<status status="PASS" starttime="20230915 05:00:54.570" endtime="20230915 05:00:54.591"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 05:00:54.593" level="INFO">&lt;!doctype html&gt;&lt;html lang="en"&gt;&lt;head&gt;&lt;meta charset="utf-8"/&gt;&lt;link rel="shortcut icon" href="/favicon.ico"/&gt;&lt;meta name="viewport" content="width=device-width,initial-scale=1"/&gt;&lt;meta name="theme-color" content="#000000"/&gt;&lt;link rel="manifest" href="/manifest.json"/&gt;&lt;title&gt;Ozone Recon&lt;/title&gt;&lt;link href="/static/css/2.58b4e004.chunk.css" rel="stylesheet"&gt;&lt;link href="/static/css/main.95934262.chunk.css" rel="stylesheet"&gt;&lt;/head&gt;&lt;body&gt;&lt;noscript&gt;You need to enable JavaScript to run this app.&lt;/noscript&gt;&lt;div id="root"&gt;&lt;/div&gt;&lt;script&gt;!function(e){function r(r){for(var n,l,f=r[0],i=r[1],a=r[2],p=0,s=[];p&lt;f.length;p++)l=f[p],Object.prototype.hasOwnProperty.call(o,l)&amp;&amp;o[l]&amp;&amp;s.push(o[l][0]),o[l]=0;for(n in i)Object.prototype.hasOwnProperty.call(i,n)&amp;&amp;(e[n]=i[n]);for(c&amp;&amp;c(r);s.length;)s.shift()();return u.push.apply(u,a||[]),t()}function t(){for(var e,r=0;r&lt;u.length;r++){for(var t=u[r],n=!0,f=1;f&lt;t.length;f++){var i=t[f];0!==o[i]&amp;&amp;(n=!1)}n&amp;&amp;(u.splice(r--,1),e=l(l.s=t[0]))}return e}var n={},o={1:0},u=[];function l(r){if(n[r])return n[r].exports;var t=n[r]={i:r,l:!1,exports:{}};return e[r].call(t.exports,t,t.exports,l),t.l=!0,t.exports}l.m=e,l.c=n,l.d=function(e,r,t){l.o(e,r)||Object.defineProperty(e,r,{enumerable:!0,get:t})},l.r=function(e){"undefined"!=typeof Symbol&amp;&amp;Symbol.toStringTag&amp;&amp;Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},l.t=function(e,r){if(1&amp;r&amp;&amp;(e=l(e)),8&amp;r)return e;if(4&amp;r&amp;&amp;"object"==typeof e&amp;&amp;e&amp;&amp;e.__esModule)return e;var t=Object.create(null);if(l.r(t),Object.defineProperty(t,"default",{enumerable:!0,value:e}),2&amp;r&amp;&amp;"string"!=typeof e)for(var n in e)l.d(t,n,function(r){return e[r]}.bind(null,n));return t},l.n=function(e){var r=e&amp;&amp;e.__esModule?function(){return e.default}:function(){return e};return l.d(r,"a",r),r},l.o=function(e,r){return Object.prototype.hasOwnProperty.call(e,r)},l.p="/";var f=this["webpackJsonpozone-recon"]=this["webpackJsonpozone-recon"]||[],i=f.push.bind(f);f.push=r,f=f.slice();for(var a=0;a&lt;f.length;a++)r(f[a]);var c=i;t()}([])&lt;/script&gt;&lt;script src="/static/js/2.60ad2f10.chunk.js"&gt;&lt;/script&gt;&lt;script src="/static/js/main.8c26211b.chunk.js"&gt;&lt;/script&gt;&lt;/body&gt;&lt;/html&gt;</msg>
<status status="PASS" starttime="20230915 05:00:54.592" endtime="20230915 05:00:54.593"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 05:00:54.593" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 05:00:54.593" endtime="20230915 05:00:54.593"/>
</kw>
<status status="PASS" starttime="20230915 05:00:54.570" endtime="20230915 05:00:54.593"/>
</kw>
<msg timestamp="20230915 05:00:54.594" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 05:00:54.569" endtime="20230915 05:00:54.594"/>
</kw>
<msg timestamp="20230915 05:00:54.594" level="INFO">${result} = &lt;!doctype html&gt;&lt;html lang="en"&gt;&lt;head&gt;&lt;meta charset="utf-8"/&gt;&lt;link rel="shortcut icon" href="/favicon.ico"/&gt;&lt;meta name="viewport" content="width=device-width,initial-scale=1"/&gt;&lt;meta name="theme-color" ...</msg>
<status status="PASS" starttime="20230915 05:00:54.569" endtime="20230915 05:00:54.594"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Ozone Recon</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 05:00:54.594" endtime="20230915 05:00:54.594"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230915 05:00:54.567" endtime="20230915 05:00:54.595"/>
</test>
<test id="s1-s3-s1-t4" name="Check web UI access" line="99">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 05:00:54.600" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 05:00:54.606" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 05:00:54.606" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230915 05:00:54.598" endtime="20230915 05:00:54.606"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 05:00:54.607" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230915 05:00:54.607" endtime="20230915 05:00:54.607"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 05:00:54.608" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 05:00:54.607" endtime="20230915 05:00:54.608"/>
</kw>
<status status="PASS" starttime="20230915 05:00:54.597" endtime="20230915 05:00:54.608"/>
</kw>
<msg timestamp="20230915 05:00:54.608" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 05:00:54.597" endtime="20230915 05:00:54.608"/>
</kw>
<status status="PASS" starttime="20230915 05:00:54.596" endtime="20230915 05:00:54.609"/>
</kw>
<kw name="Check http return code">
<arg>${ENDPOINT_URL}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 05:00:54.613" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 05:00:54.641" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 05:00:54.641" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230915 05:00:54.611" endtime="20230915 05:00:54.641"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 05:00:54.643" level="INFO">200</msg>
<status status="PASS" starttime="20230915 05:00:54.642" endtime="20230915 05:00:54.643"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 05:00:54.643" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 05:00:54.643" endtime="20230915 05:00:54.644"/>
</kw>
<status status="PASS" starttime="20230915 05:00:54.611" endtime="20230915 05:00:54.644"/>
</kw>
<msg timestamp="20230915 05:00:54.644" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 05:00:54.610" endtime="20230915 05:00:54.644"/>
</kw>
<msg timestamp="20230915 05:00:54.644" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230915 05:00:54.609" endtime="20230915 05:00:54.644"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230915 05:00:54.645" endtime="20230915 05:00:54.645"/>
</kw>
<status status="NOT RUN" starttime="20230915 05:00:54.644" endtime="20230915 05:00:54.645"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 05:00:54.645" endtime="20230915 05:00:54.645"/>
</kw>
<status status="PASS" starttime="20230915 05:00:54.645" endtime="20230915 05:00:54.645"/>
</branch>
<status status="PASS" starttime="20230915 05:00:54.644" endtime="20230915 05:00:54.646"/>
</if>
<status status="PASS" starttime="20230915 05:00:54.609" endtime="20230915 05:00:54.646"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230915 05:00:54.646" endtime="20230915 05:00:54.646"/>
</kw>
<status status="PASS" starttime="20230915 05:00:54.646" endtime="20230915 05:00:54.647"/>
</kw>
<kw name="Check http return code">
<arg>${ENDPOINT_URL}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 05:00:54.651" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 05:00:54.664" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 05:00:54.664" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230915 05:00:54.649" endtime="20230915 05:00:54.664"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 05:00:54.665" level="INFO">200</msg>
<status status="PASS" starttime="20230915 05:00:54.664" endtime="20230915 05:00:54.665"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 05:00:54.665" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 05:00:54.665" endtime="20230915 05:00:54.666"/>
</kw>
<status status="PASS" starttime="20230915 05:00:54.648" endtime="20230915 05:00:54.666"/>
</kw>
<msg timestamp="20230915 05:00:54.666" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 05:00:54.648" endtime="20230915 05:00:54.666"/>
</kw>
<msg timestamp="20230915 05:00:54.666" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230915 05:00:54.647" endtime="20230915 05:00:54.666"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230915 05:00:54.667" endtime="20230915 05:00:54.667"/>
</kw>
<status status="NOT RUN" starttime="20230915 05:00:54.666" endtime="20230915 05:00:54.667"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 05:00:54.667" endtime="20230915 05:00:54.667"/>
</kw>
<status status="PASS" starttime="20230915 05:00:54.667" endtime="20230915 05:00:54.667"/>
</branch>
<status status="PASS" starttime="20230915 05:00:54.666" endtime="20230915 05:00:54.667"/>
</if>
<status status="PASS" starttime="20230915 05:00:54.647" endtime="20230915 05:00:54.667"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230915 05:00:54.596" endtime="20230915 05:00:54.668"/>
</test>
<test id="s1-s3-s1-t5" name="Check admin only api access" line="107">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 05:00:54.672" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 05:00:54.675" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 05:00:54.675" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230915 05:00:54.670" endtime="20230915 05:00:54.675"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 05:00:54.676" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230915 05:00:54.676" endtime="20230915 05:00:54.676"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 05:00:54.677" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 05:00:54.677" endtime="20230915 05:00:54.677"/>
</kw>
<status status="PASS" starttime="20230915 05:00:54.670" endtime="20230915 05:00:54.677"/>
</kw>
<msg timestamp="20230915 05:00:54.677" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 05:00:54.670" endtime="20230915 05:00:54.677"/>
</kw>
<status status="PASS" starttime="20230915 05:00:54.669" endtime="20230915 05:00:54.678"/>
</kw>
<kw name="Check http return code">
<arg>${ADMIN_API_ENDPOINT_URL}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 05:00:54.682" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 05:00:54.694" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 05:00:54.694" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230915 05:00:54.680" endtime="20230915 05:00:54.694"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 05:00:54.696" level="INFO">200</msg>
<status status="PASS" starttime="20230915 05:00:54.695" endtime="20230915 05:00:54.696"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 05:00:54.696" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 05:00:54.696" endtime="20230915 05:00:54.696"/>
</kw>
<status status="PASS" starttime="20230915 05:00:54.679" endtime="20230915 05:00:54.696"/>
</kw>
<msg timestamp="20230915 05:00:54.697" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 05:00:54.679" endtime="20230915 05:00:54.697"/>
</kw>
<msg timestamp="20230915 05:00:54.697" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230915 05:00:54.678" endtime="20230915 05:00:54.697"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230915 05:00:54.697" endtime="20230915 05:00:54.698"/>
</kw>
<status status="NOT RUN" starttime="20230915 05:00:54.697" endtime="20230915 05:00:54.698"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 05:00:54.698" endtime="20230915 05:00:54.698"/>
</kw>
<status status="PASS" starttime="20230915 05:00:54.698" endtime="20230915 05:00:54.698"/>
</branch>
<status status="PASS" starttime="20230915 05:00:54.697" endtime="20230915 05:00:54.698"/>
</if>
<status status="PASS" starttime="20230915 05:00:54.678" endtime="20230915 05:00:54.698"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230915 05:00:54.699" endtime="20230915 05:00:54.699"/>
</kw>
<status status="PASS" starttime="20230915 05:00:54.699" endtime="20230915 05:00:54.700"/>
</kw>
<kw name="Check http return code">
<arg>${ADMIN_API_ENDPOINT_URL}</arg>
<arg>403</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 05:00:54.704" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 05:00:54.720" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 05:00:54.720" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230915 05:00:54.701" endtime="20230915 05:00:54.720"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 05:00:54.721" level="INFO">200</msg>
<status status="PASS" starttime="20230915 05:00:54.720" endtime="20230915 05:00:54.721"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 05:00:54.721" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 05:00:54.721" endtime="20230915 05:00:54.721"/>
</kw>
<status status="PASS" starttime="20230915 05:00:54.701" endtime="20230915 05:00:54.722"/>
</kw>
<msg timestamp="20230915 05:00:54.722" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 05:00:54.701" endtime="20230915 05:00:54.722"/>
</kw>
<msg timestamp="20230915 05:00:54.722" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230915 05:00:54.700" endtime="20230915 05:00:54.722"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230915 05:00:54.722" endtime="20230915 05:00:54.723"/>
</kw>
<status status="NOT RUN" starttime="20230915 05:00:54.722" endtime="20230915 05:00:54.723"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 05:00:54.723" endtime="20230915 05:00:54.723"/>
</kw>
<status status="PASS" starttime="20230915 05:00:54.723" endtime="20230915 05:00:54.723"/>
</branch>
<status status="PASS" starttime="20230915 05:00:54.722" endtime="20230915 05:00:54.723"/>
</if>
<status status="PASS" starttime="20230915 05:00:54.700" endtime="20230915 05:00:54.725"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230915 05:00:54.725" endtime="20230915 05:00:54.725"/>
</kw>
<status status="PASS" starttime="20230915 05:00:54.725" endtime="20230915 05:00:54.726"/>
</kw>
<kw name="Check http return code">
<arg>${ADMIN_API_ENDPOINT_URL}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 05:00:54.729" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 05:00:54.744" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 05:00:54.744" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230915 05:00:54.727" endtime="20230915 05:00:54.744"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 05:00:54.745" level="INFO">200</msg>
<status status="PASS" starttime="20230915 05:00:54.744" endtime="20230915 05:00:54.745"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 05:00:54.746" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 05:00:54.745" endtime="20230915 05:00:54.746"/>
</kw>
<status status="PASS" starttime="20230915 05:00:54.727" endtime="20230915 05:00:54.746"/>
</kw>
<msg timestamp="20230915 05:00:54.746" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 05:00:54.727" endtime="20230915 05:00:54.746"/>
</kw>
<msg timestamp="20230915 05:00:54.746" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230915 05:00:54.726" endtime="20230915 05:00:54.746"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230915 05:00:54.747" endtime="20230915 05:00:54.747"/>
</kw>
<status status="NOT RUN" starttime="20230915 05:00:54.746" endtime="20230915 05:00:54.747"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 05:00:54.747" endtime="20230915 05:00:54.747"/>
</kw>
<status status="PASS" starttime="20230915 05:00:54.747" endtime="20230915 05:00:54.747"/>
</branch>
<status status="PASS" starttime="20230915 05:00:54.746" endtime="20230915 05:00:54.747"/>
</if>
<status status="PASS" starttime="20230915 05:00:54.726" endtime="20230915 05:00:54.747"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230915 05:00:54.748" endtime="20230915 05:00:54.748"/>
</kw>
<status status="PASS" starttime="20230915 05:00:54.748" endtime="20230915 05:00:54.749"/>
</kw>
<kw name="Check http return code">
<arg>${ADMIN_API_ENDPOINT_URL}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 05:00:54.752" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 05:00:54.777" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 05:00:54.777" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230915 05:00:54.750" endtime="20230915 05:00:54.777"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 05:00:54.778" level="INFO">200</msg>
<status status="PASS" starttime="20230915 05:00:54.778" endtime="20230915 05:00:54.778"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 05:00:54.780" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 05:00:54.778" endtime="20230915 05:00:54.780"/>
</kw>
<status status="PASS" starttime="20230915 05:00:54.750" endtime="20230915 05:00:54.780"/>
</kw>
<msg timestamp="20230915 05:00:54.780" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 05:00:54.750" endtime="20230915 05:00:54.780"/>
</kw>
<msg timestamp="20230915 05:00:54.781" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230915 05:00:54.749" endtime="20230915 05:00:54.781"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230915 05:00:54.781" endtime="20230915 05:00:54.781"/>
</kw>
<status status="NOT RUN" starttime="20230915 05:00:54.781" endtime="20230915 05:00:54.781"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 05:00:54.781" endtime="20230915 05:00:54.782"/>
</kw>
<status status="PASS" starttime="20230915 05:00:54.781" endtime="20230915 05:00:54.782"/>
</branch>
<status status="PASS" starttime="20230915 05:00:54.781" endtime="20230915 05:00:54.782"/>
</if>
<status status="PASS" starttime="20230915 05:00:54.749" endtime="20230915 05:00:54.782"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230915 05:00:54.669" endtime="20230915 05:00:54.782"/>
</test>
<test id="s1-s3-s1-t6" name="Check unhealthy, (admin) api access" line="120">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 05:00:54.787" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 05:00:54.790" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 05:00:54.790" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230915 05:00:54.785" endtime="20230915 05:00:54.790"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 05:00:54.791" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230915 05:00:54.790" endtime="20230915 05:00:54.791"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 05:00:54.792" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 05:00:54.791" endtime="20230915 05:00:54.792"/>
</kw>
<status status="PASS" starttime="20230915 05:00:54.784" endtime="20230915 05:00:54.792"/>
</kw>
<msg timestamp="20230915 05:00:54.792" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 05:00:54.784" endtime="20230915 05:00:54.792"/>
</kw>
<status status="PASS" starttime="20230915 05:00:54.783" endtime="20230915 05:00:54.792"/>
</kw>
<kw name="Check http return code">
<arg>${UNHEALTHY_ENDPOINT_URL}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 05:00:54.796" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers/unhealthy 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 05:00:54.832" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 05:00:54.832" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230915 05:00:54.794" endtime="20230915 05:00:54.832"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 05:00:54.833" level="INFO">200</msg>
<status status="PASS" starttime="20230915 05:00:54.833" endtime="20230915 05:00:54.833"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 05:00:54.834" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 05:00:54.834" endtime="20230915 05:00:54.834"/>
</kw>
<status status="PASS" starttime="20230915 05:00:54.794" endtime="20230915 05:00:54.834"/>
</kw>
<msg timestamp="20230915 05:00:54.835" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 05:00:54.794" endtime="20230915 05:00:54.835"/>
</kw>
<msg timestamp="20230915 05:00:54.835" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230915 05:00:54.793" endtime="20230915 05:00:54.835"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230915 05:00:54.836" endtime="20230915 05:00:54.836"/>
</kw>
<status status="NOT RUN" starttime="20230915 05:00:54.835" endtime="20230915 05:00:54.836"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 05:00:54.836" endtime="20230915 05:00:54.837"/>
</kw>
<status status="PASS" starttime="20230915 05:00:54.836" endtime="20230915 05:00:54.837"/>
</branch>
<status status="PASS" starttime="20230915 05:00:54.835" endtime="20230915 05:00:54.837"/>
</if>
<status status="PASS" starttime="20230915 05:00:54.793" endtime="20230915 05:00:54.837"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230915 05:00:54.837" endtime="20230915 05:00:54.838"/>
</kw>
<status status="PASS" starttime="20230915 05:00:54.837" endtime="20230915 05:00:54.838"/>
</kw>
<kw name="Check http return code">
<arg>${UNHEALTHY_ENDPOINT_URL}</arg>
<arg>403</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 05:00:54.842" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers/unhealthy 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 05:00:54.863" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 05:00:54.863" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230915 05:00:54.840" endtime="20230915 05:00:54.863"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 05:00:54.865" level="INFO">200</msg>
<status status="PASS" starttime="20230915 05:00:54.864" endtime="20230915 05:00:54.865"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 05:00:54.867" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 05:00:54.866" endtime="20230915 05:00:54.867"/>
</kw>
<status status="PASS" starttime="20230915 05:00:54.839" endtime="20230915 05:00:54.867"/>
</kw>
<msg timestamp="20230915 05:00:54.867" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 05:00:54.839" endtime="20230915 05:00:54.867"/>
</kw>
<msg timestamp="20230915 05:00:54.867" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230915 05:00:54.838" endtime="20230915 05:00:54.867"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230915 05:00:54.868" endtime="20230915 05:00:54.868"/>
</kw>
<status status="NOT RUN" starttime="20230915 05:00:54.868" endtime="20230915 05:00:54.868"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 05:00:54.868" endtime="20230915 05:00:54.868"/>
</kw>
<status status="PASS" starttime="20230915 05:00:54.868" endtime="20230915 05:00:54.869"/>
</branch>
<status status="PASS" starttime="20230915 05:00:54.868" endtime="20230915 05:00:54.869"/>
</if>
<status status="PASS" starttime="20230915 05:00:54.838" endtime="20230915 05:00:54.869"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230915 05:00:54.869" endtime="20230915 05:00:54.870"/>
</kw>
<status status="PASS" starttime="20230915 05:00:54.869" endtime="20230915 05:00:54.870"/>
</kw>
<kw name="Check http return code">
<arg>${UNHEALTHY_ENDPOINT_URL}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 05:00:54.874" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers/unhealthy 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 05:00:54.890" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 05:00:54.891" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230915 05:00:54.871" endtime="20230915 05:00:54.891"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 05:00:54.892" level="INFO">200</msg>
<status status="PASS" starttime="20230915 05:00:54.891" endtime="20230915 05:00:54.892"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 05:00:54.892" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 05:00:54.892" endtime="20230915 05:00:54.892"/>
</kw>
<status status="PASS" starttime="20230915 05:00:54.871" endtime="20230915 05:00:54.893"/>
</kw>
<msg timestamp="20230915 05:00:54.893" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 05:00:54.871" endtime="20230915 05:00:54.893"/>
</kw>
<msg timestamp="20230915 05:00:54.893" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230915 05:00:54.870" endtime="20230915 05:00:54.893"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230915 05:00:54.893" endtime="20230915 05:00:54.893"/>
</kw>
<status status="NOT RUN" starttime="20230915 05:00:54.893" endtime="20230915 05:00:54.893"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 05:00:54.894" endtime="20230915 05:00:54.894"/>
</kw>
<status status="PASS" starttime="20230915 05:00:54.894" endtime="20230915 05:00:54.894"/>
</branch>
<status status="PASS" starttime="20230915 05:00:54.893" endtime="20230915 05:00:54.894"/>
</if>
<status status="PASS" starttime="20230915 05:00:54.870" endtime="20230915 05:00:54.894"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230915 05:00:54.895" endtime="20230915 05:00:54.895"/>
</kw>
<status status="PASS" starttime="20230915 05:00:54.894" endtime="20230915 05:00:54.895"/>
</kw>
<kw name="Check http return code">
<arg>${UNHEALTHY_ENDPOINT_URL}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 05:00:54.900" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers/unhealthy 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 05:00:54.917" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 05:00:54.917" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230915 05:00:54.898" endtime="20230915 05:00:54.917"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 05:00:54.918" level="INFO">200</msg>
<status status="PASS" starttime="20230915 05:00:54.918" endtime="20230915 05:00:54.918"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 05:00:54.919" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 05:00:54.919" endtime="20230915 05:00:54.919"/>
</kw>
<status status="PASS" starttime="20230915 05:00:54.897" endtime="20230915 05:00:54.920"/>
</kw>
<msg timestamp="20230915 05:00:54.920" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 05:00:54.897" endtime="20230915 05:00:54.920"/>
</kw>
<msg timestamp="20230915 05:00:54.920" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230915 05:00:54.896" endtime="20230915 05:00:54.920"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230915 05:00:54.921" endtime="20230915 05:00:54.921"/>
</kw>
<status status="NOT RUN" starttime="20230915 05:00:54.920" endtime="20230915 05:00:54.921"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 05:00:54.921" endtime="20230915 05:00:54.921"/>
</kw>
<status status="PASS" starttime="20230915 05:00:54.921" endtime="20230915 05:00:54.921"/>
</branch>
<status status="PASS" starttime="20230915 05:00:54.920" endtime="20230915 05:00:54.921"/>
</if>
<status status="PASS" starttime="20230915 05:00:54.896" endtime="20230915 05:00:54.921"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230915 05:00:54.783" endtime="20230915 05:00:54.922"/>
</test>
<test id="s1-s3-s1-t7" name="Check normal api access" line="133">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 05:00:54.927" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 05:00:54.930" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 05:00:54.931" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230915 05:00:54.925" endtime="20230915 05:00:54.931"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 05:00:54.932" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230915 05:00:54.931" endtime="20230915 05:00:54.932"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 05:00:54.932" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 05:00:54.932" endtime="20230915 05:00:54.932"/>
</kw>
<status status="PASS" starttime="20230915 05:00:54.924" endtime="20230915 05:00:54.933"/>
</kw>
<msg timestamp="20230915 05:00:54.933" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 05:00:54.924" endtime="20230915 05:00:54.933"/>
</kw>
<status status="PASS" starttime="20230915 05:00:54.923" endtime="20230915 05:00:54.933"/>
</kw>
<kw name="Check http return code">
<arg>${NON_ADMIN_API_ENDPOINT_URL}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 05:00:54.937" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/clusterState 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 05:00:54.973" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 05:00:54.973" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230915 05:00:54.935" endtime="20230915 05:00:54.973"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 05:00:54.975" level="INFO">200</msg>
<status status="PASS" starttime="20230915 05:00:54.974" endtime="20230915 05:00:54.975"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 05:00:54.975" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 05:00:54.975" endtime="20230915 05:00:54.975"/>
</kw>
<status status="PASS" starttime="20230915 05:00:54.934" endtime="20230915 05:00:54.976"/>
</kw>
<msg timestamp="20230915 05:00:54.976" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 05:00:54.934" endtime="20230915 05:00:54.976"/>
</kw>
<msg timestamp="20230915 05:00:54.976" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230915 05:00:54.934" endtime="20230915 05:00:54.976"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230915 05:00:54.977" endtime="20230915 05:00:54.977"/>
</kw>
<status status="NOT RUN" starttime="20230915 05:00:54.976" endtime="20230915 05:00:54.977"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 05:00:54.977" endtime="20230915 05:00:54.977"/>
</kw>
<status status="PASS" starttime="20230915 05:00:54.977" endtime="20230915 05:00:54.977"/>
</branch>
<status status="PASS" starttime="20230915 05:00:54.976" endtime="20230915 05:00:54.977"/>
</if>
<status status="PASS" starttime="20230915 05:00:54.933" endtime="20230915 05:00:54.977"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230915 05:00:54.978" endtime="20230915 05:00:54.978"/>
</kw>
<status status="PASS" starttime="20230915 05:00:54.978" endtime="20230915 05:00:54.978"/>
</kw>
<kw name="Check http return code">
<arg>${NON_ADMIN_API_ENDPOINT_URL}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 05:00:54.983" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/clusterState 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 05:00:55.005" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 05:00:55.005" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230915 05:00:54.980" endtime="20230915 05:00:55.005"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 05:00:55.006" level="INFO">200</msg>
<status status="PASS" starttime="20230915 05:00:55.006" endtime="20230915 05:00:55.007"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 05:00:55.007" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 05:00:55.007" endtime="20230915 05:00:55.007"/>
</kw>
<status status="PASS" starttime="20230915 05:00:54.980" endtime="20230915 05:00:55.008"/>
</kw>
<msg timestamp="20230915 05:00:55.008" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 05:00:54.980" endtime="20230915 05:00:55.008"/>
</kw>
<msg timestamp="20230915 05:00:55.008" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230915 05:00:54.979" endtime="20230915 05:00:55.009"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230915 05:00:55.009" endtime="20230915 05:00:55.009"/>
</kw>
<status status="NOT RUN" starttime="20230915 05:00:55.009" endtime="20230915 05:00:55.009"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 05:00:55.009" endtime="20230915 05:00:55.010"/>
</kw>
<status status="PASS" starttime="20230915 05:00:55.009" endtime="20230915 05:00:55.010"/>
</branch>
<status status="PASS" starttime="20230915 05:00:55.009" endtime="20230915 05:00:55.010"/>
</if>
<status status="PASS" starttime="20230915 05:00:54.979" endtime="20230915 05:00:55.010"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230915 05:00:54.922" endtime="20230915 05:00:55.010"/>
</test>
<doc>Smoke test to start cluster with docker-compose environments.</doc>
<status status="PASS" starttime="20230915 05:00:06.297" endtime="20230915 05:00:55.011"/>
</suite>
<suite id="s1-s3-s2" name="Recon-Nssummary" source="/opt/hadoop/smoketest/recon/recon-nssummary.robot">
<test id="s1-s3-s2-t1" name="Check volume creation" line="99">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 05:00:55.025" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 05:00:55.029" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 05:00:55.029" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230915 05:00:55.023" endtime="20230915 05:00:55.029"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 05:00:55.030" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230915 05:00:55.029" endtime="20230915 05:00:55.030"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 05:00:55.031" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 05:00:55.030" endtime="20230915 05:00:55.031"/>
</kw>
<status status="PASS" starttime="20230915 05:00:55.022" endtime="20230915 05:00:55.031"/>
</kw>
<msg timestamp="20230915 05:00:55.031" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 05:00:55.022" endtime="20230915 05:00:55.031"/>
</kw>
<status status="PASS" starttime="20230915 05:00:55.021" endtime="20230915 05:00:55.031"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230915 05:00:55.032" endtime="20230915 05:00:55.032"/>
</kw>
<status status="PASS" starttime="20230915 05:00:55.031" endtime="20230915 05:00:55.032"/>
</kw>
<kw name="Create volume">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[LOWER]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230915 05:00:55.033" level="INFO">${random} = negqp</msg>
<status status="PASS" starttime="20230915 05:00:55.033" endtime="20230915 05:00:55.033"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${VOLUME}</arg>
<arg>vol-${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230915 05:00:55.034" level="INFO">${VOLUME} = vol-negqp</msg>
<status status="PASS" starttime="20230915 05:00:55.034" endtime="20230915 05:00:55.034"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create /${VOLUME}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 05:00:55.037" level="INFO">Running command 'ozone sh volume create /vol-negqp 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 05:00:59.216" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 05:00:59.216" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230915 05:00:55.035" endtime="20230915 05:00:59.216"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 05:00:59.218" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230915 05:00:59.217" endtime="20230915 05:00:59.218"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 05:00:59.218" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 05:00:59.218" endtime="20230915 05:00:59.218"/>
</kw>
<status status="PASS" starttime="20230915 05:00:55.035" endtime="20230915 05:00:59.219"/>
</kw>
<msg timestamp="20230915 05:00:59.219" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 05:00:55.035" endtime="20230915 05:00:59.219"/>
</kw>
<msg timestamp="20230915 05:00:59.219" level="INFO">${result} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230915 05:00:55.034" endtime="20230915 05:00:59.219"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 05:00:59.219" endtime="20230915 05:00:59.220"/>
</kw>
<status status="PASS" starttime="20230915 05:00:55.032" endtime="20230915 05:00:59.220"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230915 05:00:55.021" endtime="20230915 05:00:59.220"/>
</test>
<test id="s1-s3-s2-t2" name="Check bucket creation" line="104">
<kw name="Create bucket">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[LOWER]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230915 05:00:59.222" level="INFO">${random} = zbjqp</msg>
<status status="PASS" starttime="20230915 05:00:59.222" endtime="20230915 05:00:59.223"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${BUCKET}</arg>
<arg>buc-${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230915 05:00:59.223" level="INFO">${BUCKET} = buc-zbjqp</msg>
<status status="PASS" starttime="20230915 05:00:59.223" endtime="20230915 05:00:59.223"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket create -l ${BUCKET_LAYOUT} /${VOLUME}/${BUCKET}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 05:00:59.227" level="INFO">Running command 'ozone sh bucket create -l FILE_SYSTEM_OPTIMIZED /vol-negqp/buc-zbjqp 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 05:01:03.396" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 05:01:03.396" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230915 05:00:59.224" endtime="20230915 05:01:03.396"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 05:01:03.398" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230915 05:01:03.397" endtime="20230915 05:01:03.398"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 05:01:03.398" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 05:01:03.398" endtime="20230915 05:01:03.399"/>
</kw>
<status status="PASS" starttime="20230915 05:00:59.224" endtime="20230915 05:01:03.399"/>
</kw>
<msg timestamp="20230915 05:01:03.399" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 05:00:59.224" endtime="20230915 05:01:03.399"/>
</kw>
<msg timestamp="20230915 05:01:03.399" level="INFO">${result} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230915 05:00:59.223" endtime="20230915 05:01:03.399"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 05:01:03.399" endtime="20230915 05:01:03.400"/>
</kw>
<status status="PASS" starttime="20230915 05:00:59.222" endtime="20230915 05:01:03.400"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230915 05:00:59.221" endtime="20230915 05:01:03.400"/>
</test>
<test id="s1-s3-s2-t3" name="Check keys creation" line="107">
<kw name="Create keys">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key put /${VOLUME}/${BUCKET}/file1 README.md</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 05:01:03.407" level="INFO">Running command 'ozone sh key put /vol-negqp/buc-zbjqp/file1 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 05:01:09.493" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 05:01:09.493" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230915 05:01:03.403" endtime="20230915 05:01:09.493"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 05:01:09.494" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230915 05:01:09.493" endtime="20230915 05:01:09.494"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 05:01:09.495" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 05:01:09.494" endtime="20230915 05:01:09.495"/>
</kw>
<status status="PASS" starttime="20230915 05:01:03.403" endtime="20230915 05:01:09.495"/>
</kw>
<msg timestamp="20230915 05:01:09.495" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 05:01:03.402" endtime="20230915 05:01:09.495"/>
</kw>
<msg timestamp="20230915 05:01:09.495" level="INFO">${result} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230915 05:01:03.402" endtime="20230915 05:01:09.495"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 05:01:09.495" endtime="20230915 05:01:09.496"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key put /${VOLUME}/${BUCKET}/dir1/dir2/file2 HISTORY.md</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 05:01:09.499" level="INFO">Running command 'ozone sh key put /vol-negqp/buc-zbjqp/dir1/dir2/file2 HISTORY.md 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 05:01:16.523" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 05:01:16.523" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230915 05:01:09.497" endtime="20230915 05:01:16.523"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 05:01:16.524" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230915 05:01:16.524" endtime="20230915 05:01:16.524"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 05:01:16.525" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 05:01:16.525" endtime="20230915 05:01:16.525"/>
</kw>
<status status="PASS" starttime="20230915 05:01:09.497" endtime="20230915 05:01:16.525"/>
</kw>
<msg timestamp="20230915 05:01:16.526" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 05:01:09.496" endtime="20230915 05:01:16.526"/>
</kw>
<msg timestamp="20230915 05:01:16.526" level="INFO">${result} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230915 05:01:09.496" endtime="20230915 05:01:16.526"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 05:01:16.526" endtime="20230915 05:01:16.526"/>
</kw>
<status status="PASS" starttime="20230915 05:01:03.402" endtime="20230915 05:01:16.526"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230915 05:01:03.401" endtime="20230915 05:01:16.527"/>
</test>
<test id="s1-s3-s2-t4" name="Check Summary api access" line="110">
<kw name="Check Access">
<arg>${SUMMARY_URL}?path=/</arg>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 05:01:16.533" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 05:01:16.536" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 05:01:16.536" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230915 05:01:16.530" endtime="20230915 05:01:16.536"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 05:01:16.537" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230915 05:01:16.536" endtime="20230915 05:01:16.537"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 05:01:16.538" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 05:01:16.537" endtime="20230915 05:01:16.538"/>
</kw>
<status status="PASS" starttime="20230915 05:01:16.530" endtime="20230915 05:01:16.538"/>
</kw>
<msg timestamp="20230915 05:01:16.538" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 05:01:16.530" endtime="20230915 05:01:16.538"/>
</kw>
<status status="PASS" starttime="20230915 05:01:16.529" endtime="20230915 05:01:16.538"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 05:01:16.542" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 05:01:16.597" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 05:01:16.597" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230915 05:01:16.540" endtime="20230915 05:01:16.597"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 05:01:16.598" level="INFO">200</msg>
<status status="PASS" starttime="20230915 05:01:16.598" endtime="20230915 05:01:16.598"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 05:01:16.599" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 05:01:16.599" endtime="20230915 05:01:16.599"/>
</kw>
<status status="PASS" starttime="20230915 05:01:16.539" endtime="20230915 05:01:16.599"/>
</kw>
<msg timestamp="20230915 05:01:16.599" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 05:01:16.539" endtime="20230915 05:01:16.599"/>
</kw>
<msg timestamp="20230915 05:01:16.599" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230915 05:01:16.539" endtime="20230915 05:01:16.600"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230915 05:01:16.600" endtime="20230915 05:01:16.600"/>
</kw>
<status status="NOT RUN" starttime="20230915 05:01:16.600" endtime="20230915 05:01:16.600"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 05:01:16.600" endtime="20230915 05:01:16.601"/>
</kw>
<status status="PASS" starttime="20230915 05:01:16.600" endtime="20230915 05:01:16.601"/>
</branch>
<status status="PASS" starttime="20230915 05:01:16.600" endtime="20230915 05:01:16.601"/>
</if>
<status status="PASS" starttime="20230915 05:01:16.538" endtime="20230915 05:01:16.601"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230915 05:01:16.602" endtime="20230915 05:01:16.602"/>
</kw>
<status status="PASS" starttime="20230915 05:01:16.601" endtime="20230915 05:01:16.602"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>403</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 05:01:16.618" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 05:01:16.632" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 05:01:16.632" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230915 05:01:16.616" endtime="20230915 05:01:16.632"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 05:01:16.633" level="INFO">200</msg>
<status status="PASS" starttime="20230915 05:01:16.633" endtime="20230915 05:01:16.633"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 05:01:16.634" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 05:01:16.634" endtime="20230915 05:01:16.634"/>
</kw>
<status status="PASS" starttime="20230915 05:01:16.615" endtime="20230915 05:01:16.634"/>
</kw>
<msg timestamp="20230915 05:01:16.634" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 05:01:16.615" endtime="20230915 05:01:16.634"/>
</kw>
<msg timestamp="20230915 05:01:16.635" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230915 05:01:16.603" endtime="20230915 05:01:16.635"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230915 05:01:16.635" endtime="20230915 05:01:16.635"/>
</kw>
<status status="NOT RUN" starttime="20230915 05:01:16.635" endtime="20230915 05:01:16.635"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 05:01:16.635" endtime="20230915 05:01:16.636"/>
</kw>
<status status="PASS" starttime="20230915 05:01:16.635" endtime="20230915 05:01:16.636"/>
</branch>
<status status="PASS" starttime="20230915 05:01:16.635" endtime="20230915 05:01:16.636"/>
</if>
<status status="PASS" starttime="20230915 05:01:16.602" endtime="20230915 05:01:16.636"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230915 05:01:16.637" endtime="20230915 05:01:16.637"/>
</kw>
<status status="PASS" starttime="20230915 05:01:16.636" endtime="20230915 05:01:16.637"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 05:01:16.641" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 05:01:16.655" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 05:01:16.655" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230915 05:01:16.639" endtime="20230915 05:01:16.655"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 05:01:16.656" level="INFO">200</msg>
<status status="PASS" starttime="20230915 05:01:16.655" endtime="20230915 05:01:16.656"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 05:01:16.657" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 05:01:16.656" endtime="20230915 05:01:16.657"/>
</kw>
<status status="PASS" starttime="20230915 05:01:16.638" endtime="20230915 05:01:16.657"/>
</kw>
<msg timestamp="20230915 05:01:16.657" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 05:01:16.638" endtime="20230915 05:01:16.657"/>
</kw>
<msg timestamp="20230915 05:01:16.657" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230915 05:01:16.637" endtime="20230915 05:01:16.657"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230915 05:01:16.658" endtime="20230915 05:01:16.658"/>
</kw>
<status status="NOT RUN" starttime="20230915 05:01:16.658" endtime="20230915 05:01:16.658"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 05:01:16.658" endtime="20230915 05:01:16.659"/>
</kw>
<status status="PASS" starttime="20230915 05:01:16.658" endtime="20230915 05:01:16.659"/>
</branch>
<status status="PASS" starttime="20230915 05:01:16.657" endtime="20230915 05:01:16.659"/>
</if>
<status status="PASS" starttime="20230915 05:01:16.637" endtime="20230915 05:01:16.659"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230915 05:01:16.659" endtime="20230915 05:01:16.660"/>
</kw>
<status status="PASS" starttime="20230915 05:01:16.659" endtime="20230915 05:01:16.660"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 05:01:16.664" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 05:01:16.678" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 05:01:16.678" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230915 05:01:16.662" endtime="20230915 05:01:16.678"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 05:01:16.679" level="INFO">200</msg>
<status status="PASS" starttime="20230915 05:01:16.679" endtime="20230915 05:01:16.679"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 05:01:16.680" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 05:01:16.680" endtime="20230915 05:01:16.680"/>
</kw>
<status status="PASS" starttime="20230915 05:01:16.661" endtime="20230915 05:01:16.680"/>
</kw>
<msg timestamp="20230915 05:01:16.680" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 05:01:16.661" endtime="20230915 05:01:16.681"/>
</kw>
<msg timestamp="20230915 05:01:16.681" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230915 05:01:16.660" endtime="20230915 05:01:16.681"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230915 05:01:16.681" endtime="20230915 05:01:16.681"/>
</kw>
<status status="NOT RUN" starttime="20230915 05:01:16.681" endtime="20230915 05:01:16.681"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 05:01:16.682" endtime="20230915 05:01:16.682"/>
</kw>
<status status="PASS" starttime="20230915 05:01:16.681" endtime="20230915 05:01:16.682"/>
</branch>
<status status="PASS" starttime="20230915 05:01:16.681" endtime="20230915 05:01:16.682"/>
</if>
<status status="PASS" starttime="20230915 05:01:16.660" endtime="20230915 05:01:16.682"/>
</kw>
<status status="PASS" starttime="20230915 05:01:16.529" endtime="20230915 05:01:16.682"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230915 05:01:16.528" endtime="20230915 05:01:16.682"/>
</test>
<test id="s1-s3-s2-t5" name="Check Disk Usage api access" line="113">
<kw name="Check Access">
<arg>${DISK_USAGE_URL}?path=/</arg>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 05:01:16.688" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 05:01:16.691" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 05:01:16.691" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230915 05:01:16.686" endtime="20230915 05:01:16.691"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 05:01:16.692" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230915 05:01:16.691" endtime="20230915 05:01:16.692"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 05:01:16.692" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 05:01:16.692" endtime="20230915 05:01:16.692"/>
</kw>
<status status="PASS" starttime="20230915 05:01:16.685" endtime="20230915 05:01:16.693"/>
</kw>
<msg timestamp="20230915 05:01:16.693" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 05:01:16.685" endtime="20230915 05:01:16.693"/>
</kw>
<status status="PASS" starttime="20230915 05:01:16.685" endtime="20230915 05:01:16.693"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 05:01:16.696" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/du?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 05:01:16.714" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 05:01:16.715" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230915 05:01:16.695" endtime="20230915 05:01:16.715"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 05:01:16.716" level="INFO">200</msg>
<status status="PASS" starttime="20230915 05:01:16.715" endtime="20230915 05:01:16.716"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 05:01:16.716" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 05:01:16.716" endtime="20230915 05:01:16.716"/>
</kw>
<status status="PASS" starttime="20230915 05:01:16.694" endtime="20230915 05:01:16.716"/>
</kw>
<msg timestamp="20230915 05:01:16.717" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 05:01:16.694" endtime="20230915 05:01:16.717"/>
</kw>
<msg timestamp="20230915 05:01:16.717" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230915 05:01:16.694" endtime="20230915 05:01:16.717"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230915 05:01:16.718" endtime="20230915 05:01:16.718"/>
</kw>
<status status="NOT RUN" starttime="20230915 05:01:16.717" endtime="20230915 05:01:16.718"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 05:01:16.718" endtime="20230915 05:01:16.718"/>
</kw>
<status status="PASS" starttime="20230915 05:01:16.718" endtime="20230915 05:01:16.718"/>
</branch>
<status status="PASS" starttime="20230915 05:01:16.717" endtime="20230915 05:01:16.718"/>
</if>
<status status="PASS" starttime="20230915 05:01:16.693" endtime="20230915 05:01:16.718"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230915 05:01:16.719" endtime="20230915 05:01:16.719"/>
</kw>
<status status="PASS" starttime="20230915 05:01:16.718" endtime="20230915 05:01:16.719"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>403</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 05:01:16.724" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/du?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 05:01:16.737" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 05:01:16.737" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230915 05:01:16.721" endtime="20230915 05:01:16.737"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 05:01:16.738" level="INFO">200</msg>
<status status="PASS" starttime="20230915 05:01:16.738" endtime="20230915 05:01:16.738"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 05:01:16.739" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 05:01:16.738" endtime="20230915 05:01:16.739"/>
</kw>
<status status="PASS" starttime="20230915 05:01:16.721" endtime="20230915 05:01:16.739"/>
</kw>
<msg timestamp="20230915 05:01:16.739" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 05:01:16.720" endtime="20230915 05:01:16.739"/>
</kw>
<msg timestamp="20230915 05:01:16.739" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230915 05:01:16.720" endtime="20230915 05:01:16.739"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230915 05:01:16.740" endtime="20230915 05:01:16.740"/>
</kw>
<status status="NOT RUN" starttime="20230915 05:01:16.740" endtime="20230915 05:01:16.740"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 05:01:16.740" endtime="20230915 05:01:16.740"/>
</kw>
<status status="PASS" starttime="20230915 05:01:16.740" endtime="20230915 05:01:16.741"/>
</branch>
<status status="PASS" starttime="20230915 05:01:16.740" endtime="20230915 05:01:16.741"/>
</if>
<status status="PASS" starttime="20230915 05:01:16.719" endtime="20230915 05:01:16.741"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230915 05:01:16.741" endtime="20230915 05:01:16.741"/>
</kw>
<status status="PASS" starttime="20230915 05:01:16.741" endtime="20230915 05:01:16.742"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 05:01:16.745" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/du?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 05:01:16.759" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 05:01:16.760" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230915 05:01:16.743" endtime="20230915 05:01:16.760"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 05:01:16.761" level="INFO">200</msg>
<status status="PASS" starttime="20230915 05:01:16.760" endtime="20230915 05:01:16.761"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 05:01:16.762" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 05:01:16.761" endtime="20230915 05:01:16.762"/>
</kw>
<status status="PASS" starttime="20230915 05:01:16.743" endtime="20230915 05:01:16.762"/>
</kw>
<msg timestamp="20230915 05:01:16.762" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 05:01:16.742" endtime="20230915 05:01:16.762"/>
</kw>
<msg timestamp="20230915 05:01:16.762" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230915 05:01:16.742" endtime="20230915 05:01:16.762"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230915 05:01:16.763" endtime="20230915 05:01:16.763"/>
</kw>
<status status="NOT RUN" starttime="20230915 05:01:16.763" endtime="20230915 05:01:16.763"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 05:01:16.763" endtime="20230915 05:01:16.764"/>
</kw>
<status status="PASS" starttime="20230915 05:01:16.763" endtime="20230915 05:01:16.764"/>
</branch>
<status status="PASS" starttime="20230915 05:01:16.763" endtime="20230915 05:01:16.764"/>
</if>
<status status="PASS" starttime="20230915 05:01:16.742" endtime="20230915 05:01:16.764"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230915 05:01:16.764" endtime="20230915 05:01:16.765"/>
</kw>
<status status="PASS" starttime="20230915 05:01:16.764" endtime="20230915 05:01:16.765"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 05:01:16.769" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/du?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 05:01:16.783" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 05:01:16.783" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230915 05:01:16.767" endtime="20230915 05:01:16.783"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 05:01:16.784" level="INFO">200</msg>
<status status="PASS" starttime="20230915 05:01:16.784" endtime="20230915 05:01:16.784"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 05:01:16.785" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 05:01:16.785" endtime="20230915 05:01:16.785"/>
</kw>
<status status="PASS" starttime="20230915 05:01:16.766" endtime="20230915 05:01:16.786"/>
</kw>
<msg timestamp="20230915 05:01:16.786" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 05:01:16.766" endtime="20230915 05:01:16.786"/>
</kw>
<msg timestamp="20230915 05:01:16.786" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230915 05:01:16.765" endtime="20230915 05:01:16.786"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230915 05:01:16.786" endtime="20230915 05:01:16.786"/>
</kw>
<status status="NOT RUN" starttime="20230915 05:01:16.786" endtime="20230915 05:01:16.786"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 05:01:16.787" endtime="20230915 05:01:16.787"/>
</kw>
<status status="PASS" starttime="20230915 05:01:16.787" endtime="20230915 05:01:16.787"/>
</branch>
<status status="PASS" starttime="20230915 05:01:16.786" endtime="20230915 05:01:16.787"/>
</if>
<status status="PASS" starttime="20230915 05:01:16.765" endtime="20230915 05:01:16.787"/>
</kw>
<status status="PASS" starttime="20230915 05:01:16.684" endtime="20230915 05:01:16.787"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230915 05:01:16.683" endtime="20230915 05:01:16.788"/>
</test>
<test id="s1-s3-s2-t6" name="Check Quota Usage api access" line="116">
<kw name="Check Access">
<arg>${QUOTA_USAGE_URL}?path=/</arg>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 05:01:16.793" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 05:01:16.796" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 05:01:16.796" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230915 05:01:16.791" endtime="20230915 05:01:16.796"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 05:01:16.797" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230915 05:01:16.796" endtime="20230915 05:01:16.797"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 05:01:16.797" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 05:01:16.797" endtime="20230915 05:01:16.798"/>
</kw>
<status status="PASS" starttime="20230915 05:01:16.790" endtime="20230915 05:01:16.798"/>
</kw>
<msg timestamp="20230915 05:01:16.798" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 05:01:16.790" endtime="20230915 05:01:16.798"/>
</kw>
<status status="PASS" starttime="20230915 05:01:16.790" endtime="20230915 05:01:16.798"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 05:01:16.802" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/quota?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 05:01:16.828" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 05:01:16.828" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230915 05:01:16.800" endtime="20230915 05:01:16.828"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 05:01:16.829" level="INFO">200</msg>
<status status="PASS" starttime="20230915 05:01:16.828" endtime="20230915 05:01:16.829"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 05:01:16.830" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 05:01:16.829" endtime="20230915 05:01:16.830"/>
</kw>
<status status="PASS" starttime="20230915 05:01:16.799" endtime="20230915 05:01:16.830"/>
</kw>
<msg timestamp="20230915 05:01:16.830" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 05:01:16.799" endtime="20230915 05:01:16.830"/>
</kw>
<msg timestamp="20230915 05:01:16.830" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230915 05:01:16.799" endtime="20230915 05:01:16.830"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230915 05:01:16.831" endtime="20230915 05:01:16.831"/>
</kw>
<status status="NOT RUN" starttime="20230915 05:01:16.830" endtime="20230915 05:01:16.831"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 05:01:16.831" endtime="20230915 05:01:16.831"/>
</kw>
<status status="PASS" starttime="20230915 05:01:16.831" endtime="20230915 05:01:16.831"/>
</branch>
<status status="PASS" starttime="20230915 05:01:16.830" endtime="20230915 05:01:16.831"/>
</if>
<status status="PASS" starttime="20230915 05:01:16.798" endtime="20230915 05:01:16.831"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230915 05:01:16.832" endtime="20230915 05:01:16.832"/>
</kw>
<status status="PASS" starttime="20230915 05:01:16.832" endtime="20230915 05:01:16.832"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>403</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 05:01:16.844" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/quota?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 05:01:16.862" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 05:01:16.862" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230915 05:01:16.841" endtime="20230915 05:01:16.862"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 05:01:16.863" level="INFO">200</msg>
<status status="PASS" starttime="20230915 05:01:16.862" endtime="20230915 05:01:16.863"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 05:01:16.864" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 05:01:16.863" endtime="20230915 05:01:16.864"/>
</kw>
<status status="PASS" starttime="20230915 05:01:16.841" endtime="20230915 05:01:16.864"/>
</kw>
<msg timestamp="20230915 05:01:16.864" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 05:01:16.840" endtime="20230915 05:01:16.864"/>
</kw>
<msg timestamp="20230915 05:01:16.864" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230915 05:01:16.840" endtime="20230915 05:01:16.864"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230915 05:01:16.865" endtime="20230915 05:01:16.865"/>
</kw>
<status status="NOT RUN" starttime="20230915 05:01:16.865" endtime="20230915 05:01:16.865"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 05:01:16.865" endtime="20230915 05:01:16.866"/>
</kw>
<status status="PASS" starttime="20230915 05:01:16.865" endtime="20230915 05:01:16.866"/>
</branch>
<status status="PASS" starttime="20230915 05:01:16.865" endtime="20230915 05:01:16.866"/>
</if>
<status status="PASS" starttime="20230915 05:01:16.839" endtime="20230915 05:01:16.866"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230915 05:01:16.866" endtime="20230915 05:01:16.867"/>
</kw>
<status status="PASS" starttime="20230915 05:01:16.866" endtime="20230915 05:01:16.867"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 05:01:16.871" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/quota?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 05:01:16.891" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 05:01:16.891" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230915 05:01:16.869" endtime="20230915 05:01:16.891"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 05:01:16.892" level="INFO">200</msg>
<status status="PASS" starttime="20230915 05:01:16.892" endtime="20230915 05:01:16.892"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 05:01:16.893" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 05:01:16.892" endtime="20230915 05:01:16.893"/>
</kw>
<status status="PASS" starttime="20230915 05:01:16.869" endtime="20230915 05:01:16.893"/>
</kw>
<msg timestamp="20230915 05:01:16.893" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 05:01:16.868" endtime="20230915 05:01:16.893"/>
</kw>
<msg timestamp="20230915 05:01:16.893" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230915 05:01:16.868" endtime="20230915 05:01:16.893"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230915 05:01:16.894" endtime="20230915 05:01:16.894"/>
</kw>
<status status="NOT RUN" starttime="20230915 05:01:16.894" endtime="20230915 05:01:16.894"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 05:01:16.894" endtime="20230915 05:01:16.895"/>
</kw>
<status status="PASS" starttime="20230915 05:01:16.894" endtime="20230915 05:01:16.895"/>
</branch>
<status status="PASS" starttime="20230915 05:01:16.894" endtime="20230915 05:01:16.895"/>
</if>
<status status="PASS" starttime="20230915 05:01:16.867" endtime="20230915 05:01:16.895"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230915 05:01:16.896" endtime="20230915 05:01:16.896"/>
</kw>
<status status="PASS" starttime="20230915 05:01:16.895" endtime="20230915 05:01:16.896"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 05:01:16.902" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/quota?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 05:01:16.918" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 05:01:16.918" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230915 05:01:16.900" endtime="20230915 05:01:16.918"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 05:01:16.920" level="INFO">200</msg>
<status status="PASS" starttime="20230915 05:01:16.919" endtime="20230915 05:01:16.920"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 05:01:16.920" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 05:01:16.920" endtime="20230915 05:01:16.920"/>
</kw>
<status status="PASS" starttime="20230915 05:01:16.899" endtime="20230915 05:01:16.920"/>
</kw>
<msg timestamp="20230915 05:01:16.920" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 05:01:16.897" endtime="20230915 05:01:16.921"/>
</kw>
<msg timestamp="20230915 05:01:16.921" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230915 05:01:16.897" endtime="20230915 05:01:16.921"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230915 05:01:16.921" endtime="20230915 05:01:16.921"/>
</kw>
<status status="NOT RUN" starttime="20230915 05:01:16.921" endtime="20230915 05:01:16.921"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 05:01:16.922" endtime="20230915 05:01:16.922"/>
</kw>
<status status="PASS" starttime="20230915 05:01:16.921" endtime="20230915 05:01:16.922"/>
</branch>
<status status="PASS" starttime="20230915 05:01:16.921" endtime="20230915 05:01:16.922"/>
</if>
<status status="PASS" starttime="20230915 05:01:16.896" endtime="20230915 05:01:16.922"/>
</kw>
<status status="PASS" starttime="20230915 05:01:16.789" endtime="20230915 05:01:16.922"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230915 05:01:16.789" endtime="20230915 05:01:16.922"/>
</test>
<test id="s1-s3-s2-t7" name="Check File Size Distribution api access" line="119">
<kw name="Check Access">
<arg>${FILE_SIZE_DIST_URL}?path=/</arg>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 05:01:16.929" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 05:01:16.933" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 05:01:16.933" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230915 05:01:16.927" endtime="20230915 05:01:16.933"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 05:01:16.934" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230915 05:01:16.933" endtime="20230915 05:01:16.934"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 05:01:16.935" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 05:01:16.934" endtime="20230915 05:01:16.935"/>
</kw>
<status status="PASS" starttime="20230915 05:01:16.926" endtime="20230915 05:01:16.935"/>
</kw>
<msg timestamp="20230915 05:01:16.935" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 05:01:16.926" endtime="20230915 05:01:16.935"/>
</kw>
<status status="PASS" starttime="20230915 05:01:16.926" endtime="20230915 05:01:16.935"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 05:01:16.939" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/dist?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 05:01:16.964" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 05:01:16.964" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230915 05:01:16.937" endtime="20230915 05:01:16.964"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 05:01:16.966" level="INFO">200</msg>
<status status="PASS" starttime="20230915 05:01:16.965" endtime="20230915 05:01:16.966"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 05:01:16.966" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 05:01:16.966" endtime="20230915 05:01:16.966"/>
</kw>
<status status="PASS" starttime="20230915 05:01:16.937" endtime="20230915 05:01:16.966"/>
</kw>
<msg timestamp="20230915 05:01:16.966" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 05:01:16.937" endtime="20230915 05:01:16.967"/>
</kw>
<msg timestamp="20230915 05:01:16.967" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230915 05:01:16.936" endtime="20230915 05:01:16.967"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230915 05:01:16.967" endtime="20230915 05:01:16.967"/>
</kw>
<status status="NOT RUN" starttime="20230915 05:01:16.967" endtime="20230915 05:01:16.967"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 05:01:16.968" endtime="20230915 05:01:16.968"/>
</kw>
<status status="PASS" starttime="20230915 05:01:16.968" endtime="20230915 05:01:16.968"/>
</branch>
<status status="PASS" starttime="20230915 05:01:16.967" endtime="20230915 05:01:16.968"/>
</if>
<status status="PASS" starttime="20230915 05:01:16.936" endtime="20230915 05:01:16.968"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230915 05:01:16.969" endtime="20230915 05:01:16.969"/>
</kw>
<status status="PASS" starttime="20230915 05:01:16.969" endtime="20230915 05:01:16.969"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>403</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 05:01:16.973" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/dist?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 05:01:16.992" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 05:01:16.992" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230915 05:01:16.971" endtime="20230915 05:01:16.992"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 05:01:16.993" level="INFO">200</msg>
<status status="PASS" starttime="20230915 05:01:16.992" endtime="20230915 05:01:16.993"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 05:01:16.993" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 05:01:16.993" endtime="20230915 05:01:16.994"/>
</kw>
<status status="PASS" starttime="20230915 05:01:16.971" endtime="20230915 05:01:16.994"/>
</kw>
<msg timestamp="20230915 05:01:16.994" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 05:01:16.970" endtime="20230915 05:01:16.994"/>
</kw>
<msg timestamp="20230915 05:01:16.994" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230915 05:01:16.970" endtime="20230915 05:01:16.994"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230915 05:01:16.995" endtime="20230915 05:01:16.995"/>
</kw>
<status status="NOT RUN" starttime="20230915 05:01:16.994" endtime="20230915 05:01:16.995"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 05:01:16.995" endtime="20230915 05:01:16.995"/>
</kw>
<status status="PASS" starttime="20230915 05:01:16.995" endtime="20230915 05:01:16.995"/>
</branch>
<status status="PASS" starttime="20230915 05:01:16.994" endtime="20230915 05:01:16.995"/>
</if>
<status status="PASS" starttime="20230915 05:01:16.969" endtime="20230915 05:01:16.996"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230915 05:01:16.996" endtime="20230915 05:01:16.996"/>
</kw>
<status status="PASS" starttime="20230915 05:01:16.996" endtime="20230915 05:01:16.997"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 05:01:17.001" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/dist?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 05:01:17.017" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 05:01:17.017" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230915 05:01:16.999" endtime="20230915 05:01:17.017"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 05:01:17.018" level="INFO">200</msg>
<status status="PASS" starttime="20230915 05:01:17.017" endtime="20230915 05:01:17.018"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 05:01:17.019" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 05:01:17.018" endtime="20230915 05:01:17.019"/>
</kw>
<status status="PASS" starttime="20230915 05:01:16.998" endtime="20230915 05:01:17.019"/>
</kw>
<msg timestamp="20230915 05:01:17.019" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 05:01:16.998" endtime="20230915 05:01:17.019"/>
</kw>
<msg timestamp="20230915 05:01:17.020" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230915 05:01:16.997" endtime="20230915 05:01:17.020"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230915 05:01:17.020" endtime="20230915 05:01:17.020"/>
</kw>
<status status="NOT RUN" starttime="20230915 05:01:17.020" endtime="20230915 05:01:17.020"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 05:01:17.020" endtime="20230915 05:01:17.021"/>
</kw>
<status status="PASS" starttime="20230915 05:01:17.020" endtime="20230915 05:01:17.021"/>
</branch>
<status status="PASS" starttime="20230915 05:01:17.020" endtime="20230915 05:01:17.021"/>
</if>
<status status="PASS" starttime="20230915 05:01:16.997" endtime="20230915 05:01:17.021"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230915 05:01:17.022" endtime="20230915 05:01:17.022"/>
</kw>
<status status="PASS" starttime="20230915 05:01:17.021" endtime="20230915 05:01:17.022"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 05:01:17.026" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/dist?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 05:01:17.043" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 05:01:17.043" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230915 05:01:17.024" endtime="20230915 05:01:17.043"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 05:01:17.045" level="INFO">200</msg>
<status status="PASS" starttime="20230915 05:01:17.043" endtime="20230915 05:01:17.045"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 05:01:17.045" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 05:01:17.045" endtime="20230915 05:01:17.046"/>
</kw>
<status status="PASS" starttime="20230915 05:01:17.023" endtime="20230915 05:01:17.046"/>
</kw>
<msg timestamp="20230915 05:01:17.046" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 05:01:17.023" endtime="20230915 05:01:17.046"/>
</kw>
<msg timestamp="20230915 05:01:17.046" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230915 05:01:17.023" endtime="20230915 05:01:17.046"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230915 05:01:17.047" endtime="20230915 05:01:17.047"/>
</kw>
<status status="NOT RUN" starttime="20230915 05:01:17.046" endtime="20230915 05:01:17.047"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 05:01:17.047" endtime="20230915 05:01:17.047"/>
</kw>
<status status="PASS" starttime="20230915 05:01:17.047" endtime="20230915 05:01:17.047"/>
</branch>
<status status="PASS" starttime="20230915 05:01:17.046" endtime="20230915 05:01:17.047"/>
</if>
<status status="PASS" starttime="20230915 05:01:17.022" endtime="20230915 05:01:17.047"/>
</kw>
<status status="PASS" starttime="20230915 05:01:16.925" endtime="20230915 05:01:17.048"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230915 05:01:16.924" endtime="20230915 05:01:17.048"/>
</test>
<test id="s1-s3-s2-t8" name="Check Recon Namespace Summary Root" line="122">
<kw name="Wait For Summary">
<arg>${SUMMARY_URL}?path=/</arg>
<arg>ROOT</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 05:01:17.054" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 05:01:17.070" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 05:01:17.070" level="INFO">${output} = {"path":"","type":"ROOT","countStats":{"numVolume":3,"numBucket":2,"numDir":1,"numKey":1},"objectInfo":{"metadata":null,"name":null,"quotaInBytes":0,"quotaInNamespace":0,"usedNamespace":0,"creationTim...</msg>
<status status="PASS" starttime="20230915 05:01:17.052" endtime="20230915 05:01:17.070"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 05:01:17.071" level="INFO">{"path":"","type":"ROOT","countStats":{"numVolume":3,"numBucket":2,"numDir":1,"numKey":1},"objectInfo":{"metadata":null,"name":null,"quotaInBytes":0,"quotaInNamespace":0,"usedNamespace":0,"creationTime":0,"modificationTime":0,"acls":null},"status":"OK"}</msg>
<status status="PASS" starttime="20230915 05:01:17.070" endtime="20230915 05:01:17.071"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 05:01:17.072" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 05:01:17.071" endtime="20230915 05:01:17.072"/>
</kw>
<status status="PASS" starttime="20230915 05:01:17.051" endtime="20230915 05:01:17.072"/>
</kw>
<msg timestamp="20230915 05:01:17.072" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 05:01:17.051" endtime="20230915 05:01:17.072"/>
</kw>
<msg timestamp="20230915 05:01:17.073" level="INFO">${result} = {"path":"","type":"ROOT","countStats":{"numVolume":3,"numBucket":2,"numDir":1,"numKey":1},"objectInfo":{"metadata":null,"name":null,"quotaInBytes":0,"quotaInNamespace":0,"usedNamespace":0,"creationTim...</msg>
<status status="PASS" starttime="20230915 05:01:17.051" endtime="20230915 05:01:17.074"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 05:01:17.074" endtime="20230915 05:01:17.074"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 05:01:17.074" endtime="20230915 05:01:17.075"/>
</kw>
<status status="PASS" starttime="20230915 05:01:17.050" endtime="20230915 05:01:17.075"/>
</kw>
<status status="PASS" starttime="20230915 05:01:17.050" endtime="20230915 05:01:17.076"/>
</kw>
<status status="PASS" starttime="20230915 05:01:17.049" endtime="20230915 05:01:17.076"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230915 05:01:17.048" endtime="20230915 05:01:17.076"/>
</test>
<test id="s1-s3-s2-t9" name="Check Recon Namespace Summary Volume" line="125">
<kw name="Wait For Summary">
<arg>${SUMMARY_URL}?path=/${VOLUME}</arg>
<arg>VOLUME</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 05:01:17.082" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-negqp 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 05:01:17.096" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 05:01:17.096" level="INFO">${output} = {"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20230915 05:01:17.080" endtime="20230915 05:01:17.096"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 05:01:17.097" level="INFO">{"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20230915 05:01:17.097" endtime="20230915 05:01:17.097"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 05:01:17.098" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 05:01:17.098" endtime="20230915 05:01:17.098"/>
</kw>
<status status="PASS" starttime="20230915 05:01:17.080" endtime="20230915 05:01:17.098"/>
</kw>
<msg timestamp="20230915 05:01:17.098" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 05:01:17.079" endtime="20230915 05:01:17.098"/>
</kw>
<msg timestamp="20230915 05:01:17.098" level="INFO">${result} = {"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20230915 05:01:17.079" endtime="20230915 05:01:17.098"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20230915 05:01:17.102" level="FAIL">'{"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}' does not contain '"status":"OK"'</msg>
<status status="FAIL" starttime="20230915 05:01:17.099" endtime="20230915 05:01:17.102"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230915 05:01:17.102" endtime="20230915 05:01:17.102"/>
</kw>
<status status="FAIL" starttime="20230915 05:01:17.078" endtime="20230915 05:01:17.102"/>
</kw>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 05:01:27.108" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-negqp 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 05:01:27.123" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 05:01:27.123" level="INFO">${output} = {"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20230915 05:01:27.105" endtime="20230915 05:01:27.123"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 05:01:27.124" level="INFO">{"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20230915 05:01:27.124" endtime="20230915 05:01:27.124"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 05:01:27.125" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 05:01:27.125" endtime="20230915 05:01:27.125"/>
</kw>
<status status="PASS" starttime="20230915 05:01:27.105" endtime="20230915 05:01:27.125"/>
</kw>
<msg timestamp="20230915 05:01:27.125" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 05:01:27.104" endtime="20230915 05:01:27.126"/>
</kw>
<msg timestamp="20230915 05:01:27.126" level="INFO">${result} = {"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20230915 05:01:27.104" endtime="20230915 05:01:27.126"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20230915 05:01:27.126" level="FAIL">'{"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}' does not contain '"status":"OK"'</msg>
<status status="FAIL" starttime="20230915 05:01:27.126" endtime="20230915 05:01:27.126"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230915 05:01:27.127" endtime="20230915 05:01:27.127"/>
</kw>
<status status="FAIL" starttime="20230915 05:01:27.103" endtime="20230915 05:01:27.127"/>
</kw>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 05:01:37.132" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-negqp 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 05:01:37.145" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 05:01:37.146" level="INFO">${output} = {"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20230915 05:01:37.130" endtime="20230915 05:01:37.146"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 05:01:37.147" level="INFO">{"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20230915 05:01:37.146" endtime="20230915 05:01:37.147"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 05:01:37.148" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 05:01:37.147" endtime="20230915 05:01:37.148"/>
</kw>
<status status="PASS" starttime="20230915 05:01:37.129" endtime="20230915 05:01:37.148"/>
</kw>
<msg timestamp="20230915 05:01:37.148" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 05:01:37.129" endtime="20230915 05:01:37.148"/>
</kw>
<msg timestamp="20230915 05:01:37.148" level="INFO">${result} = {"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20230915 05:01:37.128" endtime="20230915 05:01:37.148"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20230915 05:01:37.149" level="FAIL">'{"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}' does not contain '"status":"OK"'</msg>
<status status="FAIL" starttime="20230915 05:01:37.148" endtime="20230915 05:01:37.149"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230915 05:01:37.149" endtime="20230915 05:01:37.149"/>
</kw>
<status status="FAIL" starttime="20230915 05:01:37.127" endtime="20230915 05:01:37.149"/>
</kw>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 05:01:47.154" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-negqp 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 05:01:47.171" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 05:01:47.171" level="INFO">${output} = {"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20230915 05:01:47.152" endtime="20230915 05:01:47.171"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 05:01:47.172" level="INFO">{"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20230915 05:01:47.171" endtime="20230915 05:01:47.172"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 05:01:47.173" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 05:01:47.172" endtime="20230915 05:01:47.173"/>
</kw>
<status status="PASS" starttime="20230915 05:01:47.151" endtime="20230915 05:01:47.173"/>
</kw>
<msg timestamp="20230915 05:01:47.173" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 05:01:47.151" endtime="20230915 05:01:47.173"/>
</kw>
<msg timestamp="20230915 05:01:47.173" level="INFO">${result} = {"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20230915 05:01:47.151" endtime="20230915 05:01:47.173"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20230915 05:01:47.174" level="FAIL">'{"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}' does not contain '"status":"OK"'</msg>
<status status="FAIL" starttime="20230915 05:01:47.173" endtime="20230915 05:01:47.174"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230915 05:01:47.174" endtime="20230915 05:01:47.174"/>
</kw>
<status status="FAIL" starttime="20230915 05:01:47.150" endtime="20230915 05:01:47.174"/>
</kw>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 05:01:57.179" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-negqp 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 05:01:57.211" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 05:01:57.211" level="INFO">${output} = {"path":"","type":"VOLUME","countStats":{"numVolume":-1,"numBucket":1,"numDir":2,"numKey":2},"objectInfo":{"metadata":{},"name":"vol-negqp","quotaInBytes":-1,"quotaInNamespace":-1,"usedNamespace":1,"c...</msg>
<status status="PASS" starttime="20230915 05:01:57.177" endtime="20230915 05:01:57.211"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 05:01:57.212" level="INFO">{"path":"","type":"VOLUME","countStats":{"numVolume":-1,"numBucket":1,"numDir":2,"numKey":2},"objectInfo":{"metadata":{},"name":"vol-negqp","quotaInBytes":-1,"quotaInNamespace":-1,"usedNamespace":1,"creationTime":1694754059152,"modificationTime":1694754059152,"acls":[{"type":"USER","name":"hadoop","aclScope":"ACCESS","aclList":["ALL"]},{"type":"GROUP","name":"hadoop","aclScope":"ACCESS","aclList":["ALL"]}],"admin":"hadoop","owner":"hadoop","volume":"vol-negqp"},"status":"OK"}</msg>
<status status="PASS" starttime="20230915 05:01:57.211" endtime="20230915 05:01:57.212"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 05:01:57.213" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 05:01:57.212" endtime="20230915 05:01:57.213"/>
</kw>
<status status="PASS" starttime="20230915 05:01:57.176" endtime="20230915 05:01:57.213"/>
</kw>
<msg timestamp="20230915 05:01:57.213" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 05:01:57.176" endtime="20230915 05:01:57.213"/>
</kw>
<msg timestamp="20230915 05:01:57.213" level="INFO">${result} = {"path":"","type":"VOLUME","countStats":{"numVolume":-1,"numBucket":1,"numDir":2,"numKey":2},"objectInfo":{"metadata":{},"name":"vol-negqp","quotaInBytes":-1,"quotaInNamespace":-1,"usedNamespace":1,"c...</msg>
<status status="PASS" starttime="20230915 05:01:57.175" endtime="20230915 05:01:57.213"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 05:01:57.213" endtime="20230915 05:01:57.214"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 05:01:57.214" endtime="20230915 05:01:57.214"/>
</kw>
<status status="PASS" starttime="20230915 05:01:57.175" endtime="20230915 05:01:57.215"/>
</kw>
<status status="PASS" starttime="20230915 05:01:17.078" endtime="20230915 05:01:57.215"/>
</kw>
<status status="PASS" starttime="20230915 05:01:17.077" endtime="20230915 05:01:57.215"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230915 05:01:17.077" endtime="20230915 05:01:57.215"/>
</test>
<test id="s1-s3-s2-t10" name="Check Recon Namespace Summary Bucket" line="128">
<kw name="Wait For Summary">
<arg>${SUMMARY_URL}?path=/${VOLUME}/${BUCKET}</arg>
<arg>BUCKET</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 05:01:57.222" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-negqp/buc-zbjqp 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 05:01:57.253" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 05:01:57.253" level="INFO">${output} = {"path":"","type":"BUCKET","countStats":{"numVolume":-1,"numBucket":-1,"numDir":2,"numKey":2},"objectInfo":{"versioningEnabled":false,"metadata":{},"name":"buc-zbjqp","quotaInBytes":-1,"quotaInNamespa...</msg>
<status status="PASS" starttime="20230915 05:01:57.220" endtime="20230915 05:01:57.253"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 05:01:57.254" level="INFO">{"path":"","type":"BUCKET","countStats":{"numVolume":-1,"numBucket":-1,"numDir":2,"numKey":2},"objectInfo":{"versioningEnabled":false,"metadata":{},"name":"buc-zbjqp","quotaInBytes":-1,"quotaInNamespace":-1,"usedNamespace":4,"creationTime":1694754063328,"modificationTime":1694754063328,"acls":[{"type":"USER","name":"hadoop","aclScope":"ACCESS","aclList":["ALL"]},{"type":"GROUP","name":"hadoop","aclScope":"ACCESS","aclList":["ALL"]}],"volumeName":"vol-negqp","storageType":"DISK","versioning":false,"usedBytes":null,"encryptionInfo":null,"replicationConfigInfo":null,"sourceVolume":null,"sourceBucket":null,"bucketLayout":"FILE_SYSTEM_OPTIMIZED","owner":"hadoop"},"status":"OK"}</msg>
<status status="PASS" starttime="20230915 05:01:57.253" endtime="20230915 05:01:57.254"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 05:01:57.255" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 05:01:57.254" endtime="20230915 05:01:57.255"/>
</kw>
<status status="PASS" starttime="20230915 05:01:57.220" endtime="20230915 05:01:57.255"/>
</kw>
<msg timestamp="20230915 05:01:57.255" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 05:01:57.219" endtime="20230915 05:01:57.255"/>
</kw>
<msg timestamp="20230915 05:01:57.256" level="INFO">${result} = {"path":"","type":"BUCKET","countStats":{"numVolume":-1,"numBucket":-1,"numDir":2,"numKey":2},"objectInfo":{"versioningEnabled":false,"metadata":{},"name":"buc-zbjqp","quotaInBytes":-1,"quotaInNamespa...</msg>
<status status="PASS" starttime="20230915 05:01:57.219" endtime="20230915 05:01:57.256"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 05:01:57.256" endtime="20230915 05:01:57.256"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 05:01:57.256" endtime="20230915 05:01:57.257"/>
</kw>
<status status="PASS" starttime="20230915 05:01:57.218" endtime="20230915 05:01:57.257"/>
</kw>
<status status="PASS" starttime="20230915 05:01:57.218" endtime="20230915 05:01:57.257"/>
</kw>
<status status="PASS" starttime="20230915 05:01:57.217" endtime="20230915 05:01:57.257"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230915 05:01:57.216" endtime="20230915 05:01:57.257"/>
</test>
<test id="s1-s3-s2-t11" name="Check Recon Namespace Summary Key" line="131">
<kw name="Wait For Summary">
<arg>${SUMMARY_URL}?path=/${VOLUME}/${BUCKET}/file1</arg>
<arg>KEY</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 05:01:57.264" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-negqp/buc-zbjqp/file1 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 05:01:57.307" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 05:01:57.307" level="INFO">${output} = {"path":"","type":"KEY","countStats":{"numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0},"objectInfo":{"fileName":"file1","file":true,"metadata":{},"name":"file1","quotaInBytes":0,"quotaInNamespace...</msg>
<status status="PASS" starttime="20230915 05:01:57.262" endtime="20230915 05:01:57.307"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 05:01:57.309" level="INFO">{"path":"","type":"KEY","countStats":{"numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0},"objectInfo":{"fileName":"file1","file":true,"metadata":{},"name":"file1","quotaInBytes":0,"quotaInNamespace":0,"usedNamespace":0,"creationTime":1694754067015,"modificationTime":1694754068884,"acls":[{"type":"USER","name":"hadoop","aclScope":"ACCESS","aclList":["ALL"]},{"type":"GROUP","name":"hadoop","aclScope":"ACCESS","aclList":["ALL"]}],"volumeName":"vol-negqp","bucketName":"buc-zbjqp","keyName":"file1","dataSize":4068,"keyLocationVersions":[{"version":0,"locationVersionMap":{"0":[{"blockID":{"containerBlockID":{"containerID":1,"localID":111677748019200012},"blockCommitSequenceId":23,"containerID":1,"localID":111677748019200012},"length":4068,"offset":0,"token":null,"createVersion":0,"pipeline":null,"partNumber":0,"blockCommitSequenceId":23,"containerID":1,"localID":111677748019200012}]},"multipartKey":false,"blocksLatestVersionOnly":[{"blockID":{"containerBlockID":{"containerID":1,"localID":111677748019200012},"blockCommitSequenceId":23,"containerID":1,"localID":111677748019200012},"length":4068,"offset":0,"token":null,"createVersion":0,"pipeline":null,"partNumber":0,"blockCommitSequenceId":23,"containerID":1,"localID":111677748019200012}],"locationLists":[[{"blockID":{"containerBlockID":{"containerID":1,"localID":111677748019200012},"blockCommitSequenceId":23,"containerID":1,"localID":111677748019200012},"length":4068,"offset":0,"token":null,"createVersion":0,"pipeline":null,"partNumber":0,"blockCommitSequenceId":23,"containerID":1,"localID":111677748019200012}]],"locationListCount":1,"locationList":[{"blockID":{"containerBlockID":{"containerID":1,"localID":111677748019200012},"blockCommitSequenceId":23,"containerID":1,"localID":111677748019200012},"length":4068,"offset":0,"token":null,"createVersion":0,"pipeline":null,"partNumber":0,"blockCommitSequenceId":23,"containerID":1,"localID":111677748019200012}]}],"replicationConfig":{"replicationFactor":"THREE","requiredNodes":3,"replicationType":"RATIS"},"encInfo":null},"status":"OK"}</msg>
<status status="PASS" starttime="20230915 05:01:57.307" endtime="20230915 05:01:57.309"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 05:01:57.309" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 05:01:57.309" endtime="20230915 05:01:57.309"/>
</kw>
<status status="PASS" starttime="20230915 05:01:57.261" endtime="20230915 05:01:57.310"/>
</kw>
<msg timestamp="20230915 05:01:57.310" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 05:01:57.261" endtime="20230915 05:01:57.310"/>
</kw>
<msg timestamp="20230915 05:01:57.310" level="INFO">${result} = {"path":"","type":"KEY","countStats":{"numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0},"objectInfo":{"fileName":"file1","file":true,"metadata":{},"name":"file1","quotaInBytes":0,"quotaInNamespace...</msg>
<status status="PASS" starttime="20230915 05:01:57.261" endtime="20230915 05:01:57.310"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 05:01:57.310" endtime="20230915 05:01:57.311"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 05:01:57.311" endtime="20230915 05:01:57.311"/>
</kw>
<status status="PASS" starttime="20230915 05:01:57.260" endtime="20230915 05:01:57.311"/>
</kw>
<status status="PASS" starttime="20230915 05:01:57.260" endtime="20230915 05:01:57.311"/>
</kw>
<status status="PASS" starttime="20230915 05:01:57.259" endtime="20230915 05:01:57.311"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230915 05:01:57.258" endtime="20230915 05:01:57.311"/>
</test>
<test id="s1-s3-s2-t12" name="Check Recon Namespace Summary Directory" line="134">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET_LAYOUT}' == 'LEGACY'</arg>
<arg>Wait For Summary</arg>
<arg>${SUMMARY_URL}?path=/${VOLUME}/${BUCKET}/dir1/dir2/</arg>
<arg>DIRECTORY</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230915 05:01:57.314" endtime="20230915 05:01:57.314"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET_LAYOUT}' == 'FILE_SYSTEM_OPTIMIZED'</arg>
<arg>Wait For Summary</arg>
<arg>${SUMMARY_URL}?path=/${VOLUME}/${BUCKET}/dir1/dir2</arg>
<arg>DIRECTORY</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Wait For Summary">
<arg>${SUMMARY_URL}?path=/${VOLUME}/${BUCKET}/dir1/dir2</arg>
<arg>DIRECTORY</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 05:01:57.320" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-negqp/buc-zbjqp/dir1/dir2 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 05:01:57.345" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 05:01:57.345" level="INFO">${output} = {"path":"","type":"DIRECTORY","countStats":{"numVolume":-1,"numBucket":-1,"numDir":0,"numKey":1},"objectInfo":{"metadata":{},"name":"dir2","quotaInBytes":0,"quotaInNamespace":0,"usedNamespace":0,"crea...</msg>
<status status="PASS" starttime="20230915 05:01:57.318" endtime="20230915 05:01:57.345"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 05:01:57.346" level="INFO">{"path":"","type":"DIRECTORY","countStats":{"numVolume":-1,"numBucket":-1,"numDir":0,"numKey":1},"objectInfo":{"metadata":{},"name":"dir2","quotaInBytes":0,"quotaInNamespace":0,"usedNamespace":0,"creationTime":1694754074091,"modificationTime":1694754074091,"acls":[{"type":"USER","name":"hadoop","aclScope":"ACCESS","aclList":["ALL"]},{"type":"GROUP","name":"hadoop","aclScope":"ACCESS","aclList":["ALL"]}]},"status":"OK"}</msg>
<status status="PASS" starttime="20230915 05:01:57.346" endtime="20230915 05:01:57.346"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 05:01:57.347" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 05:01:57.346" endtime="20230915 05:01:57.347"/>
</kw>
<status status="PASS" starttime="20230915 05:01:57.317" endtime="20230915 05:01:57.347"/>
</kw>
<msg timestamp="20230915 05:01:57.347" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 05:01:57.317" endtime="20230915 05:01:57.347"/>
</kw>
<msg timestamp="20230915 05:01:57.348" level="INFO">${result} = {"path":"","type":"DIRECTORY","countStats":{"numVolume":-1,"numBucket":-1,"numDir":0,"numKey":1},"objectInfo":{"metadata":{},"name":"dir2","quotaInBytes":0,"quotaInNamespace":0,"usedNamespace":0,"crea...</msg>
<status status="PASS" starttime="20230915 05:01:57.316" endtime="20230915 05:01:57.348"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 05:01:57.348" endtime="20230915 05:01:57.348"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 05:01:57.348" endtime="20230915 05:01:57.349"/>
</kw>
<status status="PASS" starttime="20230915 05:01:57.316" endtime="20230915 05:01:57.349"/>
</kw>
<status status="PASS" starttime="20230915 05:01:57.316" endtime="20230915 05:01:57.349"/>
</kw>
<status status="PASS" starttime="20230915 05:01:57.315" endtime="20230915 05:01:57.349"/>
</kw>
<status status="PASS" starttime="20230915 05:01:57.314" endtime="20230915 05:01:57.349"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230915 05:01:57.313" endtime="20230915 05:01:57.349"/>
</test>
<test id="s1-s3-s2-t13" name="Check Recon Namespace Disk Usage" line="138">
<kw name="Wait For Summary">
<arg>${DISK_USAGE_URL}?path=/${VOLUME}/${BUCKET}&amp;files=true&amp;replica=true</arg>
<arg>\"sizeWithReplica\"</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 05:01:57.357" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/du?path=/vol-negqp/buc-zbjqp&amp;files=true&amp;replica=true 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 05:01:57.371" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 05:01:57.371" level="INFO">${output} = {"status":"OK","path":"/vol-negqp/buc-zbjqp","size":10106,"sizeWithReplica":-1,"subPathCount":1,"subPaths":[{"key":false,"path":"/vol-negqp/buc-zbjqp/dir1","size":6038,"sizeWithReplica":-1,"isKey":fal...</msg>
<status status="PASS" starttime="20230915 05:01:57.354" endtime="20230915 05:01:57.371"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 05:01:57.372" level="INFO">{"status":"OK","path":"/vol-negqp/buc-zbjqp","size":10106,"sizeWithReplica":-1,"subPathCount":1,"subPaths":[{"key":false,"path":"/vol-negqp/buc-zbjqp/dir1","size":6038,"sizeWithReplica":-1,"isKey":false}],"sizeDirectKey":4068}</msg>
<status status="PASS" starttime="20230915 05:01:57.371" endtime="20230915 05:01:57.372"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 05:01:57.374" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 05:01:57.372" endtime="20230915 05:01:57.374"/>
</kw>
<status status="PASS" starttime="20230915 05:01:57.353" endtime="20230915 05:01:57.375"/>
</kw>
<msg timestamp="20230915 05:01:57.375" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 05:01:57.353" endtime="20230915 05:01:57.375"/>
</kw>
<msg timestamp="20230915 05:01:57.375" level="INFO">${result} = {"status":"OK","path":"/vol-negqp/buc-zbjqp","size":10106,"sizeWithReplica":-1,"subPathCount":1,"subPaths":[{"key":false,"path":"/vol-negqp/buc-zbjqp/dir1","size":6038,"sizeWithReplica":-1,"isKey":fal...</msg>
<status status="PASS" starttime="20230915 05:01:57.353" endtime="20230915 05:01:57.375"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 05:01:57.375" endtime="20230915 05:01:57.376"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 05:01:57.376" endtime="20230915 05:01:57.376"/>
</kw>
<status status="PASS" starttime="20230915 05:01:57.352" endtime="20230915 05:01:57.376"/>
</kw>
<status status="PASS" starttime="20230915 05:01:57.352" endtime="20230915 05:01:57.376"/>
</kw>
<status status="PASS" starttime="20230915 05:01:57.351" endtime="20230915 05:01:57.376"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230915 05:01:57.350" endtime="20230915 05:01:57.376"/>
</test>
<test id="s1-s3-s2-t14" name="Check Recon Namespace Volume Quota Usage" line="141">
<kw name="Wait For Summary">
<arg>${QUOTA_USAGE_URL}?path=/${VOLUME}</arg>
<arg>\"used\"</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 05:01:57.383" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/quota?path=/vol-negqp 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 05:01:57.397" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 05:01:57.397" level="INFO">${output} = {"allowed":-1,"used":10106,"status":"OK"}</msg>
<status status="PASS" starttime="20230915 05:01:57.381" endtime="20230915 05:01:57.397"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 05:01:57.398" level="INFO">{"allowed":-1,"used":10106,"status":"OK"}</msg>
<status status="PASS" starttime="20230915 05:01:57.398" endtime="20230915 05:01:57.399"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 05:01:57.399" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 05:01:57.399" endtime="20230915 05:01:57.399"/>
</kw>
<status status="PASS" starttime="20230915 05:01:57.381" endtime="20230915 05:01:57.400"/>
</kw>
<msg timestamp="20230915 05:01:57.400" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 05:01:57.380" endtime="20230915 05:01:57.400"/>
</kw>
<msg timestamp="20230915 05:01:57.400" level="INFO">${result} = {"allowed":-1,"used":10106,"status":"OK"}</msg>
<status status="PASS" starttime="20230915 05:01:57.380" endtime="20230915 05:01:57.400"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 05:01:57.400" endtime="20230915 05:01:57.400"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 05:01:57.401" endtime="20230915 05:01:57.401"/>
</kw>
<status status="PASS" starttime="20230915 05:01:57.380" endtime="20230915 05:01:57.401"/>
</kw>
<status status="PASS" starttime="20230915 05:01:57.379" endtime="20230915 05:01:57.401"/>
</kw>
<status status="PASS" starttime="20230915 05:01:57.378" endtime="20230915 05:01:57.401"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230915 05:01:57.377" endtime="20230915 05:01:57.401"/>
</test>
<test id="s1-s3-s2-t15" name="Check Recon Namespace Bucket Quota Usage" line="144">
<kw name="Wait For Summary">
<arg>${QUOTA_USAGE_URL}?path=/${VOLUME}/${BUCKET}</arg>
<arg>\"used\"</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 05:01:57.409" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/quota?path=/vol-negqp/buc-zbjqp 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 05:01:57.427" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 05:01:57.428" level="INFO">${output} = {"allowed":-1,"used":10106,"status":"OK"}</msg>
<status status="PASS" starttime="20230915 05:01:57.406" endtime="20230915 05:01:57.428"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 05:01:57.429" level="INFO">{"allowed":-1,"used":10106,"status":"OK"}</msg>
<status status="PASS" starttime="20230915 05:01:57.428" endtime="20230915 05:01:57.429"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 05:01:57.429" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 05:01:57.429" endtime="20230915 05:01:57.429"/>
</kw>
<status status="PASS" starttime="20230915 05:01:57.406" endtime="20230915 05:01:57.430"/>
</kw>
<msg timestamp="20230915 05:01:57.430" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 05:01:57.405" endtime="20230915 05:01:57.430"/>
</kw>
<msg timestamp="20230915 05:01:57.430" level="INFO">${result} = {"allowed":-1,"used":10106,"status":"OK"}</msg>
<status status="PASS" starttime="20230915 05:01:57.405" endtime="20230915 05:01:57.430"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 05:01:57.430" endtime="20230915 05:01:57.430"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 05:01:57.430" endtime="20230915 05:01:57.431"/>
</kw>
<status status="PASS" starttime="20230915 05:01:57.404" endtime="20230915 05:01:57.431"/>
</kw>
<status status="PASS" starttime="20230915 05:01:57.404" endtime="20230915 05:01:57.431"/>
</kw>
<status status="PASS" starttime="20230915 05:01:57.403" endtime="20230915 05:01:57.431"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230915 05:01:57.402" endtime="20230915 05:01:57.431"/>
</test>
<test id="s1-s3-s2-t16" name="Check Recon Namespace File Size Distribution Root" line="147">
<kw name="Wait For Summary">
<arg>${FILE_SIZE_DIST_URL}?path=/</arg>
<arg>\"dist\"</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 05:01:57.437" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/dist?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 05:01:57.451" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 05:01:57.451" level="INFO">${output} = {"dist":[0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"status":"OK"}</msg>
<status status="PASS" starttime="20230915 05:01:57.435" endtime="20230915 05:01:57.451"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 05:01:57.452" level="INFO">{"dist":[0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"status":"OK"}</msg>
<status status="PASS" starttime="20230915 05:01:57.451" endtime="20230915 05:01:57.452"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 05:01:57.452" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 05:01:57.452" endtime="20230915 05:01:57.452"/>
</kw>
<status status="PASS" starttime="20230915 05:01:57.435" endtime="20230915 05:01:57.453"/>
</kw>
<msg timestamp="20230915 05:01:57.453" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 05:01:57.435" endtime="20230915 05:01:57.453"/>
</kw>
<msg timestamp="20230915 05:01:57.453" level="INFO">${result} = {"dist":[0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"status":"OK"}</msg>
<status status="PASS" starttime="20230915 05:01:57.434" endtime="20230915 05:01:57.453"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 05:01:57.453" endtime="20230915 05:01:57.454"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 05:01:57.454" endtime="20230915 05:01:57.454"/>
</kw>
<status status="PASS" starttime="20230915 05:01:57.434" endtime="20230915 05:01:57.454"/>
</kw>
<status status="PASS" starttime="20230915 05:01:57.433" endtime="20230915 05:01:57.454"/>
</kw>
<status status="PASS" starttime="20230915 05:01:57.433" endtime="20230915 05:01:57.454"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230915 05:01:57.432" endtime="20230915 05:01:57.454"/>
</test>
<doc>Smoke test for Recon Namespace Summary Endpoint for FILE_SYSTEM_OPTIMIZED buckets.</doc>
<status status="PASS" starttime="20230915 05:00:55.013" endtime="20230915 05:01:57.455"/>
</suite>
<status status="PASS" starttime="20230915 05:00:06.275" endtime="20230915 05:01:57.461"/>
</suite>
<suite id="s1-s4" name="Loaddata" source="/opt/hadoop/smoketest/topology/loaddata.robot">
<test id="s1-s4-t1" name="Create a volume, bucket and key" line="27">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create topvol1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 05:02:00.210" level="INFO">Running command 'ozone sh volume create topvol1 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 05:02:04.466" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 05:02:04.466" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230915 05:02:00.207" endtime="20230915 05:02:04.466"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 05:02:04.468" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230915 05:02:04.467" endtime="20230915 05:02:04.468"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 05:02:04.468" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 05:02:04.468" endtime="20230915 05:02:04.469"/>
</kw>
<status status="PASS" starttime="20230915 05:02:00.207" endtime="20230915 05:02:04.469"/>
</kw>
<msg timestamp="20230915 05:02:04.469" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 05:02:00.206" endtime="20230915 05:02:04.469"/>
</kw>
<msg timestamp="20230915 05:02:04.469" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230915 05:02:00.206" endtime="20230915 05:02:04.469"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 05:02:04.469" endtime="20230915 05:02:04.470"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /topvol1/bucket1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 05:02:04.473" level="INFO">Running command 'ozone sh bucket create /topvol1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 05:02:08.853" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 05:02:08.853" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230915 05:02:04.471" endtime="20230915 05:02:08.853"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 05:02:08.854" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230915 05:02:08.853" endtime="20230915 05:02:08.854"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 05:02:08.854" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 05:02:08.854" endtime="20230915 05:02:08.855"/>
</kw>
<status status="PASS" starttime="20230915 05:02:04.471" endtime="20230915 05:02:08.855"/>
</kw>
<msg timestamp="20230915 05:02:08.855" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 05:02:04.470" endtime="20230915 05:02:08.855"/>
</kw>
<msg timestamp="20230915 05:02:08.855" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230915 05:02:04.470" endtime="20230915 05:02:08.855"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 05:02:08.855" endtime="20230915 05:02:08.856"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /topvol1/bucket1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 05:02:08.859" level="INFO">Running command 'ozone sh key put /topvol1/bucket1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 05:02:15.449" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 05:02:15.449" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230915 05:02:08.857" endtime="20230915 05:02:15.449"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 05:02:15.451" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230915 05:02:15.450" endtime="20230915 05:02:15.451"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 05:02:15.451" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 05:02:15.451" endtime="20230915 05:02:15.451"/>
</kw>
<status status="PASS" starttime="20230915 05:02:08.857" endtime="20230915 05:02:15.451"/>
</kw>
<msg timestamp="20230915 05:02:15.452" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 05:02:08.856" endtime="20230915 05:02:15.452"/>
</kw>
<msg timestamp="20230915 05:02:15.452" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230915 05:02:08.856" endtime="20230915 05:02:15.452"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 05:02:15.452" endtime="20230915 05:02:15.453"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230915 05:02:00.205" endtime="20230915 05:02:15.453"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20230915 05:02:00.153" endtime="20230915 05:02:15.454"/>
</suite>
<suite id="s1-s5" name="readdata-first-half" source="/opt/hadoop/smoketest/topology/readdata.robot">
<test id="s1-s5-t1" name="Read data from previously created key" line="27">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230915 05:02:24.784" level="INFO">${random} = 37636</msg>
<status status="PASS" starttime="20230915 05:02:24.783" endtime="20230915 05:02:24.784"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /topvol1/bucket1/key1 /tmp/key1-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 05:02:24.787" level="INFO">Running command 'ozone sh key get /topvol1/bucket1/key1 /tmp/key1-37636 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 05:02:31.083" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 05:02:31.083" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230915 05:02:24.785" endtime="20230915 05:02:31.083"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 05:02:31.084" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230915 05:02:31.083" endtime="20230915 05:02:31.084"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 05:02:31.085" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 05:02:31.084" endtime="20230915 05:02:31.085"/>
</kw>
<status status="PASS" starttime="20230915 05:02:24.785" endtime="20230915 05:02:31.085"/>
</kw>
<msg timestamp="20230915 05:02:31.085" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 05:02:24.784" endtime="20230915 05:02:31.085"/>
</kw>
<msg timestamp="20230915 05:02:31.085" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230915 05:02:24.784" endtime="20230915 05:02:31.085"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 05:02:31.085" endtime="20230915 05:02:31.086"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230915 05:02:24.783" endtime="20230915 05:02:31.086"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20230915 05:02:24.737" endtime="20230915 05:02:31.087"/>
</suite>
<suite id="s1-s6" name="readdata-second-half" source="/opt/hadoop/smoketest/topology/readdata.robot">
<test id="s1-s6-t1" name="Read data from previously created key" line="27">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230915 05:03:10.119" level="INFO">${random} = 55958</msg>
<status status="PASS" starttime="20230915 05:03:10.118" endtime="20230915 05:03:10.119"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /topvol1/bucket1/key1 /tmp/key1-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 05:03:10.123" level="INFO">Running command 'ozone sh key get /topvol1/bucket1/key1 /tmp/key1-55958 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 05:03:37.913" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 05:03:37.913" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230915 05:03:10.120" endtime="20230915 05:03:37.913"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 05:03:37.914" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230915 05:03:37.914" endtime="20230915 05:03:37.914"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 05:03:37.915" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 05:03:37.914" endtime="20230915 05:03:37.915"/>
</kw>
<status status="PASS" starttime="20230915 05:03:10.120" endtime="20230915 05:03:37.915"/>
</kw>
<msg timestamp="20230915 05:03:37.915" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 05:03:10.120" endtime="20230915 05:03:37.915"/>
</kw>
<msg timestamp="20230915 05:03:37.915" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230915 05:03:10.119" endtime="20230915 05:03:37.915"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 05:03:37.916" endtime="20230915 05:03:37.916"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230915 05:03:10.118" endtime="20230915 05:03:37.916"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20230915 05:03:10.071" endtime="20230915 05:03:37.918"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="209725"/>
</suite>
<statistics>
<total>
<stat pass="32" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="32" fail="0" skip="0" id="s1" name="ozone-topology">ozone-topology</stat>
<stat pass="2" fail="0" skip="0" id="s1-s1" name="Basic">ozone-topology.Basic</stat>
<stat pass="4" fail="0" skip="0" id="s1-s2" name="Cli">ozone-topology.Cli</stat>
<stat pass="23" fail="0" skip="0" id="s1-s3" name="Recon">ozone-topology.Recon</stat>
<stat pass="7" fail="0" skip="0" id="s1-s3-s1" name="Recon-Api">ozone-topology.Recon.Recon-Api</stat>
<stat pass="16" fail="0" skip="0" id="s1-s3-s2" name="Recon-Nssummary">ozone-topology.Recon.Recon-Nssummary</stat>
<stat pass="1" fail="0" skip="0" id="s1-s4" name="Loaddata">ozone-topology.Loaddata</stat>
<stat pass="1" fail="0" skip="0" id="s1-s5" name="readdata-first-half">ozone-topology.readdata-first-half</stat>
<stat pass="1" fail="0" skip="0" id="s1-s6" name="readdata-second-half">ozone-topology.readdata-second-half</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
