<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 6.1.1 (Python 3.8.10 on linux)" generated="20230915 14:30:31.023" rpa="false" schemaversion="4">
<suite id="s1" name="ozone-om-prepare">
<suite id="s1-s1" name="Om-Prepare" source="/opt/hadoop/smoketest/omha/om-prepare.robot">
<kw name="Create Specific OM data for prepare" type="SETUP">
<kw name="Freon OCKG" library="freon">
<arg>prefix=om-prepare</arg>
<arg>n=100</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 14:24:36.309" level="INFO">Running command 'ozone freon ockg --om-service-id=omservice -t 1 -n100 -p om-prepare  2&gt;&amp;1'.</msg>
<msg timestamp="20230915 14:24:54.201" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 14:24:54.201" level="INFO">${output} = 2023-09-15 14:24:38,430 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-15 14:24:38,611 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230915 14:24:36.307" endtime="20230915 14:24:54.201"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 14:24:54.202" level="INFO">2023-09-15 14:24:38,430 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-15 14:24:38,611 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-09-15 14:24:38,611 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-09-15 14:24:38,701 [main] INFO freon.BaseFreonGenerator: Executing test with prefix om-prepare and number-of-tests 100
2023-09-15 14:24:38,758 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2023-09-15 14:24:39,472 [main] INFO rpc.RpcClient: Creating Volume: vol1, with hadoop as owner and space quota set to -1 bytes, counts quota set to -1
2023-09-15 14:24:39,760 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2023-09-15 14:24:39,819 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Encryption set to false, Replication Type set to server-side default replication type, Namespace Quota set to -1, Space Quota set to -1 
2023-09-15 14:24:40,760 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2023-09-15 14:24:41,185 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2023-09-15 14:24:41,496 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2023-09-15 14:24:41,760 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2023-09-15 14:24:42,761 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2023-09-15 14:24:43,764 [Thread-3] INFO freon.ProgressBar: Progress: 3.00 % (3 out of 100)
2023-09-15 14:24:44,769 [Thread-3] INFO freon.ProgressBar: Progress: 9.00 % (9 out of 100)
2023-09-15 14:24:45,771 [Thread-3] INFO freon.ProgressBar: Progress: 17.00 % (17 out of 100)
2023-09-15 14:24:46,771 [Thread-3] INFO freon.ProgressBar: Progress: 26.00 % (26 out of 100)
2023-09-15 14:24:47,774 [Thread-3] INFO freon.ProgressBar: Progress: 36.00 % (36 out of 100)
2023-09-15 14:24:48,774 [Thread-3] INFO freon.ProgressBar: Progress: 47.00 % (47 out of 100)
2023-09-15 14:24:49,775 [Thread-3] INFO freon.ProgressBar: Progress: 59.00 % (59 out of 100)
2023-09-15 14:24:50,777 [Thread-3] INFO freon.ProgressBar: Progress: 71.00 % (71 out of 100)
2023-09-15 14:24:51,778 [Thread-3] INFO freon.ProgressBar: Progress: 85.00 % (85 out of 100)
2023-09-15 14:24:52,779 [Thread-3] INFO freon.ProgressBar: Progress: 98.00 % (98 out of 100)
2023-09-15 14:24:53,788 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (100 out of 100)
2023-09-15 14:24:53,844 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=100, min=50.137731, max=2844.324734, mean=124.01982595449743, stddev=268.07016474701237, median=85.661895, p75=109.298998, p95=153.4151, p98=384.898554, p99=614.752101, p999=2844.324734, mean_rate=7.242636780613945, m1=2.839644682965414, m5=2.33222836942706, m15=2.2443212159608263, rate_unit=events/second, duration_unit=milliseconds
2023-09-15 14:24:53,845 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 15
2023-09-15 14:24:53,845 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-09-15 14:24:53,845 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 100</msg>
<status status="PASS" starttime="20230915 14:24:54.201" endtime="20230915 14:24:54.202"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 14:24:54.203" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 14:24:54.202" endtime="20230915 14:24:54.203"/>
</kw>
<status status="PASS" starttime="20230915 14:24:36.307" endtime="20230915 14:24:54.203"/>
</kw>
<msg timestamp="20230915 14:24:54.203" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 14:24:36.306" endtime="20230915 14:24:54.203"/>
</kw>
<msg timestamp="20230915 14:24:54.203" level="INFO">${result} = 2023-09-15 14:24:38,430 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-15 14:24:38,611 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230915 14:24:36.306" endtime="20230915 14:24:54.203"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 14:24:54.203" endtime="20230915 14:24:54.204"/>
</kw>
<status status="PASS" starttime="20230915 14:24:36.305" endtime="20230915 14:24:54.204"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230915 14:24:54.205" level="INFO">${random} = 81123</msg>
<status status="PASS" starttime="20230915 14:24:54.204" endtime="20230915 14:24:54.205"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${volume_name}</arg>
<arg>${random}-volume-for-prepare</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230915 14:24:54.206" level="INFO">${volume_name} = 81123-volume-for-prepare</msg>
<status status="PASS" starttime="20230915 14:24:54.205" endtime="20230915 14:24:54.206"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${bucket_name}</arg>
<arg>${random}-bucket-for-prepare</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230915 14:24:54.207" level="INFO">${bucket_name} = 81123-bucket-for-prepare</msg>
<status status="PASS" starttime="20230915 14:24:54.206" endtime="20230915 14:24:54.207"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create /${volume_name}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 14:24:54.211" level="INFO">Running command 'ozone sh volume create /81123-volume-for-prepare 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 14:24:57.264" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 14:24:57.264" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230915 14:24:54.209" endtime="20230915 14:24:57.264"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 14:24:57.265" level="INFO"/>
<status status="PASS" starttime="20230915 14:24:57.265" endtime="20230915 14:24:57.265"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 14:24:57.266" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 14:24:57.265" endtime="20230915 14:24:57.266"/>
</kw>
<status status="PASS" starttime="20230915 14:24:54.208" endtime="20230915 14:24:57.266"/>
</kw>
<msg timestamp="20230915 14:24:57.266" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 14:24:54.208" endtime="20230915 14:24:57.266"/>
</kw>
<status status="PASS" starttime="20230915 14:24:54.208" endtime="20230915 14:24:57.266"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create /${volume_name}/${bucket_name}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 14:24:57.270" level="INFO">Running command 'ozone sh bucket create /81123-volume-for-prepare/81123-bucket-for-prepare 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 14:25:00.113" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 14:25:00.113" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230915 14:24:57.268" endtime="20230915 14:25:00.113"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 14:25:00.114" level="INFO"/>
<status status="PASS" starttime="20230915 14:25:00.113" endtime="20230915 14:25:00.114"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 14:25:00.114" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 14:25:00.114" endtime="20230915 14:25:00.114"/>
</kw>
<status status="PASS" starttime="20230915 14:24:57.267" endtime="20230915 14:25:00.115"/>
</kw>
<msg timestamp="20230915 14:25:00.115" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 14:24:57.267" endtime="20230915 14:25:00.115"/>
</kw>
<status status="PASS" starttime="20230915 14:24:57.267" endtime="20230915 14:25:00.115"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put /${volume_name}/${bucket_name}/prepare-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 14:25:00.119" level="INFO">Running command 'ozone sh key put /81123-volume-for-prepare/81123-bucket-for-prepare/prepare-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 14:25:05.500" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 14:25:05.500" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230915 14:25:00.116" endtime="20230915 14:25:05.500"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 14:25:05.501" level="INFO"/>
<status status="PASS" starttime="20230915 14:25:05.500" endtime="20230915 14:25:05.501"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 14:25:05.502" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 14:25:05.501" endtime="20230915 14:25:05.502"/>
</kw>
<status status="PASS" starttime="20230915 14:25:00.116" endtime="20230915 14:25:05.502"/>
</kw>
<msg timestamp="20230915 14:25:05.502" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 14:25:00.116" endtime="20230915 14:25:05.502"/>
</kw>
<status status="PASS" starttime="20230915 14:25:00.115" endtime="20230915 14:25:05.502"/>
</kw>
<status status="PASS" starttime="20230915 14:24:36.304" endtime="20230915 14:25:05.502"/>
</kw>
<test id="s1-s1-t1" name="Prepare Ozone Manager" line="39">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230915 14:25:05.504" endtime="20230915 14:25:05.504"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om prepare -id=omservice</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 14:25:05.509" level="INFO">Running command 'ozone admin om prepare -id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 14:25:13.787" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 14:25:13.787" level="INFO">${output} = Ozone Manager Prepare Request successfully returned with Transaction Id : [413].

Checking individual OM instances for prepare request completion...
OM : [om1], Prepare Status : [PREPARE_COMPLETED], C...</msg>
<status status="PASS" starttime="20230915 14:25:05.506" endtime="20230915 14:25:13.787"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 14:25:13.788" level="INFO">Ozone Manager Prepare Request successfully returned with Transaction Id : [413].

Checking individual OM instances for prepare request completion...
OM : [om1], Prepare Status : [PREPARE_COMPLETED], Current Transaction Id : [413]
OM : [om3], Prepare Status : [PREPARE_COMPLETED], Current Transaction Id : [413]
OM : [om2], Prepare Status : [PREPARE_COMPLETED], Current Transaction Id : [413]

OM Preparation successful! 
All OMs are prepared
No new write requests will be allowed until preparation is cancelled or upgrade/downgrade is done.</msg>
<status status="PASS" starttime="20230915 14:25:13.787" endtime="20230915 14:25:13.788"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 14:25:13.789" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 14:25:13.788" endtime="20230915 14:25:13.789"/>
</kw>
<status status="PASS" starttime="20230915 14:25:05.505" endtime="20230915 14:25:13.789"/>
</kw>
<msg timestamp="20230915 14:25:13.789" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 14:25:05.505" endtime="20230915 14:25:13.789"/>
</kw>
<msg timestamp="20230915 14:25:13.789" level="INFO">${result} = Ozone Manager Prepare Request successfully returned with Transaction Id : [413].

Checking individual OM instances for prepare request completion...
OM : [om1], Prepare Status : [PREPARE_COMPLETED], C...</msg>
<status status="PASS" starttime="20230915 14:25:05.504" endtime="20230915 14:25:13.789"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>OM Preparation successful!</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>OM Preparation successful!</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 14:25:13.790" endtime="20230915 14:25:13.791"/>
</kw>
<status status="PASS" starttime="20230915 14:25:13.790" endtime="20230915 14:25:13.791"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230915 14:25:05.503" endtime="20230915 14:25:13.791"/>
</test>
<test id="s1-s1-t2" name="Checks if the expected data is present in OM" line="43">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230915 14:25:13.793" endtime="20230915 14:25:13.793"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info /${volume_name}/${bucket_name}/prepare-key</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 14:25:13.797" level="INFO">Running command 'ozone sh key info /81123-volume-for-prepare/81123-bucket-for-prepare/prepare-key 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 14:25:17.530" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 14:25:17.530" level="INFO">${output} = {
  "volumeName" : "81123-volume-for-prepare",
  "bucketName" : "81123-bucket-for-prepare",
  "name" : "prepare-key",
  "dataSize" : 17289,
  "creationTime" : "2023-09-15T14:25:03.191Z",
  "modificati...</msg>
<status status="PASS" starttime="20230915 14:25:13.795" endtime="20230915 14:25:17.530"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 14:25:17.531" level="INFO">{
  "volumeName" : "81123-volume-for-prepare",
  "bucketName" : "81123-bucket-for-prepare",
  "name" : "prepare-key",
  "dataSize" : 17289,
  "creationTime" : "2023-09-15T14:25:03.191Z",
  "modificationTime" : "2023-09-15T14:25:05.124Z",
  "replicationConfig" : {
    "replicationFactor" : "ONE",
    "requiredNodes" : 1,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "ozoneKeyLocations" : [ {
    "containerID" : 5,
    "localID" : 111677748019200101,
    "length" : 17289,
    "offset" : 0,
    "keyOffset" : 0
  } ],
  "file" : true
}</msg>
<status status="PASS" starttime="20230915 14:25:17.530" endtime="20230915 14:25:17.531"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 14:25:17.531" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 14:25:17.531" endtime="20230915 14:25:17.532"/>
</kw>
<status status="PASS" starttime="20230915 14:25:13.794" endtime="20230915 14:25:17.532"/>
</kw>
<msg timestamp="20230915 14:25:17.532" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 14:25:13.794" endtime="20230915 14:25:17.532"/>
</kw>
<msg timestamp="20230915 14:25:17.532" level="INFO">${result} = {
  "volumeName" : "81123-volume-for-prepare",
  "bucketName" : "81123-bucket-for-prepare",
  "name" : "prepare-key",
  "dataSize" : 17289,
  "creationTime" : "2023-09-15T14:25:03.191Z",
  "modificati...</msg>
<status status="PASS" starttime="20230915 14:25:13.793" endtime="20230915 14:25:17.532"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"name\" : \"prepare-key\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 14:25:17.532" endtime="20230915 14:25:17.533"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230915 14:25:13.792" endtime="20230915 14:25:17.533"/>
</test>
<test id="s1-s1-t3" name="Test write operation fails" line="47">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230915 14:25:17.534" endtime="20230915 14:25:17.535"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh key put /${volume_name}/${bucket_name}/prepare-key2 /opt/hadoop/NOTICE.txt</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 14:25:17.538" level="INFO">Running command 'ozone sh key put /81123-volume-for-prepare/81123-bucket-for-prepare/prepare-key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 14:25:20.482" level="INFO">${rc} = 255</msg>
<msg timestamp="20230915 14:25:20.482" level="INFO">${output} = NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateKey when OM is in prepare mode.</msg>
<status status="PASS" starttime="20230915 14:25:17.536" endtime="20230915 14:25:20.482"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 14:25:20.483" level="INFO">NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateKey when OM is in prepare mode.</msg>
<status status="PASS" starttime="20230915 14:25:20.483" endtime="20230915 14:25:20.484"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 14:25:20.484" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 14:25:20.484" endtime="20230915 14:25:20.484"/>
</kw>
<msg timestamp="20230915 14:25:20.484" level="INFO">${result} = NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateKey when OM is in prepare mode.</msg>
<status status="PASS" starttime="20230915 14:25:17.535" endtime="20230915 14:25:20.484"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>OM is in prepare mode</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 14:25:20.485" endtime="20230915 14:25:20.485"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>ozone sh key info /${volume_name}/${bucket_name}/prepare-key2</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 14:25:20.489" level="INFO">Running command 'ozone sh key info /81123-volume-for-prepare/81123-bucket-for-prepare/prepare-key2 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 14:25:23.222" level="INFO">${rc} = 255</msg>
<msg timestamp="20230915 14:25:23.222" level="INFO">${output} = KEY_NOT_FOUND Key:prepare-key2 not found</msg>
<status status="PASS" starttime="20230915 14:25:20.486" endtime="20230915 14:25:23.222"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 14:25:23.223" level="INFO">KEY_NOT_FOUND Key:prepare-key2 not found</msg>
<status status="PASS" starttime="20230915 14:25:23.222" endtime="20230915 14:25:23.223"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 14:25:23.224" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 14:25:23.223" endtime="20230915 14:25:23.224"/>
</kw>
<status status="PASS" starttime="20230915 14:25:20.485" endtime="20230915 14:25:23.224"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230915 14:25:17.534" endtime="20230915 14:25:23.224"/>
</test>
<doc>Smoke test to test preparing OMs in an OM HA cluster.</doc>
<status status="PASS" starttime="20230915 14:24:36.247" endtime="20230915 14:25:23.226"/>
</suite>
<suite id="s1-s2" name="Om-Cancel-Prepare" source="/opt/hadoop/smoketest/omha/om-cancel-prepare.robot">
<kw name="Generate volume and bucket names" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230915 14:25:25.997" level="INFO">${random} = 17164</msg>
<status status="PASS" starttime="20230915 14:25:25.997" endtime="20230915 14:25:25.997"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${volume_name}</arg>
<arg>${random}-volume-for-cancel</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230915 14:25:25.999" level="INFO">${volume_name} = 17164-volume-for-cancel</msg>
<status status="PASS" starttime="20230915 14:25:25.997" endtime="20230915 14:25:25.999"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${bucket_name}</arg>
<arg>${random}-bucket-for-cancel</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230915 14:25:26.001" level="INFO">${bucket_name} = 17164-bucket-for-cancel</msg>
<status status="PASS" starttime="20230915 14:25:25.999" endtime="20230915 14:25:26.001"/>
</kw>
<status status="PASS" starttime="20230915 14:25:25.995" endtime="20230915 14:25:26.001"/>
</kw>
<test id="s1-s2-t1" name="Cancel Ozone Manager Prepare" line="33">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230915 14:25:26.002" endtime="20230915 14:25:26.002"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om cancelprepare -id=omservice</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 14:25:26.006" level="INFO">Running command 'ozone admin om cancelprepare -id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 14:25:29.412" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 14:25:29.412" level="INFO">${output} = Cancel prepare succeeded, cluster can now accept write requests.</msg>
<status status="PASS" starttime="20230915 14:25:26.004" endtime="20230915 14:25:29.412"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 14:25:29.413" level="INFO">Cancel prepare succeeded, cluster can now accept write requests.</msg>
<status status="PASS" starttime="20230915 14:25:29.412" endtime="20230915 14:25:29.413"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 14:25:29.414" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 14:25:29.413" endtime="20230915 14:25:29.414"/>
</kw>
<status status="PASS" starttime="20230915 14:25:26.003" endtime="20230915 14:25:29.414"/>
</kw>
<msg timestamp="20230915 14:25:29.414" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 14:25:26.003" endtime="20230915 14:25:29.414"/>
</kw>
<msg timestamp="20230915 14:25:29.415" level="INFO">${result} = Cancel prepare succeeded, cluster can now accept write requests.</msg>
<status status="PASS" starttime="20230915 14:25:26.002" endtime="20230915 14:25:29.415"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>5sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Cancel prepare succeeded</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Cancel prepare succeeded</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 14:25:29.415" endtime="20230915 14:25:29.416"/>
</kw>
<status status="PASS" starttime="20230915 14:25:29.415" endtime="20230915 14:25:29.416"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230915 14:25:26.001" endtime="20230915 14:25:29.416"/>
</test>
<test id="s1-s2-t2" name="Test write operations" line="37">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230915 14:25:29.417" endtime="20230915 14:25:29.418"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create /${volume_name}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 14:25:29.422" level="INFO">Running command 'ozone sh volume create /17164-volume-for-cancel 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 14:25:32.347" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 14:25:32.347" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230915 14:25:29.419" endtime="20230915 14:25:32.347"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 14:25:32.349" level="INFO"/>
<status status="PASS" starttime="20230915 14:25:32.348" endtime="20230915 14:25:32.349"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 14:25:32.349" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 14:25:32.349" endtime="20230915 14:25:32.349"/>
</kw>
<status status="PASS" starttime="20230915 14:25:29.419" endtime="20230915 14:25:32.350"/>
</kw>
<msg timestamp="20230915 14:25:32.350" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 14:25:29.418" endtime="20230915 14:25:32.350"/>
</kw>
<status status="PASS" starttime="20230915 14:25:29.418" endtime="20230915 14:25:32.350"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create /${volume_name}/${bucket_name}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 14:25:32.354" level="INFO">Running command 'ozone sh bucket create /17164-volume-for-cancel/17164-bucket-for-cancel 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 14:25:35.664" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 14:25:35.665" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230915 14:25:32.352" endtime="20230915 14:25:35.665"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 14:25:35.666" level="INFO"/>
<status status="PASS" starttime="20230915 14:25:35.665" endtime="20230915 14:25:35.666"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 14:25:35.667" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 14:25:35.666" endtime="20230915 14:25:35.667"/>
</kw>
<status status="PASS" starttime="20230915 14:25:32.351" endtime="20230915 14:25:35.667"/>
</kw>
<msg timestamp="20230915 14:25:35.667" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 14:25:32.351" endtime="20230915 14:25:35.667"/>
</kw>
<status status="PASS" starttime="20230915 14:25:32.350" endtime="20230915 14:25:35.667"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key put /${volume_name}/${bucket_name}/cancel-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 14:25:35.671" level="INFO">Running command 'ozone sh key put /17164-volume-for-cancel/17164-bucket-for-cancel/cancel-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 14:25:40.753" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 14:25:40.753" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230915 14:25:35.669" endtime="20230915 14:25:40.753"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 14:25:40.755" level="INFO"/>
<status status="PASS" starttime="20230915 14:25:40.754" endtime="20230915 14:25:40.755"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 14:25:40.755" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 14:25:40.755" endtime="20230915 14:25:40.755"/>
</kw>
<status status="PASS" starttime="20230915 14:25:35.668" endtime="20230915 14:25:40.756"/>
</kw>
<msg timestamp="20230915 14:25:40.756" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 14:25:35.668" endtime="20230915 14:25:40.756"/>
</kw>
<msg timestamp="20230915 14:25:40.756" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230915 14:25:35.667" endtime="20230915 14:25:40.756"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info /${volume_name}/${bucket_name}/cancel-key</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 14:25:40.760" level="INFO">Running command 'ozone sh key info /17164-volume-for-cancel/17164-bucket-for-cancel/cancel-key 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 14:25:43.863" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 14:25:43.863" level="INFO">${output} = {
  "volumeName" : "17164-volume-for-cancel",
  "bucketName" : "17164-bucket-for-cancel",
  "name" : "cancel-key",
  "dataSize" : 17289,
  "creationTime" : "2023-09-15T14:25:38.474Z",
  "modificationT...</msg>
<status status="PASS" starttime="20230915 14:25:40.757" endtime="20230915 14:25:43.864"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 14:25:43.865" level="INFO">{
  "volumeName" : "17164-volume-for-cancel",
  "bucketName" : "17164-bucket-for-cancel",
  "name" : "cancel-key",
  "dataSize" : 17289,
  "creationTime" : "2023-09-15T14:25:38.474Z",
  "modificationTime" : "2023-09-15T14:25:40.359Z",
  "replicationConfig" : {
    "replicationFactor" : "ONE",
    "requiredNodes" : 1,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "ozoneKeyLocations" : [ {
    "containerID" : 1,
    "localID" : 111677748019200103,
    "length" : 17289,
    "offset" : 0,
    "keyOffset" : 0
  } ],
  "file" : true
}</msg>
<status status="PASS" starttime="20230915 14:25:43.864" endtime="20230915 14:25:43.865"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 14:25:43.866" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 14:25:43.865" endtime="20230915 14:25:43.866"/>
</kw>
<status status="PASS" starttime="20230915 14:25:40.757" endtime="20230915 14:25:43.866"/>
</kw>
<msg timestamp="20230915 14:25:43.866" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 14:25:40.757" endtime="20230915 14:25:43.866"/>
</kw>
<msg timestamp="20230915 14:25:43.866" level="INFO">${result} = {
  "volumeName" : "17164-volume-for-cancel",
  "bucketName" : "17164-bucket-for-cancel",
  "name" : "cancel-key",
  "dataSize" : 17289,
  "creationTime" : "2023-09-15T14:25:38.474Z",
  "modificationT...</msg>
<status status="PASS" starttime="20230915 14:25:40.756" endtime="20230915 14:25:43.866"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"name\" : \"cancel-key\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 14:25:43.866" endtime="20230915 14:25:43.867"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230915 14:25:29.417" endtime="20230915 14:25:43.867"/>
</test>
<doc>Smoke test for ozone manager cancel prepare</doc>
<status status="PASS" starttime="20230915 14:25:25.942" endtime="20230915 14:25:43.869"/>
</suite>
<suite id="s1-s3" name="Om-Prepare" source="/opt/hadoop/smoketest/omha/om-prepare.robot">
<kw name="Create Specific OM data for prepare" type="SETUP">
<kw name="Freon OCKG" library="freon">
<arg>prefix=om-prepare</arg>
<arg>n=100</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 14:25:46.592" level="INFO">Running command 'ozone freon ockg --om-service-id=omservice -t 1 -n100 -p om-prepare  2&gt;&amp;1'.</msg>
<msg timestamp="20230915 14:25:59.829" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 14:25:59.829" level="INFO">${output} = 2023-09-15 14:25:48,346 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-15 14:25:48,533 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230915 14:25:46.589" endtime="20230915 14:25:59.829"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 14:25:59.832" level="INFO">2023-09-15 14:25:48,346 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-15 14:25:48,533 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-09-15 14:25:48,533 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-09-15 14:25:48,624 [main] INFO freon.BaseFreonGenerator: Executing test with prefix om-prepare and number-of-tests 100
2023-09-15 14:25:48,678 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2023-09-15 14:25:49,681 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2023-09-15 14:25:50,154 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2023-09-15 14:25:50,428 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2023-09-15 14:25:50,682 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2023-09-15 14:25:51,684 [Thread-3] INFO freon.ProgressBar: Progress: 6.00 % (6 out of 100)
2023-09-15 14:25:52,685 [Thread-3] INFO freon.ProgressBar: Progress: 18.00 % (18 out of 100)
2023-09-15 14:25:53,686 [Thread-3] INFO freon.ProgressBar: Progress: 30.00 % (30 out of 100)
2023-09-15 14:25:54,687 [Thread-3] INFO freon.ProgressBar: Progress: 44.00 % (44 out of 100)
2023-09-15 14:25:55,687 [Thread-3] INFO freon.ProgressBar: Progress: 58.00 % (58 out of 100)
2023-09-15 14:25:56,688 [Thread-3] INFO freon.ProgressBar: Progress: 74.00 % (74 out of 100)
2023-09-15 14:25:57,688 [Thread-3] INFO freon.ProgressBar: Progress: 87.00 % (87 out of 100)
2023-09-15 14:25:58,689 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (100 out of 100)
2023-09-15 14:25:59,469 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=100, min=50.817116, max=1711.042028, mean=88.92462880361383, stddev=159.7589595477155, median=69.684696, p75=83.935557, p95=108.471175, p98=143.963211, p99=159.546599, p999=1711.042028, mean_rate=9.943425893977054, m1=8.319822341482707, m5=8.06611418471353, m15=8.022160607980414, rate_unit=events/second, duration_unit=milliseconds
2023-09-15 14:25:59,470 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 11
2023-09-15 14:25:59,472 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-09-15 14:25:59,472 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 100</msg>
<status status="PASS" starttime="20230915 14:25:59.830" endtime="20230915 14:25:59.832"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 14:25:59.833" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 14:25:59.832" endtime="20230915 14:25:59.833"/>
</kw>
<status status="PASS" starttime="20230915 14:25:46.589" endtime="20230915 14:25:59.833"/>
</kw>
<msg timestamp="20230915 14:25:59.833" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 14:25:46.588" endtime="20230915 14:25:59.833"/>
</kw>
<msg timestamp="20230915 14:25:59.834" level="INFO">${result} = 2023-09-15 14:25:48,346 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-15 14:25:48,533 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230915 14:25:46.588" endtime="20230915 14:25:59.834"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 14:25:59.834" endtime="20230915 14:25:59.834"/>
</kw>
<status status="PASS" starttime="20230915 14:25:46.587" endtime="20230915 14:25:59.834"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230915 14:25:59.835" level="INFO">${random} = 51368</msg>
<status status="PASS" starttime="20230915 14:25:59.834" endtime="20230915 14:25:59.835"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${volume_name}</arg>
<arg>${random}-volume-for-prepare</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230915 14:25:59.836" level="INFO">${volume_name} = 51368-volume-for-prepare</msg>
<status status="PASS" starttime="20230915 14:25:59.835" endtime="20230915 14:25:59.836"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${bucket_name}</arg>
<arg>${random}-bucket-for-prepare</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230915 14:25:59.838" level="INFO">${bucket_name} = 51368-bucket-for-prepare</msg>
<status status="PASS" starttime="20230915 14:25:59.836" endtime="20230915 14:25:59.838"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create /${volume_name}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 14:25:59.841" level="INFO">Running command 'ozone sh volume create /51368-volume-for-prepare 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 14:26:02.749" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 14:26:02.749" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230915 14:25:59.839" endtime="20230915 14:26:02.749"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 14:26:02.750" level="INFO"/>
<status status="PASS" starttime="20230915 14:26:02.750" endtime="20230915 14:26:02.750"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 14:26:02.751" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 14:26:02.750" endtime="20230915 14:26:02.751"/>
</kw>
<status status="PASS" starttime="20230915 14:25:59.839" endtime="20230915 14:26:02.751"/>
</kw>
<msg timestamp="20230915 14:26:02.751" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 14:25:59.838" endtime="20230915 14:26:02.751"/>
</kw>
<status status="PASS" starttime="20230915 14:25:59.838" endtime="20230915 14:26:02.751"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create /${volume_name}/${bucket_name}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 14:26:02.756" level="INFO">Running command 'ozone sh bucket create /51368-volume-for-prepare/51368-bucket-for-prepare 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 14:26:05.915" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 14:26:05.915" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230915 14:26:02.753" endtime="20230915 14:26:05.915"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 14:26:05.916" level="INFO"/>
<status status="PASS" starttime="20230915 14:26:05.916" endtime="20230915 14:26:05.916"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 14:26:05.917" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 14:26:05.916" endtime="20230915 14:26:05.917"/>
</kw>
<status status="PASS" starttime="20230915 14:26:02.753" endtime="20230915 14:26:05.917"/>
</kw>
<msg timestamp="20230915 14:26:05.917" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 14:26:02.752" endtime="20230915 14:26:05.917"/>
</kw>
<status status="PASS" starttime="20230915 14:26:02.752" endtime="20230915 14:26:05.917"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put /${volume_name}/${bucket_name}/prepare-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 14:26:05.922" level="INFO">Running command 'ozone sh key put /51368-volume-for-prepare/51368-bucket-for-prepare/prepare-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 14:26:10.961" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 14:26:10.961" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230915 14:26:05.919" endtime="20230915 14:26:10.962"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 14:26:10.963" level="INFO"/>
<status status="PASS" starttime="20230915 14:26:10.962" endtime="20230915 14:26:10.963"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 14:26:10.963" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 14:26:10.963" endtime="20230915 14:26:10.963"/>
</kw>
<status status="PASS" starttime="20230915 14:26:05.918" endtime="20230915 14:26:10.964"/>
</kw>
<msg timestamp="20230915 14:26:10.964" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 14:26:05.918" endtime="20230915 14:26:10.964"/>
</kw>
<status status="PASS" starttime="20230915 14:26:05.918" endtime="20230915 14:26:10.964"/>
</kw>
<status status="PASS" starttime="20230915 14:25:46.586" endtime="20230915 14:26:10.964"/>
</kw>
<test id="s1-s3-t1" name="Prepare Ozone Manager" line="39">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230915 14:26:10.965" endtime="20230915 14:26:10.966"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om prepare -id=omservice</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 14:26:10.970" level="INFO">Running command 'ozone admin om prepare -id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 14:26:19.233" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 14:26:19.233" level="INFO">${output} = Ozone Manager Prepare Request successfully returned with Transaction Id : [833].

Checking individual OM instances for prepare request completion...
OM : [om1], Prepare Status : [PREPARE_COMPLETED], C...</msg>
<status status="PASS" starttime="20230915 14:26:10.968" endtime="20230915 14:26:19.233"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 14:26:19.234" level="INFO">Ozone Manager Prepare Request successfully returned with Transaction Id : [833].

Checking individual OM instances for prepare request completion...
OM : [om1], Prepare Status : [PREPARE_COMPLETED], Current Transaction Id : [833]
OM : [om3], Prepare Status : [PREPARE_COMPLETED], Current Transaction Id : [833]
OM : [om2], Prepare Status : [PREPARE_COMPLETED], Current Transaction Id : [833]

OM Preparation successful! 
All OMs are prepared
No new write requests will be allowed until preparation is cancelled or upgrade/downgrade is done.</msg>
<status status="PASS" starttime="20230915 14:26:19.233" endtime="20230915 14:26:19.234"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 14:26:19.235" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 14:26:19.234" endtime="20230915 14:26:19.235"/>
</kw>
<status status="PASS" starttime="20230915 14:26:10.967" endtime="20230915 14:26:19.235"/>
</kw>
<msg timestamp="20230915 14:26:19.235" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 14:26:10.966" endtime="20230915 14:26:19.235"/>
</kw>
<msg timestamp="20230915 14:26:19.235" level="INFO">${result} = Ozone Manager Prepare Request successfully returned with Transaction Id : [833].

Checking individual OM instances for prepare request completion...
OM : [om1], Prepare Status : [PREPARE_COMPLETED], C...</msg>
<status status="PASS" starttime="20230915 14:26:10.966" endtime="20230915 14:26:19.235"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>OM Preparation successful!</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>OM Preparation successful!</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 14:26:19.236" endtime="20230915 14:26:19.236"/>
</kw>
<status status="PASS" starttime="20230915 14:26:19.235" endtime="20230915 14:26:19.236"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230915 14:26:10.964" endtime="20230915 14:26:19.237"/>
</test>
<test id="s1-s3-t2" name="Checks if the expected data is present in OM" line="43">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230915 14:26:19.239" endtime="20230915 14:26:19.239"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info /${volume_name}/${bucket_name}/prepare-key</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 14:26:19.244" level="INFO">Running command 'ozone sh key info /51368-volume-for-prepare/51368-bucket-for-prepare/prepare-key 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 14:26:22.601" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 14:26:22.601" level="INFO">${output} = {
  "volumeName" : "51368-volume-for-prepare",
  "bucketName" : "51368-bucket-for-prepare",
  "name" : "prepare-key",
  "dataSize" : 17289,
  "creationTime" : "2023-09-15T14:26:08.815Z",
  "modificati...</msg>
<status status="PASS" starttime="20230915 14:26:19.241" endtime="20230915 14:26:22.602"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 14:26:22.603" level="INFO">{
  "volumeName" : "51368-volume-for-prepare",
  "bucketName" : "51368-bucket-for-prepare",
  "name" : "prepare-key",
  "dataSize" : 17289,
  "creationTime" : "2023-09-15T14:26:08.815Z",
  "modificationTime" : "2023-09-15T14:26:10.590Z",
  "replicationConfig" : {
    "replicationFactor" : "ONE",
    "requiredNodes" : 1,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "ozoneKeyLocations" : [ {
    "containerID" : 6,
    "localID" : 111677748019200204,
    "length" : 17289,
    "offset" : 0,
    "keyOffset" : 0
  } ],
  "file" : true
}</msg>
<status status="PASS" starttime="20230915 14:26:22.602" endtime="20230915 14:26:22.603"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 14:26:22.604" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 14:26:22.603" endtime="20230915 14:26:22.604"/>
</kw>
<status status="PASS" starttime="20230915 14:26:19.241" endtime="20230915 14:26:22.604"/>
</kw>
<msg timestamp="20230915 14:26:22.604" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 14:26:19.240" endtime="20230915 14:26:22.604"/>
</kw>
<msg timestamp="20230915 14:26:22.604" level="INFO">${result} = {
  "volumeName" : "51368-volume-for-prepare",
  "bucketName" : "51368-bucket-for-prepare",
  "name" : "prepare-key",
  "dataSize" : 17289,
  "creationTime" : "2023-09-15T14:26:08.815Z",
  "modificati...</msg>
<status status="PASS" starttime="20230915 14:26:19.240" endtime="20230915 14:26:22.604"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"name\" : \"prepare-key\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 14:26:22.604" endtime="20230915 14:26:22.605"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230915 14:26:19.238" endtime="20230915 14:26:22.605"/>
</test>
<test id="s1-s3-t3" name="Test write operation fails" line="47">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230915 14:26:22.607" endtime="20230915 14:26:22.607"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh key put /${volume_name}/${bucket_name}/prepare-key2 /opt/hadoop/NOTICE.txt</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 14:26:22.611" level="INFO">Running command 'ozone sh key put /51368-volume-for-prepare/51368-bucket-for-prepare/prepare-key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 14:26:25.739" level="INFO">${rc} = 255</msg>
<msg timestamp="20230915 14:26:25.739" level="INFO">${output} = NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateKey when OM is in prepare mode.</msg>
<status status="PASS" starttime="20230915 14:26:22.608" endtime="20230915 14:26:25.739"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 14:26:25.741" level="INFO">NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateKey when OM is in prepare mode.</msg>
<status status="PASS" starttime="20230915 14:26:25.740" endtime="20230915 14:26:25.741"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 14:26:25.742" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 14:26:25.741" endtime="20230915 14:26:25.742"/>
</kw>
<msg timestamp="20230915 14:26:25.742" level="INFO">${result} = NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateKey when OM is in prepare mode.</msg>
<status status="PASS" starttime="20230915 14:26:22.608" endtime="20230915 14:26:25.742"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>OM is in prepare mode</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 14:26:25.742" endtime="20230915 14:26:25.743"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>ozone sh key info /${volume_name}/${bucket_name}/prepare-key2</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 14:26:25.746" level="INFO">Running command 'ozone sh key info /51368-volume-for-prepare/51368-bucket-for-prepare/prepare-key2 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 14:26:28.526" level="INFO">${rc} = 255</msg>
<msg timestamp="20230915 14:26:28.526" level="INFO">${output} = KEY_NOT_FOUND Key:prepare-key2 not found</msg>
<status status="PASS" starttime="20230915 14:26:25.744" endtime="20230915 14:26:28.526"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 14:26:28.527" level="INFO">KEY_NOT_FOUND Key:prepare-key2 not found</msg>
<status status="PASS" starttime="20230915 14:26:28.526" endtime="20230915 14:26:28.527"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 14:26:28.528" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 14:26:28.527" endtime="20230915 14:26:28.528"/>
</kw>
<status status="PASS" starttime="20230915 14:26:25.743" endtime="20230915 14:26:28.528"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230915 14:26:22.606" endtime="20230915 14:26:28.528"/>
</test>
<doc>Smoke test to test preparing OMs in an OM HA cluster.</doc>
<status status="PASS" starttime="20230915 14:25:46.526" endtime="20230915 14:26:28.530"/>
</suite>
<suite id="s1-s4" name="Om-Prepared" source="/opt/hadoop/smoketest/omha/om-prepared.robot">
<test id="s1-s4-t1" name="Test create volume fails" line="26">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230915 14:26:31.206" endtime="20230915 14:26:31.206"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230915 14:26:31.207" level="INFO">${random} = 58639</msg>
<status status="PASS" starttime="20230915 14:26:31.207" endtime="20230915 14:26:31.207"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${volume_name}</arg>
<arg>${random}-volume-for-prepare</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230915 14:26:31.209" level="INFO">${volume_name} = 58639-volume-for-prepare</msg>
<status status="PASS" starttime="20230915 14:26:31.207" endtime="20230915 14:26:31.209"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh volume create /${volume_name}</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 14:26:31.212" level="INFO">Running command 'ozone sh volume create /58639-volume-for-prepare 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 14:26:34.037" level="INFO">${rc} = 255</msg>
<msg timestamp="20230915 14:26:34.037" level="INFO">${output} = NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateVolume when OM is in prepare mode.</msg>
<status status="PASS" starttime="20230915 14:26:31.209" endtime="20230915 14:26:34.037"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 14:26:34.039" level="INFO">NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateVolume when OM is in prepare mode.</msg>
<status status="PASS" starttime="20230915 14:26:34.038" endtime="20230915 14:26:34.039"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 14:26:34.040" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 14:26:34.039" endtime="20230915 14:26:34.040"/>
</kw>
<msg timestamp="20230915 14:26:34.040" level="INFO">${result} = NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateVolume when OM is in prepare mode.</msg>
<status status="PASS" starttime="20230915 14:26:31.209" endtime="20230915 14:26:34.040"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>OM is in prepare mode</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 14:26:34.040" endtime="20230915 14:26:34.041"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh volume info /${volume_name}</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 14:26:34.045" level="INFO">Running command 'ozone sh volume info /58639-volume-for-prepare 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 14:26:37.034" level="INFO">${rc} = 255</msg>
<msg timestamp="20230915 14:26:37.035" level="INFO">${output} = VOLUME_NOT_FOUND Volume 58639-volume-for-prepare is not found</msg>
<status status="PASS" starttime="20230915 14:26:34.042" endtime="20230915 14:26:37.035"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 14:26:37.036" level="INFO">VOLUME_NOT_FOUND Volume 58639-volume-for-prepare is not found</msg>
<status status="PASS" starttime="20230915 14:26:37.035" endtime="20230915 14:26:37.036"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 14:26:37.037" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 14:26:37.036" endtime="20230915 14:26:37.037"/>
</kw>
<msg timestamp="20230915 14:26:37.037" level="INFO">${result} = VOLUME_NOT_FOUND Volume 58639-volume-for-prepare is not found</msg>
<status status="PASS" starttime="20230915 14:26:34.041" endtime="20230915 14:26:37.037"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 14:26:37.037" endtime="20230915 14:26:37.038"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230915 14:26:31.205" endtime="20230915 14:26:37.039"/>
</test>
<test id="s1-s4-t2" name="Test list volumes succeeds" line="34">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230915 14:26:37.041" endtime="20230915 14:26:37.042"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 14:26:37.059" level="INFO">Running command 'ozone sh volume list 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 14:26:40.737" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 14:26:40.737" level="INFO">${output} = [ {
  "metadata" : { },
  "name" : "17164-volume-for-cancel",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2...</msg>
<status status="PASS" starttime="20230915 14:26:37.051" endtime="20230915 14:26:40.737"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 14:26:40.739" level="INFO">[ {
  "metadata" : { },
  "name" : "17164-volume-for-cancel",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2023-09-15T14:25:32.297Z",
  "modificationTime" : "2023-09-15T14:25:32.297Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "s3v",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 0,
  "creationTime" : "2023-09-15T14:24:04.301Z",
  "modificationTime" : "2023-09-15T14:24:04.301Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "vol1",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2023-09-15T14:24:39.483Z",
  "modificationTime" : "2023-09-15T14:24:39.483Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "51368-volume-for-prepare",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2023-09-15T14:26:02.714Z",
  "modificationTime" : "2023-09-15T14:26:02.714Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "81123-volume-for-prepare",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2023-09-15T14:24:57.224Z",
  "modificationTime" : "2023-09-15T14:24:57.224Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "refCount" : 0
} ]</msg>
<status status="PASS" starttime="20230915 14:26:40.738" endtime="20230915 14:26:40.739"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 14:26:40.740" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 14:26:40.739" endtime="20230915 14:26:40.740"/>
</kw>
<status status="PASS" starttime="20230915 14:26:37.050" endtime="20230915 14:26:40.740"/>
</kw>
<msg timestamp="20230915 14:26:40.740" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 14:26:37.043" endtime="20230915 14:26:40.740"/>
</kw>
<msg timestamp="20230915 14:26:40.740" level="INFO">${result} = [ {
  "metadata" : { },
  "name" : "17164-volume-for-cancel",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2...</msg>
<status status="PASS" starttime="20230915 14:26:37.042" endtime="20230915 14:26:40.740"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230915 14:26:37.040" endtime="20230915 14:26:40.741"/>
</test>
<doc>Smoke test to test that OMs are prepared in an OM HA cluster.</doc>
<status status="PASS" starttime="20230915 14:26:31.154" endtime="20230915 14:26:40.742"/>
</suite>
<suite id="s1-s5" name="Om-Prepared" source="/opt/hadoop/smoketest/omha/om-prepared.robot">
<test id="s1-s5-t1" name="Test create volume fails" line="26">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230915 14:28:12.092" endtime="20230915 14:28:12.092"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230915 14:28:12.093" level="INFO">${random} = 76116</msg>
<status status="PASS" starttime="20230915 14:28:12.092" endtime="20230915 14:28:12.093"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${volume_name}</arg>
<arg>${random}-volume-for-prepare</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230915 14:28:12.094" level="INFO">${volume_name} = 76116-volume-for-prepare</msg>
<status status="PASS" starttime="20230915 14:28:12.093" endtime="20230915 14:28:12.095"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh volume create /${volume_name}</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 14:28:12.098" level="INFO">Running command 'ozone sh volume create /76116-volume-for-prepare 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 14:28:15.682" level="INFO">${rc} = 255</msg>
<msg timestamp="20230915 14:28:15.682" level="INFO">${output} = NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateVolume when OM is in prepare mode.</msg>
<status status="PASS" starttime="20230915 14:28:12.095" endtime="20230915 14:28:15.682"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 14:28:15.684" level="INFO">NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateVolume when OM is in prepare mode.</msg>
<status status="PASS" starttime="20230915 14:28:15.683" endtime="20230915 14:28:15.684"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 14:28:15.684" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 14:28:15.684" endtime="20230915 14:28:15.684"/>
</kw>
<msg timestamp="20230915 14:28:15.684" level="INFO">${result} = NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateVolume when OM is in prepare mode.</msg>
<status status="PASS" starttime="20230915 14:28:12.095" endtime="20230915 14:28:15.685"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>OM is in prepare mode</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 14:28:15.685" endtime="20230915 14:28:15.685"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh volume info /${volume_name}</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 14:28:15.688" level="INFO">Running command 'ozone sh volume info /76116-volume-for-prepare 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 14:28:18.864" level="INFO">${rc} = 255</msg>
<msg timestamp="20230915 14:28:18.864" level="INFO">${output} = VOLUME_NOT_FOUND Volume 76116-volume-for-prepare is not found</msg>
<status status="PASS" starttime="20230915 14:28:15.686" endtime="20230915 14:28:18.864"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 14:28:18.865" level="INFO">VOLUME_NOT_FOUND Volume 76116-volume-for-prepare is not found</msg>
<status status="PASS" starttime="20230915 14:28:18.864" endtime="20230915 14:28:18.865"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 14:28:18.866" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 14:28:18.865" endtime="20230915 14:28:18.866"/>
</kw>
<msg timestamp="20230915 14:28:18.866" level="INFO">${result} = VOLUME_NOT_FOUND Volume 76116-volume-for-prepare is not found</msg>
<status status="PASS" starttime="20230915 14:28:15.685" endtime="20230915 14:28:18.866"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 14:28:18.867" endtime="20230915 14:28:18.867"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230915 14:28:12.091" endtime="20230915 14:28:18.867"/>
</test>
<test id="s1-s5-t2" name="Test list volumes succeeds" line="34">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230915 14:28:18.869" endtime="20230915 14:28:18.869"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 14:28:18.873" level="INFO">Running command 'ozone sh volume list 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 14:28:22.555" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 14:28:22.555" level="INFO">${output} = [ {
  "metadata" : { },
  "name" : "17164-volume-for-cancel",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2...</msg>
<status status="PASS" starttime="20230915 14:28:18.870" endtime="20230915 14:28:22.555"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 14:28:22.556" level="INFO">[ {
  "metadata" : { },
  "name" : "17164-volume-for-cancel",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2023-09-15T14:25:32.297Z",
  "modificationTime" : "2023-09-15T14:25:32.297Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "s3v",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 0,
  "creationTime" : "2023-09-15T14:24:05.019Z",
  "modificationTime" : "2023-09-15T14:24:05.019Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "vol1",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2023-09-15T14:24:39.483Z",
  "modificationTime" : "2023-09-15T14:24:39.483Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "51368-volume-for-prepare",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2023-09-15T14:26:02.714Z",
  "modificationTime" : "2023-09-15T14:26:02.714Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "81123-volume-for-prepare",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2023-09-15T14:24:57.224Z",
  "modificationTime" : "2023-09-15T14:24:57.224Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "refCount" : 0
} ]</msg>
<status status="PASS" starttime="20230915 14:28:22.555" endtime="20230915 14:28:22.556"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 14:28:22.557" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 14:28:22.556" endtime="20230915 14:28:22.557"/>
</kw>
<status status="PASS" starttime="20230915 14:28:18.870" endtime="20230915 14:28:22.557"/>
</kw>
<msg timestamp="20230915 14:28:22.557" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 14:28:18.870" endtime="20230915 14:28:22.557"/>
</kw>
<msg timestamp="20230915 14:28:22.558" level="INFO">${result} = [ {
  "metadata" : { },
  "name" : "17164-volume-for-cancel",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2...</msg>
<status status="PASS" starttime="20230915 14:28:18.869" endtime="20230915 14:28:22.558"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230915 14:28:18.868" endtime="20230915 14:28:22.558"/>
</test>
<doc>Smoke test to test that OMs are prepared in an OM HA cluster.</doc>
<status status="PASS" starttime="20230915 14:28:12.041" endtime="20230915 14:28:22.559"/>
</suite>
<suite id="s1-s6" name="Loaddata" source="/opt/hadoop/smoketest/topology/loaddata.robot">
<test id="s1-s6-t1" name="Create a volume, bucket and key" line="27">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create topvol1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 14:29:55.533" level="INFO">Running command 'ozone sh volume create topvol1 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 14:29:58.774" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 14:29:58.774" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230915 14:29:55.531" endtime="20230915 14:29:58.774"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 14:29:58.776" level="INFO"/>
<status status="PASS" starttime="20230915 14:29:58.775" endtime="20230915 14:29:58.776"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 14:29:58.777" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 14:29:58.776" endtime="20230915 14:29:58.777"/>
</kw>
<status status="PASS" starttime="20230915 14:29:55.530" endtime="20230915 14:29:58.777"/>
</kw>
<msg timestamp="20230915 14:29:58.777" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 14:29:55.530" endtime="20230915 14:29:58.777"/>
</kw>
<msg timestamp="20230915 14:29:58.777" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230915 14:29:55.529" endtime="20230915 14:29:58.777"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 14:29:58.778" endtime="20230915 14:29:58.778"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /topvol1/bucket1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 14:29:58.782" level="INFO">Running command 'ozone sh bucket create /topvol1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 14:30:02.251" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 14:30:02.251" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230915 14:29:58.779" endtime="20230915 14:30:02.251"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 14:30:02.252" level="INFO"/>
<status status="PASS" starttime="20230915 14:30:02.251" endtime="20230915 14:30:02.252"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 14:30:02.252" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 14:30:02.252" endtime="20230915 14:30:02.253"/>
</kw>
<status status="PASS" starttime="20230915 14:29:58.779" endtime="20230915 14:30:02.254"/>
</kw>
<msg timestamp="20230915 14:30:02.254" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 14:29:58.779" endtime="20230915 14:30:02.254"/>
</kw>
<msg timestamp="20230915 14:30:02.254" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230915 14:29:58.778" endtime="20230915 14:30:02.254"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 14:30:02.254" endtime="20230915 14:30:02.255"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /topvol1/bucket1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 14:30:02.259" level="INFO">Running command 'ozone sh key put /topvol1/bucket1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 14:30:08.355" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 14:30:08.356" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230915 14:30:02.257" endtime="20230915 14:30:08.356"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 14:30:08.357" level="INFO"/>
<status status="PASS" starttime="20230915 14:30:08.356" endtime="20230915 14:30:08.357"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 14:30:08.357" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 14:30:08.357" endtime="20230915 14:30:08.358"/>
</kw>
<status status="PASS" starttime="20230915 14:30:02.256" endtime="20230915 14:30:08.358"/>
</kw>
<msg timestamp="20230915 14:30:08.358" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 14:30:02.256" endtime="20230915 14:30:08.358"/>
</kw>
<msg timestamp="20230915 14:30:08.358" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230915 14:30:02.255" endtime="20230915 14:30:08.358"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 14:30:08.358" endtime="20230915 14:30:08.359"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230915 14:29:55.529" endtime="20230915 14:30:08.359"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20230915 14:29:55.479" endtime="20230915 14:30:08.360"/>
</suite>
<suite id="s1-s7" name="Readdata" source="/opt/hadoop/smoketest/topology/readdata.robot">
<test id="s1-s7-t1" name="Read data from previously created key" line="27">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230915 14:30:11.121" level="INFO">${random} = 13305</msg>
<status status="PASS" starttime="20230915 14:30:11.120" endtime="20230915 14:30:11.121"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /topvol1/bucket1/key1 /tmp/key1-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 14:30:11.125" level="INFO">Running command 'ozone sh key get /topvol1/bucket1/key1 /tmp/key1-13305 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 14:30:16.313" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 14:30:16.313" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230915 14:30:11.122" endtime="20230915 14:30:16.313"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 14:30:16.315" level="INFO"/>
<status status="PASS" starttime="20230915 14:30:16.314" endtime="20230915 14:30:16.315"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 14:30:16.315" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 14:30:16.315" endtime="20230915 14:30:16.316"/>
</kw>
<status status="PASS" starttime="20230915 14:30:11.122" endtime="20230915 14:30:16.316"/>
</kw>
<msg timestamp="20230915 14:30:16.316" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 14:30:11.122" endtime="20230915 14:30:16.316"/>
</kw>
<msg timestamp="20230915 14:30:16.316" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230915 14:30:11.121" endtime="20230915 14:30:16.316"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 14:30:16.316" endtime="20230915 14:30:16.317"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230915 14:30:11.119" endtime="20230915 14:30:16.317"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20230915 14:30:11.069" endtime="20230915 14:30:16.318"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="145146"/>
</suite>
<statistics>
<total>
<stat pass="14" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="14" fail="0" skip="0" id="s1" name="ozone-om-prepare">ozone-om-prepare</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1" name="Om-Prepare">ozone-om-prepare.Om-Prepare</stat>
<stat pass="2" fail="0" skip="0" id="s1-s2" name="Om-Cancel-Prepare">ozone-om-prepare.Om-Cancel-Prepare</stat>
<stat pass="3" fail="0" skip="0" id="s1-s3" name="Om-Prepare">ozone-om-prepare.Om-Prepare</stat>
<stat pass="2" fail="0" skip="0" id="s1-s4" name="Om-Prepared">ozone-om-prepare.Om-Prepared</stat>
<stat pass="2" fail="0" skip="0" id="s1-s5" name="Om-Prepared">ozone-om-prepare.Om-Prepared</stat>
<stat pass="1" fail="0" skip="0" id="s1-s6" name="Loaddata">ozone-om-prepare.Loaddata</stat>
<stat pass="1" fail="0" skip="0" id="s1-s7" name="Readdata">ozone-om-prepare.Readdata</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
