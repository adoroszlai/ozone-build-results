<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 6.1.1 (Python 3.8.10 on linux)" generated="20230915 14:52:05.103" rpa="false" schemaversion="4">
<suite id="s1" name="restart">
<suite id="s1-s1" name="Generate" source="/opt/hadoop/smoketest/freon/generate.robot">
<test id="s1-s1-t1" name="Ozone Client Key Generator" line="25">
<kw name="Freon OCKG" library="freon">
<arg>prefix=ockg${PREFIX}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 14:48:26.965" level="INFO">Running command 'ozone freon ockg  -t 1 -n1 -p ockgpre  2&gt;&amp;1'.</msg>
<msg timestamp="20230915 14:48:43.007" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 14:48:43.007" level="INFO">${output} = 2023-09-15 14:48:31,295 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-15 14:48:31,427 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230915 14:48:26.960" endtime="20230915 14:48:43.007"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 14:48:43.008" level="INFO">2023-09-15 14:48:31,295 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-15 14:48:31,427 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-09-15 14:48:31,428 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-09-15 14:48:31,512 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ockgpre and number-of-tests 1
2023-09-15 14:48:31,571 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-15 14:48:32,573 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-15 14:48:33,574 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-15 14:48:34,465 [main] INFO retry.RetryInvocationHandler: com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.ozone.om.exceptions.OMNotLeaderException): OM:om1 is not the leader. Could not determine the leader node.
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createNotLeaderException(OzoneManagerProtocolServerSideTranslatorPB.java:246)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createLeaderErrorException(OzoneManagerProtocolServerSideTranslatorPB.java:234)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitReadRequestToOM(OzoneManagerProtocolServerSideTranslatorPB.java:227)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.processRequest(OzoneManagerProtocolServerSideTranslatorPB.java:179)
	at org.apache.hadoop.hdds.server.OzoneProtocolMessageDispatcher.processRequest(OzoneProtocolMessageDispatcher.java:87)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitRequest(OzoneManagerProtocolServerSideTranslatorPB.java:148)
	at org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos$OzoneManagerService$2.callBlockingMethod(OzoneManagerProtocolProtos.java)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Server.processCall(ProtobufRpcEngine.java:484)
	at org.apache.hadoop.ipc.ProtobufRpcEngine2$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine2.java:595)
	at org.apache.hadoop.ipc.ProtobufRpcEngine2$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine2.java:573)
	at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:1227)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:1094)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:1017)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/javax.security.auth.Subject.doAs(Subject.java:423)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1899)
	at org.apache.hadoop.ipc.Server$Handler.run(Server.java:3048)
, while invoking $Proxy24.submitRequest over nodeId=null,nodeAddress=om:9862 after 1 failover attempts. Trying to failover after sleeping for 4000ms. Current retry count: 1.
2023-09-15 14:48:34,574 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-15 14:48:35,575 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-15 14:48:36,575 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-15 14:48:37,576 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-15 14:48:38,576 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-15 14:48:38,735 [main] INFO rpc.RpcClient: Creating Volume: vol1, with hadoop as owner and space quota set to -1 bytes, counts quota set to -1
2023-09-15 14:48:38,871 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Encryption set to false, Replication Type set to server-side default replication type, Namespace Quota set to -1, Space Quota set to -1 
2023-09-15 14:48:39,577 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-15 14:48:39,921 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2023-09-15 14:48:40,301 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2023-09-15 14:48:40,578 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-15 14:48:41,579 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-15 14:48:42,579 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2023-09-15 14:48:42,630 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=1, min=2706.993353, max=2706.993353, mean=2706.993353, stddev=0.0, median=2706.993353, p75=2706.993353, p95=2706.993353, p98=2706.993353, p99=2706.993353, p999=2706.993353, mean_rate=0.26881049299910004, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-09-15 14:48:42,630 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 11
2023-09-15 14:48:42,631 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-09-15 14:48:42,631 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20230915 14:48:43.007" endtime="20230915 14:48:43.008"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 14:48:43.009" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 14:48:43.008" endtime="20230915 14:48:43.009"/>
</kw>
<status status="PASS" starttime="20230915 14:48:26.959" endtime="20230915 14:48:43.009"/>
</kw>
<msg timestamp="20230915 14:48:43.009" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 14:48:26.959" endtime="20230915 14:48:43.009"/>
</kw>
<msg timestamp="20230915 14:48:43.010" level="INFO">${result} = 2023-09-15 14:48:31,295 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-15 14:48:31,427 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230915 14:48:26.957" endtime="20230915 14:48:43.010"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 14:48:43.010" endtime="20230915 14:48:43.011"/>
</kw>
<status status="PASS" starttime="20230915 14:48:26.956" endtime="20230915 14:48:43.011"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230915 14:48:26.952" endtime="20230915 14:48:43.011"/>
</test>
<test id="s1-s1-t2" name="OM Key Generator" line="28">
<kw name="Freon OMKG" library="freon">
<arg>prefix=omkg${PREFIX}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon omkg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 14:48:43.019" level="INFO">Running command 'ozone freon omkg  -t 1 -n1 -p omkgpre  2&gt;&amp;1'.</msg>
<msg timestamp="20230915 14:48:47.866" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 14:48:47.867" level="INFO">${output} = 2023-09-15 14:48:45,419 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-15 14:48:45,661 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230915 14:48:43.016" endtime="20230915 14:48:47.867"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 14:48:47.868" level="INFO">2023-09-15 14:48:45,419 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-15 14:48:45,661 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-09-15 14:48:45,662 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-09-15 14:48:45,751 [main] INFO freon.BaseFreonGenerator: Executing test with prefix omkgpre and number-of-tests 1
2023-09-15 14:48:45,795 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-15 14:48:46,796 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-15 14:48:47,797 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2023-09-15 14:48:47,813 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=1, min=155.110498, max=155.110498, mean=155.110498, stddev=0.0, median=155.110498, p75=155.110498, p95=155.110498, p98=155.110498, p99=155.110498, p999=155.110498, mean_rate=0.8953852366910536, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-09-15 14:48:47,814 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2023-09-15 14:48:47,814 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-09-15 14:48:47,814 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20230915 14:48:47.867" endtime="20230915 14:48:47.868"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 14:48:47.869" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 14:48:47.868" endtime="20230915 14:48:47.869"/>
</kw>
<status status="PASS" starttime="20230915 14:48:43.016" endtime="20230915 14:48:47.869"/>
</kw>
<msg timestamp="20230915 14:48:47.869" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 14:48:43.015" endtime="20230915 14:48:47.869"/>
</kw>
<msg timestamp="20230915 14:48:47.869" level="INFO">${result} = 2023-09-15 14:48:45,419 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-15 14:48:45,661 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230915 14:48:43.015" endtime="20230915 14:48:47.869"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 14:48:47.870" endtime="20230915 14:48:47.870"/>
</kw>
<status status="PASS" starttime="20230915 14:48:43.014" endtime="20230915 14:48:47.870"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230915 14:48:43.013" endtime="20230915 14:48:47.870"/>
</test>
<test id="s1-s1-t3" name="OM Bucket Generator" line="31">
<kw name="Freon OMBG" library="freon">
<arg>prefix=ombg${PREFIX}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ombg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 14:48:47.878" level="INFO">Running command 'ozone freon ombg  -t 1 -n1 -p ombgpre  2&gt;&amp;1'.</msg>
<msg timestamp="20230915 14:48:52.206" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 14:48:52.206" level="INFO">${output} = 2023-09-15 14:48:49,933 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-15 14:48:50,077 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230915 14:48:47.875" endtime="20230915 14:48:52.206"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 14:48:52.207" level="INFO">2023-09-15 14:48:49,933 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-15 14:48:50,077 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-09-15 14:48:50,077 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-09-15 14:48:50,203 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ombgpre and number-of-tests 1
2023-09-15 14:48:50,279 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-15 14:48:51,286 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2023-09-15 14:48:52,111 [shutdown-hook-0] INFO metrics: type=TIMER, name=bucket-create, count=1, min=25.114122, max=25.114122, mean=25.114122, stddev=0.0, median=25.114122, p75=25.114122, p95=25.114122, p98=25.114122, p99=25.114122, p999=25.114122, mean_rate=0.9746894343643872, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-09-15 14:48:52,112 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2023-09-15 14:48:52,112 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-09-15 14:48:52,112 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20230915 14:48:52.207" endtime="20230915 14:48:52.208"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 14:48:52.208" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 14:48:52.208" endtime="20230915 14:48:52.208"/>
</kw>
<status status="PASS" starttime="20230915 14:48:47.875" endtime="20230915 14:48:52.208"/>
</kw>
<msg timestamp="20230915 14:48:52.209" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 14:48:47.875" endtime="20230915 14:48:52.209"/>
</kw>
<msg timestamp="20230915 14:48:52.209" level="INFO">${result} = 2023-09-15 14:48:49,933 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-15 14:48:50,077 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230915 14:48:47.874" endtime="20230915 14:48:52.209"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 14:48:52.209" endtime="20230915 14:48:52.210"/>
</kw>
<status status="PASS" starttime="20230915 14:48:47.872" endtime="20230915 14:48:52.210"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230915 14:48:47.872" endtime="20230915 14:48:52.210"/>
</test>
<doc>Test freon data generation commands</doc>
<status status="PASS" starttime="20230915 14:48:26.880" endtime="20230915 14:48:52.212"/>
</suite>
<suite id="s1-s2" name="Validate-Chunk" source="/opt/hadoop/smoketest/freon/validate-chunk.robot">
<test id="s1-s2-t1" name="DN Chunk Validator" line="25">
<kw name="Freon DCV" library="freon">
<arg>prefix=dcg${PREFIX}</arg>
<arg>n=100</arg>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20230915 14:51:44.588" endtime="20230915 14:51:44.588"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon dcv -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 14:51:44.592" level="INFO">Running command 'ozone freon dcv -t 1 -n100 -p dcgpost  2&gt;&amp;1'.</msg>
<msg timestamp="20230915 14:51:50.390" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 14:51:50.390" level="INFO">${output} = 2023-09-15 14:51:46,501 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-15 14:51:46,693 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230915 14:51:44.589" endtime="20230915 14:51:50.390"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 14:51:50.392" level="INFO">2023-09-15 14:51:46,501 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-15 14:51:46,693 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-09-15 14:51:46,693 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-09-15 14:51:46,794 [main] INFO freon.BaseFreonGenerator: Executing test with prefix dcgpost and number-of-tests 100
2023-09-15 14:51:46,867 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2023-09-15 14:51:47,445 [main] INFO freon.DatanodeChunkValidator: Using pipeline PipelineID=02f4a38c-0e09-4bf7-8f40-fad574337c79
2023-09-15 14:51:47,860 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2023-09-15 14:51:47,872 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2023-09-15 14:51:48,144 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2023-09-15 14:51:48,872 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2023-09-15 14:51:49,873 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (100 out of 100)
2023-09-15 14:51:50,030 [shutdown-hook-0] INFO metrics: type=TIMER, name=chunk-validate, count=100, min=1.879423, max=13.708767, mean=4.244774765120111, stddev=2.601483697088204, median=3.29974, p75=4.655857, p95=9.427015, p98=13.17356, p99=13.659666, p999=13.708767, mean_rate=95.16718326950792, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-09-15 14:51:50,031 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2023-09-15 14:51:50,031 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-09-15 14:51:50,031 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 100</msg>
<status status="PASS" starttime="20230915 14:51:50.391" endtime="20230915 14:51:50.392"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 14:51:50.392" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 14:51:50.392" endtime="20230915 14:51:50.392"/>
</kw>
<status status="PASS" starttime="20230915 14:51:44.589" endtime="20230915 14:51:50.393"/>
</kw>
<msg timestamp="20230915 14:51:50.393" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 14:51:44.589" endtime="20230915 14:51:50.393"/>
</kw>
<msg timestamp="20230915 14:51:50.393" level="INFO">${result} = 2023-09-15 14:51:46,501 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-15 14:51:46,693 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230915 14:51:44.588" endtime="20230915 14:51:50.393"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 14:51:50.393" endtime="20230915 14:51:50.394"/>
</kw>
<status status="PASS" starttime="20230915 14:51:44.586" endtime="20230915 14:51:50.394"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230915 14:51:44.585" endtime="20230915 14:51:50.394"/>
</test>
<doc>Test freon chunk validation commands</doc>
<status status="PASS" starttime="20230915 14:51:44.538" endtime="20230915 14:51:50.396"/>
</suite>
<suite id="s1-s3" name="Validate" source="/opt/hadoop/smoketest/freon/validate.robot">
<test id="s1-s3-t1" name="Ozone Client Key Validator" line="25">
<kw name="Freon OCKV" library="freon">
<arg>prefix=ockg${PREFIX}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockv ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 14:48:55.038" level="INFO">Running command 'ozone freon ockv  -t 1 -n1 -p ockgpre  2&gt;&amp;1'.</msg>
<msg timestamp="20230915 14:49:01.206" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 14:49:01.206" level="INFO">${output} = 2023-09-15 14:48:56,933 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-15 14:48:57,059 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230915 14:48:55.035" endtime="20230915 14:49:01.206"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 14:49:01.207" level="INFO">2023-09-15 14:48:56,933 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-15 14:48:57,059 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-09-15 14:48:57,059 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-09-15 14:48:57,139 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ockgpre and number-of-tests 1
2023-09-15 14:48:57,193 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-15 14:48:58,195 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-15 14:48:58,718 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2023-09-15 14:48:59,196 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-15 14:49:00,196 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2023-09-15 14:49:00,834 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-validate, count=1, min=65.442721, max=65.442721, mean=65.442721, stddev=0.0, median=65.442721, p75=65.442721, p95=65.442721, p98=65.442721, p99=65.442721, p999=65.442721, mean_rate=0.9688067825829579, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-09-15 14:49:00,834 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 4
2023-09-15 14:49:00,835 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-09-15 14:49:00,835 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20230915 14:49:01.206" endtime="20230915 14:49:01.207"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 14:49:01.208" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 14:49:01.207" endtime="20230915 14:49:01.208"/>
</kw>
<status status="PASS" starttime="20230915 14:48:55.035" endtime="20230915 14:49:01.208"/>
</kw>
<msg timestamp="20230915 14:49:01.208" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 14:48:55.035" endtime="20230915 14:49:01.208"/>
</kw>
<msg timestamp="20230915 14:49:01.208" level="INFO">${result} = 2023-09-15 14:48:56,933 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-15 14:48:57,059 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230915 14:48:55.034" endtime="20230915 14:49:01.208"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 14:49:01.209" endtime="20230915 14:49:01.209"/>
</kw>
<status status="PASS" starttime="20230915 14:48:55.033" endtime="20230915 14:49:01.209"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230915 14:48:55.032" endtime="20230915 14:49:01.209"/>
</test>
<doc>Test freon data validation commands</doc>
<status status="PASS" starttime="20230915 14:48:54.983" endtime="20230915 14:49:01.211"/>
</suite>
<suite id="s1-s4" name="Generate-Chunk" source="/opt/hadoop/smoketest/freon/generate-chunk.robot">
<test id="s1-s4-t1" name="DN Chunk Generator" line="25">
<kw name="Freon DCG" library="freon">
<arg>prefix=dcg${PREFIX}</arg>
<arg>n=100</arg>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20230915 14:49:03.970" endtime="20230915 14:49:03.971"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon dcg -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 14:49:03.975" level="INFO">Running command 'ozone freon dcg -t 1 -n100 -p dcgpre  2&gt;&amp;1'.</msg>
<msg timestamp="20230915 14:49:14.487" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 14:49:14.487" level="INFO">${output} = 2023-09-15 14:49:05,886 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-15 14:49:06,024 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230915 14:49:03.972" endtime="20230915 14:49:14.487"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 14:49:14.489" level="INFO">2023-09-15 14:49:05,886 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-15 14:49:06,024 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-09-15 14:49:06,024 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-09-15 14:49:07,003 [main] INFO freon.BaseFreonGenerator: Executing test with prefix dcgpre and number-of-tests 100
2023-09-15 14:49:07,054 [Thread-4] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2023-09-15 14:49:08,057 [Thread-4] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2023-09-15 14:49:08,193 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2023-09-15 14:49:08,905 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2023-09-15 14:49:09,057 [Thread-4] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2023-09-15 14:49:10,058 [Thread-4] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2023-09-15 14:49:11,058 [Thread-4] INFO freon.ProgressBar: Progress: 16.00 % (16 out of 100)
2023-09-15 14:49:12,059 [Thread-4] INFO freon.ProgressBar: Progress: 47.00 % (47 out of 100)
2023-09-15 14:49:13,059 [Thread-4] INFO freon.ProgressBar: Progress: 82.00 % (82 out of 100)
2023-09-15 14:49:14,060 [Thread-4] INFO freon.ProgressBar: Progress: 100.00 % (100 out of 100)
2023-09-15 14:49:14,120 [shutdown-hook-0] INFO metrics: type=TIMER, name=chunk-write, count=100, min=13.384798, max=1665.281303, mean=47.190668449911975, stddev=160.84553515254674, median=29.63376, p75=35.108551, p95=47.327578, p98=57.871374, p99=62.080452, p999=1665.281303, mean_rate=18.15666289126339, m1=20.0, m5=20.0, m15=20.0, rate_unit=events/second, duration_unit=milliseconds
2023-09-15 14:49:14,120 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 7
2023-09-15 14:49:14,120 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-09-15 14:49:14,120 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 100</msg>
<status status="PASS" starttime="20230915 14:49:14.488" endtime="20230915 14:49:14.489"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 14:49:14.490" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 14:49:14.489" endtime="20230915 14:49:14.490"/>
</kw>
<status status="PASS" starttime="20230915 14:49:03.972" endtime="20230915 14:49:14.490"/>
</kw>
<msg timestamp="20230915 14:49:14.490" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 14:49:03.971" endtime="20230915 14:49:14.490"/>
</kw>
<msg timestamp="20230915 14:49:14.491" level="INFO">${result} = 2023-09-15 14:49:05,886 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-15 14:49:06,024 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230915 14:49:03.971" endtime="20230915 14:49:14.491"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 14:49:14.491" endtime="20230915 14:49:14.491"/>
</kw>
<status status="PASS" starttime="20230915 14:49:03.969" endtime="20230915 14:49:14.491"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230915 14:49:03.968" endtime="20230915 14:49:14.492"/>
</test>
<doc>Test freon chunk generation commands</doc>
<status status="PASS" starttime="20230915 14:49:03.920" endtime="20230915 14:49:14.494"/>
</suite>
<suite id="s1-s5" name="Validate-Chunk" source="/opt/hadoop/smoketest/freon/validate-chunk.robot">
<test id="s1-s5-t1" name="DN Chunk Validator" line="25">
<kw name="Freon DCV" library="freon">
<arg>prefix=dcg${PREFIX}</arg>
<arg>n=100</arg>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20230915 14:49:17.397" endtime="20230915 14:49:17.397"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon dcv -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 14:49:17.402" level="INFO">Running command 'ozone freon dcv -t 1 -n100 -p dcgpre  2&gt;&amp;1'.</msg>
<msg timestamp="20230915 14:49:23.528" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 14:49:23.528" level="INFO">${output} = 2023-09-15 14:49:19,522 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-15 14:49:19,716 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230915 14:49:17.399" endtime="20230915 14:49:23.528"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 14:49:23.530" level="INFO">2023-09-15 14:49:19,522 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-15 14:49:19,716 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-09-15 14:49:19,716 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-09-15 14:49:19,824 [main] INFO freon.BaseFreonGenerator: Executing test with prefix dcgpre and number-of-tests 100
2023-09-15 14:49:19,887 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2023-09-15 14:49:20,486 [main] INFO freon.DatanodeChunkValidator: Using pipeline PipelineID=fe4f60aa-ffd4-4b7b-9556-241c8251cd68
2023-09-15 14:49:20,891 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2023-09-15 14:49:21,041 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2023-09-15 14:49:21,327 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2023-09-15 14:49:21,891 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2023-09-15 14:49:22,892 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (100 out of 100)
2023-09-15 14:49:23,149 [shutdown-hook-0] INFO metrics: type=TIMER, name=chunk-validate, count=100, min=2.81366, max=13.005781, mean=4.86087427, stddev=1.8305701776588945, median=4.326193, p75=5.444417, p95=8.596386, p98=9.641009, p99=12.639973, p999=13.005781, mean_rate=94.80528958832213, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-09-15 14:49:23,149 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2023-09-15 14:49:23,150 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-09-15 14:49:23,150 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 100</msg>
<status status="PASS" starttime="20230915 14:49:23.529" endtime="20230915 14:49:23.530"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 14:49:23.530" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 14:49:23.530" endtime="20230915 14:49:23.531"/>
</kw>
<status status="PASS" starttime="20230915 14:49:17.398" endtime="20230915 14:49:23.531"/>
</kw>
<msg timestamp="20230915 14:49:23.531" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 14:49:17.398" endtime="20230915 14:49:23.531"/>
</kw>
<msg timestamp="20230915 14:49:23.531" level="INFO">${result} = 2023-09-15 14:49:19,522 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-15 14:49:19,716 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230915 14:49:17.398" endtime="20230915 14:49:23.531"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 14:49:23.531" endtime="20230915 14:49:23.532"/>
</kw>
<status status="PASS" starttime="20230915 14:49:17.396" endtime="20230915 14:49:23.532"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230915 14:49:17.395" endtime="20230915 14:49:23.532"/>
</test>
<doc>Test freon chunk validation commands</doc>
<status status="PASS" starttime="20230915 14:49:17.348" endtime="20230915 14:49:23.533"/>
</suite>
<suite id="s1-s6" name="Validate" source="/opt/hadoop/smoketest/freon/validate.robot">
<test id="s1-s6-t1" name="Ozone Client Key Validator" line="25">
<kw name="Freon OCKV" library="freon">
<arg>prefix=ockg${PREFIX}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockv ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 14:50:43.721" level="INFO">Running command 'ozone freon ockv  -t 1 -n1 -p ockgpre  2&gt;&amp;1'.</msg>
<msg timestamp="20230915 14:50:54.057" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 14:50:54.057" level="INFO">${output} = 2023-09-15 14:50:47,057 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-15 14:50:47,242 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230915 14:50:43.717" endtime="20230915 14:50:54.057"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 14:50:54.058" level="INFO">2023-09-15 14:50:47,057 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-15 14:50:47,242 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-09-15 14:50:47,245 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-09-15 14:50:47,333 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ockgpre and number-of-tests 1
2023-09-15 14:50:47,389 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-15 14:50:48,394 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-15 14:50:49,395 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-15 14:50:50,395 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-15 14:50:51,351 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2023-09-15 14:50:51,396 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-15 14:50:52,396 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-15 14:50:53,397 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2023-09-15 14:50:53,698 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-validate, count=1, min=78.591807, max=78.591807, mean=78.591807, stddev=0.0, median=78.591807, p75=78.591807, p95=78.591807, p98=78.591807, p99=78.591807, p999=78.591807, mean_rate=0.9222229752480223, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-09-15 14:50:53,704 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 6
2023-09-15 14:50:53,704 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-09-15 14:50:53,704 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20230915 14:50:54.057" endtime="20230915 14:50:54.058"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 14:50:54.059" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 14:50:54.058" endtime="20230915 14:50:54.059"/>
</kw>
<status status="PASS" starttime="20230915 14:50:43.717" endtime="20230915 14:50:54.059"/>
</kw>
<msg timestamp="20230915 14:50:54.059" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 14:50:43.717" endtime="20230915 14:50:54.059"/>
</kw>
<msg timestamp="20230915 14:50:54.059" level="INFO">${result} = 2023-09-15 14:50:47,057 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-15 14:50:47,242 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230915 14:50:43.716" endtime="20230915 14:50:54.060"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 14:50:54.060" endtime="20230915 14:50:54.060"/>
</kw>
<status status="PASS" starttime="20230915 14:50:43.714" endtime="20230915 14:50:54.060"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230915 14:50:43.713" endtime="20230915 14:50:54.060"/>
</test>
<doc>Test freon data validation commands</doc>
<status status="PASS" starttime="20230915 14:50:43.652" endtime="20230915 14:50:54.062"/>
</suite>
<suite id="s1-s7" name="Validate-Chunk" source="/opt/hadoop/smoketest/freon/validate-chunk.robot">
<test id="s1-s7-t1" name="DN Chunk Validator" line="25">
<kw name="Freon DCV" library="freon">
<arg>prefix=dcg${PREFIX}</arg>
<arg>n=100</arg>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20230915 14:50:56.978" endtime="20230915 14:50:56.978"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon dcv -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 14:50:56.983" level="INFO">Running command 'ozone freon dcv -t 1 -n100 -p dcgpre  2&gt;&amp;1'.</msg>
<msg timestamp="20230915 14:51:03.137" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 14:51:03.137" level="INFO">${output} = 2023-09-15 14:50:59,147 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-15 14:50:59,267 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230915 14:50:56.980" endtime="20230915 14:51:03.137"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 14:51:03.139" level="INFO">2023-09-15 14:50:59,147 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-15 14:50:59,267 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-09-15 14:50:59,267 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-09-15 14:50:59,352 [main] INFO freon.BaseFreonGenerator: Executing test with prefix dcgpre and number-of-tests 100
2023-09-15 14:50:59,403 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2023-09-15 14:50:59,986 [main] INFO freon.DatanodeChunkValidator: Using pipeline PipelineID=02f4a38c-0e09-4bf7-8f40-fad574337c79
2023-09-15 14:51:00,411 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2023-09-15 14:51:00,498 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2023-09-15 14:51:00,796 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2023-09-15 14:51:01,412 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2023-09-15 14:51:02,412 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (100 out of 100)
2023-09-15 14:51:02,747 [shutdown-hook-0] INFO metrics: type=TIMER, name=chunk-validate, count=100, min=2.777439, max=24.928351, mean=5.725430343049403, stddev=2.932534280721233, median=4.848268, p75=6.886297, p95=9.757737, p98=12.10307, p99=24.928351, p999=24.928351, mean_rate=94.90764201382582, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-09-15 14:51:02,748 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2023-09-15 14:51:02,748 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-09-15 14:51:02,748 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 100</msg>
<status status="PASS" starttime="20230915 14:51:03.138" endtime="20230915 14:51:03.139"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 14:51:03.139" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 14:51:03.139" endtime="20230915 14:51:03.140"/>
</kw>
<status status="PASS" starttime="20230915 14:50:56.980" endtime="20230915 14:51:03.140"/>
</kw>
<msg timestamp="20230915 14:51:03.140" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 14:50:56.979" endtime="20230915 14:51:03.140"/>
</kw>
<msg timestamp="20230915 14:51:03.140" level="INFO">${result} = 2023-09-15 14:50:59,147 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-15 14:50:59,267 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230915 14:50:56.979" endtime="20230915 14:51:03.140"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 14:51:03.140" endtime="20230915 14:51:03.141"/>
</kw>
<status status="PASS" starttime="20230915 14:50:56.976" endtime="20230915 14:51:03.141"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230915 14:50:56.976" endtime="20230915 14:51:03.141"/>
</test>
<doc>Test freon chunk validation commands</doc>
<status status="PASS" starttime="20230915 14:50:56.927" endtime="20230915 14:51:03.143"/>
</suite>
<suite id="s1-s8" name="Generate" source="/opt/hadoop/smoketest/freon/generate.robot">
<test id="s1-s8-t1" name="Ozone Client Key Generator" line="25">
<kw name="Freon OCKG" library="freon">
<arg>prefix=ockg${PREFIX}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 14:51:05.969" level="INFO">Running command 'ozone freon ockg  -t 1 -n1 -p ockgpost  2&gt;&amp;1'.</msg>
<msg timestamp="20230915 14:51:12.918" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 14:51:12.918" level="INFO">${output} = 2023-09-15 14:51:08,096 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-15 14:51:08,316 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230915 14:51:05.966" endtime="20230915 14:51:12.918"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 14:51:12.925" level="INFO">2023-09-15 14:51:08,096 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-15 14:51:08,316 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-09-15 14:51:08,316 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-09-15 14:51:08,441 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ockgpost and number-of-tests 1
2023-09-15 14:51:08,497 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-15 14:51:09,505 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-15 14:51:10,368 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2023-09-15 14:51:10,508 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-15 14:51:10,703 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2023-09-15 14:51:11,509 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-15 14:51:12,510 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2023-09-15 14:51:12,556 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=1, min=2571.767402, max=2571.767402, mean=2571.767402, stddev=0.0, median=2571.767402, p75=2571.767402, p95=2571.767402, p98=2571.767402, p99=2571.767402, p999=2571.767402, mean_rate=0.308818828226411, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-09-15 14:51:12,557 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 4
2023-09-15 14:51:12,557 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-09-15 14:51:12,557 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20230915 14:51:12.919" endtime="20230915 14:51:12.925"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 14:51:12.926" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 14:51:12.925" endtime="20230915 14:51:12.926"/>
</kw>
<status status="PASS" starttime="20230915 14:51:05.966" endtime="20230915 14:51:12.926"/>
</kw>
<msg timestamp="20230915 14:51:12.927" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 14:51:05.965" endtime="20230915 14:51:12.927"/>
</kw>
<msg timestamp="20230915 14:51:12.927" level="INFO">${result} = 2023-09-15 14:51:08,096 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-15 14:51:08,316 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230915 14:51:05.965" endtime="20230915 14:51:12.927"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 14:51:12.927" endtime="20230915 14:51:12.928"/>
</kw>
<status status="PASS" starttime="20230915 14:51:05.963" endtime="20230915 14:51:12.928"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230915 14:51:05.962" endtime="20230915 14:51:12.928"/>
</test>
<test id="s1-s8-t2" name="OM Key Generator" line="28">
<kw name="Freon OMKG" library="freon">
<arg>prefix=omkg${PREFIX}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon omkg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 14:51:12.936" level="INFO">Running command 'ozone freon omkg  -t 1 -n1 -p omkgpost  2&gt;&amp;1'.</msg>
<msg timestamp="20230915 14:51:17.446" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 14:51:17.446" level="INFO">${output} = 2023-09-15 14:51:15,025 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-15 14:51:15,201 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230915 14:51:12.934" endtime="20230915 14:51:17.446"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 14:51:17.448" level="INFO">2023-09-15 14:51:15,025 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-15 14:51:15,201 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-09-15 14:51:15,201 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-09-15 14:51:15,281 [main] INFO freon.BaseFreonGenerator: Executing test with prefix omkgpost and number-of-tests 1
2023-09-15 14:51:15,353 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-15 14:51:16,360 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-15 14:51:17,361 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2023-09-15 14:51:17,381 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=1, min=106.840144, max=106.840144, mean=106.840144, stddev=0.0, median=106.840144, p75=106.840144, p95=106.840144, p98=106.840144, p99=106.840144, p999=106.840144, mean_rate=0.8957919492382651, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-09-15 14:51:17,382 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2023-09-15 14:51:17,382 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-09-15 14:51:17,382 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20230915 14:51:17.447" endtime="20230915 14:51:17.448"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 14:51:17.448" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 14:51:17.448" endtime="20230915 14:51:17.449"/>
</kw>
<status status="PASS" starttime="20230915 14:51:12.933" endtime="20230915 14:51:17.449"/>
</kw>
<msg timestamp="20230915 14:51:17.449" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 14:51:12.933" endtime="20230915 14:51:17.449"/>
</kw>
<msg timestamp="20230915 14:51:17.449" level="INFO">${result} = 2023-09-15 14:51:15,025 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-15 14:51:15,201 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230915 14:51:12.932" endtime="20230915 14:51:17.449"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 14:51:17.449" endtime="20230915 14:51:17.450"/>
</kw>
<status status="PASS" starttime="20230915 14:51:12.930" endtime="20230915 14:51:17.450"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230915 14:51:12.930" endtime="20230915 14:51:17.450"/>
</test>
<test id="s1-s8-t3" name="OM Bucket Generator" line="31">
<kw name="Freon OMBG" library="freon">
<arg>prefix=ombg${PREFIX}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ombg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 14:51:17.457" level="INFO">Running command 'ozone freon ombg  -t 1 -n1 -p ombgpost  2&gt;&amp;1'.</msg>
<msg timestamp="20230915 14:51:21.379" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 14:51:21.380" level="INFO">${output} = 2023-09-15 14:51:19,240 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-15 14:51:19,393 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230915 14:51:17.454" endtime="20230915 14:51:21.380"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 14:51:21.381" level="INFO">2023-09-15 14:51:19,240 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-15 14:51:19,393 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-09-15 14:51:19,393 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-09-15 14:51:19,478 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ombgpost and number-of-tests 1
2023-09-15 14:51:19,531 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-15 14:51:20,537 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2023-09-15 14:51:21,296 [shutdown-hook-0] INFO metrics: type=TIMER, name=bucket-create, count=1, min=29.973333, max=29.973333, mean=29.973333, stddev=0.0, median=29.973333, p75=29.973333, p95=29.973333, p98=29.973333, p99=29.973333, p999=29.973333, mean_rate=0.9826962780819699, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-09-15 14:51:21,298 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2023-09-15 14:51:21,298 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-09-15 14:51:21,298 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20230915 14:51:21.380" endtime="20230915 14:51:21.381"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 14:51:21.382" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 14:51:21.381" endtime="20230915 14:51:21.382"/>
</kw>
<status status="PASS" starttime="20230915 14:51:17.454" endtime="20230915 14:51:21.382"/>
</kw>
<msg timestamp="20230915 14:51:21.382" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 14:51:17.454" endtime="20230915 14:51:21.382"/>
</kw>
<msg timestamp="20230915 14:51:21.383" level="INFO">${result} = 2023-09-15 14:51:19,240 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-15 14:51:19,393 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230915 14:51:17.453" endtime="20230915 14:51:21.383"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 14:51:21.383" endtime="20230915 14:51:21.383"/>
</kw>
<status status="PASS" starttime="20230915 14:51:17.452" endtime="20230915 14:51:21.383"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230915 14:51:17.451" endtime="20230915 14:51:21.383"/>
</test>
<doc>Test freon data generation commands</doc>
<status status="PASS" starttime="20230915 14:51:05.907" endtime="20230915 14:51:21.385"/>
</suite>
<suite id="s1-s9" name="Validate" source="/opt/hadoop/smoketest/freon/validate.robot">
<test id="s1-s9-t1" name="Ozone Client Key Validator" line="25">
<kw name="Freon OCKV" library="freon">
<arg>prefix=ockg${PREFIX}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockv ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 14:51:24.236" level="INFO">Running command 'ozone freon ockv  -t 1 -n1 -p ockgpost  2&gt;&amp;1'.</msg>
<msg timestamp="20230915 14:51:30.340" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 14:51:30.340" level="INFO">${output} = 2023-09-15 14:51:26,281 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-15 14:51:26,454 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230915 14:51:24.234" endtime="20230915 14:51:30.340"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 14:51:30.341" level="INFO">2023-09-15 14:51:26,281 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-15 14:51:26,454 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-09-15 14:51:26,454 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-09-15 14:51:26,533 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ockgpost and number-of-tests 1
2023-09-15 14:51:26,584 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-15 14:51:27,586 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-15 14:51:27,943 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2023-09-15 14:51:28,586 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-15 14:51:29,587 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2023-09-15 14:51:29,975 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-validate, count=1, min=60.219071, max=60.219071, mean=60.219071, stddev=0.0, median=60.219071, p75=60.219071, p95=60.219071, p98=60.219071, p99=60.219071, p999=60.219071, mean_rate=0.9698556949868703, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-09-15 14:51:29,976 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2023-09-15 14:51:29,976 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-09-15 14:51:29,976 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20230915 14:51:30.340" endtime="20230915 14:51:30.341"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 14:51:30.342" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 14:51:30.341" endtime="20230915 14:51:30.342"/>
</kw>
<status status="PASS" starttime="20230915 14:51:24.233" endtime="20230915 14:51:30.342"/>
</kw>
<msg timestamp="20230915 14:51:30.342" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 14:51:24.233" endtime="20230915 14:51:30.342"/>
</kw>
<msg timestamp="20230915 14:51:30.342" level="INFO">${result} = 2023-09-15 14:51:26,281 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-15 14:51:26,454 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230915 14:51:24.232" endtime="20230915 14:51:30.342"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 14:51:30.343" endtime="20230915 14:51:30.343"/>
</kw>
<status status="PASS" starttime="20230915 14:51:24.231" endtime="20230915 14:51:30.343"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230915 14:51:24.230" endtime="20230915 14:51:30.343"/>
</test>
<doc>Test freon data validation commands</doc>
<status status="PASS" starttime="20230915 14:51:24.183" endtime="20230915 14:51:30.345"/>
</suite>
<suite id="s1-s10" name="Generate-Chunk" source="/opt/hadoop/smoketest/freon/generate-chunk.robot">
<test id="s1-s10-t1" name="DN Chunk Generator" line="25">
<kw name="Freon DCG" library="freon">
<arg>prefix=dcg${PREFIX}</arg>
<arg>n=100</arg>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20230915 14:51:33.149" endtime="20230915 14:51:33.149"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon dcg -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 14:51:33.153" level="INFO">Running command 'ozone freon dcg -t 1 -n100 -p dcgpost  2&gt;&amp;1'.</msg>
<msg timestamp="20230915 14:51:41.799" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 14:51:41.800" level="INFO">${output} = 2023-09-15 14:51:35,541 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-15 14:51:35,673 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230915 14:51:33.150" endtime="20230915 14:51:41.800"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 14:51:41.801" level="INFO">2023-09-15 14:51:35,541 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-15 14:51:35,673 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-09-15 14:51:35,673 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-09-15 14:51:36,345 [main] INFO freon.BaseFreonGenerator: Executing test with prefix dcgpost and number-of-tests 100
2023-09-15 14:51:36,392 [Thread-4] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2023-09-15 14:51:36,958 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2023-09-15 14:51:37,267 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2023-09-15 14:51:37,394 [Thread-4] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2023-09-15 14:51:38,409 [Thread-4] INFO freon.ProgressBar: Progress: 4.00 % (4 out of 100)
2023-09-15 14:51:39,411 [Thread-4] INFO freon.ProgressBar: Progress: 38.00 % (38 out of 100)
2023-09-15 14:51:40,411 [Thread-4] INFO freon.ProgressBar: Progress: 76.00 % (76 out of 100)
2023-09-15 14:51:41,412 [Thread-4] INFO freon.ProgressBar: Progress: 100.00 % (100 out of 100)
2023-09-15 14:51:41,447 [shutdown-hook-0] INFO metrics: type=TIMER, name=chunk-write, count=100, min=16.310392, max=1063.642477, mean=37.596107556136005, stddev=102.43761146593489, median=26.019408, p75=30.803864, p95=41.983386, p98=46.016042, p99=54.732163, p999=1063.642477, mean_rate=23.23559620732371, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-09-15 14:51:41,447 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 5
2023-09-15 14:51:41,447 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-09-15 14:51:41,447 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 100</msg>
<status status="PASS" starttime="20230915 14:51:41.800" endtime="20230915 14:51:41.801"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 14:51:41.802" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 14:51:41.801" endtime="20230915 14:51:41.802"/>
</kw>
<status status="PASS" starttime="20230915 14:51:33.150" endtime="20230915 14:51:41.802"/>
</kw>
<msg timestamp="20230915 14:51:41.802" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 14:51:33.150" endtime="20230915 14:51:41.803"/>
</kw>
<msg timestamp="20230915 14:51:41.803" level="INFO">${result} = 2023-09-15 14:51:35,541 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-15 14:51:35,673 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230915 14:51:33.149" endtime="20230915 14:51:41.803"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 14:51:41.803" endtime="20230915 14:51:41.804"/>
</kw>
<status status="PASS" starttime="20230915 14:51:33.147" endtime="20230915 14:51:41.804"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230915 14:51:33.146" endtime="20230915 14:51:41.804"/>
</test>
<doc>Test freon chunk generation commands</doc>
<status status="PASS" starttime="20230915 14:51:33.098" endtime="20230915 14:51:41.805"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="101150"/>
</suite>
<statistics>
<total>
<stat pass="14" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="14" fail="0" skip="0" id="s1" name="restart">restart</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1" name="Generate">restart.Generate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2" name="Validate-Chunk">restart.Validate-Chunk</stat>
<stat pass="1" fail="0" skip="0" id="s1-s3" name="Validate">restart.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s4" name="Generate-Chunk">restart.Generate-Chunk</stat>
<stat pass="1" fail="0" skip="0" id="s1-s5" name="Validate-Chunk">restart.Validate-Chunk</stat>
<stat pass="1" fail="0" skip="0" id="s1-s6" name="Validate">restart.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s7" name="Validate-Chunk">restart.Validate-Chunk</stat>
<stat pass="3" fail="0" skip="0" id="s1-s8" name="Generate">restart.Generate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s9" name="Validate">restart.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s10" name="Generate-Chunk">restart.Generate-Chunk</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
