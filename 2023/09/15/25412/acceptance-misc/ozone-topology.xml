<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 6.1.1 (Python 3.8.10 on linux)" generated="20230915 14:37:34.164" rpa="false" schemaversion="4">
<suite id="s1" name="ozone-topology">
<suite id="s1-s1" name="Basic" source="/opt/hadoop/smoketest/basic/basic.robot">
<test id="s1-s1-t1" name="Check webui static resources" line="29">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230915 14:32:22.181" endtime="20230915 14:32:22.181"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -s -I http://${SCM}:9876/static/bootstrap-3.4.1/js/bootstrap.min.js</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 14:32:22.186" level="INFO">Running command 'curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 14:32:22.414" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 14:32:22.414" level="INFO">${output} = HTTP/1.1 200 OK
Date: Fri, 15 Sep 2023 14:32:22 GMT
X-Content-Type-Options: nosniff
X-XSS-Protection: 1; mode=block
X-FRAME-OPTIONS: SAMEORIGIN
Last-Modified: Fri, 15 Sep 2023 13:48:12 GMT
Content-Typ...</msg>
<status status="PASS" starttime="20230915 14:32:22.183" endtime="20230915 14:32:22.414"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 14:32:22.416" level="INFO">HTTP/1.1 200 OK
Date: Fri, 15 Sep 2023 14:32:22 GMT
X-Content-Type-Options: nosniff
X-XSS-Protection: 1; mode=block
X-FRAME-OPTIONS: SAMEORIGIN
Last-Modified: Fri, 15 Sep 2023 13:48:12 GMT
Content-Type: application/javascript
Accept-Ranges: bytes
Content-Length: 39680
</msg>
<status status="PASS" starttime="20230915 14:32:22.414" endtime="20230915 14:32:22.416"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 14:32:22.418" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 14:32:22.418" endtime="20230915 14:32:22.419"/>
</kw>
<status status="PASS" starttime="20230915 14:32:22.183" endtime="20230915 14:32:22.419"/>
</kw>
<msg timestamp="20230915 14:32:22.420" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 14:32:22.182" endtime="20230915 14:32:22.420"/>
</kw>
<msg timestamp="20230915 14:32:22.421" level="INFO">${result} = HTTP/1.1 200 OK
Date: Fri, 15 Sep 2023 14:32:22 GMT
X-Content-Type-Options: nosniff
X-XSS-Protection: 1; mode=block
X-FRAME-OPTIONS: SAMEORIGIN
Last-Modified: Fri, 15 Sep 2023 13:48:12 GMT
Content-Typ...</msg>
<status status="PASS" starttime="20230915 14:32:22.182" endtime="20230915 14:32:22.421"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 14:32:22.421" endtime="20230915 14:32:22.422"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230915 14:32:22.180" endtime="20230915 14:32:22.423"/>
</test>
<test id="s1-s1-t2" name="Basic Freon smoketest" line="34">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230915 14:32:22.428" endtime="20230915 14:32:22.431"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>10</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230915 14:32:22.435" level="INFO">${random} = N3yDipYgdG</msg>
<status status="PASS" starttime="20230915 14:32:22.433" endtime="20230915 14:32:22.435"/>
</kw>
<kw name="Freon OCKG" library="freon">
<arg>prefix=${random}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 14:32:22.469" level="INFO">Running command 'ozone freon ockg  -t 1 -n1 -p N3yDipYgdG  2&gt;&amp;1'.</msg>
<msg timestamp="20230915 14:32:46.227" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 14:32:46.227" level="INFO">${output} = 2023-09-15 14:32:28,848 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-15 14:32:29,170 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230915 14:32:22.456" endtime="20230915 14:32:46.227"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 14:32:46.229" level="INFO">2023-09-15 14:32:28,848 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-15 14:32:29,170 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-09-15 14:32:29,170 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-09-15 14:32:29,376 [main] INFO freon.BaseFreonGenerator: Executing test with prefix N3yDipYgdG and number-of-tests 1
2023-09-15 14:32:29,508 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-15 14:32:30,524 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-15 14:32:31,524 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-15 14:32:32,525 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-15 14:32:33,525 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-15 14:32:33,705 [main] INFO retry.RetryInvocationHandler: com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.ozone.om.exceptions.OMNotLeaderException): OM:om1 is not the leader. Could not determine the leader node.
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createNotLeaderException(OzoneManagerProtocolServerSideTranslatorPB.java:246)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createLeaderErrorException(OzoneManagerProtocolServerSideTranslatorPB.java:234)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitReadRequestToOM(OzoneManagerProtocolServerSideTranslatorPB.java:227)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.processRequest(OzoneManagerProtocolServerSideTranslatorPB.java:179)
	at org.apache.hadoop.hdds.server.OzoneProtocolMessageDispatcher.processRequest(OzoneProtocolMessageDispatcher.java:87)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitRequest(OzoneManagerProtocolServerSideTranslatorPB.java:148)
	at org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos$OzoneManagerService$2.callBlockingMethod(OzoneManagerProtocolProtos.java)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Server.processCall(ProtobufRpcEngine.java:484)
	at org.apache.hadoop.ipc.ProtobufRpcEngine2$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine2.java:595)
	at org.apache.hadoop.ipc.ProtobufRpcEngine2$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine2.java:573)
	at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:1227)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:1094)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:1017)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/javax.security.auth.Subject.doAs(Subject.java:423)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1899)
	at org.apache.hadoop.ipc.Server$Handler.run(Server.java:3048)
, while invoking $Proxy25.submitRequest over nodeId=null,nodeAddress=om:9862 after 1 failover attempts. Trying to failover after sleeping for 4000ms. Current retry count: 1.
2023-09-15 14:32:34,526 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-15 14:32:35,526 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-15 14:32:36,527 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-15 14:32:37,527 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-15 14:32:38,528 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-15 14:32:39,018 [main] INFO rpc.RpcClient: Creating Volume: vol1, with hadoop as owner and space quota set to -1 bytes, counts quota set to -1
2023-09-15 14:32:39,364 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Encryption set to false, Replication Type set to server-side default replication type, Namespace Quota set to -1, Space Quota set to -1 
2023-09-15 14:32:39,529 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-15 14:32:40,529 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-15 14:32:40,969 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2023-09-15 14:32:41,436 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2023-09-15 14:32:41,530 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-15 14:32:42,530 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-15 14:32:43,531 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-15 14:32:44,532 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-15 14:32:45,532 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2023-09-15 14:32:45,840 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=1, min=4997.218594, max=4997.218594, mean=4997.218594, stddev=0.0, median=4997.218594, p75=4997.218594, p95=4997.218594, p98=4997.218594, p99=4997.218594, p999=4997.218594, mean_rate=0.1591905861172158, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-09-15 14:32:45,840 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 16
2023-09-15 14:32:45,841 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-09-15 14:32:45,841 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20230915 14:32:46.228" endtime="20230915 14:32:46.229"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 14:32:46.230" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 14:32:46.229" endtime="20230915 14:32:46.230"/>
</kw>
<status status="PASS" starttime="20230915 14:32:22.454" endtime="20230915 14:32:46.230"/>
</kw>
<msg timestamp="20230915 14:32:46.230" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 14:32:22.453" endtime="20230915 14:32:46.230"/>
</kw>
<msg timestamp="20230915 14:32:46.230" level="INFO">${result} = 2023-09-15 14:32:28,848 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-15 14:32:29,170 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230915 14:32:22.443" endtime="20230915 14:32:46.230"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 14:32:46.230" endtime="20230915 14:32:46.231"/>
</kw>
<status status="PASS" starttime="20230915 14:32:22.435" endtime="20230915 14:32:46.231"/>
</kw>
<kw name="Freon OCKV" library="freon">
<arg>prefix=${random}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockv ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 14:32:46.237" level="INFO">Running command 'ozone freon ockv  -t 1 -n1 -p N3yDipYgdG  2&gt;&amp;1'.</msg>
<msg timestamp="20230915 14:32:55.769" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 14:32:55.769" level="INFO">${output} = 2023-09-15 14:32:49,471 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-15 14:32:49,643 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230915 14:32:46.234" endtime="20230915 14:32:55.769"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 14:32:55.770" level="INFO">2023-09-15 14:32:49,471 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-15 14:32:49,643 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-09-15 14:32:49,644 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-09-15 14:32:49,737 [main] INFO freon.BaseFreonGenerator: Executing test with prefix N3yDipYgdG and number-of-tests 1
2023-09-15 14:32:49,801 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-15 14:32:50,809 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-15 14:32:51,809 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-15 14:32:52,321 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2023-09-15 14:32:52,810 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-15 14:32:53,814 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-15 14:32:54,815 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2023-09-15 14:32:55,352 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-validate, count=1, min=172.084174, max=172.084174, mean=172.084174, stddev=0.0, median=172.084174, p75=172.084174, p95=172.084174, p98=172.084174, p99=172.084174, p999=172.084174, mean_rate=0.6898784499088823, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-09-15 14:32:55,354 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 6
2023-09-15 14:32:55,355 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-09-15 14:32:55,355 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20230915 14:32:55.769" endtime="20230915 14:32:55.770"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 14:32:55.771" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 14:32:55.770" endtime="20230915 14:32:55.771"/>
</kw>
<status status="PASS" starttime="20230915 14:32:46.233" endtime="20230915 14:32:55.771"/>
</kw>
<msg timestamp="20230915 14:32:55.771" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 14:32:46.233" endtime="20230915 14:32:55.771"/>
</kw>
<msg timestamp="20230915 14:32:55.771" level="INFO">${result} = 2023-09-15 14:32:49,471 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-15 14:32:49,643 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230915 14:32:46.233" endtime="20230915 14:32:55.771"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 14:32:55.772" endtime="20230915 14:32:55.772"/>
</kw>
<status status="PASS" starttime="20230915 14:32:46.231" endtime="20230915 14:32:55.772"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230915 14:32:22.424" endtime="20230915 14:32:55.772"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20230915 14:32:22.034" endtime="20230915 14:32:55.774"/>
</suite>
<suite id="s1-s2" name="Cli" source="/opt/hadoop/smoketest/topology/cli.robot">
<test id="s1-s2-t1" name="Run printTopology" line="27">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin printTopology</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 14:32:58.884" level="INFO">Running command 'ozone admin printTopology 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 14:33:03.584" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 14:33:03.585" level="INFO">${output} = State = HEALTHY
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rac...</msg>
<status status="PASS" starttime="20230915 14:32:58.881" endtime="20230915 14:33:03.585"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 14:33:03.586" level="INFO">State = HEALTHY
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.9(ozone-topology_datanode_6_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.8(ozone-topology_datanode_5_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2</msg>
<status status="PASS" starttime="20230915 14:33:03.585" endtime="20230915 14:33:03.587"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 14:33:03.587" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 14:33:03.587" endtime="20230915 14:33:03.588"/>
</kw>
<status status="PASS" starttime="20230915 14:32:58.880" endtime="20230915 14:33:03.588"/>
</kw>
<msg timestamp="20230915 14:33:03.588" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 14:32:58.880" endtime="20230915 14:33:03.588"/>
</kw>
<msg timestamp="20230915 14:33:03.588" level="INFO">${output} = State = HEALTHY
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rac...</msg>
<status status="PASS" starttime="20230915 14:32:58.879" endtime="20230915 14:33:03.588"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net)</arg>
<arg>IN_SERVICE</arg>
<arg>/rack2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 14:33:03.588" endtime="20230915 14:33:03.589"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230915 14:32:58.879" endtime="20230915 14:33:03.589"/>
</test>
<test id="s1-s2-t2" name="Run printTopology -o" line="30">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin printTopology -o</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 14:33:03.595" level="INFO">Running command 'ozone admin printTopology -o 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 14:33:08.120" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 14:33:08.120" level="INFO">${output} = State = HEALTHY
Location: /rack1
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net) IN_SERVICE
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net) IN_SERVICE
 10.5.0.5(ozone-topology_data...</msg>
<status status="PASS" starttime="20230915 14:33:03.592" endtime="20230915 14:33:08.120"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 14:33:08.121" level="INFO">State = HEALTHY
Location: /rack1
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net) IN_SERVICE
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net) IN_SERVICE
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net) IN_SERVICE
Location: /rack2
 10.5.0.9(ozone-topology_datanode_6_1.ozone-topology_net) IN_SERVICE
 10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net) IN_SERVICE
 10.5.0.8(ozone-topology_datanode_5_1.ozone-topology_net) IN_SERVICE</msg>
<status status="PASS" starttime="20230915 14:33:08.120" endtime="20230915 14:33:08.121"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 14:33:08.122" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 14:33:08.121" endtime="20230915 14:33:08.122"/>
</kw>
<status status="PASS" starttime="20230915 14:33:03.592" endtime="20230915 14:33:08.122"/>
</kw>
<msg timestamp="20230915 14:33:08.122" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 14:33:03.591" endtime="20230915 14:33:08.122"/>
</kw>
<msg timestamp="20230915 14:33:08.123" level="INFO">${output} = State = HEALTHY
Location: /rack1
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net) IN_SERVICE
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net) IN_SERVICE
 10.5.0.5(ozone-topology_data...</msg>
<status status="PASS" starttime="20230915 14:33:03.591" endtime="20230915 14:33:08.123"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Location: /rack2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 14:33:08.123" endtime="20230915 14:33:08.123"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net) IN_SERVICE</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 14:33:08.123" endtime="20230915 14:33:08.124"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230915 14:33:03.590" endtime="20230915 14:33:08.124"/>
</test>
<test id="s1-s2-t3" name="Run printTopology --operational-state IN_SERVICE" line="34">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin printTopology --operational-state IN_SERVICE</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 14:33:08.130" level="INFO">Running command 'ozone admin printTopology --operational-state IN_SERVICE 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 14:33:12.525" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 14:33:12.525" level="INFO">${output} = State = HEALTHY
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rac...</msg>
<status status="PASS" starttime="20230915 14:33:08.127" endtime="20230915 14:33:12.525"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 14:33:12.527" level="INFO">State = HEALTHY
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.9(ozone-topology_datanode_6_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.8(ozone-topology_datanode_5_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2</msg>
<status status="PASS" starttime="20230915 14:33:12.526" endtime="20230915 14:33:12.527"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 14:33:12.527" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 14:33:12.527" endtime="20230915 14:33:12.527"/>
</kw>
<status status="PASS" starttime="20230915 14:33:08.127" endtime="20230915 14:33:12.528"/>
</kw>
<msg timestamp="20230915 14:33:12.528" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 14:33:08.126" endtime="20230915 14:33:12.528"/>
</kw>
<msg timestamp="20230915 14:33:12.528" level="INFO">${output} = State = HEALTHY
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rac...</msg>
<status status="PASS" starttime="20230915 14:33:08.126" endtime="20230915 14:33:12.528"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net)</arg>
<arg>IN_SERVICE</arg>
<arg>/rack2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 14:33:12.528" endtime="20230915 14:33:12.529"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230915 14:33:08.125" endtime="20230915 14:33:12.529"/>
</test>
<test id="s1-s2-t4" name="Run printTopology --node-state HEALTHY" line="37">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin printTopology --node-state HEALTHY</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 14:33:12.535" level="INFO">Running command 'ozone admin printTopology --node-state HEALTHY 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 14:33:17.500" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 14:33:17.500" level="INFO">${output} = State = HEALTHY
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rac...</msg>
<status status="PASS" starttime="20230915 14:33:12.532" endtime="20230915 14:33:17.500"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 14:33:17.501" level="INFO">State = HEALTHY
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.9(ozone-topology_datanode_6_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.8(ozone-topology_datanode_5_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2</msg>
<status status="PASS" starttime="20230915 14:33:17.501" endtime="20230915 14:33:17.501"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 14:33:17.502" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 14:33:17.502" endtime="20230915 14:33:17.502"/>
</kw>
<status status="PASS" starttime="20230915 14:33:12.532" endtime="20230915 14:33:17.502"/>
</kw>
<msg timestamp="20230915 14:33:17.502" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 14:33:12.531" endtime="20230915 14:33:17.502"/>
</kw>
<msg timestamp="20230915 14:33:17.503" level="INFO">${output} = State = HEALTHY
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rac...</msg>
<status status="PASS" starttime="20230915 14:33:12.531" endtime="20230915 14:33:17.503"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net)</arg>
<arg>IN_SERVICE</arg>
<arg>/rack2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 14:33:17.503" endtime="20230915 14:33:17.503"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230915 14:33:12.530" endtime="20230915 14:33:17.504"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20230915 14:32:58.826" endtime="20230915 14:33:17.506"/>
</suite>
<suite id="s1-s3" name="Recon" source="/opt/hadoop/smoketest/recon">
<suite id="s1-s3-s1" name="Recon-Api" source="/opt/hadoop/smoketest/recon/recon-api.robot">
<test id="s1-s3-s1-t1" name="Check if Recon picks up OM data" line="61">
<kw name="Execute" library="os">
<arg>ozone sh volume create recon</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 14:33:20.515" level="INFO">Running command 'ozone sh volume create recon 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 14:33:25.262" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 14:33:25.263" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230915 14:33:20.512" endtime="20230915 14:33:25.263"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 14:33:25.264" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230915 14:33:25.263" endtime="20230915 14:33:25.264"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 14:33:25.265" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 14:33:25.264" endtime="20230915 14:33:25.265"/>
</kw>
<status status="PASS" starttime="20230915 14:33:20.511" endtime="20230915 14:33:25.265"/>
</kw>
<msg timestamp="20230915 14:33:25.265" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 14:33:20.511" endtime="20230915 14:33:25.265"/>
</kw>
<status status="PASS" starttime="20230915 14:33:20.510" endtime="20230915 14:33:25.265"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create recon/api --layout=LEGACY</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 14:33:25.271" level="INFO">Running command 'ozone sh bucket create recon/api --layout=LEGACY 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 14:33:30.123" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 14:33:30.123" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230915 14:33:25.268" endtime="20230915 14:33:30.123"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 14:33:30.125" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230915 14:33:30.124" endtime="20230915 14:33:30.125"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 14:33:30.126" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 14:33:30.125" endtime="20230915 14:33:30.126"/>
</kw>
<status status="PASS" starttime="20230915 14:33:25.266" endtime="20230915 14:33:30.126"/>
</kw>
<msg timestamp="20230915 14:33:30.126" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 14:33:25.266" endtime="20230915 14:33:30.126"/>
</kw>
<status status="PASS" starttime="20230915 14:33:25.265" endtime="20230915 14:33:30.126"/>
</kw>
<kw name="Freon OCKG" library="freon">
<arg>n=10</arg>
<arg>args=-s 1025 -v recon -b api</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 14:33:30.131" level="INFO">Running command 'ozone freon ockg  -t 1 -n10 -p ockg -s 1025 -v recon -b api 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 14:33:42.350" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 14:33:42.350" level="INFO">${output} = 2023-09-15 14:33:32,872 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-15 14:33:32,983 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230915 14:33:30.129" endtime="20230915 14:33:42.350"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 14:33:42.351" level="INFO">2023-09-15 14:33:32,872 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-15 14:33:32,983 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-09-15 14:33:32,983 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-09-15 14:33:33,062 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ockg and number-of-tests 10
2023-09-15 14:33:33,167 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2023-09-15 14:33:34,175 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2023-09-15 14:33:35,176 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2023-09-15 14:33:35,457 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2023-09-15 14:33:36,010 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2023-09-15 14:33:36,177 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2023-09-15 14:33:37,178 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2023-09-15 14:33:38,178 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2023-09-15 14:33:39,179 [Thread-5] INFO freon.ProgressBar: Progress: 10.00 % (1 out of 10)
2023-09-15 14:33:40,188 [Thread-5] INFO freon.ProgressBar: Progress: 60.00 % (6 out of 10)
2023-09-15 14:33:41,188 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (10 out of 10)
2023-09-15 14:33:41,995 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=10, min=124.476766, max=4121.336752, mean=592.3054258361545, stddev=1169.4634544031708, median=142.696824, p75=455.157156, p95=4121.336752, p98=4121.336752, p99=4121.336752, p999=4121.336752, mean_rate=1.3609562391338335, m1=0.4, m5=0.4, m15=0.4, rate_unit=events/second, duration_unit=milliseconds
2023-09-15 14:33:41,996 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 9
2023-09-15 14:33:41,997 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-09-15 14:33:41,997 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 10</msg>
<status status="PASS" starttime="20230915 14:33:42.350" endtime="20230915 14:33:42.351"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 14:33:42.352" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 14:33:42.352" endtime="20230915 14:33:42.352"/>
</kw>
<status status="PASS" starttime="20230915 14:33:30.128" endtime="20230915 14:33:42.352"/>
</kw>
<msg timestamp="20230915 14:33:42.352" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 14:33:30.128" endtime="20230915 14:33:42.353"/>
</kw>
<msg timestamp="20230915 14:33:42.353" level="INFO">${result} = 2023-09-15 14:33:32,872 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-15 14:33:32,983 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230915 14:33:30.127" endtime="20230915 14:33:42.353"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 14:33:42.353" endtime="20230915 14:33:42.353"/>
</kw>
<status status="PASS" starttime="20230915 14:33:30.126" endtime="20230915 14:33:42.353"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Check if Recon picks up container from OM</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit as ozone admin</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230915 14:33:42.355" endtime="20230915 14:33:42.355"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/containers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 14:33:42.360" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 14:33:42.618" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 14:33:42.618" level="INFO">${output} = {"data":{"totalCount":4,"prevKey":4,"containers":[{"ContainerID":1,"NumberOfKeys":0,"pipelines":null},{"ContainerID":2,"NumberOfKeys":0,"pipelines":null},{"ContainerID":3,"NumberOfKeys":0,"pipelines":...</msg>
<status status="PASS" starttime="20230915 14:33:42.357" endtime="20230915 14:33:42.618"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 14:33:42.620" level="INFO">{"data":{"totalCount":4,"prevKey":4,"containers":[{"ContainerID":1,"NumberOfKeys":0,"pipelines":null},{"ContainerID":2,"NumberOfKeys":0,"pipelines":null},{"ContainerID":3,"NumberOfKeys":0,"pipelines":null},{"ContainerID":4,"NumberOfKeys":0,"pipelines":null}]}}</msg>
<status status="PASS" starttime="20230915 14:33:42.619" endtime="20230915 14:33:42.620"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 14:33:42.621" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 14:33:42.620" endtime="20230915 14:33:42.621"/>
</kw>
<status status="PASS" starttime="20230915 14:33:42.356" endtime="20230915 14:33:42.621"/>
</kw>
<msg timestamp="20230915 14:33:42.621" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 14:33:42.356" endtime="20230915 14:33:42.622"/>
</kw>
<msg timestamp="20230915 14:33:42.622" level="INFO">${result} = {"data":{"totalCount":4,"prevKey":4,"containers":[{"ContainerID":1,"NumberOfKeys":0,"pipelines":null},{"ContainerID":2,"NumberOfKeys":0,"pipelines":null},{"ContainerID":3,"NumberOfKeys":0,"pipelines":...</msg>
<status status="PASS" starttime="20230915 14:33:42.355" endtime="20230915 14:33:42.622"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"ContainerID\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 14:33:42.622" endtime="20230915 14:33:42.623"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/utilization/fileCount</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 14:33:42.631" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 14:33:42.669" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 14:33:42.669" level="INFO">${output} = [{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20230915 14:33:42.627" endtime="20230915 14:33:42.669"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 14:33:42.671" level="INFO">[{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20230915 14:33:42.670" endtime="20230915 14:33:42.671"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 14:33:42.672" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 14:33:42.671" endtime="20230915 14:33:42.672"/>
</kw>
<status status="PASS" starttime="20230915 14:33:42.626" endtime="20230915 14:33:42.672"/>
</kw>
<msg timestamp="20230915 14:33:42.672" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 14:33:42.626" endtime="20230915 14:33:42.672"/>
</kw>
<msg timestamp="20230915 14:33:42.672" level="INFO">${result} = [{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20230915 14:33:42.623" endtime="20230915 14:33:42.672"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20230915 14:33:42.673" level="FAIL">'[{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]' does not contain '"fileSize":2048,"count":10'</msg>
<status status="FAIL" starttime="20230915 14:33:42.672" endtime="20230915 14:33:42.673"/>
</kw>
<status status="FAIL" starttime="20230915 14:33:42.354" endtime="20230915 14:33:42.673"/>
</kw>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit as ozone admin</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230915 14:33:52.675" endtime="20230915 14:33:52.676"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/containers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 14:33:52.681" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 14:33:52.697" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 14:33:52.697" level="INFO">${output} = {"data":{"totalCount":4,"prevKey":4,"containers":[{"ContainerID":1,"NumberOfKeys":0,"pipelines":null},{"ContainerID":2,"NumberOfKeys":0,"pipelines":null},{"ContainerID":3,"NumberOfKeys":0,"pipelines":...</msg>
<status status="PASS" starttime="20230915 14:33:52.677" endtime="20230915 14:33:52.697"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 14:33:52.699" level="INFO">{"data":{"totalCount":4,"prevKey":4,"containers":[{"ContainerID":1,"NumberOfKeys":0,"pipelines":null},{"ContainerID":2,"NumberOfKeys":0,"pipelines":null},{"ContainerID":3,"NumberOfKeys":0,"pipelines":null},{"ContainerID":4,"NumberOfKeys":0,"pipelines":null}]}}</msg>
<status status="PASS" starttime="20230915 14:33:52.698" endtime="20230915 14:33:52.699"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 14:33:52.699" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 14:33:52.699" endtime="20230915 14:33:52.699"/>
</kw>
<status status="PASS" starttime="20230915 14:33:52.677" endtime="20230915 14:33:52.700"/>
</kw>
<msg timestamp="20230915 14:33:52.700" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 14:33:52.676" endtime="20230915 14:33:52.700"/>
</kw>
<msg timestamp="20230915 14:33:52.700" level="INFO">${result} = {"data":{"totalCount":4,"prevKey":4,"containers":[{"ContainerID":1,"NumberOfKeys":0,"pipelines":null},{"ContainerID":2,"NumberOfKeys":0,"pipelines":null},{"ContainerID":3,"NumberOfKeys":0,"pipelines":...</msg>
<status status="PASS" starttime="20230915 14:33:52.676" endtime="20230915 14:33:52.700"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"ContainerID\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 14:33:52.700" endtime="20230915 14:33:52.701"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/utilization/fileCount</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 14:33:52.705" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 14:33:52.722" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 14:33:52.722" level="INFO">${output} = [{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20230915 14:33:52.702" endtime="20230915 14:33:52.722"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 14:33:52.724" level="INFO">[{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20230915 14:33:52.723" endtime="20230915 14:33:52.724"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 14:33:52.725" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 14:33:52.724" endtime="20230915 14:33:52.725"/>
</kw>
<status status="PASS" starttime="20230915 14:33:52.702" endtime="20230915 14:33:52.725"/>
</kw>
<msg timestamp="20230915 14:33:52.726" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 14:33:52.701" endtime="20230915 14:33:52.726"/>
</kw>
<msg timestamp="20230915 14:33:52.726" level="INFO">${result} = [{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20230915 14:33:52.701" endtime="20230915 14:33:52.726"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20230915 14:33:52.727" level="FAIL">'[{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]' does not contain '"fileSize":2048,"count":10'</msg>
<status status="FAIL" starttime="20230915 14:33:52.726" endtime="20230915 14:33:52.727"/>
</kw>
<status status="FAIL" starttime="20230915 14:33:52.674" endtime="20230915 14:33:52.727"/>
</kw>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit as ozone admin</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230915 14:34:02.729" endtime="20230915 14:34:02.729"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/containers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 14:34:02.734" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 14:34:02.751" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 14:34:02.751" level="INFO">${output} = {"data":{"totalCount":4,"prevKey":4,"containers":[{"ContainerID":1,"NumberOfKeys":0,"pipelines":null},{"ContainerID":2,"NumberOfKeys":0,"pipelines":null},{"ContainerID":3,"NumberOfKeys":0,"pipelines":...</msg>
<status status="PASS" starttime="20230915 14:34:02.731" endtime="20230915 14:34:02.751"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 14:34:02.752" level="INFO">{"data":{"totalCount":4,"prevKey":4,"containers":[{"ContainerID":1,"NumberOfKeys":0,"pipelines":null},{"ContainerID":2,"NumberOfKeys":0,"pipelines":null},{"ContainerID":3,"NumberOfKeys":0,"pipelines":null},{"ContainerID":4,"NumberOfKeys":0,"pipelines":null}]}}</msg>
<status status="PASS" starttime="20230915 14:34:02.751" endtime="20230915 14:34:02.753"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 14:34:02.753" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 14:34:02.753" endtime="20230915 14:34:02.754"/>
</kw>
<status status="PASS" starttime="20230915 14:34:02.730" endtime="20230915 14:34:02.754"/>
</kw>
<msg timestamp="20230915 14:34:02.754" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 14:34:02.730" endtime="20230915 14:34:02.754"/>
</kw>
<msg timestamp="20230915 14:34:02.754" level="INFO">${result} = {"data":{"totalCount":4,"prevKey":4,"containers":[{"ContainerID":1,"NumberOfKeys":0,"pipelines":null},{"ContainerID":2,"NumberOfKeys":0,"pipelines":null},{"ContainerID":3,"NumberOfKeys":0,"pipelines":...</msg>
<status status="PASS" starttime="20230915 14:34:02.729" endtime="20230915 14:34:02.754"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"ContainerID\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 14:34:02.754" endtime="20230915 14:34:02.755"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/utilization/fileCount</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 14:34:02.759" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 14:34:02.776" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 14:34:02.776" level="INFO">${output} = [{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1},{"volume":"recon","bucket":"api","fileSize":2048,"count":10}]</msg>
<status status="PASS" starttime="20230915 14:34:02.757" endtime="20230915 14:34:02.776"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 14:34:02.777" level="INFO">[{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1},{"volume":"recon","bucket":"api","fileSize":2048,"count":10}]</msg>
<status status="PASS" starttime="20230915 14:34:02.776" endtime="20230915 14:34:02.777"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 14:34:02.778" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 14:34:02.778" endtime="20230915 14:34:02.778"/>
</kw>
<status status="PASS" starttime="20230915 14:34:02.756" endtime="20230915 14:34:02.778"/>
</kw>
<msg timestamp="20230915 14:34:02.779" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 14:34:02.756" endtime="20230915 14:34:02.779"/>
</kw>
<msg timestamp="20230915 14:34:02.779" level="INFO">${result} = [{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1},{"volume":"recon","bucket":"api","fileSize":2048,"count":10}]</msg>
<status status="PASS" starttime="20230915 14:34:02.755" endtime="20230915 14:34:02.779"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 14:34:02.779" endtime="20230915 14:34:02.779"/>
</kw>
<status status="PASS" starttime="20230915 14:34:02.728" endtime="20230915 14:34:02.780"/>
</kw>
<status status="PASS" starttime="20230915 14:33:42.354" endtime="20230915 14:34:02.780"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230915 14:33:20.510" endtime="20230915 14:34:02.780"/>
</test>
<test id="s1-s3-s1-t2" name="Check if Recon picks up DN heartbeats" line="71">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/datanodes</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 14:34:02.789" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/datanodes 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 14:34:02.829" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 14:34:02.829" level="INFO">${output} = {"totalCount":6,"datanodes":[{"uuid":"83d279b5-b6d0-4645-b6a9-6a9b697ed39a","hostname":"ozone-topology_datanode_1_1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":0,"stor...</msg>
<status status="PASS" starttime="20230915 14:34:02.786" endtime="20230915 14:34:02.829"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 14:34:02.830" level="INFO">{"totalCount":6,"datanodes":[{"uuid":"83d279b5-b6d0-4645-b6a9-6a9b697ed39a","hostname":"ozone-topology_datanode_1_1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":0,"storageReport":{"capacity":89297309696,"used":8192,"remaining":16217104384},"pipelines":[{"pipelineID":"580620b2-d986-4392-b995-b0d0e171cc26","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_1_1.ozone-topology_net"},{"pipelineID":"72811e82-6699-4953-b326-f558a2890695","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_4_1.ozone-topology_net"},{"pipelineID":"2471583a-595c-4bc1-9bd4-f6ed8a367746","replicationType":"RATIS","replicationFactor":"ONE","leaderNode":"ozone-topology_datanode_1_1.ozone-topology_net"}],"containers":2,"openContainers":2,"leaderCount":2,"version":"1.4.0-SNAPSHOT","setupTime":1694788257606,"revision":"a0de49042030a526eace01ad5a5ac10930eec32b","buildDate":"2023-09-15T13:47Z","layoutVersion":7,"networkLocation":"/rack1"},{"uuid":"c7775716-be20-49c1-baba-e23888a07554","hostname":"ozone-topology_datanode_4_1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":0,"storageReport":{"capacity":89297309696,"used":8192,"remaining":16217202688},"pipelines":[{"pipelineID":"580620b2-d986-4392-b995-b0d0e171cc26","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_1_1.ozone-topology_net"},{"pipelineID":"72811e82-6699-4953-b326-f558a2890695","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_4_1.ozone-topology_net"},{"pipelineID":"52e785d8-5194-4b12-938a-3bcae0b737a2","replicationType":"RATIS","replicationFactor":"ONE","leaderNode":"ozone-topology_datanode_4_1.ozone-topology_net"}],"containers":2,"openContainers":2,"leaderCount":2,"version":"1.4.0-SNAPSHOT","setupTime":1694788256825,"revision":"a0de49042030a526eace01ad5a5ac10930eec32b","buildDate":"2023-09-15T13:47Z","layoutVersion":7,"networkLocation":"/rack2"},{"uuid":"a8776bad-c19b-4ef7-866e-be3b4668ab53","hostname":"ozone-topology_datanode_3_1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":0,"storageReport":{"capacity":89297309696,"used":4096,"remaining":15621136384},"pipelines":[{"pipelineID":"580620b2-d986-4392-b995-b0d0e171cc26","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_1_1.ozone-topology_net"},{"pipelineID":"ab8da80e-2bce-42e4-8292-31b5adb16527","replicationType":"RATIS","replicationFactor":"ONE","leaderNode":"ozone-topology_datanode_3_1.ozone-topology_net"},{"pipelineID":"72811e82-6699-4953-b326-f558a2890695","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_4_1.ozone-topology_net"}],"containers":2,"openContainers":2,"leaderCount":1,"version":"1.4.0-SNAPSHOT","setupTime":1694788255676,"revision":"a0de49042030a526eace01ad5a5ac10930eec32b","buildDate":"2023-09-15T13:47Z","layoutVersion":7,"networkLocation":"/rack1"},{"uuid":"b0561b97-f27c-421e-a4a0-f5c148490430","hostname":"ozone-topology_datanode_6_1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":0,"storageReport":{"capacity":89297309696,"used":14336,"remaining":15178158080},"pipelines":[{"pipelineID":"3d2c3c47-62e7-4243-b68e-4c67e3a8aa49","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_6_1.ozone-topology_net"},{"pipelineID":"53cc9bd1-1a31-449e-ab38-172eac7ba388","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_2_1.ozone-topology_net"},{"pipelineID":"cf584699-8f6e-465c-8c76-e7b075ea1843","replicationType":"RATIS","replicationFactor":"ONE","leaderNode":"ozone-topology_datanode_6_1.ozone-topology_net"}],"containers":2,"openContainers":3,"leaderCount":2,"version":"1.4.0-SNAPSHOT","setupTime":1694788254393,"revision":"a0de49042030a526eace01ad5a5ac10930eec32b","buildDate":"2023-09-15T13:47Z","layoutVersion":7,"networkLocation":"/rack2"},{"uuid":"bc73d94e-8ecd-4147-91be-56598a25d02b","hostname":"ozone-topology_datanode_2_1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":0,"storageReport":{"capacity":89297309696,"used":14336,"remaining":15325818880},"pipelines":[{"pipelineID":"e79e03b6-8d16-41f1-97ba-e3c888f28f1b","replicationType":"RATIS","replicationFactor":"ONE","leaderNode":"ozone-topology_datanode_2_1.ozone-topology_net"},{"pipelineID":"3d2c3c47-62e7-4243-b68e-4c67e3a8aa49","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_6_1.ozone-topology_net"},{"pipelineID":"53cc9bd1-1a31-449e-ab38-172eac7ba388","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_2_1.ozone-topology_net"}],"containers":2,"openContainers":3,"leaderCount":2,"version":"1.4.0-SNAPSHOT","setupTime":1694788254879,"revision":"a0de49042030a526eace01ad5a5ac10930eec32b","buildDate":"2023-09-15T13:47Z","layoutVersion":7,"networkLocation":"/rack1"},{"uuid":"f8c5ff3d-3193-4d00-9c99-2a4c6a751965","hostname":"ozone-topology_datanode_5_1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":0,"storageReport":{"capacity":89297309696,"used":14336,"remaining":15178108928},"pipelines":[{"pipelineID":"3d2c3c47-62e7-4243-b68e-4c67e3a8aa49","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_6_1.ozone-topology_net"},{"pipelineID":"53cc9bd1-1a31-449e-ab38-172eac7ba388","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_2_1.ozone-topology_net"},{"pipelineID":"02ad1b86-956f-46a1-b53c-6c189704c0fb","replicationType":"RATIS","replicationFactor":"ONE","leaderNode":"ozone-topology_datanode_5_1.ozone-topology_net"}],"containers":2,"openContainers":3,"leaderCount":1,"version":"1.4.0-SNAPSHOT","setupTime":1694788255238,"revision":"a0de49042030a526eace01ad5a5ac10930eec32b","buildDate":"2023-09-15T13:47Z","layoutVersion":7,"networkLocation":"/rack2"}]}</msg>
<status status="PASS" starttime="20230915 14:34:02.830" endtime="20230915 14:34:02.831"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 14:34:02.831" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 14:34:02.831" endtime="20230915 14:34:02.831"/>
</kw>
<status status="PASS" starttime="20230915 14:34:02.785" endtime="20230915 14:34:02.832"/>
</kw>
<msg timestamp="20230915 14:34:02.832" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 14:34:02.785" endtime="20230915 14:34:02.832"/>
</kw>
<msg timestamp="20230915 14:34:02.832" level="INFO">${result} = {"totalCount":6,"datanodes":[{"uuid":"83d279b5-b6d0-4645-b6a9-6a9b697ed39a","hostname":"ozone-topology_datanode_1_1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":0,"stor...</msg>
<status status="PASS" starttime="20230915 14:34:02.782" endtime="20230915 14:34:02.832"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>datanodes</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 14:34:02.833" endtime="20230915 14:34:02.833"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>datanode_1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 14:34:02.833" endtime="20230915 14:34:02.834"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>datanode_2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 14:34:02.834" endtime="20230915 14:34:02.834"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>datanode_3</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 14:34:02.834" endtime="20230915 14:34:02.835"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/pipelines</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 14:34:02.839" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/pipelines 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 14:34:02.886" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 14:34:02.886" level="INFO">${output} = {"totalCount":10,"pipelines":[{"pipelineId":"580620b2-d986-4392-b995-b0d0e171cc26","status":"OPEN","leaderNode":"ozone-topology_datanode_1_1.ozone-topology_net","datanodes":[{"level":0,"parent":null,"...</msg>
<status status="PASS" starttime="20230915 14:34:02.836" endtime="20230915 14:34:02.886"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 14:34:02.888" level="INFO">{"totalCount":10,"pipelines":[{"pipelineId":"580620b2-d986-4392-b995-b0d0e171cc26","status":"OPEN","leaderNode":"ozone-topology_datanode_1_1.ozone-topology_net","datanodes":[{"level":0,"parent":null,"cost":0,"uuid":"83d279b5-b6d0-4645-b6a9-6a9b697ed39a","uuidString":"83d279b5-b6d0-4645-b6a9-6a9b697ed39a","ipAddress":"10.5.0.4","hostName":"ozone-topology_datanode_1_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":9864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":-1502777849,"decommissioned":false,"maintenance":false,"networkName":"83d279b5-b6d0-4645-b6a9-6a9b697ed39a","networkLocation":"/rack1","networkFullPath":"/rack1/83d279b5-b6d0-4645-b6a9-6a9b697ed39a","numOfLeaves":1},{"level":0,"parent":null,"cost":0,"uuid":"c7775716-be20-49c1-baba-e23888a07554","uuidString":"c7775716-be20-49c1-baba-e23888a07554","ipAddress":"10.5.0.7","hostName":"ozone-topology_datanode_4_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":9864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":-1090363213,"decommissioned":false,"maintenance":false,"networkName":"c7775716-be20-49c1-baba-e23888a07554","networkLocation":"/rack2","networkFullPath":"/rack2/c7775716-be20-49c1-baba-e23888a07554","numOfLeaves":1},{"level":0,"parent":null,"cost":0,"uuid":"a8776bad-c19b-4ef7-866e-be3b4668ab53","uuidString":"a8776bad-c19b-4ef7-866e-be3b4668ab53","ipAddress":"10.5.0.6","hostName":"ozone-topology_datanode_3_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":9864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":225344202,"decommissioned":false,"maintenance":false,"networkName":"a8776bad-c19b-4ef7-866e-be3b4668ab53","networkLocation":"/rack1","networkFullPath":"/rack1/a8776bad-c19b-4ef7-866e-be3b4668ab53","numOfLeaves":1}],"lastLeaderElection":0,"duration":121756,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"THREE","containers":1},{"pipelineId":"e79e03b6-8d16-41f1-97ba-e3c888f28f1b","status":"OPEN","leaderNode":"ozone-topology_datanode_2_1.ozone-topology_net","datanodes":[{"level":0,"parent":null,"cost":0,"uuid":"bc73d94e-8ecd-4147-91be-56598a25d02b","uuidString":"bc73d94e-8ecd-4147-91be-56598a25d02b","ipAddress":"10.5.0.5","hostName":"ozone-topology_datanode_2_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":9864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":-483115503,"decommissioned":false,"maintenance":false,"networkName":"bc73d94e-8ecd-4147-91be-56598a25d02b","networkLocation":"/rack1","networkFullPath":"/rack1/bc73d94e-8ecd-4147-91be-56598a25d02b","numOfLeaves":1}],"lastLeaderElection":0,"duration":121379,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"ONE","containers":0},{"pipelineId":"3d2c3c47-62e7-4243-b68e-4c67e3a8aa49","status":"OPEN","leaderNode":"ozone-topology_datanode_6_1.ozone-topology_net","datanodes":[{"level":0,"parent":null,"cost":0,"uuid":"b0561b97-f27c-421e-a4a0-f5c148490430","uuidString":"b0561b97-f27c-421e-a4a0-f5c148490430","ipAddress":"10.5.0.9","hostName":"ozone-topology_datanode_6_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":9864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":-393787710,"decommissioned":false,"maintenance":false,"networkName":"b0561b97-f27c-421e-a4a0-f5c148490430","networkLocation":"/rack2","networkFullPath":"/rack2/b0561b97-f27c-421e-a4a0-f5c148490430","numOfLeaves":1},{"level":0,"parent":null,"cost":0,"uuid":"bc73d94e-8ecd-4147-91be-56598a25d02b","uuidString":"bc73d94e-8ecd-4147-91be-56598a25d02b","ipAddress":"10.5.0.5","hostName":"ozone-topology_datanode_2_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":9864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":-483115503,"decommissioned":false,"maintenance":false,"networkName":"bc73d94e-8ecd-4147-91be-56598a25d02b","networkLocation":"/rack1","networkFullPath":"/rack1/bc73d94e-8ecd-4147-91be-56598a25d02b","numOfLeaves":1},{"level":0,"parent":null,"cost":0,"uuid":"f8c5ff3d-3193-4d00-9c99-2a4c6a751965","uuidString":"f8c5ff3d-3193-4d00-9c99-2a4c6a751965","ipAddress":"10.5.0.8","hostName":"ozone-topology_datanode_5_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":9864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":-1878711364,"decommissioned":false,"maintenance":false,"networkName":"f8c5ff3d-3193-4d00-9c99-2a4c6a751965","networkLocation":"/rack2","networkFullPath":"/rack2/f8c5ff3d-3193-4d00-9c99-2a4c6a751965","numOfLeaves":1}],"lastLeaderElection":0,"duration":121649,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"THREE","containers":1},{"pipelineId":"53cc9bd1-1a31-449e-ab38-172eac7ba388","status":"OPEN","leaderNode":"ozone-topology_datanode_2_1.ozone-topology_net","datanodes":[{"level":0,"parent":null,"cost":0,"uuid":"b0561b97-f27c-421e-a4a0-f5c148490430","uuidString":"b0561b97-f27c-421e-a4a0-f5c148490430","ipAddress":"10.5.0.9","hostName":"ozone-topology_datanode_6_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":9864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":-393787710,"decommissioned":false,"maintenance":false,"networkName":"b0561b97-f27c-421e-a4a0-f5c148490430","networkLocation":"/rack2","networkFullPath":"/rack2/b0561b97-f27c-421e-a4a0-f5c148490430","numOfLeaves":1},{"level":0,"parent":null,"cost":0,"uuid":"bc73d94e-8ecd-4147-91be-56598a25d02b","uuidString":"bc73d94e-8ecd-4147-91be-56598a25d02b","ipAddress":"10.5.0.5","hostName":"ozone-topology_datanode_2_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":9864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":-483115503,"decommissioned":false,"maintenance":false,"networkName":"bc73d94e-8ecd-4147-91be-56598a25d02b","networkLocation":"/rack1","networkFullPath":"/rack1/bc73d94e-8ecd-4147-91be-56598a25d02b","numOfLeaves":1},{"level":0,"parent":null,"cost":0,"uuid":"f8c5ff3d-3193-4d00-9c99-2a4c6a751965","uuidString":"f8c5ff3d-3193-4d00-9c99-2a4c6a751965","ipAddress":"10.5.0.8","hostName":"ozone-topology_datanode_5_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":9864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":-1878711364,"decommissioned":false,"maintenance":false,"networkName":"f8c5ff3d-3193-4d00-9c99-2a4c6a751965","networkLocation":"/rack2","networkFullPath":"/rack2/f8c5ff3d-3193-4d00-9c99-2a4c6a751965","numOfLeaves":1}],"lastLeaderElection":0,"duration":121470,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"THREE","containers":1},{"pipelineId":"ab8da80e-2bce-42e4-8292-31b5adb16527","status":"OPEN","leaderNode":"ozone-topology_datanode_3_1.ozone-topology_net","datanodes":[{"level":0,"parent":null,"cost":0,"uuid":"a8776bad-c19b-4ef7-866e-be3b4668ab53","uuidString":"a8776bad-c19b-4ef7-866e-be3b4668ab53","ipAddress":"10.5.0.6","hostName":"ozone-topology_datanode_3_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":9864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":225344202,"decommissioned":false,"maintenance":false,"networkName":"a8776bad-c19b-4ef7-866e-be3b4668ab53","networkLocation":"/rack1","networkFullPath":"/rack1/a8776bad-c19b-4ef7-866e-be3b4668ab53","numOfLeaves":1}],"lastLeaderElection":0,"duration":122673,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"ONE","containers":0},{"pipelineId":"72811e82-6699-4953-b326-f558a2890695","status":"OPEN","leaderNode":"ozone-topology_datanode_4_1.ozone-topology_net","datanodes":[{"level":0,"parent":null,"cost":0,"uuid":"83d279b5-b6d0-4645-b6a9-6a9b697ed39a","uuidString":"83d279b5-b6d0-4645-b6a9-6a9b697ed39a","ipAddress":"10.5.0.4","hostName":"ozone-topology_datanode_1_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":9864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":-1502777849,"decommissioned":false,"maintenance":false,"networkName":"83d279b5-b6d0-4645-b6a9-6a9b697ed39a","networkLocation":"/rack1","networkFullPath":"/rack1/83d279b5-b6d0-4645-b6a9-6a9b697ed39a","numOfLeaves":1},{"level":0,"parent":null,"cost":0,"uuid":"c7775716-be20-49c1-baba-e23888a07554","uuidString":"c7775716-be20-49c1-baba-e23888a07554","ipAddress":"10.5.0.7","hostName":"ozone-topology_datanode_4_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":9864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":-1090363213,"decommissioned":false,"maintenance":false,"networkName":"c7775716-be20-49c1-baba-e23888a07554","networkLocation":"/rack2","networkFullPath":"/rack2/c7775716-be20-49c1-baba-e23888a07554","numOfLeaves":1},{"level":0,"parent":null,"cost":0,"uuid":"a8776bad-c19b-4ef7-866e-be3b4668ab53","uuidString":"a8776bad-c19b-4ef7-866e-be3b4668ab53","ipAddress":"10.5.0.6","hostName":"ozone-topology_datanode_3_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":9864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":225344202,"decommissioned":false,"maintenance":false,"networkName":"a8776bad-c19b-4ef7-866e-be3b4668ab53","networkLocation":"/rack1","networkFullPath":"/rack1/a8776bad-c19b-4ef7-866e-be3b4668ab53","numOfLeaves":1}],"lastLeaderElection":0,"duration":121603,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"THREE","containers":1},{"pipelineId":"52e785d8-5194-4b12-938a-3bcae0b737a2","status":"OPEN","leaderNode":"ozone-topology_datanode_4_1.ozone-topology_net","datanodes":[{"level":0,"parent":null,"cost":0,"uuid":"c7775716-be20-49c1-baba-e23888a07554","uuidString":"c7775716-be20-49c1-baba-e23888a07554","ipAddress":"10.5.0.7","hostName":"ozone-topology_datanode_4_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":9864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":-1090363213,"decommissioned":false,"maintenance":false,"networkName":"c7775716-be20-49c1-baba-e23888a07554","networkLocation":"/rack2","networkFullPath":"/rack2/c7775716-be20-49c1-baba-e23888a07554","numOfLeaves":1}],"lastLeaderElection":0,"duration":121627,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"ONE","containers":0},{"pipelineId":"cf584699-8f6e-465c-8c76-e7b075ea1843","status":"OPEN","leaderNode":"ozone-topology_datanode_6_1.ozone-topology_net","datanodes":[{"level":0,"parent":null,"cost":0,"uuid":"b0561b97-f27c-421e-a4a0-f5c148490430","uuidString":"b0561b97-f27c-421e-a4a0-f5c148490430","ipAddress":"10.5.0.9","hostName":"ozone-topology_datanode_6_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":9864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":-393787710,"decommissioned":false,"maintenance":false,"networkName":"b0561b97-f27c-421e-a4a0-f5c148490430","networkLocation":"/rack2","networkFullPath":"/rack2/b0561b97-f27c-421e-a4a0-f5c148490430","numOfLeaves":1}],"lastLeaderElection":0,"duration":121567,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"ONE","containers":0},{"pipelineId":"02ad1b86-956f-46a1-b53c-6c189704c0fb","status":"OPEN","leaderNode":"ozone-topology_datanode_5_1.ozone-topology_net","datanodes":[{"level":0,"parent":null,"cost":0,"uuid":"f8c5ff3d-3193-4d00-9c99-2a4c6a751965","uuidString":"f8c5ff3d-3193-4d00-9c99-2a4c6a751965","ipAddress":"10.5.0.8","hostName":"ozone-topology_datanode_5_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":9864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":-1878711364,"decommissioned":false,"maintenance":false,"networkName":"f8c5ff3d-3193-4d00-9c99-2a4c6a751965","networkLocation":"/rack2","networkFullPath":"/rack2/f8c5ff3d-3193-4d00-9c99-2a4c6a751965","numOfLeaves":1}],"lastLeaderElection":0,"duration":121441,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"ONE","containers":0},{"pipelineId":"2471583a-595c-4bc1-9bd4-f6ed8a367746","status":"OPEN","leaderNode":"ozone-topology_datanode_1_1.ozone-topology_net","datanodes":[{"level":0,"parent":null,"cost":0,"uuid":"83d279b5-b6d0-4645-b6a9-6a9b697ed39a","uuidString":"83d279b5-b6d0-4645-b6a9-6a9b697ed39a","ipAddress":"10.5.0.4","hostName":"ozone-topology_datanode_1_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":9864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":-1502777849,"decommissioned":false,"maintenance":false,"networkName":"83d279b5-b6d0-4645-b6a9-6a9b697ed39a","networkLocation":"/rack1","networkFullPath":"/rack1/83d279b5-b6d0-4645-b6a9-6a9b697ed39a","numOfLeaves":1}],"lastLeaderElection":0,"duration":121685,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"ONE","containers":0}]}</msg>
<status status="PASS" starttime="20230915 14:34:02.887" endtime="20230915 14:34:02.888"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 14:34:02.889" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 14:34:02.888" endtime="20230915 14:34:02.889"/>
</kw>
<status status="PASS" starttime="20230915 14:34:02.836" endtime="20230915 14:34:02.889"/>
</kw>
<msg timestamp="20230915 14:34:02.889" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 14:34:02.835" endtime="20230915 14:34:02.889"/>
</kw>
<msg timestamp="20230915 14:34:02.890" level="INFO">${result} = {"totalCount":10,"pipelines":[{"pipelineId":"580620b2-d986-4392-b995-b0d0e171cc26","status":"OPEN","leaderNode":"ozone-topology_datanode_1_1.ozone-topology_net","datanodes":[{"level":0,"parent":null,"...</msg>
<status status="PASS" starttime="20230915 14:34:02.835" endtime="20230915 14:34:02.890"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>pipelines</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 14:34:02.890" endtime="20230915 14:34:02.890"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 14:34:02.890" endtime="20230915 14:34:02.893"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>OPEN</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 14:34:02.893" endtime="20230915 14:34:02.894"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>datanode_1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 14:34:02.894" endtime="20230915 14:34:02.894"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>datanode_2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 14:34:02.894" endtime="20230915 14:34:02.895"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>datanode_3</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 14:34:02.895" endtime="20230915 14:34:02.895"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/clusterState</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 14:34:02.900" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/clusterState 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 14:34:02.966" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 14:34:02.966" level="INFO">${output} = {"deletedDirs":0,"pipelines":10,"totalDatanodes":6,"healthyDatanodes":6,"storageReport":{"capacity":535783858176,"used":63488,"remaining":93737529344},"containers":4,"missingContainers":0,"openContain...</msg>
<status status="PASS" starttime="20230915 14:34:02.897" endtime="20230915 14:34:02.966"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 14:34:02.968" level="INFO">{"deletedDirs":0,"pipelines":10,"totalDatanodes":6,"healthyDatanodes":6,"storageReport":{"capacity":535783858176,"used":63488,"remaining":93737529344},"containers":4,"missingContainers":0,"openContainers":4,"deletedContainers":0,"volumes":3,"buckets":2,"keys":11,"keysPendingDeletion":0}</msg>
<status status="PASS" starttime="20230915 14:34:02.967" endtime="20230915 14:34:02.968"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 14:34:02.968" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 14:34:02.968" endtime="20230915 14:34:02.969"/>
</kw>
<status status="PASS" starttime="20230915 14:34:02.897" endtime="20230915 14:34:02.969"/>
</kw>
<msg timestamp="20230915 14:34:02.969" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 14:34:02.896" endtime="20230915 14:34:02.969"/>
</kw>
<msg timestamp="20230915 14:34:02.969" level="INFO">${result} = {"deletedDirs":0,"pipelines":10,"totalDatanodes":6,"healthyDatanodes":6,"storageReport":{"capacity":535783858176,"used":63488,"remaining":93737529344},"containers":4,"missingContainers":0,"openContain...</msg>
<status status="PASS" starttime="20230915 14:34:02.896" endtime="20230915 14:34:02.969"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"totalDatanodes\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 14:34:02.969" endtime="20230915 14:34:02.970"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"healthyDatanodes\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 14:34:02.970" endtime="20230915 14:34:02.971"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"pipelines\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 14:34:02.972" endtime="20230915 14:34:02.972"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/containers/1/replicaHistory</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 14:34:02.977" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/containers/1/replicaHistory 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 14:34:03.010" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 14:34:03.010" level="INFO">${output} = [{"containerId":1,"datanodeUuid":"b0561b97-f27c-421e-a4a0-f5c148490430","datanodeHost":"ozone-topology_datanode_6_1.ozone-topology_net","firstSeenTime":1694788363367,"lastSeenTime":1694788363367,"stat...</msg>
<status status="PASS" starttime="20230915 14:34:02.974" endtime="20230915 14:34:03.010"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 14:34:03.011" level="INFO">[{"containerId":1,"datanodeUuid":"b0561b97-f27c-421e-a4a0-f5c148490430","datanodeHost":"ozone-topology_datanode_6_1.ozone-topology_net","firstSeenTime":1694788363367,"lastSeenTime":1694788363367,"state":"OPEN","lastBcsId":0},{"containerId":1,"datanodeUuid":"bc73d94e-8ecd-4147-91be-56598a25d02b","datanodeHost":"ozone-topology_datanode_2_1.ozone-topology_net","firstSeenTime":1694788363112,"lastSeenTime":1694788363112,"state":"OPEN","lastBcsId":0},{"containerId":1,"datanodeUuid":"f8c5ff3d-3193-4d00-9c99-2a4c6a751965","datanodeHost":"ozone-topology_datanode_5_1.ozone-topology_net","firstSeenTime":1694788363848,"lastSeenTime":1694788363848,"state":"OPEN","lastBcsId":0}]</msg>
<status status="PASS" starttime="20230915 14:34:03.011" endtime="20230915 14:34:03.012"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 14:34:03.012" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 14:34:03.012" endtime="20230915 14:34:03.012"/>
</kw>
<status status="PASS" starttime="20230915 14:34:02.973" endtime="20230915 14:34:03.013"/>
</kw>
<msg timestamp="20230915 14:34:03.013" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 14:34:02.973" endtime="20230915 14:34:03.013"/>
</kw>
<msg timestamp="20230915 14:34:03.013" level="INFO">${result} = [{"containerId":1,"datanodeUuid":"b0561b97-f27c-421e-a4a0-f5c148490430","datanodeHost":"ozone-topology_datanode_6_1.ozone-topology_net","firstSeenTime":1694788363367,"lastSeenTime":1694788363367,"stat...</msg>
<status status="PASS" starttime="20230915 14:34:02.972" endtime="20230915 14:34:03.013"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"containerId\":1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 14:34:03.013" endtime="20230915 14:34:03.014"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230915 14:34:02.781" endtime="20230915 14:34:03.014"/>
</test>
<test id="s1-s3-s1-t3" name="Check if Recon Web UI is up" line="94">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230915 14:34:03.017" endtime="20230915 14:34:03.017"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${ENDPOINT_URL}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 14:34:03.022" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 14:34:03.047" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 14:34:03.047" level="INFO">${output} = &lt;!doctype html&gt;&lt;html lang="en"&gt;&lt;head&gt;&lt;meta charset="utf-8"/&gt;&lt;link rel="shortcut icon" href="/favicon.ico"/&gt;&lt;meta name="viewport" content="width=device-width,initial-scale=1"/&gt;&lt;meta name="theme-color" ...</msg>
<status status="PASS" starttime="20230915 14:34:03.018" endtime="20230915 14:34:03.047"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 14:34:03.049" level="INFO">&lt;!doctype html&gt;&lt;html lang="en"&gt;&lt;head&gt;&lt;meta charset="utf-8"/&gt;&lt;link rel="shortcut icon" href="/favicon.ico"/&gt;&lt;meta name="viewport" content="width=device-width,initial-scale=1"/&gt;&lt;meta name="theme-color" content="#000000"/&gt;&lt;link rel="manifest" href="/manifest.json"/&gt;&lt;title&gt;Ozone Recon&lt;/title&gt;&lt;link href="/static/css/2.58b4e004.chunk.css" rel="stylesheet"&gt;&lt;link href="/static/css/main.95934262.chunk.css" rel="stylesheet"&gt;&lt;/head&gt;&lt;body&gt;&lt;noscript&gt;You need to enable JavaScript to run this app.&lt;/noscript&gt;&lt;div id="root"&gt;&lt;/div&gt;&lt;script&gt;!function(e){function r(r){for(var n,l,f=r[0],i=r[1],a=r[2],p=0,s=[];p&lt;f.length;p++)l=f[p],Object.prototype.hasOwnProperty.call(o,l)&amp;&amp;o[l]&amp;&amp;s.push(o[l][0]),o[l]=0;for(n in i)Object.prototype.hasOwnProperty.call(i,n)&amp;&amp;(e[n]=i[n]);for(c&amp;&amp;c(r);s.length;)s.shift()();return u.push.apply(u,a||[]),t()}function t(){for(var e,r=0;r&lt;u.length;r++){for(var t=u[r],n=!0,f=1;f&lt;t.length;f++){var i=t[f];0!==o[i]&amp;&amp;(n=!1)}n&amp;&amp;(u.splice(r--,1),e=l(l.s=t[0]))}return e}var n={},o={1:0},u=[];function l(r){if(n[r])return n[r].exports;var t=n[r]={i:r,l:!1,exports:{}};return e[r].call(t.exports,t,t.exports,l),t.l=!0,t.exports}l.m=e,l.c=n,l.d=function(e,r,t){l.o(e,r)||Object.defineProperty(e,r,{enumerable:!0,get:t})},l.r=function(e){"undefined"!=typeof Symbol&amp;&amp;Symbol.toStringTag&amp;&amp;Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},l.t=function(e,r){if(1&amp;r&amp;&amp;(e=l(e)),8&amp;r)return e;if(4&amp;r&amp;&amp;"object"==typeof e&amp;&amp;e&amp;&amp;e.__esModule)return e;var t=Object.create(null);if(l.r(t),Object.defineProperty(t,"default",{enumerable:!0,value:e}),2&amp;r&amp;&amp;"string"!=typeof e)for(var n in e)l.d(t,n,function(r){return e[r]}.bind(null,n));return t},l.n=function(e){var r=e&amp;&amp;e.__esModule?function(){return e.default}:function(){return e};return l.d(r,"a",r),r},l.o=function(e,r){return Object.prototype.hasOwnProperty.call(e,r)},l.p="/";var f=this["webpackJsonpozone-recon"]=this["webpackJsonpozone-recon"]||[],i=f.push.bind(f);f.push=r,f=f.slice();for(var a=0;a&lt;f.length;a++)r(f[a]);var c=i;t()}([])&lt;/script&gt;&lt;script src="/static/js/2.60ad2f10.chunk.js"&gt;&lt;/script&gt;&lt;script src="/static/js/main.ccf6b9c8.chunk.js"&gt;&lt;/script&gt;&lt;/body&gt;&lt;/html&gt;</msg>
<status status="PASS" starttime="20230915 14:34:03.048" endtime="20230915 14:34:03.049"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 14:34:03.050" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 14:34:03.049" endtime="20230915 14:34:03.050"/>
</kw>
<status status="PASS" starttime="20230915 14:34:03.018" endtime="20230915 14:34:03.050"/>
</kw>
<msg timestamp="20230915 14:34:03.050" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 14:34:03.018" endtime="20230915 14:34:03.050"/>
</kw>
<msg timestamp="20230915 14:34:03.051" level="INFO">${result} = &lt;!doctype html&gt;&lt;html lang="en"&gt;&lt;head&gt;&lt;meta charset="utf-8"/&gt;&lt;link rel="shortcut icon" href="/favicon.ico"/&gt;&lt;meta name="viewport" content="width=device-width,initial-scale=1"/&gt;&lt;meta name="theme-color" ...</msg>
<status status="PASS" starttime="20230915 14:34:03.017" endtime="20230915 14:34:03.051"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Ozone Recon</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 14:34:03.051" endtime="20230915 14:34:03.051"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230915 14:34:03.016" endtime="20230915 14:34:03.052"/>
</test>
<test id="s1-s3-s1-t4" name="Check web UI access" line="99">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 14:34:03.058" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 14:34:03.065" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 14:34:03.065" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230915 14:34:03.055" endtime="20230915 14:34:03.065"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 14:34:03.066" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230915 14:34:03.066" endtime="20230915 14:34:03.066"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 14:34:03.067" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 14:34:03.067" endtime="20230915 14:34:03.067"/>
</kw>
<status status="PASS" starttime="20230915 14:34:03.055" endtime="20230915 14:34:03.067"/>
</kw>
<msg timestamp="20230915 14:34:03.067" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 14:34:03.054" endtime="20230915 14:34:03.068"/>
</kw>
<status status="PASS" starttime="20230915 14:34:03.054" endtime="20230915 14:34:03.068"/>
</kw>
<kw name="Check http return code">
<arg>${ENDPOINT_URL}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 14:34:03.072" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 14:34:03.089" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 14:34:03.089" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230915 14:34:03.070" endtime="20230915 14:34:03.089"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 14:34:03.100" level="INFO">200</msg>
<status status="PASS" starttime="20230915 14:34:03.098" endtime="20230915 14:34:03.100"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 14:34:03.101" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 14:34:03.101" endtime="20230915 14:34:03.102"/>
</kw>
<status status="PASS" starttime="20230915 14:34:03.069" endtime="20230915 14:34:03.103"/>
</kw>
<msg timestamp="20230915 14:34:03.103" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 14:34:03.069" endtime="20230915 14:34:03.103"/>
</kw>
<msg timestamp="20230915 14:34:03.103" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230915 14:34:03.068" endtime="20230915 14:34:03.103"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230915 14:34:03.104" endtime="20230915 14:34:03.104"/>
</kw>
<status status="NOT RUN" starttime="20230915 14:34:03.103" endtime="20230915 14:34:03.104"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 14:34:03.104" endtime="20230915 14:34:03.105"/>
</kw>
<status status="PASS" starttime="20230915 14:34:03.104" endtime="20230915 14:34:03.105"/>
</branch>
<status status="PASS" starttime="20230915 14:34:03.103" endtime="20230915 14:34:03.105"/>
</if>
<status status="PASS" starttime="20230915 14:34:03.068" endtime="20230915 14:34:03.105"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230915 14:34:03.106" endtime="20230915 14:34:03.106"/>
</kw>
<status status="PASS" starttime="20230915 14:34:03.105" endtime="20230915 14:34:03.106"/>
</kw>
<kw name="Check http return code">
<arg>${ENDPOINT_URL}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 14:34:03.117" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 14:34:03.132" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 14:34:03.133" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230915 14:34:03.108" endtime="20230915 14:34:03.133"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 14:34:03.135" level="INFO">200</msg>
<status status="PASS" starttime="20230915 14:34:03.133" endtime="20230915 14:34:03.135"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 14:34:03.136" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 14:34:03.136" endtime="20230915 14:34:03.136"/>
</kw>
<status status="PASS" starttime="20230915 14:34:03.108" endtime="20230915 14:34:03.136"/>
</kw>
<msg timestamp="20230915 14:34:03.137" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 14:34:03.108" endtime="20230915 14:34:03.137"/>
</kw>
<msg timestamp="20230915 14:34:03.137" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230915 14:34:03.107" endtime="20230915 14:34:03.137"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230915 14:34:03.138" endtime="20230915 14:34:03.138"/>
</kw>
<status status="NOT RUN" starttime="20230915 14:34:03.137" endtime="20230915 14:34:03.138"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 14:34:03.138" endtime="20230915 14:34:03.138"/>
</kw>
<status status="PASS" starttime="20230915 14:34:03.138" endtime="20230915 14:34:03.138"/>
</branch>
<status status="PASS" starttime="20230915 14:34:03.137" endtime="20230915 14:34:03.138"/>
</if>
<status status="PASS" starttime="20230915 14:34:03.106" endtime="20230915 14:34:03.139"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230915 14:34:03.053" endtime="20230915 14:34:03.139"/>
</test>
<test id="s1-s3-s1-t5" name="Check admin only api access" line="107">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 14:34:03.146" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 14:34:03.150" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 14:34:03.150" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230915 14:34:03.142" endtime="20230915 14:34:03.150"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 14:34:03.151" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230915 14:34:03.150" endtime="20230915 14:34:03.151"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 14:34:03.151" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 14:34:03.151" endtime="20230915 14:34:03.152"/>
</kw>
<status status="PASS" starttime="20230915 14:34:03.141" endtime="20230915 14:34:03.152"/>
</kw>
<msg timestamp="20230915 14:34:03.152" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 14:34:03.141" endtime="20230915 14:34:03.152"/>
</kw>
<status status="PASS" starttime="20230915 14:34:03.140" endtime="20230915 14:34:03.152"/>
</kw>
<kw name="Check http return code">
<arg>${ADMIN_API_ENDPOINT_URL}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 14:34:03.158" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 14:34:03.177" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 14:34:03.178" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230915 14:34:03.155" endtime="20230915 14:34:03.178"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 14:34:03.179" level="INFO">200</msg>
<status status="PASS" starttime="20230915 14:34:03.178" endtime="20230915 14:34:03.179"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 14:34:03.180" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 14:34:03.179" endtime="20230915 14:34:03.180"/>
</kw>
<status status="PASS" starttime="20230915 14:34:03.154" endtime="20230915 14:34:03.180"/>
</kw>
<msg timestamp="20230915 14:34:03.180" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 14:34:03.154" endtime="20230915 14:34:03.180"/>
</kw>
<msg timestamp="20230915 14:34:03.180" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230915 14:34:03.153" endtime="20230915 14:34:03.180"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230915 14:34:03.189" endtime="20230915 14:34:03.189"/>
</kw>
<status status="NOT RUN" starttime="20230915 14:34:03.189" endtime="20230915 14:34:03.189"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 14:34:03.190" endtime="20230915 14:34:03.190"/>
</kw>
<status status="PASS" starttime="20230915 14:34:03.190" endtime="20230915 14:34:03.190"/>
</branch>
<status status="PASS" starttime="20230915 14:34:03.188" endtime="20230915 14:34:03.191"/>
</if>
<status status="PASS" starttime="20230915 14:34:03.152" endtime="20230915 14:34:03.191"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230915 14:34:03.192" endtime="20230915 14:34:03.192"/>
</kw>
<status status="PASS" starttime="20230915 14:34:03.191" endtime="20230915 14:34:03.192"/>
</kw>
<kw name="Check http return code">
<arg>${ADMIN_API_ENDPOINT_URL}</arg>
<arg>403</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 14:34:03.198" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 14:34:03.217" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 14:34:03.217" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230915 14:34:03.194" endtime="20230915 14:34:03.217"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 14:34:03.219" level="INFO">200</msg>
<status status="PASS" starttime="20230915 14:34:03.218" endtime="20230915 14:34:03.219"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 14:34:03.219" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 14:34:03.219" endtime="20230915 14:34:03.220"/>
</kw>
<status status="PASS" starttime="20230915 14:34:03.194" endtime="20230915 14:34:03.220"/>
</kw>
<msg timestamp="20230915 14:34:03.220" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 14:34:03.193" endtime="20230915 14:34:03.220"/>
</kw>
<msg timestamp="20230915 14:34:03.221" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230915 14:34:03.193" endtime="20230915 14:34:03.221"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230915 14:34:03.221" endtime="20230915 14:34:03.221"/>
</kw>
<status status="NOT RUN" starttime="20230915 14:34:03.221" endtime="20230915 14:34:03.221"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 14:34:03.222" endtime="20230915 14:34:03.222"/>
</kw>
<status status="PASS" starttime="20230915 14:34:03.221" endtime="20230915 14:34:03.222"/>
</branch>
<status status="PASS" starttime="20230915 14:34:03.221" endtime="20230915 14:34:03.222"/>
</if>
<status status="PASS" starttime="20230915 14:34:03.192" endtime="20230915 14:34:03.222"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230915 14:34:03.223" endtime="20230915 14:34:03.224"/>
</kw>
<status status="PASS" starttime="20230915 14:34:03.223" endtime="20230915 14:34:03.224"/>
</kw>
<kw name="Check http return code">
<arg>${ADMIN_API_ENDPOINT_URL}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 14:34:03.235" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 14:34:03.256" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 14:34:03.257" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230915 14:34:03.230" endtime="20230915 14:34:03.257"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 14:34:03.258" level="INFO">200</msg>
<status status="PASS" starttime="20230915 14:34:03.257" endtime="20230915 14:34:03.258"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 14:34:03.259" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 14:34:03.259" endtime="20230915 14:34:03.259"/>
</kw>
<status status="PASS" starttime="20230915 14:34:03.226" endtime="20230915 14:34:03.259"/>
</kw>
<msg timestamp="20230915 14:34:03.259" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 14:34:03.225" endtime="20230915 14:34:03.260"/>
</kw>
<msg timestamp="20230915 14:34:03.260" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230915 14:34:03.225" endtime="20230915 14:34:03.261"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230915 14:34:03.262" endtime="20230915 14:34:03.262"/>
</kw>
<status status="NOT RUN" starttime="20230915 14:34:03.262" endtime="20230915 14:34:03.262"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 14:34:03.263" endtime="20230915 14:34:03.263"/>
</kw>
<status status="PASS" starttime="20230915 14:34:03.262" endtime="20230915 14:34:03.263"/>
</branch>
<status status="PASS" starttime="20230915 14:34:03.262" endtime="20230915 14:34:03.263"/>
</if>
<status status="PASS" starttime="20230915 14:34:03.224" endtime="20230915 14:34:03.263"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230915 14:34:03.264" endtime="20230915 14:34:03.264"/>
</kw>
<status status="PASS" starttime="20230915 14:34:03.263" endtime="20230915 14:34:03.265"/>
</kw>
<kw name="Check http return code">
<arg>${ADMIN_API_ENDPOINT_URL}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 14:34:03.282" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 14:34:03.305" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 14:34:03.305" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230915 14:34:03.267" endtime="20230915 14:34:03.305"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 14:34:03.307" level="INFO">200</msg>
<status status="PASS" starttime="20230915 14:34:03.306" endtime="20230915 14:34:03.307"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 14:34:03.308" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 14:34:03.308" endtime="20230915 14:34:03.308"/>
</kw>
<status status="PASS" starttime="20230915 14:34:03.266" endtime="20230915 14:34:03.310"/>
</kw>
<msg timestamp="20230915 14:34:03.310" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 14:34:03.266" endtime="20230915 14:34:03.310"/>
</kw>
<msg timestamp="20230915 14:34:03.310" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230915 14:34:03.265" endtime="20230915 14:34:03.310"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230915 14:34:03.314" endtime="20230915 14:34:03.314"/>
</kw>
<status status="NOT RUN" starttime="20230915 14:34:03.311" endtime="20230915 14:34:03.314"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 14:34:03.315" endtime="20230915 14:34:03.318"/>
</kw>
<status status="PASS" starttime="20230915 14:34:03.314" endtime="20230915 14:34:03.318"/>
</branch>
<status status="PASS" starttime="20230915 14:34:03.310" endtime="20230915 14:34:03.318"/>
</if>
<status status="PASS" starttime="20230915 14:34:03.265" endtime="20230915 14:34:03.318"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230915 14:34:03.140" endtime="20230915 14:34:03.319"/>
</test>
<test id="s1-s3-s1-t6" name="Check unhealthy, (admin) api access" line="120">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 14:34:03.338" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 14:34:03.345" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 14:34:03.346" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230915 14:34:03.329" endtime="20230915 14:34:03.347"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 14:34:03.350" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230915 14:34:03.347" endtime="20230915 14:34:03.350"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 14:34:03.352" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 14:34:03.351" endtime="20230915 14:34:03.353"/>
</kw>
<status status="PASS" starttime="20230915 14:34:03.328" endtime="20230915 14:34:03.353"/>
</kw>
<msg timestamp="20230915 14:34:03.353" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 14:34:03.328" endtime="20230915 14:34:03.353"/>
</kw>
<status status="PASS" starttime="20230915 14:34:03.327" endtime="20230915 14:34:03.353"/>
</kw>
<kw name="Check http return code">
<arg>${UNHEALTHY_ENDPOINT_URL}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 14:34:03.371" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers/unhealthy 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 14:34:03.468" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 14:34:03.468" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230915 14:34:03.362" endtime="20230915 14:34:03.468"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 14:34:03.470" level="INFO">200</msg>
<status status="PASS" starttime="20230915 14:34:03.469" endtime="20230915 14:34:03.470"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 14:34:03.471" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 14:34:03.471" endtime="20230915 14:34:03.471"/>
</kw>
<status status="PASS" starttime="20230915 14:34:03.360" endtime="20230915 14:34:03.471"/>
</kw>
<msg timestamp="20230915 14:34:03.472" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 14:34:03.360" endtime="20230915 14:34:03.473"/>
</kw>
<msg timestamp="20230915 14:34:03.474" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230915 14:34:03.358" endtime="20230915 14:34:03.474"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230915 14:34:03.474" endtime="20230915 14:34:03.474"/>
</kw>
<status status="NOT RUN" starttime="20230915 14:34:03.474" endtime="20230915 14:34:03.474"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 14:34:03.475" endtime="20230915 14:34:03.475"/>
</kw>
<status status="PASS" starttime="20230915 14:34:03.475" endtime="20230915 14:34:03.475"/>
</branch>
<status status="PASS" starttime="20230915 14:34:03.474" endtime="20230915 14:34:03.475"/>
</if>
<status status="PASS" starttime="20230915 14:34:03.356" endtime="20230915 14:34:03.475"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230915 14:34:03.476" endtime="20230915 14:34:03.477"/>
</kw>
<status status="PASS" starttime="20230915 14:34:03.476" endtime="20230915 14:34:03.477"/>
</kw>
<kw name="Check http return code">
<arg>${UNHEALTHY_ENDPOINT_URL}</arg>
<arg>403</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 14:34:03.482" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers/unhealthy 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 14:34:03.506" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 14:34:03.508" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230915 14:34:03.479" endtime="20230915 14:34:03.508"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 14:34:03.509" level="INFO">200</msg>
<status status="PASS" starttime="20230915 14:34:03.508" endtime="20230915 14:34:03.509"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 14:34:03.510" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 14:34:03.510" endtime="20230915 14:34:03.511"/>
</kw>
<status status="PASS" starttime="20230915 14:34:03.479" endtime="20230915 14:34:03.511"/>
</kw>
<msg timestamp="20230915 14:34:03.511" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 14:34:03.478" endtime="20230915 14:34:03.511"/>
</kw>
<msg timestamp="20230915 14:34:03.511" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230915 14:34:03.478" endtime="20230915 14:34:03.511"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230915 14:34:03.512" endtime="20230915 14:34:03.512"/>
</kw>
<status status="NOT RUN" starttime="20230915 14:34:03.511" endtime="20230915 14:34:03.512"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 14:34:03.512" endtime="20230915 14:34:03.513"/>
</kw>
<status status="PASS" starttime="20230915 14:34:03.512" endtime="20230915 14:34:03.513"/>
</branch>
<status status="PASS" starttime="20230915 14:34:03.511" endtime="20230915 14:34:03.513"/>
</if>
<status status="PASS" starttime="20230915 14:34:03.477" endtime="20230915 14:34:03.513"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230915 14:34:03.514" endtime="20230915 14:34:03.514"/>
</kw>
<status status="PASS" starttime="20230915 14:34:03.513" endtime="20230915 14:34:03.514"/>
</kw>
<kw name="Check http return code">
<arg>${UNHEALTHY_ENDPOINT_URL}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 14:34:03.528" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers/unhealthy 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 14:34:03.553" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 14:34:03.553" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230915 14:34:03.525" endtime="20230915 14:34:03.553"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 14:34:03.555" level="INFO">200</msg>
<status status="PASS" starttime="20230915 14:34:03.554" endtime="20230915 14:34:03.555"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 14:34:03.556" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 14:34:03.555" endtime="20230915 14:34:03.556"/>
</kw>
<status status="PASS" starttime="20230915 14:34:03.516" endtime="20230915 14:34:03.556"/>
</kw>
<msg timestamp="20230915 14:34:03.556" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 14:34:03.516" endtime="20230915 14:34:03.556"/>
</kw>
<msg timestamp="20230915 14:34:03.557" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230915 14:34:03.515" endtime="20230915 14:34:03.557"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230915 14:34:03.557" endtime="20230915 14:34:03.557"/>
</kw>
<status status="NOT RUN" starttime="20230915 14:34:03.557" endtime="20230915 14:34:03.557"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 14:34:03.557" endtime="20230915 14:34:03.558"/>
</kw>
<status status="PASS" starttime="20230915 14:34:03.557" endtime="20230915 14:34:03.558"/>
</branch>
<status status="PASS" starttime="20230915 14:34:03.557" endtime="20230915 14:34:03.558"/>
</if>
<status status="PASS" starttime="20230915 14:34:03.514" endtime="20230915 14:34:03.558"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230915 14:34:03.560" endtime="20230915 14:34:03.560"/>
</kw>
<status status="PASS" starttime="20230915 14:34:03.558" endtime="20230915 14:34:03.561"/>
</kw>
<kw name="Check http return code">
<arg>${UNHEALTHY_ENDPOINT_URL}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 14:34:03.566" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers/unhealthy 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 14:34:03.588" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 14:34:03.588" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230915 14:34:03.563" endtime="20230915 14:34:03.588"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 14:34:03.590" level="INFO">200</msg>
<status status="PASS" starttime="20230915 14:34:03.589" endtime="20230915 14:34:03.590"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 14:34:03.591" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 14:34:03.590" endtime="20230915 14:34:03.591"/>
</kw>
<status status="PASS" starttime="20230915 14:34:03.562" endtime="20230915 14:34:03.591"/>
</kw>
<msg timestamp="20230915 14:34:03.591" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 14:34:03.562" endtime="20230915 14:34:03.591"/>
</kw>
<msg timestamp="20230915 14:34:03.592" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230915 14:34:03.561" endtime="20230915 14:34:03.592"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230915 14:34:03.592" endtime="20230915 14:34:03.592"/>
</kw>
<status status="NOT RUN" starttime="20230915 14:34:03.592" endtime="20230915 14:34:03.592"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 14:34:03.592" endtime="20230915 14:34:03.593"/>
</kw>
<status status="PASS" starttime="20230915 14:34:03.592" endtime="20230915 14:34:03.593"/>
</branch>
<status status="PASS" starttime="20230915 14:34:03.592" endtime="20230915 14:34:03.593"/>
</if>
<status status="PASS" starttime="20230915 14:34:03.561" endtime="20230915 14:34:03.593"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230915 14:34:03.326" endtime="20230915 14:34:03.593"/>
</test>
<test id="s1-s3-s1-t7" name="Check normal api access" line="133">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 14:34:03.601" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 14:34:03.605" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 14:34:03.605" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230915 14:34:03.598" endtime="20230915 14:34:03.606"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 14:34:03.607" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230915 14:34:03.606" endtime="20230915 14:34:03.607"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 14:34:03.607" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 14:34:03.607" endtime="20230915 14:34:03.608"/>
</kw>
<status status="PASS" starttime="20230915 14:34:03.597" endtime="20230915 14:34:03.608"/>
</kw>
<msg timestamp="20230915 14:34:03.608" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 14:34:03.597" endtime="20230915 14:34:03.608"/>
</kw>
<status status="PASS" starttime="20230915 14:34:03.596" endtime="20230915 14:34:03.608"/>
</kw>
<kw name="Check http return code">
<arg>${NON_ADMIN_API_ENDPOINT_URL}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 14:34:03.620" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/clusterState 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 14:34:03.672" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 14:34:03.672" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230915 14:34:03.617" endtime="20230915 14:34:03.672"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 14:34:03.673" level="INFO">200</msg>
<status status="PASS" starttime="20230915 14:34:03.672" endtime="20230915 14:34:03.673"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 14:34:03.674" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 14:34:03.673" endtime="20230915 14:34:03.674"/>
</kw>
<status status="PASS" starttime="20230915 14:34:03.616" endtime="20230915 14:34:03.674"/>
</kw>
<msg timestamp="20230915 14:34:03.674" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 14:34:03.616" endtime="20230915 14:34:03.674"/>
</kw>
<msg timestamp="20230915 14:34:03.675" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230915 14:34:03.614" endtime="20230915 14:34:03.675"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230915 14:34:03.675" endtime="20230915 14:34:03.675"/>
</kw>
<status status="NOT RUN" starttime="20230915 14:34:03.675" endtime="20230915 14:34:03.675"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 14:34:03.679" endtime="20230915 14:34:03.680"/>
</kw>
<status status="PASS" starttime="20230915 14:34:03.675" endtime="20230915 14:34:03.680"/>
</branch>
<status status="PASS" starttime="20230915 14:34:03.675" endtime="20230915 14:34:03.680"/>
</if>
<status status="PASS" starttime="20230915 14:34:03.608" endtime="20230915 14:34:03.680"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230915 14:34:03.681" endtime="20230915 14:34:03.681"/>
</kw>
<status status="PASS" starttime="20230915 14:34:03.680" endtime="20230915 14:34:03.681"/>
</kw>
<kw name="Check http return code">
<arg>${NON_ADMIN_API_ENDPOINT_URL}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 14:34:03.693" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/clusterState 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 14:34:03.744" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 14:34:03.744" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230915 14:34:03.683" endtime="20230915 14:34:03.745"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 14:34:03.746" level="INFO">200</msg>
<status status="PASS" starttime="20230915 14:34:03.745" endtime="20230915 14:34:03.747"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 14:34:03.748" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 14:34:03.747" endtime="20230915 14:34:03.752"/>
</kw>
<status status="PASS" starttime="20230915 14:34:03.683" endtime="20230915 14:34:03.753"/>
</kw>
<msg timestamp="20230915 14:34:03.753" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 14:34:03.682" endtime="20230915 14:34:03.753"/>
</kw>
<msg timestamp="20230915 14:34:03.753" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230915 14:34:03.682" endtime="20230915 14:34:03.753"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230915 14:34:03.754" endtime="20230915 14:34:03.754"/>
</kw>
<status status="NOT RUN" starttime="20230915 14:34:03.753" endtime="20230915 14:34:03.754"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 14:34:03.754" endtime="20230915 14:34:03.755"/>
</kw>
<status status="PASS" starttime="20230915 14:34:03.754" endtime="20230915 14:34:03.755"/>
</branch>
<status status="PASS" starttime="20230915 14:34:03.753" endtime="20230915 14:34:03.755"/>
</if>
<status status="PASS" starttime="20230915 14:34:03.681" endtime="20230915 14:34:03.755"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230915 14:34:03.595" endtime="20230915 14:34:03.755"/>
</test>
<doc>Smoke test to start cluster with docker-compose environments.</doc>
<status status="PASS" starttime="20230915 14:33:20.476" endtime="20230915 14:34:03.757"/>
</suite>
<suite id="s1-s3-s2" name="Recon-Nssummary" source="/opt/hadoop/smoketest/recon/recon-nssummary.robot">
<test id="s1-s3-s2-t1" name="Check volume creation" line="99">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 14:34:03.775" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 14:34:03.778" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 14:34:03.778" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230915 14:34:03.771" endtime="20230915 14:34:03.778"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 14:34:03.780" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230915 14:34:03.779" endtime="20230915 14:34:03.780"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 14:34:03.780" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 14:34:03.780" endtime="20230915 14:34:03.780"/>
</kw>
<status status="PASS" starttime="20230915 14:34:03.771" endtime="20230915 14:34:03.781"/>
</kw>
<msg timestamp="20230915 14:34:03.781" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 14:34:03.770" endtime="20230915 14:34:03.781"/>
</kw>
<status status="PASS" starttime="20230915 14:34:03.770" endtime="20230915 14:34:03.781"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230915 14:34:03.782" endtime="20230915 14:34:03.782"/>
</kw>
<status status="PASS" starttime="20230915 14:34:03.781" endtime="20230915 14:34:03.782"/>
</kw>
<kw name="Create volume">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[LOWER]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230915 14:34:03.783" level="INFO">${random} = qgmex</msg>
<status status="PASS" starttime="20230915 14:34:03.783" endtime="20230915 14:34:03.784"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${VOLUME}</arg>
<arg>vol-${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230915 14:34:03.784" level="INFO">${VOLUME} = vol-qgmex</msg>
<status status="PASS" starttime="20230915 14:34:03.784" endtime="20230915 14:34:03.784"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create /${VOLUME}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 14:34:03.789" level="INFO">Running command 'ozone sh volume create /vol-qgmex 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 14:34:08.786" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 14:34:08.786" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230915 14:34:03.786" endtime="20230915 14:34:08.786"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 14:34:08.788" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230915 14:34:08.787" endtime="20230915 14:34:08.788"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 14:34:08.788" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 14:34:08.788" endtime="20230915 14:34:08.788"/>
</kw>
<status status="PASS" starttime="20230915 14:34:03.785" endtime="20230915 14:34:08.789"/>
</kw>
<msg timestamp="20230915 14:34:08.789" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 14:34:03.785" endtime="20230915 14:34:08.789"/>
</kw>
<msg timestamp="20230915 14:34:08.789" level="INFO">${result} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230915 14:34:03.784" endtime="20230915 14:34:08.789"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 14:34:08.789" endtime="20230915 14:34:08.790"/>
</kw>
<status status="PASS" starttime="20230915 14:34:03.782" endtime="20230915 14:34:08.790"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230915 14:34:03.769" endtime="20230915 14:34:08.790"/>
</test>
<test id="s1-s3-s2-t2" name="Check bucket creation" line="104">
<kw name="Create bucket">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[LOWER]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230915 14:34:08.793" level="INFO">${random} = mwvex</msg>
<status status="PASS" starttime="20230915 14:34:08.792" endtime="20230915 14:34:08.793"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${BUCKET}</arg>
<arg>buc-${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230915 14:34:08.793" level="INFO">${BUCKET} = buc-mwvex</msg>
<status status="PASS" starttime="20230915 14:34:08.793" endtime="20230915 14:34:08.794"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket create -l ${BUCKET_LAYOUT} /${VOLUME}/${BUCKET}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 14:34:08.798" level="INFO">Running command 'ozone sh bucket create -l FILE_SYSTEM_OPTIMIZED /vol-qgmex/buc-mwvex 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 14:34:13.508" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 14:34:13.508" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230915 14:34:08.795" endtime="20230915 14:34:13.508"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 14:34:13.509" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230915 14:34:13.509" endtime="20230915 14:34:13.509"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 14:34:13.510" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 14:34:13.510" endtime="20230915 14:34:13.510"/>
</kw>
<status status="PASS" starttime="20230915 14:34:08.795" endtime="20230915 14:34:13.510"/>
</kw>
<msg timestamp="20230915 14:34:13.510" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 14:34:08.794" endtime="20230915 14:34:13.510"/>
</kw>
<msg timestamp="20230915 14:34:13.511" level="INFO">${result} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230915 14:34:08.794" endtime="20230915 14:34:13.511"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 14:34:13.511" endtime="20230915 14:34:13.511"/>
</kw>
<status status="PASS" starttime="20230915 14:34:08.792" endtime="20230915 14:34:13.511"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230915 14:34:08.791" endtime="20230915 14:34:13.511"/>
</test>
<test id="s1-s3-s2-t3" name="Check keys creation" line="107">
<kw name="Create keys">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key put /${VOLUME}/${BUCKET}/file1 README.md</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 14:34:13.518" level="INFO">Running command 'ozone sh key put /vol-qgmex/buc-mwvex/file1 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 14:34:21.186" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 14:34:21.187" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230915 14:34:13.515" endtime="20230915 14:34:21.187"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 14:34:21.188" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230915 14:34:21.187" endtime="20230915 14:34:21.188"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 14:34:21.189" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 14:34:21.188" endtime="20230915 14:34:21.189"/>
</kw>
<status status="PASS" starttime="20230915 14:34:13.514" endtime="20230915 14:34:21.189"/>
</kw>
<msg timestamp="20230915 14:34:21.189" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 14:34:13.514" endtime="20230915 14:34:21.189"/>
</kw>
<msg timestamp="20230915 14:34:21.189" level="INFO">${result} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230915 14:34:13.513" endtime="20230915 14:34:21.189"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 14:34:21.189" endtime="20230915 14:34:21.190"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key put /${VOLUME}/${BUCKET}/dir1/dir2/file2 HISTORY.md</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 14:34:21.194" level="INFO">Running command 'ozone sh key put /vol-qgmex/buc-mwvex/dir1/dir2/file2 HISTORY.md 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 14:34:28.646" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 14:34:28.646" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230915 14:34:21.191" endtime="20230915 14:34:28.646"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 14:34:28.647" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230915 14:34:28.646" endtime="20230915 14:34:28.648"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 14:34:28.648" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 14:34:28.648" endtime="20230915 14:34:28.649"/>
</kw>
<status status="PASS" starttime="20230915 14:34:21.191" endtime="20230915 14:34:28.649"/>
</kw>
<msg timestamp="20230915 14:34:28.649" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 14:34:21.191" endtime="20230915 14:34:28.649"/>
</kw>
<msg timestamp="20230915 14:34:28.649" level="INFO">${result} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230915 14:34:21.190" endtime="20230915 14:34:28.649"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 14:34:28.649" endtime="20230915 14:34:28.650"/>
</kw>
<status status="PASS" starttime="20230915 14:34:13.513" endtime="20230915 14:34:28.650"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230915 14:34:13.512" endtime="20230915 14:34:28.650"/>
</test>
<test id="s1-s3-s2-t4" name="Check Summary api access" line="110">
<kw name="Check Access">
<arg>${SUMMARY_URL}?path=/</arg>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 14:34:28.658" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 14:34:28.662" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 14:34:28.662" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230915 14:34:28.655" endtime="20230915 14:34:28.662"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 14:34:28.663" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230915 14:34:28.663" endtime="20230915 14:34:28.663"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 14:34:28.665" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 14:34:28.664" endtime="20230915 14:34:28.665"/>
</kw>
<status status="PASS" starttime="20230915 14:34:28.654" endtime="20230915 14:34:28.666"/>
</kw>
<msg timestamp="20230915 14:34:28.666" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 14:34:28.654" endtime="20230915 14:34:28.666"/>
</kw>
<status status="PASS" starttime="20230915 14:34:28.653" endtime="20230915 14:34:28.666"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 14:34:28.671" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 14:34:28.734" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 14:34:28.734" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230915 14:34:28.668" endtime="20230915 14:34:28.734"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 14:34:28.737" level="INFO">200</msg>
<status status="PASS" starttime="20230915 14:34:28.735" endtime="20230915 14:34:28.737"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 14:34:28.737" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 14:34:28.737" endtime="20230915 14:34:28.738"/>
</kw>
<status status="PASS" starttime="20230915 14:34:28.668" endtime="20230915 14:34:28.738"/>
</kw>
<msg timestamp="20230915 14:34:28.738" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 14:34:28.667" endtime="20230915 14:34:28.738"/>
</kw>
<msg timestamp="20230915 14:34:28.738" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230915 14:34:28.667" endtime="20230915 14:34:28.738"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230915 14:34:28.739" endtime="20230915 14:34:28.739"/>
</kw>
<status status="NOT RUN" starttime="20230915 14:34:28.739" endtime="20230915 14:34:28.739"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 14:34:28.739" endtime="20230915 14:34:28.740"/>
</kw>
<status status="PASS" starttime="20230915 14:34:28.739" endtime="20230915 14:34:28.740"/>
</branch>
<status status="PASS" starttime="20230915 14:34:28.739" endtime="20230915 14:34:28.740"/>
</if>
<status status="PASS" starttime="20230915 14:34:28.666" endtime="20230915 14:34:28.740"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230915 14:34:28.741" endtime="20230915 14:34:28.741"/>
</kw>
<status status="PASS" starttime="20230915 14:34:28.740" endtime="20230915 14:34:28.741"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>403</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 14:34:28.747" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 14:34:28.765" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 14:34:28.765" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230915 14:34:28.744" endtime="20230915 14:34:28.765"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 14:34:28.767" level="INFO">200</msg>
<status status="PASS" starttime="20230915 14:34:28.766" endtime="20230915 14:34:28.767"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 14:34:28.767" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 14:34:28.767" endtime="20230915 14:34:28.768"/>
</kw>
<status status="PASS" starttime="20230915 14:34:28.743" endtime="20230915 14:34:28.768"/>
</kw>
<msg timestamp="20230915 14:34:28.768" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 14:34:28.743" endtime="20230915 14:34:28.768"/>
</kw>
<msg timestamp="20230915 14:34:28.768" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230915 14:34:28.742" endtime="20230915 14:34:28.768"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230915 14:34:28.769" endtime="20230915 14:34:28.769"/>
</kw>
<status status="NOT RUN" starttime="20230915 14:34:28.769" endtime="20230915 14:34:28.769"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 14:34:28.769" endtime="20230915 14:34:28.770"/>
</kw>
<status status="PASS" starttime="20230915 14:34:28.769" endtime="20230915 14:34:28.770"/>
</branch>
<status status="PASS" starttime="20230915 14:34:28.768" endtime="20230915 14:34:28.770"/>
</if>
<status status="PASS" starttime="20230915 14:34:28.742" endtime="20230915 14:34:28.770"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230915 14:34:28.771" endtime="20230915 14:34:28.771"/>
</kw>
<status status="PASS" starttime="20230915 14:34:28.770" endtime="20230915 14:34:28.771"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 14:34:28.815" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 14:34:28.815" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 14:34:28.816" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230915 14:34:28.773" endtime="20230915 14:34:28.816"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 14:34:28.816" level="INFO">200</msg>
<status status="PASS" starttime="20230915 14:34:28.816" endtime="20230915 14:34:28.817"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 14:34:28.817" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 14:34:28.817" endtime="20230915 14:34:28.817"/>
</kw>
<status status="PASS" starttime="20230915 14:34:28.773" endtime="20230915 14:34:28.818"/>
</kw>
<msg timestamp="20230915 14:34:28.818" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 14:34:28.772" endtime="20230915 14:34:28.818"/>
</kw>
<msg timestamp="20230915 14:34:28.818" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230915 14:34:28.772" endtime="20230915 14:34:28.818"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230915 14:34:28.818" endtime="20230915 14:34:28.819"/>
</kw>
<status status="NOT RUN" starttime="20230915 14:34:28.818" endtime="20230915 14:34:28.819"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 14:34:28.819" endtime="20230915 14:34:28.819"/>
</kw>
<status status="PASS" starttime="20230915 14:34:28.819" endtime="20230915 14:34:28.819"/>
</branch>
<status status="PASS" starttime="20230915 14:34:28.818" endtime="20230915 14:34:28.819"/>
</if>
<status status="PASS" starttime="20230915 14:34:28.771" endtime="20230915 14:34:28.819"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230915 14:34:28.820" endtime="20230915 14:34:28.820"/>
</kw>
<status status="PASS" starttime="20230915 14:34:28.820" endtime="20230915 14:34:28.820"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 14:34:28.825" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 14:34:28.842" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 14:34:28.842" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230915 14:34:28.822" endtime="20230915 14:34:28.842"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 14:34:28.844" level="INFO">200</msg>
<status status="PASS" starttime="20230915 14:34:28.843" endtime="20230915 14:34:28.844"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 14:34:28.845" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 14:34:28.844" endtime="20230915 14:34:28.845"/>
</kw>
<status status="PASS" starttime="20230915 14:34:28.822" endtime="20230915 14:34:28.845"/>
</kw>
<msg timestamp="20230915 14:34:28.845" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 14:34:28.821" endtime="20230915 14:34:28.845"/>
</kw>
<msg timestamp="20230915 14:34:28.846" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230915 14:34:28.821" endtime="20230915 14:34:28.846"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230915 14:34:28.846" endtime="20230915 14:34:28.846"/>
</kw>
<status status="NOT RUN" starttime="20230915 14:34:28.846" endtime="20230915 14:34:28.846"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 14:34:28.847" endtime="20230915 14:34:28.847"/>
</kw>
<status status="PASS" starttime="20230915 14:34:28.846" endtime="20230915 14:34:28.847"/>
</branch>
<status status="PASS" starttime="20230915 14:34:28.846" endtime="20230915 14:34:28.847"/>
</if>
<status status="PASS" starttime="20230915 14:34:28.820" endtime="20230915 14:34:28.847"/>
</kw>
<status status="PASS" starttime="20230915 14:34:28.652" endtime="20230915 14:34:28.847"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230915 14:34:28.652" endtime="20230915 14:34:28.848"/>
</test>
<test id="s1-s3-s2-t5" name="Check Disk Usage api access" line="113">
<kw name="Check Access">
<arg>${DISK_USAGE_URL}?path=/</arg>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 14:34:28.854" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 14:34:28.858" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 14:34:28.859" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230915 14:34:28.851" endtime="20230915 14:34:28.859"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 14:34:28.860" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230915 14:34:28.859" endtime="20230915 14:34:28.860"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 14:34:28.860" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 14:34:28.860" endtime="20230915 14:34:28.861"/>
</kw>
<status status="PASS" starttime="20230915 14:34:28.851" endtime="20230915 14:34:28.861"/>
</kw>
<msg timestamp="20230915 14:34:28.861" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 14:34:28.851" endtime="20230915 14:34:28.861"/>
</kw>
<status status="PASS" starttime="20230915 14:34:28.850" endtime="20230915 14:34:28.861"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 14:34:28.866" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/du?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 14:34:28.891" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 14:34:28.891" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230915 14:34:28.864" endtime="20230915 14:34:28.891"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 14:34:28.892" level="INFO">200</msg>
<status status="PASS" starttime="20230915 14:34:28.892" endtime="20230915 14:34:28.893"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 14:34:28.893" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 14:34:28.893" endtime="20230915 14:34:28.893"/>
</kw>
<status status="PASS" starttime="20230915 14:34:28.863" endtime="20230915 14:34:28.893"/>
</kw>
<msg timestamp="20230915 14:34:28.893" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 14:34:28.863" endtime="20230915 14:34:28.894"/>
</kw>
<msg timestamp="20230915 14:34:28.894" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230915 14:34:28.862" endtime="20230915 14:34:28.894"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230915 14:34:28.894" endtime="20230915 14:34:28.894"/>
</kw>
<status status="NOT RUN" starttime="20230915 14:34:28.894" endtime="20230915 14:34:28.894"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 14:34:28.895" endtime="20230915 14:34:28.895"/>
</kw>
<status status="PASS" starttime="20230915 14:34:28.895" endtime="20230915 14:34:28.895"/>
</branch>
<status status="PASS" starttime="20230915 14:34:28.894" endtime="20230915 14:34:28.895"/>
</if>
<status status="PASS" starttime="20230915 14:34:28.861" endtime="20230915 14:34:28.895"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230915 14:34:28.896" endtime="20230915 14:34:28.896"/>
</kw>
<status status="PASS" starttime="20230915 14:34:28.895" endtime="20230915 14:34:28.896"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>403</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 14:34:28.901" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/du?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 14:34:28.922" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 14:34:28.922" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230915 14:34:28.899" endtime="20230915 14:34:28.922"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 14:34:28.924" level="INFO">200</msg>
<status status="PASS" starttime="20230915 14:34:28.923" endtime="20230915 14:34:28.924"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 14:34:28.924" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 14:34:28.924" endtime="20230915 14:34:28.925"/>
</kw>
<status status="PASS" starttime="20230915 14:34:28.898" endtime="20230915 14:34:28.925"/>
</kw>
<msg timestamp="20230915 14:34:28.925" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 14:34:28.897" endtime="20230915 14:34:28.925"/>
</kw>
<msg timestamp="20230915 14:34:28.925" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230915 14:34:28.897" endtime="20230915 14:34:28.925"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230915 14:34:28.926" endtime="20230915 14:34:28.926"/>
</kw>
<status status="NOT RUN" starttime="20230915 14:34:28.926" endtime="20230915 14:34:28.926"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 14:34:28.926" endtime="20230915 14:34:28.927"/>
</kw>
<status status="PASS" starttime="20230915 14:34:28.926" endtime="20230915 14:34:28.927"/>
</branch>
<status status="PASS" starttime="20230915 14:34:28.926" endtime="20230915 14:34:28.927"/>
</if>
<status status="PASS" starttime="20230915 14:34:28.896" endtime="20230915 14:34:28.927"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230915 14:34:28.928" endtime="20230915 14:34:28.928"/>
</kw>
<status status="PASS" starttime="20230915 14:34:28.927" endtime="20230915 14:34:28.928"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 14:34:28.933" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/du?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 14:34:28.957" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 14:34:28.957" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230915 14:34:28.930" endtime="20230915 14:34:28.957"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 14:34:28.959" level="INFO">200</msg>
<status status="PASS" starttime="20230915 14:34:28.958" endtime="20230915 14:34:28.959"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 14:34:28.960" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 14:34:28.960" endtime="20230915 14:34:28.960"/>
</kw>
<status status="PASS" starttime="20230915 14:34:28.930" endtime="20230915 14:34:28.960"/>
</kw>
<msg timestamp="20230915 14:34:28.960" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 14:34:28.930" endtime="20230915 14:34:28.961"/>
</kw>
<msg timestamp="20230915 14:34:28.961" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230915 14:34:28.929" endtime="20230915 14:34:28.961"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230915 14:34:28.961" endtime="20230915 14:34:28.961"/>
</kw>
<status status="NOT RUN" starttime="20230915 14:34:28.961" endtime="20230915 14:34:28.962"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 14:34:28.962" endtime="20230915 14:34:28.962"/>
</kw>
<status status="PASS" starttime="20230915 14:34:28.962" endtime="20230915 14:34:28.962"/>
</branch>
<status status="PASS" starttime="20230915 14:34:28.961" endtime="20230915 14:34:28.962"/>
</if>
<status status="PASS" starttime="20230915 14:34:28.928" endtime="20230915 14:34:28.962"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230915 14:34:28.963" endtime="20230915 14:34:28.963"/>
</kw>
<status status="PASS" starttime="20230915 14:34:28.962" endtime="20230915 14:34:28.963"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 14:34:28.968" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/du?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 14:34:28.986" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 14:34:28.986" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230915 14:34:28.965" endtime="20230915 14:34:28.986"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 14:34:28.987" level="INFO">200</msg>
<status status="PASS" starttime="20230915 14:34:28.987" endtime="20230915 14:34:28.987"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 14:34:28.988" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 14:34:28.987" endtime="20230915 14:34:28.988"/>
</kw>
<status status="PASS" starttime="20230915 14:34:28.964" endtime="20230915 14:34:28.988"/>
</kw>
<msg timestamp="20230915 14:34:28.988" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 14:34:28.964" endtime="20230915 14:34:28.989"/>
</kw>
<msg timestamp="20230915 14:34:28.989" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230915 14:34:28.964" endtime="20230915 14:34:28.989"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230915 14:34:28.990" endtime="20230915 14:34:28.990"/>
</kw>
<status status="NOT RUN" starttime="20230915 14:34:28.989" endtime="20230915 14:34:28.990"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 14:34:28.990" endtime="20230915 14:34:28.990"/>
</kw>
<status status="PASS" starttime="20230915 14:34:28.990" endtime="20230915 14:34:28.990"/>
</branch>
<status status="PASS" starttime="20230915 14:34:28.989" endtime="20230915 14:34:28.991"/>
</if>
<status status="PASS" starttime="20230915 14:34:28.963" endtime="20230915 14:34:28.991"/>
</kw>
<status status="PASS" starttime="20230915 14:34:28.849" endtime="20230915 14:34:28.991"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230915 14:34:28.849" endtime="20230915 14:34:28.991"/>
</test>
<test id="s1-s3-s2-t6" name="Check Quota Usage api access" line="116">
<kw name="Check Access">
<arg>${QUOTA_USAGE_URL}?path=/</arg>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 14:34:28.998" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 14:34:29.002" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 14:34:29.002" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230915 14:34:28.995" endtime="20230915 14:34:29.002"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 14:34:29.003" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230915 14:34:29.003" endtime="20230915 14:34:29.003"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 14:34:29.004" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 14:34:29.004" endtime="20230915 14:34:29.004"/>
</kw>
<status status="PASS" starttime="20230915 14:34:28.995" endtime="20230915 14:34:29.004"/>
</kw>
<msg timestamp="20230915 14:34:29.004" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 14:34:28.994" endtime="20230915 14:34:29.005"/>
</kw>
<status status="PASS" starttime="20230915 14:34:28.994" endtime="20230915 14:34:29.005"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 14:34:29.010" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/quota?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 14:34:29.059" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 14:34:29.059" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230915 14:34:29.007" endtime="20230915 14:34:29.059"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 14:34:29.060" level="INFO">200</msg>
<status status="PASS" starttime="20230915 14:34:29.059" endtime="20230915 14:34:29.061"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 14:34:29.061" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 14:34:29.061" endtime="20230915 14:34:29.061"/>
</kw>
<status status="PASS" starttime="20230915 14:34:29.007" endtime="20230915 14:34:29.062"/>
</kw>
<msg timestamp="20230915 14:34:29.062" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 14:34:29.006" endtime="20230915 14:34:29.062"/>
</kw>
<msg timestamp="20230915 14:34:29.062" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230915 14:34:29.006" endtime="20230915 14:34:29.062"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230915 14:34:29.063" endtime="20230915 14:34:29.063"/>
</kw>
<status status="NOT RUN" starttime="20230915 14:34:29.062" endtime="20230915 14:34:29.063"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 14:34:29.063" endtime="20230915 14:34:29.064"/>
</kw>
<status status="PASS" starttime="20230915 14:34:29.063" endtime="20230915 14:34:29.064"/>
</branch>
<status status="PASS" starttime="20230915 14:34:29.062" endtime="20230915 14:34:29.064"/>
</if>
<status status="PASS" starttime="20230915 14:34:29.005" endtime="20230915 14:34:29.064"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230915 14:34:29.065" endtime="20230915 14:34:29.066"/>
</kw>
<status status="PASS" starttime="20230915 14:34:29.064" endtime="20230915 14:34:29.066"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>403</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 14:34:29.072" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/quota?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 14:34:29.102" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 14:34:29.102" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230915 14:34:29.068" endtime="20230915 14:34:29.102"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 14:34:29.104" level="INFO">200</msg>
<status status="PASS" starttime="20230915 14:34:29.103" endtime="20230915 14:34:29.104"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 14:34:29.105" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 14:34:29.104" endtime="20230915 14:34:29.105"/>
</kw>
<status status="PASS" starttime="20230915 14:34:29.067" endtime="20230915 14:34:29.105"/>
</kw>
<msg timestamp="20230915 14:34:29.105" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 14:34:29.067" endtime="20230915 14:34:29.105"/>
</kw>
<msg timestamp="20230915 14:34:29.105" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230915 14:34:29.066" endtime="20230915 14:34:29.105"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230915 14:34:29.106" endtime="20230915 14:34:29.106"/>
</kw>
<status status="NOT RUN" starttime="20230915 14:34:29.106" endtime="20230915 14:34:29.106"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 14:34:29.106" endtime="20230915 14:34:29.107"/>
</kw>
<status status="PASS" starttime="20230915 14:34:29.106" endtime="20230915 14:34:29.107"/>
</branch>
<status status="PASS" starttime="20230915 14:34:29.106" endtime="20230915 14:34:29.107"/>
</if>
<status status="PASS" starttime="20230915 14:34:29.066" endtime="20230915 14:34:29.107"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230915 14:34:29.108" endtime="20230915 14:34:29.108"/>
</kw>
<status status="PASS" starttime="20230915 14:34:29.107" endtime="20230915 14:34:29.108"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 14:34:29.113" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/quota?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 14:34:29.133" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 14:34:29.133" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230915 14:34:29.110" endtime="20230915 14:34:29.133"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 14:34:29.134" level="INFO">200</msg>
<status status="PASS" starttime="20230915 14:34:29.134" endtime="20230915 14:34:29.134"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 14:34:29.135" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 14:34:29.135" endtime="20230915 14:34:29.135"/>
</kw>
<status status="PASS" starttime="20230915 14:34:29.110" endtime="20230915 14:34:29.135"/>
</kw>
<msg timestamp="20230915 14:34:29.136" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 14:34:29.109" endtime="20230915 14:34:29.136"/>
</kw>
<msg timestamp="20230915 14:34:29.136" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230915 14:34:29.109" endtime="20230915 14:34:29.136"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230915 14:34:29.137" endtime="20230915 14:34:29.137"/>
</kw>
<status status="NOT RUN" starttime="20230915 14:34:29.136" endtime="20230915 14:34:29.137"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 14:34:29.137" endtime="20230915 14:34:29.137"/>
</kw>
<status status="PASS" starttime="20230915 14:34:29.137" endtime="20230915 14:34:29.137"/>
</branch>
<status status="PASS" starttime="20230915 14:34:29.136" endtime="20230915 14:34:29.137"/>
</if>
<status status="PASS" starttime="20230915 14:34:29.108" endtime="20230915 14:34:29.138"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230915 14:34:29.139" endtime="20230915 14:34:29.139"/>
</kw>
<status status="PASS" starttime="20230915 14:34:29.138" endtime="20230915 14:34:29.139"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 14:34:29.145" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/quota?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 14:34:29.167" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 14:34:29.167" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230915 14:34:29.142" endtime="20230915 14:34:29.167"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 14:34:29.169" level="INFO">200</msg>
<status status="PASS" starttime="20230915 14:34:29.168" endtime="20230915 14:34:29.169"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 14:34:29.169" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 14:34:29.169" endtime="20230915 14:34:29.170"/>
</kw>
<status status="PASS" starttime="20230915 14:34:29.141" endtime="20230915 14:34:29.170"/>
</kw>
<msg timestamp="20230915 14:34:29.170" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 14:34:29.141" endtime="20230915 14:34:29.170"/>
</kw>
<msg timestamp="20230915 14:34:29.170" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230915 14:34:29.140" endtime="20230915 14:34:29.170"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230915 14:34:29.171" endtime="20230915 14:34:29.171"/>
</kw>
<status status="NOT RUN" starttime="20230915 14:34:29.171" endtime="20230915 14:34:29.171"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 14:34:29.171" endtime="20230915 14:34:29.172"/>
</kw>
<status status="PASS" starttime="20230915 14:34:29.171" endtime="20230915 14:34:29.172"/>
</branch>
<status status="PASS" starttime="20230915 14:34:29.171" endtime="20230915 14:34:29.172"/>
</if>
<status status="PASS" starttime="20230915 14:34:29.139" endtime="20230915 14:34:29.172"/>
</kw>
<status status="PASS" starttime="20230915 14:34:28.993" endtime="20230915 14:34:29.172"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230915 14:34:28.992" endtime="20230915 14:34:29.172"/>
</test>
<test id="s1-s3-s2-t7" name="Check File Size Distribution api access" line="119">
<kw name="Check Access">
<arg>${FILE_SIZE_DIST_URL}?path=/</arg>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 14:34:29.179" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 14:34:29.183" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 14:34:29.183" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230915 14:34:29.176" endtime="20230915 14:34:29.183"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 14:34:29.184" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230915 14:34:29.183" endtime="20230915 14:34:29.184"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 14:34:29.185" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 14:34:29.184" endtime="20230915 14:34:29.185"/>
</kw>
<status status="PASS" starttime="20230915 14:34:29.176" endtime="20230915 14:34:29.185"/>
</kw>
<msg timestamp="20230915 14:34:29.185" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 14:34:29.175" endtime="20230915 14:34:29.186"/>
</kw>
<status status="PASS" starttime="20230915 14:34:29.175" endtime="20230915 14:34:29.186"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 14:34:29.191" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/dist?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 14:34:29.215" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 14:34:29.215" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230915 14:34:29.188" endtime="20230915 14:34:29.215"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 14:34:29.217" level="INFO">200</msg>
<status status="PASS" starttime="20230915 14:34:29.216" endtime="20230915 14:34:29.217"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 14:34:29.218" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 14:34:29.217" endtime="20230915 14:34:29.218"/>
</kw>
<status status="PASS" starttime="20230915 14:34:29.187" endtime="20230915 14:34:29.218"/>
</kw>
<msg timestamp="20230915 14:34:29.219" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 14:34:29.187" endtime="20230915 14:34:29.219"/>
</kw>
<msg timestamp="20230915 14:34:29.219" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230915 14:34:29.186" endtime="20230915 14:34:29.219"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230915 14:34:29.220" endtime="20230915 14:34:29.220"/>
</kw>
<status status="NOT RUN" starttime="20230915 14:34:29.219" endtime="20230915 14:34:29.220"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 14:34:29.220" endtime="20230915 14:34:29.220"/>
</kw>
<status status="PASS" starttime="20230915 14:34:29.220" endtime="20230915 14:34:29.221"/>
</branch>
<status status="PASS" starttime="20230915 14:34:29.219" endtime="20230915 14:34:29.221"/>
</if>
<status status="PASS" starttime="20230915 14:34:29.186" endtime="20230915 14:34:29.221"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230915 14:34:29.222" endtime="20230915 14:34:29.222"/>
</kw>
<status status="PASS" starttime="20230915 14:34:29.221" endtime="20230915 14:34:29.222"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>403</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 14:34:29.228" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/dist?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 14:34:29.246" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 14:34:29.246" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230915 14:34:29.225" endtime="20230915 14:34:29.246"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 14:34:29.247" level="INFO">200</msg>
<status status="PASS" starttime="20230915 14:34:29.246" endtime="20230915 14:34:29.247"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 14:34:29.248" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 14:34:29.247" endtime="20230915 14:34:29.248"/>
</kw>
<status status="PASS" starttime="20230915 14:34:29.224" endtime="20230915 14:34:29.248"/>
</kw>
<msg timestamp="20230915 14:34:29.248" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 14:34:29.223" endtime="20230915 14:34:29.248"/>
</kw>
<msg timestamp="20230915 14:34:29.249" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230915 14:34:29.223" endtime="20230915 14:34:29.249"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230915 14:34:29.249" endtime="20230915 14:34:29.249"/>
</kw>
<status status="NOT RUN" starttime="20230915 14:34:29.249" endtime="20230915 14:34:29.249"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 14:34:29.250" endtime="20230915 14:34:29.250"/>
</kw>
<status status="PASS" starttime="20230915 14:34:29.250" endtime="20230915 14:34:29.250"/>
</branch>
<status status="PASS" starttime="20230915 14:34:29.249" endtime="20230915 14:34:29.250"/>
</if>
<status status="PASS" starttime="20230915 14:34:29.222" endtime="20230915 14:34:29.250"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230915 14:34:29.251" endtime="20230915 14:34:29.251"/>
</kw>
<status status="PASS" starttime="20230915 14:34:29.251" endtime="20230915 14:34:29.252"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 14:34:29.256" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/dist?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 14:34:29.274" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 14:34:29.274" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230915 14:34:29.253" endtime="20230915 14:34:29.274"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 14:34:29.275" level="INFO">200</msg>
<status status="PASS" starttime="20230915 14:34:29.274" endtime="20230915 14:34:29.275"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 14:34:29.276" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 14:34:29.275" endtime="20230915 14:34:29.276"/>
</kw>
<status status="PASS" starttime="20230915 14:34:29.253" endtime="20230915 14:34:29.276"/>
</kw>
<msg timestamp="20230915 14:34:29.276" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 14:34:29.253" endtime="20230915 14:34:29.277"/>
</kw>
<msg timestamp="20230915 14:34:29.277" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230915 14:34:29.252" endtime="20230915 14:34:29.277"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230915 14:34:29.277" endtime="20230915 14:34:29.277"/>
</kw>
<status status="NOT RUN" starttime="20230915 14:34:29.277" endtime="20230915 14:34:29.278"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 14:34:29.278" endtime="20230915 14:34:29.278"/>
</kw>
<status status="PASS" starttime="20230915 14:34:29.278" endtime="20230915 14:34:29.278"/>
</branch>
<status status="PASS" starttime="20230915 14:34:29.277" endtime="20230915 14:34:29.278"/>
</if>
<status status="PASS" starttime="20230915 14:34:29.252" endtime="20230915 14:34:29.278"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230915 14:34:29.279" endtime="20230915 14:34:29.279"/>
</kw>
<status status="PASS" starttime="20230915 14:34:29.278" endtime="20230915 14:34:29.279"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 14:34:29.284" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/dist?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 14:34:29.302" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 14:34:29.302" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230915 14:34:29.281" endtime="20230915 14:34:29.302"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 14:34:29.304" level="INFO">200</msg>
<status status="PASS" starttime="20230915 14:34:29.303" endtime="20230915 14:34:29.304"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 14:34:29.305" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 14:34:29.304" endtime="20230915 14:34:29.305"/>
</kw>
<status status="PASS" starttime="20230915 14:34:29.281" endtime="20230915 14:34:29.305"/>
</kw>
<msg timestamp="20230915 14:34:29.305" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 14:34:29.280" endtime="20230915 14:34:29.305"/>
</kw>
<msg timestamp="20230915 14:34:29.306" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230915 14:34:29.280" endtime="20230915 14:34:29.306"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230915 14:34:29.306" endtime="20230915 14:34:29.306"/>
</kw>
<status status="NOT RUN" starttime="20230915 14:34:29.306" endtime="20230915 14:34:29.307"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 14:34:29.307" endtime="20230915 14:34:29.307"/>
</kw>
<status status="PASS" starttime="20230915 14:34:29.307" endtime="20230915 14:34:29.307"/>
</branch>
<status status="PASS" starttime="20230915 14:34:29.306" endtime="20230915 14:34:29.307"/>
</if>
<status status="PASS" starttime="20230915 14:34:29.280" endtime="20230915 14:34:29.307"/>
</kw>
<status status="PASS" starttime="20230915 14:34:29.174" endtime="20230915 14:34:29.308"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230915 14:34:29.174" endtime="20230915 14:34:29.308"/>
</test>
<test id="s1-s3-s2-t8" name="Check Recon Namespace Summary Root" line="122">
<kw name="Wait For Summary">
<arg>${SUMMARY_URL}?path=/</arg>
<arg>ROOT</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 14:34:29.317" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 14:34:29.335" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 14:34:29.335" level="INFO">${output} = {"path":"","type":"ROOT","countStats":{"numVolume":3,"numBucket":2,"numDir":1,"numKey":1},"objectInfo":{"metadata":null,"name":null,"quotaInBytes":0,"quotaInNamespace":0,"usedNamespace":0,"creationTim...</msg>
<status status="PASS" starttime="20230915 14:34:29.314" endtime="20230915 14:34:29.335"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 14:34:29.336" level="INFO">{"path":"","type":"ROOT","countStats":{"numVolume":3,"numBucket":2,"numDir":1,"numKey":1},"objectInfo":{"metadata":null,"name":null,"quotaInBytes":0,"quotaInNamespace":0,"usedNamespace":0,"creationTime":0,"modificationTime":0,"acls":null},"status":"OK"}</msg>
<status status="PASS" starttime="20230915 14:34:29.335" endtime="20230915 14:34:29.336"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 14:34:29.337" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 14:34:29.337" endtime="20230915 14:34:29.338"/>
</kw>
<status status="PASS" starttime="20230915 14:34:29.313" endtime="20230915 14:34:29.338"/>
</kw>
<msg timestamp="20230915 14:34:29.338" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 14:34:29.313" endtime="20230915 14:34:29.338"/>
</kw>
<msg timestamp="20230915 14:34:29.338" level="INFO">${result} = {"path":"","type":"ROOT","countStats":{"numVolume":3,"numBucket":2,"numDir":1,"numKey":1},"objectInfo":{"metadata":null,"name":null,"quotaInBytes":0,"quotaInNamespace":0,"usedNamespace":0,"creationTim...</msg>
<status status="PASS" starttime="20230915 14:34:29.312" endtime="20230915 14:34:29.338"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 14:34:29.338" endtime="20230915 14:34:29.339"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 14:34:29.339" endtime="20230915 14:34:29.339"/>
</kw>
<status status="PASS" starttime="20230915 14:34:29.311" endtime="20230915 14:34:29.340"/>
</kw>
<status status="PASS" starttime="20230915 14:34:29.311" endtime="20230915 14:34:29.340"/>
</kw>
<status status="PASS" starttime="20230915 14:34:29.310" endtime="20230915 14:34:29.340"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230915 14:34:29.309" endtime="20230915 14:34:29.340"/>
</test>
<test id="s1-s3-s2-t9" name="Check Recon Namespace Summary Volume" line="125">
<kw name="Wait For Summary">
<arg>${SUMMARY_URL}?path=/${VOLUME}</arg>
<arg>VOLUME</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 14:34:29.349" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-qgmex 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 14:34:29.366" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 14:34:29.366" level="INFO">${output} = {"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20230915 14:34:29.346" endtime="20230915 14:34:29.366"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 14:34:29.367" level="INFO">{"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20230915 14:34:29.366" endtime="20230915 14:34:29.368"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 14:34:29.368" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 14:34:29.368" endtime="20230915 14:34:29.368"/>
</kw>
<status status="PASS" starttime="20230915 14:34:29.345" endtime="20230915 14:34:29.369"/>
</kw>
<msg timestamp="20230915 14:34:29.369" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 14:34:29.345" endtime="20230915 14:34:29.369"/>
</kw>
<msg timestamp="20230915 14:34:29.369" level="INFO">${result} = {"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20230915 14:34:29.344" endtime="20230915 14:34:29.369"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20230915 14:34:29.370" level="FAIL">'{"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}' does not contain '"status":"OK"'</msg>
<status status="FAIL" starttime="20230915 14:34:29.369" endtime="20230915 14:34:29.370"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230915 14:34:29.370" endtime="20230915 14:34:29.370"/>
</kw>
<status status="FAIL" starttime="20230915 14:34:29.344" endtime="20230915 14:34:29.371"/>
</kw>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 14:34:39.377" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-qgmex 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 14:34:39.397" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 14:34:39.397" level="INFO">${output} = {"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20230915 14:34:39.374" endtime="20230915 14:34:39.397"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 14:34:39.398" level="INFO">{"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20230915 14:34:39.397" endtime="20230915 14:34:39.398"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 14:34:39.399" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 14:34:39.398" endtime="20230915 14:34:39.399"/>
</kw>
<status status="PASS" starttime="20230915 14:34:39.373" endtime="20230915 14:34:39.399"/>
</kw>
<msg timestamp="20230915 14:34:39.399" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 14:34:39.373" endtime="20230915 14:34:39.399"/>
</kw>
<msg timestamp="20230915 14:34:39.399" level="INFO">${result} = {"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20230915 14:34:39.372" endtime="20230915 14:34:39.399"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20230915 14:34:39.400" level="FAIL">'{"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}' does not contain '"status":"OK"'</msg>
<status status="FAIL" starttime="20230915 14:34:39.400" endtime="20230915 14:34:39.400"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230915 14:34:39.400" endtime="20230915 14:34:39.400"/>
</kw>
<status status="FAIL" starttime="20230915 14:34:39.371" endtime="20230915 14:34:39.401"/>
</kw>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 14:34:49.407" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-qgmex 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 14:34:49.423" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 14:34:49.423" level="INFO">${output} = {"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20230915 14:34:49.404" endtime="20230915 14:34:49.423"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 14:34:49.424" level="INFO">{"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20230915 14:34:49.423" endtime="20230915 14:34:49.425"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 14:34:49.425" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 14:34:49.425" endtime="20230915 14:34:49.425"/>
</kw>
<status status="PASS" starttime="20230915 14:34:49.403" endtime="20230915 14:34:49.426"/>
</kw>
<msg timestamp="20230915 14:34:49.426" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 14:34:49.403" endtime="20230915 14:34:49.426"/>
</kw>
<msg timestamp="20230915 14:34:49.426" level="INFO">${result} = {"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20230915 14:34:49.402" endtime="20230915 14:34:49.426"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20230915 14:34:49.427" level="FAIL">'{"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}' does not contain '"status":"OK"'</msg>
<status status="FAIL" starttime="20230915 14:34:49.426" endtime="20230915 14:34:49.427"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230915 14:34:49.427" endtime="20230915 14:34:49.427"/>
</kw>
<status status="FAIL" starttime="20230915 14:34:49.401" endtime="20230915 14:34:49.427"/>
</kw>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 14:34:59.433" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-qgmex 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 14:34:59.461" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 14:34:59.461" level="INFO">${output} = {"path":"","type":"VOLUME","countStats":{"numVolume":-1,"numBucket":1,"numDir":2,"numKey":2},"objectInfo":{"metadata":{},"name":"vol-qgmex","quotaInBytes":-1,"quotaInNamespace":-1,"usedNamespace":1,"c...</msg>
<status status="PASS" starttime="20230915 14:34:59.430" endtime="20230915 14:34:59.461"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 14:34:59.462" level="INFO">{"path":"","type":"VOLUME","countStats":{"numVolume":-1,"numBucket":1,"numDir":2,"numKey":2},"objectInfo":{"metadata":{},"name":"vol-qgmex","quotaInBytes":-1,"quotaInNamespace":-1,"usedNamespace":1,"creationTime":1694788448563,"modificationTime":1694788448563,"acls":[{"type":"USER","name":"hadoop","aclScope":"ACCESS","aclList":["ALL"]},{"type":"GROUP","name":"hadoop","aclScope":"ACCESS","aclList":["ALL"]}],"admin":"hadoop","owner":"hadoop","volume":"vol-qgmex"},"status":"OK"}</msg>
<status status="PASS" starttime="20230915 14:34:59.462" endtime="20230915 14:34:59.462"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 14:34:59.463" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 14:34:59.463" endtime="20230915 14:34:59.463"/>
</kw>
<status status="PASS" starttime="20230915 14:34:59.430" endtime="20230915 14:34:59.463"/>
</kw>
<msg timestamp="20230915 14:34:59.463" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 14:34:59.429" endtime="20230915 14:34:59.464"/>
</kw>
<msg timestamp="20230915 14:34:59.464" level="INFO">${result} = {"path":"","type":"VOLUME","countStats":{"numVolume":-1,"numBucket":1,"numDir":2,"numKey":2},"objectInfo":{"metadata":{},"name":"vol-qgmex","quotaInBytes":-1,"quotaInNamespace":-1,"usedNamespace":1,"c...</msg>
<status status="PASS" starttime="20230915 14:34:59.429" endtime="20230915 14:34:59.464"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 14:34:59.464" endtime="20230915 14:34:59.464"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 14:34:59.464" endtime="20230915 14:34:59.465"/>
</kw>
<status status="PASS" starttime="20230915 14:34:59.428" endtime="20230915 14:34:59.465"/>
</kw>
<status status="PASS" starttime="20230915 14:34:29.343" endtime="20230915 14:34:59.465"/>
</kw>
<status status="PASS" starttime="20230915 14:34:29.342" endtime="20230915 14:34:59.465"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230915 14:34:29.341" endtime="20230915 14:34:59.466"/>
</test>
<test id="s1-s3-s2-t10" name="Check Recon Namespace Summary Bucket" line="128">
<kw name="Wait For Summary">
<arg>${SUMMARY_URL}?path=/${VOLUME}/${BUCKET}</arg>
<arg>BUCKET</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 14:34:59.474" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-qgmex/buc-mwvex 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 14:34:59.514" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 14:34:59.514" level="INFO">${output} = {"path":"","type":"BUCKET","countStats":{"numVolume":-1,"numBucket":-1,"numDir":2,"numKey":2},"objectInfo":{"versioningEnabled":false,"metadata":{},"name":"buc-mwvex","quotaInBytes":-1,"quotaInNamespa...</msg>
<status status="PASS" starttime="20230915 14:34:59.471" endtime="20230915 14:34:59.514"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 14:34:59.515" level="INFO">{"path":"","type":"BUCKET","countStats":{"numVolume":-1,"numBucket":-1,"numDir":2,"numKey":2},"objectInfo":{"versioningEnabled":false,"metadata":{},"name":"buc-mwvex","quotaInBytes":-1,"quotaInNamespace":-1,"usedNamespace":4,"creationTime":1694788453427,"modificationTime":1694788453427,"acls":[{"type":"USER","name":"hadoop","aclScope":"ACCESS","aclList":["ALL"]},{"type":"GROUP","name":"hadoop","aclScope":"ACCESS","aclList":["ALL"]}],"volumeName":"vol-qgmex","storageType":"DISK","versioning":false,"usedBytes":null,"encryptionInfo":null,"replicationConfigInfo":null,"sourceVolume":null,"sourceBucket":null,"bucketLayout":"FILE_SYSTEM_OPTIMIZED","owner":"hadoop"},"status":"OK"}</msg>
<status status="PASS" starttime="20230915 14:34:59.514" endtime="20230915 14:34:59.515"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 14:34:59.516" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 14:34:59.516" endtime="20230915 14:34:59.516"/>
</kw>
<status status="PASS" starttime="20230915 14:34:59.471" endtime="20230915 14:34:59.516"/>
</kw>
<msg timestamp="20230915 14:34:59.516" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 14:34:59.471" endtime="20230915 14:34:59.516"/>
</kw>
<msg timestamp="20230915 14:34:59.517" level="INFO">${result} = {"path":"","type":"BUCKET","countStats":{"numVolume":-1,"numBucket":-1,"numDir":2,"numKey":2},"objectInfo":{"versioningEnabled":false,"metadata":{},"name":"buc-mwvex","quotaInBytes":-1,"quotaInNamespa...</msg>
<status status="PASS" starttime="20230915 14:34:59.470" endtime="20230915 14:34:59.517"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 14:34:59.517" endtime="20230915 14:34:59.517"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 14:34:59.517" endtime="20230915 14:34:59.518"/>
</kw>
<status status="PASS" starttime="20230915 14:34:59.470" endtime="20230915 14:34:59.518"/>
</kw>
<status status="PASS" starttime="20230915 14:34:59.469" endtime="20230915 14:34:59.518"/>
</kw>
<status status="PASS" starttime="20230915 14:34:59.468" endtime="20230915 14:34:59.518"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230915 14:34:59.467" endtime="20230915 14:34:59.518"/>
</test>
<test id="s1-s3-s2-t11" name="Check Recon Namespace Summary Key" line="131">
<kw name="Wait For Summary">
<arg>${SUMMARY_URL}?path=/${VOLUME}/${BUCKET}/file1</arg>
<arg>KEY</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 14:34:59.525" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-qgmex/buc-mwvex/file1 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 14:34:59.659" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 14:34:59.659" level="INFO">${output} = {"path":"","type":"KEY","countStats":{"numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0},"objectInfo":{"fileName":"file1","file":true,"metadata":{},"name":"file1","quotaInBytes":0,"quotaInNamespace...</msg>
<status status="PASS" starttime="20230915 14:34:59.523" endtime="20230915 14:34:59.659"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 14:34:59.660" level="INFO">{"path":"","type":"KEY","countStats":{"numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0},"objectInfo":{"fileName":"file1","file":true,"metadata":{},"name":"file1","quotaInBytes":0,"quotaInNamespace":0,"usedNamespace":0,"creationTime":1694788458188,"modificationTime":1694788460538,"acls":[{"type":"USER","name":"hadoop","aclScope":"ACCESS","aclList":["ALL"]},{"type":"GROUP","name":"hadoop","aclScope":"ACCESS","aclList":["ALL"]}],"volumeName":"vol-qgmex","bucketName":"buc-mwvex","keyName":"file1","dataSize":4068,"keyLocationVersions":[{"version":0,"locationVersionMap":{"0":[{"blockID":{"containerBlockID":{"containerID":1,"localID":111677748019200012},"blockCommitSequenceId":11,"containerID":1,"localID":111677748019200012},"length":4068,"offset":0,"token":null,"createVersion":0,"pipeline":null,"partNumber":0,"containerID":1,"localID":111677748019200012,"blockCommitSequenceId":11}]},"locationList":[{"blockID":{"containerBlockID":{"containerID":1,"localID":111677748019200012},"blockCommitSequenceId":11,"containerID":1,"localID":111677748019200012},"length":4068,"offset":0,"token":null,"createVersion":0,"pipeline":null,"partNumber":0,"containerID":1,"localID":111677748019200012,"blockCommitSequenceId":11}],"blocksLatestVersionOnly":[{"blockID":{"containerBlockID":{"containerID":1,"localID":111677748019200012},"blockCommitSequenceId":11,"containerID":1,"localID":111677748019200012},"length":4068,"offset":0,"token":null,"createVersion":0,"pipeline":null,"partNumber":0,"containerID":1,"localID":111677748019200012,"blockCommitSequenceId":11}],"locationLists":[[{"blockID":{"containerBlockID":{"containerID":1,"localID":111677748019200012},"blockCommitSequenceId":11,"containerID":1,"localID":111677748019200012},"length":4068,"offset":0,"token":null,"createVersion":0,"pipeline":null,"partNumber":0,"containerID":1,"localID":111677748019200012,"blockCommitSequenceId":11}]],"locationListCount":1,"multipartKey":false}],"replicationConfig":{"replicationFactor":"THREE","requiredNodes":3,"replicationType":"RATIS"},"encInfo":null},"status":"OK"}</msg>
<status status="PASS" starttime="20230915 14:34:59.659" endtime="20230915 14:34:59.660"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 14:34:59.661" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 14:34:59.660" endtime="20230915 14:34:59.661"/>
</kw>
<status status="PASS" starttime="20230915 14:34:59.522" endtime="20230915 14:34:59.661"/>
</kw>
<msg timestamp="20230915 14:34:59.661" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 14:34:59.522" endtime="20230915 14:34:59.661"/>
</kw>
<msg timestamp="20230915 14:34:59.662" level="INFO">${result} = {"path":"","type":"KEY","countStats":{"numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0},"objectInfo":{"fileName":"file1","file":true,"metadata":{},"name":"file1","quotaInBytes":0,"quotaInNamespace...</msg>
<status status="PASS" starttime="20230915 14:34:59.521" endtime="20230915 14:34:59.662"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 14:34:59.662" endtime="20230915 14:34:59.662"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 14:34:59.662" endtime="20230915 14:34:59.663"/>
</kw>
<status status="PASS" starttime="20230915 14:34:59.521" endtime="20230915 14:34:59.663"/>
</kw>
<status status="PASS" starttime="20230915 14:34:59.520" endtime="20230915 14:34:59.663"/>
</kw>
<status status="PASS" starttime="20230915 14:34:59.520" endtime="20230915 14:34:59.663"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230915 14:34:59.519" endtime="20230915 14:34:59.663"/>
</test>
<test id="s1-s3-s2-t12" name="Check Recon Namespace Summary Directory" line="134">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET_LAYOUT}' == 'LEGACY'</arg>
<arg>Wait For Summary</arg>
<arg>${SUMMARY_URL}?path=/${VOLUME}/${BUCKET}/dir1/dir2/</arg>
<arg>DIRECTORY</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230915 14:34:59.667" endtime="20230915 14:34:59.667"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET_LAYOUT}' == 'FILE_SYSTEM_OPTIMIZED'</arg>
<arg>Wait For Summary</arg>
<arg>${SUMMARY_URL}?path=/${VOLUME}/${BUCKET}/dir1/dir2</arg>
<arg>DIRECTORY</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Wait For Summary">
<arg>${SUMMARY_URL}?path=/${VOLUME}/${BUCKET}/dir1/dir2</arg>
<arg>DIRECTORY</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 14:34:59.679" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-qgmex/buc-mwvex/dir1/dir2 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 14:34:59.758" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 14:34:59.758" level="INFO">${output} = {"path":"","type":"DIRECTORY","countStats":{"numVolume":-1,"numBucket":-1,"numDir":0,"numKey":1},"objectInfo":{"metadata":{},"name":"dir2","quotaInBytes":0,"quotaInNamespace":0,"usedNamespace":0,"crea...</msg>
<status status="PASS" starttime="20230915 14:34:59.675" endtime="20230915 14:34:59.758"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 14:34:59.760" level="INFO">{"path":"","type":"DIRECTORY","countStats":{"numVolume":-1,"numBucket":-1,"numDir":0,"numKey":1},"objectInfo":{"metadata":{},"name":"dir2","quotaInBytes":0,"quotaInNamespace":0,"usedNamespace":0,"creationTime":1694788465936,"modificationTime":1694788465936,"acls":[{"type":"USER","name":"hadoop","aclScope":"ACCESS","aclList":["ALL"]},{"type":"GROUP","name":"hadoop","aclScope":"ACCESS","aclList":["ALL"]}]},"status":"OK"}</msg>
<status status="PASS" starttime="20230915 14:34:59.759" endtime="20230915 14:34:59.760"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 14:34:59.760" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 14:34:59.760" endtime="20230915 14:34:59.761"/>
</kw>
<status status="PASS" starttime="20230915 14:34:59.673" endtime="20230915 14:34:59.761"/>
</kw>
<msg timestamp="20230915 14:34:59.761" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 14:34:59.673" endtime="20230915 14:34:59.761"/>
</kw>
<msg timestamp="20230915 14:34:59.761" level="INFO">${result} = {"path":"","type":"DIRECTORY","countStats":{"numVolume":-1,"numBucket":-1,"numDir":0,"numKey":1},"objectInfo":{"metadata":{},"name":"dir2","quotaInBytes":0,"quotaInNamespace":0,"usedNamespace":0,"crea...</msg>
<status status="PASS" starttime="20230915 14:34:59.672" endtime="20230915 14:34:59.761"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 14:34:59.761" endtime="20230915 14:34:59.762"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 14:34:59.762" endtime="20230915 14:34:59.763"/>
</kw>
<status status="PASS" starttime="20230915 14:34:59.669" endtime="20230915 14:34:59.763"/>
</kw>
<status status="PASS" starttime="20230915 14:34:59.668" endtime="20230915 14:34:59.763"/>
</kw>
<status status="PASS" starttime="20230915 14:34:59.668" endtime="20230915 14:34:59.763"/>
</kw>
<status status="PASS" starttime="20230915 14:34:59.667" endtime="20230915 14:34:59.763"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230915 14:34:59.666" endtime="20230915 14:34:59.763"/>
</test>
<test id="s1-s3-s2-t13" name="Check Recon Namespace Disk Usage" line="138">
<kw name="Wait For Summary">
<arg>${DISK_USAGE_URL}?path=/${VOLUME}/${BUCKET}&amp;files=true&amp;replica=true</arg>
<arg>\"sizeWithReplica\"</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 14:34:59.771" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/du?path=/vol-qgmex/buc-mwvex&amp;files=true&amp;replica=true 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 14:34:59.788" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 14:34:59.788" level="INFO">${output} = {"status":"OK","path":"/vol-qgmex/buc-mwvex","size":10106,"sizeWithReplica":-1,"subPathCount":1,"subPaths":[{"key":false,"path":"/vol-qgmex/buc-mwvex/dir1","size":6038,"sizeWithReplica":-1,"isKey":fal...</msg>
<status status="PASS" starttime="20230915 14:34:59.768" endtime="20230915 14:34:59.788"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 14:34:59.790" level="INFO">{"status":"OK","path":"/vol-qgmex/buc-mwvex","size":10106,"sizeWithReplica":-1,"subPathCount":1,"subPaths":[{"key":false,"path":"/vol-qgmex/buc-mwvex/dir1","size":6038,"sizeWithReplica":-1,"isKey":false}],"sizeDirectKey":4068}</msg>
<status status="PASS" starttime="20230915 14:34:59.789" endtime="20230915 14:34:59.790"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 14:34:59.791" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 14:34:59.790" endtime="20230915 14:34:59.791"/>
</kw>
<status status="PASS" starttime="20230915 14:34:59.767" endtime="20230915 14:34:59.791"/>
</kw>
<msg timestamp="20230915 14:34:59.791" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 14:34:59.767" endtime="20230915 14:34:59.791"/>
</kw>
<msg timestamp="20230915 14:34:59.791" level="INFO">${result} = {"status":"OK","path":"/vol-qgmex/buc-mwvex","size":10106,"sizeWithReplica":-1,"subPathCount":1,"subPaths":[{"key":false,"path":"/vol-qgmex/buc-mwvex/dir1","size":6038,"sizeWithReplica":-1,"isKey":fal...</msg>
<status status="PASS" starttime="20230915 14:34:59.767" endtime="20230915 14:34:59.791"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 14:34:59.792" endtime="20230915 14:34:59.792"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 14:34:59.792" endtime="20230915 14:34:59.793"/>
</kw>
<status status="PASS" starttime="20230915 14:34:59.766" endtime="20230915 14:34:59.793"/>
</kw>
<status status="PASS" starttime="20230915 14:34:59.766" endtime="20230915 14:34:59.793"/>
</kw>
<status status="PASS" starttime="20230915 14:34:59.765" endtime="20230915 14:34:59.793"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230915 14:34:59.764" endtime="20230915 14:34:59.793"/>
</test>
<test id="s1-s3-s2-t14" name="Check Recon Namespace Volume Quota Usage" line="141">
<kw name="Wait For Summary">
<arg>${QUOTA_USAGE_URL}?path=/${VOLUME}</arg>
<arg>\"used\"</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 14:34:59.802" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/quota?path=/vol-qgmex 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 14:34:59.821" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 14:34:59.821" level="INFO">${output} = {"allowed":-1,"used":10106,"status":"OK"}</msg>
<status status="PASS" starttime="20230915 14:34:59.799" endtime="20230915 14:34:59.821"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 14:34:59.822" level="INFO">{"allowed":-1,"used":10106,"status":"OK"}</msg>
<status status="PASS" starttime="20230915 14:34:59.821" endtime="20230915 14:34:59.822"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 14:34:59.823" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 14:34:59.822" endtime="20230915 14:34:59.823"/>
</kw>
<status status="PASS" starttime="20230915 14:34:59.798" endtime="20230915 14:34:59.824"/>
</kw>
<msg timestamp="20230915 14:34:59.824" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 14:34:59.798" endtime="20230915 14:34:59.825"/>
</kw>
<msg timestamp="20230915 14:34:59.825" level="INFO">${result} = {"allowed":-1,"used":10106,"status":"OK"}</msg>
<status status="PASS" starttime="20230915 14:34:59.797" endtime="20230915 14:34:59.825"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 14:34:59.825" endtime="20230915 14:34:59.825"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 14:34:59.826" endtime="20230915 14:34:59.826"/>
</kw>
<status status="PASS" starttime="20230915 14:34:59.797" endtime="20230915 14:34:59.826"/>
</kw>
<status status="PASS" starttime="20230915 14:34:59.796" endtime="20230915 14:34:59.826"/>
</kw>
<status status="PASS" starttime="20230915 14:34:59.795" endtime="20230915 14:34:59.826"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230915 14:34:59.794" endtime="20230915 14:34:59.826"/>
</test>
<test id="s1-s3-s2-t15" name="Check Recon Namespace Bucket Quota Usage" line="144">
<kw name="Wait For Summary">
<arg>${QUOTA_USAGE_URL}?path=/${VOLUME}/${BUCKET}</arg>
<arg>\"used\"</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 14:34:59.835" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/quota?path=/vol-qgmex/buc-mwvex 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 14:34:59.852" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 14:34:59.852" level="INFO">${output} = {"allowed":-1,"used":10106,"status":"OK"}</msg>
<status status="PASS" starttime="20230915 14:34:59.832" endtime="20230915 14:34:59.853"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 14:34:59.854" level="INFO">{"allowed":-1,"used":10106,"status":"OK"}</msg>
<status status="PASS" starttime="20230915 14:34:59.853" endtime="20230915 14:34:59.854"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 14:34:59.855" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 14:34:59.854" endtime="20230915 14:34:59.855"/>
</kw>
<status status="PASS" starttime="20230915 14:34:59.831" endtime="20230915 14:34:59.855"/>
</kw>
<msg timestamp="20230915 14:34:59.855" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 14:34:59.831" endtime="20230915 14:34:59.855"/>
</kw>
<msg timestamp="20230915 14:34:59.855" level="INFO">${result} = {"allowed":-1,"used":10106,"status":"OK"}</msg>
<status status="PASS" starttime="20230915 14:34:59.830" endtime="20230915 14:34:59.855"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 14:34:59.855" endtime="20230915 14:34:59.856"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 14:34:59.856" endtime="20230915 14:34:59.856"/>
</kw>
<status status="PASS" starttime="20230915 14:34:59.830" endtime="20230915 14:34:59.856"/>
</kw>
<status status="PASS" starttime="20230915 14:34:59.829" endtime="20230915 14:34:59.857"/>
</kw>
<status status="PASS" starttime="20230915 14:34:59.829" endtime="20230915 14:34:59.857"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230915 14:34:59.828" endtime="20230915 14:34:59.857"/>
</test>
<test id="s1-s3-s2-t16" name="Check Recon Namespace File Size Distribution Root" line="147">
<kw name="Wait For Summary">
<arg>${FILE_SIZE_DIST_URL}?path=/</arg>
<arg>\"dist\"</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 14:34:59.865" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/dist?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 14:34:59.881" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 14:34:59.881" level="INFO">${output} = {"dist":[0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"status":"OK"}</msg>
<status status="PASS" starttime="20230915 14:34:59.862" endtime="20230915 14:34:59.881"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 14:34:59.882" level="INFO">{"dist":[0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"status":"OK"}</msg>
<status status="PASS" starttime="20230915 14:34:59.882" endtime="20230915 14:34:59.882"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 14:34:59.883" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 14:34:59.883" endtime="20230915 14:34:59.883"/>
</kw>
<status status="PASS" starttime="20230915 14:34:59.861" endtime="20230915 14:34:59.883"/>
</kw>
<msg timestamp="20230915 14:34:59.883" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 14:34:59.861" endtime="20230915 14:34:59.884"/>
</kw>
<msg timestamp="20230915 14:34:59.884" level="INFO">${result} = {"dist":[0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"status":"OK"}</msg>
<status status="PASS" starttime="20230915 14:34:59.861" endtime="20230915 14:34:59.884"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 14:34:59.884" endtime="20230915 14:34:59.884"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 14:34:59.884" endtime="20230915 14:34:59.885"/>
</kw>
<status status="PASS" starttime="20230915 14:34:59.860" endtime="20230915 14:34:59.885"/>
</kw>
<status status="PASS" starttime="20230915 14:34:59.860" endtime="20230915 14:34:59.885"/>
</kw>
<status status="PASS" starttime="20230915 14:34:59.859" endtime="20230915 14:34:59.885"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230915 14:34:59.858" endtime="20230915 14:34:59.885"/>
</test>
<doc>Smoke test for Recon Namespace Summary Endpoint for FILE_SYSTEM_OPTIMIZED buckets.</doc>
<status status="PASS" starttime="20230915 14:34:03.759" endtime="20230915 14:34:59.887"/>
</suite>
<status status="PASS" starttime="20230915 14:33:20.451" endtime="20230915 14:34:59.890"/>
</suite>
<suite id="s1-s4" name="Loaddata" source="/opt/hadoop/smoketest/topology/loaddata.robot">
<test id="s1-s4-t1" name="Create a volume, bucket and key" line="27">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create topvol1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 14:35:02.799" level="INFO">Running command 'ozone sh volume create topvol1 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 14:35:08.015" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 14:35:08.015" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230915 14:35:02.797" endtime="20230915 14:35:08.015"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 14:35:08.016" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230915 14:35:08.015" endtime="20230915 14:35:08.016"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 14:35:08.017" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 14:35:08.016" endtime="20230915 14:35:08.017"/>
</kw>
<status status="PASS" starttime="20230915 14:35:02.796" endtime="20230915 14:35:08.017"/>
</kw>
<msg timestamp="20230915 14:35:08.017" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 14:35:02.796" endtime="20230915 14:35:08.018"/>
</kw>
<msg timestamp="20230915 14:35:08.018" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230915 14:35:02.795" endtime="20230915 14:35:08.018"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 14:35:08.018" endtime="20230915 14:35:08.018"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /topvol1/bucket1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 14:35:08.023" level="INFO">Running command 'ozone sh bucket create /topvol1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 14:35:12.705" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 14:35:12.705" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230915 14:35:08.020" endtime="20230915 14:35:12.705"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 14:35:12.706" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230915 14:35:12.705" endtime="20230915 14:35:12.706"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 14:35:12.707" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 14:35:12.707" endtime="20230915 14:35:12.707"/>
</kw>
<status status="PASS" starttime="20230915 14:35:08.019" endtime="20230915 14:35:12.707"/>
</kw>
<msg timestamp="20230915 14:35:12.707" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 14:35:08.019" endtime="20230915 14:35:12.708"/>
</kw>
<msg timestamp="20230915 14:35:12.708" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230915 14:35:08.019" endtime="20230915 14:35:12.708"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 14:35:12.708" endtime="20230915 14:35:12.708"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /topvol1/bucket1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 14:35:12.713" level="INFO">Running command 'ozone sh key put /topvol1/bucket1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 14:35:19.912" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 14:35:19.912" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230915 14:35:12.710" endtime="20230915 14:35:19.912"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 14:35:19.914" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230915 14:35:19.913" endtime="20230915 14:35:19.914"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 14:35:19.915" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 14:35:19.914" endtime="20230915 14:35:19.915"/>
</kw>
<status status="PASS" starttime="20230915 14:35:12.709" endtime="20230915 14:35:19.915"/>
</kw>
<msg timestamp="20230915 14:35:19.915" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 14:35:12.709" endtime="20230915 14:35:19.915"/>
</kw>
<msg timestamp="20230915 14:35:19.915" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230915 14:35:12.708" endtime="20230915 14:35:19.915"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 14:35:19.916" endtime="20230915 14:35:19.916"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230915 14:35:02.794" endtime="20230915 14:35:19.916"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20230915 14:35:02.744" endtime="20230915 14:35:19.918"/>
</suite>
<suite id="s1-s5" name="readdata-first-half" source="/opt/hadoop/smoketest/topology/readdata.robot">
<test id="s1-s5-t1" name="Read data from previously created key" line="27">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230915 14:35:28.174" level="INFO">${random} = 07094</msg>
<status status="PASS" starttime="20230915 14:35:28.174" endtime="20230915 14:35:28.174"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /topvol1/bucket1/key1 /tmp/key1-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 14:35:28.180" level="INFO">Running command 'ozone sh key get /topvol1/bucket1/key1 /tmp/key1-07094 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 14:35:34.546" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 14:35:34.546" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230915 14:35:28.176" endtime="20230915 14:35:34.546"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 14:35:34.547" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230915 14:35:34.546" endtime="20230915 14:35:34.547"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 14:35:34.548" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 14:35:34.548" endtime="20230915 14:35:34.548"/>
</kw>
<status status="PASS" starttime="20230915 14:35:28.176" endtime="20230915 14:35:34.548"/>
</kw>
<msg timestamp="20230915 14:35:34.548" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 14:35:28.175" endtime="20230915 14:35:34.549"/>
</kw>
<msg timestamp="20230915 14:35:34.549" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230915 14:35:28.175" endtime="20230915 14:35:34.549"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 14:35:34.549" endtime="20230915 14:35:34.549"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230915 14:35:28.173" endtime="20230915 14:35:34.550"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20230915 14:35:28.121" endtime="20230915 14:35:34.551"/>
</suite>
<suite id="s1-s6" name="readdata-second-half" source="/opt/hadoop/smoketest/topology/readdata.robot">
<test id="s1-s6-t1" name="Read data from previously created key" line="27">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230915 14:36:23.012" level="INFO">${random} = 94210</msg>
<status status="PASS" starttime="20230915 14:36:23.011" endtime="20230915 14:36:23.012"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /topvol1/bucket1/key1 /tmp/key1-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 14:36:23.018" level="INFO">Running command 'ozone sh key get /topvol1/bucket1/key1 /tmp/key1-94210 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 14:37:19.124" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 14:37:19.124" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230915 14:36:23.014" endtime="20230915 14:37:19.124"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 14:37:19.125" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230915 14:37:19.124" endtime="20230915 14:37:19.125"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 14:37:19.126" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 14:37:19.125" endtime="20230915 14:37:19.126"/>
</kw>
<status status="PASS" starttime="20230915 14:36:23.014" endtime="20230915 14:37:19.126"/>
</kw>
<msg timestamp="20230915 14:37:19.126" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 14:36:23.013" endtime="20230915 14:37:19.126"/>
</kw>
<msg timestamp="20230915 14:37:19.126" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230915 14:36:23.012" endtime="20230915 14:37:19.126"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 14:37:19.127" endtime="20230915 14:37:19.127"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230915 14:36:23.009" endtime="20230915 14:37:19.127"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20230915 14:36:22.939" endtime="20230915 14:37:19.128"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="231652"/>
</suite>
<statistics>
<total>
<stat pass="32" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="32" fail="0" skip="0" id="s1" name="ozone-topology">ozone-topology</stat>
<stat pass="2" fail="0" skip="0" id="s1-s1" name="Basic">ozone-topology.Basic</stat>
<stat pass="4" fail="0" skip="0" id="s1-s2" name="Cli">ozone-topology.Cli</stat>
<stat pass="23" fail="0" skip="0" id="s1-s3" name="Recon">ozone-topology.Recon</stat>
<stat pass="7" fail="0" skip="0" id="s1-s3-s1" name="Recon-Api">ozone-topology.Recon.Recon-Api</stat>
<stat pass="16" fail="0" skip="0" id="s1-s3-s2" name="Recon-Nssummary">ozone-topology.Recon.Recon-Nssummary</stat>
<stat pass="1" fail="0" skip="0" id="s1-s4" name="Loaddata">ozone-topology.Loaddata</stat>
<stat pass="1" fail="0" skip="0" id="s1-s5" name="readdata-first-half">ozone-topology.readdata-first-half</stat>
<stat pass="1" fail="0" skip="0" id="s1-s6" name="readdata-second-half">ozone-topology.readdata-second-half</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
