<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 6.1.1 (Python 3.8.10 on linux)" generated="20230915 14:41:59.307" rpa="false" schemaversion="4">
<suite id="s1" name="ozonesecure-root-ca-rotation">
<suite id="s1-s1" name="Kinit" source="/opt/hadoop/smoketest/kinit.robot">
<test id="s1-s1-t1" name="Kinit" line="27">
<kw name="Kinit test user" library="commonlib">
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 14:39:09.142" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 14:39:09.157" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 14:39:09.158" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230915 14:39:09.136" endtime="20230915 14:39:09.158"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 14:39:09.163" level="INFO">scm</msg>
<status status="PASS" starttime="20230915 14:39:09.161" endtime="20230915 14:39:09.163"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 14:39:09.167" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 14:39:09.163" endtime="20230915 14:39:09.167"/>
</kw>
<status status="PASS" starttime="20230915 14:39:09.134" endtime="20230915 14:39:09.167"/>
</kw>
<msg timestamp="20230915 14:39:09.167" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 14:39:09.134" endtime="20230915 14:39:09.167"/>
</kw>
<msg timestamp="20230915 14:39:09.167" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230915 14:39:09.132" endtime="20230915 14:39:09.168"/>
</kw>
<msg timestamp="20230915 14:39:09.169" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230915 14:39:09.132" endtime="20230915 14:39:09.169"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230915 14:39:09.173" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230915 14:39:09.170" endtime="20230915 14:39:09.173"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 14:39:09.202" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 14:39:09.241" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 14:39:09.241" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230915 14:39:09.182" endtime="20230915 14:39:09.241"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 14:39:09.243" level="INFO"/>
<status status="PASS" starttime="20230915 14:39:09.242" endtime="20230915 14:39:09.243"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 14:39:09.244" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 14:39:09.243" endtime="20230915 14:39:09.244"/>
</kw>
<status status="PASS" starttime="20230915 14:39:09.181" endtime="20230915 14:39:09.244"/>
</kw>
<msg timestamp="20230915 14:39:09.244" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 14:39:09.179" endtime="20230915 14:39:09.244"/>
</kw>
<status status="PASS" starttime="20230915 14:39:09.176" endtime="20230915 14:39:09.244"/>
</kw>
<status status="PASS" starttime="20230915 14:39:09.173" endtime="20230915 14:39:09.245"/>
</kw>
<status status="PASS" starttime="20230915 14:39:09.131" endtime="20230915 14:39:09.245"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20230915 14:39:09.129" endtime="20230915 14:39:09.245"/>
</test>
<doc>Kinit test user</doc>
<status status="PASS" starttime="20230915 14:39:08.856" endtime="20230915 14:39:09.247"/>
</suite>
<suite id="s1-s2" name="Root-Ca-Rotation-Client-Checks" source="/opt/hadoop/smoketest/certrotation/root-ca-rotation-client-checks.robot">
<test id="s1-s2-t1" name="Create a volume and bucket" line="27">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 14:39:35.408" level="INFO">Running command 'ozone sh volume create rootca-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 14:39:41.422" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 14:39:41.423" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230915 14:39:35.405" endtime="20230915 14:39:41.423"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 14:39:41.424" level="INFO"/>
<status status="PASS" starttime="20230915 14:39:41.423" endtime="20230915 14:39:41.424"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 14:39:41.425" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 14:39:41.424" endtime="20230915 14:39:41.425"/>
</kw>
<status status="PASS" starttime="20230915 14:39:35.404" endtime="20230915 14:39:41.425"/>
</kw>
<msg timestamp="20230915 14:39:41.425" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 14:39:35.404" endtime="20230915 14:39:41.425"/>
</kw>
<msg timestamp="20230915 14:39:41.425" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230915 14:39:35.403" endtime="20230915 14:39:41.425"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 14:39:41.426" endtime="20230915 14:39:41.426"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 14:39:41.430" level="INFO">Running command 'ozone sh bucket create /rootca-volume/rootca-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 14:39:47.491" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 14:39:47.491" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230915 14:39:41.428" endtime="20230915 14:39:47.491"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 14:39:47.493" level="INFO"/>
<status status="PASS" starttime="20230915 14:39:47.491" endtime="20230915 14:39:47.493"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 14:39:47.494" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 14:39:47.494" endtime="20230915 14:39:47.495"/>
</kw>
<status status="PASS" starttime="20230915 14:39:41.427" endtime="20230915 14:39:47.495"/>
</kw>
<msg timestamp="20230915 14:39:47.497" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 14:39:41.427" endtime="20230915 14:39:47.497"/>
</kw>
<msg timestamp="20230915 14:39:47.497" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230915 14:39:41.426" endtime="20230915 14:39:47.497"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 14:39:47.497" endtime="20230915 14:39:47.499"/>
</kw>
<tag>create-volume-and-bucket</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230915 14:39:35.403" endtime="20230915 14:39:47.499"/>
</test>
<test id="s1-s2-t2" name="Create key" line="34">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 14:39:47.523" level="INFO">Running command 'echo "rootca: key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20230915 14:39:47.531" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 14:39:47.531" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230915 14:39:47.512" endtime="20230915 14:39:47.531"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 14:39:47.533" level="INFO"/>
<status status="PASS" starttime="20230915 14:39:47.532" endtime="20230915 14:39:47.533"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 14:39:47.533" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 14:39:47.533" endtime="20230915 14:39:47.534"/>
</kw>
<status status="PASS" starttime="20230915 14:39:47.509" endtime="20230915 14:39:47.534"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 14:39:47.539" level="INFO">Running command 'ozone sh key put /rootca-volume/rootca-bucket/rootca-key /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 14:40:00.751" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 14:40:00.751" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230915 14:39:47.536" endtime="20230915 14:40:00.751"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 14:40:00.753" level="INFO"/>
<status status="PASS" starttime="20230915 14:40:00.752" endtime="20230915 14:40:00.753"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 14:40:00.754" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 14:40:00.753" endtime="20230915 14:40:00.754"/>
</kw>
<status status="PASS" starttime="20230915 14:39:47.535" endtime="20230915 14:40:00.754"/>
</kw>
<msg timestamp="20230915 14:40:00.754" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 14:39:47.535" endtime="20230915 14:40:00.754"/>
</kw>
<msg timestamp="20230915 14:40:00.755" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230915 14:39:47.534" endtime="20230915 14:40:00.755"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 14:40:00.755" endtime="20230915 14:40:00.755"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 14:40:00.759" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 14:40:00.762" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 14:40:00.762" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230915 14:40:00.756" endtime="20230915 14:40:00.762"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 14:40:00.764" level="INFO"/>
<status status="PASS" starttime="20230915 14:40:00.763" endtime="20230915 14:40:00.764"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 14:40:00.764" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 14:40:00.764" endtime="20230915 14:40:00.764"/>
</kw>
<status status="PASS" starttime="20230915 14:40:00.755" endtime="20230915 14:40:00.765"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230915 14:39:47.503" endtime="20230915 14:40:00.765"/>
</test>
<test id="s1-s2-t3" name="Read data from previously created key" line="40">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230915 14:40:00.768" level="INFO">${random} = 97308</msg>
<status status="PASS" starttime="20230915 14:40:00.767" endtime="20230915 14:40:00.768"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 14:40:00.772" level="INFO">Running command 'ozone sh key get /rootca-volume/rootca-bucket/rootca-key /tmp/key-97308 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 14:40:09.441" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 14:40:09.441" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230915 14:40:00.769" endtime="20230915 14:40:09.441"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 14:40:09.444" level="INFO"/>
<status status="PASS" starttime="20230915 14:40:09.442" endtime="20230915 14:40:09.444"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 14:40:09.444" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 14:40:09.444" endtime="20230915 14:40:09.444"/>
</kw>
<status status="PASS" starttime="20230915 14:40:00.769" endtime="20230915 14:40:09.445"/>
</kw>
<msg timestamp="20230915 14:40:09.445" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 14:40:00.769" endtime="20230915 14:40:09.445"/>
</kw>
<msg timestamp="20230915 14:40:09.445" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230915 14:40:00.768" endtime="20230915 14:40:09.445"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 14:40:09.445" endtime="20230915 14:40:09.446"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 14:40:09.449" level="INFO">Running command 'cat /tmp/key-97308 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 14:40:09.452" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 14:40:09.452" level="INFO">${output} = rootca: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230915 14:40:09.446" endtime="20230915 14:40:09.452"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 14:40:09.453" level="INFO">rootca: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230915 14:40:09.453" endtime="20230915 14:40:09.453"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 14:40:09.454" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 14:40:09.454" endtime="20230915 14:40:09.454"/>
</kw>
<msg timestamp="20230915 14:40:09.454" level="INFO">${output} = rootca: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230915 14:40:09.446" endtime="20230915 14:40:09.454"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 14:40:09.455" endtime="20230915 14:40:09.455"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 14:40:09.459" level="INFO">Running command 'rm /tmp/key-97308 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 14:40:09.463" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 14:40:09.463" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230915 14:40:09.456" endtime="20230915 14:40:09.463"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 14:40:09.465" level="INFO"/>
<status status="PASS" starttime="20230915 14:40:09.464" endtime="20230915 14:40:09.465"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 14:40:09.465" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 14:40:09.465" endtime="20230915 14:40:09.466"/>
</kw>
<status status="PASS" starttime="20230915 14:40:09.456" endtime="20230915 14:40:09.466"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230915 14:40:00.766" endtime="20230915 14:40:09.466"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20230915 14:39:35.351" endtime="20230915 14:40:09.468"/>
</suite>
<suite id="s1-s3" name="Root-Ca-Rotation-Client-Checks" source="/opt/hadoop/smoketest/certrotation/root-ca-rotation-client-checks.robot">
<test id="s1-s3-t1" name="Create a volume and bucket" line="27">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 14:41:08.194" level="INFO">Running command 'ozone sh volume create rootca2-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 14:41:13.479" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 14:41:13.479" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230915 14:41:08.191" endtime="20230915 14:41:13.479"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 14:41:13.481" level="INFO"/>
<status status="PASS" starttime="20230915 14:41:13.480" endtime="20230915 14:41:13.481"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 14:41:13.481" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 14:41:13.481" endtime="20230915 14:41:13.481"/>
</kw>
<status status="PASS" starttime="20230915 14:41:08.190" endtime="20230915 14:41:13.482"/>
</kw>
<msg timestamp="20230915 14:41:13.482" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 14:41:08.190" endtime="20230915 14:41:13.482"/>
</kw>
<msg timestamp="20230915 14:41:13.482" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230915 14:41:08.189" endtime="20230915 14:41:13.482"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 14:41:13.482" endtime="20230915 14:41:13.483"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 14:41:13.488" level="INFO">Running command 'ozone sh bucket create /rootca2-volume/rootca2-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 14:41:19.065" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 14:41:19.065" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230915 14:41:13.485" endtime="20230915 14:41:19.065"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 14:41:19.067" level="INFO"/>
<status status="PASS" starttime="20230915 14:41:19.066" endtime="20230915 14:41:19.067"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 14:41:19.068" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 14:41:19.067" endtime="20230915 14:41:19.068"/>
</kw>
<status status="PASS" starttime="20230915 14:41:13.484" endtime="20230915 14:41:19.068"/>
</kw>
<msg timestamp="20230915 14:41:19.068" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 14:41:13.484" endtime="20230915 14:41:19.068"/>
</kw>
<msg timestamp="20230915 14:41:19.068" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230915 14:41:13.483" endtime="20230915 14:41:19.068"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 14:41:19.069" endtime="20230915 14:41:19.069"/>
</kw>
<tag>create-volume-and-bucket</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230915 14:41:08.189" endtime="20230915 14:41:19.069"/>
</test>
<test id="s1-s3-t2" name="Create key" line="34">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 14:41:19.075" level="INFO">Running command 'echo "rootca2: key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20230915 14:41:19.077" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 14:41:19.077" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230915 14:41:19.072" endtime="20230915 14:41:19.077"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 14:41:19.078" level="INFO"/>
<status status="PASS" starttime="20230915 14:41:19.077" endtime="20230915 14:41:19.078"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 14:41:19.079" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 14:41:19.079" endtime="20230915 14:41:19.079"/>
</kw>
<status status="PASS" starttime="20230915 14:41:19.071" endtime="20230915 14:41:19.079"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 14:41:19.084" level="INFO">Running command 'ozone sh key put /rootca2-volume/rootca2-bucket/rootca2-key /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 14:41:27.702" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 14:41:27.702" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230915 14:41:19.081" endtime="20230915 14:41:27.702"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 14:41:27.703" level="INFO"/>
<status status="PASS" starttime="20230915 14:41:27.702" endtime="20230915 14:41:27.703"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 14:41:27.704" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 14:41:27.703" endtime="20230915 14:41:27.704"/>
</kw>
<status status="PASS" starttime="20230915 14:41:19.081" endtime="20230915 14:41:27.704"/>
</kw>
<msg timestamp="20230915 14:41:27.704" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 14:41:19.080" endtime="20230915 14:41:27.704"/>
</kw>
<msg timestamp="20230915 14:41:27.704" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230915 14:41:19.080" endtime="20230915 14:41:27.704"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 14:41:27.705" endtime="20230915 14:41:27.705"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 14:41:27.708" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 14:41:27.711" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 14:41:27.711" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230915 14:41:27.706" endtime="20230915 14:41:27.711"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 14:41:27.712" level="INFO"/>
<status status="PASS" starttime="20230915 14:41:27.712" endtime="20230915 14:41:27.712"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 14:41:27.713" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 14:41:27.712" endtime="20230915 14:41:27.713"/>
</kw>
<status status="PASS" starttime="20230915 14:41:27.705" endtime="20230915 14:41:27.713"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230915 14:41:19.070" endtime="20230915 14:41:27.713"/>
</test>
<test id="s1-s3-t3" name="Read data from previously created key" line="40">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230915 14:41:27.716" level="INFO">${random} = 17550</msg>
<status status="PASS" starttime="20230915 14:41:27.715" endtime="20230915 14:41:27.716"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 14:41:27.720" level="INFO">Running command 'ozone sh key get /rootca2-volume/rootca2-bucket/rootca2-key /tmp/key-17550 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 14:41:35.854" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 14:41:35.854" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230915 14:41:27.718" endtime="20230915 14:41:35.854"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 14:41:35.856" level="INFO"/>
<status status="PASS" starttime="20230915 14:41:35.855" endtime="20230915 14:41:35.856"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 14:41:35.856" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 14:41:35.856" endtime="20230915 14:41:35.857"/>
</kw>
<status status="PASS" starttime="20230915 14:41:27.717" endtime="20230915 14:41:35.857"/>
</kw>
<msg timestamp="20230915 14:41:35.857" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 14:41:27.717" endtime="20230915 14:41:35.857"/>
</kw>
<msg timestamp="20230915 14:41:35.857" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230915 14:41:27.716" endtime="20230915 14:41:35.857"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 14:41:35.857" endtime="20230915 14:41:35.858"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 14:41:35.861" level="INFO">Running command 'cat /tmp/key-17550 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 14:41:35.864" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 14:41:35.864" level="INFO">${output} = rootca2: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230915 14:41:35.858" endtime="20230915 14:41:35.864"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 14:41:35.865" level="INFO">rootca2: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230915 14:41:35.865" endtime="20230915 14:41:35.865"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 14:41:35.866" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 14:41:35.865" endtime="20230915 14:41:35.866"/>
</kw>
<msg timestamp="20230915 14:41:35.866" level="INFO">${output} = rootca2: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230915 14:41:35.858" endtime="20230915 14:41:35.866"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230915 14:41:35.866" endtime="20230915 14:41:35.867"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 14:41:35.870" level="INFO">Running command 'rm /tmp/key-17550 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 14:41:35.872" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 14:41:35.872" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230915 14:41:35.867" endtime="20230915 14:41:35.872"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 14:41:35.873" level="INFO"/>
<status status="PASS" starttime="20230915 14:41:35.873" endtime="20230915 14:41:35.873"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 14:41:35.874" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 14:41:35.873" endtime="20230915 14:41:35.874"/>
</kw>
<status status="PASS" starttime="20230915 14:41:35.867" endtime="20230915 14:41:35.874"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230915 14:41:27.714" endtime="20230915 14:41:35.874"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20230915 14:41:08.138" endtime="20230915 14:41:35.876"/>
</suite>
<suite id="s1-s4" name="Root-Ca-Rotation" source="/opt/hadoop/smoketest/scmha/root-ca-rotation.robot">
<test id="s1-s4-t1" name="Verify root CA rotation metrics" line="26">
<kw name="Execute" library="os">
<var>${successRotationLine}</var>
<arg>curl -sS 'http://localhost:9876/jmx' | grep NumSuccessRotation</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230915 14:41:39.321" level="INFO">Running command 'curl -sS 'http://localhost:9876/jmx' | grep NumSuccessRotation 2&gt;&amp;1'.</msg>
<msg timestamp="20230915 14:41:39.813" level="INFO">${rc} = 0</msg>
<msg timestamp="20230915 14:41:39.813" level="INFO">${output} =     "NumSuccessRotation" : 2,</msg>
<status status="PASS" starttime="20230915 14:41:39.319" endtime="20230915 14:41:39.813"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 14:41:39.814" level="INFO">    "NumSuccessRotation" : 2,</msg>
<status status="PASS" starttime="20230915 14:41:39.813" endtime="20230915 14:41:39.814"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230915 14:41:39.815" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230915 14:41:39.815" endtime="20230915 14:41:39.815"/>
</kw>
<status status="PASS" starttime="20230915 14:41:39.318" endtime="20230915 14:41:39.816"/>
</kw>
<msg timestamp="20230915 14:41:39.816" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230915 14:41:39.317" endtime="20230915 14:41:39.816"/>
</kw>
<msg timestamp="20230915 14:41:39.816" level="INFO">${successRotationLine} =     "NumSuccessRotation" : 2,</msg>
<status status="PASS" starttime="20230915 14:41:39.317" endtime="20230915 14:41:39.816"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${successRotationLine}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230915 14:41:39.817" level="INFO">    "NumSuccessRotation" : 2,</msg>
<status status="PASS" starttime="20230915 14:41:39.816" endtime="20230915 14:41:39.817"/>
</kw>
<kw name="Split String" library="String">
<var>${temp_1}</var>
<arg>${successRotationLine}</arg>
<arg>:</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20230915 14:41:39.817" level="INFO">${temp_1} = ['    "NumSuccessRotation" ', ' 2,']</msg>
<status status="PASS" starttime="20230915 14:41:39.817" endtime="20230915 14:41:39.817"/>
</kw>
<kw name="Strip String" library="String">
<var>${temp_2}</var>
<arg>${temp_1[1]}</arg>
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<msg timestamp="20230915 14:41:39.820" level="INFO">${temp_2} = 2,</msg>
<status status="PASS" starttime="20230915 14:41:39.817" endtime="20230915 14:41:39.821"/>
</kw>
<kw name="Split String" library="String">
<var>${temp_3}</var>
<arg>${temp_2}</arg>
<arg>,</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20230915 14:41:39.822" level="INFO">${temp_3} = ['2', '']</msg>
<status status="PASS" starttime="20230915 14:41:39.821" endtime="20230915 14:41:39.822"/>
</kw>
<kw name="Strip String" library="String">
<var>${successRotation}</var>
<arg>${temp_3[0]}</arg>
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<msg timestamp="20230915 14:41:39.823" level="INFO">${successRotation} = 2</msg>
<status status="PASS" starttime="20230915 14:41:39.822" endtime="20230915 14:41:39.823"/>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<var>${successRotation}</var>
<arg>${successRotation}</arg>
<doc>Converts the given item to a floating point number.</doc>
<msg timestamp="20230915 14:41:39.824" level="INFO">${successRotation} = 2.0</msg>
<status status="PASS" starttime="20230915 14:41:39.824" endtime="20230915 14:41:39.824"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${successRotation} &gt;= 1</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230915 14:41:39.824" endtime="20230915 14:41:39.825"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230915 14:41:39.316" endtime="20230915 14:41:39.825"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20230915 14:41:39.268" endtime="20230915 14:41:39.827"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="62805"/>
</suite>
<statistics>
<total>
<stat pass="8" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="2" fail="0" skip="0">create-volume-and-bucket</stat>
</tag>
<suite>
<stat pass="8" fail="0" skip="0" id="s1" name="ozonesecure-root-ca-rotation">ozonesecure-root-ca-rotation</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1" name="Kinit">ozonesecure-root-ca-rotation.Kinit</stat>
<stat pass="3" fail="0" skip="0" id="s1-s2" name="Root-Ca-Rotation-Client-Checks">ozonesecure-root-ca-rotation.Root-Ca-Rotation-Client-Checks</stat>
<stat pass="3" fail="0" skip="0" id="s1-s3" name="Root-Ca-Rotation-Client-Checks">ozonesecure-root-ca-rotation.Root-Ca-Rotation-Client-Checks</stat>
<stat pass="1" fail="0" skip="0" id="s1-s4" name="Root-Ca-Rotation">ozonesecure-root-ca-rotation.Root-Ca-Rotation</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
