<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 6.1.1 (Python 3.8.10 on linux)" generated="20230923 10:44:56.237" rpa="false" schemaversion="4">
<suite id="s1" name="ozonesecure">
<suite id="s1-s1" name="Kinit" source="/opt/hadoop/smoketest/kinit.robot">
<test id="s1-s1-t1" name="Kinit" line="27">
<kw name="Kinit test user" library="commonlib">
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 09:54:06.320" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 09:54:06.331" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 09:54:06.331" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230923 09:54:06.317" endtime="20230923 09:54:06.331"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 09:54:06.332" level="INFO">scm</msg>
<status status="PASS" starttime="20230923 09:54:06.331" endtime="20230923 09:54:06.332"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 09:54:06.333" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 09:54:06.332" endtime="20230923 09:54:06.333"/>
</kw>
<status status="PASS" starttime="20230923 09:54:06.316" endtime="20230923 09:54:06.333"/>
</kw>
<msg timestamp="20230923 09:54:06.333" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 09:54:06.316" endtime="20230923 09:54:06.333"/>
</kw>
<msg timestamp="20230923 09:54:06.333" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230923 09:54:06.315" endtime="20230923 09:54:06.333"/>
</kw>
<msg timestamp="20230923 09:54:06.334" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230923 09:54:06.315" endtime="20230923 09:54:06.334"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230923 09:54:06.334" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230923 09:54:06.334" endtime="20230923 09:54:06.334"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 09:54:06.339" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 09:54:06.358" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 09:54:06.358" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 09:54:06.337" endtime="20230923 09:54:06.358"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 09:54:06.359" level="INFO"/>
<status status="PASS" starttime="20230923 09:54:06.358" endtime="20230923 09:54:06.359"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 09:54:06.360" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 09:54:06.359" endtime="20230923 09:54:06.360"/>
</kw>
<status status="PASS" starttime="20230923 09:54:06.336" endtime="20230923 09:54:06.360"/>
</kw>
<msg timestamp="20230923 09:54:06.360" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 09:54:06.336" endtime="20230923 09:54:06.360"/>
</kw>
<status status="PASS" starttime="20230923 09:54:06.335" endtime="20230923 09:54:06.360"/>
</kw>
<status status="PASS" starttime="20230923 09:54:06.335" endtime="20230923 09:54:06.360"/>
</kw>
<status status="PASS" starttime="20230923 09:54:06.314" endtime="20230923 09:54:06.360"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20230923 09:54:06.313" endtime="20230923 09:54:06.361"/>
</test>
<doc>Kinit test user</doc>
<status status="PASS" starttime="20230923 09:54:06.252" endtime="20230923 09:54:06.362"/>
</suite>
<suite id="s1-s2" name="Wait" source="/opt/hadoop/smoketest/replication/wait.robot">
<test id="s1-s2-t1" name="Wait Until Container Replicated" line="32">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>5min</arg>
<arg>10sec</arg>
<arg>Check Container Replicated</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check Container Replicated">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin container info --json "${container}" | jq '.pipeline.nodes | length'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:40:34.356" level="INFO">Running command 'ozone admin container info --json "1" | jq '.pipeline.nodes | length' 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:40:39.168" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:40:39.168" level="INFO">${output} = 3</msg>
<status status="PASS" starttime="20230923 10:40:34.353" endtime="20230923 10:40:39.168"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:40:39.170" level="INFO">3</msg>
<status status="PASS" starttime="20230923 10:40:39.169" endtime="20230923 10:40:39.170"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:40:39.171" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:40:39.170" endtime="20230923 10:40:39.171"/>
</kw>
<status status="PASS" starttime="20230923 10:40:34.353" endtime="20230923 10:40:39.171"/>
</kw>
<msg timestamp="20230923 10:40:39.171" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:40:34.353" endtime="20230923 10:40:39.171"/>
</kw>
<msg timestamp="20230923 10:40:39.172" level="INFO">${output} = 3</msg>
<status status="PASS" starttime="20230923 10:40:34.352" endtime="20230923 10:40:39.172"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${output}</arg>
<arg>${count}</arg>
<doc>Fails if the given objects are unequal.</doc>
<msg timestamp="20230923 10:40:39.172" level="FAIL">3 != 2</msg>
<status status="FAIL" starttime="20230923 10:40:39.172" endtime="20230923 10:40:39.173"/>
</kw>
<status status="FAIL" starttime="20230923 10:40:34.351" endtime="20230923 10:40:39.173"/>
</kw>
<kw name="Check Container Replicated">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin container info --json "${container}" | jq '.pipeline.nodes | length'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:40:49.179" level="INFO">Running command 'ozone admin container info --json "1" | jq '.pipeline.nodes | length' 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:40:54.286" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:40:54.287" level="INFO">${output} = 3</msg>
<status status="PASS" starttime="20230923 10:40:49.176" endtime="20230923 10:40:54.287"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:40:54.288" level="INFO">3</msg>
<status status="PASS" starttime="20230923 10:40:54.287" endtime="20230923 10:40:54.288"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:40:54.289" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:40:54.289" endtime="20230923 10:40:54.289"/>
</kw>
<status status="PASS" starttime="20230923 10:40:49.175" endtime="20230923 10:40:54.289"/>
</kw>
<msg timestamp="20230923 10:40:54.290" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:40:49.175" endtime="20230923 10:40:54.290"/>
</kw>
<msg timestamp="20230923 10:40:54.290" level="INFO">${output} = 3</msg>
<status status="PASS" starttime="20230923 10:40:49.174" endtime="20230923 10:40:54.290"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${output}</arg>
<arg>${count}</arg>
<doc>Fails if the given objects are unequal.</doc>
<msg timestamp="20230923 10:40:54.291" level="FAIL">3 != 2</msg>
<status status="FAIL" starttime="20230923 10:40:54.290" endtime="20230923 10:40:54.291"/>
</kw>
<status status="FAIL" starttime="20230923 10:40:49.174" endtime="20230923 10:40:54.291"/>
</kw>
<kw name="Check Container Replicated">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin container info --json "${container}" | jq '.pipeline.nodes | length'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:41:04.297" level="INFO">Running command 'ozone admin container info --json "1" | jq '.pipeline.nodes | length' 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:41:09.208" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:41:09.208" level="INFO">${output} = 3</msg>
<status status="PASS" starttime="20230923 10:41:04.294" endtime="20230923 10:41:09.208"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:41:09.209" level="INFO">3</msg>
<status status="PASS" starttime="20230923 10:41:09.208" endtime="20230923 10:41:09.210"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:41:09.210" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:41:09.210" endtime="20230923 10:41:09.210"/>
</kw>
<status status="PASS" starttime="20230923 10:41:04.294" endtime="20230923 10:41:09.211"/>
</kw>
<msg timestamp="20230923 10:41:09.211" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:41:04.293" endtime="20230923 10:41:09.211"/>
</kw>
<msg timestamp="20230923 10:41:09.211" level="INFO">${output} = 3</msg>
<status status="PASS" starttime="20230923 10:41:04.293" endtime="20230923 10:41:09.211"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${output}</arg>
<arg>${count}</arg>
<doc>Fails if the given objects are unequal.</doc>
<msg timestamp="20230923 10:41:09.212" level="FAIL">3 != 2</msg>
<status status="FAIL" starttime="20230923 10:41:09.211" endtime="20230923 10:41:09.212"/>
</kw>
<status status="FAIL" starttime="20230923 10:41:04.292" endtime="20230923 10:41:09.212"/>
</kw>
<kw name="Check Container Replicated">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin container info --json "${container}" | jq '.pipeline.nodes | length'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:41:19.218" level="INFO">Running command 'ozone admin container info --json "1" | jq '.pipeline.nodes | length' 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:41:23.785" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:41:23.785" level="INFO">${output} = 3</msg>
<status status="PASS" starttime="20230923 10:41:19.215" endtime="20230923 10:41:23.785"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:41:23.787" level="INFO">3</msg>
<status status="PASS" starttime="20230923 10:41:23.786" endtime="20230923 10:41:23.787"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:41:23.788" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:41:23.787" endtime="20230923 10:41:23.788"/>
</kw>
<status status="PASS" starttime="20230923 10:41:19.215" endtime="20230923 10:41:23.788"/>
</kw>
<msg timestamp="20230923 10:41:23.788" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:41:19.214" endtime="20230923 10:41:23.788"/>
</kw>
<msg timestamp="20230923 10:41:23.788" level="INFO">${output} = 3</msg>
<status status="PASS" starttime="20230923 10:41:19.214" endtime="20230923 10:41:23.788"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${output}</arg>
<arg>${count}</arg>
<doc>Fails if the given objects are unequal.</doc>
<msg timestamp="20230923 10:41:23.789" level="FAIL">3 != 2</msg>
<status status="FAIL" starttime="20230923 10:41:23.788" endtime="20230923 10:41:23.789"/>
</kw>
<status status="FAIL" starttime="20230923 10:41:19.213" endtime="20230923 10:41:23.789"/>
</kw>
<kw name="Check Container Replicated">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin container info --json "${container}" | jq '.pipeline.nodes | length'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:41:33.795" level="INFO">Running command 'ozone admin container info --json "1" | jq '.pipeline.nodes | length' 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:41:38.693" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:41:38.693" level="INFO">${output} = 3</msg>
<status status="PASS" starttime="20230923 10:41:33.792" endtime="20230923 10:41:38.693"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:41:38.695" level="INFO">3</msg>
<status status="PASS" starttime="20230923 10:41:38.694" endtime="20230923 10:41:38.695"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:41:38.696" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:41:38.696" endtime="20230923 10:41:38.696"/>
</kw>
<status status="PASS" starttime="20230923 10:41:33.792" endtime="20230923 10:41:38.696"/>
</kw>
<msg timestamp="20230923 10:41:38.697" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:41:33.791" endtime="20230923 10:41:38.697"/>
</kw>
<msg timestamp="20230923 10:41:38.697" level="INFO">${output} = 3</msg>
<status status="PASS" starttime="20230923 10:41:33.791" endtime="20230923 10:41:38.697"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${output}</arg>
<arg>${count}</arg>
<doc>Fails if the given objects are unequal.</doc>
<msg timestamp="20230923 10:41:38.698" level="FAIL">3 != 2</msg>
<status status="FAIL" starttime="20230923 10:41:38.697" endtime="20230923 10:41:38.698"/>
</kw>
<status status="FAIL" starttime="20230923 10:41:33.790" endtime="20230923 10:41:38.698"/>
</kw>
<kw name="Check Container Replicated">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin container info --json "${container}" | jq '.pipeline.nodes | length'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:41:48.704" level="INFO">Running command 'ozone admin container info --json "1" | jq '.pipeline.nodes | length' 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:41:53.523" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:41:53.523" level="INFO">${output} = 3</msg>
<status status="PASS" starttime="20230923 10:41:48.701" endtime="20230923 10:41:53.523"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:41:53.525" level="INFO">3</msg>
<status status="PASS" starttime="20230923 10:41:53.524" endtime="20230923 10:41:53.525"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:41:53.526" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:41:53.525" endtime="20230923 10:41:53.526"/>
</kw>
<status status="PASS" starttime="20230923 10:41:48.700" endtime="20230923 10:41:53.526"/>
</kw>
<msg timestamp="20230923 10:41:53.526" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:41:48.700" endtime="20230923 10:41:53.526"/>
</kw>
<msg timestamp="20230923 10:41:53.526" level="INFO">${output} = 3</msg>
<status status="PASS" starttime="20230923 10:41:48.699" endtime="20230923 10:41:53.527"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${output}</arg>
<arg>${count}</arg>
<doc>Fails if the given objects are unequal.</doc>
<msg timestamp="20230923 10:41:53.527" level="FAIL">3 != 2</msg>
<status status="FAIL" starttime="20230923 10:41:53.527" endtime="20230923 10:41:53.527"/>
</kw>
<status status="FAIL" starttime="20230923 10:41:48.699" endtime="20230923 10:41:53.528"/>
</kw>
<kw name="Check Container Replicated">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin container info --json "${container}" | jq '.pipeline.nodes | length'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:42:03.534" level="INFO">Running command 'ozone admin container info --json "1" | jq '.pipeline.nodes | length' 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:42:08.695" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:42:08.695" level="INFO">${output} = 3</msg>
<status status="PASS" starttime="20230923 10:42:03.531" endtime="20230923 10:42:08.695"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:42:08.696" level="INFO">3</msg>
<status status="PASS" starttime="20230923 10:42:08.695" endtime="20230923 10:42:08.697"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:42:08.697" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:42:08.697" endtime="20230923 10:42:08.697"/>
</kw>
<status status="PASS" starttime="20230923 10:42:03.530" endtime="20230923 10:42:08.698"/>
</kw>
<msg timestamp="20230923 10:42:08.698" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:42:03.530" endtime="20230923 10:42:08.698"/>
</kw>
<msg timestamp="20230923 10:42:08.698" level="INFO">${output} = 3</msg>
<status status="PASS" starttime="20230923 10:42:03.529" endtime="20230923 10:42:08.698"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${output}</arg>
<arg>${count}</arg>
<doc>Fails if the given objects are unequal.</doc>
<msg timestamp="20230923 10:42:08.699" level="FAIL">3 != 2</msg>
<status status="FAIL" starttime="20230923 10:42:08.698" endtime="20230923 10:42:08.699"/>
</kw>
<status status="FAIL" starttime="20230923 10:42:03.528" endtime="20230923 10:42:08.699"/>
</kw>
<kw name="Check Container Replicated">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin container info --json "${container}" | jq '.pipeline.nodes | length'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:42:18.707" level="INFO">Running command 'ozone admin container info --json "1" | jq '.pipeline.nodes | length' 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:42:23.729" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:42:23.729" level="INFO">${output} = 3</msg>
<status status="PASS" starttime="20230923 10:42:18.704" endtime="20230923 10:42:23.729"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:42:23.731" level="INFO">3</msg>
<status status="PASS" starttime="20230923 10:42:23.730" endtime="20230923 10:42:23.731"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:42:23.732" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:42:23.731" endtime="20230923 10:42:23.732"/>
</kw>
<status status="PASS" starttime="20230923 10:42:18.703" endtime="20230923 10:42:23.732"/>
</kw>
<msg timestamp="20230923 10:42:23.732" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:42:18.703" endtime="20230923 10:42:23.732"/>
</kw>
<msg timestamp="20230923 10:42:23.733" level="INFO">${output} = 3</msg>
<status status="PASS" starttime="20230923 10:42:18.701" endtime="20230923 10:42:23.733"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${output}</arg>
<arg>${count}</arg>
<doc>Fails if the given objects are unequal.</doc>
<msg timestamp="20230923 10:42:23.733" level="FAIL">3 != 2</msg>
<status status="FAIL" starttime="20230923 10:42:23.733" endtime="20230923 10:42:23.734"/>
</kw>
<status status="FAIL" starttime="20230923 10:42:18.700" endtime="20230923 10:42:23.734"/>
</kw>
<kw name="Check Container Replicated">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin container info --json "${container}" | jq '.pipeline.nodes | length'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:42:33.740" level="INFO">Running command 'ozone admin container info --json "1" | jq '.pipeline.nodes | length' 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:42:38.401" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:42:38.401" level="INFO">${output} = 3</msg>
<status status="PASS" starttime="20230923 10:42:33.737" endtime="20230923 10:42:38.401"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:42:38.403" level="INFO">3</msg>
<status status="PASS" starttime="20230923 10:42:38.402" endtime="20230923 10:42:38.403"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:42:38.403" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:42:38.403" endtime="20230923 10:42:38.404"/>
</kw>
<status status="PASS" starttime="20230923 10:42:33.736" endtime="20230923 10:42:38.404"/>
</kw>
<msg timestamp="20230923 10:42:38.404" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:42:33.736" endtime="20230923 10:42:38.404"/>
</kw>
<msg timestamp="20230923 10:42:38.404" level="INFO">${output} = 3</msg>
<status status="PASS" starttime="20230923 10:42:33.735" endtime="20230923 10:42:38.404"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${output}</arg>
<arg>${count}</arg>
<doc>Fails if the given objects are unequal.</doc>
<msg timestamp="20230923 10:42:38.405" level="FAIL">3 != 2</msg>
<status status="FAIL" starttime="20230923 10:42:38.404" endtime="20230923 10:42:38.405"/>
</kw>
<status status="FAIL" starttime="20230923 10:42:33.735" endtime="20230923 10:42:38.405"/>
</kw>
<kw name="Check Container Replicated">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin container info --json "${container}" | jq '.pipeline.nodes | length'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:42:48.411" level="INFO">Running command 'ozone admin container info --json "1" | jq '.pipeline.nodes | length' 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:42:53.526" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:42:53.526" level="INFO">${output} = 3</msg>
<status status="PASS" starttime="20230923 10:42:48.408" endtime="20230923 10:42:53.526"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:42:53.527" level="INFO">3</msg>
<status status="PASS" starttime="20230923 10:42:53.527" endtime="20230923 10:42:53.528"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:42:53.528" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:42:53.528" endtime="20230923 10:42:53.528"/>
</kw>
<status status="PASS" starttime="20230923 10:42:48.408" endtime="20230923 10:42:53.529"/>
</kw>
<msg timestamp="20230923 10:42:53.529" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:42:48.407" endtime="20230923 10:42:53.529"/>
</kw>
<msg timestamp="20230923 10:42:53.529" level="INFO">${output} = 3</msg>
<status status="PASS" starttime="20230923 10:42:48.407" endtime="20230923 10:42:53.529"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${output}</arg>
<arg>${count}</arg>
<doc>Fails if the given objects are unequal.</doc>
<msg timestamp="20230923 10:42:53.530" level="FAIL">3 != 2</msg>
<status status="FAIL" starttime="20230923 10:42:53.529" endtime="20230923 10:42:53.530"/>
</kw>
<status status="FAIL" starttime="20230923 10:42:48.406" endtime="20230923 10:42:53.530"/>
</kw>
<kw name="Check Container Replicated">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin container info --json "${container}" | jq '.pipeline.nodes | length'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:43:03.536" level="INFO">Running command 'ozone admin container info --json "1" | jq '.pipeline.nodes | length' 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:43:08.453" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:43:08.453" level="INFO">${output} = 3</msg>
<status status="PASS" starttime="20230923 10:43:03.533" endtime="20230923 10:43:08.453"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:43:08.455" level="INFO">3</msg>
<status status="PASS" starttime="20230923 10:43:08.454" endtime="20230923 10:43:08.455"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:43:08.456" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:43:08.455" endtime="20230923 10:43:08.456"/>
</kw>
<status status="PASS" starttime="20230923 10:43:03.533" endtime="20230923 10:43:08.456"/>
</kw>
<msg timestamp="20230923 10:43:08.456" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:43:03.533" endtime="20230923 10:43:08.456"/>
</kw>
<msg timestamp="20230923 10:43:08.457" level="INFO">${output} = 3</msg>
<status status="PASS" starttime="20230923 10:43:03.532" endtime="20230923 10:43:08.457"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${output}</arg>
<arg>${count}</arg>
<doc>Fails if the given objects are unequal.</doc>
<msg timestamp="20230923 10:43:08.458" level="FAIL">3 != 2</msg>
<status status="FAIL" starttime="20230923 10:43:08.457" endtime="20230923 10:43:08.458"/>
</kw>
<status status="FAIL" starttime="20230923 10:43:03.531" endtime="20230923 10:43:08.458"/>
</kw>
<kw name="Check Container Replicated">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin container info --json "${container}" | jq '.pipeline.nodes | length'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:43:18.464" level="INFO">Running command 'ozone admin container info --json "1" | jq '.pipeline.nodes | length' 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:43:23.078" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:43:23.078" level="INFO">${output} = 3</msg>
<status status="PASS" starttime="20230923 10:43:18.461" endtime="20230923 10:43:23.079"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:43:23.080" level="INFO">3</msg>
<status status="PASS" starttime="20230923 10:43:23.079" endtime="20230923 10:43:23.080"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:43:23.081" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:43:23.080" endtime="20230923 10:43:23.081"/>
</kw>
<status status="PASS" starttime="20230923 10:43:18.461" endtime="20230923 10:43:23.081"/>
</kw>
<msg timestamp="20230923 10:43:23.081" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:43:18.460" endtime="20230923 10:43:23.081"/>
</kw>
<msg timestamp="20230923 10:43:23.081" level="INFO">${output} = 3</msg>
<status status="PASS" starttime="20230923 10:43:18.459" endtime="20230923 10:43:23.081"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${output}</arg>
<arg>${count}</arg>
<doc>Fails if the given objects are unequal.</doc>
<msg timestamp="20230923 10:43:23.082" level="FAIL">3 != 2</msg>
<status status="FAIL" starttime="20230923 10:43:23.081" endtime="20230923 10:43:23.082"/>
</kw>
<status status="FAIL" starttime="20230923 10:43:18.459" endtime="20230923 10:43:23.082"/>
</kw>
<kw name="Check Container Replicated">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin container info --json "${container}" | jq '.pipeline.nodes | length'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:43:33.089" level="INFO">Running command 'ozone admin container info --json "1" | jq '.pipeline.nodes | length' 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:43:37.800" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:43:37.800" level="INFO">${output} = 2</msg>
<status status="PASS" starttime="20230923 10:43:33.086" endtime="20230923 10:43:37.800"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:43:37.802" level="INFO">2</msg>
<status status="PASS" starttime="20230923 10:43:37.801" endtime="20230923 10:43:37.802"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:43:37.803" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:43:37.803" endtime="20230923 10:43:37.803"/>
</kw>
<status status="PASS" starttime="20230923 10:43:33.085" endtime="20230923 10:43:37.803"/>
</kw>
<msg timestamp="20230923 10:43:37.803" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:43:33.085" endtime="20230923 10:43:37.803"/>
</kw>
<msg timestamp="20230923 10:43:37.804" level="INFO">${output} = 2</msg>
<status status="PASS" starttime="20230923 10:43:33.084" endtime="20230923 10:43:37.804"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${output}</arg>
<arg>${count}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230923 10:43:37.804" endtime="20230923 10:43:37.804"/>
</kw>
<status status="PASS" starttime="20230923 10:43:33.083" endtime="20230923 10:43:37.804"/>
</kw>
<status status="PASS" starttime="20230923 10:40:34.351" endtime="20230923 10:43:37.804"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230923 10:40:34.350" endtime="20230923 10:43:37.805"/>
</test>
<doc>Wait for replication to succeed</doc>
<status status="PASS" starttime="20230923 10:40:34.297" endtime="20230923 10:43:37.806"/>
</suite>
<suite id="s1-s3" name="Wait" source="/opt/hadoop/smoketest/replication/wait.robot">
<test id="s1-s3-t1" name="Wait Until Container Replicated" line="32">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>5min</arg>
<arg>10sec</arg>
<arg>Check Container Replicated</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check Container Replicated">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin container info --json "${container}" | jq '.pipeline.nodes | length'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:43:43.536" level="INFO">Running command 'ozone admin container info --json "1" | jq '.pipeline.nodes | length' 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:43:53.630" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:43:53.630" level="INFO">${output} = 2</msg>
<status status="PASS" starttime="20230923 10:43:43.533" endtime="20230923 10:43:53.630"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:43:53.633" level="INFO">2</msg>
<status status="PASS" starttime="20230923 10:43:53.631" endtime="20230923 10:43:53.633"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:43:53.634" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:43:53.633" endtime="20230923 10:43:53.634"/>
</kw>
<status status="PASS" starttime="20230923 10:43:43.532" endtime="20230923 10:43:53.634"/>
</kw>
<msg timestamp="20230923 10:43:53.635" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:43:43.532" endtime="20230923 10:43:53.636"/>
</kw>
<msg timestamp="20230923 10:43:53.636" level="INFO">${output} = 2</msg>
<status status="PASS" starttime="20230923 10:43:43.531" endtime="20230923 10:43:53.636"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${output}</arg>
<arg>${count}</arg>
<doc>Fails if the given objects are unequal.</doc>
<msg timestamp="20230923 10:43:53.637" level="FAIL">2 != 3</msg>
<status status="FAIL" starttime="20230923 10:43:53.636" endtime="20230923 10:43:53.637"/>
</kw>
<status status="FAIL" starttime="20230923 10:43:43.530" endtime="20230923 10:43:53.639"/>
</kw>
<kw name="Check Container Replicated">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin container info --json "${container}" | jq '.pipeline.nodes | length'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:44:03.645" level="INFO">Running command 'ozone admin container info --json "1" | jq '.pipeline.nodes | length' 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:44:09.500" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:44:09.500" level="INFO">${output} = 2</msg>
<status status="PASS" starttime="20230923 10:44:03.642" endtime="20230923 10:44:09.500"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:44:09.502" level="INFO">2</msg>
<status status="PASS" starttime="20230923 10:44:09.501" endtime="20230923 10:44:09.502"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:44:09.503" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:44:09.502" endtime="20230923 10:44:09.503"/>
</kw>
<status status="PASS" starttime="20230923 10:44:03.641" endtime="20230923 10:44:09.503"/>
</kw>
<msg timestamp="20230923 10:44:09.503" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:44:03.641" endtime="20230923 10:44:09.503"/>
</kw>
<msg timestamp="20230923 10:44:09.503" level="INFO">${output} = 2</msg>
<status status="PASS" starttime="20230923 10:44:03.640" endtime="20230923 10:44:09.503"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${output}</arg>
<arg>${count}</arg>
<doc>Fails if the given objects are unequal.</doc>
<msg timestamp="20230923 10:44:09.504" level="FAIL">2 != 3</msg>
<status status="FAIL" starttime="20230923 10:44:09.503" endtime="20230923 10:44:09.504"/>
</kw>
<status status="FAIL" starttime="20230923 10:44:03.639" endtime="20230923 10:44:09.504"/>
</kw>
<kw name="Check Container Replicated">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin container info --json "${container}" | jq '.pipeline.nodes | length'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:44:19.511" level="INFO">Running command 'ozone admin container info --json "1" | jq '.pipeline.nodes | length' 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:44:24.273" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:44:24.273" level="INFO">${output} = 2</msg>
<status status="PASS" starttime="20230923 10:44:19.508" endtime="20230923 10:44:24.273"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:44:24.275" level="INFO">2</msg>
<status status="PASS" starttime="20230923 10:44:24.274" endtime="20230923 10:44:24.275"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:44:24.275" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:44:24.275" endtime="20230923 10:44:24.276"/>
</kw>
<status status="PASS" starttime="20230923 10:44:19.507" endtime="20230923 10:44:24.276"/>
</kw>
<msg timestamp="20230923 10:44:24.276" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:44:19.506" endtime="20230923 10:44:24.276"/>
</kw>
<msg timestamp="20230923 10:44:24.276" level="INFO">${output} = 2</msg>
<status status="PASS" starttime="20230923 10:44:19.506" endtime="20230923 10:44:24.276"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${output}</arg>
<arg>${count}</arg>
<doc>Fails if the given objects are unequal.</doc>
<msg timestamp="20230923 10:44:24.277" level="FAIL">2 != 3</msg>
<status status="FAIL" starttime="20230923 10:44:24.277" endtime="20230923 10:44:24.277"/>
</kw>
<status status="FAIL" starttime="20230923 10:44:19.505" endtime="20230923 10:44:24.278"/>
</kw>
<kw name="Check Container Replicated">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin container info --json "${container}" | jq '.pipeline.nodes | length'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:44:34.284" level="INFO">Running command 'ozone admin container info --json "1" | jq '.pipeline.nodes | length' 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:44:39.260" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:44:39.260" level="INFO">${output} = 3</msg>
<status status="PASS" starttime="20230923 10:44:34.281" endtime="20230923 10:44:39.260"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:44:39.261" level="INFO">3</msg>
<status status="PASS" starttime="20230923 10:44:39.260" endtime="20230923 10:44:39.261"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:44:39.262" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:44:39.261" endtime="20230923 10:44:39.262"/>
</kw>
<status status="PASS" starttime="20230923 10:44:34.280" endtime="20230923 10:44:39.262"/>
</kw>
<msg timestamp="20230923 10:44:39.262" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:44:34.280" endtime="20230923 10:44:39.262"/>
</kw>
<msg timestamp="20230923 10:44:39.263" level="INFO">${output} = 3</msg>
<status status="PASS" starttime="20230923 10:44:34.279" endtime="20230923 10:44:39.263"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${output}</arg>
<arg>${count}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230923 10:44:39.263" endtime="20230923 10:44:39.263"/>
</kw>
<status status="PASS" starttime="20230923 10:44:34.278" endtime="20230923 10:44:39.263"/>
</kw>
<status status="PASS" starttime="20230923 10:43:43.529" endtime="20230923 10:44:39.263"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230923 10:43:43.529" endtime="20230923 10:44:39.264"/>
</test>
<doc>Wait for replication to succeed</doc>
<status status="PASS" starttime="20230923 10:43:43.461" endtime="20230923 10:44:39.265"/>
</suite>
<suite id="s1-s4" name="Basic" source="/opt/hadoop/smoketest/basic">
<suite id="s1-s4-s1" name="Basic" source="/opt/hadoop/smoketest/basic/basic.robot">
<test id="s1-s4-s1-t1" name="Check webui static resources" line="29">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit HTTP user" library="commonlib">
<kw name="Get test user principal" library="commonlib">
<var>${principal}</var>
<arg>HTTP</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 09:54:10.345" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 09:54:10.348" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 09:54:10.349" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230923 09:54:10.342" endtime="20230923 09:54:10.349"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 09:54:10.350" level="INFO">scm</msg>
<status status="PASS" starttime="20230923 09:54:10.349" endtime="20230923 09:54:10.350"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 09:54:10.350" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 09:54:10.350" endtime="20230923 09:54:10.351"/>
</kw>
<status status="PASS" starttime="20230923 09:54:10.342" endtime="20230923 09:54:10.351"/>
</kw>
<msg timestamp="20230923 09:54:10.351" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 09:54:10.341" endtime="20230923 09:54:10.351"/>
</kw>
<msg timestamp="20230923 09:54:10.351" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230923 09:54:10.340" endtime="20230923 09:54:10.351"/>
</kw>
<msg timestamp="20230923 09:54:10.352" level="INFO">${principal} = HTTP/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230923 09:54:10.340" endtime="20230923 09:54:10.352"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/HTTP.keytab ${principal}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/HTTP.keytab ${principal}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 09:54:10.357" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/HTTP.keytab HTTP/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 09:54:10.385" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 09:54:10.386" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 09:54:10.354" endtime="20230923 09:54:10.386"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 09:54:10.387" level="INFO"/>
<status status="PASS" starttime="20230923 09:54:10.386" endtime="20230923 09:54:10.387"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 09:54:10.388" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 09:54:10.387" endtime="20230923 09:54:10.388"/>
</kw>
<status status="PASS" starttime="20230923 09:54:10.354" endtime="20230923 09:54:10.388"/>
</kw>
<msg timestamp="20230923 09:54:10.388" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 09:54:10.353" endtime="20230923 09:54:10.388"/>
</kw>
<status status="PASS" starttime="20230923 09:54:10.353" endtime="20230923 09:54:10.389"/>
</kw>
<status status="PASS" starttime="20230923 09:54:10.352" endtime="20230923 09:54:10.389"/>
</kw>
<status status="PASS" starttime="20230923 09:54:10.339" endtime="20230923 09:54:10.389"/>
</kw>
<status status="PASS" starttime="20230923 09:54:10.338" endtime="20230923 09:54:10.389"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -s -I http://${SCM}:9876/static/bootstrap-3.4.1/js/bootstrap.min.js</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 09:54:10.393" level="INFO">Running command 'curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 09:54:10.599" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 09:54:10.599" level="INFO">${output} = HTTP/1.1 401 Authentication required
X-Content-Type-Options: nosniff
X-XSS-Protection: 1; mode=block
X-FRAME-OPTIONS: SAMEORIGIN
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
...</msg>
<status status="PASS" starttime="20230923 09:54:10.391" endtime="20230923 09:54:10.599"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 09:54:10.600" level="INFO">HTTP/1.1 401 Authentication required
X-Content-Type-Options: nosniff
X-XSS-Protection: 1; mode=block
X-FRAME-OPTIONS: SAMEORIGIN
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 489

HTTP/1.1 200 OK
Date: Sat, 23 Sep 2023 09:54:10 GMT
X-Content-Type-Options: nosniff
X-XSS-Protection: 1; mode=block
X-FRAME-OPTIONS: SAMEORIGIN
WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCxNz4RV/joMUY+UgFVqqK227Ehz1kb1WhnjnEBkkGnisHXUjtHFL/6DufTeU1vEwJ4EOZjMdk9+k67yumn51loDEm
Set-Cookie: hadoop.auth="u=HTTP&amp;p=HTTP/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1695498850585&amp;s=toShrRDJ+xZaLzAqX841ROJ2JxVSZMv3xUk9x8kKEzU="; Path=/; HttpOnly
Last-Modified: Sat, 23 Sep 2023 09:21:34 GMT
Content-Type: application/javascript
Accept-Ranges: bytes
Content-Length: 39680
</msg>
<status status="PASS" starttime="20230923 09:54:10.599" endtime="20230923 09:54:10.600"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 09:54:10.601" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 09:54:10.601" endtime="20230923 09:54:10.602"/>
</kw>
<status status="PASS" starttime="20230923 09:54:10.390" endtime="20230923 09:54:10.602"/>
</kw>
<msg timestamp="20230923 09:54:10.602" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 09:54:10.390" endtime="20230923 09:54:10.602"/>
</kw>
<msg timestamp="20230923 09:54:10.602" level="INFO">${result} = HTTP/1.1 401 Authentication required
X-Content-Type-Options: nosniff
X-XSS-Protection: 1; mode=block
X-FRAME-OPTIONS: SAMEORIGIN
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
...</msg>
<status status="PASS" starttime="20230923 09:54:10.389" endtime="20230923 09:54:10.602"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 09:54:10.603" endtime="20230923 09:54:10.603"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230923 09:54:10.337" endtime="20230923 09:54:10.603"/>
</test>
<test id="s1-s4-s1-t2" name="Basic Freon smoketest" line="34">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 09:54:10.614" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 09:54:10.624" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 09:54:10.624" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230923 09:54:10.611" endtime="20230923 09:54:10.625"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 09:54:10.626" level="INFO">scm</msg>
<status status="PASS" starttime="20230923 09:54:10.625" endtime="20230923 09:54:10.626"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 09:54:10.627" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 09:54:10.626" endtime="20230923 09:54:10.627"/>
</kw>
<status status="PASS" starttime="20230923 09:54:10.610" endtime="20230923 09:54:10.627"/>
</kw>
<msg timestamp="20230923 09:54:10.627" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 09:54:10.610" endtime="20230923 09:54:10.627"/>
</kw>
<msg timestamp="20230923 09:54:10.628" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230923 09:54:10.609" endtime="20230923 09:54:10.628"/>
</kw>
<msg timestamp="20230923 09:54:10.628" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230923 09:54:10.608" endtime="20230923 09:54:10.628"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230923 09:54:10.629" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230923 09:54:10.628" endtime="20230923 09:54:10.629"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 09:54:10.636" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 09:54:10.671" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 09:54:10.671" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 09:54:10.632" endtime="20230923 09:54:10.671"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 09:54:10.677" level="INFO"/>
<status status="PASS" starttime="20230923 09:54:10.673" endtime="20230923 09:54:10.677"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 09:54:10.679" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 09:54:10.677" endtime="20230923 09:54:10.679"/>
</kw>
<status status="PASS" starttime="20230923 09:54:10.631" endtime="20230923 09:54:10.679"/>
</kw>
<msg timestamp="20230923 09:54:10.679" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 09:54:10.631" endtime="20230923 09:54:10.680"/>
</kw>
<status status="PASS" starttime="20230923 09:54:10.630" endtime="20230923 09:54:10.680"/>
</kw>
<status status="PASS" starttime="20230923 09:54:10.629" endtime="20230923 09:54:10.680"/>
</kw>
<status status="PASS" starttime="20230923 09:54:10.608" endtime="20230923 09:54:10.680"/>
</kw>
<status status="PASS" starttime="20230923 09:54:10.606" endtime="20230923 09:54:10.680"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>10</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230923 09:54:10.681" level="INFO">${random} = EfLQSCRZ6k</msg>
<status status="PASS" starttime="20230923 09:54:10.680" endtime="20230923 09:54:10.681"/>
</kw>
<kw name="Freon OCKG" library="freon">
<arg>prefix=${random}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 09:54:10.694" level="INFO">Running command 'ozone freon ockg  -t 1 -n1 -p EfLQSCRZ6k  2&gt;&amp;1'.</msg>
<msg timestamp="20230923 09:54:23.903" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 09:54:23.903" level="INFO">${output} = 2023-09-23 09:54:13,669 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-23 09:54:13,852 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230923 09:54:10.685" endtime="20230923 09:54:23.904"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 09:54:23.905" level="INFO">2023-09-23 09:54:13,669 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-23 09:54:13,852 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-09-23 09:54:13,852 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-09-23 09:54:13,947 [main] INFO freon.BaseFreonGenerator: Executing test with prefix EfLQSCRZ6k and number-of-tests 1
2023-09-23 09:54:13,998 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-23 09:54:15,000 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-23 09:54:16,000 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-23 09:54:16,870 [main] INFO rpc.RpcClient: Creating Volume: vol1, with testuser as owner and space quota set to -1 bytes, counts quota set to -1
2023-09-23 09:54:17,001 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-23 09:54:17,044 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with server-side default bucket layout, testuser as owner, Versioning false, Storage Type set to DISK and Encryption set to false, Replication Type set to server-side default replication type, Namespace Quota set to -1, Space Quota set to -1 
2023-09-23 09:54:17,800 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2023-09-23 09:54:17,874 [pool-2-thread-1] INFO netty.NettyConfigKeys$DataStream: setTlsConf GrpcTlsConfig0-
2023-09-23 09:54:18,001 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-23 09:54:18,203 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2023-09-23 09:54:19,001 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-23 09:54:20,002 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-23 09:54:21,002 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-23 09:54:22,003 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-23 09:54:23,003 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2023-09-23 09:54:23,546 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=1, min=5308.723393, max=5308.723393, mean=5308.723393, stddev=0.0, median=5308.723393, p75=5308.723393, p95=5308.723393, p98=5308.723393, p99=5308.723393, p999=5308.723393, mean_rate=0.15548099493466583, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-09-23 09:54:23,547 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 10
2023-09-23 09:54:23,548 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-09-23 09:54:23,548 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20230923 09:54:23.904" endtime="20230923 09:54:23.905"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 09:54:23.906" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 09:54:23.905" endtime="20230923 09:54:23.906"/>
</kw>
<status status="PASS" starttime="20230923 09:54:10.684" endtime="20230923 09:54:23.906"/>
</kw>
<msg timestamp="20230923 09:54:23.906" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 09:54:10.684" endtime="20230923 09:54:23.907"/>
</kw>
<msg timestamp="20230923 09:54:23.907" level="INFO">${result} = 2023-09-23 09:54:13,669 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-23 09:54:13,852 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230923 09:54:10.683" endtime="20230923 09:54:23.907"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 09:54:23.907" endtime="20230923 09:54:23.907"/>
</kw>
<status status="PASS" starttime="20230923 09:54:10.681" endtime="20230923 09:54:23.907"/>
</kw>
<kw name="Freon OCKV" library="freon">
<arg>prefix=${random}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockv ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 09:54:23.914" level="INFO">Running command 'ozone freon ockv  -t 1 -n1 -p EfLQSCRZ6k  2&gt;&amp;1'.</msg>
<msg timestamp="20230923 09:54:33.218" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 09:54:33.218" level="INFO">${output} = 2023-09-23 09:54:26,787 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-23 09:54:26,976 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230923 09:54:23.911" endtime="20230923 09:54:33.218"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 09:54:33.219" level="INFO">2023-09-23 09:54:26,787 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-23 09:54:26,976 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-09-23 09:54:26,976 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-09-23 09:54:27,104 [main] INFO freon.BaseFreonGenerator: Executing test with prefix EfLQSCRZ6k and number-of-tests 1
2023-09-23 09:54:27,186 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-23 09:54:28,188 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-23 09:54:29,189 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-23 09:54:29,867 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2023-09-23 09:54:30,189 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-23 09:54:31,190 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-23 09:54:32,190 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2023-09-23 09:54:32,857 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-validate, count=1, min=89.337402, max=89.337402, mean=89.337402, stddev=0.0, median=89.337402, p75=89.337402, p95=89.337402, p98=89.337402, p99=89.337402, p999=89.337402, mean_rate=0.758194817325814, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-09-23 09:54:32,858 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 6
2023-09-23 09:54:32,858 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-09-23 09:54:32,858 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20230923 09:54:33.218" endtime="20230923 09:54:33.219"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 09:54:33.220" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 09:54:33.219" endtime="20230923 09:54:33.220"/>
</kw>
<status status="PASS" starttime="20230923 09:54:23.911" endtime="20230923 09:54:33.220"/>
</kw>
<msg timestamp="20230923 09:54:33.221" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 09:54:23.910" endtime="20230923 09:54:33.221"/>
</kw>
<msg timestamp="20230923 09:54:33.221" level="INFO">${result} = 2023-09-23 09:54:26,787 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-23 09:54:26,976 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230923 09:54:23.909" endtime="20230923 09:54:33.221"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 09:54:33.221" endtime="20230923 09:54:33.222"/>
</kw>
<status status="PASS" starttime="20230923 09:54:23.908" endtime="20230923 09:54:33.222"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230923 09:54:10.605" endtime="20230923 09:54:33.222"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20230923 09:54:10.287" endtime="20230923 09:54:33.223"/>
</suite>
<suite id="s1-s4-s2" name="Getconf" source="/opt/hadoop/smoketest/basic/getconf.robot">
<test id="s1-s4-s2-t1" name="Get OM" line="22">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf ozonemanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 09:54:33.234" level="INFO">Running command 'ozone getconf ozonemanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 09:54:35.009" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 09:54:35.009" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20230923 09:54:33.231" endtime="20230923 09:54:35.009"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 09:54:35.011" level="INFO">om</msg>
<status status="PASS" starttime="20230923 09:54:35.010" endtime="20230923 09:54:35.011"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 09:54:35.012" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 09:54:35.011" endtime="20230923 09:54:35.012"/>
</kw>
<status status="PASS" starttime="20230923 09:54:33.231" endtime="20230923 09:54:35.012"/>
</kw>
<msg timestamp="20230923 09:54:35.012" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 09:54:33.231" endtime="20230923 09:54:35.012"/>
</kw>
<msg timestamp="20230923 09:54:35.012" level="INFO">${result} = om</msg>
<status status="PASS" starttime="20230923 09:54:33.230" endtime="20230923 09:54:35.013"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 09:54:35.013" endtime="20230923 09:54:35.013"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf -ozonemanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 09:54:35.018" level="INFO">Running command 'ozone getconf -ozonemanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 09:54:36.782" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 09:54:36.782" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20230923 09:54:35.015" endtime="20230923 09:54:36.782"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 09:54:36.784" level="INFO">om</msg>
<status status="PASS" starttime="20230923 09:54:36.783" endtime="20230923 09:54:36.784"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 09:54:36.784" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 09:54:36.784" endtime="20230923 09:54:36.785"/>
</kw>
<status status="PASS" starttime="20230923 09:54:35.014" endtime="20230923 09:54:36.785"/>
</kw>
<msg timestamp="20230923 09:54:36.785" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 09:54:35.014" endtime="20230923 09:54:36.785"/>
</kw>
<msg timestamp="20230923 09:54:36.785" level="INFO">${result} = om</msg>
<status status="PASS" starttime="20230923 09:54:35.013" endtime="20230923 09:54:36.785"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 09:54:36.785" endtime="20230923 09:54:36.786"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230923 09:54:33.229" endtime="20230923 09:54:36.786"/>
</test>
<test id="s1-s4-s2-t2" name="Get SCM" line="28">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf storagecontainermanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 09:54:36.792" level="INFO">Running command 'ozone getconf storagecontainermanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 09:54:38.500" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 09:54:38.500" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230923 09:54:36.789" endtime="20230923 09:54:38.500"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 09:54:38.502" level="INFO">scm</msg>
<status status="PASS" starttime="20230923 09:54:38.501" endtime="20230923 09:54:38.502"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 09:54:38.502" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 09:54:38.502" endtime="20230923 09:54:38.503"/>
</kw>
<status status="PASS" starttime="20230923 09:54:36.789" endtime="20230923 09:54:38.503"/>
</kw>
<msg timestamp="20230923 09:54:38.503" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 09:54:36.789" endtime="20230923 09:54:38.503"/>
</kw>
<msg timestamp="20230923 09:54:38.503" level="INFO">${result} = scm</msg>
<status status="PASS" starttime="20230923 09:54:36.788" endtime="20230923 09:54:38.503"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>scm</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 09:54:38.503" endtime="20230923 09:54:38.504"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf -storagecontainermanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 09:54:38.508" level="INFO">Running command 'ozone getconf -storagecontainermanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 09:54:40.474" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 09:54:40.474" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230923 09:54:38.505" endtime="20230923 09:54:40.474"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 09:54:40.475" level="INFO">scm</msg>
<status status="PASS" starttime="20230923 09:54:40.474" endtime="20230923 09:54:40.475"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 09:54:40.476" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 09:54:40.476" endtime="20230923 09:54:40.476"/>
</kw>
<status status="PASS" starttime="20230923 09:54:38.505" endtime="20230923 09:54:40.477"/>
</kw>
<msg timestamp="20230923 09:54:40.477" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 09:54:38.505" endtime="20230923 09:54:40.477"/>
</kw>
<msg timestamp="20230923 09:54:40.477" level="INFO">${result} = scm</msg>
<status status="PASS" starttime="20230923 09:54:38.504" endtime="20230923 09:54:40.477"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>scm</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 09:54:40.477" endtime="20230923 09:54:40.478"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230923 09:54:36.787" endtime="20230923 09:54:40.478"/>
</test>
<test id="s1-s4-s2-t3" name="Get existing config key" line="34">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf confKey ozone.om.address</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 09:54:40.484" level="INFO">Running command 'ozone getconf confKey ozone.om.address 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 09:54:42.236" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 09:54:42.236" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20230923 09:54:40.482" endtime="20230923 09:54:42.236"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 09:54:42.237" level="INFO">om</msg>
<status status="PASS" starttime="20230923 09:54:42.237" endtime="20230923 09:54:42.237"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 09:54:42.238" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 09:54:42.238" endtime="20230923 09:54:42.238"/>
</kw>
<status status="PASS" starttime="20230923 09:54:40.481" endtime="20230923 09:54:42.239"/>
</kw>
<msg timestamp="20230923 09:54:42.239" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 09:54:40.481" endtime="20230923 09:54:42.239"/>
</kw>
<msg timestamp="20230923 09:54:42.239" level="INFO">${result} = om</msg>
<status status="PASS" starttime="20230923 09:54:40.480" endtime="20230923 09:54:42.239"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 09:54:42.239" endtime="20230923 09:54:42.240"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>is missing</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 09:54:42.240" endtime="20230923 09:54:42.240"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf -confKey ozone.om.address</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 09:54:42.245" level="INFO">Running command 'ozone getconf -confKey ozone.om.address 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 09:54:43.872" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 09:54:43.872" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20230923 09:54:42.242" endtime="20230923 09:54:43.872"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 09:54:43.874" level="INFO">om</msg>
<status status="PASS" starttime="20230923 09:54:43.873" endtime="20230923 09:54:43.874"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 09:54:43.875" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 09:54:43.874" endtime="20230923 09:54:43.875"/>
</kw>
<status status="PASS" starttime="20230923 09:54:42.242" endtime="20230923 09:54:43.875"/>
</kw>
<msg timestamp="20230923 09:54:43.875" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 09:54:42.241" endtime="20230923 09:54:43.875"/>
</kw>
<msg timestamp="20230923 09:54:43.875" level="INFO">${result} = om</msg>
<status status="PASS" starttime="20230923 09:54:42.240" endtime="20230923 09:54:43.875"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 09:54:43.876" endtime="20230923 09:54:43.876"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>is missing</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 09:54:43.876" endtime="20230923 09:54:43.877"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230923 09:54:40.479" endtime="20230923 09:54:43.877"/>
</test>
<test id="s1-s4-s2-t4" name="Get undefined config key" line="42">
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone getconf confKey no-such-config-key</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 09:54:43.882" level="INFO">Running command 'ozone getconf confKey no-such-config-key 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 09:54:45.563" level="INFO">${rc} = 255</msg>
<msg timestamp="20230923 09:54:45.563" level="INFO">${output} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20230923 09:54:43.880" endtime="20230923 09:54:45.563"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 09:54:45.569" level="INFO">Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20230923 09:54:45.568" endtime="20230923 09:54:45.569"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 09:54:45.570" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 09:54:45.569" endtime="20230923 09:54:45.570"/>
</kw>
<msg timestamp="20230923 09:54:45.570" level="INFO">${result} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20230923 09:54:43.879" endtime="20230923 09:54:45.570"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Configuration no-such-config-key is missing</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 09:54:45.570" endtime="20230923 09:54:45.571"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone getconf -confKey no-such-config-key</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 09:54:45.575" level="INFO">Running command 'ozone getconf -confKey no-such-config-key 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 09:54:47.192" level="INFO">${rc} = 255</msg>
<msg timestamp="20230923 09:54:47.192" level="INFO">${output} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20230923 09:54:45.572" endtime="20230923 09:54:47.192"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 09:54:47.194" level="INFO">Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20230923 09:54:47.193" endtime="20230923 09:54:47.194"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 09:54:47.195" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 09:54:47.194" endtime="20230923 09:54:47.195"/>
</kw>
<msg timestamp="20230923 09:54:47.195" level="INFO">${result} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20230923 09:54:45.571" endtime="20230923 09:54:47.195"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Configuration no-such-config-key is missing</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 09:54:47.195" endtime="20230923 09:54:47.196"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230923 09:54:43.878" endtime="20230923 09:54:47.196"/>
</test>
<doc>Test 'ozone getconf' command</doc>
<status status="PASS" starttime="20230923 09:54:33.225" endtime="20230923 09:54:47.198"/>
</suite>
<suite id="s1-s4-s3" name="Links" source="/opt/hadoop/smoketest/basic/links.robot">
<kw name="Create volumes" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230923 09:54:47.219" level="INFO">${random} = 82376</msg>
<status status="PASS" starttime="20230923 09:54:47.219" endtime="20230923 09:54:47.219"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${source}</arg>
<arg>${random}-source</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230923 09:54:47.221" level="INFO">${source} = 82376-source</msg>
<status status="PASS" starttime="20230923 09:54:47.220" endtime="20230923 09:54:47.221"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${target}</arg>
<arg>${random}-target</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230923 09:54:47.222" level="INFO">${target} = 82376-target</msg>
<status status="PASS" starttime="20230923 09:54:47.221" endtime="20230923 09:54:47.222"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${source}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 09:54:47.226" level="INFO">Running command 'ozone sh volume create 82376-source 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 09:54:53.379" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 09:54:53.379" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 09:54:47.224" endtime="20230923 09:54:53.379"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 09:54:53.380" level="INFO"/>
<status status="PASS" starttime="20230923 09:54:53.380" endtime="20230923 09:54:53.380"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 09:54:53.381" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 09:54:53.381" endtime="20230923 09:54:53.381"/>
</kw>
<status status="PASS" starttime="20230923 09:54:47.223" endtime="20230923 09:54:53.381"/>
</kw>
<msg timestamp="20230923 09:54:53.382" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 09:54:47.223" endtime="20230923 09:54:53.382"/>
</kw>
<status status="PASS" starttime="20230923 09:54:47.223" endtime="20230923 09:54:53.382"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 09:54:53.386" level="INFO">Running command 'ozone sh volume create 82376-target 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 09:54:59.157" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 09:54:59.158" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 09:54:53.384" endtime="20230923 09:54:59.158"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 09:54:59.159" level="INFO"/>
<status status="PASS" starttime="20230923 09:54:59.158" endtime="20230923 09:54:59.159"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 09:54:59.160" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 09:54:59.159" endtime="20230923 09:54:59.160"/>
</kw>
<status status="PASS" starttime="20230923 09:54:53.383" endtime="20230923 09:54:59.160"/>
</kw>
<msg timestamp="20230923 09:54:59.160" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 09:54:53.383" endtime="20230923 09:54:59.161"/>
</kw>
<status status="PASS" starttime="20230923 09:54:53.382" endtime="20230923 09:54:59.161"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup ACL tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup ACL tests">
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${source}/readable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 09:54:59.166" level="INFO">Running command 'ozone sh bucket create 82376-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 09:55:04.950" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 09:55:04.950" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 09:54:59.164" endtime="20230923 09:55:04.950"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 09:55:04.951" level="INFO"/>
<status status="PASS" starttime="20230923 09:55:04.951" endtime="20230923 09:55:04.951"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 09:55:04.952" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 09:55:04.952" endtime="20230923 09:55:04.952"/>
</kw>
<status status="PASS" starttime="20230923 09:54:59.163" endtime="20230923 09:55:04.952"/>
</kw>
<msg timestamp="20230923 09:55:04.953" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 09:54:59.163" endtime="20230923 09:55:04.953"/>
</kw>
<status status="PASS" starttime="20230923 09:54:59.162" endtime="20230923 09:55:04.953"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${source}/readable-bucket/key-in-readable-bucket /etc/passwd</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 09:55:04.957" level="INFO">Running command 'ozone sh key put 82376-source/readable-bucket/key-in-readable-bucket /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 09:55:13.452" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 09:55:13.453" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 09:55:04.954" endtime="20230923 09:55:13.453"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 09:55:13.454" level="INFO"/>
<status status="PASS" starttime="20230923 09:55:13.453" endtime="20230923 09:55:13.454"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 09:55:13.454" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 09:55:13.454" endtime="20230923 09:55:13.455"/>
</kw>
<status status="PASS" starttime="20230923 09:55:04.954" endtime="20230923 09:55:13.455"/>
</kw>
<msg timestamp="20230923 09:55:13.455" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 09:55:04.954" endtime="20230923 09:55:13.455"/>
</kw>
<status status="PASS" starttime="20230923 09:55:04.953" endtime="20230923 09:55:13.455"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${source}/unreadable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 09:55:13.460" level="INFO">Running command 'ozone sh bucket create 82376-source/unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 09:55:19.178" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 09:55:19.178" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 09:55:13.457" endtime="20230923 09:55:19.178"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 09:55:19.179" level="INFO"/>
<status status="PASS" starttime="20230923 09:55:19.178" endtime="20230923 09:55:19.179"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 09:55:19.180" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 09:55:19.179" endtime="20230923 09:55:19.180"/>
</kw>
<status status="PASS" starttime="20230923 09:55:13.456" endtime="20230923 09:55:19.180"/>
</kw>
<msg timestamp="20230923 09:55:19.180" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 09:55:13.456" endtime="20230923 09:55:19.181"/>
</kw>
<status status="PASS" starttime="20230923 09:55:13.455" endtime="20230923 09:55:19.181"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/unreadable-bucket ${target}/link-to-unreadable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 09:55:19.185" level="INFO">Running command 'ozone sh bucket link 82376-source/unreadable-bucket 82376-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 09:55:24.654" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 09:55:24.654" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 09:55:19.183" endtime="20230923 09:55:24.654"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 09:55:24.656" level="INFO"/>
<status status="PASS" starttime="20230923 09:55:24.655" endtime="20230923 09:55:24.656"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 09:55:24.656" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 09:55:24.656" endtime="20230923 09:55:24.657"/>
</kw>
<status status="PASS" starttime="20230923 09:55:19.182" endtime="20230923 09:55:24.657"/>
</kw>
<msg timestamp="20230923 09:55:24.657" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 09:55:19.182" endtime="20230923 09:55:24.657"/>
</kw>
<status status="PASS" starttime="20230923 09:55:19.181" endtime="20230923 09:55:24.657"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume addacl --acl user:testuser2:r[DEFAULT] ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 09:55:24.662" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2:r[DEFAULT] 82376-target 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 09:55:30.606" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 09:55:30.606" level="INFO">${output} = ACL user:testuser2:r[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20230923 09:55:24.659" endtime="20230923 09:55:30.606"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 09:55:30.607" level="INFO">ACL user:testuser2:r[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20230923 09:55:30.606" endtime="20230923 09:55:30.607"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 09:55:30.608" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 09:55:30.607" endtime="20230923 09:55:30.608"/>
</kw>
<status status="PASS" starttime="20230923 09:55:24.659" endtime="20230923 09:55:30.608"/>
</kw>
<msg timestamp="20230923 09:55:30.608" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 09:55:24.658" endtime="20230923 09:55:30.608"/>
</kw>
<status status="PASS" starttime="20230923 09:55:24.657" endtime="20230923 09:55:30.608"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/readable-link</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 09:55:30.613" level="INFO">Running command 'ozone sh bucket link 82376-source/readable-bucket 82376-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 09:55:36.237" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 09:55:36.237" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 09:55:30.610" endtime="20230923 09:55:36.237"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 09:55:36.238" level="INFO"/>
<status status="PASS" starttime="20230923 09:55:36.238" endtime="20230923 09:55:36.238"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 09:55:36.239" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 09:55:36.238" endtime="20230923 09:55:36.239"/>
</kw>
<status status="PASS" starttime="20230923 09:55:30.610" endtime="20230923 09:55:36.239"/>
</kw>
<msg timestamp="20230923 09:55:36.239" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 09:55:30.609" endtime="20230923 09:55:36.239"/>
</kw>
<status status="PASS" starttime="20230923 09:55:30.609" endtime="20230923 09:55:36.240"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/readable-link2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 09:55:36.244" level="INFO">Running command 'ozone sh bucket link 82376-source/readable-bucket 82376-target/readable-link2 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 09:55:42.201" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 09:55:42.201" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 09:55:36.241" endtime="20230923 09:55:42.201"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 09:55:42.203" level="INFO"/>
<status status="PASS" starttime="20230923 09:55:42.202" endtime="20230923 09:55:42.203"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 09:55:42.203" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 09:55:42.203" endtime="20230923 09:55:42.204"/>
</kw>
<status status="PASS" starttime="20230923 09:55:36.241" endtime="20230923 09:55:42.204"/>
</kw>
<msg timestamp="20230923 09:55:42.204" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 09:55:36.240" endtime="20230923 09:55:42.204"/>
</kw>
<status status="PASS" starttime="20230923 09:55:36.240" endtime="20230923 09:55:42.204"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume addacl --acl user:testuser2:rl ${source}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 09:55:42.209" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2:rl 82376-source 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 09:55:48.052" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 09:55:48.052" level="INFO">${output} = ACL user:testuser2:rl[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20230923 09:55:42.206" endtime="20230923 09:55:48.052"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 09:55:48.053" level="INFO">ACL user:testuser2:rl[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20230923 09:55:48.053" endtime="20230923 09:55:48.053"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 09:55:48.054" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 09:55:48.054" endtime="20230923 09:55:48.054"/>
</kw>
<status status="PASS" starttime="20230923 09:55:42.206" endtime="20230923 09:55:48.054"/>
</kw>
<msg timestamp="20230923 09:55:48.055" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 09:55:42.205" endtime="20230923 09:55:48.055"/>
</kw>
<status status="PASS" starttime="20230923 09:55:42.205" endtime="20230923 09:55:48.055"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl user:testuser2:rl ${source}/readable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 09:55:48.060" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2:rl 82376-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 09:55:53.942" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 09:55:53.943" level="INFO">${output} = ACL user:testuser2:rl[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20230923 09:55:48.056" endtime="20230923 09:55:53.943"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 09:55:53.944" level="INFO">ACL user:testuser2:rl[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20230923 09:55:53.943" endtime="20230923 09:55:53.944"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 09:55:53.945" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 09:55:53.944" endtime="20230923 09:55:53.945"/>
</kw>
<status status="PASS" starttime="20230923 09:55:48.056" endtime="20230923 09:55:53.945"/>
</kw>
<msg timestamp="20230923 09:55:53.945" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 09:55:48.056" endtime="20230923 09:55:53.945"/>
</kw>
<status status="PASS" starttime="20230923 09:55:48.055" endtime="20230923 09:55:53.946"/>
</kw>
<status status="PASS" starttime="20230923 09:54:59.162" endtime="20230923 09:55:53.946"/>
</kw>
<status status="PASS" starttime="20230923 09:54:59.161" endtime="20230923 09:55:53.946"/>
</kw>
<status status="PASS" starttime="20230923 09:54:47.219" endtime="20230923 09:55:53.946"/>
</kw>
<test id="s1-s4-s3-t1" name="Link to non-existent bucket" line="94">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 09:55:53.954" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 09:55:53.958" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 09:55:53.958" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230923 09:55:53.951" endtime="20230923 09:55:53.958"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 09:55:53.959" level="INFO">scm</msg>
<status status="PASS" starttime="20230923 09:55:53.958" endtime="20230923 09:55:53.959"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 09:55:53.960" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 09:55:53.959" endtime="20230923 09:55:53.960"/>
</kw>
<status status="PASS" starttime="20230923 09:55:53.950" endtime="20230923 09:55:53.960"/>
</kw>
<msg timestamp="20230923 09:55:53.960" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 09:55:53.950" endtime="20230923 09:55:53.961"/>
</kw>
<msg timestamp="20230923 09:55:53.961" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230923 09:55:53.950" endtime="20230923 09:55:53.961"/>
</kw>
<msg timestamp="20230923 09:55:53.961" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230923 09:55:53.949" endtime="20230923 09:55:53.961"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230923 09:55:53.962" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230923 09:55:53.961" endtime="20230923 09:55:53.962"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 09:55:53.967" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 09:55:54.033" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 09:55:54.033" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 09:55:53.964" endtime="20230923 09:55:54.033"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 09:55:54.034" level="INFO"/>
<status status="PASS" starttime="20230923 09:55:54.033" endtime="20230923 09:55:54.034"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 09:55:54.035" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 09:55:54.034" endtime="20230923 09:55:54.035"/>
</kw>
<status status="PASS" starttime="20230923 09:55:53.964" endtime="20230923 09:55:54.035"/>
</kw>
<msg timestamp="20230923 09:55:54.035" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 09:55:53.963" endtime="20230923 09:55:54.036"/>
</kw>
<status status="PASS" starttime="20230923 09:55:53.963" endtime="20230923 09:55:54.036"/>
</kw>
<status status="PASS" starttime="20230923 09:55:53.962" endtime="20230923 09:55:54.036"/>
</kw>
<status status="PASS" starttime="20230923 09:55:53.948" endtime="20230923 09:55:54.036"/>
</kw>
<status status="PASS" starttime="20230923 09:55:53.947" endtime="20230923 09:55:54.036"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/no-such-bucket ${target}/dangling-link</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 09:55:54.040" level="INFO">Running command 'ozone sh bucket link 82376-source/no-such-bucket 82376-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 09:55:59.828" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 09:55:59.828" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 09:55:54.038" endtime="20230923 09:55:59.828"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 09:55:59.830" level="INFO"/>
<status status="PASS" starttime="20230923 09:55:59.829" endtime="20230923 09:55:59.830"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 09:55:59.831" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 09:55:59.830" endtime="20230923 09:55:59.831"/>
</kw>
<status status="PASS" starttime="20230923 09:55:54.037" endtime="20230923 09:55:59.831"/>
</kw>
<msg timestamp="20230923 09:55:59.831" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 09:55:54.037" endtime="20230923 09:55:59.831"/>
</kw>
<status status="PASS" starttime="20230923 09:55:54.036" endtime="20230923 09:55:59.832"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/dangling-link</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 09:55:59.835" level="INFO">Running command 'ozone sh key list 82376-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 09:56:05.574" level="INFO">${rc} = 255</msg>
<msg timestamp="20230923 09:56:05.574" level="INFO">${output} = BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" starttime="20230923 09:55:59.833" endtime="20230923 09:56:05.574"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 09:56:05.575" level="INFO">BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" starttime="20230923 09:56:05.574" endtime="20230923 09:56:05.575"/>
</kw>
<msg timestamp="20230923 09:56:05.576" level="INFO">${result} = BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" starttime="20230923 09:55:59.832" endtime="20230923 09:56:05.576"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>BUCKET_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 09:56:05.576" endtime="20230923 09:56:05.577"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20230923 09:55:53.946" endtime="20230923 09:56:05.577"/>
</test>
<test id="s1-s4-s3-t2" name="Key create passthrough" line="99">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 09:56:05.589" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 09:56:05.595" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 09:56:05.595" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230923 09:56:05.583" endtime="20230923 09:56:05.595"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 09:56:05.596" level="INFO">scm</msg>
<status status="PASS" starttime="20230923 09:56:05.596" endtime="20230923 09:56:05.597"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 09:56:05.597" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 09:56:05.597" endtime="20230923 09:56:05.597"/>
</kw>
<status status="PASS" starttime="20230923 09:56:05.583" endtime="20230923 09:56:05.597"/>
</kw>
<msg timestamp="20230923 09:56:05.598" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 09:56:05.583" endtime="20230923 09:56:05.598"/>
</kw>
<msg timestamp="20230923 09:56:05.598" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230923 09:56:05.582" endtime="20230923 09:56:05.598"/>
</kw>
<msg timestamp="20230923 09:56:05.598" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230923 09:56:05.580" endtime="20230923 09:56:05.598"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230923 09:56:05.599" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230923 09:56:05.598" endtime="20230923 09:56:05.599"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 09:56:05.604" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 09:56:05.651" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 09:56:05.651" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 09:56:05.601" endtime="20230923 09:56:05.651"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 09:56:05.652" level="INFO"/>
<status status="PASS" starttime="20230923 09:56:05.652" endtime="20230923 09:56:05.653"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 09:56:05.653" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 09:56:05.653" endtime="20230923 09:56:05.653"/>
</kw>
<status status="PASS" starttime="20230923 09:56:05.601" endtime="20230923 09:56:05.654"/>
</kw>
<msg timestamp="20230923 09:56:05.654" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 09:56:05.600" endtime="20230923 09:56:05.654"/>
</kw>
<status status="PASS" starttime="20230923 09:56:05.600" endtime="20230923 09:56:05.654"/>
</kw>
<status status="PASS" starttime="20230923 09:56:05.599" endtime="20230923 09:56:05.654"/>
</kw>
<status status="PASS" starttime="20230923 09:56:05.580" endtime="20230923 09:56:05.654"/>
</kw>
<status status="PASS" starttime="20230923 09:56:05.579" endtime="20230923 09:56:05.654"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 09:56:05.658" level="INFO">Running command 'ozone sh bucket link 82376-source/bucket1 82376-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 09:56:11.097" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 09:56:11.097" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 09:56:05.656" endtime="20230923 09:56:11.097"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 09:56:11.098" level="INFO"/>
<status status="PASS" starttime="20230923 09:56:11.098" endtime="20230923 09:56:11.099"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 09:56:11.099" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 09:56:11.099" endtime="20230923 09:56:11.099"/>
</kw>
<status status="PASS" starttime="20230923 09:56:05.656" endtime="20230923 09:56:11.099"/>
</kw>
<msg timestamp="20230923 09:56:11.100" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 09:56:05.655" endtime="20230923 09:56:11.100"/>
</kw>
<status status="PASS" starttime="20230923 09:56:05.655" endtime="20230923 09:56:11.100"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${source}/bucket1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 09:56:11.104" level="INFO">Running command 'ozone sh bucket create 82376-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 09:56:16.595" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 09:56:16.595" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 09:56:11.102" endtime="20230923 09:56:16.595"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 09:56:16.596" level="INFO"/>
<status status="PASS" starttime="20230923 09:56:16.595" endtime="20230923 09:56:16.596"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 09:56:16.597" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 09:56:16.597" endtime="20230923 09:56:16.597"/>
</kw>
<status status="PASS" starttime="20230923 09:56:11.101" endtime="20230923 09:56:16.597"/>
</kw>
<msg timestamp="20230923 09:56:16.598" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 09:56:11.101" endtime="20230923 09:56:16.598"/>
</kw>
<status status="PASS" starttime="20230923 09:56:11.100" endtime="20230923 09:56:16.598"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${target}/link1/key1 /etc/passwd</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 09:56:16.616" level="INFO">Running command 'ozone sh key put 82376-target/link1/key1 /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 09:56:25.531" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 09:56:25.531" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 09:56:16.613" endtime="20230923 09:56:25.531"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 09:56:25.533" level="INFO"/>
<status status="PASS" starttime="20230923 09:56:25.532" endtime="20230923 09:56:25.533"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 09:56:25.533" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 09:56:25.533" endtime="20230923 09:56:25.534"/>
</kw>
<status status="PASS" starttime="20230923 09:56:16.599" endtime="20230923 09:56:25.534"/>
</kw>
<msg timestamp="20230923 09:56:25.534" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 09:56:16.599" endtime="20230923 09:56:25.534"/>
</kw>
<status status="PASS" starttime="20230923 09:56:16.598" endtime="20230923 09:56:25.534"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${target}/link1/key1</arg>
<arg>/etc/passwd</arg>
<kw name="Compare Key With Local File" library="shell">
<var>${matches}</var>
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230923 09:56:25.536" level="INFO">${postfix} = 01065</msg>
<status status="PASS" starttime="20230923 09:56:25.536" endtime="20230923 09:56:25.536"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${tmpfile}</var>
<arg>/tmp/tempkey-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230923 09:56:25.537" level="INFO">${tmpfile} = /tmp/tempkey-01065</msg>
<status status="PASS" starttime="20230923 09:56:25.537" endtime="20230923 09:56:25.537"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${key} ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 09:56:25.542" level="INFO">Running command 'ozone sh key get 82376-target/link1/key1 /tmp/tempkey-01065 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 09:56:33.546" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 09:56:33.546" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 09:56:25.539" endtime="20230923 09:56:33.546"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 09:56:33.548" level="INFO"/>
<status status="PASS" starttime="20230923 09:56:33.547" endtime="20230923 09:56:33.548"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 09:56:33.548" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 09:56:33.548" endtime="20230923 09:56:33.549"/>
</kw>
<status status="PASS" starttime="20230923 09:56:25.538" endtime="20230923 09:56:33.549"/>
</kw>
<msg timestamp="20230923 09:56:33.549" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 09:56:25.538" endtime="20230923 09:56:33.549"/>
</kw>
<status status="PASS" starttime="20230923 09:56:25.537" endtime="20230923 09:56:33.549"/>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<var>${rc}</var>
<arg>diff -q ${file} ${tmpfile}</arg>
<doc>Runs the given command in the system and returns the return code.</doc>
<msg timestamp="20230923 09:56:33.552" level="INFO">Running command 'diff -q /etc/passwd /tmp/tempkey-01065 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 09:56:33.556" level="INFO">${rc} = 0</msg>
<status status="PASS" starttime="20230923 09:56:33.549" endtime="20230923 09:56:33.556"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 09:56:33.562" level="INFO">Running command 'rm -f /tmp/tempkey-01065 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 09:56:33.564" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 09:56:33.564" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 09:56:33.559" endtime="20230923 09:56:33.565"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 09:56:33.565" level="INFO"/>
<status status="PASS" starttime="20230923 09:56:33.565" endtime="20230923 09:56:33.566"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 09:56:33.566" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 09:56:33.566" endtime="20230923 09:56:33.566"/>
</kw>
<status status="PASS" starttime="20230923 09:56:33.558" endtime="20230923 09:56:33.566"/>
</kw>
<msg timestamp="20230923 09:56:33.566" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 09:56:33.558" endtime="20230923 09:56:33.566"/>
</kw>
<status status="PASS" starttime="20230923 09:56:33.557" endtime="20230923 09:56:33.567"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230923 09:56:33.567" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20230923 09:56:33.567" endtime="20230923 09:56:33.567"/>
</kw>
<msg timestamp="20230923 09:56:33.568" level="INFO">${matches} = True</msg>
<status status="PASS" starttime="20230923 09:56:25.535" endtime="20230923 09:56:33.568"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${matches}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230923 09:56:33.568" endtime="20230923 09:56:33.568"/>
</kw>
<status status="PASS" starttime="20230923 09:56:25.534" endtime="20230923 09:56:33.568"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20230923 09:56:05.578" endtime="20230923 09:56:33.569"/>
</test>
<test id="s1-s4-s3-t3" name="Key read passthrough" line="105">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 09:56:33.577" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 09:56:33.581" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 09:56:33.581" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230923 09:56:33.575" endtime="20230923 09:56:33.582"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 09:56:33.583" level="INFO">scm</msg>
<status status="PASS" starttime="20230923 09:56:33.582" endtime="20230923 09:56:33.583"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 09:56:33.583" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 09:56:33.583" endtime="20230923 09:56:33.583"/>
</kw>
<status status="PASS" starttime="20230923 09:56:33.575" endtime="20230923 09:56:33.584"/>
</kw>
<msg timestamp="20230923 09:56:33.584" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 09:56:33.575" endtime="20230923 09:56:33.584"/>
</kw>
<msg timestamp="20230923 09:56:33.584" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230923 09:56:33.574" endtime="20230923 09:56:33.584"/>
</kw>
<msg timestamp="20230923 09:56:33.584" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230923 09:56:33.574" endtime="20230923 09:56:33.584"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230923 09:56:33.585" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230923 09:56:33.584" endtime="20230923 09:56:33.585"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 09:56:33.589" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 09:56:33.627" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 09:56:33.628" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 09:56:33.587" endtime="20230923 09:56:33.628"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 09:56:33.629" level="INFO"/>
<status status="PASS" starttime="20230923 09:56:33.628" endtime="20230923 09:56:33.629"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 09:56:33.630" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 09:56:33.629" endtime="20230923 09:56:33.630"/>
</kw>
<status status="PASS" starttime="20230923 09:56:33.586" endtime="20230923 09:56:33.630"/>
</kw>
<msg timestamp="20230923 09:56:33.630" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 09:56:33.586" endtime="20230923 09:56:33.630"/>
</kw>
<status status="PASS" starttime="20230923 09:56:33.586" endtime="20230923 09:56:33.630"/>
</kw>
<status status="PASS" starttime="20230923 09:56:33.585" endtime="20230923 09:56:33.630"/>
</kw>
<status status="PASS" starttime="20230923 09:56:33.573" endtime="20230923 09:56:33.631"/>
</kw>
<status status="PASS" starttime="20230923 09:56:33.573" endtime="20230923 09:56:33.631"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${source}/bucket1/key2 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 09:56:33.635" level="INFO">Running command 'ozone sh key put 82376-source/bucket1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 09:56:41.138" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 09:56:41.139" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 09:56:33.632" endtime="20230923 09:56:41.139"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 09:56:41.140" level="INFO"/>
<status status="PASS" starttime="20230923 09:56:41.139" endtime="20230923 09:56:41.140"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 09:56:41.141" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 09:56:41.140" endtime="20230923 09:56:41.141"/>
</kw>
<status status="PASS" starttime="20230923 09:56:33.632" endtime="20230923 09:56:41.141"/>
</kw>
<msg timestamp="20230923 09:56:41.141" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 09:56:33.632" endtime="20230923 09:56:41.142"/>
</kw>
<status status="PASS" starttime="20230923 09:56:33.631" endtime="20230923 09:56:41.142"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${source}/bucket1/key2</arg>
<arg>/opt/hadoop/NOTICE.txt</arg>
<kw name="Compare Key With Local File" library="shell">
<var>${matches}</var>
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230923 09:56:41.144" level="INFO">${postfix} = 23302</msg>
<status status="PASS" starttime="20230923 09:56:41.143" endtime="20230923 09:56:41.144"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${tmpfile}</var>
<arg>/tmp/tempkey-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230923 09:56:41.144" level="INFO">${tmpfile} = /tmp/tempkey-23302</msg>
<status status="PASS" starttime="20230923 09:56:41.144" endtime="20230923 09:56:41.144"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${key} ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 09:56:41.148" level="INFO">Running command 'ozone sh key get 82376-source/bucket1/key2 /tmp/tempkey-23302 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 09:56:49.011" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 09:56:49.011" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 09:56:41.146" endtime="20230923 09:56:49.011"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 09:56:49.013" level="INFO"/>
<status status="PASS" starttime="20230923 09:56:49.012" endtime="20230923 09:56:49.013"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 09:56:49.013" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 09:56:49.013" endtime="20230923 09:56:49.014"/>
</kw>
<status status="PASS" starttime="20230923 09:56:41.145" endtime="20230923 09:56:49.014"/>
</kw>
<msg timestamp="20230923 09:56:49.014" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 09:56:41.145" endtime="20230923 09:56:49.014"/>
</kw>
<status status="PASS" starttime="20230923 09:56:41.144" endtime="20230923 09:56:49.014"/>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<var>${rc}</var>
<arg>diff -q ${file} ${tmpfile}</arg>
<doc>Runs the given command in the system and returns the return code.</doc>
<msg timestamp="20230923 09:56:49.023" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/tempkey-23302 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 09:56:49.027" level="INFO">${rc} = 0</msg>
<status status="PASS" starttime="20230923 09:56:49.014" endtime="20230923 09:56:49.027"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 09:56:49.032" level="INFO">Running command 'rm -f /tmp/tempkey-23302 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 09:56:49.035" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 09:56:49.035" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 09:56:49.029" endtime="20230923 09:56:49.035"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 09:56:49.036" level="INFO"/>
<status status="PASS" starttime="20230923 09:56:49.035" endtime="20230923 09:56:49.036"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 09:56:49.037" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 09:56:49.036" endtime="20230923 09:56:49.037"/>
</kw>
<status status="PASS" starttime="20230923 09:56:49.029" endtime="20230923 09:56:49.037"/>
</kw>
<msg timestamp="20230923 09:56:49.037" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 09:56:49.028" endtime="20230923 09:56:49.037"/>
</kw>
<status status="PASS" starttime="20230923 09:56:49.027" endtime="20230923 09:56:49.037"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230923 09:56:49.038" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20230923 09:56:49.038" endtime="20230923 09:56:49.038"/>
</kw>
<msg timestamp="20230923 09:56:49.038" level="INFO">${matches} = True</msg>
<status status="PASS" starttime="20230923 09:56:41.142" endtime="20230923 09:56:49.038"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${matches}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230923 09:56:49.039" endtime="20230923 09:56:49.039"/>
</kw>
<status status="PASS" starttime="20230923 09:56:41.142" endtime="20230923 09:56:49.039"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20230923 09:56:33.572" endtime="20230923 09:56:49.039"/>
</test>
<test id="s1-s4-s3-t4" name="Key list passthrough" line="109">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 09:56:49.047" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 09:56:49.051" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 09:56:49.051" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230923 09:56:49.045" endtime="20230923 09:56:49.051"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 09:56:49.053" level="INFO">scm</msg>
<status status="PASS" starttime="20230923 09:56:49.052" endtime="20230923 09:56:49.053"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 09:56:49.053" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 09:56:49.053" endtime="20230923 09:56:49.054"/>
</kw>
<status status="PASS" starttime="20230923 09:56:49.044" endtime="20230923 09:56:49.054"/>
</kw>
<msg timestamp="20230923 09:56:49.054" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 09:56:49.044" endtime="20230923 09:56:49.054"/>
</kw>
<msg timestamp="20230923 09:56:49.054" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230923 09:56:49.043" endtime="20230923 09:56:49.054"/>
</kw>
<msg timestamp="20230923 09:56:49.054" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230923 09:56:49.043" endtime="20230923 09:56:49.054"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230923 09:56:49.055" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230923 09:56:49.055" endtime="20230923 09:56:49.055"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 09:56:49.060" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 09:56:49.098" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 09:56:49.099" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 09:56:49.058" endtime="20230923 09:56:49.099"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 09:56:49.100" level="INFO"/>
<status status="PASS" starttime="20230923 09:56:49.099" endtime="20230923 09:56:49.100"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 09:56:49.100" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 09:56:49.100" endtime="20230923 09:56:49.100"/>
</kw>
<status status="PASS" starttime="20230923 09:56:49.057" endtime="20230923 09:56:49.101"/>
</kw>
<msg timestamp="20230923 09:56:49.101" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 09:56:49.056" endtime="20230923 09:56:49.101"/>
</kw>
<status status="PASS" starttime="20230923 09:56:49.056" endtime="20230923 09:56:49.101"/>
</kw>
<status status="PASS" starttime="20230923 09:56:49.055" endtime="20230923 09:56:49.101"/>
</kw>
<status status="PASS" starttime="20230923 09:56:49.042" endtime="20230923 09:56:49.101"/>
</kw>
<status status="PASS" starttime="20230923 09:56:49.042" endtime="20230923 09:56:49.101"/>
</kw>
<kw name="Execute" library="os">
<var>${target_list}</var>
<arg>ozone sh key list ${target}/link1 | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 09:56:49.105" level="INFO">Running command 'ozone sh key list 82376-target/link1 | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 09:56:55.280" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 09:56:55.281" level="INFO">${output} = key1
key2</msg>
<status status="PASS" starttime="20230923 09:56:49.103" endtime="20230923 09:56:55.281"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 09:56:55.282" level="INFO">key1
key2</msg>
<status status="PASS" starttime="20230923 09:56:55.281" endtime="20230923 09:56:55.282"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 09:56:55.283" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 09:56:55.282" endtime="20230923 09:56:55.283"/>
</kw>
<status status="PASS" starttime="20230923 09:56:49.102" endtime="20230923 09:56:55.283"/>
</kw>
<msg timestamp="20230923 09:56:55.283" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 09:56:49.102" endtime="20230923 09:56:55.283"/>
</kw>
<msg timestamp="20230923 09:56:55.283" level="INFO">${target_list} = key1
key2</msg>
<status status="PASS" starttime="20230923 09:56:49.101" endtime="20230923 09:56:55.283"/>
</kw>
<kw name="Execute" library="os">
<var>${source_list}</var>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 09:56:55.288" level="INFO">Running command 'ozone sh key list 82376-source/bucket1 | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 09:57:01.498" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 09:57:01.498" level="INFO">${output} = key1
key2</msg>
<status status="PASS" starttime="20230923 09:56:55.285" endtime="20230923 09:57:01.498"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 09:57:01.500" level="INFO">key1
key2</msg>
<status status="PASS" starttime="20230923 09:57:01.499" endtime="20230923 09:57:01.500"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 09:57:01.500" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 09:57:01.500" endtime="20230923 09:57:01.501"/>
</kw>
<status status="PASS" starttime="20230923 09:56:55.285" endtime="20230923 09:57:01.501"/>
</kw>
<msg timestamp="20230923 09:57:01.501" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 09:56:55.284" endtime="20230923 09:57:01.501"/>
</kw>
<msg timestamp="20230923 09:57:01.501" level="INFO">${source_list} = key1
key2</msg>
<status status="PASS" starttime="20230923 09:56:55.284" endtime="20230923 09:57:01.501"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${target_list}</arg>
<arg>${source_list}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230923 09:57:01.501" endtime="20230923 09:57:01.502"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 09:57:01.502" endtime="20230923 09:57:01.503"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 09:57:01.503" endtime="20230923 09:57:01.503"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20230923 09:56:49.041" endtime="20230923 09:57:01.503"/>
</test>
<test id="s1-s4-s3-t5" name="Key delete passthrough" line="116">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 09:57:01.511" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 09:57:01.515" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 09:57:01.516" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230923 09:57:01.509" endtime="20230923 09:57:01.516"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 09:57:01.517" level="INFO">scm</msg>
<status status="PASS" starttime="20230923 09:57:01.516" endtime="20230923 09:57:01.517"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 09:57:01.518" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 09:57:01.517" endtime="20230923 09:57:01.518"/>
</kw>
<status status="PASS" starttime="20230923 09:57:01.508" endtime="20230923 09:57:01.518"/>
</kw>
<msg timestamp="20230923 09:57:01.518" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 09:57:01.508" endtime="20230923 09:57:01.518"/>
</kw>
<msg timestamp="20230923 09:57:01.518" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230923 09:57:01.508" endtime="20230923 09:57:01.518"/>
</kw>
<msg timestamp="20230923 09:57:01.519" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230923 09:57:01.507" endtime="20230923 09:57:01.519"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230923 09:57:01.519" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230923 09:57:01.519" endtime="20230923 09:57:01.519"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 09:57:01.524" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 09:57:01.563" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 09:57:01.564" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 09:57:01.521" endtime="20230923 09:57:01.564"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 09:57:01.565" level="INFO"/>
<status status="PASS" starttime="20230923 09:57:01.564" endtime="20230923 09:57:01.565"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 09:57:01.565" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 09:57:01.565" endtime="20230923 09:57:01.566"/>
</kw>
<status status="PASS" starttime="20230923 09:57:01.521" endtime="20230923 09:57:01.566"/>
</kw>
<msg timestamp="20230923 09:57:01.566" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 09:57:01.521" endtime="20230923 09:57:01.566"/>
</kw>
<status status="PASS" starttime="20230923 09:57:01.520" endtime="20230923 09:57:01.566"/>
</kw>
<status status="PASS" starttime="20230923 09:57:01.520" endtime="20230923 09:57:01.566"/>
</kw>
<status status="PASS" starttime="20230923 09:57:01.506" endtime="20230923 09:57:01.566"/>
</kw>
<status status="PASS" starttime="20230923 09:57:01.506" endtime="20230923 09:57:01.566"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${target}/link1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 09:57:01.570" level="INFO">Running command 'ozone sh key delete 82376-target/link1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 09:57:07.530" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 09:57:07.530" level="INFO">${output} = Key moved inside Trash: /.Trash/testuser/Current/key2 </msg>
<status status="PASS" starttime="20230923 09:57:01.568" endtime="20230923 09:57:07.531"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 09:57:07.532" level="INFO">Key moved inside Trash: /.Trash/testuser/Current/key2 </msg>
<status status="PASS" starttime="20230923 09:57:07.531" endtime="20230923 09:57:07.532"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 09:57:07.533" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 09:57:07.533" endtime="20230923 09:57:07.533"/>
</kw>
<status status="PASS" starttime="20230923 09:57:01.567" endtime="20230923 09:57:07.534"/>
</kw>
<msg timestamp="20230923 09:57:07.534" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 09:57:01.567" endtime="20230923 09:57:07.534"/>
</kw>
<status status="PASS" starttime="20230923 09:57:01.566" endtime="20230923 09:57:07.534"/>
</kw>
<kw name="Execute" library="os">
<var>${bucket1keys}</var>
<arg>ozone sh key list ${source}/bucket1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 09:57:07.539" level="INFO">Running command 'ozone sh key list 82376-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 09:57:13.250" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 09:57:13.250" level="INFO">${output} = [ {
  "volumeName" : "82376-source",
  "bucketName" : "bucket1",
  "name" : ".Trash/",
  "dataSize" : 0,
  "creationTime" : "2023-09-23T09:57:07.396Z",
  "modificationTime" : "2023-09-23T09:57:07.396Z...</msg>
<status status="PASS" starttime="20230923 09:57:07.536" endtime="20230923 09:57:13.250"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 09:57:13.251" level="INFO">[ {
  "volumeName" : "82376-source",
  "bucketName" : "bucket1",
  "name" : ".Trash/",
  "dataSize" : 0,
  "creationTime" : "2023-09-23T09:57:07.396Z",
  "modificationTime" : "2023-09-23T09:57:07.396Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "file" : false
}, {
  "volumeName" : "82376-source",
  "bucketName" : "bucket1",
  "name" : ".Trash/testuser/",
  "dataSize" : 0,
  "creationTime" : "2023-09-23T09:57:07.396Z",
  "modificationTime" : "2023-09-23T09:57:07.396Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "file" : false
}, {
  "volumeName" : "82376-source",
  "bucketName" : "bucket1",
  "name" : ".Trash/testuser/Current/",
  "dataSize" : 0,
  "creationTime" : "2023-09-23T09:57:07.396Z",
  "modificationTime" : "2023-09-23T09:57:07.411Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "file" : false
}, {
  "volumeName" : "82376-source",
  "bucketName" : "bucket1",
  "name" : ".Trash/testuser/Current/key2",
  "dataSize" : 17289,
  "creationTime" : "2023-09-23T09:56:38.626Z",
  "modificationTime" : "2023-09-23T09:56:40.700Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "file" : true
}, {
  "volumeName" : "82376-source",
  "bucketName" : "bucket1",
  "name" : "key1",
  "dataSize" : 988,
  "creationTime" : "2023-09-23T09:56:22.807Z",
  "modificationTime" : "2023-09-23T09:56:25.077Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "file" : true
} ]</msg>
<status status="PASS" starttime="20230923 09:57:13.250" endtime="20230923 09:57:13.251"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 09:57:13.252" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 09:57:13.252" endtime="20230923 09:57:13.252"/>
</kw>
<status status="PASS" starttime="20230923 09:57:07.535" endtime="20230923 09:57:13.253"/>
</kw>
<msg timestamp="20230923 09:57:13.253" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 09:57:07.535" endtime="20230923 09:57:13.253"/>
</kw>
<msg timestamp="20230923 09:57:13.253" level="INFO">${bucket1keys} = [ {
  "volumeName" : "82376-source",
  "bucketName" : "bucket1",
  "name" : ".Trash/",
  "dataSize" : 0,
  "creationTime" : "2023-09-23T09:57:07.396Z",
  "modificationTime" : "2023-09-23T09:57:07.396Z...</msg>
<status status="PASS" starttime="20230923 09:57:07.534" endtime="20230923 09:57:13.253"/>
</kw>
<kw name="Execute" library="os">
<var>${source_list}</var>
<arg>echo '${bucket1keys}' | jq -r '.[] | select(.name | startswith(".Trash")) | .name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 09:57:13.258" level="INFO">Running command 'echo '[ {
  "volumeName" : "82376-source",
  "bucketName" : "bucket1",
  "name" : ".Trash/",
  "dataSize" : 0,
  "creationTime" : "2023-09-23T09:57:07.396Z",
  "modificationTime" : "2023-09-23T09:57:07.396Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "file" : false
}, {
  "volumeName" : "82376-source",
  "bucketName" : "bucket1",
  "name" : ".Trash/testuser/",
  "dataSize" : 0,
  "creationTime" : "2023-09-23T09:57:07.396Z",
  "modificationTime" : "2023-09-23T09:57:07.396Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "file" : false
}, {
  "volumeName" : "82376-source",
  "bucketName" : "bucket1",
  "name" : ".Trash/testuser/Current/",
  "dataSize" : 0,
  "creationTime" : "2023-09-23T09:57:07.396Z",
  "modificationTime" : "2023-09-23T09:57:07.411Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "file" : false
}, {
  "volumeName" : "82376-source",
  "bucketName" : "bucket1",
  "name" : ".Trash/testuser/Current/key2",
  "dataSize" : 17289,
  "creationTime" : "2023-09-23T09:56:38.626Z",
  "modificationTime" : "2023-09-23T09:56:40.700Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "file" : true
}, {
  "volumeName" : "82376-source",
  "bucketName" : "bucket1",
  "name" : "key1",
  "dataSize" : 988,
  "creationTime" : "2023-09-23T09:56:22.807Z",
  "modificationTime" : "2023-09-23T09:56:25.077Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "file" : true
} ]' | jq -r '.[] | select(.name | startswith(".Trash")) | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 09:57:13.302" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 09:57:13.302" level="INFO">${output} = .Trash/
.Trash/testuser/
.Trash/testuser/Current/
.Trash/testuser/Current/key2</msg>
<status status="PASS" starttime="20230923 09:57:13.255" endtime="20230923 09:57:13.302"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 09:57:13.304" level="INFO">.Trash/
.Trash/testuser/
.Trash/testuser/Current/
.Trash/testuser/Current/key2</msg>
<status status="PASS" starttime="20230923 09:57:13.303" endtime="20230923 09:57:13.304"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 09:57:13.305" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 09:57:13.304" endtime="20230923 09:57:13.305"/>
</kw>
<status status="PASS" starttime="20230923 09:57:13.255" endtime="20230923 09:57:13.305"/>
</kw>
<msg timestamp="20230923 09:57:13.305" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 09:57:13.254" endtime="20230923 09:57:13.305"/>
</kw>
<msg timestamp="20230923 09:57:13.305" level="INFO">${source_list} = .Trash/
.Trash/testuser/
.Trash/testuser/Current/
.Trash/testuser/Current/key2</msg>
<status status="PASS" starttime="20230923 09:57:13.253" endtime="20230923 09:57:13.306"/>
</kw>
<kw name="Should Contain Any" library="BuiltIn">
<arg>${source_list}</arg>
<arg>.Trash/hadoop</arg>
<arg>.Trash/testuser</arg>
<arg>.Trash/root</arg>
<doc>Fails if ``container`` does not contain any of the ``*items``.</doc>
<status status="PASS" starttime="20230923 09:57:13.306" endtime="20230923 09:57:13.306"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 09:57:13.306" endtime="20230923 09:57:13.307"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>echo '${bucket1keys}' | jq -r '.[] | select(.name | startswith(".Trash") | not) | .name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 09:57:13.311" level="INFO">Running command 'echo '[ {
  "volumeName" : "82376-source",
  "bucketName" : "bucket1",
  "name" : ".Trash/",
  "dataSize" : 0,
  "creationTime" : "2023-09-23T09:57:07.396Z",
  "modificationTime" : "2023-09-23T09:57:07.396Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "file" : false
}, {
  "volumeName" : "82376-source",
  "bucketName" : "bucket1",
  "name" : ".Trash/testuser/",
  "dataSize" : 0,
  "creationTime" : "2023-09-23T09:57:07.396Z",
  "modificationTime" : "2023-09-23T09:57:07.396Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "file" : false
}, {
  "volumeName" : "82376-source",
  "bucketName" : "bucket1",
  "name" : ".Trash/testuser/Current/",
  "dataSize" : 0,
  "creationTime" : "2023-09-23T09:57:07.396Z",
  "modificationTime" : "2023-09-23T09:57:07.411Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "file" : false
}, {
  "volumeName" : "82376-source",
  "bucketName" : "bucket1",
  "name" : ".Trash/testuser/Current/key2",
  "dataSize" : 17289,
  "creationTime" : "2023-09-23T09:56:38.626Z",
  "modificationTime" : "2023-09-23T09:56:40.700Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "file" : true
}, {
  "volumeName" : "82376-source",
  "bucketName" : "bucket1",
  "name" : "key1",
  "dataSize" : 988,
  "creationTime" : "2023-09-23T09:56:22.807Z",
  "modificationTime" : "2023-09-23T09:56:25.077Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "file" : true
} ]' | jq -r '.[] | select(.name | startswith(".Trash") | not) | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 09:57:13.355" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 09:57:13.355" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20230923 09:57:13.309" endtime="20230923 09:57:13.355"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 09:57:13.356" level="INFO">key1</msg>
<status status="PASS" starttime="20230923 09:57:13.356" endtime="20230923 09:57:13.356"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 09:57:13.357" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 09:57:13.357" endtime="20230923 09:57:13.357"/>
</kw>
<status status="PASS" starttime="20230923 09:57:13.308" endtime="20230923 09:57:13.357"/>
</kw>
<msg timestamp="20230923 09:57:13.357" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 09:57:13.308" endtime="20230923 09:57:13.357"/>
</kw>
<msg timestamp="20230923 09:57:13.358" level="INFO">${result} = key1</msg>
<status status="PASS" starttime="20230923 09:57:13.307" endtime="20230923 09:57:13.358"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>key2</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 09:57:13.358" endtime="20230923 09:57:13.358"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20230923 09:57:01.505" endtime="20230923 09:57:13.358"/>
</test>
<test id="s1-s4-s3-t6" name="Bucket list contains links" line="125">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 09:57:13.365" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 09:57:13.369" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 09:57:13.369" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230923 09:57:13.363" endtime="20230923 09:57:13.369"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 09:57:13.370" level="INFO">scm</msg>
<status status="PASS" starttime="20230923 09:57:13.369" endtime="20230923 09:57:13.370"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 09:57:13.371" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 09:57:13.370" endtime="20230923 09:57:13.371"/>
</kw>
<status status="PASS" starttime="20230923 09:57:13.362" endtime="20230923 09:57:13.371"/>
</kw>
<msg timestamp="20230923 09:57:13.371" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 09:57:13.362" endtime="20230923 09:57:13.371"/>
</kw>
<msg timestamp="20230923 09:57:13.372" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230923 09:57:13.362" endtime="20230923 09:57:13.372"/>
</kw>
<msg timestamp="20230923 09:57:13.372" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230923 09:57:13.361" endtime="20230923 09:57:13.372"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230923 09:57:13.373" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230923 09:57:13.372" endtime="20230923 09:57:13.373"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 09:57:13.377" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 09:57:13.425" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 09:57:13.426" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 09:57:13.375" endtime="20230923 09:57:13.426"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 09:57:13.427" level="INFO"/>
<status status="PASS" starttime="20230923 09:57:13.426" endtime="20230923 09:57:13.427"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 09:57:13.428" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 09:57:13.427" endtime="20230923 09:57:13.428"/>
</kw>
<status status="PASS" starttime="20230923 09:57:13.374" endtime="20230923 09:57:13.428"/>
</kw>
<msg timestamp="20230923 09:57:13.428" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 09:57:13.374" endtime="20230923 09:57:13.428"/>
</kw>
<status status="PASS" starttime="20230923 09:57:13.373" endtime="20230923 09:57:13.428"/>
</kw>
<status status="PASS" starttime="20230923 09:57:13.373" endtime="20230923 09:57:13.428"/>
</kw>
<status status="PASS" starttime="20230923 09:57:13.361" endtime="20230923 09:57:13.428"/>
</kw>
<status status="PASS" starttime="20230923 09:57:13.360" endtime="20230923 09:57:13.428"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 09:57:13.433" level="INFO">Running command 'ozone sh bucket list 82376-target 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 09:57:19.482" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 09:57:19.482" level="INFO">${output} = [ {
  "volumeName" : "82376-target",
  "bucketName" : "dangling-link",
  "sourceVolume" : "82376-source",
  "sourceBucket" : "no-such-bucket",
  "creationTime" : "2023-09-23T09:55:59.732Z",
  "modific...</msg>
<status status="PASS" starttime="20230923 09:57:13.430" endtime="20230923 09:57:19.482"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 09:57:19.483" level="INFO">[ {
  "volumeName" : "82376-target",
  "bucketName" : "dangling-link",
  "sourceVolume" : "82376-source",
  "sourceBucket" : "no-such-bucket",
  "creationTime" : "2023-09-23T09:55:59.732Z",
  "modificationTime" : "2023-09-23T09:55:59.732Z",
  "owner" : "testuser",
  "link" : true
}, {
  "volumeName" : "82376-target",
  "bucketName" : "link-to-unreadable-bucket",
  "sourceVolume" : "82376-source",
  "sourceBucket" : "unreadable-bucket",
  "creationTime" : "2023-09-23T09:55:24.547Z",
  "modificationTime" : "2023-09-23T09:55:24.547Z",
  "owner" : "testuser",
  "link" : true
}, {
  "volumeName" : "82376-target",
  "bucketName" : "link1",
  "sourceVolume" : "82376-source",
  "sourceBucket" : "bucket1",
  "creationTime" : "2023-09-23T09:56:10.871Z",
  "modificationTime" : "2023-09-23T09:56:10.871Z",
  "owner" : "testuser",
  "link" : true
}, {
  "volumeName" : "82376-target",
  "bucketName" : "readable-link",
  "sourceVolume" : "82376-source",
  "sourceBucket" : "readable-bucket",
  "creationTime" : "2023-09-23T09:55:36.175Z",
  "modificationTime" : "2023-09-23T09:55:36.175Z",
  "owner" : "testuser",
  "link" : true
}, {
  "volumeName" : "82376-target",
  "bucketName" : "readable-link2",
  "sourceVolume" : "82376-source",
  "sourceBucket" : "readable-bucket",
  "creationTime" : "2023-09-23T09:55:41.959Z",
  "modificationTime" : "2023-09-23T09:55:41.959Z",
  "owner" : "testuser",
  "link" : true
} ]</msg>
<status status="PASS" starttime="20230923 09:57:19.483" endtime="20230923 09:57:19.484"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 09:57:19.484" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 09:57:19.484" endtime="20230923 09:57:19.484"/>
</kw>
<status status="PASS" starttime="20230923 09:57:13.430" endtime="20230923 09:57:19.485"/>
</kw>
<msg timestamp="20230923 09:57:19.485" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 09:57:13.429" endtime="20230923 09:57:19.485"/>
</kw>
<msg timestamp="20230923 09:57:19.485" level="INFO">${result} = [ {
  "volumeName" : "82376-target",
  "bucketName" : "dangling-link",
  "sourceVolume" : "82376-source",
  "sourceBucket" : "no-such-bucket",
  "creationTime" : "2023-09-23T09:55:59.732Z",
  "modific...</msg>
<status status="PASS" starttime="20230923 09:57:13.429" endtime="20230923 09:57:19.485"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>link1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 09:57:19.485" endtime="20230923 09:57:19.486"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>dangling-link</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 09:57:19.486" endtime="20230923 09:57:19.486"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20230923 09:57:13.359" endtime="20230923 09:57:19.486"/>
</test>
<test id="s1-s4-s3-t7" name="Bucket info shows source" line="130">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 09:57:19.493" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 09:57:19.497" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 09:57:19.498" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230923 09:57:19.491" endtime="20230923 09:57:19.498"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 09:57:19.499" level="INFO">scm</msg>
<status status="PASS" starttime="20230923 09:57:19.498" endtime="20230923 09:57:19.499"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 09:57:19.500" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 09:57:19.499" endtime="20230923 09:57:19.500"/>
</kw>
<status status="PASS" starttime="20230923 09:57:19.490" endtime="20230923 09:57:19.500"/>
</kw>
<msg timestamp="20230923 09:57:19.500" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 09:57:19.490" endtime="20230923 09:57:19.501"/>
</kw>
<msg timestamp="20230923 09:57:19.501" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230923 09:57:19.490" endtime="20230923 09:57:19.501"/>
</kw>
<msg timestamp="20230923 09:57:19.501" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230923 09:57:19.489" endtime="20230923 09:57:19.501"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230923 09:57:19.502" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230923 09:57:19.501" endtime="20230923 09:57:19.502"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 09:57:19.507" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 09:57:19.525" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 09:57:19.525" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 09:57:19.504" endtime="20230923 09:57:19.525"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 09:57:19.526" level="INFO"/>
<status status="PASS" starttime="20230923 09:57:19.525" endtime="20230923 09:57:19.526"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 09:57:19.526" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 09:57:19.526" endtime="20230923 09:57:19.527"/>
</kw>
<status status="PASS" starttime="20230923 09:57:19.504" endtime="20230923 09:57:19.527"/>
</kw>
<msg timestamp="20230923 09:57:19.527" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 09:57:19.503" endtime="20230923 09:57:19.527"/>
</kw>
<status status="PASS" starttime="20230923 09:57:19.503" endtime="20230923 09:57:19.527"/>
</kw>
<status status="PASS" starttime="20230923 09:57:19.502" endtime="20230923 09:57:19.527"/>
</kw>
<status status="PASS" starttime="20230923 09:57:19.489" endtime="20230923 09:57:19.527"/>
</kw>
<status status="PASS" starttime="20230923 09:57:19.488" endtime="20230923 09:57:19.527"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 09:57:19.531" level="INFO">Running command 'ozone sh bucket info 82376-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 09:57:25.647" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 09:57:25.647" level="INFO">${output} = {
  "volumeName" : "82376-target",
  "bucketName" : "link1",
  "sourceVolume" : "82376-source",
  "sourceBucket" : "bucket1",
  "creationTime" : "2023-09-23T09:56:10.871Z",
  "modificationTime" : "202...</msg>
<status status="PASS" starttime="20230923 09:57:19.529" endtime="20230923 09:57:25.647"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 09:57:25.648" level="INFO">{
  "volumeName" : "82376-target",
  "bucketName" : "link1",
  "sourceVolume" : "82376-source",
  "sourceBucket" : "bucket1",
  "creationTime" : "2023-09-23T09:56:10.871Z",
  "modificationTime" : "2023-09-23T09:56:10.871Z",
  "owner" : "testuser",
  "link" : true
}</msg>
<status status="PASS" starttime="20230923 09:57:25.647" endtime="20230923 09:57:25.648"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 09:57:25.649" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 09:57:25.649" endtime="20230923 09:57:25.649"/>
</kw>
<status status="PASS" starttime="20230923 09:57:19.529" endtime="20230923 09:57:25.649"/>
</kw>
<msg timestamp="20230923 09:57:25.650" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 09:57:19.528" endtime="20230923 09:57:25.650"/>
</kw>
<msg timestamp="20230923 09:57:25.650" level="INFO">${result} = {
  "volumeName" : "82376-target",
  "bucketName" : "link1",
  "sourceVolume" : "82376-source",
  "sourceBucket" : "bucket1",
  "creationTime" : "2023-09-23T09:56:10.871Z",
  "modificationTime" : "202...</msg>
<status status="PASS" starttime="20230923 09:57:19.528" endtime="20230923 09:57:25.650"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${source}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 09:57:25.650" endtime="20230923 09:57:25.651"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>bucket1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 09:57:25.651" endtime="20230923 09:57:25.651"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${target}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 09:57:25.651" endtime="20230923 09:57:25.652"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>link1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 09:57:25.652" endtime="20230923 09:57:25.652"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>modificationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 09:57:25.652" endtime="20230923 09:57:25.653"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 09:57:25.653" endtime="20230923 09:57:25.653"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>metadata</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 09:57:25.654" endtime="20230923 09:57:25.654"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20230923 09:57:19.487" endtime="20230923 09:57:25.654"/>
</test>
<test id="s1-s4-s3-t8" name="Source and target bucket have different ACLs" line="140">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 09:57:25.661" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 09:57:25.666" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 09:57:25.666" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230923 09:57:25.659" endtime="20230923 09:57:25.666"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 09:57:25.667" level="INFO">scm</msg>
<status status="PASS" starttime="20230923 09:57:25.666" endtime="20230923 09:57:25.667"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 09:57:25.667" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 09:57:25.667" endtime="20230923 09:57:25.667"/>
</kw>
<status status="PASS" starttime="20230923 09:57:25.658" endtime="20230923 09:57:25.668"/>
</kw>
<msg timestamp="20230923 09:57:25.668" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 09:57:25.658" endtime="20230923 09:57:25.668"/>
</kw>
<msg timestamp="20230923 09:57:25.668" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230923 09:57:25.658" endtime="20230923 09:57:25.668"/>
</kw>
<msg timestamp="20230923 09:57:25.668" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230923 09:57:25.657" endtime="20230923 09:57:25.668"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230923 09:57:25.669" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230923 09:57:25.669" endtime="20230923 09:57:25.669"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 09:57:25.674" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 09:57:25.694" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 09:57:25.694" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 09:57:25.672" endtime="20230923 09:57:25.694"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 09:57:25.695" level="INFO"/>
<status status="PASS" starttime="20230923 09:57:25.695" endtime="20230923 09:57:25.695"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 09:57:25.696" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 09:57:25.696" endtime="20230923 09:57:25.696"/>
</kw>
<status status="PASS" starttime="20230923 09:57:25.671" endtime="20230923 09:57:25.696"/>
</kw>
<msg timestamp="20230923 09:57:25.696" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 09:57:25.671" endtime="20230923 09:57:25.697"/>
</kw>
<status status="PASS" starttime="20230923 09:57:25.670" endtime="20230923 09:57:25.697"/>
</kw>
<status status="PASS" starttime="20230923 09:57:25.669" endtime="20230923 09:57:25.697"/>
</kw>
<status status="PASS" starttime="20230923 09:57:25.657" endtime="20230923 09:57:25.697"/>
</kw>
<status status="PASS" starttime="20230923 09:57:25.656" endtime="20230923 09:57:25.697"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl user:user1:rwxy ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 09:57:25.701" level="INFO">Running command 'ozone sh bucket addacl --acl user:user1:rwxy 82376-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 09:57:31.227" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 09:57:31.227" level="INFO">${output} = ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20230923 09:57:25.699" endtime="20230923 09:57:31.227"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 09:57:31.229" level="INFO">ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20230923 09:57:31.228" endtime="20230923 09:57:31.229"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 09:57:31.229" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 09:57:31.229" endtime="20230923 09:57:31.229"/>
</kw>
<status status="PASS" starttime="20230923 09:57:25.698" endtime="20230923 09:57:31.230"/>
</kw>
<msg timestamp="20230923 09:57:31.230" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 09:57:25.698" endtime="20230923 09:57:31.230"/>
</kw>
<status status="PASS" starttime="20230923 09:57:25.697" endtime="20230923 09:57:31.230"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>${EMPTY}</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 09:57:31.236" level="INFO">Running command 'ozone sh bucket getacl 82376-target/link1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 09:57:37.306" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 09:57:37.306" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 09:57:31.234" endtime="20230923 09:57:37.306"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 09:57:37.308" level="INFO"/>
<status status="PASS" starttime="20230923 09:57:37.307" endtime="20230923 09:57:37.308"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 09:57:37.309" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 09:57:37.308" endtime="20230923 09:57:37.309"/>
</kw>
<status status="PASS" starttime="20230923 09:57:31.233" endtime="20230923 09:57:37.309"/>
</kw>
<msg timestamp="20230923 09:57:37.309" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 09:57:31.233" endtime="20230923 09:57:37.309"/>
</kw>
<msg timestamp="20230923 09:57:37.309" level="INFO">${actual_acls} = </msg>
<status status="PASS" starttime="20230923 09:57:31.232" endtime="20230923 09:57:37.309"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230923 09:57:37.310" endtime="20230923 09:57:37.310"/>
</kw>
<status status="PASS" starttime="20230923 09:57:31.230" endtime="20230923 09:57:37.310"/>
</kw>
<kw name="Verify Bucket ACL">
<arg>--source=false</arg>
<arg>${target}/link1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>${EMPTY}</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh bucket getacl ${source_option} ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 09:57:37.317" level="INFO">Running command 'ozone sh bucket getacl --source=false 82376-target/link1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 09:57:43.252" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 09:57:43.252" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 09:57:37.314" endtime="20230923 09:57:43.252"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 09:57:43.254" level="INFO"/>
<status status="PASS" starttime="20230923 09:57:43.253" endtime="20230923 09:57:43.254"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 09:57:43.255" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 09:57:43.254" endtime="20230923 09:57:43.255"/>
</kw>
<status status="PASS" starttime="20230923 09:57:37.314" endtime="20230923 09:57:43.255"/>
</kw>
<msg timestamp="20230923 09:57:43.255" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 09:57:37.313" endtime="20230923 09:57:43.255"/>
</kw>
<msg timestamp="20230923 09:57:43.256" level="INFO">${actual_acls} = </msg>
<status status="PASS" starttime="20230923 09:57:37.312" endtime="20230923 09:57:43.256"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230923 09:57:43.256" endtime="20230923 09:57:43.256"/>
</kw>
<status status="PASS" starttime="20230923 09:57:37.311" endtime="20230923 09:57:43.256"/>
</kw>
<kw name="Verify Bucket ACL">
<arg>--source</arg>
<arg>${target}/link1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE READ_ACL WRITE_ACL</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh bucket getacl ${source_option} ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 09:57:43.262" level="INFO">Running command 'ozone sh bucket getacl --source 82376-target/link1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 09:57:49.152" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 09:57:49.152" level="INFO">${output} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20230923 09:57:43.260" endtime="20230923 09:57:49.152"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 09:57:49.154" level="INFO">READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20230923 09:57:49.153" endtime="20230923 09:57:49.154"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 09:57:49.155" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 09:57:49.154" endtime="20230923 09:57:49.155"/>
</kw>
<status status="PASS" starttime="20230923 09:57:43.259" endtime="20230923 09:57:49.155"/>
</kw>
<msg timestamp="20230923 09:57:49.155" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 09:57:43.259" endtime="20230923 09:57:49.155"/>
</kw>
<msg timestamp="20230923 09:57:49.155" level="INFO">${actual_acls} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20230923 09:57:43.258" endtime="20230923 09:57:49.155"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230923 09:57:49.156" endtime="20230923 09:57:49.156"/>
</kw>
<status status="PASS" starttime="20230923 09:57:43.257" endtime="20230923 09:57:49.156"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE READ_ACL WRITE_ACL</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 09:57:49.162" level="INFO">Running command 'ozone sh bucket getacl 82376-source/bucket1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 09:57:55.398" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 09:57:55.398" level="INFO">${output} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20230923 09:57:49.159" endtime="20230923 09:57:55.398"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 09:57:55.399" level="INFO">READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20230923 09:57:55.399" endtime="20230923 09:57:55.400"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 09:57:55.400" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 09:57:55.400" endtime="20230923 09:57:55.400"/>
</kw>
<status status="PASS" starttime="20230923 09:57:49.159" endtime="20230923 09:57:55.401"/>
</kw>
<msg timestamp="20230923 09:57:55.401" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 09:57:49.158" endtime="20230923 09:57:55.401"/>
</kw>
<msg timestamp="20230923 09:57:55.401" level="INFO">${actual_acls} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20230923 09:57:49.157" endtime="20230923 09:57:55.401"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230923 09:57:55.401" endtime="20230923 09:57:55.402"/>
</kw>
<status status="PASS" starttime="20230923 09:57:49.157" endtime="20230923 09:57:55.402"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket removeacl --acl user:user1:y ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 09:57:55.406" level="INFO">Running command 'ozone sh bucket removeacl --acl user:user1:y 82376-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 09:58:00.925" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 09:58:00.925" level="INFO">${output} = ACL user:user1:y[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20230923 09:57:55.404" endtime="20230923 09:58:00.925"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 09:58:00.927" level="INFO">ACL user:user1:y[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20230923 09:58:00.926" endtime="20230923 09:58:00.927"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 09:58:00.928" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 09:58:00.927" endtime="20230923 09:58:00.928"/>
</kw>
<status status="PASS" starttime="20230923 09:57:55.403" endtime="20230923 09:58:00.928"/>
</kw>
<msg timestamp="20230923 09:58:00.928" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 09:57:55.403" endtime="20230923 09:58:00.928"/>
</kw>
<status status="PASS" starttime="20230923 09:57:55.402" endtime="20230923 09:58:00.928"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>${EMPTY}</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 09:58:00.935" level="INFO">Running command 'ozone sh bucket getacl 82376-target/link1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 09:58:07.176" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 09:58:07.176" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 09:58:00.932" endtime="20230923 09:58:07.176"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 09:58:07.177" level="INFO"/>
<status status="PASS" starttime="20230923 09:58:07.177" endtime="20230923 09:58:07.178"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 09:58:07.178" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 09:58:07.178" endtime="20230923 09:58:07.178"/>
</kw>
<status status="PASS" starttime="20230923 09:58:00.931" endtime="20230923 09:58:07.179"/>
</kw>
<msg timestamp="20230923 09:58:07.179" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 09:58:00.931" endtime="20230923 09:58:07.179"/>
</kw>
<msg timestamp="20230923 09:58:07.179" level="INFO">${actual_acls} = </msg>
<status status="PASS" starttime="20230923 09:58:00.930" endtime="20230923 09:58:07.179"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230923 09:58:07.179" endtime="20230923 09:58:07.180"/>
</kw>
<status status="PASS" starttime="20230923 09:58:00.929" endtime="20230923 09:58:07.180"/>
</kw>
<kw name="Verify Bucket ACL">
<arg>--source</arg>
<arg>${target}/link1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE READ_ACL</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh bucket getacl ${source_option} ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 09:58:07.185" level="INFO">Running command 'ozone sh bucket getacl --source 82376-target/link1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 09:58:12.639" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 09:58:12.639" level="INFO">${output} = READ WRITE READ_ACL</msg>
<status status="PASS" starttime="20230923 09:58:07.183" endtime="20230923 09:58:12.639"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 09:58:12.640" level="INFO">READ WRITE READ_ACL</msg>
<status status="PASS" starttime="20230923 09:58:12.639" endtime="20230923 09:58:12.641"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 09:58:12.641" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 09:58:12.641" endtime="20230923 09:58:12.641"/>
</kw>
<status status="PASS" starttime="20230923 09:58:07.182" endtime="20230923 09:58:12.642"/>
</kw>
<msg timestamp="20230923 09:58:12.642" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 09:58:07.182" endtime="20230923 09:58:12.642"/>
</kw>
<msg timestamp="20230923 09:58:12.642" level="INFO">${actual_acls} = READ WRITE READ_ACL</msg>
<status status="PASS" starttime="20230923 09:58:07.181" endtime="20230923 09:58:12.642"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230923 09:58:12.642" endtime="20230923 09:58:12.643"/>
</kw>
<status status="PASS" starttime="20230923 09:58:07.180" endtime="20230923 09:58:12.643"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket setacl --acl user:user1:rw ${source}/bucket1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 09:58:12.647" level="INFO">Running command 'ozone sh bucket setacl --acl user:user1:rw 82376-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 09:58:18.502" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 09:58:18.503" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20230923 09:58:12.645" endtime="20230923 09:58:18.503"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 09:58:18.504" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20230923 09:58:18.503" endtime="20230923 09:58:18.504"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 09:58:18.505" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 09:58:18.504" endtime="20230923 09:58:18.505"/>
</kw>
<status status="PASS" starttime="20230923 09:58:12.644" endtime="20230923 09:58:18.505"/>
</kw>
<msg timestamp="20230923 09:58:18.506" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 09:58:12.644" endtime="20230923 09:58:18.506"/>
</kw>
<status status="PASS" starttime="20230923 09:58:12.643" endtime="20230923 09:58:18.506"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>${EMPTY}</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 09:58:18.512" level="INFO">Running command 'ozone sh bucket getacl 82376-target/link1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 09:58:24.682" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 09:58:24.682" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 09:58:18.509" endtime="20230923 09:58:24.682"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 09:58:24.684" level="INFO"/>
<status status="PASS" starttime="20230923 09:58:24.683" endtime="20230923 09:58:24.685"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 09:58:24.685" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 09:58:24.685" endtime="20230923 09:58:24.686"/>
</kw>
<status status="PASS" starttime="20230923 09:58:18.509" endtime="20230923 09:58:24.686"/>
</kw>
<msg timestamp="20230923 09:58:24.686" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 09:58:18.508" endtime="20230923 09:58:24.686"/>
</kw>
<msg timestamp="20230923 09:58:24.686" level="INFO">${actual_acls} = </msg>
<status status="PASS" starttime="20230923 09:58:18.508" endtime="20230923 09:58:24.686"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230923 09:58:24.687" endtime="20230923 09:58:24.688"/>
</kw>
<status status="PASS" starttime="20230923 09:58:18.506" endtime="20230923 09:58:24.689"/>
</kw>
<kw name="Verify Bucket ACL">
<arg>--source</arg>
<arg>${target}/link1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh bucket getacl ${source_option} ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 09:58:24.698" level="INFO">Running command 'ozone sh bucket getacl --source 82376-target/link1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 09:58:30.395" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 09:58:30.395" level="INFO">${output} = READ WRITE</msg>
<status status="PASS" starttime="20230923 09:58:24.693" endtime="20230923 09:58:30.395"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 09:58:30.397" level="INFO">READ WRITE</msg>
<status status="PASS" starttime="20230923 09:58:30.396" endtime="20230923 09:58:30.397"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 09:58:30.398" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 09:58:30.397" endtime="20230923 09:58:30.398"/>
</kw>
<status status="PASS" starttime="20230923 09:58:24.691" endtime="20230923 09:58:30.398"/>
</kw>
<msg timestamp="20230923 09:58:30.398" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 09:58:24.691" endtime="20230923 09:58:30.398"/>
</kw>
<msg timestamp="20230923 09:58:30.398" level="INFO">${actual_acls} = READ WRITE</msg>
<status status="PASS" starttime="20230923 09:58:24.690" endtime="20230923 09:58:30.398"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230923 09:58:30.399" endtime="20230923 09:58:30.399"/>
</kw>
<status status="PASS" starttime="20230923 09:58:24.689" endtime="20230923 09:58:30.399"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl group:group2:r ${source}/bucket1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 09:58:30.404" level="INFO">Running command 'ozone sh bucket addacl --acl group:group2:r 82376-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 09:58:35.952" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 09:58:35.952" level="INFO">${output} = ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20230923 09:58:30.401" endtime="20230923 09:58:35.952"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 09:58:35.953" level="INFO">ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20230923 09:58:35.952" endtime="20230923 09:58:35.953"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 09:58:35.954" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 09:58:35.954" endtime="20230923 09:58:35.954"/>
</kw>
<status status="PASS" starttime="20230923 09:58:30.401" endtime="20230923 09:58:35.954"/>
</kw>
<msg timestamp="20230923 09:58:35.954" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 09:58:30.400" endtime="20230923 09:58:35.955"/>
</kw>
<status status="PASS" starttime="20230923 09:58:30.399" endtime="20230923 09:58:35.955"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>${EMPTY}</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 09:58:35.961" level="INFO">Running command 'ozone sh bucket getacl 82376-target/link1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 09:58:41.572" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 09:58:41.573" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 09:58:35.958" endtime="20230923 09:58:41.573"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 09:58:41.574" level="INFO"/>
<status status="PASS" starttime="20230923 09:58:41.573" endtime="20230923 09:58:41.574"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 09:58:41.575" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 09:58:41.574" endtime="20230923 09:58:41.575"/>
</kw>
<status status="PASS" starttime="20230923 09:58:35.957" endtime="20230923 09:58:41.575"/>
</kw>
<msg timestamp="20230923 09:58:41.575" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 09:58:35.957" endtime="20230923 09:58:41.575"/>
</kw>
<msg timestamp="20230923 09:58:41.576" level="INFO">${actual_acls} = </msg>
<status status="PASS" starttime="20230923 09:58:35.956" endtime="20230923 09:58:41.576"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230923 09:58:41.576" endtime="20230923 09:58:41.576"/>
</kw>
<status status="PASS" starttime="20230923 09:58:35.955" endtime="20230923 09:58:41.577"/>
</kw>
<kw name="Verify Bucket ACL">
<arg>--source</arg>
<arg>${target}/link1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>READ</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh bucket getacl ${source_option} ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 09:58:41.582" level="INFO">Running command 'ozone sh bucket getacl --source 82376-target/link1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 09:58:47.644" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 09:58:47.645" level="INFO">${output} = READ</msg>
<status status="PASS" starttime="20230923 09:58:41.579" endtime="20230923 09:58:47.645"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 09:58:47.646" level="INFO">READ</msg>
<status status="PASS" starttime="20230923 09:58:47.645" endtime="20230923 09:58:47.646"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 09:58:47.647" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 09:58:47.647" endtime="20230923 09:58:47.647"/>
</kw>
<status status="PASS" starttime="20230923 09:58:41.579" endtime="20230923 09:58:47.648"/>
</kw>
<msg timestamp="20230923 09:58:47.648" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 09:58:41.578" endtime="20230923 09:58:47.648"/>
</kw>
<msg timestamp="20230923 09:58:47.648" level="INFO">${actual_acls} = READ</msg>
<status status="PASS" starttime="20230923 09:58:41.578" endtime="20230923 09:58:47.648"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230923 09:58:47.648" endtime="20230923 09:58:47.649"/>
</kw>
<status status="PASS" starttime="20230923 09:58:41.577" endtime="20230923 09:58:47.649"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20230923 09:57:25.655" endtime="20230923 09:58:47.649"/>
</test>
<test id="s1-s4-s3-t9" name="Source and target key have same ACLs" line="159">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 09:58:47.660" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 09:58:47.664" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 09:58:47.664" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230923 09:58:47.657" endtime="20230923 09:58:47.664"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 09:58:47.666" level="INFO">scm</msg>
<status status="PASS" starttime="20230923 09:58:47.665" endtime="20230923 09:58:47.666"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 09:58:47.666" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 09:58:47.666" endtime="20230923 09:58:47.667"/>
</kw>
<status status="PASS" starttime="20230923 09:58:47.657" endtime="20230923 09:58:47.667"/>
</kw>
<msg timestamp="20230923 09:58:47.667" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 09:58:47.657" endtime="20230923 09:58:47.667"/>
</kw>
<msg timestamp="20230923 09:58:47.667" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230923 09:58:47.656" endtime="20230923 09:58:47.667"/>
</kw>
<msg timestamp="20230923 09:58:47.668" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230923 09:58:47.656" endtime="20230923 09:58:47.668"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230923 09:58:47.668" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230923 09:58:47.668" endtime="20230923 09:58:47.668"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 09:58:47.673" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 09:58:47.702" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 09:58:47.702" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 09:58:47.671" endtime="20230923 09:58:47.702"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 09:58:47.703" level="INFO"/>
<status status="PASS" starttime="20230923 09:58:47.703" endtime="20230923 09:58:47.703"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 09:58:47.704" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 09:58:47.704" endtime="20230923 09:58:47.704"/>
</kw>
<status status="PASS" starttime="20230923 09:58:47.670" endtime="20230923 09:58:47.704"/>
</kw>
<msg timestamp="20230923 09:58:47.705" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 09:58:47.670" endtime="20230923 09:58:47.705"/>
</kw>
<status status="PASS" starttime="20230923 09:58:47.669" endtime="20230923 09:58:47.705"/>
</kw>
<status status="PASS" starttime="20230923 09:58:47.669" endtime="20230923 09:58:47.705"/>
</kw>
<status status="PASS" starttime="20230923 09:58:47.654" endtime="20230923 09:58:47.705"/>
</kw>
<status status="PASS" starttime="20230923 09:58:47.653" endtime="20230923 09:58:47.705"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key addacl --acl user:user1:rwxy ${source}/bucket1/key1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 09:58:47.709" level="INFO">Running command 'ozone sh key addacl --acl user:user1:rwxy 82376-source/bucket1/key1 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 09:58:53.501" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 09:58:53.501" level="INFO">${output} = ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20230923 09:58:47.707" endtime="20230923 09:58:53.502"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 09:58:53.503" level="INFO">ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20230923 09:58:53.502" endtime="20230923 09:58:53.503"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 09:58:53.504" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 09:58:53.503" endtime="20230923 09:58:53.504"/>
</kw>
<status status="PASS" starttime="20230923 09:58:47.706" endtime="20230923 09:58:53.504"/>
</kw>
<msg timestamp="20230923 09:58:53.504" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 09:58:47.706" endtime="20230923 09:58:53.505"/>
</kw>
<status status="PASS" starttime="20230923 09:58:47.705" endtime="20230923 09:58:53.505"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>key</arg>
<arg>${target}/link1/key1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE READ_ACL WRITE_ACL</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 09:58:53.511" level="INFO">Running command 'ozone sh key getacl 82376-target/link1/key1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 09:58:59.537" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 09:58:59.538" level="INFO">${output} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20230923 09:58:53.507" endtime="20230923 09:58:59.538"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 09:58:59.539" level="INFO">READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20230923 09:58:59.538" endtime="20230923 09:58:59.539"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 09:58:59.540" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 09:58:59.539" endtime="20230923 09:58:59.540"/>
</kw>
<status status="PASS" starttime="20230923 09:58:53.507" endtime="20230923 09:58:59.540"/>
</kw>
<msg timestamp="20230923 09:58:59.540" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 09:58:53.507" endtime="20230923 09:58:59.541"/>
</kw>
<msg timestamp="20230923 09:58:59.541" level="INFO">${actual_acls} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20230923 09:58:53.506" endtime="20230923 09:58:59.541"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230923 09:58:59.541" endtime="20230923 09:58:59.541"/>
</kw>
<status status="PASS" starttime="20230923 09:58:53.505" endtime="20230923 09:58:59.541"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>key</arg>
<arg>${source}/bucket1/key1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE READ_ACL WRITE_ACL</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 09:58:59.547" level="INFO">Running command 'ozone sh key getacl 82376-source/bucket1/key1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 09:59:05.718" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 09:59:05.718" level="INFO">${output} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20230923 09:58:59.544" endtime="20230923 09:59:05.718"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 09:59:05.720" level="INFO">READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20230923 09:59:05.719" endtime="20230923 09:59:05.720"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 09:59:05.721" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 09:59:05.720" endtime="20230923 09:59:05.721"/>
</kw>
<status status="PASS" starttime="20230923 09:58:59.544" endtime="20230923 09:59:05.721"/>
</kw>
<msg timestamp="20230923 09:59:05.721" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 09:58:59.543" endtime="20230923 09:59:05.721"/>
</kw>
<msg timestamp="20230923 09:59:05.722" level="INFO">${actual_acls} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20230923 09:58:59.542" endtime="20230923 09:59:05.722"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230923 09:59:05.722" endtime="20230923 09:59:05.722"/>
</kw>
<status status="PASS" starttime="20230923 09:58:59.542" endtime="20230923 09:59:05.723"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key removeacl --acl user:user1:y ${target}/link1/key1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 09:59:05.727" level="INFO">Running command 'ozone sh key removeacl --acl user:user1:y 82376-target/link1/key1 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 09:59:11.019" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 09:59:11.020" level="INFO">${output} = ACL user:user1:y[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20230923 09:59:05.724" endtime="20230923 09:59:11.020"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 09:59:11.021" level="INFO">ACL user:user1:y[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20230923 09:59:11.020" endtime="20230923 09:59:11.021"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 09:59:11.022" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 09:59:11.021" endtime="20230923 09:59:11.022"/>
</kw>
<status status="PASS" starttime="20230923 09:59:05.724" endtime="20230923 09:59:11.023"/>
</kw>
<msg timestamp="20230923 09:59:11.023" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 09:59:05.723" endtime="20230923 09:59:11.023"/>
</kw>
<status status="PASS" starttime="20230923 09:59:05.723" endtime="20230923 09:59:11.023"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>key</arg>
<arg>${target}/link1/key1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE READ_ACL</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 09:59:11.029" level="INFO">Running command 'ozone sh key getacl 82376-target/link1/key1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 09:59:16.655" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 09:59:16.655" level="INFO">${output} = READ WRITE READ_ACL</msg>
<status status="PASS" starttime="20230923 09:59:11.026" endtime="20230923 09:59:16.655"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 09:59:16.657" level="INFO">READ WRITE READ_ACL</msg>
<status status="PASS" starttime="20230923 09:59:16.656" endtime="20230923 09:59:16.657"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 09:59:16.658" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 09:59:16.657" endtime="20230923 09:59:16.658"/>
</kw>
<status status="PASS" starttime="20230923 09:59:11.025" endtime="20230923 09:59:16.658"/>
</kw>
<msg timestamp="20230923 09:59:16.658" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 09:59:11.025" endtime="20230923 09:59:16.658"/>
</kw>
<msg timestamp="20230923 09:59:16.658" level="INFO">${actual_acls} = READ WRITE READ_ACL</msg>
<status status="PASS" starttime="20230923 09:59:11.024" endtime="20230923 09:59:16.659"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230923 09:59:16.659" endtime="20230923 09:59:16.659"/>
</kw>
<status status="PASS" starttime="20230923 09:59:11.023" endtime="20230923 09:59:16.659"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>key</arg>
<arg>${source}/bucket1/key1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE READ_ACL</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 09:59:16.665" level="INFO">Running command 'ozone sh key getacl 82376-source/bucket1/key1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 09:59:22.473" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 09:59:22.473" level="INFO">${output} = READ WRITE READ_ACL</msg>
<status status="PASS" starttime="20230923 09:59:16.663" endtime="20230923 09:59:22.473"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 09:59:22.474" level="INFO">READ WRITE READ_ACL</msg>
<status status="PASS" starttime="20230923 09:59:22.473" endtime="20230923 09:59:22.474"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 09:59:22.475" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 09:59:22.474" endtime="20230923 09:59:22.475"/>
</kw>
<status status="PASS" starttime="20230923 09:59:16.662" endtime="20230923 09:59:22.475"/>
</kw>
<msg timestamp="20230923 09:59:22.475" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 09:59:16.661" endtime="20230923 09:59:22.475"/>
</kw>
<msg timestamp="20230923 09:59:22.476" level="INFO">${actual_acls} = READ WRITE READ_ACL</msg>
<status status="PASS" starttime="20230923 09:59:16.661" endtime="20230923 09:59:22.476"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230923 09:59:22.476" endtime="20230923 09:59:22.476"/>
</kw>
<status status="PASS" starttime="20230923 09:59:16.660" endtime="20230923 09:59:22.476"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key setacl --acl user:user1:rw ${source}/bucket1/key1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 09:59:22.481" level="INFO">Running command 'ozone sh key setacl --acl user:user1:rw 82376-source/bucket1/key1 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 09:59:28.213" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 09:59:28.214" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20230923 09:59:22.479" endtime="20230923 09:59:28.214"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 09:59:28.215" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20230923 09:59:28.214" endtime="20230923 09:59:28.215"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 09:59:28.216" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 09:59:28.216" endtime="20230923 09:59:28.216"/>
</kw>
<status status="PASS" starttime="20230923 09:59:22.478" endtime="20230923 09:59:28.217"/>
</kw>
<msg timestamp="20230923 09:59:28.217" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 09:59:22.478" endtime="20230923 09:59:28.217"/>
</kw>
<status status="PASS" starttime="20230923 09:59:22.477" endtime="20230923 09:59:28.217"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>key</arg>
<arg>${target}/link1/key1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 09:59:28.222" level="INFO">Running command 'ozone sh key getacl 82376-target/link1/key1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 09:59:34.221" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 09:59:34.221" level="INFO">${output} = READ WRITE</msg>
<status status="PASS" starttime="20230923 09:59:28.219" endtime="20230923 09:59:34.221"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 09:59:34.223" level="INFO">READ WRITE</msg>
<status status="PASS" starttime="20230923 09:59:34.222" endtime="20230923 09:59:34.223"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 09:59:34.224" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 09:59:34.223" endtime="20230923 09:59:34.224"/>
</kw>
<status status="PASS" starttime="20230923 09:59:28.219" endtime="20230923 09:59:34.224"/>
</kw>
<msg timestamp="20230923 09:59:34.224" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 09:59:28.219" endtime="20230923 09:59:34.224"/>
</kw>
<msg timestamp="20230923 09:59:34.225" level="INFO">${actual_acls} = READ WRITE</msg>
<status status="PASS" starttime="20230923 09:59:28.218" endtime="20230923 09:59:34.225"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230923 09:59:34.225" endtime="20230923 09:59:34.226"/>
</kw>
<status status="PASS" starttime="20230923 09:59:28.217" endtime="20230923 09:59:34.226"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>key</arg>
<arg>${source}/bucket1/key1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 09:59:34.232" level="INFO">Running command 'ozone sh key getacl 82376-source/bucket1/key1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 09:59:39.814" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 09:59:39.814" level="INFO">${output} = READ WRITE</msg>
<status status="PASS" starttime="20230923 09:59:34.229" endtime="20230923 09:59:39.814"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 09:59:39.815" level="INFO">READ WRITE</msg>
<status status="PASS" starttime="20230923 09:59:39.815" endtime="20230923 09:59:39.816"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 09:59:39.816" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 09:59:39.816" endtime="20230923 09:59:39.816"/>
</kw>
<status status="PASS" starttime="20230923 09:59:34.229" endtime="20230923 09:59:39.817"/>
</kw>
<msg timestamp="20230923 09:59:39.817" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 09:59:34.228" endtime="20230923 09:59:39.817"/>
</kw>
<msg timestamp="20230923 09:59:39.817" level="INFO">${actual_acls} = READ WRITE</msg>
<status status="PASS" starttime="20230923 09:59:34.227" endtime="20230923 09:59:39.817"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230923 09:59:39.817" endtime="20230923 09:59:39.818"/>
</kw>
<status status="PASS" starttime="20230923 09:59:34.226" endtime="20230923 09:59:39.818"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key addacl --acl group:group2:r ${source}/bucket1/key1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 09:59:39.823" level="INFO">Running command 'ozone sh key addacl --acl group:group2:r 82376-source/bucket1/key1 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 09:59:45.473" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 09:59:45.473" level="INFO">${output} = ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20230923 09:59:39.820" endtime="20230923 09:59:45.473"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 09:59:45.474" level="INFO">ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20230923 09:59:45.473" endtime="20230923 09:59:45.474"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 09:59:45.475" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 09:59:45.474" endtime="20230923 09:59:45.475"/>
</kw>
<status status="PASS" starttime="20230923 09:59:39.819" endtime="20230923 09:59:45.475"/>
</kw>
<msg timestamp="20230923 09:59:45.475" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 09:59:39.819" endtime="20230923 09:59:45.475"/>
</kw>
<status status="PASS" starttime="20230923 09:59:39.818" endtime="20230923 09:59:45.476"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>key</arg>
<arg>${target}/link1/key1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>READ</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 09:59:45.481" level="INFO">Running command 'ozone sh key getacl 82376-target/link1/key1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 09:59:51.982" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 09:59:51.982" level="INFO">${output} = READ</msg>
<status status="PASS" starttime="20230923 09:59:45.478" endtime="20230923 09:59:51.982"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 09:59:51.984" level="INFO">READ</msg>
<status status="PASS" starttime="20230923 09:59:51.983" endtime="20230923 09:59:51.984"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 09:59:51.985" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 09:59:51.984" endtime="20230923 09:59:51.985"/>
</kw>
<status status="PASS" starttime="20230923 09:59:45.478" endtime="20230923 09:59:51.985"/>
</kw>
<msg timestamp="20230923 09:59:51.985" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 09:59:45.477" endtime="20230923 09:59:51.985"/>
</kw>
<msg timestamp="20230923 09:59:51.985" level="INFO">${actual_acls} = READ</msg>
<status status="PASS" starttime="20230923 09:59:45.477" endtime="20230923 09:59:51.985"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230923 09:59:51.986" endtime="20230923 09:59:51.986"/>
</kw>
<status status="PASS" starttime="20230923 09:59:45.476" endtime="20230923 09:59:51.986"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>key</arg>
<arg>${source}/bucket1/key1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>READ</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 09:59:51.992" level="INFO">Running command 'ozone sh key getacl 82376-source/bucket1/key1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 09:59:58.107" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 09:59:58.107" level="INFO">${output} = READ</msg>
<status status="PASS" starttime="20230923 09:59:51.989" endtime="20230923 09:59:58.107"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 09:59:58.108" level="INFO">READ</msg>
<status status="PASS" starttime="20230923 09:59:58.107" endtime="20230923 09:59:58.108"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 09:59:58.109" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 09:59:58.109" endtime="20230923 09:59:58.109"/>
</kw>
<status status="PASS" starttime="20230923 09:59:51.989" endtime="20230923 09:59:58.110"/>
</kw>
<msg timestamp="20230923 09:59:58.110" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 09:59:51.988" endtime="20230923 09:59:58.110"/>
</kw>
<msg timestamp="20230923 09:59:58.110" level="INFO">${actual_acls} = READ</msg>
<status status="PASS" starttime="20230923 09:59:51.987" endtime="20230923 09:59:58.110"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230923 09:59:58.110" endtime="20230923 09:59:58.111"/>
</kw>
<status status="PASS" starttime="20230923 09:59:51.987" endtime="20230923 09:59:58.111"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20230923 09:58:47.652" endtime="20230923 09:59:58.111"/>
</test>
<test id="s1-s4-s3-t10" name="Buckets and links share namespace" line="174">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 09:59:58.119" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 09:59:58.123" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 09:59:58.123" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230923 09:59:58.116" endtime="20230923 09:59:58.123"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 09:59:58.124" level="INFO">scm</msg>
<status status="PASS" starttime="20230923 09:59:58.124" endtime="20230923 09:59:58.124"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 09:59:58.125" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 09:59:58.125" endtime="20230923 09:59:58.125"/>
</kw>
<status status="PASS" starttime="20230923 09:59:58.116" endtime="20230923 09:59:58.125"/>
</kw>
<msg timestamp="20230923 09:59:58.126" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 09:59:58.115" endtime="20230923 09:59:58.126"/>
</kw>
<msg timestamp="20230923 09:59:58.126" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230923 09:59:58.115" endtime="20230923 09:59:58.126"/>
</kw>
<msg timestamp="20230923 09:59:58.126" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230923 09:59:58.114" endtime="20230923 09:59:58.126"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230923 09:59:58.127" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230923 09:59:58.126" endtime="20230923 09:59:58.127"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 09:59:58.131" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 09:59:58.150" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 09:59:58.150" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 09:59:58.129" endtime="20230923 09:59:58.150"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 09:59:58.152" level="INFO"/>
<status status="PASS" starttime="20230923 09:59:58.151" endtime="20230923 09:59:58.152"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 09:59:58.153" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 09:59:58.152" endtime="20230923 09:59:58.153"/>
</kw>
<status status="PASS" starttime="20230923 09:59:58.128" endtime="20230923 09:59:58.153"/>
</kw>
<msg timestamp="20230923 09:59:58.153" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 09:59:58.128" endtime="20230923 09:59:58.153"/>
</kw>
<status status="PASS" starttime="20230923 09:59:58.127" endtime="20230923 09:59:58.153"/>
</kw>
<status status="PASS" starttime="20230923 09:59:58.127" endtime="20230923 09:59:58.153"/>
</kw>
<status status="PASS" starttime="20230923 09:59:58.114" endtime="20230923 09:59:58.154"/>
</kw>
<status status="PASS" starttime="20230923 09:59:58.113" endtime="20230923 09:59:58.154"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/bucket2 ${target}/link2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 09:59:58.158" level="INFO">Running command 'ozone sh bucket link 82376-source/bucket2 82376-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:00:04.036" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:00:04.036" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 09:59:58.156" endtime="20230923 10:00:04.036"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:00:04.037" level="INFO"/>
<status status="PASS" starttime="20230923 10:00:04.037" endtime="20230923 10:00:04.037"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:00:04.038" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:00:04.038" endtime="20230923 10:00:04.038"/>
</kw>
<status status="PASS" starttime="20230923 09:59:58.155" endtime="20230923 10:00:04.038"/>
</kw>
<msg timestamp="20230923 10:00:04.039" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 09:59:58.155" endtime="20230923 10:00:04.039"/>
</kw>
<status status="PASS" starttime="20230923 09:59:58.154" endtime="20230923 10:00:04.039"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh bucket create ${target}/link2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:00:04.042" level="INFO">Running command 'ozone sh bucket create 82376-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:00:10.048" level="INFO">${rc} = 255</msg>
<msg timestamp="20230923 10:00:10.048" level="INFO">${output} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20230923 10:00:04.040" endtime="20230923 10:00:10.048"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:00:10.050" level="INFO">BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20230923 10:00:10.049" endtime="20230923 10:00:10.050"/>
</kw>
<msg timestamp="20230923 10:00:10.050" level="INFO">${result} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20230923 10:00:04.039" endtime="20230923 10:00:10.051"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:00:10.051" endtime="20230923 10:00:10.051"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${target}/bucket3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:00:10.056" level="INFO">Running command 'ozone sh bucket create 82376-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:00:15.876" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:00:15.876" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:00:10.053" endtime="20230923 10:00:15.876"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:00:15.878" level="INFO"/>
<status status="PASS" starttime="20230923 10:00:15.877" endtime="20230923 10:00:15.878"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:00:15.878" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:00:15.878" endtime="20230923 10:00:15.878"/>
</kw>
<status status="PASS" starttime="20230923 10:00:10.053" endtime="20230923 10:00:15.879"/>
</kw>
<msg timestamp="20230923 10:00:15.879" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:00:10.052" endtime="20230923 10:00:15.879"/>
</kw>
<status status="PASS" starttime="20230923 10:00:10.052" endtime="20230923 10:00:15.879"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/bucket3</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:00:15.883" level="INFO">Running command 'ozone sh bucket link 82376-source/bucket1 82376-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:00:21.580" level="INFO">${rc} = 255</msg>
<msg timestamp="20230923 10:00:21.580" level="INFO">${output} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20230923 10:00:15.880" endtime="20230923 10:00:21.580"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:00:21.582" level="INFO">BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20230923 10:00:21.581" endtime="20230923 10:00:21.582"/>
</kw>
<msg timestamp="20230923 10:00:21.582" level="INFO">${result} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20230923 10:00:15.879" endtime="20230923 10:00:21.582"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:00:21.582" endtime="20230923 10:00:21.583"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20230923 09:59:58.112" endtime="20230923 10:00:21.583"/>
</test>
<test id="s1-s4-s3-t11" name="Can follow link with read access" line="183">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:00:21.591" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:00:21.595" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:00:21.595" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230923 10:00:21.589" endtime="20230923 10:00:21.595"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:00:21.597" level="INFO">scm</msg>
<status status="PASS" starttime="20230923 10:00:21.596" endtime="20230923 10:00:21.597"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:00:21.597" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:00:21.597" endtime="20230923 10:00:21.597"/>
</kw>
<status status="PASS" starttime="20230923 10:00:21.588" endtime="20230923 10:00:21.598"/>
</kw>
<msg timestamp="20230923 10:00:21.598" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:00:21.588" endtime="20230923 10:00:21.598"/>
</kw>
<msg timestamp="20230923 10:00:21.598" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230923 10:00:21.587" endtime="20230923 10:00:21.598"/>
</kw>
<msg timestamp="20230923 10:00:21.598" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230923 10:00:21.586" endtime="20230923 10:00:21.598"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230923 10:00:21.599" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230923 10:00:21.599" endtime="20230923 10:00:21.599"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:00:21.604" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:00:21.622" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:00:21.622" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:00:21.602" endtime="20230923 10:00:21.622"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:00:21.623" level="INFO"/>
<status status="PASS" starttime="20230923 10:00:21.623" endtime="20230923 10:00:21.623"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:00:21.624" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:00:21.624" endtime="20230923 10:00:21.624"/>
</kw>
<status status="PASS" starttime="20230923 10:00:21.601" endtime="20230923 10:00:21.625"/>
</kw>
<msg timestamp="20230923 10:00:21.625" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:00:21.601" endtime="20230923 10:00:21.625"/>
</kw>
<status status="PASS" starttime="20230923 10:00:21.600" endtime="20230923 10:00:21.625"/>
</kw>
<status status="PASS" starttime="20230923 10:00:21.599" endtime="20230923 10:00:21.625"/>
</kw>
<status status="PASS" starttime="20230923 10:00:21.586" endtime="20230923 10:00:21.625"/>
</kw>
<status status="PASS" starttime="20230923 10:00:21.585" endtime="20230923 10:00:21.625"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Can follow link with read access</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Can follow link with read access">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:00:21.630" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:00:21.635" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:00:21.635" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:00:21.628" endtime="20230923 10:00:21.635"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:00:21.636" level="INFO"/>
<status status="PASS" starttime="20230923 10:00:21.636" endtime="20230923 10:00:21.636"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:00:21.637" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:00:21.636" endtime="20230923 10:00:21.637"/>
</kw>
<status status="PASS" starttime="20230923 10:00:21.627" endtime="20230923 10:00:21.637"/>
</kw>
<msg timestamp="20230923 10:00:21.637" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:00:21.627" endtime="20230923 10:00:21.637"/>
</kw>
<status status="PASS" starttime="20230923 10:00:21.627" endtime="20230923 10:00:21.638"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:00:21.643" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:00:21.647" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:00:21.647" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230923 10:00:21.641" endtime="20230923 10:00:21.647"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:00:21.648" level="INFO">scm</msg>
<status status="PASS" starttime="20230923 10:00:21.647" endtime="20230923 10:00:21.648"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:00:21.649" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:00:21.648" endtime="20230923 10:00:21.649"/>
</kw>
<status status="PASS" starttime="20230923 10:00:21.640" endtime="20230923 10:00:21.649"/>
</kw>
<msg timestamp="20230923 10:00:21.649" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:00:21.640" endtime="20230923 10:00:21.650"/>
</kw>
<msg timestamp="20230923 10:00:21.650" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230923 10:00:21.639" endtime="20230923 10:00:21.650"/>
</kw>
<msg timestamp="20230923 10:00:21.650" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230923 10:00:21.639" endtime="20230923 10:00:21.650"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230923 10:00:21.651" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230923 10:00:21.650" endtime="20230923 10:00:21.651"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:00:21.655" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser2.keytab testuser2/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:00:21.691" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:00:21.691" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:00:21.653" endtime="20230923 10:00:21.691"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:00:21.693" level="INFO"/>
<status status="PASS" starttime="20230923 10:00:21.692" endtime="20230923 10:00:21.693"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:00:21.693" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:00:21.693" endtime="20230923 10:00:21.693"/>
</kw>
<status status="PASS" starttime="20230923 10:00:21.653" endtime="20230923 10:00:21.694"/>
</kw>
<msg timestamp="20230923 10:00:21.694" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:00:21.652" endtime="20230923 10:00:21.694"/>
</kw>
<status status="PASS" starttime="20230923 10:00:21.652" endtime="20230923 10:00:21.694"/>
</kw>
<status status="PASS" starttime="20230923 10:00:21.651" endtime="20230923 10:00:21.694"/>
</kw>
<status status="PASS" starttime="20230923 10:00:21.638" endtime="20230923 10:00:21.694"/>
</kw>
<status status="PASS" starttime="20230923 10:00:21.638" endtime="20230923 10:00:21.694"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/readable-link</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:00:21.698" level="INFO">Running command 'ozone sh key list 82376-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:00:27.554" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:00:27.554" level="INFO">${output} = [ {
  "volumeName" : "82376-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 988,
  "creationTime" : "2023-09-23T09:55:10.657Z",
  "modificationTime" : ...</msg>
<status status="PASS" starttime="20230923 10:00:21.695" endtime="20230923 10:00:27.554"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:00:27.555" level="INFO">[ {
  "volumeName" : "82376-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 988,
  "creationTime" : "2023-09-23T09:55:10.657Z",
  "modificationTime" : "2023-09-23T09:55:12.946Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "file" : true
} ]</msg>
<status status="PASS" starttime="20230923 10:00:27.555" endtime="20230923 10:00:27.556"/>
</kw>
<msg timestamp="20230923 10:00:27.556" level="INFO">${result} = [ {
  "volumeName" : "82376-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 988,
  "creationTime" : "2023-09-23T09:55:10.657Z",
  "modificationTime" : ...</msg>
<status status="PASS" starttime="20230923 10:00:21.694" endtime="20230923 10:00:27.556"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>key-in-readable-bucket</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:00:27.557" endtime="20230923 10:00:27.557"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/readable-link2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:00:27.561" level="INFO">Running command 'ozone sh key list 82376-target/readable-link2 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:00:33.299" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:00:33.299" level="INFO">${output} = [ {
  "volumeName" : "82376-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 988,
  "creationTime" : "2023-09-23T09:55:10.657Z",
  "modificationTime" : ...</msg>
<status status="PASS" starttime="20230923 10:00:27.558" endtime="20230923 10:00:33.299"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:00:33.300" level="INFO">[ {
  "volumeName" : "82376-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 988,
  "creationTime" : "2023-09-23T09:55:10.657Z",
  "modificationTime" : "2023-09-23T09:55:12.946Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "file" : true
} ]</msg>
<status status="PASS" starttime="20230923 10:00:33.299" endtime="20230923 10:00:33.300"/>
</kw>
<msg timestamp="20230923 10:00:33.301" level="INFO">${result} = [ {
  "volumeName" : "82376-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 988,
  "creationTime" : "2023-09-23T09:55:10.657Z",
  "modificationTime" : ...</msg>
<status status="PASS" starttime="20230923 10:00:27.557" endtime="20230923 10:00:33.301"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>key-in-readable-bucket</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:00:33.301" endtime="20230923 10:00:33.301"/>
</kw>
<status status="PASS" starttime="20230923 10:00:21.626" endtime="20230923 10:00:33.302"/>
</kw>
<status status="PASS" starttime="20230923 10:00:21.626" endtime="20230923 10:00:33.302"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20230923 10:00:21.584" endtime="20230923 10:00:33.302"/>
</test>
<test id="s1-s4-s3-t12" name="Cannot follow link without read access" line="186">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:00:33.310" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:00:33.314" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:00:33.314" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230923 10:00:33.307" endtime="20230923 10:00:33.314"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:00:33.315" level="INFO">scm</msg>
<status status="PASS" starttime="20230923 10:00:33.314" endtime="20230923 10:00:33.315"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:00:33.316" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:00:33.315" endtime="20230923 10:00:33.316"/>
</kw>
<status status="PASS" starttime="20230923 10:00:33.306" endtime="20230923 10:00:33.317"/>
</kw>
<msg timestamp="20230923 10:00:33.317" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:00:33.306" endtime="20230923 10:00:33.317"/>
</kw>
<msg timestamp="20230923 10:00:33.317" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230923 10:00:33.305" endtime="20230923 10:00:33.317"/>
</kw>
<msg timestamp="20230923 10:00:33.317" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230923 10:00:33.305" endtime="20230923 10:00:33.317"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230923 10:00:33.318" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230923 10:00:33.317" endtime="20230923 10:00:33.318"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:00:33.322" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:00:33.362" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:00:33.362" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:00:33.320" endtime="20230923 10:00:33.362"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:00:33.363" level="INFO"/>
<status status="PASS" starttime="20230923 10:00:33.363" endtime="20230923 10:00:33.363"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:00:33.364" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:00:33.364" endtime="20230923 10:00:33.364"/>
</kw>
<status status="PASS" starttime="20230923 10:00:33.319" endtime="20230923 10:00:33.364"/>
</kw>
<msg timestamp="20230923 10:00:33.365" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:00:33.319" endtime="20230923 10:00:33.365"/>
</kw>
<status status="PASS" starttime="20230923 10:00:33.318" endtime="20230923 10:00:33.365"/>
</kw>
<status status="PASS" starttime="20230923 10:00:33.318" endtime="20230923 10:00:33.365"/>
</kw>
<status status="PASS" starttime="20230923 10:00:33.304" endtime="20230923 10:00:33.365"/>
</kw>
<status status="PASS" starttime="20230923 10:00:33.304" endtime="20230923 10:00:33.365"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Cannot follow link without read access</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Cannot follow link without read access">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:00:33.370" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:00:33.374" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:00:33.374" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:00:33.368" endtime="20230923 10:00:33.374"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:00:33.376" level="INFO"/>
<status status="PASS" starttime="20230923 10:00:33.375" endtime="20230923 10:00:33.376"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:00:33.376" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:00:33.376" endtime="20230923 10:00:33.377"/>
</kw>
<status status="PASS" starttime="20230923 10:00:33.367" endtime="20230923 10:00:33.377"/>
</kw>
<msg timestamp="20230923 10:00:33.377" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:00:33.367" endtime="20230923 10:00:33.377"/>
</kw>
<status status="PASS" starttime="20230923 10:00:33.366" endtime="20230923 10:00:33.377"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:00:33.383" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:00:33.387" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:00:33.387" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230923 10:00:33.381" endtime="20230923 10:00:33.387"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:00:33.388" level="INFO">scm</msg>
<status status="PASS" starttime="20230923 10:00:33.388" endtime="20230923 10:00:33.388"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:00:33.389" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:00:33.389" endtime="20230923 10:00:33.389"/>
</kw>
<status status="PASS" starttime="20230923 10:00:33.380" endtime="20230923 10:00:33.389"/>
</kw>
<msg timestamp="20230923 10:00:33.390" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:00:33.380" endtime="20230923 10:00:33.390"/>
</kw>
<msg timestamp="20230923 10:00:33.390" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230923 10:00:33.379" endtime="20230923 10:00:33.390"/>
</kw>
<msg timestamp="20230923 10:00:33.390" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230923 10:00:33.378" endtime="20230923 10:00:33.390"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230923 10:00:33.391" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230923 10:00:33.390" endtime="20230923 10:00:33.391"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:00:33.395" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser2.keytab testuser2/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:00:33.414" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:00:33.414" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:00:33.393" endtime="20230923 10:00:33.414"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:00:33.415" level="INFO"/>
<status status="PASS" starttime="20230923 10:00:33.415" endtime="20230923 10:00:33.416"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:00:33.416" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:00:33.416" endtime="20230923 10:00:33.416"/>
</kw>
<status status="PASS" starttime="20230923 10:00:33.393" endtime="20230923 10:00:33.417"/>
</kw>
<msg timestamp="20230923 10:00:33.417" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:00:33.392" endtime="20230923 10:00:33.417"/>
</kw>
<status status="PASS" starttime="20230923 10:00:33.392" endtime="20230923 10:00:33.417"/>
</kw>
<status status="PASS" starttime="20230923 10:00:33.391" endtime="20230923 10:00:33.417"/>
</kw>
<status status="PASS" starttime="20230923 10:00:33.378" endtime="20230923 10:00:33.417"/>
</kw>
<status status="PASS" starttime="20230923 10:00:33.377" endtime="20230923 10:00:33.417"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/link-to-unreadable-bucket</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:00:33.421" level="INFO">Running command 'ozone sh key list 82376-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:00:38.815" level="INFO">${rc} = 255</msg>
<msg timestamp="20230923 10:00:38.816" level="INFO">${output} = PERMISSION_DENIED User testuser2 doesn't have READ permission to access bucket Volume:82376-source Bucket:unreadable-bucket Key:</msg>
<status status="PASS" starttime="20230923 10:00:33.418" endtime="20230923 10:00:38.816"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:00:38.817" level="INFO">PERMISSION_DENIED User testuser2 doesn't have READ permission to access bucket Volume:82376-source Bucket:unreadable-bucket Key:</msg>
<status status="PASS" starttime="20230923 10:00:38.816" endtime="20230923 10:00:38.817"/>
</kw>
<msg timestamp="20230923 10:00:38.817" level="INFO">${result} = PERMISSION_DENIED User testuser2 doesn't have READ permission to access bucket Volume:82376-source Bucket:unreadable-bucket Key:</msg>
<status status="PASS" starttime="20230923 10:00:33.418" endtime="20230923 10:00:38.817"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:00:38.818" endtime="20230923 10:00:38.818"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${source}/unreadable-bucket</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:00:38.822" level="INFO">Running command 'ozone sh key list 82376-source/unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:00:44.375" level="INFO">${rc} = 255</msg>
<msg timestamp="20230923 10:00:44.375" level="INFO">${output} = PERMISSION_DENIED User testuser2 doesn't have READ permission to access bucket Volume:82376-source Bucket:unreadable-bucket </msg>
<status status="PASS" starttime="20230923 10:00:38.819" endtime="20230923 10:00:44.375"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:00:44.377" level="INFO">PERMISSION_DENIED User testuser2 doesn't have READ permission to access bucket Volume:82376-source Bucket:unreadable-bucket </msg>
<status status="PASS" starttime="20230923 10:00:44.376" endtime="20230923 10:00:44.377"/>
</kw>
<msg timestamp="20230923 10:00:44.377" level="INFO">${result} = PERMISSION_DENIED User testuser2 doesn't have READ permission to access bucket Volume:82376-source Bucket:unreadable-bucket </msg>
<status status="PASS" starttime="20230923 10:00:38.818" endtime="20230923 10:00:44.377"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:00:44.377" endtime="20230923 10:00:44.378"/>
</kw>
<status status="PASS" starttime="20230923 10:00:33.366" endtime="20230923 10:00:44.378"/>
</kw>
<status status="PASS" starttime="20230923 10:00:33.365" endtime="20230923 10:00:44.378"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20230923 10:00:33.303" endtime="20230923 10:00:44.378"/>
</test>
<test id="s1-s4-s3-t13" name="ACL verified on source and target bucket" line="189">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:00:44.386" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:00:44.390" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:00:44.390" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230923 10:00:44.383" endtime="20230923 10:00:44.390"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:00:44.391" level="INFO">scm</msg>
<status status="PASS" starttime="20230923 10:00:44.390" endtime="20230923 10:00:44.391"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:00:44.392" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:00:44.391" endtime="20230923 10:00:44.392"/>
</kw>
<status status="PASS" starttime="20230923 10:00:44.382" endtime="20230923 10:00:44.392"/>
</kw>
<msg timestamp="20230923 10:00:44.392" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:00:44.382" endtime="20230923 10:00:44.393"/>
</kw>
<msg timestamp="20230923 10:00:44.393" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230923 10:00:44.382" endtime="20230923 10:00:44.393"/>
</kw>
<msg timestamp="20230923 10:00:44.393" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230923 10:00:44.381" endtime="20230923 10:00:44.393"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230923 10:00:44.394" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230923 10:00:44.394" endtime="20230923 10:00:44.394"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:00:44.399" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:00:44.418" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:00:44.418" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:00:44.397" endtime="20230923 10:00:44.418"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:00:44.419" level="INFO"/>
<status status="PASS" starttime="20230923 10:00:44.419" endtime="20230923 10:00:44.419"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:00:44.420" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:00:44.420" endtime="20230923 10:00:44.420"/>
</kw>
<status status="PASS" starttime="20230923 10:00:44.396" endtime="20230923 10:00:44.420"/>
</kw>
<msg timestamp="20230923 10:00:44.421" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:00:44.395" endtime="20230923 10:00:44.421"/>
</kw>
<status status="PASS" starttime="20230923 10:00:44.395" endtime="20230923 10:00:44.421"/>
</kw>
<status status="PASS" starttime="20230923 10:00:44.394" endtime="20230923 10:00:44.421"/>
</kw>
<status status="PASS" starttime="20230923 10:00:44.381" endtime="20230923 10:00:44.421"/>
</kw>
<status status="PASS" starttime="20230923 10:00:44.380" endtime="20230923 10:00:44.421"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>ACL verified on source and target bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="ACL verified on source and target bucket">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:00:44.425" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:00:44.430" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:00:44.430" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:00:44.423" endtime="20230923 10:00:44.430"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:00:44.431" level="INFO"/>
<status status="PASS" starttime="20230923 10:00:44.430" endtime="20230923 10:00:44.431"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:00:44.432" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:00:44.431" endtime="20230923 10:00:44.432"/>
</kw>
<status status="PASS" starttime="20230923 10:00:44.423" endtime="20230923 10:00:44.432"/>
</kw>
<msg timestamp="20230923 10:00:44.432" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:00:44.423" endtime="20230923 10:00:44.433"/>
</kw>
<status status="PASS" starttime="20230923 10:00:44.422" endtime="20230923 10:00:44.433"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:00:44.438" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:00:44.442" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:00:44.443" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230923 10:00:44.436" endtime="20230923 10:00:44.443"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:00:44.444" level="INFO">scm</msg>
<status status="PASS" starttime="20230923 10:00:44.443" endtime="20230923 10:00:44.444"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:00:44.445" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:00:44.444" endtime="20230923 10:00:44.445"/>
</kw>
<status status="PASS" starttime="20230923 10:00:44.435" endtime="20230923 10:00:44.445"/>
</kw>
<msg timestamp="20230923 10:00:44.445" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:00:44.435" endtime="20230923 10:00:44.445"/>
</kw>
<msg timestamp="20230923 10:00:44.445" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230923 10:00:44.434" endtime="20230923 10:00:44.445"/>
</kw>
<msg timestamp="20230923 10:00:44.446" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230923 10:00:44.434" endtime="20230923 10:00:44.446"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230923 10:00:44.446" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230923 10:00:44.446" endtime="20230923 10:00:44.446"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:00:44.451" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser2.keytab testuser2/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:00:44.470" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:00:44.470" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:00:44.449" endtime="20230923 10:00:44.470"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:00:44.471" level="INFO"/>
<status status="PASS" starttime="20230923 10:00:44.470" endtime="20230923 10:00:44.471"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:00:44.472" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:00:44.471" endtime="20230923 10:00:44.472"/>
</kw>
<status status="PASS" starttime="20230923 10:00:44.448" endtime="20230923 10:00:44.472"/>
</kw>
<msg timestamp="20230923 10:00:44.472" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:00:44.448" endtime="20230923 10:00:44.472"/>
</kw>
<status status="PASS" starttime="20230923 10:00:44.447" endtime="20230923 10:00:44.473"/>
</kw>
<status status="PASS" starttime="20230923 10:00:44.446" endtime="20230923 10:00:44.473"/>
</kw>
<status status="PASS" starttime="20230923 10:00:44.433" endtime="20230923 10:00:44.473"/>
</kw>
<status status="PASS" starttime="20230923 10:00:44.433" endtime="20230923 10:00:44.473"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${target}/link-to-unreadable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:00:44.476" level="INFO">Running command 'ozone sh bucket info 82376-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:00:50.301" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:00:50.302" level="INFO">${output} = {
  "volumeName" : "82376-target",
  "bucketName" : "link-to-unreadable-bucket",
  "sourceVolume" : "82376-source",
  "sourceBucket" : "unreadable-bucket",
  "creationTime" : "2023-09-23T09:55:24.547Z...</msg>
<status status="PASS" starttime="20230923 10:00:44.474" endtime="20230923 10:00:50.302"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:00:50.303" level="INFO">{
  "volumeName" : "82376-target",
  "bucketName" : "link-to-unreadable-bucket",
  "sourceVolume" : "82376-source",
  "sourceBucket" : "unreadable-bucket",
  "creationTime" : "2023-09-23T09:55:24.547Z",
  "modificationTime" : "2023-09-23T09:55:24.547Z",
  "owner" : "testuser",
  "link" : true
}</msg>
<status status="PASS" starttime="20230923 10:00:50.302" endtime="20230923 10:00:50.303"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:00:50.304" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:00:50.303" endtime="20230923 10:00:50.304"/>
</kw>
<status status="PASS" starttime="20230923 10:00:44.474" endtime="20230923 10:00:50.304"/>
</kw>
<msg timestamp="20230923 10:00:50.304" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:00:44.474" endtime="20230923 10:00:50.305"/>
</kw>
<msg timestamp="20230923 10:00:50.305" level="INFO">${result} = {
  "volumeName" : "82376-target",
  "bucketName" : "link-to-unreadable-bucket",
  "sourceVolume" : "82376-source",
  "sourceBucket" : "unreadable-bucket",
  "creationTime" : "2023-09-23T09:55:24.547Z...</msg>
<status status="PASS" starttime="20230923 10:00:44.473" endtime="20230923 10:00:50.305"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>link-to-unreadable-bucket</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:00:50.305" endtime="20230923 10:00:50.305"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:00:50.306" endtime="20230923 10:00:50.306"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${source}/unreadable-bucket</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:00:50.310" level="INFO">Running command 'ozone sh bucket info 82376-source/unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:00:55.382" level="INFO">${rc} = 255</msg>
<msg timestamp="20230923 10:00:55.382" level="INFO">${output} = PERMISSION_DENIED User testuser2 doesn't have READ permission to access bucket Volume:82376-source Bucket:unreadable-bucket </msg>
<status status="PASS" starttime="20230923 10:00:50.307" endtime="20230923 10:00:55.382"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:00:55.383" level="INFO">PERMISSION_DENIED User testuser2 doesn't have READ permission to access bucket Volume:82376-source Bucket:unreadable-bucket </msg>
<status status="PASS" starttime="20230923 10:00:55.383" endtime="20230923 10:00:55.384"/>
</kw>
<msg timestamp="20230923 10:00:55.384" level="INFO">${result} = PERMISSION_DENIED User testuser2 doesn't have READ permission to access bucket Volume:82376-source Bucket:unreadable-bucket </msg>
<status status="PASS" starttime="20230923 10:00:50.306" endtime="20230923 10:00:55.384"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:00:55.384" endtime="20230923 10:00:55.384"/>
</kw>
<status status="PASS" starttime="20230923 10:00:44.422" endtime="20230923 10:00:55.385"/>
</kw>
<status status="PASS" starttime="20230923 10:00:44.421" endtime="20230923 10:00:55.385"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20230923 10:00:44.379" endtime="20230923 10:00:55.385"/>
</test>
<test id="s1-s4-s3-t14" name="Loop in link chain is detected" line="192">
<kw name="Create link loop" type="SETUP">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:00:55.393" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:00:55.398" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:00:55.398" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230923 10:00:55.391" endtime="20230923 10:00:55.398"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:00:55.400" level="INFO">scm</msg>
<status status="PASS" starttime="20230923 10:00:55.398" endtime="20230923 10:00:55.400"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:00:55.401" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:00:55.400" endtime="20230923 10:00:55.401"/>
</kw>
<status status="PASS" starttime="20230923 10:00:55.390" endtime="20230923 10:00:55.401"/>
</kw>
<msg timestamp="20230923 10:00:55.401" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:00:55.390" endtime="20230923 10:00:55.401"/>
</kw>
<msg timestamp="20230923 10:00:55.401" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230923 10:00:55.389" endtime="20230923 10:00:55.401"/>
</kw>
<msg timestamp="20230923 10:00:55.402" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230923 10:00:55.389" endtime="20230923 10:00:55.402"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230923 10:00:55.402" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230923 10:00:55.402" endtime="20230923 10:00:55.402"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:00:55.407" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:00:55.446" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:00:55.446" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:00:55.405" endtime="20230923 10:00:55.446"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:00:55.448" level="INFO"/>
<status status="PASS" starttime="20230923 10:00:55.447" endtime="20230923 10:00:55.448"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:00:55.448" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:00:55.448" endtime="20230923 10:00:55.448"/>
</kw>
<status status="PASS" starttime="20230923 10:00:55.404" endtime="20230923 10:00:55.449"/>
</kw>
<msg timestamp="20230923 10:00:55.449" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:00:55.404" endtime="20230923 10:00:55.449"/>
</kw>
<status status="PASS" starttime="20230923 10:00:55.403" endtime="20230923 10:00:55.449"/>
</kw>
<status status="PASS" starttime="20230923 10:00:55.402" endtime="20230923 10:00:55.449"/>
</kw>
<status status="PASS" starttime="20230923 10:00:55.388" endtime="20230923 10:00:55.449"/>
</kw>
<status status="PASS" starttime="20230923 10:00:55.388" endtime="20230923 10:00:55.449"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${target}/loop1 ${target}/loop2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:00:55.453" level="INFO">Running command 'ozone sh bucket link 82376-target/loop1 82376-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:01:00.894" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:01:00.894" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:00:55.451" endtime="20230923 10:01:00.894"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:01:00.896" level="INFO"/>
<status status="PASS" starttime="20230923 10:01:00.895" endtime="20230923 10:01:00.896"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:01:00.897" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:01:00.896" endtime="20230923 10:01:00.897"/>
</kw>
<status status="PASS" starttime="20230923 10:00:55.450" endtime="20230923 10:01:00.897"/>
</kw>
<msg timestamp="20230923 10:01:00.897" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:00:55.450" endtime="20230923 10:01:00.897"/>
</kw>
<status status="PASS" starttime="20230923 10:00:55.449" endtime="20230923 10:01:00.897"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${target}/loop2 ${target}/loop3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:01:00.902" level="INFO">Running command 'ozone sh bucket link 82376-target/loop2 82376-target/loop3 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:01:06.258" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:01:06.258" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:01:00.899" endtime="20230923 10:01:06.258"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:01:06.260" level="INFO"/>
<status status="PASS" starttime="20230923 10:01:06.259" endtime="20230923 10:01:06.260"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:01:06.261" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:01:06.260" endtime="20230923 10:01:06.261"/>
</kw>
<status status="PASS" starttime="20230923 10:01:00.899" endtime="20230923 10:01:06.261"/>
</kw>
<msg timestamp="20230923 10:01:06.261" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:01:00.898" endtime="20230923 10:01:06.261"/>
</kw>
<status status="PASS" starttime="20230923 10:01:00.898" endtime="20230923 10:01:06.261"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${target}/loop3 ${target}/loop1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:01:06.266" level="INFO">Running command 'ozone sh bucket link 82376-target/loop3 82376-target/loop1 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:01:11.851" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:01:11.851" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:01:06.263" endtime="20230923 10:01:11.851"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:01:11.853" level="INFO"/>
<status status="PASS" starttime="20230923 10:01:11.852" endtime="20230923 10:01:11.853"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:01:11.856" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:01:11.853" endtime="20230923 10:01:11.856"/>
</kw>
<status status="PASS" starttime="20230923 10:01:06.263" endtime="20230923 10:01:11.856"/>
</kw>
<msg timestamp="20230923 10:01:11.856" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:01:06.262" endtime="20230923 10:01:11.856"/>
</kw>
<status status="PASS" starttime="20230923 10:01:06.262" endtime="20230923 10:01:11.856"/>
</kw>
<status status="PASS" starttime="20230923 10:00:55.387" endtime="20230923 10:01:11.856"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/loop2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:01:11.860" level="INFO">Running command 'ozone sh key list 82376-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:01:17.439" level="INFO">${rc} = 255</msg>
<msg timestamp="20230923 10:01:17.440" level="INFO">${output} = DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links. Bucket name: loop2, Volume name: 82376-target</msg>
<status status="PASS" starttime="20230923 10:01:11.857" endtime="20230923 10:01:17.440"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:01:17.441" level="INFO">DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links. Bucket name: loop2, Volume name: 82376-target</msg>
<status status="PASS" starttime="20230923 10:01:17.440" endtime="20230923 10:01:17.441"/>
</kw>
<msg timestamp="20230923 10:01:17.442" level="INFO">${result} = DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links. Bucket name: loop2, Volume name: 82376-target</msg>
<status status="PASS" starttime="20230923 10:01:11.857" endtime="20230923 10:01:17.442"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>DETECTED_LOOP</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:01:17.442" endtime="20230923 10:01:17.443"/>
</kw>
<kw name="Delete link loop" type="TEARDOWN">
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${target}/loop1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:01:17.448" level="INFO">Running command 'ozone sh bucket delete 82376-target/loop1 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:01:22.920" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:01:22.920" level="INFO">${output} = Bucket loop1 is deleted</msg>
<status status="PASS" starttime="20230923 10:01:17.445" endtime="20230923 10:01:22.920"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:01:22.921" level="INFO">Bucket loop1 is deleted</msg>
<status status="PASS" starttime="20230923 10:01:22.920" endtime="20230923 10:01:22.921"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:01:22.922" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:01:22.921" endtime="20230923 10:01:22.922"/>
</kw>
<status status="PASS" starttime="20230923 10:01:17.445" endtime="20230923 10:01:22.922"/>
</kw>
<msg timestamp="20230923 10:01:22.922" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:01:17.444" endtime="20230923 10:01:22.922"/>
</kw>
<status status="PASS" starttime="20230923 10:01:17.444" endtime="20230923 10:01:22.923"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${target}/loop2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:01:22.927" level="INFO">Running command 'ozone sh bucket delete 82376-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:01:28.837" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:01:28.837" level="INFO">${output} = Bucket loop2 is deleted</msg>
<status status="PASS" starttime="20230923 10:01:22.925" endtime="20230923 10:01:28.837"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:01:28.839" level="INFO">Bucket loop2 is deleted</msg>
<status status="PASS" starttime="20230923 10:01:28.838" endtime="20230923 10:01:28.839"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:01:28.839" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:01:28.839" endtime="20230923 10:01:28.840"/>
</kw>
<status status="PASS" starttime="20230923 10:01:22.924" endtime="20230923 10:01:28.840"/>
</kw>
<msg timestamp="20230923 10:01:28.840" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:01:22.924" endtime="20230923 10:01:28.840"/>
</kw>
<status status="PASS" starttime="20230923 10:01:22.923" endtime="20230923 10:01:28.840"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${target}/loop3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:01:28.845" level="INFO">Running command 'ozone sh bucket delete 82376-target/loop3 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:01:34.470" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:01:34.471" level="INFO">${output} = Bucket loop3 is deleted</msg>
<status status="PASS" starttime="20230923 10:01:28.842" endtime="20230923 10:01:34.471"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:01:34.472" level="INFO">Bucket loop3 is deleted</msg>
<status status="PASS" starttime="20230923 10:01:34.472" endtime="20230923 10:01:34.472"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:01:34.473" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:01:34.473" endtime="20230923 10:01:34.473"/>
</kw>
<status status="PASS" starttime="20230923 10:01:28.842" endtime="20230923 10:01:34.473"/>
</kw>
<msg timestamp="20230923 10:01:34.473" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:01:28.841" endtime="20230923 10:01:34.474"/>
</kw>
<status status="PASS" starttime="20230923 10:01:28.840" endtime="20230923 10:01:34.474"/>
</kw>
<status status="PASS" starttime="20230923 10:01:17.443" endtime="20230923 10:01:34.474"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20230923 10:00:55.386" endtime="20230923 10:01:34.474"/>
</test>
<test id="s1-s4-s3-t15" name="Multiple links to same bucket are allowed" line="198">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:01:34.482" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:01:34.486" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:01:34.486" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230923 10:01:34.480" endtime="20230923 10:01:34.486"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:01:34.487" level="INFO">scm</msg>
<status status="PASS" starttime="20230923 10:01:34.486" endtime="20230923 10:01:34.487"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:01:34.488" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:01:34.487" endtime="20230923 10:01:34.488"/>
</kw>
<status status="PASS" starttime="20230923 10:01:34.479" endtime="20230923 10:01:34.488"/>
</kw>
<msg timestamp="20230923 10:01:34.488" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:01:34.479" endtime="20230923 10:01:34.488"/>
</kw>
<msg timestamp="20230923 10:01:34.488" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230923 10:01:34.478" endtime="20230923 10:01:34.488"/>
</kw>
<msg timestamp="20230923 10:01:34.489" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230923 10:01:34.478" endtime="20230923 10:01:34.489"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230923 10:01:34.489" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230923 10:01:34.489" endtime="20230923 10:01:34.489"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:01:34.494" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:01:34.545" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:01:34.545" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:01:34.492" endtime="20230923 10:01:34.545"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:01:34.547" level="INFO"/>
<status status="PASS" starttime="20230923 10:01:34.546" endtime="20230923 10:01:34.547"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:01:34.547" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:01:34.547" endtime="20230923 10:01:34.548"/>
</kw>
<status status="PASS" starttime="20230923 10:01:34.491" endtime="20230923 10:01:34.548"/>
</kw>
<msg timestamp="20230923 10:01:34.548" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:01:34.491" endtime="20230923 10:01:34.548"/>
</kw>
<status status="PASS" starttime="20230923 10:01:34.490" endtime="20230923 10:01:34.548"/>
</kw>
<status status="PASS" starttime="20230923 10:01:34.490" endtime="20230923 10:01:34.548"/>
</kw>
<status status="PASS" starttime="20230923 10:01:34.477" endtime="20230923 10:01:34.548"/>
</kw>
<status status="PASS" starttime="20230923 10:01:34.476" endtime="20230923 10:01:34.548"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:01:34.553" level="INFO">Running command 'ozone sh bucket link 82376-source/bucket1 82376-target/link3 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:01:40.281" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:01:40.281" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:01:34.550" endtime="20230923 10:01:40.281"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:01:40.282" level="INFO"/>
<status status="PASS" starttime="20230923 10:01:40.281" endtime="20230923 10:01:40.282"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:01:40.283" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:01:40.282" endtime="20230923 10:01:40.283"/>
</kw>
<status status="PASS" starttime="20230923 10:01:34.550" endtime="20230923 10:01:40.283"/>
</kw>
<msg timestamp="20230923 10:01:40.283" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:01:34.549" endtime="20230923 10:01:40.284"/>
</kw>
<status status="PASS" starttime="20230923 10:01:34.549" endtime="20230923 10:01:40.284"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${target}/link3/key3 /etc/group</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:01:40.288" level="INFO">Running command 'ozone sh key put 82376-target/link3/key3 /etc/group 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:01:48.597" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:01:48.597" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:01:40.285" endtime="20230923 10:01:48.597"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:01:48.598" level="INFO"/>
<status status="PASS" starttime="20230923 10:01:48.597" endtime="20230923 10:01:48.598"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:01:48.599" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:01:48.598" endtime="20230923 10:01:48.599"/>
</kw>
<status status="PASS" starttime="20230923 10:01:40.285" endtime="20230923 10:01:48.599"/>
</kw>
<msg timestamp="20230923 10:01:48.600" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:01:40.285" endtime="20230923 10:01:48.600"/>
</kw>
<status status="PASS" starttime="20230923 10:01:40.284" endtime="20230923 10:01:48.600"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${target}/link1/key3</arg>
<arg>/etc/group</arg>
<kw name="Compare Key With Local File" library="shell">
<var>${matches}</var>
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230923 10:01:48.602" level="INFO">${postfix} = 94645</msg>
<status status="PASS" starttime="20230923 10:01:48.601" endtime="20230923 10:01:48.602"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${tmpfile}</var>
<arg>/tmp/tempkey-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230923 10:01:48.603" level="INFO">${tmpfile} = /tmp/tempkey-94645</msg>
<status status="PASS" starttime="20230923 10:01:48.602" endtime="20230923 10:01:48.603"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${key} ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:01:48.607" level="INFO">Running command 'ozone sh key get 82376-target/link1/key3 /tmp/tempkey-94645 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:01:56.146" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:01:56.146" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:01:48.605" endtime="20230923 10:01:56.146"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:01:56.148" level="INFO"/>
<status status="PASS" starttime="20230923 10:01:56.147" endtime="20230923 10:01:56.148"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:01:56.149" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:01:56.148" endtime="20230923 10:01:56.149"/>
</kw>
<status status="PASS" starttime="20230923 10:01:48.604" endtime="20230923 10:01:56.149"/>
</kw>
<msg timestamp="20230923 10:01:56.149" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:01:48.604" endtime="20230923 10:01:56.149"/>
</kw>
<status status="PASS" starttime="20230923 10:01:48.603" endtime="20230923 10:01:56.150"/>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<var>${rc}</var>
<arg>diff -q ${file} ${tmpfile}</arg>
<doc>Runs the given command in the system and returns the return code.</doc>
<msg timestamp="20230923 10:01:56.153" level="INFO">Running command 'diff -q /etc/group /tmp/tempkey-94645 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:01:56.156" level="INFO">${rc} = 0</msg>
<status status="PASS" starttime="20230923 10:01:56.150" endtime="20230923 10:01:56.156"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:01:56.161" level="INFO">Running command 'rm -f /tmp/tempkey-94645 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:01:56.164" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:01:56.164" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:01:56.159" endtime="20230923 10:01:56.164"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:01:56.165" level="INFO"/>
<status status="PASS" starttime="20230923 10:01:56.165" endtime="20230923 10:01:56.166"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:01:56.166" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:01:56.166" endtime="20230923 10:01:56.166"/>
</kw>
<status status="PASS" starttime="20230923 10:01:56.158" endtime="20230923 10:01:56.167"/>
</kw>
<msg timestamp="20230923 10:01:56.167" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:01:56.158" endtime="20230923 10:01:56.167"/>
</kw>
<status status="PASS" starttime="20230923 10:01:56.157" endtime="20230923 10:01:56.167"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230923 10:01:56.168" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20230923 10:01:56.167" endtime="20230923 10:01:56.168"/>
</kw>
<msg timestamp="20230923 10:01:56.168" level="INFO">${matches} = True</msg>
<status status="PASS" starttime="20230923 10:01:48.601" endtime="20230923 10:01:56.168"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${matches}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230923 10:01:56.168" endtime="20230923 10:01:56.168"/>
</kw>
<status status="PASS" starttime="20230923 10:01:48.600" endtime="20230923 10:01:56.169"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20230923 10:01:34.475" endtime="20230923 10:01:56.169"/>
</test>
<test id="s1-s4-s3-t16" name="Source bucket not affected by deleting link" line="203">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:01:56.176" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:01:56.180" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:01:56.180" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230923 10:01:56.174" endtime="20230923 10:01:56.180"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:01:56.181" level="INFO">scm</msg>
<status status="PASS" starttime="20230923 10:01:56.181" endtime="20230923 10:01:56.181"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:01:56.182" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:01:56.182" endtime="20230923 10:01:56.182"/>
</kw>
<status status="PASS" starttime="20230923 10:01:56.173" endtime="20230923 10:01:56.182"/>
</kw>
<msg timestamp="20230923 10:01:56.183" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:01:56.173" endtime="20230923 10:01:56.183"/>
</kw>
<msg timestamp="20230923 10:01:56.183" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230923 10:01:56.173" endtime="20230923 10:01:56.183"/>
</kw>
<msg timestamp="20230923 10:01:56.183" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230923 10:01:56.172" endtime="20230923 10:01:56.183"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230923 10:01:56.184" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230923 10:01:56.183" endtime="20230923 10:01:56.184"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:01:56.189" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:01:56.223" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:01:56.223" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:01:56.186" endtime="20230923 10:01:56.223"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:01:56.224" level="INFO"/>
<status status="PASS" starttime="20230923 10:01:56.223" endtime="20230923 10:01:56.224"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:01:56.225" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:01:56.224" endtime="20230923 10:01:56.225"/>
</kw>
<status status="PASS" starttime="20230923 10:01:56.186" endtime="20230923 10:01:56.225"/>
</kw>
<msg timestamp="20230923 10:01:56.225" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:01:56.185" endtime="20230923 10:01:56.225"/>
</kw>
<status status="PASS" starttime="20230923 10:01:56.185" endtime="20230923 10:01:56.225"/>
</kw>
<status status="PASS" starttime="20230923 10:01:56.184" endtime="20230923 10:01:56.226"/>
</kw>
<status status="PASS" starttime="20230923 10:01:56.172" endtime="20230923 10:01:56.226"/>
</kw>
<status status="PASS" starttime="20230923 10:01:56.171" endtime="20230923 10:01:56.226"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:01:56.230" level="INFO">Running command 'ozone sh bucket delete 82376-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:02:02.077" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:02:02.077" level="INFO">${output} = Bucket link1 is deleted</msg>
<status status="PASS" starttime="20230923 10:01:56.227" endtime="20230923 10:02:02.077"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:02:02.079" level="INFO">Bucket link1 is deleted</msg>
<status status="PASS" starttime="20230923 10:02:02.078" endtime="20230923 10:02:02.079"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:02:02.079" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:02:02.079" endtime="20230923 10:02:02.080"/>
</kw>
<status status="PASS" starttime="20230923 10:01:56.227" endtime="20230923 10:02:02.080"/>
</kw>
<msg timestamp="20230923 10:02:02.080" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:01:56.227" endtime="20230923 10:02:02.080"/>
</kw>
<status status="PASS" starttime="20230923 10:01:56.226" endtime="20230923 10:02:02.080"/>
</kw>
<kw name="Execute" library="os">
<var>${bucket_list}</var>
<arg>ozone sh bucket list ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:02:02.084" level="INFO">Running command 'ozone sh bucket list 82376-target 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:02:07.803" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:02:07.803" level="INFO">${output} = [ {
  "metadata" : { },
  "volumeName" : "82376-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2023-09-2...</msg>
<status status="PASS" starttime="20230923 10:02:02.082" endtime="20230923 10:02:07.803"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:02:07.804" level="INFO">[ {
  "metadata" : { },
  "volumeName" : "82376-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2023-09-23T10:00:15.696Z",
  "modificationTime" : "2023-09-23T10:00:15.696Z",
  "sourcePathExist" : true,
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "FILE_SYSTEM_OPTIMIZED",
  "owner" : "testuser",
  "link" : false
}, {
  "volumeName" : "82376-target",
  "bucketName" : "dangling-link",
  "sourceVolume" : "82376-source",
  "sourceBucket" : "no-such-bucket",
  "creationTime" : "2023-09-23T09:55:59.732Z",
  "modificationTime" : "2023-09-23T09:55:59.732Z",
  "owner" : "testuser",
  "link" : true
}, {
  "volumeName" : "82376-target",
  "bucketName" : "link-to-unreadable-bucket",
  "sourceVolume" : "82376-source",
  "sourceBucket" : "unreadable-bucket",
  "creationTime" : "2023-09-23T09:55:24.547Z",
  "modificationTime" : "2023-09-23T09:55:24.547Z",
  "owner" : "testuser",
  "link" : true
}, {
  "volumeName" : "82376-target",
  "bucketName" : "link2",
  "sourceVolume" : "82376-source",
  "sourceBucket" : "bucket2",
  "creationTime" : "2023-09-23T10:00:03.771Z",
  "modificationTime" : "2023-09-23T10:00:03.771Z",
  "owner" : "testuser",
  "link" : true
}, {
  "volumeName" : "82376-target",
  "bucketName" : "link3",
  "sourceVolume" : "82376-source",
  "sourceBucket" : "bucket1",
  "creationTime" : "2023-09-23T10:01:40.111Z",
  "modificationTime" : "2023-09-23T10:01:40.111Z",
  "owner" : "testuser",
  "link" : true
}, {
  "volumeName" : "82376-target",
  "bucketName" : "readable-link",
  "sourceVolume" : "82376-source",
  "sourceBucket" : "readable-bucket",
  "creationTime" : "2023-09-23T09:55:36.175Z",
  "modificationTime" : "2023-09-23T09:55:36.175Z",
  "owner" : "testuser",
  "link" : true
}, {
  "volumeName" : "82376-target",
  "bucketName" : "readable-link2",
  "sourceVolume" : "82376-source",
  "sourceBucket" : "readable-bucket",
  "creationTime" : "2023-09-23T09:55:41.959Z",
  "modificationTime" : "2023-09-23T09:55:41.959Z",
  "owner" : "testuser",
  "link" : true
} ]</msg>
<status status="PASS" starttime="20230923 10:02:07.804" endtime="20230923 10:02:07.805"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:02:07.805" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:02:07.805" endtime="20230923 10:02:07.805"/>
</kw>
<status status="PASS" starttime="20230923 10:02:02.081" endtime="20230923 10:02:07.806"/>
</kw>
<msg timestamp="20230923 10:02:07.806" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:02:02.081" endtime="20230923 10:02:07.806"/>
</kw>
<msg timestamp="20230923 10:02:07.806" level="INFO">${bucket_list} = [ {
  "metadata" : { },
  "volumeName" : "82376-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2023-09-2...</msg>
<status status="PASS" starttime="20230923 10:02:02.080" endtime="20230923 10:02:07.806"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${bucket_list}</arg>
<arg>link1</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:02:07.806" endtime="20230923 10:02:07.806"/>
</kw>
<kw name="Execute" library="os">
<var>${source_list}</var>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:02:07.811" level="INFO">Running command 'ozone sh key list 82376-source/bucket1 | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:02:13.703" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:02:13.703" level="INFO">${output} = .Trash/
.Trash/testuser/
key1
key3</msg>
<status status="PASS" starttime="20230923 10:02:07.808" endtime="20230923 10:02:13.703"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:02:13.705" level="INFO">.Trash/
.Trash/testuser/
key1
key3</msg>
<status status="PASS" starttime="20230923 10:02:13.704" endtime="20230923 10:02:13.705"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:02:13.706" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:02:13.705" endtime="20230923 10:02:13.706"/>
</kw>
<status status="PASS" starttime="20230923 10:02:07.808" endtime="20230923 10:02:13.706"/>
</kw>
<msg timestamp="20230923 10:02:13.706" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:02:07.807" endtime="20230923 10:02:13.706"/>
</kw>
<msg timestamp="20230923 10:02:13.706" level="INFO">${source_list} = .Trash/
.Trash/testuser/
key1
key3</msg>
<status status="PASS" starttime="20230923 10:02:07.807" endtime="20230923 10:02:13.707"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:02:13.707" endtime="20230923 10:02:13.707"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20230923 10:01:56.170" endtime="20230923 10:02:13.707"/>
</test>
<test id="s1-s4-s3-t17" name="Setting bucket property on link not allowed" line="210">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:02:13.716" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:02:13.720" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:02:13.720" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230923 10:02:13.713" endtime="20230923 10:02:13.720"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:02:13.721" level="INFO">scm</msg>
<status status="PASS" starttime="20230923 10:02:13.720" endtime="20230923 10:02:13.721"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:02:13.722" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:02:13.721" endtime="20230923 10:02:13.722"/>
</kw>
<status status="PASS" starttime="20230923 10:02:13.713" endtime="20230923 10:02:13.722"/>
</kw>
<msg timestamp="20230923 10:02:13.722" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:02:13.712" endtime="20230923 10:02:13.722"/>
</kw>
<msg timestamp="20230923 10:02:13.722" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230923 10:02:13.711" endtime="20230923 10:02:13.722"/>
</kw>
<msg timestamp="20230923 10:02:13.723" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230923 10:02:13.711" endtime="20230923 10:02:13.723"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230923 10:02:13.723" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230923 10:02:13.723" endtime="20230923 10:02:13.723"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:02:13.728" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:02:13.767" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:02:13.767" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:02:13.725" endtime="20230923 10:02:13.768"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:02:13.769" level="INFO"/>
<status status="PASS" starttime="20230923 10:02:13.768" endtime="20230923 10:02:13.769"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:02:13.770" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:02:13.769" endtime="20230923 10:02:13.770"/>
</kw>
<status status="PASS" starttime="20230923 10:02:13.725" endtime="20230923 10:02:13.770"/>
</kw>
<msg timestamp="20230923 10:02:13.770" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:02:13.724" endtime="20230923 10:02:13.770"/>
</kw>
<status status="PASS" starttime="20230923 10:02:13.724" endtime="20230923 10:02:13.770"/>
</kw>
<status status="PASS" starttime="20230923 10:02:13.723" endtime="20230923 10:02:13.770"/>
</kw>
<status status="PASS" starttime="20230923 10:02:13.710" endtime="20230923 10:02:13.770"/>
</kw>
<status status="PASS" starttime="20230923 10:02:13.710" endtime="20230923 10:02:13.770"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:02:13.774" level="INFO">Running command 'ozone sh bucket link 82376-source/bucket1 82376-target/link4 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:02:19.502" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:02:19.502" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:02:13.772" endtime="20230923 10:02:19.502"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:02:19.503" level="INFO"/>
<status status="PASS" starttime="20230923 10:02:19.503" endtime="20230923 10:02:19.503"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:02:19.504" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:02:19.504" endtime="20230923 10:02:19.504"/>
</kw>
<status status="PASS" starttime="20230923 10:02:13.772" endtime="20230923 10:02:19.504"/>
</kw>
<msg timestamp="20230923 10:02:19.504" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:02:13.771" endtime="20230923 10:02:19.505"/>
</kw>
<status status="PASS" starttime="20230923 10:02:13.771" endtime="20230923 10:02:19.505"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh bucket setquota ${target}/link4 --quota 1GB</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:02:19.508" level="INFO">Running command 'ozone sh bucket setquota 82376-target/link4 --quota 1GB 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:02:25.003" level="INFO">${rc} = 255</msg>
<msg timestamp="20230923 10:02:25.003" level="INFO">${output} = NOT_SUPPORTED_OPERATION Cannot set property on link</msg>
<status status="PASS" starttime="20230923 10:02:19.506" endtime="20230923 10:02:25.003"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:02:25.005" level="INFO">NOT_SUPPORTED_OPERATION Cannot set property on link</msg>
<status status="PASS" starttime="20230923 10:02:25.004" endtime="20230923 10:02:25.005"/>
</kw>
<msg timestamp="20230923 10:02:25.005" level="INFO">${result} = NOT_SUPPORTED_OPERATION Cannot set property on link</msg>
<status status="PASS" starttime="20230923 10:02:19.505" endtime="20230923 10:02:25.005"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOT_SUPPORTED_OPERATION</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:02:25.005" endtime="20230923 10:02:25.006"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${target}/link4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:02:25.010" level="INFO">Running command 'ozone sh bucket info 82376-target/link4 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:02:30.491" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:02:30.491" level="INFO">${output} = {
  "volumeName" : "82376-target",
  "bucketName" : "link4",
  "sourceVolume" : "82376-source",
  "sourceBucket" : "bucket1",
  "creationTime" : "2023-09-23T10:02:19.240Z",
  "modificationTime" : "202...</msg>
<status status="PASS" starttime="20230923 10:02:25.008" endtime="20230923 10:02:30.491"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:02:30.492" level="INFO">{
  "volumeName" : "82376-target",
  "bucketName" : "link4",
  "sourceVolume" : "82376-source",
  "sourceBucket" : "bucket1",
  "creationTime" : "2023-09-23T10:02:19.240Z",
  "modificationTime" : "2023-09-23T10:02:19.240Z",
  "owner" : "testuser",
  "link" : true
}</msg>
<status status="PASS" starttime="20230923 10:02:30.492" endtime="20230923 10:02:30.492"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:02:30.493" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:02:30.493" endtime="20230923 10:02:30.493"/>
</kw>
<status status="PASS" starttime="20230923 10:02:25.007" endtime="20230923 10:02:30.494"/>
</kw>
<msg timestamp="20230923 10:02:30.494" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:02:25.007" endtime="20230923 10:02:30.494"/>
</kw>
<msg timestamp="20230923 10:02:30.494" level="INFO">${result} = {
  "volumeName" : "82376-target",
  "bucketName" : "link4",
  "sourceVolume" : "82376-source",
  "sourceBucket" : "bucket1",
  "creationTime" : "2023-09-23T10:02:19.240Z",
  "modificationTime" : "202...</msg>
<status status="PASS" starttime="20230923 10:02:25.006" endtime="20230923 10:02:30.494"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>sourceBucket</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:02:30.494" endtime="20230923 10:02:30.495"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20230923 10:02:13.709" endtime="20230923 10:02:30.495"/>
</test>
<doc>Test bucket links via Ozone CLI</doc>
<status status="PASS" starttime="20230923 09:54:47.201" endtime="20230923 10:02:30.498"/>
</suite>
<suite id="s1-s4-s4" name="Ozone-Shell-Single" source="/opt/hadoop/smoketest/basic/ozone-shell-single.robot">
<kw name="Generate prefix" library="ozone-shell-lib" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230923 10:02:30.533" level="INFO">${random} = 98191</msg>
<status status="PASS" starttime="20230923 10:02:30.533" endtime="20230923 10:02:30.533"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${prefix}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230923 10:02:30.534" level="INFO">${prefix} = 98191</msg>
<status status="PASS" starttime="20230923 10:02:30.534" endtime="20230923 10:02:30.534"/>
</kw>
<status status="PASS" starttime="20230923 10:02:30.532" endtime="20230923 10:02:30.534"/>
</kw>
<test id="s1-s4-s4-t1" name="Test ozone shell" line="26">
<kw name="Test ozone shell" library="ozone-shell-lib">
<arg>${EMPTY}</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-without-scheme</arg>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:02:30.541" level="INFO">Running command 'ozone sh volume info /98191-without-scheme 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:02:35.881" level="INFO">${rc} = 255</msg>
<msg timestamp="20230923 10:02:35.881" level="INFO">${output} = VOLUME_NOT_FOUND Volume 98191-without-scheme is not found</msg>
<status status="PASS" starttime="20230923 10:02:30.538" endtime="20230923 10:02:35.881"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:02:35.883" level="INFO">VOLUME_NOT_FOUND Volume 98191-without-scheme is not found</msg>
<status status="PASS" starttime="20230923 10:02:35.882" endtime="20230923 10:02:35.883"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:02:35.884" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:02:35.883" endtime="20230923 10:02:35.884"/>
</kw>
<msg timestamp="20230923 10:02:35.884" level="INFO">${result} = VOLUME_NOT_FOUND Volume 98191-without-scheme is not found</msg>
<status status="PASS" starttime="20230923 10:02:30.537" endtime="20230923 10:02:35.884"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:02:35.885" endtime="20230923 10:02:35.885"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:02:35.891" level="INFO">Running command 'ozone sh volume create /98191-without-scheme --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:02:41.520" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:02:41.520" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:02:35.888" endtime="20230923 10:02:41.520"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:02:41.522" level="INFO"/>
<status status="PASS" starttime="20230923 10:02:41.521" endtime="20230923 10:02:41.522"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:02:41.522" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:02:41.522" endtime="20230923 10:02:41.522"/>
</kw>
<status status="PASS" starttime="20230923 10:02:35.887" endtime="20230923 10:02:41.523"/>
</kw>
<msg timestamp="20230923 10:02:41.523" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:02:35.886" endtime="20230923 10:02:41.523"/>
</kw>
<msg timestamp="20230923 10:02:41.524" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230923 10:02:35.885" endtime="20230923 10:02:41.524"/>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<arg>${result}</arg>
<doc>Verifies that the given item is empty.</doc>
<msg timestamp="20230923 10:02:41.525" level="INFO">Length is 0</msg>
<status status="PASS" starttime="20230923 10:02:41.524" endtime="20230923 10:02:41.525"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '.[] | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:02:41.530" level="INFO">Running command 'ozone sh volume list / | jq -r '.[] | select(.name=="98191-without-scheme")' 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:02:47.651" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:02:47.651" level="INFO">${output} = {
  "metadata": {},
  "name": "98191-without-scheme",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime"...</msg>
<status status="PASS" starttime="20230923 10:02:41.527" endtime="20230923 10:02:47.652"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:02:47.653" level="INFO">{
  "metadata": {},
  "name": "98191-without-scheme",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2023-09-23T10:02:41.438Z",
  "modificationTime": "2023-09-23T10:02:41.438Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "refCount": 0
}</msg>
<status status="PASS" starttime="20230923 10:02:47.652" endtime="20230923 10:02:47.653"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:02:47.654" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:02:47.653" endtime="20230923 10:02:47.655"/>
</kw>
<status status="PASS" starttime="20230923 10:02:41.526" endtime="20230923 10:02:47.655"/>
</kw>
<msg timestamp="20230923 10:02:47.655" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:02:41.526" endtime="20230923 10:02:47.655"/>
</kw>
<msg timestamp="20230923 10:02:47.655" level="INFO">${result} = {
  "metadata": {},
  "name": "98191-without-scheme",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime"...</msg>
<status status="PASS" starttime="20230923 10:02:41.525" endtime="20230923 10:02:47.655"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:02:47.655" endtime="20230923 10:02:47.656"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:02:47.660" level="INFO">Running command 'ozone sh volume setquota /98191-without-scheme --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:02:53.528" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:02:53.528" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:02:47.657" endtime="20230923 10:02:53.528"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:02:53.530" level="INFO"/>
<status status="PASS" starttime="20230923 10:02:53.529" endtime="20230923 10:02:53.530"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:02:53.530" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:02:53.530" endtime="20230923 10:02:53.530"/>
</kw>
<status status="PASS" starttime="20230923 10:02:47.657" endtime="20230923 10:02:53.531"/>
</kw>
<msg timestamp="20230923 10:02:53.531" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:02:47.657" endtime="20230923 10:02:53.531"/>
</kw>
<status status="PASS" starttime="20230923 10:02:47.656" endtime="20230923 10:02:53.531"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:02:53.536" level="INFO">Running command 'ozone sh volume info /98191-without-scheme | jq -r '. | select(.name=="98191-without-scheme") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:02:59.290" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:02:59.290" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20230923 10:02:53.533" endtime="20230923 10:02:59.290"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:02:59.292" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20230923 10:02:59.291" endtime="20230923 10:02:59.292"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:02:59.293" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:02:59.292" endtime="20230923 10:02:59.293"/>
</kw>
<status status="PASS" starttime="20230923 10:02:53.532" endtime="20230923 10:02:59.293"/>
</kw>
<msg timestamp="20230923 10:02:59.293" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:02:53.532" endtime="20230923 10:02:59.294"/>
</kw>
<msg timestamp="20230923 10:02:59.294" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20230923 10:02:53.531" endtime="20230923 10:02:59.294"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230923 10:02:59.294" endtime="20230923 10:02:59.294"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:02:59.299" level="INFO">Running command 'ozone sh bucket create /98191-without-scheme/bb1 --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:03:05.013" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:03:05.013" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:02:59.297" endtime="20230923 10:03:05.013"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:03:05.015" level="INFO"/>
<status status="PASS" starttime="20230923 10:03:05.014" endtime="20230923 10:03:05.015"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:03:05.016" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:03:05.015" endtime="20230923 10:03:05.016"/>
</kw>
<status status="PASS" starttime="20230923 10:02:59.296" endtime="20230923 10:03:05.016"/>
</kw>
<msg timestamp="20230923 10:03:05.016" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:02:59.296" endtime="20230923 10:03:05.016"/>
</kw>
<msg timestamp="20230923 10:03:05.017" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230923 10:02:59.295" endtime="20230923 10:03:05.017"/>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<arg>${result}</arg>
<doc>Verifies that the given item is empty.</doc>
<msg timestamp="20230923 10:03:05.017" level="INFO">Length is 0</msg>
<status status="PASS" starttime="20230923 10:03:05.017" endtime="20230923 10:03:05.017"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 &gt; bb1.json</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:03:05.022" level="INFO">Running command 'ozone sh bucket info /98191-without-scheme/bb1 &gt; bb1.json'.</msg>
<msg timestamp="20230923 10:03:11.382" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:03:11.382" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:03:05.019" endtime="20230923 10:03:11.382"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:03:11.383" level="INFO"/>
<status status="PASS" starttime="20230923 10:03:11.383" endtime="20230923 10:03:11.383"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:03:11.384" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:03:11.384" endtime="20230923 10:03:11.384"/>
</kw>
<status status="PASS" starttime="20230923 10:03:05.019" endtime="20230923 10:03:11.384"/>
</kw>
<msg timestamp="20230923 10:03:11.385" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:03:05.018" endtime="20230923 10:03:11.385"/>
</kw>
<status status="PASS" starttime="20230923 10:03:05.017" endtime="20230923 10:03:11.385"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>jq -r '. | select(.name=="bb1") | .storageType' bb1.json</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:03:11.390" level="INFO">Running command 'jq -r '. | select(.name=="bb1") | .storageType' bb1.json 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:03:11.440" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:03:11.440" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20230923 10:03:11.387" endtime="20230923 10:03:11.440"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:03:11.442" level="INFO">DISK</msg>
<status status="PASS" starttime="20230923 10:03:11.441" endtime="20230923 10:03:11.442"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:03:11.443" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:03:11.442" endtime="20230923 10:03:11.443"/>
</kw>
<status status="PASS" starttime="20230923 10:03:11.386" endtime="20230923 10:03:11.443"/>
</kw>
<msg timestamp="20230923 10:03:11.443" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:03:11.385" endtime="20230923 10:03:11.443"/>
</kw>
<msg timestamp="20230923 10:03:11.443" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20230923 10:03:11.385" endtime="20230923 10:03:11.443"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>DISK</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230923 10:03:11.444" endtime="20230923 10:03:11.444"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>jq -r '. | select(.name=="bb1") | .quotaInBytes' bb1.json</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:03:11.450" level="INFO">Running command 'jq -r '. | select(.name=="bb1") | .quotaInBytes' bb1.json 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:03:11.490" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:03:11.490" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20230923 10:03:11.447" endtime="20230923 10:03:11.490"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:03:11.491" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20230923 10:03:11.490" endtime="20230923 10:03:11.491"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:03:11.492" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:03:11.491" endtime="20230923 10:03:11.492"/>
</kw>
<status status="PASS" starttime="20230923 10:03:11.445" endtime="20230923 10:03:11.492"/>
</kw>
<msg timestamp="20230923 10:03:11.492" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:03:11.445" endtime="20230923 10:03:11.492"/>
</kw>
<msg timestamp="20230923 10:03:11.492" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20230923 10:03:11.444" endtime="20230923 10:03:11.492"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230923 10:03:11.493" endtime="20230923 10:03:11.493"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>jq -r '. | select(.name=="bb1") | .quotaInNamespace' bb1.json</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:03:11.497" level="INFO">Running command 'jq -r '. | select(.name=="bb1") | .quotaInNamespace' bb1.json 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:03:11.538" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:03:11.538" level="INFO">${output} = 100</msg>
<status status="PASS" starttime="20230923 10:03:11.495" endtime="20230923 10:03:11.538"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:03:11.539" level="INFO">100</msg>
<status status="PASS" starttime="20230923 10:03:11.539" endtime="20230923 10:03:11.540"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:03:11.540" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:03:11.540" endtime="20230923 10:03:11.540"/>
</kw>
<status status="PASS" starttime="20230923 10:03:11.494" endtime="20230923 10:03:11.540"/>
</kw>
<msg timestamp="20230923 10:03:11.540" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:03:11.494" endtime="20230923 10:03:11.541"/>
</kw>
<msg timestamp="20230923 10:03:11.541" level="INFO">${result} = 100</msg>
<status status="PASS" starttime="20230923 10:03:11.493" endtime="20230923 10:03:11.541"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>100</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230923 10:03:11.541" endtime="20230923 10:03:11.541"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:03:11.546" level="INFO">Running command 'ozone sh bucket setquota /98191-without-scheme/bb1 --space-quota 1TB --namespace-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:03:16.873" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:03:16.874" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:03:11.543" endtime="20230923 10:03:16.874"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:03:16.875" level="INFO"/>
<status status="PASS" starttime="20230923 10:03:16.874" endtime="20230923 10:03:16.875"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:03:16.876" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:03:16.875" endtime="20230923 10:03:16.876"/>
</kw>
<status status="PASS" starttime="20230923 10:03:11.543" endtime="20230923 10:03:16.876"/>
</kw>
<msg timestamp="20230923 10:03:16.876" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:03:11.542" endtime="20230923 10:03:16.876"/>
</kw>
<status status="PASS" starttime="20230923 10:03:11.542" endtime="20230923 10:03:16.876"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 &gt; bb1.json</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:03:16.880" level="INFO">Running command 'ozone sh bucket info /98191-without-scheme/bb1 &gt; bb1.json'.</msg>
<msg timestamp="20230923 10:03:22.316" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:03:22.316" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:03:16.878" endtime="20230923 10:03:22.316"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:03:22.317" level="INFO"/>
<status status="PASS" starttime="20230923 10:03:22.316" endtime="20230923 10:03:22.317"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:03:22.318" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:03:22.318" endtime="20230923 10:03:22.318"/>
</kw>
<status status="PASS" starttime="20230923 10:03:16.877" endtime="20230923 10:03:22.318"/>
</kw>
<msg timestamp="20230923 10:03:22.318" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:03:16.877" endtime="20230923 10:03:22.318"/>
</kw>
<status status="PASS" starttime="20230923 10:03:16.876" endtime="20230923 10:03:22.319"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>jq -r '. | select(.name=="bb1") | .quotaInBytes' bb1.json</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:03:22.323" level="INFO">Running command 'jq -r '. | select(.name=="bb1") | .quotaInBytes' bb1.json 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:03:22.363" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:03:22.364" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" starttime="20230923 10:03:22.320" endtime="20230923 10:03:22.364"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:03:22.365" level="INFO">1099511627776</msg>
<status status="PASS" starttime="20230923 10:03:22.364" endtime="20230923 10:03:22.365"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:03:22.365" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:03:22.365" endtime="20230923 10:03:22.365"/>
</kw>
<status status="PASS" starttime="20230923 10:03:22.319" endtime="20230923 10:03:22.365"/>
</kw>
<msg timestamp="20230923 10:03:22.366" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:03:22.319" endtime="20230923 10:03:22.366"/>
</kw>
<msg timestamp="20230923 10:03:22.366" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" starttime="20230923 10:03:22.319" endtime="20230923 10:03:22.366"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1099511627776</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230923 10:03:22.366" endtime="20230923 10:03:22.366"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>jq -r '. | select(.name=="bb1") | .quotaInNamespace' bb1.json</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:03:22.370" level="INFO">Running command 'jq -r '. | select(.name=="bb1") | .quotaInNamespace' bb1.json 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:03:22.413" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:03:22.413" level="INFO">${output} = 1000</msg>
<status status="PASS" starttime="20230923 10:03:22.368" endtime="20230923 10:03:22.413"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:03:22.414" level="INFO">1000</msg>
<status status="PASS" starttime="20230923 10:03:22.413" endtime="20230923 10:03:22.414"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:03:22.415" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:03:22.414" endtime="20230923 10:03:22.415"/>
</kw>
<status status="PASS" starttime="20230923 10:03:22.367" endtime="20230923 10:03:22.415"/>
</kw>
<msg timestamp="20230923 10:03:22.415" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:03:22.367" endtime="20230923 10:03:22.415"/>
</kw>
<msg timestamp="20230923 10:03:22.415" level="INFO">${result} = 1000</msg>
<status status="PASS" starttime="20230923 10:03:22.367" endtime="20230923 10:03:22.415"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1000</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230923 10:03:22.416" endtime="20230923 10:03:22.416"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '.[] | select(.name=="bb1") | .volumeName'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:03:22.420" level="INFO">Running command 'ozone sh bucket list /98191-without-scheme/ | jq -r '.[] | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:03:28.433" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:03:28.433" level="INFO">${output} = 98191-without-scheme</msg>
<status status="PASS" starttime="20230923 10:03:22.418" endtime="20230923 10:03:28.433"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:03:28.435" level="INFO">98191-without-scheme</msg>
<status status="PASS" starttime="20230923 10:03:28.434" endtime="20230923 10:03:28.435"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:03:28.435" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:03:28.435" endtime="20230923 10:03:28.435"/>
</kw>
<status status="PASS" starttime="20230923 10:03:22.417" endtime="20230923 10:03:28.436"/>
</kw>
<msg timestamp="20230923 10:03:28.436" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:03:22.417" endtime="20230923 10:03:28.436"/>
</kw>
<msg timestamp="20230923 10:03:28.436" level="INFO">${result} = 98191-without-scheme</msg>
<status status="PASS" starttime="20230923 10:03:22.416" endtime="20230923 10:03:28.436"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${volume}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230923 10:03:28.437" endtime="20230923 10:03:28.437"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Test key handling" library="ozone-shell-lib">
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:03:28.444" level="INFO">Running command 'ozone sh key put /98191-without-scheme/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:03:36.102" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:03:36.102" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:03:28.441" endtime="20230923 10:03:36.102"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:03:36.104" level="INFO"/>
<status status="PASS" starttime="20230923 10:03:36.103" endtime="20230923 10:03:36.104"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:03:36.104" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:03:36.104" endtime="20230923 10:03:36.105"/>
</kw>
<status status="PASS" starttime="20230923 10:03:28.440" endtime="20230923 10:03:36.105"/>
</kw>
<msg timestamp="20230923 10:03:36.105" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:03:28.439" endtime="20230923 10:03:36.105"/>
</kw>
<status status="PASS" starttime="20230923 10:03:28.439" endtime="20230923 10:03:36.105"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:03:36.110" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:03:36.113" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:03:36.114" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:03:36.107" endtime="20230923 10:03:36.114"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:03:36.115" level="INFO"/>
<status status="PASS" starttime="20230923 10:03:36.114" endtime="20230923 10:03:36.115"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:03:36.116" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:03:36.115" endtime="20230923 10:03:36.116"/>
</kw>
<status status="PASS" starttime="20230923 10:03:36.106" endtime="20230923 10:03:36.116"/>
</kw>
<msg timestamp="20230923 10:03:36.116" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:03:36.106" endtime="20230923 10:03:36.116"/>
</kw>
<status status="PASS" starttime="20230923 10:03:36.105" endtime="20230923 10:03:36.116"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:03:36.121" level="INFO">Running command 'ozone sh key get /98191-without-scheme/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:03:43.666" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:03:43.666" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:03:36.118" endtime="20230923 10:03:43.666"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:03:43.667" level="INFO"/>
<status status="PASS" starttime="20230923 10:03:43.666" endtime="20230923 10:03:43.667"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:03:43.668" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:03:43.667" endtime="20230923 10:03:43.668"/>
</kw>
<status status="PASS" starttime="20230923 10:03:36.118" endtime="20230923 10:03:43.668"/>
</kw>
<msg timestamp="20230923 10:03:43.668" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:03:36.118" endtime="20230923 10:03:43.669"/>
</kw>
<status status="PASS" starttime="20230923 10:03:36.117" endtime="20230923 10:03:43.669"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:03:43.673" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:03:43.676" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:03:43.676" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:03:43.671" endtime="20230923 10:03:43.677"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:03:43.678" level="INFO"/>
<status status="PASS" starttime="20230923 10:03:43.677" endtime="20230923 10:03:43.678"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:03:43.679" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:03:43.678" endtime="20230923 10:03:43.679"/>
</kw>
<status status="PASS" starttime="20230923 10:03:43.670" endtime="20230923 10:03:43.679"/>
</kw>
<msg timestamp="20230923 10:03:43.679" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:03:43.670" endtime="20230923 10:03:43.679"/>
</kw>
<status status="PASS" starttime="20230923 10:03:43.669" endtime="20230923 10:03:43.679"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:03:43.684" level="INFO">Running command 'ozone sh key put -t RATIS /98191-without-scheme/bb1/key1_RATIS /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:03:51.907" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:03:51.907" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:03:43.681" endtime="20230923 10:03:51.907"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:03:51.908" level="INFO"/>
<status status="PASS" starttime="20230923 10:03:51.908" endtime="20230923 10:03:51.909"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:03:51.909" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:03:51.909" endtime="20230923 10:03:51.910"/>
</kw>
<status status="PASS" starttime="20230923 10:03:43.681" endtime="20230923 10:03:51.910"/>
</kw>
<msg timestamp="20230923 10:03:51.910" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:03:43.680" endtime="20230923 10:03:51.910"/>
</kw>
<status status="PASS" starttime="20230923 10:03:43.680" endtime="20230923 10:03:51.910"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1_RATIS</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:03:51.916" level="INFO">Running command 'rm -f /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:03:51.919" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:03:51.919" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:03:51.913" endtime="20230923 10:03:51.919"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:03:51.921" level="INFO"/>
<status status="PASS" starttime="20230923 10:03:51.920" endtime="20230923 10:03:51.921"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:03:51.921" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:03:51.921" endtime="20230923 10:03:51.922"/>
</kw>
<status status="PASS" starttime="20230923 10:03:51.912" endtime="20230923 10:03:51.922"/>
</kw>
<msg timestamp="20230923 10:03:51.922" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:03:51.911" endtime="20230923 10:03:51.922"/>
</kw>
<status status="PASS" starttime="20230923 10:03:51.911" endtime="20230923 10:03:51.922"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:03:51.926" level="INFO">Running command 'ozone sh key get /98191-without-scheme/bb1/key1_RATIS /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:03:59.682" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:03:59.682" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:03:51.924" endtime="20230923 10:03:59.682"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:03:59.684" level="INFO"/>
<status status="PASS" starttime="20230923 10:03:59.683" endtime="20230923 10:03:59.684"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:03:59.685" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:03:59.684" endtime="20230923 10:03:59.685"/>
</kw>
<status status="PASS" starttime="20230923 10:03:51.923" endtime="20230923 10:03:59.685"/>
</kw>
<msg timestamp="20230923 10:03:59.685" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:03:51.923" endtime="20230923 10:03:59.685"/>
</kw>
<status status="PASS" starttime="20230923 10:03:51.922" endtime="20230923 10:03:59.685"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:03:59.690" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:03:59.693" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:03:59.693" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:03:59.687" endtime="20230923 10:03:59.693"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:03:59.695" level="INFO"/>
<status status="PASS" starttime="20230923 10:03:59.694" endtime="20230923 10:03:59.695"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:03:59.695" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:03:59.695" endtime="20230923 10:03:59.696"/>
</kw>
<status status="PASS" starttime="20230923 10:03:59.687" endtime="20230923 10:03:59.696"/>
</kw>
<msg timestamp="20230923 10:03:59.696" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:03:59.686" endtime="20230923 10:03:59.696"/>
</kw>
<status status="PASS" starttime="20230923 10:03:59.686" endtime="20230923 10:03:59.697"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:03:59.701" level="INFO">Running command 'ozone sh key info /98191-without-scheme/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")' 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:04:04.941" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:04:04.941" level="INFO">${output} = {
  "volumeName": "98191-without-scheme",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17289,
  "creationTime": "2023-09-23T10:03:49.248Z",
  "modificationTime": "2023-09-23T10:03:51.2...</msg>
<status status="PASS" starttime="20230923 10:03:59.699" endtime="20230923 10:04:04.941"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:04:04.943" level="INFO">{
  "volumeName": "98191-without-scheme",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17289,
  "creationTime": "2023-09-23T10:03:49.248Z",
  "modificationTime": "2023-09-23T10:03:51.236Z",
  "replicationConfig": {
    "replicationFactor": "THREE",
    "requiredNodes": 3,
    "replicationType": "RATIS"
  },
  "metadata": {},
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 111677748019200000,
      "length": 17289,
      "offset": 0,
      "keyOffset": 0
    }
  ],
  "file": true
}</msg>
<status status="PASS" starttime="20230923 10:04:04.942" endtime="20230923 10:04:04.943"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:04:04.944" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:04:04.943" endtime="20230923 10:04:04.944"/>
</kw>
<status status="PASS" starttime="20230923 10:03:59.698" endtime="20230923 10:04:04.944"/>
</kw>
<msg timestamp="20230923 10:04:04.944" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:03:59.698" endtime="20230923 10:04:04.944"/>
</kw>
<msg timestamp="20230923 10:04:04.944" level="INFO">${result} = {
  "volumeName": "98191-without-scheme",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17289,
  "creationTime": "2023-09-23T10:03:49.248Z",
  "modificationTime": "2023-09-23T10:03:51.2...</msg>
<status status="PASS" starttime="20230923 10:03:59.697" endtime="20230923 10:04:04.944"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:04:04.945" endtime="20230923 10:04:04.945"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:04:04.949" level="INFO">Running command 'ozone sh key delete /98191-without-scheme/bb1/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:04:10.943" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:04:10.943" level="INFO">${output} = Key moved inside Trash: /.Trash/testuser/Current/key1_RATIS </msg>
<status status="PASS" starttime="20230923 10:04:04.947" endtime="20230923 10:04:10.943"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:04:10.944" level="INFO">Key moved inside Trash: /.Trash/testuser/Current/key1_RATIS </msg>
<status status="PASS" starttime="20230923 10:04:10.943" endtime="20230923 10:04:10.944"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:04:10.945" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:04:10.945" endtime="20230923 10:04:10.945"/>
</kw>
<status status="PASS" starttime="20230923 10:04:04.946" endtime="20230923 10:04:10.945"/>
</kw>
<msg timestamp="20230923 10:04:10.946" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:04:04.946" endtime="20230923 10:04:10.946"/>
</kw>
<status status="PASS" starttime="20230923 10:04:04.945" endtime="20230923 10:04:10.946"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:04:10.951" level="INFO">Running command 'ozone sh key cp /98191-without-scheme/bb1 key1 key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:04:19.340" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:04:19.340" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:04:10.948" endtime="20230923 10:04:19.340"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:04:19.341" level="INFO"/>
<status status="PASS" starttime="20230923 10:04:19.341" endtime="20230923 10:04:19.341"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:04:19.342" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:04:19.342" endtime="20230923 10:04:19.342"/>
</kw>
<status status="PASS" starttime="20230923 10:04:10.947" endtime="20230923 10:04:19.343"/>
</kw>
<msg timestamp="20230923 10:04:19.343" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:04:10.947" endtime="20230923 10:04:19.343"/>
</kw>
<status status="PASS" starttime="20230923 10:04:10.946" endtime="20230923 10:04:19.343"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:04:19.347" level="INFO">Running command 'rm -f /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:04:19.351" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:04:19.351" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:04:19.345" endtime="20230923 10:04:19.351"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:04:19.352" level="INFO"/>
<status status="PASS" starttime="20230923 10:04:19.351" endtime="20230923 10:04:19.352"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:04:19.353" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:04:19.353" endtime="20230923 10:04:19.353"/>
</kw>
<status status="PASS" starttime="20230923 10:04:19.344" endtime="20230923 10:04:19.353"/>
</kw>
<msg timestamp="20230923 10:04:19.353" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:04:19.344" endtime="20230923 10:04:19.354"/>
</kw>
<status status="PASS" starttime="20230923 10:04:19.343" endtime="20230923 10:04:19.354"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:04:19.357" level="INFO">Running command 'ozone sh key get /98191-without-scheme/bb1/key1-copy /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:04:26.960" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:04:26.960" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:04:19.355" endtime="20230923 10:04:26.960"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:04:26.962" level="INFO"/>
<status status="PASS" starttime="20230923 10:04:26.961" endtime="20230923 10:04:26.962"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:04:26.962" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:04:26.962" endtime="20230923 10:04:26.962"/>
</kw>
<status status="PASS" starttime="20230923 10:04:19.355" endtime="20230923 10:04:26.963"/>
</kw>
<msg timestamp="20230923 10:04:26.963" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:04:19.354" endtime="20230923 10:04:26.963"/>
</kw>
<status status="PASS" starttime="20230923 10:04:19.354" endtime="20230923 10:04:26.963"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:04:26.968" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:04:26.971" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:04:26.971" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:04:26.965" endtime="20230923 10:04:26.971"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:04:26.972" level="INFO"/>
<status status="PASS" starttime="20230923 10:04:26.971" endtime="20230923 10:04:26.972"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:04:26.973" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:04:26.972" endtime="20230923 10:04:26.973"/>
</kw>
<status status="PASS" starttime="20230923 10:04:26.964" endtime="20230923 10:04:26.973"/>
</kw>
<msg timestamp="20230923 10:04:26.973" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:04:26.964" endtime="20230923 10:04:26.973"/>
</kw>
<status status="PASS" starttime="20230923 10:04:26.963" endtime="20230923 10:04:26.973"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:04:26.977" level="INFO">Running command 'ozone sh key delete /98191-without-scheme/bb1/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:04:32.450" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:04:32.450" level="INFO">${output} = Key moved inside Trash: /.Trash/testuser/Current/key1-copy </msg>
<status status="PASS" starttime="20230923 10:04:26.975" endtime="20230923 10:04:32.450"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:04:32.451" level="INFO">Key moved inside Trash: /.Trash/testuser/Current/key1-copy </msg>
<status status="PASS" starttime="20230923 10:04:32.450" endtime="20230923 10:04:32.451"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:04:32.452" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:04:32.452" endtime="20230923 10:04:32.452"/>
</kw>
<status status="PASS" starttime="20230923 10:04:26.974" endtime="20230923 10:04:32.453"/>
</kw>
<msg timestamp="20230923 10:04:32.453" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:04:26.974" endtime="20230923 10:04:32.453"/>
</kw>
<status status="PASS" starttime="20230923 10:04:26.973" endtime="20230923 10:04:32.453"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:04:32.457" level="INFO">Running command 'ozone sh key get /98191-without-scheme/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:04:37.989" level="INFO">${rc} = 255</msg>
<msg timestamp="20230923 10:04:37.989" level="INFO">${output} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20230923 10:04:32.454" endtime="20230923 10:04:37.989"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:04:37.990" level="INFO">/tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20230923 10:04:37.989" endtime="20230923 10:04:37.990"/>
</kw>
<msg timestamp="20230923 10:04:37.991" level="INFO">${result} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20230923 10:04:32.453" endtime="20230923 10:04:37.991"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:04:37.991" endtime="20230923 10:04:37.991"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:04:37.996" level="INFO">Running command 'ozone sh key get --force /98191-without-scheme/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:04:45.461" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:04:45.461" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:04:37.993" endtime="20230923 10:04:45.461"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:04:45.462" level="INFO"/>
<status status="PASS" starttime="20230923 10:04:45.461" endtime="20230923 10:04:45.462"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:04:45.463" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:04:45.462" endtime="20230923 10:04:45.463"/>
</kw>
<status status="PASS" starttime="20230923 10:04:37.993" endtime="20230923 10:04:45.463"/>
</kw>
<msg timestamp="20230923 10:04:45.463" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:04:37.992" endtime="20230923 10:04:45.463"/>
</kw>
<msg timestamp="20230923 10:04:45.464" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230923 10:04:37.991" endtime="20230923 10:04:45.464"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:04:45.464" endtime="20230923 10:04:45.464"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:04:45.469" level="INFO">Running command 'ozone sh key info /98191-without-scheme/bb1/key1 | jq -r '. | select(.name=="key1")' 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:04:51.184" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:04:51.184" level="INFO">${output} = {
  "volumeName": "98191-without-scheme",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17289,
  "creationTime": "2023-09-23T10:03:33.901Z",
  "modificationTime": "2023-09-23T10:03:35.674Z",
...</msg>
<status status="PASS" starttime="20230923 10:04:45.466" endtime="20230923 10:04:51.185"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:04:51.186" level="INFO">{
  "volumeName": "98191-without-scheme",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17289,
  "creationTime": "2023-09-23T10:03:33.901Z",
  "modificationTime": "2023-09-23T10:03:35.674Z",
  "replicationConfig": {
    "replicationFactor": "THREE",
    "requiredNodes": 3,
    "replicationType": "RATIS"
  },
  "metadata": {},
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 111677748019200000,
      "length": 17289,
      "offset": 0,
      "keyOffset": 0
    }
  ],
  "file": true
}</msg>
<status status="PASS" starttime="20230923 10:04:51.185" endtime="20230923 10:04:51.186"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:04:51.187" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:04:51.186" endtime="20230923 10:04:51.187"/>
</kw>
<status status="PASS" starttime="20230923 10:04:45.466" endtime="20230923 10:04:51.187"/>
</kw>
<msg timestamp="20230923 10:04:51.188" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:04:45.465" endtime="20230923 10:04:51.188"/>
</kw>
<msg timestamp="20230923 10:04:51.188" level="INFO">${result} = {
  "volumeName": "98191-without-scheme",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17289,
  "creationTime": "2023-09-23T10:03:33.901Z",
  "modificationTime": "2023-09-23T10:03:35.674Z",
...</msg>
<status status="PASS" starttime="20230923 10:04:45.464" endtime="20230923 10:04:51.188"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:04:51.188" endtime="20230923 10:04:51.189"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.[] | select(.name=="key1") | .name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:04:51.193" level="INFO">Running command 'ozone sh key list /98191-without-scheme/bb1 | jq -r '.[] | select(.name=="key1") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:04:57.287" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:04:57.287" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20230923 10:04:51.191" endtime="20230923 10:04:57.287"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:04:57.288" level="INFO">key1</msg>
<status status="PASS" starttime="20230923 10:04:57.288" endtime="20230923 10:04:57.288"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:04:57.289" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:04:57.289" endtime="20230923 10:04:57.289"/>
</kw>
<status status="PASS" starttime="20230923 10:04:51.190" endtime="20230923 10:04:57.289"/>
</kw>
<msg timestamp="20230923 10:04:57.289" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:04:51.190" endtime="20230923 10:04:57.290"/>
</kw>
<msg timestamp="20230923 10:04:57.290" level="INFO">${result} = key1</msg>
<status status="PASS" starttime="20230923 10:04:51.189" endtime="20230923 10:04:57.290"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230923 10:04:57.290" endtime="20230923 10:04:57.290"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:04:57.295" level="INFO">Running command 'ozone sh key rename /98191-without-scheme/bb1 key1 key2 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:05:02.484" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:05:02.484" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:04:57.292" endtime="20230923 10:05:02.484"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:05:02.486" level="INFO"/>
<status status="PASS" starttime="20230923 10:05:02.485" endtime="20230923 10:05:02.486"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:05:02.487" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:05:02.486" endtime="20230923 10:05:02.487"/>
</kw>
<status status="PASS" starttime="20230923 10:04:57.291" endtime="20230923 10:05:02.487"/>
</kw>
<msg timestamp="20230923 10:05:02.487" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:04:57.291" endtime="20230923 10:05:02.487"/>
</kw>
<status status="PASS" starttime="20230923 10:04:57.291" endtime="20230923 10:05:02.488"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.[] | select(.name=="key2") | .name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:05:02.493" level="INFO">Running command 'ozone sh key list /98191-without-scheme/bb1 | jq -r '.[] | select(.name=="key2") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:05:08.391" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:05:08.391" level="INFO">${output} = key2</msg>
<status status="PASS" starttime="20230923 10:05:02.490" endtime="20230923 10:05:08.391"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:05:08.393" level="INFO">key2</msg>
<status status="PASS" starttime="20230923 10:05:08.392" endtime="20230923 10:05:08.393"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:05:08.393" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:05:08.393" endtime="20230923 10:05:08.394"/>
</kw>
<status status="PASS" starttime="20230923 10:05:02.490" endtime="20230923 10:05:08.394"/>
</kw>
<msg timestamp="20230923 10:05:08.394" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:05:02.489" endtime="20230923 10:05:08.394"/>
</kw>
<msg timestamp="20230923 10:05:08.394" level="INFO">${result} = key2</msg>
<status status="PASS" starttime="20230923 10:05:02.488" endtime="20230923 10:05:08.394"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230923 10:05:08.394" endtime="20230923 10:05:08.395"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:05:08.399" level="INFO">Running command 'ozone sh key delete /98191-without-scheme/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:05:13.969" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:05:13.969" level="INFO">${output} = Key moved inside Trash: /.Trash/testuser/Current/key2 </msg>
<status status="PASS" starttime="20230923 10:05:08.397" endtime="20230923 10:05:13.969"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:05:13.970" level="INFO">Key moved inside Trash: /.Trash/testuser/Current/key2 </msg>
<status status="PASS" starttime="20230923 10:05:13.969" endtime="20230923 10:05:13.970"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:05:13.971" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:05:13.971" endtime="20230923 10:05:13.971"/>
</kw>
<status status="PASS" starttime="20230923 10:05:08.396" endtime="20230923 10:05:13.971"/>
</kw>
<msg timestamp="20230923 10:05:13.972" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:05:08.396" endtime="20230923 10:05:13.972"/>
</kw>
<status status="PASS" starttime="20230923 10:05:08.395" endtime="20230923 10:05:13.972"/>
</kw>
<status status="PASS" starttime="20230923 10:03:28.438" endtime="20230923 10:05:13.972"/>
</kw>
<status status="PASS" starttime="20230923 10:03:28.437" endtime="20230923 10:05:13.972"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --space-quota ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:05:13.977" level="INFO">Running command 'ozone sh volume clrquota --space-quota /98191-without-scheme 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:05:19.184" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:05:19.184" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:05:13.974" endtime="20230923 10:05:19.184"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:05:19.186" level="INFO"/>
<status status="PASS" starttime="20230923 10:05:19.185" endtime="20230923 10:05:19.186"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:05:19.187" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:05:19.186" endtime="20230923 10:05:19.187"/>
</kw>
<status status="PASS" starttime="20230923 10:05:13.974" endtime="20230923 10:05:19.187"/>
</kw>
<msg timestamp="20230923 10:05:19.187" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:05:13.973" endtime="20230923 10:05:19.187"/>
</kw>
<status status="PASS" starttime="20230923 10:05:13.972" endtime="20230923 10:05:19.187"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:05:19.192" level="INFO">Running command 'ozone sh volume info /98191-without-scheme | jq -r '. | select(.name=="98191-without-scheme") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:05:25.368" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:05:25.368" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20230923 10:05:19.189" endtime="20230923 10:05:25.368"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:05:25.370" level="INFO">-1</msg>
<status status="PASS" starttime="20230923 10:05:25.369" endtime="20230923 10:05:25.370"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:05:25.370" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:05:25.370" endtime="20230923 10:05:25.371"/>
</kw>
<status status="PASS" starttime="20230923 10:05:19.189" endtime="20230923 10:05:25.371"/>
</kw>
<msg timestamp="20230923 10:05:25.371" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:05:19.188" endtime="20230923 10:05:25.371"/>
</kw>
<msg timestamp="20230923 10:05:25.371" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20230923 10:05:19.188" endtime="20230923 10:05:25.371"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230923 10:05:25.371" endtime="20230923 10:05:25.372"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --namespace-quota ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:05:25.377" level="INFO">Running command 'ozone sh volume clrquota --namespace-quota /98191-without-scheme 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:05:30.942" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:05:30.942" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:05:25.374" endtime="20230923 10:05:30.942"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:05:30.943" level="INFO"/>
<status status="PASS" starttime="20230923 10:05:30.943" endtime="20230923 10:05:30.944"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:05:30.945" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:05:30.944" endtime="20230923 10:05:30.945"/>
</kw>
<status status="PASS" starttime="20230923 10:05:25.373" endtime="20230923 10:05:30.945"/>
</kw>
<msg timestamp="20230923 10:05:30.945" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:05:25.373" endtime="20230923 10:05:30.946"/>
</kw>
<status status="PASS" starttime="20230923 10:05:25.372" endtime="20230923 10:05:30.946"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:05:30.951" level="INFO">Running command 'ozone sh volume info /98191-without-scheme | jq -r '. | select(.name=="98191-without-scheme") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:05:36.517" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:05:36.517" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20230923 10:05:30.948" endtime="20230923 10:05:36.517"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:05:36.519" level="INFO">-1</msg>
<status status="PASS" starttime="20230923 10:05:36.518" endtime="20230923 10:05:36.519"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:05:36.519" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:05:36.519" endtime="20230923 10:05:36.520"/>
</kw>
<status status="PASS" starttime="20230923 10:05:30.947" endtime="20230923 10:05:36.520"/>
</kw>
<msg timestamp="20230923 10:05:36.520" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:05:30.947" endtime="20230923 10:05:36.520"/>
</kw>
<msg timestamp="20230923 10:05:36.520" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20230923 10:05:30.946" endtime="20230923 10:05:36.520"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230923 10:05:36.520" endtime="20230923 10:05:36.521"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --space-quota ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:05:36.525" level="INFO">Running command 'ozone sh bucket clrquota --space-quota /98191-without-scheme/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:05:42.129" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:05:42.129" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:05:36.522" endtime="20230923 10:05:42.129"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:05:42.131" level="INFO"/>
<status status="PASS" starttime="20230923 10:05:42.130" endtime="20230923 10:05:42.131"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:05:42.131" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:05:42.131" endtime="20230923 10:05:42.132"/>
</kw>
<status status="PASS" starttime="20230923 10:05:36.522" endtime="20230923 10:05:42.132"/>
</kw>
<msg timestamp="20230923 10:05:42.132" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:05:36.522" endtime="20230923 10:05:42.132"/>
</kw>
<status status="PASS" starttime="20230923 10:05:36.521" endtime="20230923 10:05:42.132"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:05:42.137" level="INFO">Running command 'ozone sh bucket info /98191-without-scheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:05:48.055" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:05:48.055" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20230923 10:05:42.135" endtime="20230923 10:05:48.055"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:05:48.057" level="INFO">-1</msg>
<status status="PASS" starttime="20230923 10:05:48.056" endtime="20230923 10:05:48.057"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:05:48.058" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:05:48.057" endtime="20230923 10:05:48.058"/>
</kw>
<status status="PASS" starttime="20230923 10:05:42.134" endtime="20230923 10:05:48.058"/>
</kw>
<msg timestamp="20230923 10:05:48.058" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:05:42.134" endtime="20230923 10:05:48.059"/>
</kw>
<msg timestamp="20230923 10:05:48.059" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20230923 10:05:42.133" endtime="20230923 10:05:48.059"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230923 10:05:48.059" endtime="20230923 10:05:48.059"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --namespace-quota ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:05:48.064" level="INFO">Running command 'ozone sh bucket clrquota --namespace-quota /98191-without-scheme/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:05:53.384" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:05:53.384" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:05:48.061" endtime="20230923 10:05:53.384"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:05:53.386" level="INFO"/>
<status status="PASS" starttime="20230923 10:05:53.385" endtime="20230923 10:05:53.386"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:05:53.387" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:05:53.386" endtime="20230923 10:05:53.387"/>
</kw>
<status status="PASS" starttime="20230923 10:05:48.061" endtime="20230923 10:05:53.387"/>
</kw>
<msg timestamp="20230923 10:05:53.387" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:05:48.060" endtime="20230923 10:05:53.387"/>
</kw>
<status status="PASS" starttime="20230923 10:05:48.060" endtime="20230923 10:05:53.387"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:05:53.392" level="INFO">Running command 'ozone sh bucket info /98191-without-scheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:05:58.907" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:05:58.907" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20230923 10:05:53.390" endtime="20230923 10:05:58.908"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:05:58.909" level="INFO">-1</msg>
<status status="PASS" starttime="20230923 10:05:58.908" endtime="20230923 10:05:58.909"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:05:58.910" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:05:58.909" endtime="20230923 10:05:58.910"/>
</kw>
<status status="PASS" starttime="20230923 10:05:53.389" endtime="20230923 10:05:58.910"/>
</kw>
<msg timestamp="20230923 10:05:58.910" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:05:53.388" endtime="20230923 10:05:58.911"/>
</kw>
<msg timestamp="20230923 10:05:58.911" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20230923 10:05:53.387" endtime="20230923 10:05:58.911"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230923 10:05:58.911" endtime="20230923 10:05:58.911"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete -r --yes ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:05:58.916" level="INFO">Running command 'ozone sh bucket delete -r --yes /98191-without-scheme/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:06:05.049" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:06:05.049" level="INFO">${output} = Bucket bb1 is deleted</msg>
<status status="PASS" starttime="20230923 10:05:58.913" endtime="20230923 10:06:05.049"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:06:05.051" level="INFO">Bucket bb1 is deleted</msg>
<status status="PASS" starttime="20230923 10:06:05.050" endtime="20230923 10:06:05.051"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:06:05.051" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:06:05.051" endtime="20230923 10:06:05.051"/>
</kw>
<status status="PASS" starttime="20230923 10:05:58.913" endtime="20230923 10:06:05.052"/>
</kw>
<msg timestamp="20230923 10:06:05.052" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:05:58.912" endtime="20230923 10:06:05.052"/>
</kw>
<status status="PASS" starttime="20230923 10:05:58.912" endtime="20230923 10:06:05.052"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:06:05.056" level="INFO">Running command 'ozone sh volume delete /98191-without-scheme 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:06:10.464" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:06:10.464" level="INFO">${output} = Volume 98191-without-scheme is deleted</msg>
<status status="PASS" starttime="20230923 10:06:05.054" endtime="20230923 10:06:10.464"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:06:10.466" level="INFO">Volume 98191-without-scheme is deleted</msg>
<status status="PASS" starttime="20230923 10:06:10.465" endtime="20230923 10:06:10.466"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:06:10.467" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:06:10.466" endtime="20230923 10:06:10.467"/>
</kw>
<status status="PASS" starttime="20230923 10:06:05.053" endtime="20230923 10:06:10.467"/>
</kw>
<msg timestamp="20230923 10:06:10.467" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:06:05.053" endtime="20230923 10:06:10.467"/>
</kw>
<status status="PASS" starttime="20230923 10:06:05.052" endtime="20230923 10:06:10.468"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:06:10.472" level="INFO">Running command 'ozone sh volume create /98191-without-scheme 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:06:15.897" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:06:15.897" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:06:10.470" endtime="20230923 10:06:15.897"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:06:15.899" level="INFO"/>
<status status="PASS" starttime="20230923 10:06:15.898" endtime="20230923 10:06:15.899"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:06:15.899" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:06:15.899" endtime="20230923 10:06:15.899"/>
</kw>
<status status="PASS" starttime="20230923 10:06:10.469" endtime="20230923 10:06:15.900"/>
</kw>
<msg timestamp="20230923 10:06:15.900" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:06:10.469" endtime="20230923 10:06:15.900"/>
</kw>
<status status="PASS" starttime="20230923 10:06:10.468" endtime="20230923 10:06:15.900"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume info ${protocol}${server}/${volume} &gt; volume.json</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:06:15.905" level="INFO">Running command 'ozone sh volume info /98191-without-scheme &gt; volume.json'.</msg>
<msg timestamp="20230923 10:06:21.632" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:06:21.632" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:06:15.902" endtime="20230923 10:06:21.632"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:06:21.634" level="INFO"/>
<status status="PASS" starttime="20230923 10:06:21.633" endtime="20230923 10:06:21.634"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:06:21.635" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:06:21.634" endtime="20230923 10:06:21.635"/>
</kw>
<status status="PASS" starttime="20230923 10:06:15.901" endtime="20230923 10:06:21.635"/>
</kw>
<msg timestamp="20230923 10:06:21.635" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:06:15.901" endtime="20230923 10:06:21.635"/>
</kw>
<status status="PASS" starttime="20230923 10:06:15.900" endtime="20230923 10:06:21.635"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>jq -r '. | select(.name=="${volume}") | .quotaInBytes' volume.json</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:06:21.640" level="INFO">Running command 'jq -r '. | select(.name=="98191-without-scheme") | .quotaInBytes' volume.json 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:06:21.683" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:06:21.683" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20230923 10:06:21.638" endtime="20230923 10:06:21.684"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:06:21.685" level="INFO">-1</msg>
<status status="PASS" starttime="20230923 10:06:21.684" endtime="20230923 10:06:21.685"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:06:21.685" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:06:21.685" endtime="20230923 10:06:21.686"/>
</kw>
<status status="PASS" starttime="20230923 10:06:21.637" endtime="20230923 10:06:21.686"/>
</kw>
<msg timestamp="20230923 10:06:21.686" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:06:21.636" endtime="20230923 10:06:21.686"/>
</kw>
<msg timestamp="20230923 10:06:21.686" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20230923 10:06:21.636" endtime="20230923 10:06:21.686"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230923 10:06:21.686" endtime="20230923 10:06:21.687"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>jq -r '. | select(.name=="${volume}") | .quotaInNamespace' volume.json</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:06:21.690" level="INFO">Running command 'jq -r '. | select(.name=="98191-without-scheme") | .quotaInNamespace' volume.json 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:06:21.741" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:06:21.741" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20230923 10:06:21.688" endtime="20230923 10:06:21.741"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:06:21.742" level="INFO">-1</msg>
<status status="PASS" starttime="20230923 10:06:21.742" endtime="20230923 10:06:21.742"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:06:21.743" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:06:21.743" endtime="20230923 10:06:21.743"/>
</kw>
<status status="PASS" starttime="20230923 10:06:21.688" endtime="20230923 10:06:21.743"/>
</kw>
<msg timestamp="20230923 10:06:21.743" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:06:21.688" endtime="20230923 10:06:21.744"/>
</kw>
<msg timestamp="20230923 10:06:21.744" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20230923 10:06:21.687" endtime="20230923 10:06:21.744"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230923 10:06:21.744" endtime="20230923 10:06:21.744"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:06:21.749" level="INFO">Running command 'ozone sh bucket create /98191-without-scheme/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:06:27.786" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:06:27.786" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:06:21.746" endtime="20230923 10:06:27.786"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:06:27.788" level="INFO"/>
<status status="PASS" starttime="20230923 10:06:27.787" endtime="20230923 10:06:27.788"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:06:27.789" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:06:27.788" endtime="20230923 10:06:27.789"/>
</kw>
<status status="PASS" starttime="20230923 10:06:21.745" endtime="20230923 10:06:27.789"/>
</kw>
<msg timestamp="20230923 10:06:27.789" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:06:21.745" endtime="20230923 10:06:27.789"/>
</kw>
<status status="PASS" starttime="20230923 10:06:21.745" endtime="20230923 10:06:27.790"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 &gt; bb1.json</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:06:27.794" level="INFO">Running command 'ozone sh bucket info /98191-without-scheme/bb1 &gt; bb1.json'.</msg>
<msg timestamp="20230923 10:06:33.333" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:06:33.333" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:06:27.791" endtime="20230923 10:06:33.333"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:06:33.335" level="INFO"/>
<status status="PASS" starttime="20230923 10:06:33.334" endtime="20230923 10:06:33.335"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:06:33.336" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:06:33.335" endtime="20230923 10:06:33.336"/>
</kw>
<status status="PASS" starttime="20230923 10:06:27.791" endtime="20230923 10:06:33.336"/>
</kw>
<msg timestamp="20230923 10:06:33.336" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:06:27.791" endtime="20230923 10:06:33.336"/>
</kw>
<status status="PASS" starttime="20230923 10:06:27.790" endtime="20230923 10:06:33.336"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>jq -r '. | select(.name=="bb1") | .quotaInBytes' bb1.json</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:06:33.341" level="INFO">Running command 'jq -r '. | select(.name=="bb1") | .quotaInBytes' bb1.json 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:06:33.386" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:06:33.386" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20230923 10:06:33.338" endtime="20230923 10:06:33.386"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:06:33.387" level="INFO">-1</msg>
<status status="PASS" starttime="20230923 10:06:33.386" endtime="20230923 10:06:33.387"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:06:33.388" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:06:33.387" endtime="20230923 10:06:33.388"/>
</kw>
<status status="PASS" starttime="20230923 10:06:33.338" endtime="20230923 10:06:33.388"/>
</kw>
<msg timestamp="20230923 10:06:33.388" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:06:33.337" endtime="20230923 10:06:33.388"/>
</kw>
<msg timestamp="20230923 10:06:33.388" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20230923 10:06:33.337" endtime="20230923 10:06:33.388"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230923 10:06:33.389" endtime="20230923 10:06:33.389"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>jq -r '. | select(.name=="bb1") | .quotaInNamespace' bb1.json</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:06:33.393" level="INFO">Running command 'jq -r '. | select(.name=="bb1") | .quotaInNamespace' bb1.json 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:06:33.436" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:06:33.436" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20230923 10:06:33.390" endtime="20230923 10:06:33.436"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:06:33.437" level="INFO">-1</msg>
<status status="PASS" starttime="20230923 10:06:33.436" endtime="20230923 10:06:33.437"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:06:33.438" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:06:33.437" endtime="20230923 10:06:33.438"/>
</kw>
<status status="PASS" starttime="20230923 10:06:33.390" endtime="20230923 10:06:33.438"/>
</kw>
<msg timestamp="20230923 10:06:33.438" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:06:33.390" endtime="20230923 10:06:33.438"/>
</kw>
<msg timestamp="20230923 10:06:33.438" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20230923 10:06:33.389" endtime="20230923 10:06:33.438"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230923 10:06:33.439" endtime="20230923 10:06:33.439"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:06:33.443" level="INFO">Running command 'ozone sh bucket delete /98191-without-scheme/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:06:39.130" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:06:39.131" level="INFO">${output} = Bucket bb1 is deleted</msg>
<status status="PASS" starttime="20230923 10:06:33.441" endtime="20230923 10:06:39.131"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:06:39.132" level="INFO">Bucket bb1 is deleted</msg>
<status status="PASS" starttime="20230923 10:06:39.131" endtime="20230923 10:06:39.132"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:06:39.133" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:06:39.133" endtime="20230923 10:06:39.133"/>
</kw>
<status status="PASS" starttime="20230923 10:06:33.440" endtime="20230923 10:06:39.134"/>
</kw>
<msg timestamp="20230923 10:06:39.134" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:06:33.440" endtime="20230923 10:06:39.134"/>
</kw>
<status status="PASS" starttime="20230923 10:06:33.439" endtime="20230923 10:06:39.134"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:06:39.139" level="INFO">Running command 'ozone sh volume delete /98191-without-scheme 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:06:44.746" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:06:44.746" level="INFO">${output} = Volume 98191-without-scheme is deleted</msg>
<status status="PASS" starttime="20230923 10:06:39.136" endtime="20230923 10:06:44.747"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:06:44.748" level="INFO">Volume 98191-without-scheme is deleted</msg>
<status status="PASS" starttime="20230923 10:06:44.747" endtime="20230923 10:06:44.748"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:06:44.749" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:06:44.749" endtime="20230923 10:06:44.749"/>
</kw>
<status status="PASS" starttime="20230923 10:06:39.136" endtime="20230923 10:06:44.750"/>
</kw>
<msg timestamp="20230923 10:06:44.750" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:06:39.135" endtime="20230923 10:06:44.750"/>
</kw>
<status status="PASS" starttime="20230923 10:06:39.134" endtime="20230923 10:06:44.750"/>
</kw>
<status status="PASS" starttime="20230923 10:02:30.535" endtime="20230923 10:06:44.750"/>
</kw>
<timeout value="10 minutes"/>
<status status="PASS" starttime="20230923 10:02:30.535" endtime="20230923 10:06:44.750"/>
</test>
<doc>Test ozone shell CLI usage</doc>
<status status="PASS" starttime="20230923 10:02:30.502" endtime="20230923 10:06:44.751"/>
</suite>
<suite id="s1-s4-s5" name="Ozone-Shell" source="/opt/hadoop/smoketest/basic/ozone-shell.robot">
<kw name="Generate prefix" library="ozone-shell-lib" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230923 10:06:44.762" level="INFO">${random} = 84532</msg>
<status status="PASS" starttime="20230923 10:06:44.762" endtime="20230923 10:06:44.762"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${prefix}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230923 10:06:44.763" level="INFO">${prefix} = 84532</msg>
<status status="PASS" starttime="20230923 10:06:44.763" endtime="20230923 10:06:44.763"/>
</kw>
<status status="PASS" starttime="20230923 10:06:44.762" endtime="20230923 10:06:44.763"/>
</kw>
<test id="s1-s4-s5-t1" name="RpcClient with port" line="26">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:06:44.769" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:06:44.773" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:06:44.773" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230923 10:06:44.767" endtime="20230923 10:06:44.773"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:06:44.775" level="INFO">scm</msg>
<status status="PASS" starttime="20230923 10:06:44.774" endtime="20230923 10:06:44.775"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:06:44.775" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:06:44.775" endtime="20230923 10:06:44.776"/>
</kw>
<status status="PASS" starttime="20230923 10:06:44.766" endtime="20230923 10:06:44.776"/>
</kw>
<msg timestamp="20230923 10:06:44.776" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:06:44.766" endtime="20230923 10:06:44.776"/>
</kw>
<msg timestamp="20230923 10:06:44.776" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230923 10:06:44.766" endtime="20230923 10:06:44.776"/>
</kw>
<msg timestamp="20230923 10:06:44.777" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230923 10:06:44.765" endtime="20230923 10:06:44.777"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230923 10:06:44.777" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230923 10:06:44.777" endtime="20230923 10:06:44.777"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:06:44.782" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:06:44.850" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:06:44.850" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:06:44.780" endtime="20230923 10:06:44.850"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:06:44.852" level="INFO"/>
<status status="PASS" starttime="20230923 10:06:44.851" endtime="20230923 10:06:44.852"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:06:44.852" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:06:44.852" endtime="20230923 10:06:44.853"/>
</kw>
<status status="PASS" starttime="20230923 10:06:44.779" endtime="20230923 10:06:44.853"/>
</kw>
<msg timestamp="20230923 10:06:44.853" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:06:44.779" endtime="20230923 10:06:44.853"/>
</kw>
<status status="PASS" starttime="20230923 10:06:44.778" endtime="20230923 10:06:44.853"/>
</kw>
<status status="PASS" starttime="20230923 10:06:44.777" endtime="20230923 10:06:44.853"/>
</kw>
<status status="PASS" starttime="20230923 10:06:44.765" endtime="20230923 10:06:44.853"/>
</kw>
<status status="PASS" starttime="20230923 10:06:44.764" endtime="20230923 10:06:44.853"/>
</kw>
<kw name="Test ozone shell" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-with-host</arg>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:06:44.858" level="INFO">Running command 'ozone sh volume info o3://om:9862/84532-with-host 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:06:50.497" level="INFO">${rc} = 255</msg>
<msg timestamp="20230923 10:06:50.497" level="INFO">${output} = VOLUME_NOT_FOUND Volume 84532-with-host is not found</msg>
<status status="PASS" starttime="20230923 10:06:44.855" endtime="20230923 10:06:50.497"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:06:50.499" level="INFO">VOLUME_NOT_FOUND Volume 84532-with-host is not found</msg>
<status status="PASS" starttime="20230923 10:06:50.498" endtime="20230923 10:06:50.499"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:06:50.499" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:06:50.499" endtime="20230923 10:06:50.500"/>
</kw>
<msg timestamp="20230923 10:06:50.500" level="INFO">${result} = VOLUME_NOT_FOUND Volume 84532-with-host is not found</msg>
<status status="PASS" starttime="20230923 10:06:44.854" endtime="20230923 10:06:50.500"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:06:50.500" endtime="20230923 10:06:50.501"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:06:50.505" level="INFO">Running command 'ozone sh volume create o3://om:9862/84532-with-host --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:06:55.781" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:06:55.781" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:06:50.503" endtime="20230923 10:06:55.781"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:06:55.782" level="INFO"/>
<status status="PASS" starttime="20230923 10:06:55.781" endtime="20230923 10:06:55.782"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:06:55.783" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:06:55.783" endtime="20230923 10:06:55.783"/>
</kw>
<status status="PASS" starttime="20230923 10:06:50.502" endtime="20230923 10:06:55.783"/>
</kw>
<msg timestamp="20230923 10:06:55.784" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:06:50.502" endtime="20230923 10:06:55.784"/>
</kw>
<msg timestamp="20230923 10:06:55.784" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230923 10:06:50.501" endtime="20230923 10:06:55.784"/>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<arg>${result}</arg>
<doc>Verifies that the given item is empty.</doc>
<msg timestamp="20230923 10:06:55.784" level="INFO">Length is 0</msg>
<status status="PASS" starttime="20230923 10:06:55.784" endtime="20230923 10:06:55.785"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '.[] | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:06:55.789" level="INFO">Running command 'ozone sh volume list o3://om:9862/ | jq -r '.[] | select(.name=="84532-with-host")' 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:07:01.741" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:07:01.741" level="INFO">${output} = {
  "metadata": {},
  "name": "84532-with-host",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "20...</msg>
<status status="PASS" starttime="20230923 10:06:55.787" endtime="20230923 10:07:01.741"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:07:01.743" level="INFO">{
  "metadata": {},
  "name": "84532-with-host",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2023-09-23T10:06:55.694Z",
  "modificationTime": "2023-09-23T10:06:55.694Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "refCount": 0
}</msg>
<status status="PASS" starttime="20230923 10:07:01.742" endtime="20230923 10:07:01.743"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:07:01.744" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:07:01.743" endtime="20230923 10:07:01.744"/>
</kw>
<status status="PASS" starttime="20230923 10:06:55.786" endtime="20230923 10:07:01.744"/>
</kw>
<msg timestamp="20230923 10:07:01.744" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:06:55.786" endtime="20230923 10:07:01.744"/>
</kw>
<msg timestamp="20230923 10:07:01.745" level="INFO">${result} = {
  "metadata": {},
  "name": "84532-with-host",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "20...</msg>
<status status="PASS" starttime="20230923 10:06:55.785" endtime="20230923 10:07:01.745"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:07:01.745" endtime="20230923 10:07:01.745"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:07:01.751" level="INFO">Running command 'ozone sh volume setquota o3://om:9862/84532-with-host --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:07:06.962" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:07:06.962" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:07:01.747" endtime="20230923 10:07:06.963"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:07:06.964" level="INFO"/>
<status status="PASS" starttime="20230923 10:07:06.963" endtime="20230923 10:07:06.964"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:07:06.965" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:07:06.965" endtime="20230923 10:07:06.965"/>
</kw>
<status status="PASS" starttime="20230923 10:07:01.747" endtime="20230923 10:07:06.965"/>
</kw>
<msg timestamp="20230923 10:07:06.966" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:07:01.746" endtime="20230923 10:07:06.966"/>
</kw>
<status status="PASS" starttime="20230923 10:07:01.746" endtime="20230923 10:07:06.966"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:07:06.971" level="INFO">Running command 'ozone sh volume info o3://om:9862/84532-with-host | jq -r '. | select(.name=="84532-with-host") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:07:12.997" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:07:12.997" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20230923 10:07:06.968" endtime="20230923 10:07:12.997"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:07:12.998" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20230923 10:07:12.998" endtime="20230923 10:07:12.998"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:07:12.999" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:07:12.999" endtime="20230923 10:07:12.999"/>
</kw>
<status status="PASS" starttime="20230923 10:07:06.967" endtime="20230923 10:07:12.999"/>
</kw>
<msg timestamp="20230923 10:07:13.000" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:07:06.967" endtime="20230923 10:07:13.000"/>
</kw>
<msg timestamp="20230923 10:07:13.000" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20230923 10:07:06.966" endtime="20230923 10:07:13.000"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230923 10:07:13.000" endtime="20230923 10:07:13.001"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:07:13.005" level="INFO">Running command 'ozone sh bucket create o3://om:9862/84532-with-host/bb1 --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:07:18.117" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:07:18.117" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:07:13.002" endtime="20230923 10:07:18.117"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:07:18.118" level="INFO"/>
<status status="PASS" starttime="20230923 10:07:18.117" endtime="20230923 10:07:18.119"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:07:18.119" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:07:18.119" endtime="20230923 10:07:18.119"/>
</kw>
<status status="PASS" starttime="20230923 10:07:13.002" endtime="20230923 10:07:18.120"/>
</kw>
<msg timestamp="20230923 10:07:18.120" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:07:13.001" endtime="20230923 10:07:18.120"/>
</kw>
<msg timestamp="20230923 10:07:18.120" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230923 10:07:13.001" endtime="20230923 10:07:18.120"/>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<arg>${result}</arg>
<doc>Verifies that the given item is empty.</doc>
<msg timestamp="20230923 10:07:18.121" level="INFO">Length is 0</msg>
<status status="PASS" starttime="20230923 10:07:18.120" endtime="20230923 10:07:18.121"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 &gt; bb1.json</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:07:18.126" level="INFO">Running command 'ozone sh bucket info o3://om:9862/84532-with-host/bb1 &gt; bb1.json'.</msg>
<msg timestamp="20230923 10:07:24.288" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:07:24.288" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:07:18.123" endtime="20230923 10:07:24.288"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:07:24.290" level="INFO"/>
<status status="PASS" starttime="20230923 10:07:24.289" endtime="20230923 10:07:24.290"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:07:24.290" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:07:24.290" endtime="20230923 10:07:24.290"/>
</kw>
<status status="PASS" starttime="20230923 10:07:18.122" endtime="20230923 10:07:24.291"/>
</kw>
<msg timestamp="20230923 10:07:24.291" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:07:18.122" endtime="20230923 10:07:24.291"/>
</kw>
<status status="PASS" starttime="20230923 10:07:18.121" endtime="20230923 10:07:24.291"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>jq -r '. | select(.name=="bb1") | .storageType' bb1.json</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:07:24.296" level="INFO">Running command 'jq -r '. | select(.name=="bb1") | .storageType' bb1.json 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:07:24.345" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:07:24.345" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20230923 10:07:24.293" endtime="20230923 10:07:24.345"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:07:24.347" level="INFO">DISK</msg>
<status status="PASS" starttime="20230923 10:07:24.346" endtime="20230923 10:07:24.347"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:07:24.347" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:07:24.347" endtime="20230923 10:07:24.347"/>
</kw>
<status status="PASS" starttime="20230923 10:07:24.292" endtime="20230923 10:07:24.348"/>
</kw>
<msg timestamp="20230923 10:07:24.348" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:07:24.292" endtime="20230923 10:07:24.348"/>
</kw>
<msg timestamp="20230923 10:07:24.348" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20230923 10:07:24.291" endtime="20230923 10:07:24.348"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>DISK</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230923 10:07:24.348" endtime="20230923 10:07:24.349"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>jq -r '. | select(.name=="bb1") | .quotaInBytes' bb1.json</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:07:24.354" level="INFO">Running command 'jq -r '. | select(.name=="bb1") | .quotaInBytes' bb1.json 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:07:24.402" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:07:24.403" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20230923 10:07:24.352" endtime="20230923 10:07:24.403"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:07:24.404" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20230923 10:07:24.403" endtime="20230923 10:07:24.404"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:07:24.405" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:07:24.404" endtime="20230923 10:07:24.405"/>
</kw>
<status status="PASS" starttime="20230923 10:07:24.351" endtime="20230923 10:07:24.405"/>
</kw>
<msg timestamp="20230923 10:07:24.405" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:07:24.350" endtime="20230923 10:07:24.405"/>
</kw>
<msg timestamp="20230923 10:07:24.405" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20230923 10:07:24.349" endtime="20230923 10:07:24.406"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230923 10:07:24.406" endtime="20230923 10:07:24.406"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>jq -r '. | select(.name=="bb1") | .quotaInNamespace' bb1.json</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:07:24.410" level="INFO">Running command 'jq -r '. | select(.name=="bb1") | .quotaInNamespace' bb1.json 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:07:24.455" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:07:24.455" level="INFO">${output} = 100</msg>
<status status="PASS" starttime="20230923 10:07:24.408" endtime="20230923 10:07:24.455"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:07:24.456" level="INFO">100</msg>
<status status="PASS" starttime="20230923 10:07:24.456" endtime="20230923 10:07:24.456"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:07:24.457" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:07:24.457" endtime="20230923 10:07:24.457"/>
</kw>
<status status="PASS" starttime="20230923 10:07:24.407" endtime="20230923 10:07:24.458"/>
</kw>
<msg timestamp="20230923 10:07:24.458" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:07:24.407" endtime="20230923 10:07:24.458"/>
</kw>
<msg timestamp="20230923 10:07:24.458" level="INFO">${result} = 100</msg>
<status status="PASS" starttime="20230923 10:07:24.406" endtime="20230923 10:07:24.458"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>100</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230923 10:07:24.458" endtime="20230923 10:07:24.459"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:07:24.463" level="INFO">Running command 'ozone sh bucket setquota o3://om:9862/84532-with-host/bb1 --space-quota 1TB --namespace-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:07:30.465" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:07:30.465" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:07:24.460" endtime="20230923 10:07:30.465"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:07:30.467" level="INFO"/>
<status status="PASS" starttime="20230923 10:07:30.466" endtime="20230923 10:07:30.467"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:07:30.467" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:07:30.467" endtime="20230923 10:07:30.468"/>
</kw>
<status status="PASS" starttime="20230923 10:07:24.460" endtime="20230923 10:07:30.468"/>
</kw>
<msg timestamp="20230923 10:07:30.468" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:07:24.460" endtime="20230923 10:07:30.468"/>
</kw>
<status status="PASS" starttime="20230923 10:07:24.459" endtime="20230923 10:07:30.468"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 &gt; bb1.json</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:07:30.472" level="INFO">Running command 'ozone sh bucket info o3://om:9862/84532-with-host/bb1 &gt; bb1.json'.</msg>
<msg timestamp="20230923 10:07:36.293" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:07:36.293" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:07:30.470" endtime="20230923 10:07:36.293"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:07:36.294" level="INFO"/>
<status status="PASS" starttime="20230923 10:07:36.294" endtime="20230923 10:07:36.294"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:07:36.295" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:07:36.295" endtime="20230923 10:07:36.295"/>
</kw>
<status status="PASS" starttime="20230923 10:07:30.469" endtime="20230923 10:07:36.295"/>
</kw>
<msg timestamp="20230923 10:07:36.296" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:07:30.469" endtime="20230923 10:07:36.296"/>
</kw>
<status status="PASS" starttime="20230923 10:07:30.468" endtime="20230923 10:07:36.296"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>jq -r '. | select(.name=="bb1") | .quotaInBytes' bb1.json</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:07:36.301" level="INFO">Running command 'jq -r '. | select(.name=="bb1") | .quotaInBytes' bb1.json 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:07:36.359" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:07:36.359" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" starttime="20230923 10:07:36.298" endtime="20230923 10:07:36.359"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:07:36.360" level="INFO">1099511627776</msg>
<status status="PASS" starttime="20230923 10:07:36.359" endtime="20230923 10:07:36.360"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:07:36.361" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:07:36.361" endtime="20230923 10:07:36.361"/>
</kw>
<status status="PASS" starttime="20230923 10:07:36.297" endtime="20230923 10:07:36.361"/>
</kw>
<msg timestamp="20230923 10:07:36.361" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:07:36.297" endtime="20230923 10:07:36.362"/>
</kw>
<msg timestamp="20230923 10:07:36.362" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" starttime="20230923 10:07:36.296" endtime="20230923 10:07:36.362"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1099511627776</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230923 10:07:36.362" endtime="20230923 10:07:36.362"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>jq -r '. | select(.name=="bb1") | .quotaInNamespace' bb1.json</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:07:36.367" level="INFO">Running command 'jq -r '. | select(.name=="bb1") | .quotaInNamespace' bb1.json 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:07:36.415" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:07:36.415" level="INFO">${output} = 1000</msg>
<status status="PASS" starttime="20230923 10:07:36.364" endtime="20230923 10:07:36.415"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:07:36.417" level="INFO">1000</msg>
<status status="PASS" starttime="20230923 10:07:36.416" endtime="20230923 10:07:36.417"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:07:36.418" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:07:36.417" endtime="20230923 10:07:36.418"/>
</kw>
<status status="PASS" starttime="20230923 10:07:36.363" endtime="20230923 10:07:36.418"/>
</kw>
<msg timestamp="20230923 10:07:36.418" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:07:36.363" endtime="20230923 10:07:36.418"/>
</kw>
<msg timestamp="20230923 10:07:36.418" level="INFO">${result} = 1000</msg>
<status status="PASS" starttime="20230923 10:07:36.363" endtime="20230923 10:07:36.418"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1000</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230923 10:07:36.419" endtime="20230923 10:07:36.419"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '.[] | select(.name=="bb1") | .volumeName'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:07:36.424" level="INFO">Running command 'ozone sh bucket list o3://om:9862/84532-with-host/ | jq -r '.[] | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:07:42.453" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:07:42.453" level="INFO">${output} = 84532-with-host</msg>
<status status="PASS" starttime="20230923 10:07:36.421" endtime="20230923 10:07:42.453"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:07:42.455" level="INFO">84532-with-host</msg>
<status status="PASS" starttime="20230923 10:07:42.454" endtime="20230923 10:07:42.455"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:07:42.455" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:07:42.455" endtime="20230923 10:07:42.456"/>
</kw>
<status status="PASS" starttime="20230923 10:07:36.421" endtime="20230923 10:07:42.456"/>
</kw>
<msg timestamp="20230923 10:07:42.456" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:07:36.420" endtime="20230923 10:07:42.456"/>
</kw>
<msg timestamp="20230923 10:07:42.456" level="INFO">${result} = 84532-with-host</msg>
<status status="PASS" starttime="20230923 10:07:36.419" endtime="20230923 10:07:42.456"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${volume}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230923 10:07:42.456" endtime="20230923 10:07:42.457"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Test key handling" library="ozone-shell-lib">
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:07:42.463" level="INFO">Running command 'ozone sh key put o3://om:9862/84532-with-host/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:07:50.773" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:07:50.774" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:07:42.460" endtime="20230923 10:07:50.774"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:07:50.775" level="INFO"/>
<status status="PASS" starttime="20230923 10:07:50.774" endtime="20230923 10:07:50.775"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:07:50.776" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:07:50.775" endtime="20230923 10:07:50.776"/>
</kw>
<status status="PASS" starttime="20230923 10:07:42.459" endtime="20230923 10:07:50.776"/>
</kw>
<msg timestamp="20230923 10:07:50.776" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:07:42.459" endtime="20230923 10:07:50.776"/>
</kw>
<status status="PASS" starttime="20230923 10:07:42.458" endtime="20230923 10:07:50.777"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:07:50.781" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:07:50.785" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:07:50.785" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:07:50.778" endtime="20230923 10:07:50.785"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:07:50.786" level="INFO"/>
<status status="PASS" starttime="20230923 10:07:50.785" endtime="20230923 10:07:50.786"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:07:50.787" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:07:50.786" endtime="20230923 10:07:50.787"/>
</kw>
<status status="PASS" starttime="20230923 10:07:50.778" endtime="20230923 10:07:50.787"/>
</kw>
<msg timestamp="20230923 10:07:50.787" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:07:50.777" endtime="20230923 10:07:50.787"/>
</kw>
<status status="PASS" starttime="20230923 10:07:50.777" endtime="20230923 10:07:50.787"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:07:50.792" level="INFO">Running command 'ozone sh key get o3://om:9862/84532-with-host/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:07:58.575" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:07:58.575" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:07:50.789" endtime="20230923 10:07:58.575"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:07:58.577" level="INFO"/>
<status status="PASS" starttime="20230923 10:07:58.576" endtime="20230923 10:07:58.577"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:07:58.578" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:07:58.578" endtime="20230923 10:07:58.578"/>
</kw>
<status status="PASS" starttime="20230923 10:07:50.789" endtime="20230923 10:07:58.579"/>
</kw>
<msg timestamp="20230923 10:07:58.579" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:07:50.788" endtime="20230923 10:07:58.579"/>
</kw>
<status status="PASS" starttime="20230923 10:07:50.788" endtime="20230923 10:07:58.579"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:07:58.583" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:07:58.586" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:07:58.587" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:07:58.581" endtime="20230923 10:07:58.587"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:07:58.588" level="INFO"/>
<status status="PASS" starttime="20230923 10:07:58.587" endtime="20230923 10:07:58.588"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:07:58.589" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:07:58.588" endtime="20230923 10:07:58.589"/>
</kw>
<status status="PASS" starttime="20230923 10:07:58.580" endtime="20230923 10:07:58.589"/>
</kw>
<msg timestamp="20230923 10:07:58.589" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:07:58.580" endtime="20230923 10:07:58.589"/>
</kw>
<status status="PASS" starttime="20230923 10:07:58.579" endtime="20230923 10:07:58.589"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:07:58.593" level="INFO">Running command 'ozone sh key put -t RATIS o3://om:9862/84532-with-host/bb1/key1_RATIS /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:08:06.509" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:08:06.509" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:07:58.591" endtime="20230923 10:08:06.509"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:08:06.511" level="INFO"/>
<status status="PASS" starttime="20230923 10:08:06.510" endtime="20230923 10:08:06.511"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:08:06.512" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:08:06.511" endtime="20230923 10:08:06.512"/>
</kw>
<status status="PASS" starttime="20230923 10:07:58.590" endtime="20230923 10:08:06.512"/>
</kw>
<msg timestamp="20230923 10:08:06.512" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:07:58.590" endtime="20230923 10:08:06.512"/>
</kw>
<status status="PASS" starttime="20230923 10:07:58.589" endtime="20230923 10:08:06.512"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1_RATIS</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:08:06.517" level="INFO">Running command 'rm -f /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:08:06.520" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:08:06.520" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:08:06.514" endtime="20230923 10:08:06.520"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:08:06.521" level="INFO"/>
<status status="PASS" starttime="20230923 10:08:06.520" endtime="20230923 10:08:06.521"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:08:06.522" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:08:06.521" endtime="20230923 10:08:06.522"/>
</kw>
<status status="PASS" starttime="20230923 10:08:06.513" endtime="20230923 10:08:06.522"/>
</kw>
<msg timestamp="20230923 10:08:06.522" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:08:06.513" endtime="20230923 10:08:06.523"/>
</kw>
<status status="PASS" starttime="20230923 10:08:06.512" endtime="20230923 10:08:06.523"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:08:06.528" level="INFO">Running command 'ozone sh key get o3://om:9862/84532-with-host/bb1/key1_RATIS /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:08:14.168" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:08:14.168" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:08:06.525" endtime="20230923 10:08:14.168"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:08:14.169" level="INFO"/>
<status status="PASS" starttime="20230923 10:08:14.168" endtime="20230923 10:08:14.169"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:08:14.170" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:08:14.170" endtime="20230923 10:08:14.170"/>
</kw>
<status status="PASS" starttime="20230923 10:08:06.524" endtime="20230923 10:08:14.170"/>
</kw>
<msg timestamp="20230923 10:08:14.171" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:08:06.524" endtime="20230923 10:08:14.171"/>
</kw>
<status status="PASS" starttime="20230923 10:08:06.523" endtime="20230923 10:08:14.171"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:08:14.175" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:08:14.178" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:08:14.178" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:08:14.172" endtime="20230923 10:08:14.178"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:08:14.179" level="INFO"/>
<status status="PASS" starttime="20230923 10:08:14.179" endtime="20230923 10:08:14.179"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:08:14.180" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:08:14.180" endtime="20230923 10:08:14.180"/>
</kw>
<status status="PASS" starttime="20230923 10:08:14.172" endtime="20230923 10:08:14.180"/>
</kw>
<msg timestamp="20230923 10:08:14.180" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:08:14.172" endtime="20230923 10:08:14.180"/>
</kw>
<status status="PASS" starttime="20230923 10:08:14.171" endtime="20230923 10:08:14.181"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:08:14.185" level="INFO">Running command 'ozone sh key info o3://om:9862/84532-with-host/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")' 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:08:19.827" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:08:19.827" level="INFO">${output} = {
  "volumeName": "84532-with-host",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17289,
  "creationTime": "2023-09-23T10:08:03.949Z",
  "modificationTime": "2023-09-23T10:08:05.899Z",...</msg>
<status status="PASS" starttime="20230923 10:08:14.183" endtime="20230923 10:08:19.827"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:08:19.828" level="INFO">{
  "volumeName": "84532-with-host",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17289,
  "creationTime": "2023-09-23T10:08:03.949Z",
  "modificationTime": "2023-09-23T10:08:05.899Z",
  "replicationConfig": {
    "replicationFactor": "THREE",
    "requiredNodes": 3,
    "replicationType": "RATIS"
  },
  "metadata": {},
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 111677748019200020,
      "length": 17289,
      "offset": 0,
      "keyOffset": 0
    }
  ],
  "file": true
}</msg>
<status status="PASS" starttime="20230923 10:08:19.828" endtime="20230923 10:08:19.829"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:08:19.829" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:08:19.829" endtime="20230923 10:08:19.829"/>
</kw>
<status status="PASS" starttime="20230923 10:08:14.182" endtime="20230923 10:08:19.830"/>
</kw>
<msg timestamp="20230923 10:08:19.830" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:08:14.182" endtime="20230923 10:08:19.830"/>
</kw>
<msg timestamp="20230923 10:08:19.830" level="INFO">${result} = {
  "volumeName": "84532-with-host",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17289,
  "creationTime": "2023-09-23T10:08:03.949Z",
  "modificationTime": "2023-09-23T10:08:05.899Z",...</msg>
<status status="PASS" starttime="20230923 10:08:14.181" endtime="20230923 10:08:19.830"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:08:19.830" endtime="20230923 10:08:19.831"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:08:19.836" level="INFO">Running command 'ozone sh key delete o3://om:9862/84532-with-host/bb1/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:08:25.522" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:08:25.522" level="INFO">${output} = Key moved inside Trash: /.Trash/testuser/Current/key1_RATIS </msg>
<status status="PASS" starttime="20230923 10:08:19.833" endtime="20230923 10:08:25.522"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:08:25.524" level="INFO">Key moved inside Trash: /.Trash/testuser/Current/key1_RATIS </msg>
<status status="PASS" starttime="20230923 10:08:25.523" endtime="20230923 10:08:25.524"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:08:25.525" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:08:25.524" endtime="20230923 10:08:25.525"/>
</kw>
<status status="PASS" starttime="20230923 10:08:19.832" endtime="20230923 10:08:25.525"/>
</kw>
<msg timestamp="20230923 10:08:25.525" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:08:19.832" endtime="20230923 10:08:25.525"/>
</kw>
<status status="PASS" starttime="20230923 10:08:19.831" endtime="20230923 10:08:25.525"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:08:25.530" level="INFO">Running command 'ozone sh key cp o3://om:9862/84532-with-host/bb1 key1 key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:08:33.964" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:08:33.965" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:08:25.527" endtime="20230923 10:08:33.965"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:08:33.966" level="INFO"/>
<status status="PASS" starttime="20230923 10:08:33.965" endtime="20230923 10:08:33.966"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:08:33.967" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:08:33.966" endtime="20230923 10:08:33.967"/>
</kw>
<status status="PASS" starttime="20230923 10:08:25.527" endtime="20230923 10:08:33.967"/>
</kw>
<msg timestamp="20230923 10:08:33.967" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:08:25.526" endtime="20230923 10:08:33.967"/>
</kw>
<status status="PASS" starttime="20230923 10:08:25.526" endtime="20230923 10:08:33.968"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:08:33.973" level="INFO">Running command 'rm -f /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:08:33.976" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:08:33.976" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:08:33.970" endtime="20230923 10:08:33.976"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:08:33.977" level="INFO"/>
<status status="PASS" starttime="20230923 10:08:33.977" endtime="20230923 10:08:33.977"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:08:33.978" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:08:33.978" endtime="20230923 10:08:33.978"/>
</kw>
<status status="PASS" starttime="20230923 10:08:33.969" endtime="20230923 10:08:33.978"/>
</kw>
<msg timestamp="20230923 10:08:33.979" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:08:33.968" endtime="20230923 10:08:33.979"/>
</kw>
<status status="PASS" starttime="20230923 10:08:33.968" endtime="20230923 10:08:33.979"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:08:33.983" level="INFO">Running command 'ozone sh key get o3://om:9862/84532-with-host/bb1/key1-copy /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:08:41.038" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:08:41.038" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:08:33.980" endtime="20230923 10:08:41.038"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:08:41.039" level="INFO"/>
<status status="PASS" starttime="20230923 10:08:41.039" endtime="20230923 10:08:41.040"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:08:41.040" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:08:41.040" endtime="20230923 10:08:41.041"/>
</kw>
<status status="PASS" starttime="20230923 10:08:33.980" endtime="20230923 10:08:41.041"/>
</kw>
<msg timestamp="20230923 10:08:41.041" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:08:33.980" endtime="20230923 10:08:41.041"/>
</kw>
<status status="PASS" starttime="20230923 10:08:33.979" endtime="20230923 10:08:41.041"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:08:41.046" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:08:41.050" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:08:41.050" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:08:41.043" endtime="20230923 10:08:41.050"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:08:41.051" level="INFO"/>
<status status="PASS" starttime="20230923 10:08:41.051" endtime="20230923 10:08:41.051"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:08:41.052" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:08:41.052" endtime="20230923 10:08:41.052"/>
</kw>
<status status="PASS" starttime="20230923 10:08:41.042" endtime="20230923 10:08:41.052"/>
</kw>
<msg timestamp="20230923 10:08:41.052" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:08:41.042" endtime="20230923 10:08:41.053"/>
</kw>
<status status="PASS" starttime="20230923 10:08:41.041" endtime="20230923 10:08:41.053"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:08:41.057" level="INFO">Running command 'ozone sh key delete o3://om:9862/84532-with-host/bb1/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:08:46.496" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:08:46.496" level="INFO">${output} = Key moved inside Trash: /.Trash/testuser/Current/key1-copy </msg>
<status status="PASS" starttime="20230923 10:08:41.054" endtime="20230923 10:08:46.496"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:08:46.497" level="INFO">Key moved inside Trash: /.Trash/testuser/Current/key1-copy </msg>
<status status="PASS" starttime="20230923 10:08:46.496" endtime="20230923 10:08:46.497"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:08:46.498" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:08:46.497" endtime="20230923 10:08:46.498"/>
</kw>
<status status="PASS" starttime="20230923 10:08:41.054" endtime="20230923 10:08:46.498"/>
</kw>
<msg timestamp="20230923 10:08:46.498" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:08:41.054" endtime="20230923 10:08:46.498"/>
</kw>
<status status="PASS" starttime="20230923 10:08:41.053" endtime="20230923 10:08:46.499"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:08:46.502" level="INFO">Running command 'ozone sh key get o3://om:9862/84532-with-host/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:08:51.998" level="INFO">${rc} = 255</msg>
<msg timestamp="20230923 10:08:51.998" level="INFO">${output} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20230923 10:08:46.499" endtime="20230923 10:08:51.998"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:08:52.000" level="INFO">/tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20230923 10:08:51.999" endtime="20230923 10:08:52.000"/>
</kw>
<msg timestamp="20230923 10:08:52.000" level="INFO">${result} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20230923 10:08:46.499" endtime="20230923 10:08:52.000"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:08:52.000" endtime="20230923 10:08:52.001"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:08:52.006" level="INFO">Running command 'ozone sh key get --force o3://om:9862/84532-with-host/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:09:00.014" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:09:00.014" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:08:52.003" endtime="20230923 10:09:00.015"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:09:00.017" level="INFO"/>
<status status="PASS" starttime="20230923 10:09:00.015" endtime="20230923 10:09:00.017"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:09:00.017" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:09:00.017" endtime="20230923 10:09:00.017"/>
</kw>
<status status="PASS" starttime="20230923 10:08:52.002" endtime="20230923 10:09:00.018"/>
</kw>
<msg timestamp="20230923 10:09:00.018" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:08:52.002" endtime="20230923 10:09:00.018"/>
</kw>
<msg timestamp="20230923 10:09:00.018" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230923 10:08:52.001" endtime="20230923 10:09:00.018"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:09:00.018" endtime="20230923 10:09:00.019"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:09:00.024" level="INFO">Running command 'ozone sh key info o3://om:9862/84532-with-host/bb1/key1 | jq -r '. | select(.name=="key1")' 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:09:05.721" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:09:05.721" level="INFO">${output} = {
  "volumeName": "84532-with-host",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17289,
  "creationTime": "2023-09-23T10:07:48.108Z",
  "modificationTime": "2023-09-23T10:07:50.252Z",
  "re...</msg>
<status status="PASS" starttime="20230923 10:09:00.021" endtime="20230923 10:09:05.721"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:09:05.722" level="INFO">{
  "volumeName": "84532-with-host",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17289,
  "creationTime": "2023-09-23T10:07:48.108Z",
  "modificationTime": "2023-09-23T10:07:50.252Z",
  "replicationConfig": {
    "replicationFactor": "THREE",
    "requiredNodes": 3,
    "replicationType": "RATIS"
  },
  "metadata": {},
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 111677748019200020,
      "length": 17289,
      "offset": 0,
      "keyOffset": 0
    }
  ],
  "file": true
}</msg>
<status status="PASS" starttime="20230923 10:09:05.721" endtime="20230923 10:09:05.722"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:09:05.723" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:09:05.723" endtime="20230923 10:09:05.723"/>
</kw>
<status status="PASS" starttime="20230923 10:09:00.021" endtime="20230923 10:09:05.723"/>
</kw>
<msg timestamp="20230923 10:09:05.724" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:09:00.020" endtime="20230923 10:09:05.724"/>
</kw>
<msg timestamp="20230923 10:09:05.724" level="INFO">${result} = {
  "volumeName": "84532-with-host",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17289,
  "creationTime": "2023-09-23T10:07:48.108Z",
  "modificationTime": "2023-09-23T10:07:50.252Z",
  "re...</msg>
<status status="PASS" starttime="20230923 10:09:00.019" endtime="20230923 10:09:05.724"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:09:05.724" endtime="20230923 10:09:05.725"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.[] | select(.name=="key1") | .name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:09:05.729" level="INFO">Running command 'ozone sh key list o3://om:9862/84532-with-host/bb1 | jq -r '.[] | select(.name=="key1") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:09:12.458" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:09:12.458" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20230923 10:09:05.727" endtime="20230923 10:09:12.459"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:09:12.460" level="INFO">key1</msg>
<status status="PASS" starttime="20230923 10:09:12.459" endtime="20230923 10:09:12.460"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:09:12.461" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:09:12.460" endtime="20230923 10:09:12.461"/>
</kw>
<status status="PASS" starttime="20230923 10:09:05.726" endtime="20230923 10:09:12.461"/>
</kw>
<msg timestamp="20230923 10:09:12.461" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:09:05.726" endtime="20230923 10:09:12.462"/>
</kw>
<msg timestamp="20230923 10:09:12.462" level="INFO">${result} = key1</msg>
<status status="PASS" starttime="20230923 10:09:05.725" endtime="20230923 10:09:12.462"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230923 10:09:12.462" endtime="20230923 10:09:12.462"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:09:12.467" level="INFO">Running command 'ozone sh key rename o3://om:9862/84532-with-host/bb1 key1 key2 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:09:18.188" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:09:18.188" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:09:12.464" endtime="20230923 10:09:18.188"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:09:18.189" level="INFO"/>
<status status="PASS" starttime="20230923 10:09:18.189" endtime="20230923 10:09:18.190"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:09:18.190" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:09:18.190" endtime="20230923 10:09:18.190"/>
</kw>
<status status="PASS" starttime="20230923 10:09:12.464" endtime="20230923 10:09:18.191"/>
</kw>
<msg timestamp="20230923 10:09:18.191" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:09:12.463" endtime="20230923 10:09:18.191"/>
</kw>
<status status="PASS" starttime="20230923 10:09:12.463" endtime="20230923 10:09:18.191"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.[] | select(.name=="key2") | .name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:09:18.196" level="INFO">Running command 'ozone sh key list o3://om:9862/84532-with-host/bb1 | jq -r '.[] | select(.name=="key2") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:09:24.640" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:09:24.640" level="INFO">${output} = key2</msg>
<status status="PASS" starttime="20230923 10:09:18.193" endtime="20230923 10:09:24.640"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:09:24.642" level="INFO">key2</msg>
<status status="PASS" starttime="20230923 10:09:24.641" endtime="20230923 10:09:24.642"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:09:24.642" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:09:24.642" endtime="20230923 10:09:24.643"/>
</kw>
<status status="PASS" starttime="20230923 10:09:18.193" endtime="20230923 10:09:24.643"/>
</kw>
<msg timestamp="20230923 10:09:24.643" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:09:18.192" endtime="20230923 10:09:24.643"/>
</kw>
<msg timestamp="20230923 10:09:24.643" level="INFO">${result} = key2</msg>
<status status="PASS" starttime="20230923 10:09:18.191" endtime="20230923 10:09:24.643"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230923 10:09:24.644" endtime="20230923 10:09:24.644"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:09:24.650" level="INFO">Running command 'ozone sh key delete o3://om:9862/84532-with-host/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:09:30.825" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:09:30.825" level="INFO">${output} = Key moved inside Trash: /.Trash/testuser/Current/key2 </msg>
<status status="PASS" starttime="20230923 10:09:24.647" endtime="20230923 10:09:30.825"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:09:30.827" level="INFO">Key moved inside Trash: /.Trash/testuser/Current/key2 </msg>
<status status="PASS" starttime="20230923 10:09:30.826" endtime="20230923 10:09:30.827"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:09:30.828" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:09:30.827" endtime="20230923 10:09:30.828"/>
</kw>
<status status="PASS" starttime="20230923 10:09:24.646" endtime="20230923 10:09:30.828"/>
</kw>
<msg timestamp="20230923 10:09:30.828" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:09:24.645" endtime="20230923 10:09:30.828"/>
</kw>
<status status="PASS" starttime="20230923 10:09:24.644" endtime="20230923 10:09:30.828"/>
</kw>
<status status="PASS" starttime="20230923 10:07:42.458" endtime="20230923 10:09:30.828"/>
</kw>
<status status="PASS" starttime="20230923 10:07:42.457" endtime="20230923 10:09:30.829"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --space-quota ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:09:30.833" level="INFO">Running command 'ozone sh volume clrquota --space-quota o3://om:9862/84532-with-host 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:09:36.621" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:09:36.621" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:09:30.830" endtime="20230923 10:09:36.621"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:09:36.622" level="INFO"/>
<status status="PASS" starttime="20230923 10:09:36.621" endtime="20230923 10:09:36.622"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:09:36.623" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:09:36.622" endtime="20230923 10:09:36.623"/>
</kw>
<status status="PASS" starttime="20230923 10:09:30.830" endtime="20230923 10:09:36.623"/>
</kw>
<msg timestamp="20230923 10:09:36.623" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:09:30.829" endtime="20230923 10:09:36.623"/>
</kw>
<status status="PASS" starttime="20230923 10:09:30.829" endtime="20230923 10:09:36.624"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:09:36.628" level="INFO">Running command 'ozone sh volume info o3://om:9862/84532-with-host | jq -r '. | select(.name=="84532-with-host") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:09:42.661" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:09:42.661" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20230923 10:09:36.626" endtime="20230923 10:09:42.661"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:09:42.662" level="INFO">-1</msg>
<status status="PASS" starttime="20230923 10:09:42.661" endtime="20230923 10:09:42.662"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:09:42.663" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:09:42.663" endtime="20230923 10:09:42.663"/>
</kw>
<status status="PASS" starttime="20230923 10:09:36.625" endtime="20230923 10:09:42.664"/>
</kw>
<msg timestamp="20230923 10:09:42.664" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:09:36.625" endtime="20230923 10:09:42.664"/>
</kw>
<msg timestamp="20230923 10:09:42.664" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20230923 10:09:36.624" endtime="20230923 10:09:42.664"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230923 10:09:42.664" endtime="20230923 10:09:42.665"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --namespace-quota ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:09:42.670" level="INFO">Running command 'ozone sh volume clrquota --namespace-quota o3://om:9862/84532-with-host 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:09:48.154" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:09:48.154" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:09:42.667" endtime="20230923 10:09:48.154"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:09:48.155" level="INFO"/>
<status status="PASS" starttime="20230923 10:09:48.154" endtime="20230923 10:09:48.155"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:09:48.156" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:09:48.156" endtime="20230923 10:09:48.156"/>
</kw>
<status status="PASS" starttime="20230923 10:09:42.666" endtime="20230923 10:09:48.156"/>
</kw>
<msg timestamp="20230923 10:09:48.157" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:09:42.666" endtime="20230923 10:09:48.157"/>
</kw>
<status status="PASS" starttime="20230923 10:09:42.665" endtime="20230923 10:09:48.157"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:09:48.162" level="INFO">Running command 'ozone sh volume info o3://om:9862/84532-with-host | jq -r '. | select(.name=="84532-with-host") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:09:54.278" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:09:54.279" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20230923 10:09:48.159" endtime="20230923 10:09:54.279"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:09:54.280" level="INFO">-1</msg>
<status status="PASS" starttime="20230923 10:09:54.279" endtime="20230923 10:09:54.280"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:09:54.281" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:09:54.280" endtime="20230923 10:09:54.281"/>
</kw>
<status status="PASS" starttime="20230923 10:09:48.158" endtime="20230923 10:09:54.281"/>
</kw>
<msg timestamp="20230923 10:09:54.281" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:09:48.158" endtime="20230923 10:09:54.281"/>
</kw>
<msg timestamp="20230923 10:09:54.282" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20230923 10:09:48.157" endtime="20230923 10:09:54.282"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230923 10:09:54.282" endtime="20230923 10:09:54.282"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --space-quota ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:09:54.287" level="INFO">Running command 'ozone sh bucket clrquota --space-quota o3://om:9862/84532-with-host/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:09:59.984" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:09:59.984" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:09:54.284" endtime="20230923 10:09:59.984"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:09:59.986" level="INFO"/>
<status status="PASS" starttime="20230923 10:09:59.985" endtime="20230923 10:09:59.986"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:09:59.987" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:09:59.986" endtime="20230923 10:09:59.987"/>
</kw>
<status status="PASS" starttime="20230923 10:09:54.284" endtime="20230923 10:09:59.987"/>
</kw>
<msg timestamp="20230923 10:09:59.987" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:09:54.284" endtime="20230923 10:09:59.987"/>
</kw>
<status status="PASS" starttime="20230923 10:09:54.282" endtime="20230923 10:09:59.988"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:09:59.993" level="INFO">Running command 'ozone sh bucket info o3://om:9862/84532-with-host/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:10:05.508" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:10:05.509" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20230923 10:09:59.990" endtime="20230923 10:10:05.509"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:10:05.510" level="INFO">-1</msg>
<status status="PASS" starttime="20230923 10:10:05.509" endtime="20230923 10:10:05.510"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:10:05.511" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:10:05.510" endtime="20230923 10:10:05.511"/>
</kw>
<status status="PASS" starttime="20230923 10:09:59.989" endtime="20230923 10:10:05.512"/>
</kw>
<msg timestamp="20230923 10:10:05.512" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:09:59.989" endtime="20230923 10:10:05.512"/>
</kw>
<msg timestamp="20230923 10:10:05.512" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20230923 10:09:59.988" endtime="20230923 10:10:05.512"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230923 10:10:05.512" endtime="20230923 10:10:05.513"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --namespace-quota ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:10:05.517" level="INFO">Running command 'ozone sh bucket clrquota --namespace-quota o3://om:9862/84532-with-host/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:10:10.723" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:10:10.723" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:10:05.515" endtime="20230923 10:10:10.723"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:10:10.725" level="INFO"/>
<status status="PASS" starttime="20230923 10:10:10.724" endtime="20230923 10:10:10.725"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:10:10.725" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:10:10.725" endtime="20230923 10:10:10.726"/>
</kw>
<status status="PASS" starttime="20230923 10:10:05.514" endtime="20230923 10:10:10.726"/>
</kw>
<msg timestamp="20230923 10:10:10.726" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:10:05.514" endtime="20230923 10:10:10.726"/>
</kw>
<status status="PASS" starttime="20230923 10:10:05.513" endtime="20230923 10:10:10.726"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:10:10.731" level="INFO">Running command 'ozone sh bucket info o3://om:9862/84532-with-host/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:10:16.289" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:10:16.289" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20230923 10:10:10.728" endtime="20230923 10:10:16.289"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:10:16.291" level="INFO">-1</msg>
<status status="PASS" starttime="20230923 10:10:16.290" endtime="20230923 10:10:16.291"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:10:16.292" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:10:16.291" endtime="20230923 10:10:16.292"/>
</kw>
<status status="PASS" starttime="20230923 10:10:10.727" endtime="20230923 10:10:16.292"/>
</kw>
<msg timestamp="20230923 10:10:16.292" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:10:10.727" endtime="20230923 10:10:16.292"/>
</kw>
<msg timestamp="20230923 10:10:16.292" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20230923 10:10:10.726" endtime="20230923 10:10:16.293"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230923 10:10:16.293" endtime="20230923 10:10:16.293"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete -r --yes ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:10:16.298" level="INFO">Running command 'ozone sh bucket delete -r --yes o3://om:9862/84532-with-host/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:10:22.177" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:10:22.177" level="INFO">${output} = Bucket bb1 is deleted</msg>
<status status="PASS" starttime="20230923 10:10:16.295" endtime="20230923 10:10:22.177"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:10:22.179" level="INFO">Bucket bb1 is deleted</msg>
<status status="PASS" starttime="20230923 10:10:22.178" endtime="20230923 10:10:22.179"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:10:22.179" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:10:22.179" endtime="20230923 10:10:22.180"/>
</kw>
<status status="PASS" starttime="20230923 10:10:16.295" endtime="20230923 10:10:22.180"/>
</kw>
<msg timestamp="20230923 10:10:22.180" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:10:16.294" endtime="20230923 10:10:22.180"/>
</kw>
<status status="PASS" starttime="20230923 10:10:16.293" endtime="20230923 10:10:22.180"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:10:22.185" level="INFO">Running command 'ozone sh volume delete o3://om:9862/84532-with-host 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:10:27.573" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:10:27.574" level="INFO">${output} = Volume 84532-with-host is deleted</msg>
<status status="PASS" starttime="20230923 10:10:22.182" endtime="20230923 10:10:27.574"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:10:27.575" level="INFO">Volume 84532-with-host is deleted</msg>
<status status="PASS" starttime="20230923 10:10:27.574" endtime="20230923 10:10:27.575"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:10:27.576" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:10:27.575" endtime="20230923 10:10:27.576"/>
</kw>
<status status="PASS" starttime="20230923 10:10:22.181" endtime="20230923 10:10:27.576"/>
</kw>
<msg timestamp="20230923 10:10:27.577" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:10:22.181" endtime="20230923 10:10:27.577"/>
</kw>
<status status="PASS" starttime="20230923 10:10:22.180" endtime="20230923 10:10:27.577"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:10:27.582" level="INFO">Running command 'ozone sh volume create o3://om:9862/84532-with-host 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:10:33.117" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:10:33.117" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:10:27.579" endtime="20230923 10:10:33.117"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:10:33.118" level="INFO"/>
<status status="PASS" starttime="20230923 10:10:33.117" endtime="20230923 10:10:33.118"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:10:33.119" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:10:33.119" endtime="20230923 10:10:33.119"/>
</kw>
<status status="PASS" starttime="20230923 10:10:27.578" endtime="20230923 10:10:33.119"/>
</kw>
<msg timestamp="20230923 10:10:33.120" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:10:27.578" endtime="20230923 10:10:33.120"/>
</kw>
<status status="PASS" starttime="20230923 10:10:27.577" endtime="20230923 10:10:33.120"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume info ${protocol}${server}/${volume} &gt; volume.json</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:10:33.125" level="INFO">Running command 'ozone sh volume info o3://om:9862/84532-with-host &gt; volume.json'.</msg>
<msg timestamp="20230923 10:10:39.057" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:10:39.057" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:10:33.122" endtime="20230923 10:10:39.057"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:10:39.059" level="INFO"/>
<status status="PASS" starttime="20230923 10:10:39.058" endtime="20230923 10:10:39.059"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:10:39.060" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:10:39.059" endtime="20230923 10:10:39.060"/>
</kw>
<status status="PASS" starttime="20230923 10:10:33.121" endtime="20230923 10:10:39.060"/>
</kw>
<msg timestamp="20230923 10:10:39.061" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:10:33.121" endtime="20230923 10:10:39.061"/>
</kw>
<status status="PASS" starttime="20230923 10:10:33.120" endtime="20230923 10:10:39.061"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>jq -r '. | select(.name=="${volume}") | .quotaInBytes' volume.json</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:10:39.065" level="INFO">Running command 'jq -r '. | select(.name=="84532-with-host") | .quotaInBytes' volume.json 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:10:39.107" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:10:39.107" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20230923 10:10:39.063" endtime="20230923 10:10:39.107"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:10:39.109" level="INFO">-1</msg>
<status status="PASS" starttime="20230923 10:10:39.108" endtime="20230923 10:10:39.109"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:10:39.109" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:10:39.109" endtime="20230923 10:10:39.109"/>
</kw>
<status status="PASS" starttime="20230923 10:10:39.062" endtime="20230923 10:10:39.110"/>
</kw>
<msg timestamp="20230923 10:10:39.110" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:10:39.062" endtime="20230923 10:10:39.110"/>
</kw>
<msg timestamp="20230923 10:10:39.110" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20230923 10:10:39.061" endtime="20230923 10:10:39.110"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230923 10:10:39.110" endtime="20230923 10:10:39.111"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>jq -r '. | select(.name=="${volume}") | .quotaInNamespace' volume.json</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:10:39.115" level="INFO">Running command 'jq -r '. | select(.name=="84532-with-host") | .quotaInNamespace' volume.json 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:10:39.158" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:10:39.158" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20230923 10:10:39.113" endtime="20230923 10:10:39.158"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:10:39.160" level="INFO">-1</msg>
<status status="PASS" starttime="20230923 10:10:39.159" endtime="20230923 10:10:39.160"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:10:39.160" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:10:39.160" endtime="20230923 10:10:39.160"/>
</kw>
<status status="PASS" starttime="20230923 10:10:39.112" endtime="20230923 10:10:39.161"/>
</kw>
<msg timestamp="20230923 10:10:39.161" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:10:39.111" endtime="20230923 10:10:39.161"/>
</kw>
<msg timestamp="20230923 10:10:39.161" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20230923 10:10:39.111" endtime="20230923 10:10:39.161"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230923 10:10:39.161" endtime="20230923 10:10:39.162"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:10:39.166" level="INFO">Running command 'ozone sh bucket create o3://om:9862/84532-with-host/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:10:44.877" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:10:44.877" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:10:39.163" endtime="20230923 10:10:44.877"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:10:44.879" level="INFO"/>
<status status="PASS" starttime="20230923 10:10:44.878" endtime="20230923 10:10:44.879"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:10:44.879" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:10:44.879" endtime="20230923 10:10:44.880"/>
</kw>
<status status="PASS" starttime="20230923 10:10:39.163" endtime="20230923 10:10:44.880"/>
</kw>
<msg timestamp="20230923 10:10:44.880" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:10:39.162" endtime="20230923 10:10:44.880"/>
</kw>
<status status="PASS" starttime="20230923 10:10:39.162" endtime="20230923 10:10:44.880"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 &gt; bb1.json</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:10:44.885" level="INFO">Running command 'ozone sh bucket info o3://om:9862/84532-with-host/bb1 &gt; bb1.json'.</msg>
<msg timestamp="20230923 10:10:51.253" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:10:51.253" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:10:44.882" endtime="20230923 10:10:51.253"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:10:51.254" level="INFO"/>
<status status="PASS" starttime="20230923 10:10:51.254" endtime="20230923 10:10:51.255"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:10:51.255" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:10:51.255" endtime="20230923 10:10:51.255"/>
</kw>
<status status="PASS" starttime="20230923 10:10:44.882" endtime="20230923 10:10:51.256"/>
</kw>
<msg timestamp="20230923 10:10:51.256" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:10:44.881" endtime="20230923 10:10:51.256"/>
</kw>
<status status="PASS" starttime="20230923 10:10:44.881" endtime="20230923 10:10:51.256"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>jq -r '. | select(.name=="bb1") | .quotaInBytes' bb1.json</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:10:51.283" level="INFO">Running command 'jq -r '. | select(.name=="bb1") | .quotaInBytes' bb1.json 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:10:51.329" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:10:51.329" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20230923 10:10:51.258" endtime="20230923 10:10:51.329"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:10:51.331" level="INFO">-1</msg>
<status status="PASS" starttime="20230923 10:10:51.330" endtime="20230923 10:10:51.331"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:10:51.331" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:10:51.331" endtime="20230923 10:10:51.331"/>
</kw>
<status status="PASS" starttime="20230923 10:10:51.257" endtime="20230923 10:10:51.332"/>
</kw>
<msg timestamp="20230923 10:10:51.332" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:10:51.257" endtime="20230923 10:10:51.332"/>
</kw>
<msg timestamp="20230923 10:10:51.332" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20230923 10:10:51.256" endtime="20230923 10:10:51.332"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230923 10:10:51.332" endtime="20230923 10:10:51.333"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>jq -r '. | select(.name=="bb1") | .quotaInNamespace' bb1.json</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:10:51.337" level="INFO">Running command 'jq -r '. | select(.name=="bb1") | .quotaInNamespace' bb1.json 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:10:51.383" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:10:51.383" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20230923 10:10:51.335" endtime="20230923 10:10:51.383"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:10:51.385" level="INFO">-1</msg>
<status status="PASS" starttime="20230923 10:10:51.384" endtime="20230923 10:10:51.385"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:10:51.385" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:10:51.385" endtime="20230923 10:10:51.386"/>
</kw>
<status status="PASS" starttime="20230923 10:10:51.334" endtime="20230923 10:10:51.386"/>
</kw>
<msg timestamp="20230923 10:10:51.386" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:10:51.334" endtime="20230923 10:10:51.386"/>
</kw>
<msg timestamp="20230923 10:10:51.386" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20230923 10:10:51.333" endtime="20230923 10:10:51.386"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230923 10:10:51.386" endtime="20230923 10:10:51.387"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:10:51.394" level="INFO">Running command 'ozone sh bucket delete o3://om:9862/84532-with-host/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:10:56.833" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:10:56.833" level="INFO">${output} = Bucket bb1 is deleted</msg>
<status status="PASS" starttime="20230923 10:10:51.389" endtime="20230923 10:10:56.833"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:10:56.835" level="INFO">Bucket bb1 is deleted</msg>
<status status="PASS" starttime="20230923 10:10:56.834" endtime="20230923 10:10:56.835"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:10:56.835" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:10:56.835" endtime="20230923 10:10:56.836"/>
</kw>
<status status="PASS" starttime="20230923 10:10:51.389" endtime="20230923 10:10:56.836"/>
</kw>
<msg timestamp="20230923 10:10:56.836" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:10:51.388" endtime="20230923 10:10:56.836"/>
</kw>
<status status="PASS" starttime="20230923 10:10:51.387" endtime="20230923 10:10:56.836"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:10:56.841" level="INFO">Running command 'ozone sh volume delete o3://om:9862/84532-with-host 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:11:02.286" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:11:02.286" level="INFO">${output} = Volume 84532-with-host is deleted</msg>
<status status="PASS" starttime="20230923 10:10:56.838" endtime="20230923 10:11:02.286"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:11:02.287" level="INFO">Volume 84532-with-host is deleted</msg>
<status status="PASS" starttime="20230923 10:11:02.287" endtime="20230923 10:11:02.287"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:11:02.288" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:11:02.288" endtime="20230923 10:11:02.288"/>
</kw>
<status status="PASS" starttime="20230923 10:10:56.837" endtime="20230923 10:11:02.288"/>
</kw>
<msg timestamp="20230923 10:11:02.289" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:10:56.837" endtime="20230923 10:11:02.289"/>
</kw>
<status status="PASS" starttime="20230923 10:10:56.836" endtime="20230923 10:11:02.289"/>
</kw>
<status status="PASS" starttime="20230923 10:06:44.854" endtime="20230923 10:11:02.289"/>
</kw>
<timeout value="10 minutes"/>
<status status="PASS" starttime="20230923 10:06:44.763" endtime="20230923 10:11:02.289"/>
</test>
<test id="s1-s4-s5-t2" name="RpcClient with execution errors" line="29">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:11:02.297" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:11:02.301" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:11:02.301" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230923 10:11:02.294" endtime="20230923 10:11:02.301"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:11:02.302" level="INFO">scm</msg>
<status status="PASS" starttime="20230923 10:11:02.301" endtime="20230923 10:11:02.302"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:11:02.303" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:11:02.302" endtime="20230923 10:11:02.303"/>
</kw>
<status status="PASS" starttime="20230923 10:11:02.293" endtime="20230923 10:11:02.303"/>
</kw>
<msg timestamp="20230923 10:11:02.303" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:11:02.293" endtime="20230923 10:11:02.303"/>
</kw>
<msg timestamp="20230923 10:11:02.304" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230923 10:11:02.293" endtime="20230923 10:11:02.304"/>
</kw>
<msg timestamp="20230923 10:11:02.304" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230923 10:11:02.292" endtime="20230923 10:11:02.304"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230923 10:11:02.305" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230923 10:11:02.304" endtime="20230923 10:11:02.305"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:11:02.310" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:11:02.466" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:11:02.466" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:11:02.307" endtime="20230923 10:11:02.466"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:11:02.468" level="INFO"/>
<status status="PASS" starttime="20230923 10:11:02.467" endtime="20230923 10:11:02.468"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:11:02.468" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:11:02.468" endtime="20230923 10:11:02.469"/>
</kw>
<status status="PASS" starttime="20230923 10:11:02.307" endtime="20230923 10:11:02.469"/>
</kw>
<msg timestamp="20230923 10:11:02.469" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:11:02.306" endtime="20230923 10:11:02.469"/>
</kw>
<status status="PASS" starttime="20230923 10:11:02.306" endtime="20230923 10:11:02.469"/>
</kw>
<status status="PASS" starttime="20230923 10:11:02.305" endtime="20230923 10:11:02.469"/>
</kw>
<status status="PASS" starttime="20230923 10:11:02.292" endtime="20230923 10:11:02.469"/>
</kw>
<status status="PASS" starttime="20230923 10:11:02.291" endtime="20230923 10:11:02.469"/>
</kw>
<kw name="Test ozone shell errors" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-with-errors</arg>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota invalid</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:11:02.474" level="INFO">Running command 'ozone sh volume create o3://om:9862/84532-with-errors --space-quota invalid 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:11:07.794" level="INFO">${rc} = 255</msg>
<msg timestamp="20230923 10:11:07.794" level="INFO">${output} = invalid is invalid. The quota value should be a positive integer with byte numeration(B, KB, MB, GB and TB)</msg>
<status status="PASS" starttime="20230923 10:11:02.471" endtime="20230923 10:11:07.795"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:11:07.796" level="INFO">invalid is invalid. The quota value should be a positive integer with byte numeration(B, KB, MB, GB and TB)</msg>
<status status="PASS" starttime="20230923 10:11:07.795" endtime="20230923 10:11:07.796"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:11:07.797" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:11:07.796" endtime="20230923 10:11:07.797"/>
</kw>
<msg timestamp="20230923 10:11:07.797" level="INFO">${result} = invalid is invalid. The quota value should be a positive integer with byte numeration(B, KB, MB, GB and TB)</msg>
<status status="PASS" starttime="20230923 10:11:02.470" endtime="20230923 10:11:07.797"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>invalid</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:11:07.797" endtime="20230923 10:11:07.798"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:11:07.802" level="INFO">Running command 'ozone sh volume create o3://om:9862/84532-with-errors 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:11:13.189" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:11:13.189" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:11:07.799" endtime="20230923 10:11:13.189"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:11:13.191" level="INFO"/>
<status status="PASS" starttime="20230923 10:11:13.190" endtime="20230923 10:11:13.191"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:11:13.192" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:11:13.191" endtime="20230923 10:11:13.192"/>
</kw>
<status status="PASS" starttime="20230923 10:11:07.798" endtime="20230923 10:11:13.192"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bucket_1</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:11:13.196" level="INFO">Running command 'ozone sh bucket create o3://om:9862/84532-with-errors/bucket_1 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:11:18.553" level="INFO">${rc} = 255</msg>
<msg timestamp="20230923 10:11:18.553" level="INFO">${output} = INVALID_BUCKET_NAME Invalid bucket name: bucket_1</msg>
<status status="PASS" starttime="20230923 10:11:13.193" endtime="20230923 10:11:18.553"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:11:18.555" level="INFO">INVALID_BUCKET_NAME Invalid bucket name: bucket_1</msg>
<status status="PASS" starttime="20230923 10:11:18.554" endtime="20230923 10:11:18.555"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:11:18.556" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:11:18.555" endtime="20230923 10:11:18.556"/>
</kw>
<msg timestamp="20230923 10:11:18.556" level="INFO">${result} = INVALID_BUCKET_NAME Invalid bucket name: bucket_1</msg>
<status status="PASS" starttime="20230923 10:11:13.192" endtime="20230923 10:11:18.556"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>INVALID_BUCKET_NAME</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:11:18.556" endtime="20230923 10:11:18.557"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bucket1 --layout Invalid</arg>
<arg>2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:11:18.561" level="INFO">Running command 'ozone sh bucket create o3://om:9862/84532-with-errors/bucket1 --layout Invalid 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:11:22.016" level="INFO">${rc} = 2</msg>
<msg timestamp="20230923 10:11:22.016" level="INFO">${output} = Invalid value for option '--layout': expected one of [FILE_SYSTEM_OPTIMIZED, OBJECT_STORE, LEGACY] (case-sensitive) but was 'Invalid'
Usage: ozone sh bucket create [-ghV] [-k=&lt;bekName&gt;] [-l=&lt;allowedBu...</msg>
<status status="PASS" starttime="20230923 10:11:18.558" endtime="20230923 10:11:22.016"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:11:22.018" level="INFO">Invalid value for option '--layout': expected one of [FILE_SYSTEM_OPTIMIZED, OBJECT_STORE, LEGACY] (case-sensitive) but was 'Invalid'
Usage: ozone sh bucket create [-ghV] [-k=&lt;bekName&gt;] [-l=&lt;allowedBucketLayout&gt;]
                              [--namespace-quota=&lt;quotaInNamespace&gt;]
                              [--quota=&lt;quotaInBytes&gt;] [-r=&lt;replication&gt;]
                              [-t=&lt;type&gt;] [-u=&lt;ownerName&gt;] &lt;value&gt;
creates a bucket in a given volume
      &lt;value&gt;              URI of the volume/bucket.
                           Ozone URI could either be a full URI or short URI.
                           Full URI should start with o3://, in case of non-HA
                           clusters it should be followed by the host name and
                           optionally the port number. In case of HA clusters
                           the service id should be used. Service id provides a
                           logical name for multiple hosts and it is defined
                           in the property ozone.om.service.ids.
                           Example of a full URI with host name and port number
                           for a key:
                           o3://omhostname:9862/vol1/bucket1/key1
                           With a service id for a volume:
                           o3://omserviceid/vol1/
                           Short URI should start from the volume.
                           Example of a short URI for a bucket:
                           vol1/bucket1
                           Any unspecified information will be identified from
                           the config files.

  -g, --enforcegdpr        if true, indicates GDPR enforced bucket,
                             false/unspecified indicates otherwise
  -h, --help               Show this help message and exit.
  -k, --bucketkey=&lt;bekName&gt;
                           bucket encryption key name
  -l, --layout=&lt;allowedBucketLayout&gt;
                           Allowed Bucket Layouts: FILE_SYSTEM_OPTIMIZED,
                             OBJECT_STORE, LEGACY
      --namespace-quota=&lt;quotaInNamespace&gt;
                           For volume this parameter represents the number of
                             buckets, and for buckets represents the number of
                             keys (eg. 5)
      --quota, --space-quota=&lt;quotaInBytes&gt;
                           The maximum space quota can be used (eg. 1GB)
  -r, --replication=&lt;replication&gt;
                           Replication definition. Valid values are replication
                             type-specific.  For RATIS: ONE or THREE. In case
                             of EC, pass CODEC-DATA-PARITY-CHUNKSIZE,  e.g.
                             rs-3-2-1024k, rs-6-3-1024k, rs-10-4-1024k
  -t, --type, --replication-type=&lt;type&gt;
                           Replication type. Supported types are: RATIS, EC
  -u, --user=&lt;ownerName&gt;   Owner of the bucket. Defaults to current user if not
                             specified
  -V, --version            Print version information and exit.</msg>
<status status="PASS" starttime="20230923 10:11:22.017" endtime="20230923 10:11:22.018"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:11:22.019" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:11:22.018" endtime="20230923 10:11:22.019"/>
</kw>
<msg timestamp="20230923 10:11:22.019" level="INFO">${result} = Invalid value for option '--layout': expected one of [FILE_SYSTEM_OPTIMIZED, OBJECT_STORE, LEGACY] (case-sensitive) but was 'Invalid'
Usage: ozone sh bucket create [-ghV] [-k=&lt;bekName&gt;] [-l=&lt;allowedBu...</msg>
<status status="PASS" starttime="20230923 10:11:18.557" endtime="20230923 10:11:22.019"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Usage</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:11:22.019" endtime="20230923 10:11:22.020"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bucket1</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:11:22.024" level="INFO">Running command 'ozone sh bucket create o3://om:9862/84532-with-errors/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:11:27.101" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:11:27.102" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:11:22.021" endtime="20230923 10:11:27.102"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:11:27.103" level="INFO"/>
<status status="PASS" starttime="20230923 10:11:27.102" endtime="20230923 10:11:27.103"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:11:27.104" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:11:27.104" endtime="20230923 10:11:27.104"/>
</kw>
<status status="PASS" starttime="20230923 10:11:22.020" endtime="20230923 10:11:27.105"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bucket1/non-existing</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:11:27.108" level="INFO">Running command 'ozone sh key info o3://om:9862/84532-with-errors/bucket1/non-existing 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:11:32.596" level="INFO">${rc} = 255</msg>
<msg timestamp="20230923 10:11:32.596" level="INFO">${output} = KEY_NOT_FOUND Key:non-existing not found</msg>
<status status="PASS" starttime="20230923 10:11:27.106" endtime="20230923 10:11:32.596"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:11:32.598" level="INFO">KEY_NOT_FOUND Key:non-existing not found</msg>
<status status="PASS" starttime="20230923 10:11:32.597" endtime="20230923 10:11:32.598"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:11:32.599" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:11:32.598" endtime="20230923 10:11:32.599"/>
</kw>
<msg timestamp="20230923 10:11:32.599" level="INFO">${result} = KEY_NOT_FOUND Key:non-existing not found</msg>
<status status="PASS" starttime="20230923 10:11:27.105" endtime="20230923 10:11:32.599"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>KEY_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:11:32.599" endtime="20230923 10:11:32.600"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh key put ${protocol}${server}/${volume}/bucket1/key1 unexisting --type invalid</arg>
<arg>2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:11:32.603" level="INFO">Running command 'ozone sh key put o3://om:9862/84532-with-errors/bucket1/key1 unexisting --type invalid 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:11:35.917" level="INFO">${rc} = 2</msg>
<msg timestamp="20230923 10:11:35.917" level="INFO">${output} = Could not invoke public void org.apache.hadoop.ozone.shell.ShellReplicationOptions.setType(java.lang.String) with invalid (java.lang.IllegalArgumentException: Invalid value 'invalid' for option '--typ...</msg>
<status status="PASS" starttime="20230923 10:11:32.601" endtime="20230923 10:11:35.917"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:11:35.919" level="INFO">Could not invoke public void org.apache.hadoop.ozone.shell.ShellReplicationOptions.setType(java.lang.String) with invalid (java.lang.IllegalArgumentException: Invalid value 'invalid' for option '--type'. No enum constant org.apache.hadoop.hdds.client.ReplicationType.invalid. Supported values are: RATIS, EC.)
Usage: ozone sh key put [-hV] [--stream] [-r=&lt;replication&gt;] [-t=&lt;type&gt;] &lt;value&gt;
                        &lt;fileName&gt;
creates or overwrites an existing key
      &lt;value&gt;      URI of the volume/bucket/key.
                   Ozone URI could either be a full URI or short URI.
                   Full URI should start with o3://, in case of non-HA
                   clusters it should be followed by the host name and
                   optionally the port number. In case of HA clusters
                   the service id should be used. Service id provides a
                   logical name for multiple hosts and it is defined
                   in the property ozone.om.service.ids.
                   Example of a full URI with host name and port number
                   for a key:
                   o3://omhostname:9862/vol1/bucket1/key1
                   With a service id for a volume:
                   o3://omserviceid/vol1/
                   Short URI should start from the volume.
                   Example of a short URI for a bucket:
                   vol1/bucket1
                   Any unspecified information will be identified from
                   the config files.

      &lt;fileName&gt;   File to upload
  -h, --help       Show this help message and exit.
  -r, --replication=&lt;replication&gt;
                   Replication definition. Valid values are replication
                     type-specific.  For RATIS: ONE or THREE. In case of EC,
                     pass CODEC-DATA-PARITY-CHUNKSIZE,  e.g. rs-3-2-1024k,
                     rs-6-3-1024k, rs-10-4-1024k
      --stream
  -t, --type, --replication-type=&lt;type&gt;
                   Replication type. Supported types are: RATIS, EC
  -V, --version    Print version information and exit.</msg>
<status status="PASS" starttime="20230923 10:11:35.918" endtime="20230923 10:11:35.919"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:11:35.920" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:11:35.919" endtime="20230923 10:11:35.920"/>
</kw>
<msg timestamp="20230923 10:11:35.920" level="INFO">${result} = Could not invoke public void org.apache.hadoop.ozone.shell.ShellReplicationOptions.setType(java.lang.String) with invalid (java.lang.IllegalArgumentException: Invalid value 'invalid' for option '--typ...</msg>
<status status="PASS" starttime="20230923 10:11:32.600" endtime="20230923 10:11:35.920"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bucket1</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:11:35.925" level="INFO">Running command 'ozone sh bucket delete o3://om:9862/84532-with-errors/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:11:41.257" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:11:41.258" level="INFO">${output} = Bucket bucket1 is deleted</msg>
<status status="PASS" starttime="20230923 10:11:35.921" endtime="20230923 10:11:41.258"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:11:41.259" level="INFO">Bucket bucket1 is deleted</msg>
<status status="PASS" starttime="20230923 10:11:41.258" endtime="20230923 10:11:41.259"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:11:41.260" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:11:41.260" endtime="20230923 10:11:41.261"/>
</kw>
<status status="PASS" starttime="20230923 10:11:35.920" endtime="20230923 10:11:41.261"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:11:41.265" level="INFO">Running command 'ozone sh volume delete o3://om:9862/84532-with-errors 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:11:46.555" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:11:46.555" level="INFO">${output} = Volume 84532-with-errors is deleted</msg>
<status status="PASS" starttime="20230923 10:11:41.262" endtime="20230923 10:11:46.555"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:11:46.557" level="INFO">Volume 84532-with-errors is deleted</msg>
<status status="PASS" starttime="20230923 10:11:46.556" endtime="20230923 10:11:46.557"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:11:46.557" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:11:46.557" endtime="20230923 10:11:46.557"/>
</kw>
<status status="PASS" starttime="20230923 10:11:41.261" endtime="20230923 10:11:46.558"/>
</kw>
<status status="PASS" starttime="20230923 10:11:02.470" endtime="20230923 10:11:46.558"/>
</kw>
<timeout value="10 minutes"/>
<status status="PASS" starttime="20230923 10:11:02.290" endtime="20230923 10:11:46.558"/>
</test>
<test id="s1-s4-s5-t3" name="RpcClient volume acls" line="32">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:11:46.566" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:11:46.569" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:11:46.570" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230923 10:11:46.563" endtime="20230923 10:11:46.570"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:11:46.571" level="INFO">scm</msg>
<status status="PASS" starttime="20230923 10:11:46.570" endtime="20230923 10:11:46.571"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:11:46.571" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:11:46.571" endtime="20230923 10:11:46.571"/>
</kw>
<status status="PASS" starttime="20230923 10:11:46.562" endtime="20230923 10:11:46.572"/>
</kw>
<msg timestamp="20230923 10:11:46.572" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:11:46.562" endtime="20230923 10:11:46.572"/>
</kw>
<msg timestamp="20230923 10:11:46.572" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230923 10:11:46.562" endtime="20230923 10:11:46.572"/>
</kw>
<msg timestamp="20230923 10:11:46.572" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230923 10:11:46.561" endtime="20230923 10:11:46.572"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230923 10:11:46.573" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230923 10:11:46.573" endtime="20230923 10:11:46.573"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:11:46.577" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:11:46.645" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:11:46.645" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:11:46.575" endtime="20230923 10:11:46.645"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:11:46.647" level="INFO"/>
<status status="PASS" starttime="20230923 10:11:46.646" endtime="20230923 10:11:46.647"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:11:46.647" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:11:46.647" endtime="20230923 10:11:46.647"/>
</kw>
<status status="PASS" starttime="20230923 10:11:46.575" endtime="20230923 10:11:46.647"/>
</kw>
<msg timestamp="20230923 10:11:46.648" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:11:46.574" endtime="20230923 10:11:46.648"/>
</kw>
<status status="PASS" starttime="20230923 10:11:46.574" endtime="20230923 10:11:46.648"/>
</kw>
<status status="PASS" starttime="20230923 10:11:46.573" endtime="20230923 10:11:46.648"/>
</kw>
<status status="PASS" starttime="20230923 10:11:46.561" endtime="20230923 10:11:46.648"/>
</kw>
<status status="PASS" starttime="20230923 10:11:46.560" endtime="20230923 10:11:46.648"/>
</kw>
<kw name="Test Volume Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-acls</arg>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:11:46.653" level="INFO">Running command 'ozone sh volume create o3://om:9862/84532-acls 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:11:52.079" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:11:52.079" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:11:46.650" endtime="20230923 10:11:52.079"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:11:52.082" level="INFO"/>
<status status="PASS" starttime="20230923 10:11:52.080" endtime="20230923 10:11:52.082"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:11:52.083" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:11:52.082" endtime="20230923 10:11:52.083"/>
</kw>
<status status="PASS" starttime="20230923 10:11:46.650" endtime="20230923 10:11:52.083"/>
</kw>
<msg timestamp="20230923 10:11:52.083" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:11:46.650" endtime="20230923 10:11:52.083"/>
</kw>
<status status="PASS" starttime="20230923 10:11:46.649" endtime="20230923 10:11:52.083"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:11:52.089" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/84532-acls 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:11:57.361" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:11:57.361" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20230923 10:11:52.085" endtime="20230923 10:11:57.361"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:11:57.362" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20230923 10:11:57.362" endtime="20230923 10:11:57.363"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:11:57.363" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:11:57.363" endtime="20230923 10:11:57.363"/>
</kw>
<status status="PASS" starttime="20230923 10:11:52.085" endtime="20230923 10:11:57.364"/>
</kw>
<msg timestamp="20230923 10:11:57.365" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:11:52.084" endtime="20230923 10:11:57.365"/>
</kw>
<msg timestamp="20230923 10:11:57.365" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20230923 10:11:52.084" endtime="20230923 10:11:57.365"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20230923 10:11:57.365" endtime="20230923 10:11:57.366"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume addacl ${protocol}${server}/${volume} -a user:superuser1:rwxy[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:11:57.371" level="INFO">Running command 'ozone sh volume addacl o3://om:9862/84532-acls -a user:superuser1:rwxy[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:12:02.768" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:12:02.768" level="INFO">${output} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20230923 10:11:57.368" endtime="20230923 10:12:02.768"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:12:02.769" level="INFO">ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20230923 10:12:02.769" endtime="20230923 10:12:02.770"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:12:02.770" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:12:02.770" endtime="20230923 10:12:02.770"/>
</kw>
<status status="PASS" starttime="20230923 10:11:57.368" endtime="20230923 10:12:02.771"/>
</kw>
<msg timestamp="20230923 10:12:02.771" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:11:57.367" endtime="20230923 10:12:02.771"/>
</kw>
<msg timestamp="20230923 10:12:02.771" level="INFO">${result} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20230923 10:11:57.367" endtime="20230923 10:12:02.771"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:12:02.776" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/84532-acls 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:12:08.654" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:12:08.654" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "...</msg>
<status status="PASS" starttime="20230923 10:12:02.773" endtime="20230923 10:12:08.654"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:12:08.656" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20230923 10:12:08.655" endtime="20230923 10:12:08.656"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:12:08.657" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:12:08.656" endtime="20230923 10:12:08.657"/>
</kw>
<status status="PASS" starttime="20230923 10:12:02.773" endtime="20230923 10:12:08.657"/>
</kw>
<msg timestamp="20230923 10:12:08.658" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:12:02.772" endtime="20230923 10:12:08.658"/>
</kw>
<msg timestamp="20230923 10:12:08.659" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "...</msg>
<status status="PASS" starttime="20230923 10:12:02.771" endtime="20230923 10:12:08.659"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20230923 10:12:08.659" endtime="20230923 10:12:08.661"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume removeacl ${protocol}${server}/${volume} -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:12:08.667" level="INFO">Running command 'ozone sh volume removeacl o3://om:9862/84532-acls -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:12:14.010" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:12:14.010" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20230923 10:12:08.663" endtime="20230923 10:12:14.010"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:12:14.011" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20230923 10:12:14.011" endtime="20230923 10:12:14.011"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:12:14.012" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:12:14.012" endtime="20230923 10:12:14.012"/>
</kw>
<status status="PASS" starttime="20230923 10:12:08.662" endtime="20230923 10:12:14.012"/>
</kw>
<msg timestamp="20230923 10:12:14.013" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:12:08.661" endtime="20230923 10:12:14.013"/>
</kw>
<msg timestamp="20230923 10:12:14.013" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20230923 10:12:08.661" endtime="20230923 10:12:14.013"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:12:14.017" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/84532-acls 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:12:20.180" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:12:20.180" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "...</msg>
<status status="PASS" starttime="20230923 10:12:14.015" endtime="20230923 10:12:20.181"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:12:20.182" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20230923 10:12:20.181" endtime="20230923 10:12:20.182"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:12:20.183" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:12:20.182" endtime="20230923 10:12:20.183"/>
</kw>
<status status="PASS" starttime="20230923 10:12:14.014" endtime="20230923 10:12:20.183"/>
</kw>
<msg timestamp="20230923 10:12:20.183" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:12:14.014" endtime="20230923 10:12:20.183"/>
</kw>
<msg timestamp="20230923 10:12:20.184" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "...</msg>
<status status="PASS" starttime="20230923 10:12:14.013" endtime="20230923 10:12:20.184"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20230923 10:12:20.184" endtime="20230923 10:12:20.185"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume setacl ${protocol}${server}/${volume} -al user:superuser1:rwxy[DEFAULT],group:superuser1:a,user:testuser:rwxyc,group:superuser1:a[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:12:20.190" level="INFO">Running command 'ozone sh volume setacl o3://om:9862/84532-acls -al user:superuser1:rwxy[DEFAULT],group:superuser1:a,user:testuser:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:12:25.324" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:12:25.324" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20230923 10:12:20.187" endtime="20230923 10:12:25.324"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:12:25.326" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20230923 10:12:25.325" endtime="20230923 10:12:25.326"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:12:25.327" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:12:25.326" endtime="20230923 10:12:25.327"/>
</kw>
<status status="PASS" starttime="20230923 10:12:20.186" endtime="20230923 10:12:25.327"/>
</kw>
<msg timestamp="20230923 10:12:25.327" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:12:20.186" endtime="20230923 10:12:25.327"/>
</kw>
<msg timestamp="20230923 10:12:25.328" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20230923 10:12:20.185" endtime="20230923 10:12:25.328"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:12:25.333" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/84532-acls 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:12:31.210" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:12:31.211" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20230923 10:12:25.330" endtime="20230923 10:12:31.211"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:12:31.212" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20230923 10:12:31.211" endtime="20230923 10:12:31.212"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:12:31.213" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:12:31.213" endtime="20230923 10:12:31.213"/>
</kw>
<status status="PASS" starttime="20230923 10:12:25.329" endtime="20230923 10:12:31.214"/>
</kw>
<msg timestamp="20230923 10:12:31.214" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:12:25.329" endtime="20230923 10:12:31.214"/>
</kw>
<msg timestamp="20230923 10:12:31.214" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20230923 10:12:25.328" endtime="20230923 10:12:31.214"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20230923 10:12:31.214" endtime="20230923 10:12:31.215"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20230923 10:12:31.215" endtime="20230923 10:12:31.216"/>
</kw>
<status status="PASS" starttime="20230923 10:11:46.648" endtime="20230923 10:12:31.216"/>
</kw>
<timeout value="10 minutes"/>
<status status="PASS" starttime="20230923 10:11:46.559" endtime="20230923 10:12:31.216"/>
</test>
<test id="s1-s4-s5-t4" name="RpcClient bucket acls" line="35">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:12:31.226" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:12:31.230" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:12:31.230" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230923 10:12:31.222" endtime="20230923 10:12:31.230"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:12:31.231" level="INFO">scm</msg>
<status status="PASS" starttime="20230923 10:12:31.230" endtime="20230923 10:12:31.231"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:12:31.232" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:12:31.231" endtime="20230923 10:12:31.232"/>
</kw>
<status status="PASS" starttime="20230923 10:12:31.222" endtime="20230923 10:12:31.232"/>
</kw>
<msg timestamp="20230923 10:12:31.233" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:12:31.221" endtime="20230923 10:12:31.233"/>
</kw>
<msg timestamp="20230923 10:12:31.233" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230923 10:12:31.221" endtime="20230923 10:12:31.233"/>
</kw>
<msg timestamp="20230923 10:12:31.233" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230923 10:12:31.220" endtime="20230923 10:12:31.233"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230923 10:12:31.234" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230923 10:12:31.233" endtime="20230923 10:12:31.234"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:12:31.238" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:12:31.276" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:12:31.276" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:12:31.236" endtime="20230923 10:12:31.276"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:12:31.278" level="INFO"/>
<status status="PASS" starttime="20230923 10:12:31.277" endtime="20230923 10:12:31.278"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:12:31.278" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:12:31.278" endtime="20230923 10:12:31.279"/>
</kw>
<status status="PASS" starttime="20230923 10:12:31.236" endtime="20230923 10:12:31.279"/>
</kw>
<msg timestamp="20230923 10:12:31.279" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:12:31.235" endtime="20230923 10:12:31.279"/>
</kw>
<status status="PASS" starttime="20230923 10:12:31.235" endtime="20230923 10:12:31.279"/>
</kw>
<status status="PASS" starttime="20230923 10:12:31.234" endtime="20230923 10:12:31.279"/>
</kw>
<status status="PASS" starttime="20230923 10:12:31.220" endtime="20230923 10:12:31.279"/>
</kw>
<status status="PASS" starttime="20230923 10:12:31.219" endtime="20230923 10:12:31.279"/>
</kw>
<kw name="Test Bucket Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-acls</arg>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:12:31.284" level="INFO">Running command 'ozone sh bucket create o3://om:9862/84532-acls/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:12:37.094" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:12:37.094" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:12:31.282" endtime="20230923 10:12:37.094"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:12:37.096" level="INFO"/>
<status status="PASS" starttime="20230923 10:12:37.095" endtime="20230923 10:12:37.096"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:12:37.097" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:12:37.096" endtime="20230923 10:12:37.097"/>
</kw>
<status status="PASS" starttime="20230923 10:12:31.281" endtime="20230923 10:12:37.097"/>
</kw>
<msg timestamp="20230923 10:12:37.097" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:12:31.281" endtime="20230923 10:12:37.098"/>
</kw>
<status status="PASS" starttime="20230923 10:12:31.280" endtime="20230923 10:12:37.098"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:12:37.103" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/84532-acls/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:12:42.935" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:12:42.935" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ ...</msg>
<status status="PASS" starttime="20230923 10:12:37.100" endtime="20230923 10:12:42.935"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:12:42.937" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20230923 10:12:42.936" endtime="20230923 10:12:42.937"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:12:42.938" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:12:42.937" endtime="20230923 10:12:42.938"/>
</kw>
<status status="PASS" starttime="20230923 10:12:37.099" endtime="20230923 10:12:42.938"/>
</kw>
<msg timestamp="20230923 10:12:42.938" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:12:37.099" endtime="20230923 10:12:42.938"/>
</kw>
<msg timestamp="20230923 10:12:42.938" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ ...</msg>
<status status="PASS" starttime="20230923 10:12:37.098" endtime="20230923 10:12:42.938"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20230923 10:12:42.939" endtime="20230923 10:12:42.939"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket addacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:rwxy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:12:42.944" level="INFO">Running command 'ozone sh bucket addacl o3://om:9862/84532-acls/bb1 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:12:48.079" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:12:48.079" level="INFO">${output} = ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20230923 10:12:42.941" endtime="20230923 10:12:48.079"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:12:48.081" level="INFO">ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20230923 10:12:48.080" endtime="20230923 10:12:48.081"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:12:48.082" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:12:48.081" endtime="20230923 10:12:48.082"/>
</kw>
<status status="PASS" starttime="20230923 10:12:42.941" endtime="20230923 10:12:48.082"/>
</kw>
<msg timestamp="20230923 10:12:48.082" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:12:42.940" endtime="20230923 10:12:48.082"/>
</kw>
<msg timestamp="20230923 10:12:48.083" level="INFO">${result} = ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20230923 10:12:42.939" endtime="20230923 10:12:48.083"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:12:48.087" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/84532-acls/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:12:53.793" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:12:53.793" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ ...</msg>
<status status="PASS" starttime="20230923 10:12:48.085" endtime="20230923 10:12:53.793"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:12:53.795" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20230923 10:12:53.794" endtime="20230923 10:12:53.795"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:12:53.796" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:12:53.795" endtime="20230923 10:12:53.796"/>
</kw>
<status status="PASS" starttime="20230923 10:12:48.084" endtime="20230923 10:12:53.796"/>
</kw>
<msg timestamp="20230923 10:12:53.796" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:12:48.084" endtime="20230923 10:12:53.797"/>
</kw>
<msg timestamp="20230923 10:12:53.797" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ ...</msg>
<status status="PASS" starttime="20230923 10:12:48.083" endtime="20230923 10:12:53.797"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20230923 10:12:53.797" endtime="20230923 10:12:53.798"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket removeacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:12:53.803" level="INFO">Running command 'ozone sh bucket removeacl o3://om:9862/84532-acls/bb1 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:12:58.948" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:12:58.948" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20230923 10:12:53.800" endtime="20230923 10:12:58.948"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:12:58.949" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20230923 10:12:58.948" endtime="20230923 10:12:58.949"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:12:58.950" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:12:58.950" endtime="20230923 10:12:58.950"/>
</kw>
<status status="PASS" starttime="20230923 10:12:53.800" endtime="20230923 10:12:58.950"/>
</kw>
<msg timestamp="20230923 10:12:58.951" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:12:53.799" endtime="20230923 10:12:58.951"/>
</kw>
<msg timestamp="20230923 10:12:58.951" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20230923 10:12:53.798" endtime="20230923 10:12:58.951"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:12:58.956" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/84532-acls/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:13:05.198" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:13:05.198" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ ...</msg>
<status status="PASS" starttime="20230923 10:12:58.953" endtime="20230923 10:13:05.198"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:13:05.200" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20230923 10:13:05.199" endtime="20230923 10:13:05.200"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:13:05.201" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:13:05.200" endtime="20230923 10:13:05.201"/>
</kw>
<status status="PASS" starttime="20230923 10:12:58.952" endtime="20230923 10:13:05.201"/>
</kw>
<msg timestamp="20230923 10:13:05.201" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:12:58.952" endtime="20230923 10:13:05.201"/>
</kw>
<msg timestamp="20230923 10:13:05.201" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ ...</msg>
<status status="PASS" starttime="20230923 10:12:58.951" endtime="20230923 10:13:05.201"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20230923 10:13:05.202" endtime="20230923 10:13:05.203"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket setacl ${protocol}${server}/${volume}/bb1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser:rwxyc,group:superuser1:a[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:13:05.207" level="INFO">Running command 'ozone sh bucket setacl o3://om:9862/84532-acls/bb1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:13:11.045" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:13:11.045" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20230923 10:13:05.204" endtime="20230923 10:13:11.045"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:13:11.046" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20230923 10:13:11.045" endtime="20230923 10:13:11.046"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:13:11.047" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:13:11.047" endtime="20230923 10:13:11.047"/>
</kw>
<status status="PASS" starttime="20230923 10:13:05.204" endtime="20230923 10:13:11.048"/>
</kw>
<msg timestamp="20230923 10:13:11.048" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:13:05.204" endtime="20230923 10:13:11.048"/>
</kw>
<msg timestamp="20230923 10:13:11.048" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20230923 10:13:05.203" endtime="20230923 10:13:11.048"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:13:11.053" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/84532-acls/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:13:16.882" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:13:16.882" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20230923 10:13:11.051" endtime="20230923 10:13:16.882"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:13:16.883" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20230923 10:13:16.882" endtime="20230923 10:13:16.883"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:13:16.884" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:13:16.884" endtime="20230923 10:13:16.884"/>
</kw>
<status status="PASS" starttime="20230923 10:13:11.050" endtime="20230923 10:13:16.885"/>
</kw>
<msg timestamp="20230923 10:13:16.885" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:13:11.049" endtime="20230923 10:13:16.885"/>
</kw>
<msg timestamp="20230923 10:13:16.885" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20230923 10:13:11.048" endtime="20230923 10:13:16.885"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20230923 10:13:16.885" endtime="20230923 10:13:16.886"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20230923 10:13:16.886" endtime="20230923 10:13:16.886"/>
</kw>
<status status="PASS" starttime="20230923 10:12:31.280" endtime="20230923 10:13:16.887"/>
</kw>
<timeout value="10 minutes"/>
<status status="PASS" starttime="20230923 10:12:31.218" endtime="20230923 10:13:16.887"/>
</test>
<test id="s1-s4-s5-t5" name="RpcClient key acls" line="38">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:13:16.896" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:13:16.902" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:13:16.902" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230923 10:13:16.893" endtime="20230923 10:13:16.902"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:13:16.903" level="INFO">scm</msg>
<status status="PASS" starttime="20230923 10:13:16.903" endtime="20230923 10:13:16.903"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:13:16.904" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:13:16.904" endtime="20230923 10:13:16.904"/>
</kw>
<status status="PASS" starttime="20230923 10:13:16.893" endtime="20230923 10:13:16.904"/>
</kw>
<msg timestamp="20230923 10:13:16.904" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:13:16.892" endtime="20230923 10:13:16.905"/>
</kw>
<msg timestamp="20230923 10:13:16.905" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230923 10:13:16.892" endtime="20230923 10:13:16.905"/>
</kw>
<msg timestamp="20230923 10:13:16.905" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230923 10:13:16.891" endtime="20230923 10:13:16.905"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230923 10:13:16.906" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230923 10:13:16.905" endtime="20230923 10:13:16.906"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:13:16.910" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:13:17.010" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:13:17.010" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:13:16.908" endtime="20230923 10:13:17.010"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:13:17.011" level="INFO"/>
<status status="PASS" starttime="20230923 10:13:17.011" endtime="20230923 10:13:17.012"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:13:17.012" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:13:17.012" endtime="20230923 10:13:17.013"/>
</kw>
<status status="PASS" starttime="20230923 10:13:16.907" endtime="20230923 10:13:17.013"/>
</kw>
<msg timestamp="20230923 10:13:17.013" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:13:16.907" endtime="20230923 10:13:17.013"/>
</kw>
<status status="PASS" starttime="20230923 10:13:16.906" endtime="20230923 10:13:17.013"/>
</kw>
<status status="PASS" starttime="20230923 10:13:16.906" endtime="20230923 10:13:17.013"/>
</kw>
<status status="PASS" starttime="20230923 10:13:16.890" endtime="20230923 10:13:17.013"/>
</kw>
<status status="PASS" starttime="20230923 10:13:16.890" endtime="20230923 10:13:17.013"/>
</kw>
<kw name="Test key Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-acls</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key2 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:13:17.019" level="INFO">Running command 'ozone sh key put o3://om:9862/84532-acls/bb1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:13:25.057" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:13:25.057" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:13:17.016" endtime="20230923 10:13:25.057"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:13:25.058" level="INFO"/>
<status status="PASS" starttime="20230923 10:13:25.058" endtime="20230923 10:13:25.058"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:13:25.059" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:13:25.059" endtime="20230923 10:13:25.059"/>
</kw>
<status status="PASS" starttime="20230923 10:13:17.015" endtime="20230923 10:13:25.060"/>
</kw>
<msg timestamp="20230923 10:13:25.060" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:13:17.015" endtime="20230923 10:13:25.060"/>
</kw>
<status status="PASS" starttime="20230923 10:13:17.014" endtime="20230923 10:13:25.060"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:13:25.065" level="INFO">Running command 'ozone sh key getacl o3://om:9862/84532-acls/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:13:31.332" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:13:31.332" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ ...</msg>
<status status="PASS" starttime="20230923 10:13:25.062" endtime="20230923 10:13:31.332"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:13:31.333" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20230923 10:13:31.332" endtime="20230923 10:13:31.333"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:13:31.334" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:13:31.334" endtime="20230923 10:13:31.334"/>
</kw>
<status status="PASS" starttime="20230923 10:13:25.061" endtime="20230923 10:13:31.334"/>
</kw>
<msg timestamp="20230923 10:13:31.334" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:13:25.061" endtime="20230923 10:13:31.335"/>
</kw>
<msg timestamp="20230923 10:13:31.335" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ ...</msg>
<status status="PASS" starttime="20230923 10:13:25.060" endtime="20230923 10:13:31.335"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20230923 10:13:31.335" endtime="20230923 10:13:31.335"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key addacl ${protocol}${server}/${volume}/bb1/key2 -a user:superuser1:rwxy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:13:31.340" level="INFO">Running command 'ozone sh key addacl o3://om:9862/84532-acls/bb1/key2 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:13:36.509" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:13:36.509" level="INFO">${output} = ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20230923 10:13:31.337" endtime="20230923 10:13:36.509"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:13:36.510" level="INFO">ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20230923 10:13:36.510" endtime="20230923 10:13:36.511"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:13:36.511" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:13:36.511" endtime="20230923 10:13:36.512"/>
</kw>
<status status="PASS" starttime="20230923 10:13:31.337" endtime="20230923 10:13:36.512"/>
</kw>
<msg timestamp="20230923 10:13:36.512" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:13:31.336" endtime="20230923 10:13:36.512"/>
</kw>
<msg timestamp="20230923 10:13:36.512" level="INFO">${result} = ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20230923 10:13:31.336" endtime="20230923 10:13:36.512"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:13:36.517" level="INFO">Running command 'ozone sh key getacl o3://om:9862/84532-acls/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:13:41.982" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:13:41.982" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ ...</msg>
<status status="PASS" starttime="20230923 10:13:36.514" endtime="20230923 10:13:41.982"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:13:41.984" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20230923 10:13:41.983" endtime="20230923 10:13:41.984"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:13:41.985" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:13:41.984" endtime="20230923 10:13:41.985"/>
</kw>
<status status="PASS" starttime="20230923 10:13:36.514" endtime="20230923 10:13:41.986"/>
</kw>
<msg timestamp="20230923 10:13:41.986" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:13:36.513" endtime="20230923 10:13:41.986"/>
</kw>
<msg timestamp="20230923 10:13:41.986" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ ...</msg>
<status status="PASS" starttime="20230923 10:13:36.513" endtime="20230923 10:13:41.986"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20230923 10:13:41.986" endtime="20230923 10:13:41.987"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key removeacl ${protocol}${server}/${volume}/bb1/key2 -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:13:41.992" level="INFO">Running command 'ozone sh key removeacl o3://om:9862/84532-acls/bb1/key2 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:13:47.345" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:13:47.345" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20230923 10:13:41.989" endtime="20230923 10:13:47.345"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:13:47.347" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20230923 10:13:47.346" endtime="20230923 10:13:47.347"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:13:47.347" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:13:47.347" endtime="20230923 10:13:47.347"/>
</kw>
<status status="PASS" starttime="20230923 10:13:41.989" endtime="20230923 10:13:47.348"/>
</kw>
<msg timestamp="20230923 10:13:47.348" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:13:41.988" endtime="20230923 10:13:47.348"/>
</kw>
<msg timestamp="20230923 10:13:47.348" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20230923 10:13:41.988" endtime="20230923 10:13:47.348"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:13:47.353" level="INFO">Running command 'ozone sh key getacl o3://om:9862/84532-acls/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:13:53.477" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:13:53.477" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ ...</msg>
<status status="PASS" starttime="20230923 10:13:47.350" endtime="20230923 10:13:53.477"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:13:53.479" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
} ]</msg>
<status status="PASS" starttime="20230923 10:13:53.478" endtime="20230923 10:13:53.479"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:13:53.479" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:13:53.479" endtime="20230923 10:13:53.480"/>
</kw>
<status status="PASS" starttime="20230923 10:13:47.350" endtime="20230923 10:13:53.480"/>
</kw>
<msg timestamp="20230923 10:13:53.480" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:13:47.349" endtime="20230923 10:13:53.480"/>
</kw>
<msg timestamp="20230923 10:13:53.480" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ ...</msg>
<status status="PASS" starttime="20230923 10:13:47.348" endtime="20230923 10:13:53.480"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20230923 10:13:53.481" endtime="20230923 10:13:53.481"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key setacl ${protocol}${server}/${volume}/bb1/key2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser:rwxyc</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:13:53.486" level="INFO">Running command 'ozone sh key setacl o3://om:9862/84532-acls/bb1/key2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser:rwxyc 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:13:59.023" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:13:59.023" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20230923 10:13:53.483" endtime="20230923 10:13:59.023"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:13:59.025" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20230923 10:13:59.024" endtime="20230923 10:13:59.025"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:13:59.026" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:13:59.025" endtime="20230923 10:13:59.026"/>
</kw>
<status status="PASS" starttime="20230923 10:13:53.483" endtime="20230923 10:13:59.026"/>
</kw>
<msg timestamp="20230923 10:13:59.026" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:13:53.482" endtime="20230923 10:13:59.026"/>
</kw>
<msg timestamp="20230923 10:13:59.027" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20230923 10:13:53.481" endtime="20230923 10:13:59.027"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:13:59.031" level="INFO">Running command 'ozone sh key getacl o3://om:9862/84532-acls/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:14:05.035" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:14:05.035" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20230923 10:13:59.029" endtime="20230923 10:14:05.035"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:14:05.037" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20230923 10:14:05.036" endtime="20230923 10:14:05.037"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:14:05.038" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:14:05.037" endtime="20230923 10:14:05.038"/>
</kw>
<status status="PASS" starttime="20230923 10:13:59.028" endtime="20230923 10:14:05.038"/>
</kw>
<msg timestamp="20230923 10:14:05.038" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:13:59.028" endtime="20230923 10:14:05.038"/>
</kw>
<msg timestamp="20230923 10:14:05.039" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20230923 10:13:59.027" endtime="20230923 10:14:05.039"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20230923 10:14:05.039" endtime="20230923 10:14:05.039"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20230923 10:14:05.039" endtime="20230923 10:14:05.040"/>
</kw>
<status status="PASS" starttime="20230923 10:13:17.014" endtime="20230923 10:14:05.040"/>
</kw>
<timeout value="10 minutes"/>
<status status="PASS" starttime="20230923 10:13:16.888" endtime="20230923 10:14:05.041"/>
</test>
<test id="s1-s4-s5-t6" name="Test native authorizer" line="42">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:14:05.049" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:14:05.054" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:14:05.054" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230923 10:14:05.046" endtime="20230923 10:14:05.054"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:14:05.055" level="INFO">scm</msg>
<status status="PASS" starttime="20230923 10:14:05.054" endtime="20230923 10:14:05.055"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:14:05.055" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:14:05.055" endtime="20230923 10:14:05.056"/>
</kw>
<status status="PASS" starttime="20230923 10:14:05.046" endtime="20230923 10:14:05.056"/>
</kw>
<msg timestamp="20230923 10:14:05.056" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:14:05.045" endtime="20230923 10:14:05.056"/>
</kw>
<msg timestamp="20230923 10:14:05.056" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230923 10:14:05.045" endtime="20230923 10:14:05.056"/>
</kw>
<msg timestamp="20230923 10:14:05.056" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230923 10:14:05.044" endtime="20230923 10:14:05.056"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230923 10:14:05.057" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230923 10:14:05.057" endtime="20230923 10:14:05.057"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:14:05.061" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:14:05.090" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:14:05.090" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:14:05.059" endtime="20230923 10:14:05.090"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:14:05.091" level="INFO"/>
<status status="PASS" starttime="20230923 10:14:05.090" endtime="20230923 10:14:05.091"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:14:05.092" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:14:05.092" endtime="20230923 10:14:05.092"/>
</kw>
<status status="PASS" starttime="20230923 10:14:05.059" endtime="20230923 10:14:05.093"/>
</kw>
<msg timestamp="20230923 10:14:05.093" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:14:05.058" endtime="20230923 10:14:05.093"/>
</kw>
<status status="PASS" starttime="20230923 10:14:05.058" endtime="20230923 10:14:05.093"/>
</kw>
<status status="PASS" starttime="20230923 10:14:05.057" endtime="20230923 10:14:05.093"/>
</kw>
<status status="PASS" starttime="20230923 10:14:05.044" endtime="20230923 10:14:05.093"/>
</kw>
<status status="PASS" starttime="20230923 10:14:05.043" endtime="20230923 10:14:05.093"/>
</kw>
<kw name="Test native authorizer" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-acls</arg>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20230923 10:14:05.094" endtime="20230923 10:14:05.094"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume removeacl ${protocol}${server}/${volume} -a group:root:a</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:14:05.099" level="INFO">Running command 'ozone sh volume removeacl o3://om:9862/84532-acls -a group:root:a 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:14:11.022" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:14:11.022" level="INFO">${output} = ACL group:root:a[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20230923 10:14:05.096" endtime="20230923 10:14:11.023"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:14:11.024" level="INFO">ACL group:root:a[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20230923 10:14:11.023" endtime="20230923 10:14:11.024"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:14:11.025" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:14:11.025" endtime="20230923 10:14:11.025"/>
</kw>
<status status="PASS" starttime="20230923 10:14:05.096" endtime="20230923 10:14:11.025"/>
</kw>
<msg timestamp="20230923 10:14:11.026" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:14:05.095" endtime="20230923 10:14:11.026"/>
</kw>
<status status="PASS" starttime="20230923 10:14:05.095" endtime="20230923 10:14:11.026"/>
</kw>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:14:11.030" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:14:11.035" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:14:11.035" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:14:11.028" endtime="20230923 10:14:11.035"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:14:11.036" level="INFO"/>
<status status="PASS" starttime="20230923 10:14:11.036" endtime="20230923 10:14:11.037"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:14:11.037" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:14:11.037" endtime="20230923 10:14:11.037"/>
</kw>
<status status="PASS" starttime="20230923 10:14:11.027" endtime="20230923 10:14:11.038"/>
</kw>
<msg timestamp="20230923 10:14:11.038" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:14:11.027" endtime="20230923 10:14:11.038"/>
</kw>
<status status="PASS" starttime="20230923 10:14:11.026" endtime="20230923 10:14:11.038"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:14:11.044" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:14:11.047" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:14:11.047" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230923 10:14:11.042" endtime="20230923 10:14:11.047"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:14:11.048" level="INFO">scm</msg>
<status status="PASS" starttime="20230923 10:14:11.048" endtime="20230923 10:14:11.049"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:14:11.049" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:14:11.049" endtime="20230923 10:14:11.049"/>
</kw>
<status status="PASS" starttime="20230923 10:14:11.041" endtime="20230923 10:14:11.050"/>
</kw>
<msg timestamp="20230923 10:14:11.050" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:14:11.041" endtime="20230923 10:14:11.050"/>
</kw>
<msg timestamp="20230923 10:14:11.050" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230923 10:14:11.040" endtime="20230923 10:14:11.050"/>
</kw>
<msg timestamp="20230923 10:14:11.050" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230923 10:14:11.039" endtime="20230923 10:14:11.050"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230923 10:14:11.051" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230923 10:14:11.051" endtime="20230923 10:14:11.051"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:14:11.056" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser2.keytab testuser2/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:14:11.084" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:14:11.084" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:14:11.053" endtime="20230923 10:14:11.084"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:14:11.086" level="INFO"/>
<status status="PASS" starttime="20230923 10:14:11.085" endtime="20230923 10:14:11.086"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:14:11.086" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:14:11.086" endtime="20230923 10:14:11.087"/>
</kw>
<status status="PASS" starttime="20230923 10:14:11.053" endtime="20230923 10:14:11.087"/>
</kw>
<msg timestamp="20230923 10:14:11.087" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:14:11.052" endtime="20230923 10:14:11.087"/>
</kw>
<status status="PASS" starttime="20230923 10:14:11.052" endtime="20230923 10:14:11.087"/>
</kw>
<status status="PASS" starttime="20230923 10:14:11.051" endtime="20230923 10:14:11.087"/>
</kw>
<status status="PASS" starttime="20230923 10:14:11.039" endtime="20230923 10:14:11.088"/>
</kw>
<status status="PASS" starttime="20230923 10:14:11.038" endtime="20230923 10:14:11.088"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${protocol}${server}/${volume}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:14:11.091" level="INFO">Running command 'ozone sh bucket list o3://om:9862/84532-acls 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:14:16.416" level="INFO">${rc} = 255</msg>
<msg timestamp="20230923 10:14:16.416" level="INFO">${output} = PERMISSION_DENIED User testuser2 doesn't have READ permission to access volume Volume:84532-acls </msg>
<status status="PASS" starttime="20230923 10:14:11.089" endtime="20230923 10:14:16.416"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:14:16.418" level="INFO">PERMISSION_DENIED User testuser2 doesn't have READ permission to access volume Volume:84532-acls </msg>
<status status="PASS" starttime="20230923 10:14:16.417" endtime="20230923 10:14:16.418"/>
</kw>
<msg timestamp="20230923 10:14:16.418" level="INFO">${result} = PERMISSION_DENIED User testuser2 doesn't have READ permission to access volume Volume:84532-acls </msg>
<status status="PASS" starttime="20230923 10:14:11.088" endtime="20230923 10:14:16.418"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:14:16.418" endtime="20230923 10:14:16.419"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:14:16.423" level="INFO">Running command 'ozone sh key list o3://om:9862/84532-acls/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:14:22.327" level="INFO">${rc} = 255</msg>
<msg timestamp="20230923 10:14:22.327" level="INFO">${output} = PERMISSION_DENIED User testuser2 doesn't have READ permission to access volume Volume:84532-acls </msg>
<status status="PASS" starttime="20230923 10:14:16.420" endtime="20230923 10:14:22.327"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:14:22.329" level="INFO">PERMISSION_DENIED User testuser2 doesn't have READ permission to access volume Volume:84532-acls </msg>
<status status="PASS" starttime="20230923 10:14:22.328" endtime="20230923 10:14:22.329"/>
</kw>
<msg timestamp="20230923 10:14:22.329" level="INFO">${result} = PERMISSION_DENIED User testuser2 doesn't have READ permission to access volume Volume:84532-acls </msg>
<status status="PASS" starttime="20230923 10:14:16.419" endtime="20230923 10:14:22.329"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:14:22.329" endtime="20230923 10:14:22.330"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh volume addacl ${protocol}${server}/${volume} -a user:testuser2:xy</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:14:22.334" level="INFO">Running command 'ozone sh volume addacl o3://om:9862/84532-acls -a user:testuser2:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:14:27.628" level="INFO">${rc} = 255</msg>
<msg timestamp="20230923 10:14:27.628" level="INFO">${output} = PERMISSION_DENIED User testuser2 doesn't have WRITE_ACL permission to access volume Volume:84532-acls </msg>
<status status="PASS" starttime="20230923 10:14:22.331" endtime="20230923 10:14:27.628"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:14:27.629" level="INFO">PERMISSION_DENIED User testuser2 doesn't have WRITE_ACL permission to access volume Volume:84532-acls </msg>
<status status="PASS" starttime="20230923 10:14:27.628" endtime="20230923 10:14:27.629"/>
</kw>
<msg timestamp="20230923 10:14:27.630" level="INFO">${result} = PERMISSION_DENIED User testuser2 doesn't have WRITE_ACL permission to access volume Volume:84532-acls </msg>
<status status="PASS" starttime="20230923 10:14:22.330" endtime="20230923 10:14:27.630"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED User testuser2 doesn't have WRITE_ACL permission to access volume</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:14:27.630" endtime="20230923 10:14:27.630"/>
</kw>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:14:27.635" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:14:27.639" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:14:27.639" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:14:27.632" endtime="20230923 10:14:27.639"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:14:27.641" level="INFO"/>
<status status="PASS" starttime="20230923 10:14:27.640" endtime="20230923 10:14:27.641"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:14:27.641" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:14:27.641" endtime="20230923 10:14:27.642"/>
</kw>
<status status="PASS" starttime="20230923 10:14:27.632" endtime="20230923 10:14:27.642"/>
</kw>
<msg timestamp="20230923 10:14:27.642" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:14:27.631" endtime="20230923 10:14:27.642"/>
</kw>
<status status="PASS" starttime="20230923 10:14:27.631" endtime="20230923 10:14:27.642"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:14:27.648" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:14:27.652" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:14:27.652" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230923 10:14:27.646" endtime="20230923 10:14:27.652"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:14:27.653" level="INFO">scm</msg>
<status status="PASS" starttime="20230923 10:14:27.653" endtime="20230923 10:14:27.653"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:14:27.654" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:14:27.654" endtime="20230923 10:14:27.654"/>
</kw>
<status status="PASS" starttime="20230923 10:14:27.645" endtime="20230923 10:14:27.654"/>
</kw>
<msg timestamp="20230923 10:14:27.654" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:14:27.645" endtime="20230923 10:14:27.655"/>
</kw>
<msg timestamp="20230923 10:14:27.655" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230923 10:14:27.644" endtime="20230923 10:14:27.655"/>
</kw>
<msg timestamp="20230923 10:14:27.655" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230923 10:14:27.643" endtime="20230923 10:14:27.655"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230923 10:14:27.655" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230923 10:14:27.655" endtime="20230923 10:14:27.656"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:14:27.660" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:14:27.686" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:14:27.686" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:14:27.658" endtime="20230923 10:14:27.686"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:14:27.688" level="INFO"/>
<status status="PASS" starttime="20230923 10:14:27.687" endtime="20230923 10:14:27.688"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:14:27.688" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:14:27.688" endtime="20230923 10:14:27.689"/>
</kw>
<status status="PASS" starttime="20230923 10:14:27.657" endtime="20230923 10:14:27.689"/>
</kw>
<msg timestamp="20230923 10:14:27.689" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:14:27.657" endtime="20230923 10:14:27.689"/>
</kw>
<status status="PASS" starttime="20230923 10:14:27.656" endtime="20230923 10:14:27.689"/>
</kw>
<status status="PASS" starttime="20230923 10:14:27.656" endtime="20230923 10:14:27.689"/>
</kw>
<status status="PASS" starttime="20230923 10:14:27.643" endtime="20230923 10:14:27.689"/>
</kw>
<status status="PASS" starttime="20230923 10:14:27.642" endtime="20230923 10:14:27.689"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume addacl ${protocol}${server}/${volume} -a user:testuser2:xyrw</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:14:27.693" level="INFO">Running command 'ozone sh volume addacl o3://om:9862/84532-acls -a user:testuser2:xyrw 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:14:33.468" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:14:33.468" level="INFO">${output} = ACL user:testuser2:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20230923 10:14:27.691" endtime="20230923 10:14:33.468"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:14:33.470" level="INFO">ACL user:testuser2:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20230923 10:14:33.469" endtime="20230923 10:14:33.470"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:14:33.471" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:14:33.470" endtime="20230923 10:14:33.471"/>
</kw>
<status status="PASS" starttime="20230923 10:14:27.691" endtime="20230923 10:14:33.471"/>
</kw>
<msg timestamp="20230923 10:14:33.471" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:14:27.690" endtime="20230923 10:14:33.471"/>
</kw>
<status status="PASS" starttime="20230923 10:14:27.690" endtime="20230923 10:14:33.471"/>
</kw>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:14:33.476" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:14:33.480" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:14:33.480" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:14:33.473" endtime="20230923 10:14:33.480"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:14:33.482" level="INFO"/>
<status status="PASS" starttime="20230923 10:14:33.481" endtime="20230923 10:14:33.482"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:14:33.483" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:14:33.482" endtime="20230923 10:14:33.483"/>
</kw>
<status status="PASS" starttime="20230923 10:14:33.473" endtime="20230923 10:14:33.483"/>
</kw>
<msg timestamp="20230923 10:14:33.483" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:14:33.472" endtime="20230923 10:14:33.483"/>
</kw>
<status status="PASS" starttime="20230923 10:14:33.472" endtime="20230923 10:14:33.484"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:14:33.489" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:14:33.493" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:14:33.493" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230923 10:14:33.486" endtime="20230923 10:14:33.493"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:14:33.494" level="INFO">scm</msg>
<status status="PASS" starttime="20230923 10:14:33.493" endtime="20230923 10:14:33.494"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:14:33.495" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:14:33.494" endtime="20230923 10:14:33.495"/>
</kw>
<status status="PASS" starttime="20230923 10:14:33.486" endtime="20230923 10:14:33.495"/>
</kw>
<msg timestamp="20230923 10:14:33.495" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:14:33.486" endtime="20230923 10:14:33.495"/>
</kw>
<msg timestamp="20230923 10:14:33.496" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230923 10:14:33.485" endtime="20230923 10:14:33.496"/>
</kw>
<msg timestamp="20230923 10:14:33.496" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230923 10:14:33.485" endtime="20230923 10:14:33.496"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230923 10:14:33.497" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230923 10:14:33.496" endtime="20230923 10:14:33.497"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:14:33.501" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser2.keytab testuser2/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:14:33.531" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:14:33.531" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:14:33.499" endtime="20230923 10:14:33.531"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:14:33.532" level="INFO"/>
<status status="PASS" starttime="20230923 10:14:33.532" endtime="20230923 10:14:33.532"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:14:33.533" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:14:33.533" endtime="20230923 10:14:33.533"/>
</kw>
<status status="PASS" starttime="20230923 10:14:33.498" endtime="20230923 10:14:33.533"/>
</kw>
<msg timestamp="20230923 10:14:33.533" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:14:33.498" endtime="20230923 10:14:33.534"/>
</kw>
<status status="PASS" starttime="20230923 10:14:33.497" endtime="20230923 10:14:33.534"/>
</kw>
<status status="PASS" starttime="20230923 10:14:33.497" endtime="20230923 10:14:33.534"/>
</kw>
<status status="PASS" starttime="20230923 10:14:33.484" endtime="20230923 10:14:33.534"/>
</kw>
<status status="PASS" starttime="20230923 10:14:33.484" endtime="20230923 10:14:33.534"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${protocol}${server}/${volume}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:14:33.537" level="INFO">Running command 'ozone sh bucket list o3://om:9862/84532-acls 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:14:39.004" level="INFO">${rc} = 255</msg>
<msg timestamp="20230923 10:14:39.004" level="INFO">${output} = PERMISSION_DENIED User testuser2 doesn't have LIST permission to access volume Volume:84532-acls </msg>
<status status="PASS" starttime="20230923 10:14:33.535" endtime="20230923 10:14:39.004"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:14:39.006" level="INFO">PERMISSION_DENIED User testuser2 doesn't have LIST permission to access volume Volume:84532-acls </msg>
<status status="PASS" starttime="20230923 10:14:39.005" endtime="20230923 10:14:39.006"/>
</kw>
<msg timestamp="20230923 10:14:39.006" level="INFO">${result} = PERMISSION_DENIED User testuser2 doesn't have LIST permission to access volume Volume:84532-acls </msg>
<status status="PASS" starttime="20230923 10:14:33.534" endtime="20230923 10:14:39.006"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED User testuser2 doesn't have LIST permission to access volume</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:14:39.006" endtime="20230923 10:14:39.007"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume addacl ${protocol}${server}/${volume} -a user:testuser2:l</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:14:39.012" level="INFO">Running command 'ozone sh volume addacl o3://om:9862/84532-acls -a user:testuser2:l 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:14:44.411" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:14:44.411" level="INFO">${output} = ACL user:testuser2:l[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20230923 10:14:39.009" endtime="20230923 10:14:44.411"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:14:44.413" level="INFO">ACL user:testuser2:l[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20230923 10:14:44.412" endtime="20230923 10:14:44.413"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:14:44.414" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:14:44.413" endtime="20230923 10:14:44.414"/>
</kw>
<status status="PASS" starttime="20230923 10:14:39.008" endtime="20230923 10:14:44.414"/>
</kw>
<msg timestamp="20230923 10:14:44.414" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:14:39.008" endtime="20230923 10:14:44.414"/>
</kw>
<status status="PASS" starttime="20230923 10:14:39.007" endtime="20230923 10:14:44.415"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket list ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:14:44.422" level="INFO">Running command 'ozone sh bucket list o3://om:9862/84532-acls 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:14:50.373" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:14:50.373" level="INFO">${output} = [ {
  "metadata" : { },
  "volumeName" : "84532-acls",
  "name" : "bb1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 51867,
  "usedNamespace" : 1,
  "creationTime" : "2023-09-23T...</msg>
<status status="PASS" starttime="20230923 10:14:44.418" endtime="20230923 10:14:50.373"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:14:50.375" level="INFO">[ {
  "metadata" : { },
  "volumeName" : "84532-acls",
  "name" : "bb1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 51867,
  "usedNamespace" : 1,
  "creationTime" : "2023-09-23T10:12:36.879Z",
  "modificationTime" : "2023-09-23T10:13:10.833Z",
  "sourcePathExist" : true,
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "FILE_SYSTEM_OPTIMIZED",
  "owner" : "testuser",
  "link" : false
} ]</msg>
<status status="PASS" starttime="20230923 10:14:50.374" endtime="20230923 10:14:50.375"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:14:50.376" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:14:50.375" endtime="20230923 10:14:50.376"/>
</kw>
<status status="PASS" starttime="20230923 10:14:44.418" endtime="20230923 10:14:50.377"/>
</kw>
<msg timestamp="20230923 10:14:50.377" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:14:44.416" endtime="20230923 10:14:50.377"/>
</kw>
<status status="PASS" starttime="20230923 10:14:44.415" endtime="20230923 10:14:50.377"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:14:50.382" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/84532-acls 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:14:56.450" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:14:56.450" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20230923 10:14:50.379" endtime="20230923 10:14:56.451"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:14:56.452" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser2",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "LIST", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20230923 10:14:56.451" endtime="20230923 10:14:56.452"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:14:56.453" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:14:56.453" endtime="20230923 10:14:56.453"/>
</kw>
<status status="PASS" starttime="20230923 10:14:50.378" endtime="20230923 10:14:56.454"/>
</kw>
<msg timestamp="20230923 10:14:56.454" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:14:50.378" endtime="20230923 10:14:56.454"/>
</kw>
<status status="PASS" starttime="20230923 10:14:50.377" endtime="20230923 10:14:56.454"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:14:56.458" level="INFO">Running command 'ozone sh key list o3://om:9862/84532-acls/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:15:01.946" level="INFO">${rc} = 255</msg>
<msg timestamp="20230923 10:15:01.946" level="INFO">${output} = PERMISSION_DENIED User testuser2 doesn't have READ permission to access bucket Volume:84532-acls Bucket:bb1 </msg>
<status status="PASS" starttime="20230923 10:14:56.455" endtime="20230923 10:15:01.946"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:15:01.947" level="INFO">PERMISSION_DENIED User testuser2 doesn't have READ permission to access bucket Volume:84532-acls Bucket:bb1 </msg>
<status status="PASS" starttime="20230923 10:15:01.946" endtime="20230923 10:15:01.947"/>
</kw>
<msg timestamp="20230923 10:15:01.948" level="INFO">${result} = PERMISSION_DENIED User testuser2 doesn't have READ permission to access bucket Volume:84532-acls Bucket:bb1 </msg>
<status status="PASS" starttime="20230923 10:14:56.454" endtime="20230923 10:15:01.948"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:15:01.948" endtime="20230923 10:15:01.948"/>
</kw>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:15:01.953" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:15:01.957" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:15:01.957" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:15:01.950" endtime="20230923 10:15:01.957"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:15:01.959" level="INFO"/>
<status status="PASS" starttime="20230923 10:15:01.958" endtime="20230923 10:15:01.959"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:15:01.960" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:15:01.959" endtime="20230923 10:15:01.960"/>
</kw>
<status status="PASS" starttime="20230923 10:15:01.949" endtime="20230923 10:15:01.960"/>
</kw>
<msg timestamp="20230923 10:15:01.960" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:15:01.949" endtime="20230923 10:15:01.960"/>
</kw>
<status status="PASS" starttime="20230923 10:15:01.948" endtime="20230923 10:15:01.960"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:15:01.966" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:15:01.971" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:15:01.971" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230923 10:15:01.963" endtime="20230923 10:15:01.971"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:15:01.972" level="INFO">scm</msg>
<status status="PASS" starttime="20230923 10:15:01.971" endtime="20230923 10:15:01.972"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:15:01.973" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:15:01.973" endtime="20230923 10:15:01.973"/>
</kw>
<status status="PASS" starttime="20230923 10:15:01.963" endtime="20230923 10:15:01.973"/>
</kw>
<msg timestamp="20230923 10:15:01.974" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:15:01.963" endtime="20230923 10:15:01.974"/>
</kw>
<msg timestamp="20230923 10:15:01.974" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230923 10:15:01.962" endtime="20230923 10:15:01.974"/>
</kw>
<msg timestamp="20230923 10:15:01.974" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230923 10:15:01.962" endtime="20230923 10:15:01.974"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230923 10:15:01.975" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230923 10:15:01.974" endtime="20230923 10:15:01.975"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:15:01.980" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:15:01.998" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:15:01.998" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:15:01.977" endtime="20230923 10:15:01.998"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:15:01.999" level="INFO"/>
<status status="PASS" starttime="20230923 10:15:01.999" endtime="20230923 10:15:01.999"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:15:02.000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:15:02.000" endtime="20230923 10:15:02.000"/>
</kw>
<status status="PASS" starttime="20230923 10:15:01.977" endtime="20230923 10:15:02.001"/>
</kw>
<msg timestamp="20230923 10:15:02.001" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:15:01.976" endtime="20230923 10:15:02.001"/>
</kw>
<status status="PASS" starttime="20230923 10:15:01.976" endtime="20230923 10:15:02.001"/>
</kw>
<status status="PASS" starttime="20230923 10:15:01.975" endtime="20230923 10:15:02.001"/>
</kw>
<status status="PASS" starttime="20230923 10:15:01.961" endtime="20230923 10:15:02.001"/>
</kw>
<status status="PASS" starttime="20230923 10:15:01.961" endtime="20230923 10:15:02.001"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl ${protocol}${server}/${volume}/bb1 -a user:testuser2:a</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:15:02.005" level="INFO">Running command 'ozone sh bucket addacl o3://om:9862/84532-acls/bb1 -a user:testuser2:a 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:15:07.462" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:15:07.462" level="INFO">${output} = ACL user:testuser2:a[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20230923 10:15:02.003" endtime="20230923 10:15:07.462"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:15:07.463" level="INFO">ACL user:testuser2:a[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20230923 10:15:07.462" endtime="20230923 10:15:07.463"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:15:07.464" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:15:07.464" endtime="20230923 10:15:07.464"/>
</kw>
<status status="PASS" starttime="20230923 10:15:02.002" endtime="20230923 10:15:07.465"/>
</kw>
<msg timestamp="20230923 10:15:07.465" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:15:02.002" endtime="20230923 10:15:07.465"/>
</kw>
<status status="PASS" starttime="20230923 10:15:02.001" endtime="20230923 10:15:07.465"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:15:07.469" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/84532-acls/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:15:13.133" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:15:13.134" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20230923 10:15:07.467" endtime="20230923 10:15:13.134"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:15:13.135" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser2",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20230923 10:15:13.134" endtime="20230923 10:15:13.135"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:15:13.136" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:15:13.135" endtime="20230923 10:15:13.136"/>
</kw>
<status status="PASS" starttime="20230923 10:15:07.466" endtime="20230923 10:15:13.136"/>
</kw>
<msg timestamp="20230923 10:15:13.136" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:15:07.466" endtime="20230923 10:15:13.136"/>
</kw>
<status status="PASS" starttime="20230923 10:15:07.465" endtime="20230923 10:15:13.137"/>
</kw>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:15:13.141" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:15:13.145" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:15:13.146" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:15:13.138" endtime="20230923 10:15:13.146"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:15:13.147" level="INFO"/>
<status status="PASS" starttime="20230923 10:15:13.146" endtime="20230923 10:15:13.147"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:15:13.147" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:15:13.147" endtime="20230923 10:15:13.148"/>
</kw>
<status status="PASS" starttime="20230923 10:15:13.138" endtime="20230923 10:15:13.148"/>
</kw>
<msg timestamp="20230923 10:15:13.148" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:15:13.137" endtime="20230923 10:15:13.148"/>
</kw>
<status status="PASS" starttime="20230923 10:15:13.137" endtime="20230923 10:15:13.148"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:15:13.154" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:15:13.158" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:15:13.158" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230923 10:15:13.152" endtime="20230923 10:15:13.158"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:15:13.159" level="INFO">scm</msg>
<status status="PASS" starttime="20230923 10:15:13.159" endtime="20230923 10:15:13.160"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:15:13.160" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:15:13.160" endtime="20230923 10:15:13.160"/>
</kw>
<status status="PASS" starttime="20230923 10:15:13.151" endtime="20230923 10:15:13.161"/>
</kw>
<msg timestamp="20230923 10:15:13.161" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:15:13.151" endtime="20230923 10:15:13.161"/>
</kw>
<msg timestamp="20230923 10:15:13.161" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230923 10:15:13.150" endtime="20230923 10:15:13.161"/>
</kw>
<msg timestamp="20230923 10:15:13.161" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230923 10:15:13.149" endtime="20230923 10:15:13.161"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230923 10:15:13.162" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230923 10:15:13.162" endtime="20230923 10:15:13.162"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:15:13.167" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser2.keytab testuser2/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:15:13.214" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:15:13.214" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:15:13.164" endtime="20230923 10:15:13.214"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:15:13.215" level="INFO"/>
<status status="PASS" starttime="20230923 10:15:13.214" endtime="20230923 10:15:13.215"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:15:13.216" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:15:13.215" endtime="20230923 10:15:13.216"/>
</kw>
<status status="PASS" starttime="20230923 10:15:13.164" endtime="20230923 10:15:13.216"/>
</kw>
<msg timestamp="20230923 10:15:13.216" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:15:13.163" endtime="20230923 10:15:13.216"/>
</kw>
<status status="PASS" starttime="20230923 10:15:13.163" endtime="20230923 10:15:13.217"/>
</kw>
<status status="PASS" starttime="20230923 10:15:13.162" endtime="20230923 10:15:13.217"/>
</kw>
<status status="PASS" starttime="20230923 10:15:13.149" endtime="20230923 10:15:13.217"/>
</kw>
<status status="PASS" starttime="20230923 10:15:13.148" endtime="20230923 10:15:13.217"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:15:13.222" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/84532-acls/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:15:19.479" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:15:19.479" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20230923 10:15:13.219" endtime="20230923 10:15:19.479"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:15:19.481" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser2",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20230923 10:15:19.480" endtime="20230923 10:15:19.481"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:15:19.481" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:15:19.481" endtime="20230923 10:15:19.481"/>
</kw>
<status status="PASS" starttime="20230923 10:15:13.218" endtime="20230923 10:15:19.482"/>
</kw>
<msg timestamp="20230923 10:15:19.482" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:15:13.218" endtime="20230923 10:15:19.482"/>
</kw>
<status status="PASS" starttime="20230923 10:15:13.217" endtime="20230923 10:15:19.482"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:15:19.487" level="INFO">Running command 'ozone sh key list o3://om:9862/84532-acls/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:15:25.602" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:15:25.602" level="INFO">${output} = [ {
  "volumeName" : "84532-acls",
  "bucketName" : "bb1",
  "name" : "key2",
  "dataSize" : 17289,
  "creationTime" : "2023-09-23T10:13:22.695Z",
  "modificationTime" : "2023-09-23T10:13:58.900Z",
  ...</msg>
<status status="PASS" starttime="20230923 10:15:19.484" endtime="20230923 10:15:25.602"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:15:25.604" level="INFO">[ {
  "volumeName" : "84532-acls",
  "bucketName" : "bb1",
  "name" : "key2",
  "dataSize" : 17289,
  "creationTime" : "2023-09-23T10:13:22.695Z",
  "modificationTime" : "2023-09-23T10:13:58.900Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "file" : true
} ]</msg>
<status status="PASS" starttime="20230923 10:15:25.603" endtime="20230923 10:15:25.604"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:15:25.605" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:15:25.604" endtime="20230923 10:15:25.605"/>
</kw>
<status status="PASS" starttime="20230923 10:15:19.483" endtime="20230923 10:15:25.605"/>
</kw>
<msg timestamp="20230923 10:15:25.605" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:15:19.483" endtime="20230923 10:15:25.605"/>
</kw>
<status status="PASS" starttime="20230923 10:15:19.482" endtime="20230923 10:15:25.606"/>
</kw>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:15:25.611" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:15:25.616" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:15:25.616" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:15:25.608" endtime="20230923 10:15:25.617"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:15:25.618" level="INFO"/>
<status status="PASS" starttime="20230923 10:15:25.617" endtime="20230923 10:15:25.618"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:15:25.619" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:15:25.618" endtime="20230923 10:15:25.619"/>
</kw>
<status status="PASS" starttime="20230923 10:15:25.607" endtime="20230923 10:15:25.619"/>
</kw>
<msg timestamp="20230923 10:15:25.619" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:15:25.607" endtime="20230923 10:15:25.619"/>
</kw>
<status status="PASS" starttime="20230923 10:15:25.606" endtime="20230923 10:15:25.619"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:15:25.625" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:15:25.630" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:15:25.630" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230923 10:15:25.623" endtime="20230923 10:15:25.630"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:15:25.631" level="INFO">scm</msg>
<status status="PASS" starttime="20230923 10:15:25.630" endtime="20230923 10:15:25.631"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:15:25.632" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:15:25.631" endtime="20230923 10:15:25.632"/>
</kw>
<status status="PASS" starttime="20230923 10:15:25.622" endtime="20230923 10:15:25.632"/>
</kw>
<msg timestamp="20230923 10:15:25.632" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:15:25.622" endtime="20230923 10:15:25.632"/>
</kw>
<msg timestamp="20230923 10:15:25.632" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230923 10:15:25.621" endtime="20230923 10:15:25.633"/>
</kw>
<msg timestamp="20230923 10:15:25.633" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230923 10:15:25.621" endtime="20230923 10:15:25.633"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230923 10:15:25.633" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230923 10:15:25.633" endtime="20230923 10:15:25.634"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:15:25.638" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:15:25.659" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:15:25.659" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:15:25.636" endtime="20230923 10:15:25.659"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:15:25.660" level="INFO"/>
<status status="PASS" starttime="20230923 10:15:25.659" endtime="20230923 10:15:25.660"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:15:25.661" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:15:25.661" endtime="20230923 10:15:25.661"/>
</kw>
<status status="PASS" starttime="20230923 10:15:25.635" endtime="20230923 10:15:25.661"/>
</kw>
<msg timestamp="20230923 10:15:25.662" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:15:25.635" endtime="20230923 10:15:25.662"/>
</kw>
<status status="PASS" starttime="20230923 10:15:25.634" endtime="20230923 10:15:25.662"/>
</kw>
<status status="PASS" starttime="20230923 10:15:25.634" endtime="20230923 10:15:25.662"/>
</kw>
<status status="PASS" starttime="20230923 10:15:25.620" endtime="20230923 10:15:25.662"/>
</kw>
<status status="PASS" starttime="20230923 10:15:25.620" endtime="20230923 10:15:25.662"/>
</kw>
<status status="PASS" starttime="20230923 10:14:05.093" endtime="20230923 10:15:25.662"/>
</kw>
<timeout value="10 minutes"/>
<status status="PASS" starttime="20230923 10:14:05.042" endtime="20230923 10:15:25.662"/>
</test>
<test id="s1-s4-s5-t7" name="RpcClient prefix acls" line="45">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:15:25.670" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:15:25.674" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:15:25.674" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230923 10:15:25.668" endtime="20230923 10:15:25.674"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:15:25.675" level="INFO">scm</msg>
<status status="PASS" starttime="20230923 10:15:25.675" endtime="20230923 10:15:25.675"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:15:25.676" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:15:25.676" endtime="20230923 10:15:25.676"/>
</kw>
<status status="PASS" starttime="20230923 10:15:25.667" endtime="20230923 10:15:25.677"/>
</kw>
<msg timestamp="20230923 10:15:25.677" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:15:25.667" endtime="20230923 10:15:25.677"/>
</kw>
<msg timestamp="20230923 10:15:25.677" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230923 10:15:25.666" endtime="20230923 10:15:25.677"/>
</kw>
<msg timestamp="20230923 10:15:25.677" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230923 10:15:25.666" endtime="20230923 10:15:25.677"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230923 10:15:25.678" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230923 10:15:25.678" endtime="20230923 10:15:25.678"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:15:25.683" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:15:25.713" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:15:25.713" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:15:25.681" endtime="20230923 10:15:25.713"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:15:25.714" level="INFO"/>
<status status="PASS" starttime="20230923 10:15:25.714" endtime="20230923 10:15:25.715"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:15:25.715" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:15:25.715" endtime="20230923 10:15:25.715"/>
</kw>
<status status="PASS" starttime="20230923 10:15:25.680" endtime="20230923 10:15:25.716"/>
</kw>
<msg timestamp="20230923 10:15:25.716" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:15:25.680" endtime="20230923 10:15:25.716"/>
</kw>
<status status="PASS" starttime="20230923 10:15:25.679" endtime="20230923 10:15:25.716"/>
</kw>
<status status="PASS" starttime="20230923 10:15:25.678" endtime="20230923 10:15:25.716"/>
</kw>
<status status="PASS" starttime="20230923 10:15:25.665" endtime="20230923 10:15:25.716"/>
</kw>
<status status="PASS" starttime="20230923 10:15:25.665" endtime="20230923 10:15:25.716"/>
</kw>
<kw name="Test prefix Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-acls</arg>
<kw name="Execute" library="os">
<arg>ozone sh prefix addacl ${protocol}${server}/${volume}/bb1/prefix1/ -a user:superuser1:rwxy[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:15:25.721" level="INFO">Running command 'ozone sh prefix addacl o3://om:9862/84532-acls/bb1/prefix1/ -a user:superuser1:rwxy[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:15:31.553" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:15:31.553" level="INFO">${output} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20230923 10:15:25.719" endtime="20230923 10:15:31.553"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:15:31.554" level="INFO">ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20230923 10:15:31.553" endtime="20230923 10:15:31.554"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:15:31.555" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:15:31.555" endtime="20230923 10:15:31.555"/>
</kw>
<status status="PASS" starttime="20230923 10:15:25.718" endtime="20230923 10:15:31.555"/>
</kw>
<msg timestamp="20230923 10:15:31.555" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:15:25.718" endtime="20230923 10:15:31.556"/>
</kw>
<status status="PASS" starttime="20230923 10:15:25.717" endtime="20230923 10:15:31.556"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix getacl ${protocol}${server}/${volume}/bb1/prefix1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:15:31.561" level="INFO">Running command 'ozone sh prefix getacl o3://om:9862/84532-acls/bb1/prefix1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:15:37.144" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:15:37.144" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20230923 10:15:31.558" endtime="20230923 10:15:37.144"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:15:37.145" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20230923 10:15:37.144" endtime="20230923 10:15:37.145"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:15:37.146" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:15:37.146" endtime="20230923 10:15:37.146"/>
</kw>
<status status="PASS" starttime="20230923 10:15:31.557" endtime="20230923 10:15:37.146"/>
</kw>
<msg timestamp="20230923 10:15:37.146" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:15:31.557" endtime="20230923 10:15:37.147"/>
</kw>
<msg timestamp="20230923 10:15:37.147" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20230923 10:15:31.556" endtime="20230923 10:15:37.147"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20230923 10:15:37.147" endtime="20230923 10:15:37.148"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix removeacl ${protocol}${server}/${volume}/bb1/prefix1/ -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:15:37.153" level="INFO">Running command 'ozone sh prefix removeacl o3://om:9862/84532-acls/bb1/prefix1/ -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:15:42.683" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:15:42.683" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20230923 10:15:37.150" endtime="20230923 10:15:42.683"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:15:42.685" level="INFO">ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20230923 10:15:42.684" endtime="20230923 10:15:42.686"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:15:42.686" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:15:42.686" endtime="20230923 10:15:42.686"/>
</kw>
<status status="PASS" starttime="20230923 10:15:37.150" endtime="20230923 10:15:42.687"/>
</kw>
<msg timestamp="20230923 10:15:42.687" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:15:37.149" endtime="20230923 10:15:42.687"/>
</kw>
<msg timestamp="20230923 10:15:42.687" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20230923 10:15:37.148" endtime="20230923 10:15:42.687"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix getacl ${protocol}${server}/${volume}/bb1/prefix1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:15:42.692" level="INFO">Running command 'ozone sh prefix getacl o3://om:9862/84532-acls/bb1/prefix1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:15:48.781" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:15:48.781" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20230923 10:15:42.689" endtime="20230923 10:15:48.781"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:15:48.783" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20230923 10:15:48.782" endtime="20230923 10:15:48.783"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:15:48.784" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:15:48.784" endtime="20230923 10:15:48.784"/>
</kw>
<status status="PASS" starttime="20230923 10:15:42.688" endtime="20230923 10:15:48.785"/>
</kw>
<msg timestamp="20230923 10:15:48.785" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:15:42.688" endtime="20230923 10:15:48.785"/>
</kw>
<msg timestamp="20230923 10:15:48.785" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20230923 10:15:42.687" endtime="20230923 10:15:48.785"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20230923 10:15:48.785" endtime="20230923 10:15:48.786"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix setacl ${protocol}${server}/${volume}/bb1/prefix1/ -al user:superuser1:rwxy[DEFAULT],group:superuser1:a[DEFAULT],user:testuser:rwxyc</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:15:48.791" level="INFO">Running command 'ozone sh prefix setacl o3://om:9862/84532-acls/bb1/prefix1/ -al user:superuser1:rwxy[DEFAULT],group:superuser1:a[DEFAULT],user:testuser:rwxyc 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:15:54.841" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:15:54.841" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20230923 10:15:48.788" endtime="20230923 10:15:54.841"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:15:54.843" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20230923 10:15:54.842" endtime="20230923 10:15:54.843"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:15:54.844" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:15:54.843" endtime="20230923 10:15:54.844"/>
</kw>
<status status="PASS" starttime="20230923 10:15:48.788" endtime="20230923 10:15:54.844"/>
</kw>
<msg timestamp="20230923 10:15:54.844" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:15:48.787" endtime="20230923 10:15:54.844"/>
</kw>
<msg timestamp="20230923 10:15:54.845" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20230923 10:15:48.786" endtime="20230923 10:15:54.845"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix getacl ${protocol}${server}/${volume}/bb1/prefix1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:15:54.850" level="INFO">Running command 'ozone sh prefix getacl o3://om:9862/84532-acls/bb1/prefix1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:16:00.703" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:16:00.703" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "D...</msg>
<status status="PASS" starttime="20230923 10:15:54.846" endtime="20230923 10:16:00.704"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:16:00.705" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20230923 10:16:00.704" endtime="20230923 10:16:00.705"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:16:00.706" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:16:00.705" endtime="20230923 10:16:00.706"/>
</kw>
<status status="PASS" starttime="20230923 10:15:54.846" endtime="20230923 10:16:00.706"/>
</kw>
<msg timestamp="20230923 10:16:00.706" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:15:54.846" endtime="20230923 10:16:00.706"/>
</kw>
<msg timestamp="20230923 10:16:00.707" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "D...</msg>
<status status="PASS" starttime="20230923 10:15:54.845" endtime="20230923 10:16:00.707"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20230923 10:16:00.707" endtime="20230923 10:16:00.707"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20230923 10:16:00.708" endtime="20230923 10:16:00.708"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/prefix1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:16:00.713" level="INFO">Running command 'ozone sh key put o3://om:9862/84532-acls/bb1/prefix1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:16:08.791" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:16:08.791" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:16:00.710" endtime="20230923 10:16:08.791"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:16:08.792" level="INFO"/>
<status status="PASS" starttime="20230923 10:16:08.791" endtime="20230923 10:16:08.792"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:16:08.793" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:16:08.793" endtime="20230923 10:16:08.793"/>
</kw>
<status status="PASS" starttime="20230923 10:16:00.709" endtime="20230923 10:16:08.794"/>
</kw>
<msg timestamp="20230923 10:16:08.794" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:16:00.709" endtime="20230923 10:16:08.794"/>
</kw>
<status status="PASS" starttime="20230923 10:16:00.708" endtime="20230923 10:16:08.794"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/prefix1/key1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:16:08.799" level="INFO">Running command 'ozone sh key getacl o3://om:9862/84532-acls/bb1/prefix1/key1 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:16:14.437" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:16:14.437" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ ...</msg>
<status status="PASS" starttime="20230923 10:16:08.796" endtime="20230923 10:16:14.437"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:16:14.439" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20230923 10:16:14.438" endtime="20230923 10:16:14.439"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:16:14.440" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:16:14.439" endtime="20230923 10:16:14.440"/>
</kw>
<status status="PASS" starttime="20230923 10:16:08.796" endtime="20230923 10:16:14.440"/>
</kw>
<msg timestamp="20230923 10:16:14.440" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:16:08.795" endtime="20230923 10:16:14.440"/>
</kw>
<msg timestamp="20230923 10:16:14.440" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ ...</msg>
<status status="PASS" starttime="20230923 10:16:08.794" endtime="20230923 10:16:14.441"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20230923 10:16:14.441" endtime="20230923 10:16:14.441"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20230923 10:16:14.442" endtime="20230923 10:16:14.442"/>
</kw>
<status status="PASS" starttime="20230923 10:15:25.716" endtime="20230923 10:16:14.442"/>
</kw>
<timeout value="10 minutes"/>
<status status="PASS" starttime="20230923 10:15:25.664" endtime="20230923 10:16:14.442"/>
</test>
<test id="s1-s4-s5-t8" name="RpcClient without host" line="48">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:16:14.452" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:16:14.456" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:16:14.456" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230923 10:16:14.449" endtime="20230923 10:16:14.456"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:16:14.457" level="INFO">scm</msg>
<status status="PASS" starttime="20230923 10:16:14.457" endtime="20230923 10:16:14.457"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:16:14.458" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:16:14.458" endtime="20230923 10:16:14.458"/>
</kw>
<status status="PASS" starttime="20230923 10:16:14.448" endtime="20230923 10:16:14.459"/>
</kw>
<msg timestamp="20230923 10:16:14.459" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:16:14.448" endtime="20230923 10:16:14.459"/>
</kw>
<msg timestamp="20230923 10:16:14.459" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230923 10:16:14.448" endtime="20230923 10:16:14.459"/>
</kw>
<msg timestamp="20230923 10:16:14.459" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230923 10:16:14.447" endtime="20230923 10:16:14.459"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230923 10:16:14.460" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230923 10:16:14.460" endtime="20230923 10:16:14.460"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:16:14.465" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:16:14.493" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:16:14.493" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:16:14.462" endtime="20230923 10:16:14.493"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:16:14.495" level="INFO"/>
<status status="PASS" starttime="20230923 10:16:14.494" endtime="20230923 10:16:14.495"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:16:14.496" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:16:14.495" endtime="20230923 10:16:14.496"/>
</kw>
<status status="PASS" starttime="20230923 10:16:14.462" endtime="20230923 10:16:14.496"/>
</kw>
<msg timestamp="20230923 10:16:14.496" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:16:14.462" endtime="20230923 10:16:14.496"/>
</kw>
<status status="PASS" starttime="20230923 10:16:14.461" endtime="20230923 10:16:14.496"/>
</kw>
<status status="PASS" starttime="20230923 10:16:14.460" endtime="20230923 10:16:14.497"/>
</kw>
<status status="PASS" starttime="20230923 10:16:14.447" endtime="20230923 10:16:14.497"/>
</kw>
<status status="PASS" starttime="20230923 10:16:14.446" endtime="20230923 10:16:14.497"/>
</kw>
<kw name="Test ozone shell" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-without-host</arg>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:16:14.502" level="INFO">Running command 'ozone sh volume info o3:///84532-without-host 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:16:20.465" level="INFO">${rc} = 255</msg>
<msg timestamp="20230923 10:16:20.465" level="INFO">${output} = VOLUME_NOT_FOUND Volume 84532-without-host is not found</msg>
<status status="PASS" starttime="20230923 10:16:14.499" endtime="20230923 10:16:20.465"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:16:20.466" level="INFO">VOLUME_NOT_FOUND Volume 84532-without-host is not found</msg>
<status status="PASS" starttime="20230923 10:16:20.465" endtime="20230923 10:16:20.466"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:16:20.467" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:16:20.467" endtime="20230923 10:16:20.467"/>
</kw>
<msg timestamp="20230923 10:16:20.468" level="INFO">${result} = VOLUME_NOT_FOUND Volume 84532-without-host is not found</msg>
<status status="PASS" starttime="20230923 10:16:14.499" endtime="20230923 10:16:20.468"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:16:20.468" endtime="20230923 10:16:20.469"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:16:20.480" level="INFO">Running command 'ozone sh volume create o3:///84532-without-host --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:16:25.943" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:16:25.943" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:16:20.471" endtime="20230923 10:16:25.943"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:16:25.945" level="INFO"/>
<status status="PASS" starttime="20230923 10:16:25.944" endtime="20230923 10:16:25.945"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:16:25.946" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:16:25.945" endtime="20230923 10:16:25.946"/>
</kw>
<status status="PASS" starttime="20230923 10:16:20.471" endtime="20230923 10:16:25.946"/>
</kw>
<msg timestamp="20230923 10:16:25.946" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:16:20.470" endtime="20230923 10:16:25.946"/>
</kw>
<msg timestamp="20230923 10:16:25.947" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230923 10:16:20.469" endtime="20230923 10:16:25.947"/>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<arg>${result}</arg>
<doc>Verifies that the given item is empty.</doc>
<msg timestamp="20230923 10:16:25.947" level="INFO">Length is 0</msg>
<status status="PASS" starttime="20230923 10:16:25.947" endtime="20230923 10:16:25.947"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '.[] | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:16:25.952" level="INFO">Running command 'ozone sh volume list o3:/// | jq -r '.[] | select(.name=="84532-without-host")' 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:16:31.992" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:16:31.992" level="INFO">${output} = {
  "metadata": {},
  "name": "84532-without-host",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": ...</msg>
<status status="PASS" starttime="20230923 10:16:25.949" endtime="20230923 10:16:31.992"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:16:31.994" level="INFO">{
  "metadata": {},
  "name": "84532-without-host",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2023-09-23T10:16:25.861Z",
  "modificationTime": "2023-09-23T10:16:25.861Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "refCount": 0
}</msg>
<status status="PASS" starttime="20230923 10:16:31.993" endtime="20230923 10:16:31.994"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:16:31.995" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:16:31.994" endtime="20230923 10:16:31.995"/>
</kw>
<status status="PASS" starttime="20230923 10:16:25.949" endtime="20230923 10:16:31.995"/>
</kw>
<msg timestamp="20230923 10:16:31.995" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:16:25.948" endtime="20230923 10:16:31.995"/>
</kw>
<msg timestamp="20230923 10:16:31.996" level="INFO">${result} = {
  "metadata": {},
  "name": "84532-without-host",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": ...</msg>
<status status="PASS" starttime="20230923 10:16:25.947" endtime="20230923 10:16:31.996"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:16:31.996" endtime="20230923 10:16:31.996"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:16:32.001" level="INFO">Running command 'ozone sh volume setquota o3:///84532-without-host --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:16:37.263" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:16:37.263" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:16:31.998" endtime="20230923 10:16:37.263"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:16:37.264" level="INFO"/>
<status status="PASS" starttime="20230923 10:16:37.263" endtime="20230923 10:16:37.265"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:16:37.265" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:16:37.265" endtime="20230923 10:16:37.265"/>
</kw>
<status status="PASS" starttime="20230923 10:16:31.998" endtime="20230923 10:16:37.266"/>
</kw>
<msg timestamp="20230923 10:16:37.266" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:16:31.997" endtime="20230923 10:16:37.266"/>
</kw>
<status status="PASS" starttime="20230923 10:16:31.996" endtime="20230923 10:16:37.266"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:16:37.271" level="INFO">Running command 'ozone sh volume info o3:///84532-without-host | jq -r '. | select(.name=="84532-without-host") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:16:43.084" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:16:43.085" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20230923 10:16:37.268" endtime="20230923 10:16:43.085"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:16:43.086" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20230923 10:16:43.085" endtime="20230923 10:16:43.086"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:16:43.087" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:16:43.086" endtime="20230923 10:16:43.087"/>
</kw>
<status status="PASS" starttime="20230923 10:16:37.268" endtime="20230923 10:16:43.087"/>
</kw>
<msg timestamp="20230923 10:16:43.087" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:16:37.267" endtime="20230923 10:16:43.087"/>
</kw>
<msg timestamp="20230923 10:16:43.088" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20230923 10:16:37.266" endtime="20230923 10:16:43.088"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230923 10:16:43.088" endtime="20230923 10:16:43.088"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:16:43.093" level="INFO">Running command 'ozone sh bucket create o3:///84532-without-host/bb1 --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:16:48.920" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:16:48.920" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:16:43.091" endtime="20230923 10:16:48.920"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:16:48.921" level="INFO"/>
<status status="PASS" starttime="20230923 10:16:48.921" endtime="20230923 10:16:48.922"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:16:48.922" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:16:48.922" endtime="20230923 10:16:48.922"/>
</kw>
<status status="PASS" starttime="20230923 10:16:43.090" endtime="20230923 10:16:48.923"/>
</kw>
<msg timestamp="20230923 10:16:48.923" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:16:43.089" endtime="20230923 10:16:48.923"/>
</kw>
<msg timestamp="20230923 10:16:48.923" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230923 10:16:43.089" endtime="20230923 10:16:48.923"/>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<arg>${result}</arg>
<doc>Verifies that the given item is empty.</doc>
<msg timestamp="20230923 10:16:48.924" level="INFO">Length is 0</msg>
<status status="PASS" starttime="20230923 10:16:48.923" endtime="20230923 10:16:48.924"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 &gt; bb1.json</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:16:48.929" level="INFO">Running command 'ozone sh bucket info o3:///84532-without-host/bb1 &gt; bb1.json'.</msg>
<msg timestamp="20230923 10:16:54.684" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:16:54.684" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:16:48.926" endtime="20230923 10:16:54.684"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:16:54.685" level="INFO"/>
<status status="PASS" starttime="20230923 10:16:54.684" endtime="20230923 10:16:54.685"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:16:54.686" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:16:54.685" endtime="20230923 10:16:54.686"/>
</kw>
<status status="PASS" starttime="20230923 10:16:48.925" endtime="20230923 10:16:54.686"/>
</kw>
<msg timestamp="20230923 10:16:54.686" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:16:48.925" endtime="20230923 10:16:54.686"/>
</kw>
<status status="PASS" starttime="20230923 10:16:48.924" endtime="20230923 10:16:54.687"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>jq -r '. | select(.name=="bb1") | .storageType' bb1.json</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:16:54.691" level="INFO">Running command 'jq -r '. | select(.name=="bb1") | .storageType' bb1.json 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:16:54.734" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:16:54.734" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20230923 10:16:54.688" endtime="20230923 10:16:54.734"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:16:54.735" level="INFO">DISK</msg>
<status status="PASS" starttime="20230923 10:16:54.735" endtime="20230923 10:16:54.735"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:16:54.736" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:16:54.736" endtime="20230923 10:16:54.736"/>
</kw>
<status status="PASS" starttime="20230923 10:16:54.688" endtime="20230923 10:16:54.737"/>
</kw>
<msg timestamp="20230923 10:16:54.737" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:16:54.687" endtime="20230923 10:16:54.737"/>
</kw>
<msg timestamp="20230923 10:16:54.737" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20230923 10:16:54.687" endtime="20230923 10:16:54.737"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>DISK</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230923 10:16:54.737" endtime="20230923 10:16:54.738"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>jq -r '. | select(.name=="bb1") | .quotaInBytes' bb1.json</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:16:54.742" level="INFO">Running command 'jq -r '. | select(.name=="bb1") | .quotaInBytes' bb1.json 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:16:54.786" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:16:54.787" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20230923 10:16:54.739" endtime="20230923 10:16:54.787"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:16:54.788" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20230923 10:16:54.787" endtime="20230923 10:16:54.788"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:16:54.789" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:16:54.788" endtime="20230923 10:16:54.789"/>
</kw>
<status status="PASS" starttime="20230923 10:16:54.739" endtime="20230923 10:16:54.789"/>
</kw>
<msg timestamp="20230923 10:16:54.789" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:16:54.738" endtime="20230923 10:16:54.789"/>
</kw>
<msg timestamp="20230923 10:16:54.789" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20230923 10:16:54.738" endtime="20230923 10:16:54.789"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230923 10:16:54.789" endtime="20230923 10:16:54.790"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>jq -r '. | select(.name=="bb1") | .quotaInNamespace' bb1.json</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:16:54.794" level="INFO">Running command 'jq -r '. | select(.name=="bb1") | .quotaInNamespace' bb1.json 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:16:54.843" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:16:54.843" level="INFO">${output} = 100</msg>
<status status="PASS" starttime="20230923 10:16:54.792" endtime="20230923 10:16:54.843"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:16:54.845" level="INFO">100</msg>
<status status="PASS" starttime="20230923 10:16:54.844" endtime="20230923 10:16:54.845"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:16:54.846" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:16:54.845" endtime="20230923 10:16:54.847"/>
</kw>
<status status="PASS" starttime="20230923 10:16:54.791" endtime="20230923 10:16:54.847"/>
</kw>
<msg timestamp="20230923 10:16:54.847" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:16:54.791" endtime="20230923 10:16:54.847"/>
</kw>
<msg timestamp="20230923 10:16:54.847" level="INFO">${result} = 100</msg>
<status status="PASS" starttime="20230923 10:16:54.790" endtime="20230923 10:16:54.847"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>100</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230923 10:16:54.847" endtime="20230923 10:16:54.848"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:16:54.852" level="INFO">Running command 'ozone sh bucket setquota o3:///84532-without-host/bb1 --space-quota 1TB --namespace-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:17:00.618" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:17:00.618" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:16:54.850" endtime="20230923 10:17:00.618"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:17:00.620" level="INFO"/>
<status status="PASS" starttime="20230923 10:17:00.619" endtime="20230923 10:17:00.620"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:17:00.621" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:17:00.620" endtime="20230923 10:17:00.621"/>
</kw>
<status status="PASS" starttime="20230923 10:16:54.849" endtime="20230923 10:17:00.621"/>
</kw>
<msg timestamp="20230923 10:17:00.621" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:16:54.849" endtime="20230923 10:17:00.622"/>
</kw>
<status status="PASS" starttime="20230923 10:16:54.848" endtime="20230923 10:17:00.622"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 &gt; bb1.json</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:17:00.627" level="INFO">Running command 'ozone sh bucket info o3:///84532-without-host/bb1 &gt; bb1.json'.</msg>
<msg timestamp="20230923 10:17:06.526" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:17:06.527" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:17:00.624" endtime="20230923 10:17:06.527"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:17:06.528" level="INFO"/>
<status status="PASS" starttime="20230923 10:17:06.527" endtime="20230923 10:17:06.528"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:17:06.529" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:17:06.528" endtime="20230923 10:17:06.529"/>
</kw>
<status status="PASS" starttime="20230923 10:17:00.623" endtime="20230923 10:17:06.529"/>
</kw>
<msg timestamp="20230923 10:17:06.529" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:17:00.623" endtime="20230923 10:17:06.529"/>
</kw>
<status status="PASS" starttime="20230923 10:17:00.622" endtime="20230923 10:17:06.530"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>jq -r '. | select(.name=="bb1") | .quotaInBytes' bb1.json</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:17:06.534" level="INFO">Running command 'jq -r '. | select(.name=="bb1") | .quotaInBytes' bb1.json 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:17:06.580" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:17:06.580" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" starttime="20230923 10:17:06.531" endtime="20230923 10:17:06.580"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:17:06.581" level="INFO">1099511627776</msg>
<status status="PASS" starttime="20230923 10:17:06.581" endtime="20230923 10:17:06.582"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:17:06.582" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:17:06.582" endtime="20230923 10:17:06.582"/>
</kw>
<status status="PASS" starttime="20230923 10:17:06.531" endtime="20230923 10:17:06.583"/>
</kw>
<msg timestamp="20230923 10:17:06.583" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:17:06.531" endtime="20230923 10:17:06.583"/>
</kw>
<msg timestamp="20230923 10:17:06.583" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" starttime="20230923 10:17:06.530" endtime="20230923 10:17:06.583"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1099511627776</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230923 10:17:06.583" endtime="20230923 10:17:06.584"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>jq -r '. | select(.name=="bb1") | .quotaInNamespace' bb1.json</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:17:06.588" level="INFO">Running command 'jq -r '. | select(.name=="bb1") | .quotaInNamespace' bb1.json 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:17:06.632" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:17:06.632" level="INFO">${output} = 1000</msg>
<status status="PASS" starttime="20230923 10:17:06.585" endtime="20230923 10:17:06.632"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:17:06.633" level="INFO">1000</msg>
<status status="PASS" starttime="20230923 10:17:06.632" endtime="20230923 10:17:06.633"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:17:06.634" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:17:06.633" endtime="20230923 10:17:06.634"/>
</kw>
<status status="PASS" starttime="20230923 10:17:06.585" endtime="20230923 10:17:06.634"/>
</kw>
<msg timestamp="20230923 10:17:06.634" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:17:06.584" endtime="20230923 10:17:06.634"/>
</kw>
<msg timestamp="20230923 10:17:06.634" level="INFO">${result} = 1000</msg>
<status status="PASS" starttime="20230923 10:17:06.584" endtime="20230923 10:17:06.634"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1000</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230923 10:17:06.635" endtime="20230923 10:17:06.635"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '.[] | select(.name=="bb1") | .volumeName'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:17:06.640" level="INFO">Running command 'ozone sh bucket list o3:///84532-without-host/ | jq -r '.[] | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:17:12.481" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:17:12.481" level="INFO">${output} = 84532-without-host</msg>
<status status="PASS" starttime="20230923 10:17:06.638" endtime="20230923 10:17:12.481"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:17:12.483" level="INFO">84532-without-host</msg>
<status status="PASS" starttime="20230923 10:17:12.482" endtime="20230923 10:17:12.483"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:17:12.483" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:17:12.483" endtime="20230923 10:17:12.483"/>
</kw>
<status status="PASS" starttime="20230923 10:17:06.637" endtime="20230923 10:17:12.484"/>
</kw>
<msg timestamp="20230923 10:17:12.484" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:17:06.636" endtime="20230923 10:17:12.484"/>
</kw>
<msg timestamp="20230923 10:17:12.484" level="INFO">${result} = 84532-without-host</msg>
<status status="PASS" starttime="20230923 10:17:06.635" endtime="20230923 10:17:12.484"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${volume}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230923 10:17:12.484" endtime="20230923 10:17:12.485"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Test key handling" library="ozone-shell-lib">
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:17:12.490" level="INFO">Running command 'ozone sh key put o3:///84532-without-host/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:17:20.881" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:17:20.881" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:17:12.488" endtime="20230923 10:17:20.881"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:17:20.883" level="INFO"/>
<status status="PASS" starttime="20230923 10:17:20.882" endtime="20230923 10:17:20.883"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:17:20.884" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:17:20.883" endtime="20230923 10:17:20.884"/>
</kw>
<status status="PASS" starttime="20230923 10:17:12.487" endtime="20230923 10:17:20.884"/>
</kw>
<msg timestamp="20230923 10:17:20.884" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:17:12.487" endtime="20230923 10:17:20.884"/>
</kw>
<status status="PASS" starttime="20230923 10:17:12.486" endtime="20230923 10:17:20.884"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:17:20.889" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:17:20.892" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:17:20.892" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:17:20.886" endtime="20230923 10:17:20.892"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:17:20.893" level="INFO"/>
<status status="PASS" starttime="20230923 10:17:20.893" endtime="20230923 10:17:20.893"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:17:20.894" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:17:20.893" endtime="20230923 10:17:20.894"/>
</kw>
<status status="PASS" starttime="20230923 10:17:20.886" endtime="20230923 10:17:20.894"/>
</kw>
<msg timestamp="20230923 10:17:20.894" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:17:20.885" endtime="20230923 10:17:20.894"/>
</kw>
<status status="PASS" starttime="20230923 10:17:20.885" endtime="20230923 10:17:20.895"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:17:20.899" level="INFO">Running command 'ozone sh key get o3:///84532-without-host/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:17:28.753" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:17:28.753" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:17:20.896" endtime="20230923 10:17:28.753"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:17:28.755" level="INFO"/>
<status status="PASS" starttime="20230923 10:17:28.754" endtime="20230923 10:17:28.755"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:17:28.756" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:17:28.755" endtime="20230923 10:17:28.756"/>
</kw>
<status status="PASS" starttime="20230923 10:17:20.896" endtime="20230923 10:17:28.756"/>
</kw>
<msg timestamp="20230923 10:17:28.756" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:17:20.895" endtime="20230923 10:17:28.756"/>
</kw>
<status status="PASS" starttime="20230923 10:17:20.895" endtime="20230923 10:17:28.756"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:17:28.761" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:17:28.765" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:17:28.765" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:17:28.759" endtime="20230923 10:17:28.765"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:17:28.766" level="INFO"/>
<status status="PASS" starttime="20230923 10:17:28.765" endtime="20230923 10:17:28.766"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:17:28.767" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:17:28.766" endtime="20230923 10:17:28.767"/>
</kw>
<status status="PASS" starttime="20230923 10:17:28.758" endtime="20230923 10:17:28.767"/>
</kw>
<msg timestamp="20230923 10:17:28.767" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:17:28.757" endtime="20230923 10:17:28.767"/>
</kw>
<status status="PASS" starttime="20230923 10:17:28.757" endtime="20230923 10:17:28.768"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:17:28.772" level="INFO">Running command 'ozone sh key put -t RATIS o3:///84532-without-host/bb1/key1_RATIS /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:17:36.408" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:17:36.408" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:17:28.769" endtime="20230923 10:17:36.408"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:17:36.409" level="INFO"/>
<status status="PASS" starttime="20230923 10:17:36.409" endtime="20230923 10:17:36.410"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:17:36.410" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:17:36.410" endtime="20230923 10:17:36.410"/>
</kw>
<status status="PASS" starttime="20230923 10:17:28.769" endtime="20230923 10:17:36.410"/>
</kw>
<msg timestamp="20230923 10:17:36.411" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:17:28.768" endtime="20230923 10:17:36.411"/>
</kw>
<status status="PASS" starttime="20230923 10:17:28.768" endtime="20230923 10:17:36.411"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1_RATIS</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:17:36.415" level="INFO">Running command 'rm -f /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:17:36.419" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:17:36.419" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:17:36.413" endtime="20230923 10:17:36.419"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:17:36.420" level="INFO"/>
<status status="PASS" starttime="20230923 10:17:36.419" endtime="20230923 10:17:36.420"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:17:36.421" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:17:36.420" endtime="20230923 10:17:36.421"/>
</kw>
<status status="PASS" starttime="20230923 10:17:36.412" endtime="20230923 10:17:36.421"/>
</kw>
<msg timestamp="20230923 10:17:36.421" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:17:36.412" endtime="20230923 10:17:36.421"/>
</kw>
<status status="PASS" starttime="20230923 10:17:36.411" endtime="20230923 10:17:36.422"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:17:36.425" level="INFO">Running command 'ozone sh key get o3:///84532-without-host/bb1/key1_RATIS /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:17:43.701" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:17:43.701" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:17:36.423" endtime="20230923 10:17:43.701"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:17:43.702" level="INFO"/>
<status status="PASS" starttime="20230923 10:17:43.701" endtime="20230923 10:17:43.702"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:17:43.703" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:17:43.703" endtime="20230923 10:17:43.703"/>
</kw>
<status status="PASS" starttime="20230923 10:17:36.423" endtime="20230923 10:17:43.704"/>
</kw>
<msg timestamp="20230923 10:17:43.704" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:17:36.422" endtime="20230923 10:17:43.704"/>
</kw>
<status status="PASS" starttime="20230923 10:17:36.422" endtime="20230923 10:17:43.704"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:17:43.709" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:17:43.712" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:17:43.712" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:17:43.706" endtime="20230923 10:17:43.712"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:17:43.713" level="INFO"/>
<status status="PASS" starttime="20230923 10:17:43.713" endtime="20230923 10:17:43.714"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:17:43.716" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:17:43.714" endtime="20230923 10:17:43.716"/>
</kw>
<status status="PASS" starttime="20230923 10:17:43.705" endtime="20230923 10:17:43.716"/>
</kw>
<msg timestamp="20230923 10:17:43.716" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:17:43.705" endtime="20230923 10:17:43.716"/>
</kw>
<status status="PASS" starttime="20230923 10:17:43.704" endtime="20230923 10:17:43.716"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:17:43.721" level="INFO">Running command 'ozone sh key info o3:///84532-without-host/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")' 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:17:49.460" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:17:49.460" level="INFO">${output} = {
  "volumeName": "84532-without-host",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17289,
  "creationTime": "2023-09-23T10:17:33.773Z",
  "modificationTime": "2023-09-23T10:17:35.879...</msg>
<status status="PASS" starttime="20230923 10:17:43.718" endtime="20230923 10:17:49.460"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:17:49.462" level="INFO">{
  "volumeName": "84532-without-host",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17289,
  "creationTime": "2023-09-23T10:17:33.773Z",
  "modificationTime": "2023-09-23T10:17:35.879Z",
  "replicationConfig": {
    "replicationFactor": "THREE",
    "requiredNodes": 3,
    "replicationType": "RATIS"
  },
  "metadata": {},
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 111677748019200020,
      "length": 17289,
      "offset": 0,
      "keyOffset": 0
    }
  ],
  "file": true
}</msg>
<status status="PASS" starttime="20230923 10:17:49.461" endtime="20230923 10:17:49.462"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:17:49.463" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:17:49.462" endtime="20230923 10:17:49.463"/>
</kw>
<status status="PASS" starttime="20230923 10:17:43.718" endtime="20230923 10:17:49.463"/>
</kw>
<msg timestamp="20230923 10:17:49.463" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:17:43.717" endtime="20230923 10:17:49.463"/>
</kw>
<msg timestamp="20230923 10:17:49.464" level="INFO">${result} = {
  "volumeName": "84532-without-host",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17289,
  "creationTime": "2023-09-23T10:17:33.773Z",
  "modificationTime": "2023-09-23T10:17:35.879...</msg>
<status status="PASS" starttime="20230923 10:17:43.716" endtime="20230923 10:17:49.464"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:17:49.464" endtime="20230923 10:17:49.464"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:17:49.469" level="INFO">Running command 'ozone sh key delete o3:///84532-without-host/bb1/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:17:55.353" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:17:55.353" level="INFO">${output} = Key moved inside Trash: /.Trash/testuser/Current/key1_RATIS </msg>
<status status="PASS" starttime="20230923 10:17:49.466" endtime="20230923 10:17:55.353"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:17:55.354" level="INFO">Key moved inside Trash: /.Trash/testuser/Current/key1_RATIS </msg>
<status status="PASS" starttime="20230923 10:17:55.354" endtime="20230923 10:17:55.355"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:17:55.355" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:17:55.355" endtime="20230923 10:17:55.355"/>
</kw>
<status status="PASS" starttime="20230923 10:17:49.465" endtime="20230923 10:17:55.356"/>
</kw>
<msg timestamp="20230923 10:17:55.356" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:17:49.465" endtime="20230923 10:17:55.356"/>
</kw>
<status status="PASS" starttime="20230923 10:17:49.464" endtime="20230923 10:17:55.356"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:17:55.361" level="INFO">Running command 'ozone sh key cp o3:///84532-without-host/bb1 key1 key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:18:03.691" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:18:03.691" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:17:55.358" endtime="20230923 10:18:03.691"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:18:03.692" level="INFO"/>
<status status="PASS" starttime="20230923 10:18:03.692" endtime="20230923 10:18:03.692"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:18:03.693" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:18:03.693" endtime="20230923 10:18:03.693"/>
</kw>
<status status="PASS" starttime="20230923 10:17:55.357" endtime="20230923 10:18:03.694"/>
</kw>
<msg timestamp="20230923 10:18:03.694" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:17:55.357" endtime="20230923 10:18:03.694"/>
</kw>
<status status="PASS" starttime="20230923 10:17:55.356" endtime="20230923 10:18:03.694"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:18:03.698" level="INFO">Running command 'rm -f /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:18:03.702" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:18:03.702" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:18:03.696" endtime="20230923 10:18:03.702"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:18:03.703" level="INFO"/>
<status status="PASS" starttime="20230923 10:18:03.702" endtime="20230923 10:18:03.703"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:18:03.704" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:18:03.703" endtime="20230923 10:18:03.704"/>
</kw>
<status status="PASS" starttime="20230923 10:18:03.695" endtime="20230923 10:18:03.704"/>
</kw>
<msg timestamp="20230923 10:18:03.704" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:18:03.695" endtime="20230923 10:18:03.705"/>
</kw>
<status status="PASS" starttime="20230923 10:18:03.694" endtime="20230923 10:18:03.705"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:18:03.709" level="INFO">Running command 'ozone sh key get o3:///84532-without-host/bb1/key1-copy /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:18:11.524" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:18:11.524" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:18:03.707" endtime="20230923 10:18:11.524"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:18:11.526" level="INFO"/>
<status status="PASS" starttime="20230923 10:18:11.525" endtime="20230923 10:18:11.526"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:18:11.526" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:18:11.526" endtime="20230923 10:18:11.526"/>
</kw>
<status status="PASS" starttime="20230923 10:18:03.706" endtime="20230923 10:18:11.527"/>
</kw>
<msg timestamp="20230923 10:18:11.527" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:18:03.706" endtime="20230923 10:18:11.527"/>
</kw>
<status status="PASS" starttime="20230923 10:18:03.705" endtime="20230923 10:18:11.527"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:18:11.532" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:18:11.535" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:18:11.535" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:18:11.529" endtime="20230923 10:18:11.535"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:18:11.536" level="INFO"/>
<status status="PASS" starttime="20230923 10:18:11.536" endtime="20230923 10:18:11.537"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:18:11.537" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:18:11.537" endtime="20230923 10:18:11.537"/>
</kw>
<status status="PASS" starttime="20230923 10:18:11.529" endtime="20230923 10:18:11.538"/>
</kw>
<msg timestamp="20230923 10:18:11.538" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:18:11.528" endtime="20230923 10:18:11.538"/>
</kw>
<status status="PASS" starttime="20230923 10:18:11.527" endtime="20230923 10:18:11.538"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:18:11.542" level="INFO">Running command 'ozone sh key delete o3:///84532-without-host/bb1/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:18:16.710" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:18:16.711" level="INFO">${output} = Key moved inside Trash: /.Trash/testuser/Current/key1-copy </msg>
<status status="PASS" starttime="20230923 10:18:11.540" endtime="20230923 10:18:16.711"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:18:16.712" level="INFO">Key moved inside Trash: /.Trash/testuser/Current/key1-copy </msg>
<status status="PASS" starttime="20230923 10:18:16.711" endtime="20230923 10:18:16.712"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:18:16.713" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:18:16.713" endtime="20230923 10:18:16.713"/>
</kw>
<status status="PASS" starttime="20230923 10:18:11.539" endtime="20230923 10:18:16.714"/>
</kw>
<msg timestamp="20230923 10:18:16.714" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:18:11.539" endtime="20230923 10:18:16.714"/>
</kw>
<status status="PASS" starttime="20230923 10:18:11.538" endtime="20230923 10:18:16.714"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:18:16.718" level="INFO">Running command 'ozone sh key get o3:///84532-without-host/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:18:22.070" level="INFO">${rc} = 255</msg>
<msg timestamp="20230923 10:18:22.070" level="INFO">${output} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20230923 10:18:16.715" endtime="20230923 10:18:22.070"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:18:22.072" level="INFO">/tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20230923 10:18:22.071" endtime="20230923 10:18:22.072"/>
</kw>
<msg timestamp="20230923 10:18:22.072" level="INFO">${result} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20230923 10:18:16.714" endtime="20230923 10:18:22.072"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:18:22.072" endtime="20230923 10:18:22.073"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:18:22.078" level="INFO">Running command 'ozone sh key get --force o3:///84532-without-host/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:18:29.841" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:18:29.841" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:18:22.075" endtime="20230923 10:18:29.841"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:18:29.842" level="INFO"/>
<status status="PASS" starttime="20230923 10:18:29.842" endtime="20230923 10:18:29.843"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:18:29.843" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:18:29.843" endtime="20230923 10:18:29.843"/>
</kw>
<status status="PASS" starttime="20230923 10:18:22.074" endtime="20230923 10:18:29.844"/>
</kw>
<msg timestamp="20230923 10:18:29.844" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:18:22.074" endtime="20230923 10:18:29.844"/>
</kw>
<msg timestamp="20230923 10:18:29.844" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230923 10:18:22.073" endtime="20230923 10:18:29.844"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:18:29.844" endtime="20230923 10:18:29.845"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:18:29.850" level="INFO">Running command 'ozone sh key info o3:///84532-without-host/bb1/key1 | jq -r '. | select(.name=="key1")' 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:18:35.764" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:18:35.764" level="INFO">${output} = {
  "volumeName": "84532-without-host",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17289,
  "creationTime": "2023-09-23T10:17:18.164Z",
  "modificationTime": "2023-09-23T10:17:20.236Z",
  ...</msg>
<status status="PASS" starttime="20230923 10:18:29.847" endtime="20230923 10:18:35.764"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:18:35.766" level="INFO">{
  "volumeName": "84532-without-host",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17289,
  "creationTime": "2023-09-23T10:17:18.164Z",
  "modificationTime": "2023-09-23T10:17:20.236Z",
  "replicationConfig": {
    "replicationFactor": "THREE",
    "requiredNodes": 3,
    "replicationType": "RATIS"
  },
  "metadata": {},
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 111677748019200020,
      "length": 17289,
      "offset": 0,
      "keyOffset": 0
    }
  ],
  "file": true
}</msg>
<status status="PASS" starttime="20230923 10:18:35.765" endtime="20230923 10:18:35.766"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:18:35.766" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:18:35.766" endtime="20230923 10:18:35.767"/>
</kw>
<status status="PASS" starttime="20230923 10:18:29.846" endtime="20230923 10:18:35.767"/>
</kw>
<msg timestamp="20230923 10:18:35.767" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:18:29.846" endtime="20230923 10:18:35.767"/>
</kw>
<msg timestamp="20230923 10:18:35.767" level="INFO">${result} = {
  "volumeName": "84532-without-host",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17289,
  "creationTime": "2023-09-23T10:17:18.164Z",
  "modificationTime": "2023-09-23T10:17:20.236Z",
  ...</msg>
<status status="PASS" starttime="20230923 10:18:29.845" endtime="20230923 10:18:35.767"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:18:35.767" endtime="20230923 10:18:35.768"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.[] | select(.name=="key1") | .name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:18:35.772" level="INFO">Running command 'ozone sh key list o3:///84532-without-host/bb1 | jq -r '.[] | select(.name=="key1") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:18:42.086" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:18:42.086" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20230923 10:18:35.770" endtime="20230923 10:18:42.086"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:18:42.087" level="INFO">key1</msg>
<status status="PASS" starttime="20230923 10:18:42.086" endtime="20230923 10:18:42.087"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:18:42.088" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:18:42.087" endtime="20230923 10:18:42.088"/>
</kw>
<status status="PASS" starttime="20230923 10:18:35.769" endtime="20230923 10:18:42.088"/>
</kw>
<msg timestamp="20230923 10:18:42.088" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:18:35.769" endtime="20230923 10:18:42.089"/>
</kw>
<msg timestamp="20230923 10:18:42.089" level="INFO">${result} = key1</msg>
<status status="PASS" starttime="20230923 10:18:35.768" endtime="20230923 10:18:42.089"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230923 10:18:42.089" endtime="20230923 10:18:42.089"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:18:42.094" level="INFO">Running command 'ozone sh key rename o3:///84532-without-host/bb1 key1 key2 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:18:47.748" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:18:47.748" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:18:42.091" endtime="20230923 10:18:47.748"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:18:47.749" level="INFO"/>
<status status="PASS" starttime="20230923 10:18:47.748" endtime="20230923 10:18:47.749"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:18:47.750" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:18:47.750" endtime="20230923 10:18:47.750"/>
</kw>
<status status="PASS" starttime="20230923 10:18:42.090" endtime="20230923 10:18:47.750"/>
</kw>
<msg timestamp="20230923 10:18:47.750" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:18:42.090" endtime="20230923 10:18:47.751"/>
</kw>
<status status="PASS" starttime="20230923 10:18:42.090" endtime="20230923 10:18:47.751"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.[] | select(.name=="key2") | .name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:18:47.755" level="INFO">Running command 'ozone sh key list o3:///84532-without-host/bb1 | jq -r '.[] | select(.name=="key2") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:18:53.843" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:18:53.843" level="INFO">${output} = key2</msg>
<status status="PASS" starttime="20230923 10:18:47.753" endtime="20230923 10:18:53.843"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:18:53.844" level="INFO">key2</msg>
<status status="PASS" starttime="20230923 10:18:53.844" endtime="20230923 10:18:53.845"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:18:53.845" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:18:53.845" endtime="20230923 10:18:53.845"/>
</kw>
<status status="PASS" starttime="20230923 10:18:47.752" endtime="20230923 10:18:53.846"/>
</kw>
<msg timestamp="20230923 10:18:53.846" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:18:47.752" endtime="20230923 10:18:53.846"/>
</kw>
<msg timestamp="20230923 10:18:53.846" level="INFO">${result} = key2</msg>
<status status="PASS" starttime="20230923 10:18:47.751" endtime="20230923 10:18:53.846"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230923 10:18:53.846" endtime="20230923 10:18:53.847"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:18:53.851" level="INFO">Running command 'ozone sh key delete o3:///84532-without-host/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:18:59.481" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:18:59.481" level="INFO">${output} = Key moved inside Trash: /.Trash/testuser/Current/key2 </msg>
<status status="PASS" starttime="20230923 10:18:53.849" endtime="20230923 10:18:59.481"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:18:59.482" level="INFO">Key moved inside Trash: /.Trash/testuser/Current/key2 </msg>
<status status="PASS" starttime="20230923 10:18:59.481" endtime="20230923 10:18:59.482"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:18:59.483" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:18:59.483" endtime="20230923 10:18:59.483"/>
</kw>
<status status="PASS" starttime="20230923 10:18:53.848" endtime="20230923 10:18:59.484"/>
</kw>
<msg timestamp="20230923 10:18:59.484" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:18:53.848" endtime="20230923 10:18:59.484"/>
</kw>
<status status="PASS" starttime="20230923 10:18:53.847" endtime="20230923 10:18:59.484"/>
</kw>
<status status="PASS" starttime="20230923 10:17:12.485" endtime="20230923 10:18:59.484"/>
</kw>
<status status="PASS" starttime="20230923 10:17:12.485" endtime="20230923 10:18:59.484"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --space-quota ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:18:59.489" level="INFO">Running command 'ozone sh volume clrquota --space-quota o3:///84532-without-host 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:19:05.309" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:19:05.309" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:18:59.486" endtime="20230923 10:19:05.309"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:19:05.310" level="INFO"/>
<status status="PASS" starttime="20230923 10:19:05.309" endtime="20230923 10:19:05.310"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:19:05.311" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:19:05.310" endtime="20230923 10:19:05.311"/>
</kw>
<status status="PASS" starttime="20230923 10:18:59.485" endtime="20230923 10:19:05.311"/>
</kw>
<msg timestamp="20230923 10:19:05.311" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:18:59.485" endtime="20230923 10:19:05.311"/>
</kw>
<status status="PASS" starttime="20230923 10:18:59.484" endtime="20230923 10:19:05.312"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:19:05.317" level="INFO">Running command 'ozone sh volume info o3:///84532-without-host | jq -r '. | select(.name=="84532-without-host") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:19:11.224" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:19:11.224" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20230923 10:19:05.314" endtime="20230923 10:19:11.224"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:19:11.226" level="INFO">-1</msg>
<status status="PASS" starttime="20230923 10:19:11.225" endtime="20230923 10:19:11.226"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:19:11.227" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:19:11.226" endtime="20230923 10:19:11.227"/>
</kw>
<status status="PASS" starttime="20230923 10:19:05.313" endtime="20230923 10:19:11.227"/>
</kw>
<msg timestamp="20230923 10:19:11.227" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:19:05.313" endtime="20230923 10:19:11.227"/>
</kw>
<msg timestamp="20230923 10:19:11.228" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20230923 10:19:05.312" endtime="20230923 10:19:11.228"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230923 10:19:11.228" endtime="20230923 10:19:11.228"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --namespace-quota ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:19:11.233" level="INFO">Running command 'ozone sh volume clrquota --namespace-quota o3:///84532-without-host 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:19:16.677" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:19:16.677" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:19:11.230" endtime="20230923 10:19:16.677"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:19:16.678" level="INFO"/>
<status status="PASS" starttime="20230923 10:19:16.678" endtime="20230923 10:19:16.679"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:19:16.679" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:19:16.679" endtime="20230923 10:19:16.680"/>
</kw>
<status status="PASS" starttime="20230923 10:19:11.230" endtime="20230923 10:19:16.680"/>
</kw>
<msg timestamp="20230923 10:19:16.680" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:19:11.229" endtime="20230923 10:19:16.680"/>
</kw>
<status status="PASS" starttime="20230923 10:19:11.228" endtime="20230923 10:19:16.680"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:19:16.685" level="INFO">Running command 'ozone sh volume info o3:///84532-without-host | jq -r '. | select(.name=="84532-without-host") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:19:22.977" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:19:22.977" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20230923 10:19:16.682" endtime="20230923 10:19:22.977"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:19:22.978" level="INFO">-1</msg>
<status status="PASS" starttime="20230923 10:19:22.978" endtime="20230923 10:19:22.979"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:19:22.979" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:19:22.979" endtime="20230923 10:19:22.979"/>
</kw>
<status status="PASS" starttime="20230923 10:19:16.682" endtime="20230923 10:19:22.980"/>
</kw>
<msg timestamp="20230923 10:19:22.980" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:19:16.681" endtime="20230923 10:19:22.980"/>
</kw>
<msg timestamp="20230923 10:19:22.980" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20230923 10:19:16.680" endtime="20230923 10:19:22.980"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230923 10:19:22.980" endtime="20230923 10:19:22.981"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --space-quota ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:19:22.986" level="INFO">Running command 'ozone sh bucket clrquota --space-quota o3:///84532-without-host/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:19:28.455" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:19:28.455" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:19:22.983" endtime="20230923 10:19:28.455"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:19:28.457" level="INFO"/>
<status status="PASS" starttime="20230923 10:19:28.456" endtime="20230923 10:19:28.457"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:19:28.458" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:19:28.457" endtime="20230923 10:19:28.462"/>
</kw>
<status status="PASS" starttime="20230923 10:19:22.982" endtime="20230923 10:19:28.462"/>
</kw>
<msg timestamp="20230923 10:19:28.462" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:19:22.982" endtime="20230923 10:19:28.462"/>
</kw>
<status status="PASS" starttime="20230923 10:19:22.981" endtime="20230923 10:19:28.462"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:19:28.468" level="INFO">Running command 'ozone sh bucket info o3:///84532-without-host/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:19:34.070" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:19:34.070" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20230923 10:19:28.465" endtime="20230923 10:19:34.070"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:19:34.072" level="INFO">-1</msg>
<status status="PASS" starttime="20230923 10:19:34.071" endtime="20230923 10:19:34.072"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:19:34.073" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:19:34.072" endtime="20230923 10:19:34.073"/>
</kw>
<status status="PASS" starttime="20230923 10:19:28.464" endtime="20230923 10:19:34.073"/>
</kw>
<msg timestamp="20230923 10:19:34.074" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:19:28.463" endtime="20230923 10:19:34.074"/>
</kw>
<msg timestamp="20230923 10:19:34.074" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20230923 10:19:28.462" endtime="20230923 10:19:34.074"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230923 10:19:34.074" endtime="20230923 10:19:34.075"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --namespace-quota ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:19:34.080" level="INFO">Running command 'ozone sh bucket clrquota --namespace-quota o3:///84532-without-host/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:19:39.554" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:19:39.554" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:19:34.077" endtime="20230923 10:19:39.554"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:19:39.556" level="INFO"/>
<status status="PASS" starttime="20230923 10:19:39.555" endtime="20230923 10:19:39.556"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:19:39.557" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:19:39.556" endtime="20230923 10:19:39.557"/>
</kw>
<status status="PASS" starttime="20230923 10:19:34.076" endtime="20230923 10:19:39.557"/>
</kw>
<msg timestamp="20230923 10:19:39.557" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:19:34.076" endtime="20230923 10:19:39.557"/>
</kw>
<status status="PASS" starttime="20230923 10:19:34.075" endtime="20230923 10:19:39.558"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:19:39.563" level="INFO">Running command 'ozone sh bucket info o3:///84532-without-host/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:19:45.572" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:19:45.572" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20230923 10:19:39.560" endtime="20230923 10:19:45.572"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:19:45.574" level="INFO">-1</msg>
<status status="PASS" starttime="20230923 10:19:45.573" endtime="20230923 10:19:45.574"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:19:45.574" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:19:45.574" endtime="20230923 10:19:45.574"/>
</kw>
<status status="PASS" starttime="20230923 10:19:39.559" endtime="20230923 10:19:45.575"/>
</kw>
<msg timestamp="20230923 10:19:45.575" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:19:39.559" endtime="20230923 10:19:45.575"/>
</kw>
<msg timestamp="20230923 10:19:45.575" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20230923 10:19:39.558" endtime="20230923 10:19:45.575"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230923 10:19:45.575" endtime="20230923 10:19:45.576"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete -r --yes ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:19:45.581" level="INFO">Running command 'ozone sh bucket delete -r --yes o3:///84532-without-host/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:19:51.318" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:19:51.318" level="INFO">${output} = Bucket bb1 is deleted</msg>
<status status="PASS" starttime="20230923 10:19:45.578" endtime="20230923 10:19:51.318"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:19:51.320" level="INFO">Bucket bb1 is deleted</msg>
<status status="PASS" starttime="20230923 10:19:51.319" endtime="20230923 10:19:51.320"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:19:51.321" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:19:51.320" endtime="20230923 10:19:51.321"/>
</kw>
<status status="PASS" starttime="20230923 10:19:45.577" endtime="20230923 10:19:51.321"/>
</kw>
<msg timestamp="20230923 10:19:51.321" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:19:45.577" endtime="20230923 10:19:51.321"/>
</kw>
<status status="PASS" starttime="20230923 10:19:45.576" endtime="20230923 10:19:51.322"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:19:51.330" level="INFO">Running command 'ozone sh volume delete o3:///84532-without-host 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:19:56.995" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:19:56.995" level="INFO">${output} = Volume 84532-without-host is deleted</msg>
<status status="PASS" starttime="20230923 10:19:51.324" endtime="20230923 10:19:56.995"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:19:56.997" level="INFO">Volume 84532-without-host is deleted</msg>
<status status="PASS" starttime="20230923 10:19:56.996" endtime="20230923 10:19:56.997"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:19:56.997" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:19:56.997" endtime="20230923 10:19:56.997"/>
</kw>
<status status="PASS" starttime="20230923 10:19:51.323" endtime="20230923 10:19:56.998"/>
</kw>
<msg timestamp="20230923 10:19:56.998" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:19:51.323" endtime="20230923 10:19:56.998"/>
</kw>
<status status="PASS" starttime="20230923 10:19:51.322" endtime="20230923 10:19:56.998"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:19:57.003" level="INFO">Running command 'ozone sh volume create o3:///84532-without-host 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:20:02.732" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:20:02.732" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:19:57.000" endtime="20230923 10:20:02.733"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:20:02.734" level="INFO"/>
<status status="PASS" starttime="20230923 10:20:02.733" endtime="20230923 10:20:02.734"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:20:02.735" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:20:02.734" endtime="20230923 10:20:02.735"/>
</kw>
<status status="PASS" starttime="20230923 10:19:56.999" endtime="20230923 10:20:02.735"/>
</kw>
<msg timestamp="20230923 10:20:02.736" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:19:56.999" endtime="20230923 10:20:02.736"/>
</kw>
<status status="PASS" starttime="20230923 10:19:56.998" endtime="20230923 10:20:02.736"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume info ${protocol}${server}/${volume} &gt; volume.json</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:20:02.741" level="INFO">Running command 'ozone sh volume info o3:///84532-without-host &gt; volume.json'.</msg>
<msg timestamp="20230923 10:20:08.477" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:20:08.477" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:20:02.738" endtime="20230923 10:20:08.477"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:20:08.478" level="INFO"/>
<status status="PASS" starttime="20230923 10:20:08.477" endtime="20230923 10:20:08.478"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:20:08.479" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:20:08.478" endtime="20230923 10:20:08.479"/>
</kw>
<status status="PASS" starttime="20230923 10:20:02.737" endtime="20230923 10:20:08.479"/>
</kw>
<msg timestamp="20230923 10:20:08.479" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:20:02.737" endtime="20230923 10:20:08.479"/>
</kw>
<status status="PASS" starttime="20230923 10:20:02.736" endtime="20230923 10:20:08.480"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>jq -r '. | select(.name=="${volume}") | .quotaInBytes' volume.json</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:20:08.486" level="INFO">Running command 'jq -r '. | select(.name=="84532-without-host") | .quotaInBytes' volume.json 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:20:08.530" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:20:08.530" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20230923 10:20:08.482" endtime="20230923 10:20:08.530"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:20:08.531" level="INFO">-1</msg>
<status status="PASS" starttime="20230923 10:20:08.531" endtime="20230923 10:20:08.531"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:20:08.532" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:20:08.532" endtime="20230923 10:20:08.532"/>
</kw>
<status status="PASS" starttime="20230923 10:20:08.481" endtime="20230923 10:20:08.532"/>
</kw>
<msg timestamp="20230923 10:20:08.532" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:20:08.481" endtime="20230923 10:20:08.533"/>
</kw>
<msg timestamp="20230923 10:20:08.533" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20230923 10:20:08.480" endtime="20230923 10:20:08.533"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230923 10:20:08.533" endtime="20230923 10:20:08.533"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>jq -r '. | select(.name=="${volume}") | .quotaInNamespace' volume.json</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:20:08.538" level="INFO">Running command 'jq -r '. | select(.name=="84532-without-host") | .quotaInNamespace' volume.json 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:20:08.586" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:20:08.586" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20230923 10:20:08.535" endtime="20230923 10:20:08.586"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:20:08.588" level="INFO">-1</msg>
<status status="PASS" starttime="20230923 10:20:08.587" endtime="20230923 10:20:08.588"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:20:08.588" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:20:08.588" endtime="20230923 10:20:08.589"/>
</kw>
<status status="PASS" starttime="20230923 10:20:08.534" endtime="20230923 10:20:08.589"/>
</kw>
<msg timestamp="20230923 10:20:08.589" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:20:08.534" endtime="20230923 10:20:08.589"/>
</kw>
<msg timestamp="20230923 10:20:08.589" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20230923 10:20:08.534" endtime="20230923 10:20:08.589"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230923 10:20:08.589" endtime="20230923 10:20:08.590"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:20:08.595" level="INFO">Running command 'ozone sh bucket create o3:///84532-without-host/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:20:13.980" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:20:13.981" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:20:08.592" endtime="20230923 10:20:13.981"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:20:13.982" level="INFO"/>
<status status="PASS" starttime="20230923 10:20:13.981" endtime="20230923 10:20:13.982"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:20:13.983" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:20:13.983" endtime="20230923 10:20:13.983"/>
</kw>
<status status="PASS" starttime="20230923 10:20:08.592" endtime="20230923 10:20:13.983"/>
</kw>
<msg timestamp="20230923 10:20:13.984" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:20:08.591" endtime="20230923 10:20:13.984"/>
</kw>
<status status="PASS" starttime="20230923 10:20:08.590" endtime="20230923 10:20:13.984"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 &gt; bb1.json</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:20:13.989" level="INFO">Running command 'ozone sh bucket info o3:///84532-without-host/bb1 &gt; bb1.json'.</msg>
<msg timestamp="20230923 10:20:20.018" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:20:20.018" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:20:13.986" endtime="20230923 10:20:20.018"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:20:20.020" level="INFO"/>
<status status="PASS" starttime="20230923 10:20:20.019" endtime="20230923 10:20:20.020"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:20:20.021" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:20:20.020" endtime="20230923 10:20:20.021"/>
</kw>
<status status="PASS" starttime="20230923 10:20:13.985" endtime="20230923 10:20:20.021"/>
</kw>
<msg timestamp="20230923 10:20:20.021" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:20:13.985" endtime="20230923 10:20:20.021"/>
</kw>
<status status="PASS" starttime="20230923 10:20:13.984" endtime="20230923 10:20:20.021"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>jq -r '. | select(.name=="bb1") | .quotaInBytes' bb1.json</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:20:20.026" level="INFO">Running command 'jq -r '. | select(.name=="bb1") | .quotaInBytes' bb1.json 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:20:20.069" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:20:20.069" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20230923 10:20:20.023" endtime="20230923 10:20:20.069"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:20:20.071" level="INFO">-1</msg>
<status status="PASS" starttime="20230923 10:20:20.070" endtime="20230923 10:20:20.071"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:20:20.071" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:20:20.071" endtime="20230923 10:20:20.071"/>
</kw>
<status status="PASS" starttime="20230923 10:20:20.023" endtime="20230923 10:20:20.072"/>
</kw>
<msg timestamp="20230923 10:20:20.072" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:20:20.022" endtime="20230923 10:20:20.072"/>
</kw>
<msg timestamp="20230923 10:20:20.072" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20230923 10:20:20.022" endtime="20230923 10:20:20.072"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230923 10:20:20.072" endtime="20230923 10:20:20.073"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>jq -r '. | select(.name=="bb1") | .quotaInNamespace' bb1.json</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:20:20.077" level="INFO">Running command 'jq -r '. | select(.name=="bb1") | .quotaInNamespace' bb1.json 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:20:20.121" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:20:20.121" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20230923 10:20:20.074" endtime="20230923 10:20:20.121"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:20:20.122" level="INFO">-1</msg>
<status status="PASS" starttime="20230923 10:20:20.121" endtime="20230923 10:20:20.122"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:20:20.123" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:20:20.122" endtime="20230923 10:20:20.123"/>
</kw>
<status status="PASS" starttime="20230923 10:20:20.074" endtime="20230923 10:20:20.123"/>
</kw>
<msg timestamp="20230923 10:20:20.123" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:20:20.073" endtime="20230923 10:20:20.123"/>
</kw>
<msg timestamp="20230923 10:20:20.123" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20230923 10:20:20.073" endtime="20230923 10:20:20.123"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230923 10:20:20.124" endtime="20230923 10:20:20.124"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:20:20.129" level="INFO">Running command 'ozone sh bucket delete o3:///84532-without-host/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:20:25.444" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:20:25.444" level="INFO">${output} = Bucket bb1 is deleted</msg>
<status status="PASS" starttime="20230923 10:20:20.126" endtime="20230923 10:20:25.444"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:20:25.445" level="INFO">Bucket bb1 is deleted</msg>
<status status="PASS" starttime="20230923 10:20:25.445" endtime="20230923 10:20:25.446"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:20:25.446" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:20:25.446" endtime="20230923 10:20:25.446"/>
</kw>
<status status="PASS" starttime="20230923 10:20:20.125" endtime="20230923 10:20:25.446"/>
</kw>
<msg timestamp="20230923 10:20:25.446" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:20:20.125" endtime="20230923 10:20:25.447"/>
</kw>
<status status="PASS" starttime="20230923 10:20:20.124" endtime="20230923 10:20:25.447"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:20:25.451" level="INFO">Running command 'ozone sh volume delete o3:///84532-without-host 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:20:31.148" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:20:31.148" level="INFO">${output} = Volume 84532-without-host is deleted</msg>
<status status="PASS" starttime="20230923 10:20:25.449" endtime="20230923 10:20:31.148"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:20:31.150" level="INFO">Volume 84532-without-host is deleted</msg>
<status status="PASS" starttime="20230923 10:20:31.149" endtime="20230923 10:20:31.150"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:20:31.151" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:20:31.150" endtime="20230923 10:20:31.151"/>
</kw>
<status status="PASS" starttime="20230923 10:20:25.448" endtime="20230923 10:20:31.151"/>
</kw>
<msg timestamp="20230923 10:20:31.151" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:20:25.448" endtime="20230923 10:20:31.151"/>
</kw>
<status status="PASS" starttime="20230923 10:20:25.447" endtime="20230923 10:20:31.151"/>
</kw>
<status status="PASS" starttime="20230923 10:16:14.497" endtime="20230923 10:20:31.152"/>
</kw>
<timeout value="10 minutes"/>
<status status="PASS" starttime="20230923 10:16:14.445" endtime="20230923 10:20:31.152"/>
</test>
<test id="s1-s4-s5-t9" name="RpcClient Delete key" line="51">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:20:31.160" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:20:31.164" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:20:31.164" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230923 10:20:31.157" endtime="20230923 10:20:31.164"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:20:31.166" level="INFO">scm</msg>
<status status="PASS" starttime="20230923 10:20:31.165" endtime="20230923 10:20:31.166"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:20:31.166" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:20:31.166" endtime="20230923 10:20:31.166"/>
</kw>
<status status="PASS" starttime="20230923 10:20:31.156" endtime="20230923 10:20:31.167"/>
</kw>
<msg timestamp="20230923 10:20:31.167" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:20:31.156" endtime="20230923 10:20:31.167"/>
</kw>
<msg timestamp="20230923 10:20:31.167" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230923 10:20:31.156" endtime="20230923 10:20:31.167"/>
</kw>
<msg timestamp="20230923 10:20:31.167" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230923 10:20:31.155" endtime="20230923 10:20:31.167"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230923 10:20:31.168" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230923 10:20:31.168" endtime="20230923 10:20:31.168"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:20:31.173" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:20:31.241" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:20:31.241" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:20:31.170" endtime="20230923 10:20:31.241"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:20:31.243" level="INFO"/>
<status status="PASS" starttime="20230923 10:20:31.242" endtime="20230923 10:20:31.243"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:20:31.244" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:20:31.243" endtime="20230923 10:20:31.244"/>
</kw>
<status status="PASS" starttime="20230923 10:20:31.170" endtime="20230923 10:20:31.244"/>
</kw>
<msg timestamp="20230923 10:20:31.244" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:20:31.170" endtime="20230923 10:20:31.244"/>
</kw>
<status status="PASS" starttime="20230923 10:20:31.169" endtime="20230923 10:20:31.244"/>
</kw>
<status status="PASS" starttime="20230923 10:20:31.168" endtime="20230923 10:20:31.244"/>
</kw>
<status status="PASS" starttime="20230923 10:20:31.155" endtime="20230923 10:20:31.245"/>
</kw>
<status status="PASS" starttime="20230923 10:20:31.154" endtime="20230923 10:20:31.245"/>
</kw>
<kw name="Test Delete key with Trash" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-with-del</arg>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:20:31.250" level="INFO">Running command 'ozone sh volume create o3://om:9862/84532-with-del 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:20:37.069" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:20:37.069" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:20:31.248" endtime="20230923 10:20:37.069"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:20:37.070" level="INFO"/>
<status status="PASS" starttime="20230923 10:20:37.070" endtime="20230923 10:20:37.070"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:20:37.071" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:20:37.071" endtime="20230923 10:20:37.071"/>
</kw>
<status status="PASS" starttime="20230923 10:20:31.247" endtime="20230923 10:20:37.071"/>
</kw>
<msg timestamp="20230923 10:20:37.071" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:20:31.246" endtime="20230923 10:20:37.072"/>
</kw>
<status status="PASS" starttime="20230923 10:20:31.246" endtime="20230923 10:20:37.072"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bfso --layout FILE_SYSTEM_OPTIMIZED</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:20:37.076" level="INFO">Running command 'ozone sh bucket create o3://om:9862/84532-with-del/bfso --layout FILE_SYSTEM_OPTIMIZED 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:20:42.663" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:20:42.663" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:20:37.074" endtime="20230923 10:20:42.663"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:20:42.664" level="INFO"/>
<status status="PASS" starttime="20230923 10:20:42.663" endtime="20230923 10:20:42.664"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:20:42.665" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:20:42.665" endtime="20230923 10:20:42.665"/>
</kw>
<status status="PASS" starttime="20230923 10:20:37.073" endtime="20230923 10:20:42.665"/>
</kw>
<msg timestamp="20230923 10:20:42.666" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:20:37.073" endtime="20230923 10:20:42.666"/>
</kw>
<status status="PASS" starttime="20230923 10:20:37.072" endtime="20230923 10:20:42.666"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bfso/key3 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:20:42.670" level="INFO">Running command 'ozone sh key put -t RATIS o3://om:9862/84532-with-del/bfso/key3 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:20:50.556" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:20:50.556" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:20:42.668" endtime="20230923 10:20:50.556"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:20:50.558" level="INFO"/>
<status status="PASS" starttime="20230923 10:20:50.557" endtime="20230923 10:20:50.558"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:20:50.558" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:20:50.558" endtime="20230923 10:20:50.558"/>
</kw>
<status status="PASS" starttime="20230923 10:20:42.667" endtime="20230923 10:20:50.559"/>
</kw>
<msg timestamp="20230923 10:20:50.559" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:20:42.667" endtime="20230923 10:20:50.559"/>
</kw>
<status status="PASS" starttime="20230923 10:20:42.666" endtime="20230923 10:20:50.559"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bfso/key3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:20:50.564" level="INFO">Running command 'ozone sh key delete o3://om:9862/84532-with-del/bfso/key3 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:20:56.021" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:20:56.021" level="INFO">${output} = Key moved inside Trash: /.Trash/testuser/Current/key3 </msg>
<status status="PASS" starttime="20230923 10:20:50.561" endtime="20230923 10:20:56.021"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:20:56.023" level="INFO">Key moved inside Trash: /.Trash/testuser/Current/key3 </msg>
<status status="PASS" starttime="20230923 10:20:56.022" endtime="20230923 10:20:56.023"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:20:56.023" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:20:56.023" endtime="20230923 10:20:56.024"/>
</kw>
<status status="PASS" starttime="20230923 10:20:50.560" endtime="20230923 10:20:56.024"/>
</kw>
<msg timestamp="20230923 10:20:56.024" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:20:50.560" endtime="20230923 10:20:56.024"/>
</kw>
<status status="PASS" starttime="20230923 10:20:50.559" endtime="20230923 10:20:56.024"/>
</kw>
<kw name="Execute" library="os">
<var>${fsokey}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bfso</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:20:56.029" level="INFO">Running command 'ozone sh key list o3://om:9862/84532-with-del/bfso 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:21:02.152" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:21:02.152" level="INFO">${output} = [ {
  "volumeName" : "84532-with-del",
  "bucketName" : "bfso",
  "name" : ".Trash/",
  "dataSize" : 0,
  "creationTime" : "2023-09-23T10:20:55.942Z",
  "modificationTime" : "2023-09-23T10:20:55.942Z"...</msg>
<status status="PASS" starttime="20230923 10:20:56.026" endtime="20230923 10:21:02.152"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:21:02.154" level="INFO">[ {
  "volumeName" : "84532-with-del",
  "bucketName" : "bfso",
  "name" : ".Trash/",
  "dataSize" : 0,
  "creationTime" : "2023-09-23T10:20:55.942Z",
  "modificationTime" : "2023-09-23T10:20:55.942Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "file" : false
}, {
  "volumeName" : "84532-with-del",
  "bucketName" : "bfso",
  "name" : ".Trash/testuser/",
  "dataSize" : 0,
  "creationTime" : "2023-09-23T10:20:55.942Z",
  "modificationTime" : "2023-09-23T10:21:00.005Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "file" : false
}, {
  "volumeName" : "84532-with-del",
  "bucketName" : "bfso",
  "name" : ".Trash/testuser/230923102100/",
  "dataSize" : 0,
  "creationTime" : "2023-09-23T10:20:55.942Z",
  "modificationTime" : "2023-09-23T10:20:55.950Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "file" : false
}, {
  "volumeName" : "84532-with-del",
  "bucketName" : "bfso",
  "name" : ".Trash/testuser/230923102100/key3",
  "dataSize" : 17289,
  "creationTime" : "2023-09-23T10:20:48.080Z",
  "modificationTime" : "2023-09-23T10:20:50.126Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "file" : true
} ]</msg>
<status status="PASS" starttime="20230923 10:21:02.153" endtime="20230923 10:21:02.154"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:21:02.155" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:21:02.154" endtime="20230923 10:21:02.155"/>
</kw>
<status status="PASS" starttime="20230923 10:20:56.026" endtime="20230923 10:21:02.155"/>
</kw>
<msg timestamp="20230923 10:21:02.155" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:20:56.025" endtime="20230923 10:21:02.155"/>
</kw>
<msg timestamp="20230923 10:21:02.156" level="INFO">${fsokey} = [ {
  "volumeName" : "84532-with-del",
  "bucketName" : "bfso",
  "name" : ".Trash/",
  "dataSize" : 0,
  "creationTime" : "2023-09-23T10:20:55.942Z",
  "modificationTime" : "2023-09-23T10:20:55.942Z"...</msg>
<status status="PASS" starttime="20230923 10:20:56.025" endtime="20230923 10:21:02.156"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>echo '${fsokey}' | jq -r '.[] | select(.name | startswith(".Trash")) | .name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:21:02.161" level="INFO">Running command 'echo '[ {
  "volumeName" : "84532-with-del",
  "bucketName" : "bfso",
  "name" : ".Trash/",
  "dataSize" : 0,
  "creationTime" : "2023-09-23T10:20:55.942Z",
  "modificationTime" : "2023-09-23T10:20:55.942Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "file" : false
}, {
  "volumeName" : "84532-with-del",
  "bucketName" : "bfso",
  "name" : ".Trash/testuser/",
  "dataSize" : 0,
  "creationTime" : "2023-09-23T10:20:55.942Z",
  "modificationTime" : "2023-09-23T10:21:00.005Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "file" : false
}, {
  "volumeName" : "84532-with-del",
  "bucketName" : "bfso",
  "name" : ".Trash/testuser/230923102100/",
  "dataSize" : 0,
  "creationTime" : "2023-09-23T10:20:55.942Z",
  "modificationTime" : "2023-09-23T10:20:55.950Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "file" : false
}, {
  "volumeName" : "84532-with-del",
  "bucketName" : "bfso",
  "name" : ".Trash/testuser/230923102100/key3",
  "dataSize" : 17289,
  "creationTime" : "2023-09-23T10:20:48.080Z",
  "modificationTime" : "2023-09-23T10:20:50.126Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "file" : true
} ]' | jq -r '.[] | select(.name | startswith(".Trash")) | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:21:02.205" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:21:02.205" level="INFO">${output} = .Trash/
.Trash/testuser/
.Trash/testuser/230923102100/
.Trash/testuser/230923102100/key3</msg>
<status status="PASS" starttime="20230923 10:21:02.158" endtime="20230923 10:21:02.205"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:21:02.206" level="INFO">.Trash/
.Trash/testuser/
.Trash/testuser/230923102100/
.Trash/testuser/230923102100/key3</msg>
<status status="PASS" starttime="20230923 10:21:02.205" endtime="20230923 10:21:02.206"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:21:02.207" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:21:02.206" endtime="20230923 10:21:02.207"/>
</kw>
<status status="PASS" starttime="20230923 10:21:02.158" endtime="20230923 10:21:02.207"/>
</kw>
<msg timestamp="20230923 10:21:02.207" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:21:02.157" endtime="20230923 10:21:02.207"/>
</kw>
<msg timestamp="20230923 10:21:02.207" level="INFO">${result} = .Trash/
.Trash/testuser/
.Trash/testuser/230923102100/
.Trash/testuser/230923102100/key3</msg>
<status status="PASS" starttime="20230923 10:21:02.156" endtime="20230923 10:21:02.208"/>
</kw>
<kw name="Should Contain Any" library="BuiltIn">
<arg>${result}</arg>
<arg>.Trash/hadoop</arg>
<arg>.Trash/testuser</arg>
<arg>.Trash/root</arg>
<doc>Fails if ``container`` does not contain any of the ``*items``.</doc>
<status status="PASS" starttime="20230923 10:21:02.208" endtime="20230923 10:21:02.208"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>key3</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:21:02.208" endtime="20230923 10:21:02.209"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>echo '${fsokey}' | jq -r '.[] | select(.name | startswith(".Trash") | not) | .name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:21:02.213" level="INFO">Running command 'echo '[ {
  "volumeName" : "84532-with-del",
  "bucketName" : "bfso",
  "name" : ".Trash/",
  "dataSize" : 0,
  "creationTime" : "2023-09-23T10:20:55.942Z",
  "modificationTime" : "2023-09-23T10:20:55.942Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "file" : false
}, {
  "volumeName" : "84532-with-del",
  "bucketName" : "bfso",
  "name" : ".Trash/testuser/",
  "dataSize" : 0,
  "creationTime" : "2023-09-23T10:20:55.942Z",
  "modificationTime" : "2023-09-23T10:21:00.005Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "file" : false
}, {
  "volumeName" : "84532-with-del",
  "bucketName" : "bfso",
  "name" : ".Trash/testuser/230923102100/",
  "dataSize" : 0,
  "creationTime" : "2023-09-23T10:20:55.942Z",
  "modificationTime" : "2023-09-23T10:20:55.950Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "file" : false
}, {
  "volumeName" : "84532-with-del",
  "bucketName" : "bfso",
  "name" : ".Trash/testuser/230923102100/key3",
  "dataSize" : 17289,
  "creationTime" : "2023-09-23T10:20:48.080Z",
  "modificationTime" : "2023-09-23T10:20:50.126Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "file" : true
} ]' | jq -r '.[] | select(.name | startswith(".Trash") | not) | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:21:02.257" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:21:02.257" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:21:02.210" endtime="20230923 10:21:02.257"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:21:02.258" level="INFO"/>
<status status="PASS" starttime="20230923 10:21:02.257" endtime="20230923 10:21:02.258"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:21:02.259" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:21:02.258" endtime="20230923 10:21:02.259"/>
</kw>
<status status="PASS" starttime="20230923 10:21:02.210" endtime="20230923 10:21:02.259"/>
</kw>
<msg timestamp="20230923 10:21:02.259" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:21:02.210" endtime="20230923 10:21:02.259"/>
</kw>
<msg timestamp="20230923 10:21:02.259" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230923 10:21:02.209" endtime="20230923 10:21:02.259"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>key3</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:21:02.260" endtime="20230923 10:21:02.260"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/obsbkt --layout OBJECT_STORE</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:21:02.264" level="INFO">Running command 'ozone sh bucket create o3://om:9862/84532-with-del/obsbkt --layout OBJECT_STORE 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:21:07.683" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:21:07.683" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:21:02.262" endtime="20230923 10:21:07.683"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:21:07.684" level="INFO"/>
<status status="PASS" starttime="20230923 10:21:07.683" endtime="20230923 10:21:07.684"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:21:07.685" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:21:07.685" endtime="20230923 10:21:07.685"/>
</kw>
<status status="PASS" starttime="20230923 10:21:02.261" endtime="20230923 10:21:07.685"/>
</kw>
<msg timestamp="20230923 10:21:07.686" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:21:02.261" endtime="20230923 10:21:07.686"/>
</kw>
<status status="PASS" starttime="20230923 10:21:02.260" endtime="20230923 10:21:07.686"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/obsbkt/key2 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:21:07.690" level="INFO">Running command 'ozone sh key put -t RATIS o3://om:9862/84532-with-del/obsbkt/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:21:15.851" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:21:15.851" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:21:07.688" endtime="20230923 10:21:15.851"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:21:15.852" level="INFO"/>
<status status="PASS" starttime="20230923 10:21:15.852" endtime="20230923 10:21:15.853"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:21:15.853" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:21:15.853" endtime="20230923 10:21:15.853"/>
</kw>
<status status="PASS" starttime="20230923 10:21:07.687" endtime="20230923 10:21:15.854"/>
</kw>
<msg timestamp="20230923 10:21:15.854" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:21:07.687" endtime="20230923 10:21:15.854"/>
</kw>
<status status="PASS" starttime="20230923 10:21:07.686" endtime="20230923 10:21:15.854"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/obsbkt/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:21:15.859" level="INFO">Running command 'ozone sh key delete o3://om:9862/84532-with-del/obsbkt/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:21:21.605" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:21:21.606" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:21:15.856" endtime="20230923 10:21:21.606"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:21:21.607" level="INFO"/>
<status status="PASS" starttime="20230923 10:21:21.606" endtime="20230923 10:21:21.607"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:21:21.608" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:21:21.608" endtime="20230923 10:21:21.608"/>
</kw>
<status status="PASS" starttime="20230923 10:21:15.855" endtime="20230923 10:21:21.609"/>
</kw>
<msg timestamp="20230923 10:21:21.609" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:21:15.855" endtime="20230923 10:21:21.609"/>
</kw>
<status status="PASS" starttime="20230923 10:21:15.854" endtime="20230923 10:21:21.609"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/obsbkt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:21:21.614" level="INFO">Running command 'ozone sh key list o3://om:9862/84532-with-del/obsbkt 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:21:27.173" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:21:27.173" level="INFO">${output} = [ ]</msg>
<status status="PASS" starttime="20230923 10:21:21.611" endtime="20230923 10:21:27.173"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:21:27.175" level="INFO">[ ]</msg>
<status status="PASS" starttime="20230923 10:21:27.174" endtime="20230923 10:21:27.175"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:21:27.176" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:21:27.175" endtime="20230923 10:21:27.176"/>
</kw>
<status status="PASS" starttime="20230923 10:21:21.610" endtime="20230923 10:21:27.176"/>
</kw>
<msg timestamp="20230923 10:21:27.176" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:21:21.610" endtime="20230923 10:21:27.176"/>
</kw>
<msg timestamp="20230923 10:21:27.176" level="INFO">${result} = [ ]</msg>
<status status="PASS" starttime="20230923 10:21:21.609" endtime="20230923 10:21:27.176"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>key2</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:21:27.177" endtime="20230923 10:21:27.177"/>
</kw>
<status status="PASS" starttime="20230923 10:20:31.245" endtime="20230923 10:21:27.177"/>
</kw>
<timeout value="10 minutes"/>
<status status="PASS" starttime="20230923 10:20:31.153" endtime="20230923 10:21:27.177"/>
</test>
<doc>Test ozone shell CLI usage</doc>
<status status="PASS" starttime="20230923 10:06:44.753" endtime="20230923 10:21:27.180"/>
</suite>
<suite id="s1-s4-s6" name="Single Node" source="/opt/hadoop/smoketest/basic/single_node.robot">
<test id="s1-s4-s6-t1" name="Basic Freon smoketest for one datanode" line="25">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:21:27.198" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:21:27.203" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:21:27.203" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230923 10:21:27.196" endtime="20230923 10:21:27.203"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:21:27.204" level="INFO">scm</msg>
<status status="PASS" starttime="20230923 10:21:27.203" endtime="20230923 10:21:27.204"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:21:27.205" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:21:27.204" endtime="20230923 10:21:27.205"/>
</kw>
<status status="PASS" starttime="20230923 10:21:27.195" endtime="20230923 10:21:27.205"/>
</kw>
<msg timestamp="20230923 10:21:27.205" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:21:27.195" endtime="20230923 10:21:27.205"/>
</kw>
<msg timestamp="20230923 10:21:27.206" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230923 10:21:27.194" endtime="20230923 10:21:27.206"/>
</kw>
<msg timestamp="20230923 10:21:27.206" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230923 10:21:27.194" endtime="20230923 10:21:27.206"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230923 10:21:27.207" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230923 10:21:27.206" endtime="20230923 10:21:27.207"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:21:27.212" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:21:27.323" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:21:27.324" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:21:27.209" endtime="20230923 10:21:27.324"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:21:27.325" level="INFO"/>
<status status="PASS" starttime="20230923 10:21:27.324" endtime="20230923 10:21:27.325"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:21:27.326" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:21:27.325" endtime="20230923 10:21:27.326"/>
</kw>
<status status="PASS" starttime="20230923 10:21:27.208" endtime="20230923 10:21:27.326"/>
</kw>
<msg timestamp="20230923 10:21:27.326" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:21:27.208" endtime="20230923 10:21:27.326"/>
</kw>
<status status="PASS" starttime="20230923 10:21:27.207" endtime="20230923 10:21:27.326"/>
</kw>
<status status="PASS" starttime="20230923 10:21:27.207" endtime="20230923 10:21:27.326"/>
</kw>
<status status="PASS" starttime="20230923 10:21:27.194" endtime="20230923 10:21:27.326"/>
</kw>
<status status="PASS" starttime="20230923 10:21:27.193" endtime="20230923 10:21:27.327"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>10</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230923 10:21:27.327" level="INFO">${random} = zXX2iNCbTg</msg>
<status status="PASS" starttime="20230923 10:21:27.327" endtime="20230923 10:21:27.327"/>
</kw>
<kw name="Freon OCKG" library="freon">
<arg>prefix=${random}</arg>
<arg>args=--replication ONE --replication-type RATIS</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:21:27.332" level="INFO">Running command 'ozone freon ockg  -t 1 -n1 -p zXX2iNCbTg --replication ONE --replication-type RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:21:36.415" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:21:36.415" level="INFO">${output} = 2023-09-23 10:21:30,342 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-23 10:21:30,507 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230923 10:21:27.330" endtime="20230923 10:21:36.415"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:21:36.417" level="INFO">2023-09-23 10:21:30,342 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-23 10:21:30,507 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-09-23 10:21:30,507 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-09-23 10:21:30,606 [main] INFO freon.BaseFreonGenerator: Executing test with prefix zXX2iNCbTg and number-of-tests 1
2023-09-23 10:21:30,667 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-23 10:21:31,672 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-23 10:21:32,672 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-23 10:21:33,162 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2023-09-23 10:21:33,227 [pool-2-thread-1] INFO netty.NettyConfigKeys$DataStream: setTlsConf GrpcTlsConfig0-
2023-09-23 10:21:33,549 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2023-09-23 10:21:33,673 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-23 10:21:34,673 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-23 10:21:35,674 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2023-09-23 10:21:36,044 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=1, min=2038.85146, max=2038.85146, mean=2038.85146, stddev=0.0, median=2038.85146, p75=2038.85146, p95=2038.85146, p98=2038.85146, p99=2038.85146, p999=2038.85146, mean_rate=0.3121630171939618, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-09-23 10:21:36,052 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 5
2023-09-23 10:21:36,052 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-09-23 10:21:36,052 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20230923 10:21:36.416" endtime="20230923 10:21:36.417"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:21:36.419" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:21:36.417" endtime="20230923 10:21:36.419"/>
</kw>
<status status="PASS" starttime="20230923 10:21:27.329" endtime="20230923 10:21:36.420"/>
</kw>
<msg timestamp="20230923 10:21:36.420" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:21:27.329" endtime="20230923 10:21:36.420"/>
</kw>
<msg timestamp="20230923 10:21:36.420" level="INFO">${result} = 2023-09-23 10:21:30,342 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-23 10:21:30,507 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230923 10:21:27.328" endtime="20230923 10:21:36.420"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:21:36.420" endtime="20230923 10:21:36.421"/>
</kw>
<status status="PASS" starttime="20230923 10:21:27.327" endtime="20230923 10:21:36.421"/>
</kw>
<kw name="Freon OCKV" library="freon">
<arg>prefix=${random}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockv ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:21:36.427" level="INFO">Running command 'ozone freon ockv  -t 1 -n1 -p zXX2iNCbTg  2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:21:45.250" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:21:45.250" level="INFO">${output} = 2023-09-23 10:21:39,087 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-23 10:21:39,244 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230923 10:21:36.424" endtime="20230923 10:21:45.250"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:21:45.251" level="INFO">2023-09-23 10:21:39,087 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-23 10:21:39,244 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-09-23 10:21:39,244 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-09-23 10:21:39,315 [main] INFO freon.BaseFreonGenerator: Executing test with prefix zXX2iNCbTg and number-of-tests 1
2023-09-23 10:21:39,364 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-23 10:21:40,373 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-23 10:21:41,374 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-23 10:21:42,005 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2023-09-23 10:21:42,374 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-23 10:21:43,375 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-23 10:21:44,375 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2023-09-23 10:21:44,890 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-validate, count=1, min=56.366692, max=56.366692, mean=56.366692, stddev=0.0, median=56.366692, p75=56.366692, p95=56.366692, p98=56.366692, p99=56.366692, p999=56.366692, mean_rate=0.7551201942294187, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-09-23 10:21:44,891 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 6
2023-09-23 10:21:44,892 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-09-23 10:21:44,892 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20230923 10:21:45.251" endtime="20230923 10:21:45.252"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:21:45.252" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:21:45.252" endtime="20230923 10:21:45.252"/>
</kw>
<status status="PASS" starttime="20230923 10:21:36.424" endtime="20230923 10:21:45.253"/>
</kw>
<msg timestamp="20230923 10:21:45.253" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:21:36.423" endtime="20230923 10:21:45.253"/>
</kw>
<msg timestamp="20230923 10:21:45.253" level="INFO">${result} = 2023-09-23 10:21:39,087 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-23 10:21:39,244 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230923 10:21:36.423" endtime="20230923 10:21:45.253"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:21:45.253" endtime="20230923 10:21:45.254"/>
</kw>
<status status="PASS" starttime="20230923 10:21:36.421" endtime="20230923 10:21:45.254"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230923 10:21:27.192" endtime="20230923 10:21:45.254"/>
</test>
<doc>Smoketest for one datanode</doc>
<status status="PASS" starttime="20230923 10:21:27.183" endtime="20230923 10:21:45.255"/>
</suite>
<status status="PASS" starttime="20230923 09:54:10.215" endtime="20230923 10:21:45.259"/>
</suite>
<suite id="s1-s5" name="Security" source="/opt/hadoop/smoketest/security">
<suite id="s1-s5-s1" name="Admin-Cert" source="/opt/hadoop/smoketest/security/admin-cert.robot">
<kw name="Setup Test" type="SETUP">
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:21:48.998" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:21:49.002" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:21:49.002" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230923 10:21:48.994" endtime="20230923 10:21:49.002"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:21:49.003" level="INFO">scm</msg>
<status status="PASS" starttime="20230923 10:21:49.002" endtime="20230923 10:21:49.003"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:21:49.004" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:21:49.003" endtime="20230923 10:21:49.004"/>
</kw>
<status status="PASS" starttime="20230923 10:21:48.994" endtime="20230923 10:21:49.004"/>
</kw>
<msg timestamp="20230923 10:21:49.004" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:21:48.993" endtime="20230923 10:21:49.004"/>
</kw>
<msg timestamp="20230923 10:21:49.004" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230923 10:21:48.993" endtime="20230923 10:21:49.004"/>
</kw>
<msg timestamp="20230923 10:21:49.005" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230923 10:21:48.992" endtime="20230923 10:21:49.005"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230923 10:21:49.005" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230923 10:21:49.005" endtime="20230923 10:21:49.005"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:21:49.010" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:21:49.130" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:21:49.130" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:21:49.008" endtime="20230923 10:21:49.131"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:21:49.132" level="INFO"/>
<status status="PASS" starttime="20230923 10:21:49.131" endtime="20230923 10:21:49.132"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:21:49.133" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:21:49.132" endtime="20230923 10:21:49.133"/>
</kw>
<status status="PASS" starttime="20230923 10:21:49.007" endtime="20230923 10:21:49.133"/>
</kw>
<msg timestamp="20230923 10:21:49.133" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:21:49.007" endtime="20230923 10:21:49.133"/>
</kw>
<status status="PASS" starttime="20230923 10:21:49.006" endtime="20230923 10:21:49.133"/>
</kw>
<status status="PASS" starttime="20230923 10:21:49.006" endtime="20230923 10:21:49.133"/>
</kw>
<status status="PASS" starttime="20230923 10:21:48.992" endtime="20230923 10:21:49.133"/>
</kw>
<status status="PASS" starttime="20230923 10:21:48.992" endtime="20230923 10:21:49.133"/>
</kw>
<status status="PASS" starttime="20230923 10:21:48.991" endtime="20230923 10:21:49.134"/>
</kw>
<test id="s1-s5-s1-t1" name="List valid certificates" line="33">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin cert list</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:21:49.140" level="INFO">Running command 'ozone admin cert list 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:21:53.846" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:21:53.846" level="INFO">${output} = Certificate list:(Type=VALID, BatchSize=20, CertCount=7)
SerialNumber      Valid From                     Expiry                         Subject                                                        ...</msg>
<status status="PASS" starttime="20230923 10:21:49.137" endtime="20230923 10:21:53.846"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:21:53.848" level="INFO">Certificate list:(Type=VALID, BatchSize=20, CertCount=7)
SerialNumber      Valid From                     Expiry                         Subject                                                                                                        Issuer                                                                                                        
1                 Sat Sep 23 09:52:48 UTC 2023   Tue Oct 31 09:52:48 UTC 2028   CN=scm-1@scm,OU=5116574b-609b-4159-b761-697571577420,O=CID-7c8010d4-a3e4-473c-94fa-52965ebc1dff                CN=scm-1@scm,OU=5116574b-609b-4159-b761-697571577420,O=CID-7c8010d4-a3e4-473c-94fa-52965ebc1dff               
487546741084      Sat Sep 23 09:52:49 UTC 2023   Tue Oct 31 09:52:49 UTC 2028   CN=scm-sub-487008116518@scm,OU=5116574b-609b-4159-b761-697571577420,O=CID-7c8010d4-a3e4-473c-94fa-52965ebc1dff CN=scm-1@scm,OU=5116574b-609b-4159-b761-697571577420,O=CID-7c8010d4-a3e4-473c-94fa-52965ebc1dff               
515900979902      Sat Sep 23 09:53:18 UTC 2023   Sun Sep 22 09:53:18 UTC 2024   CN=recon@recon,OU=5116574b-609b-4159-b761-697571577420,O=CID-7c8010d4-a3e4-473c-94fa-52965ebc1dff              CN=scm-sub-487008116518@scm,OU=5116574b-609b-4159-b761-697571577420,O=CID-7c8010d4-a3e4-473c-94fa-52965ebc1dff
517721468502      Sat Sep 23 09:53:20 UTC 2023   Sun Sep 22 09:53:20 UTC 2024   CN=dn@d9aaf8bf08ba,OU=5116574b-609b-4159-b761-697571577420,O=CID-7c8010d4-a3e4-473c-94fa-52965ebc1dff          CN=scm-sub-487008116518@scm,OU=5116574b-609b-4159-b761-697571577420,O=CID-7c8010d4-a3e4-473c-94fa-52965ebc1dff
517905861442      Sat Sep 23 09:53:20 UTC 2023   Sun Sep 22 09:53:20 UTC 2024   CN=dn@d8fe224c9a92,OU=5116574b-609b-4159-b761-697571577420,O=CID-7c8010d4-a3e4-473c-94fa-52965ebc1dff          CN=scm-sub-487008116518@scm,OU=5116574b-609b-4159-b761-697571577420,O=CID-7c8010d4-a3e4-473c-94fa-52965ebc1dff
518356410450      Sat Sep 23 09:53:20 UTC 2023   Sun Sep 22 09:53:20 UTC 2024   CN=dn@8cda37d11442,OU=5116574b-609b-4159-b761-697571577420,O=CID-7c8010d4-a3e4-473c-94fa-52965ebc1dff          CN=scm-sub-487008116518@scm,OU=5116574b-609b-4159-b761-697571577420,O=CID-7c8010d4-a3e4-473c-94fa-52965ebc1dff
518785912048      Sat Sep 23 09:53:21 UTC 2023   Sun Sep 22 09:53:21 UTC 2024   CN=om,OU=5116574b-609b-4159-b761-697571577420,O=CID-7c8010d4-a3e4-473c-94fa-52965ebc1dff                       CN=scm-sub-487008116518@scm,OU=5116574b-609b-4159-b761-697571577420,O=CID-7c8010d4-a3e4-473c-94fa-52965ebc1dff</msg>
<status status="PASS" starttime="20230923 10:21:53.847" endtime="20230923 10:21:53.848"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:21:53.849" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:21:53.848" endtime="20230923 10:21:53.849"/>
</kw>
<status status="PASS" starttime="20230923 10:21:49.136" endtime="20230923 10:21:53.849"/>
</kw>
<msg timestamp="20230923 10:21:53.849" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:21:49.136" endtime="20230923 10:21:53.850"/>
</kw>
<msg timestamp="20230923 10:21:53.850" level="INFO">${output} = Certificate list:(Type=VALID, BatchSize=20, CertCount=7)
SerialNumber      Valid From                     Expiry                         Subject                                                        ...</msg>
<status status="PASS" starttime="20230923 10:21:49.135" endtime="20230923 10:21:53.850"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Type=VALID</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:21:53.850" endtime="20230923 10:21:53.850"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230923 10:21:49.134" endtime="20230923 10:21:53.851"/>
</test>
<test id="s1-s5-s1-t2" name="List revoked certificates" line="37">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin cert list -t revoked</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:21:53.857" level="INFO">Running command 'ozone admin cert list -t revoked 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:21:58.211" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:21:58.211" level="INFO">${output} = Certificate list:(Type=REVOKED, BatchSize=20, CertCount=0)
No certificates to list</msg>
<status status="PASS" starttime="20230923 10:21:53.854" endtime="20230923 10:21:58.211"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:21:58.212" level="INFO">Certificate list:(Type=REVOKED, BatchSize=20, CertCount=0)
No certificates to list</msg>
<status status="PASS" starttime="20230923 10:21:58.211" endtime="20230923 10:21:58.212"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:21:58.213" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:21:58.212" endtime="20230923 10:21:58.213"/>
</kw>
<status status="PASS" starttime="20230923 10:21:53.854" endtime="20230923 10:21:58.213"/>
</kw>
<msg timestamp="20230923 10:21:58.213" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:21:53.853" endtime="20230923 10:21:58.214"/>
</kw>
<msg timestamp="20230923 10:21:58.214" level="INFO">${output} = Certificate list:(Type=REVOKED, BatchSize=20, CertCount=0)
No certificates to list</msg>
<status status="PASS" starttime="20230923 10:21:53.853" endtime="20230923 10:21:58.214"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Certificate list:(Type=REVOKED, BatchSize=20, CertCount=0)</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:21:58.214" endtime="20230923 10:21:58.214"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230923 10:21:53.852" endtime="20230923 10:21:58.215"/>
</test>
<test id="s1-s5-s1-t3" name="Info of the cert" line="41">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>for id in $(ozone admin cert list -c 1|grep UTC|awk '{print $1}'); do ozone admin cert info $id; done</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:21:58.221" level="INFO">Running command 'for id in $(ozone admin cert list -c 1|grep UTC|awk '{print $1}'); do ozone admin cert info $id; done 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:22:08.249" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:22:08.249" level="INFO">${output} = The certificate list could be longer than the batch size: 1. Please use the "-c" option to see more certificates.
Certificate id: 1
  [0]         Version: 3
         SerialNumber: 1
             Issue...</msg>
<status status="PASS" starttime="20230923 10:21:58.218" endtime="20230923 10:22:08.249"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:22:08.251" level="INFO">The certificate list could be longer than the batch size: 1. Please use the "-c" option to see more certificates.
Certificate id: 1
  [0]         Version: 3
         SerialNumber: 1
             IssuerDN: CN=scm-1@scm,OU=5116574b-609b-4159-b761-697571577420,O=CID-7c8010d4-a3e4-473c-94fa-52965ebc1dff
           Start Date: Sat Sep 23 09:52:48 UTC 2023
           Final Date: Tue Oct 31 09:52:48 UTC 2028
            SubjectDN: CN=scm-1@scm,OU=5116574b-609b-4159-b761-697571577420,O=CID-7c8010d4-a3e4-473c-94fa-52965ebc1dff
           Public Key: RSA Public Key [de:ae:da:5a:c6:00:0d:ed:21:13:a4:45:f8:24:af:54:4d:c6:7e:ab],[56:66:d1:a4]
        modulus: bc241699f13240dacce4591732f7f7331bb9de2ffe941bf4f6d816bbc63a74ae4ccaae6d8916c573fd279cb2a7e3caceb4b55629cd13cde1a6ae7882feb08b7d75241bc3b70c7c364c3ffbdbcfc74582a59a982da60d73e2caa0bc344541d7ca9e7111583336d36750de112c4355fa043c0ad3144e141c4a312f105202b915503b0a362430a5a0627d84298a91fccebdbd99c298b527d904c602a952bce4bf8550268207e4c47ec206df05d8d0084b24855ad68c23df1d22e8858170ce566c15ada04b1ca63908ec87f8b9b36342fee6ec6325f19e5f6a7349b161e9b6c7b3bbd53d913f89e978c8173e1adb535309498c8cb220dab4e2a66b843e103432ac69
public exponent: 10001

  Signature Algorithm: SHA256withRSA
            Signature: 280fa9ff7009664e504e7d050c8c5ca2ced689ab
                       3320ab027be259fb236ae6ae4533ce02e4603627
                       4f8dda47b6ded649a1c3e124a45ea619f9d7bfe3
                       537c713548e91ffab56002055847e1dd086bfc4b
                       9fbccb6df453c691b494cc6ba8c37edaf55a1952
                       32b8c49b7b6b8a6352a7dfaa51daef289d7a8ab7
                       5c6c00ae4422808f2eea4d0806e84067fe4ad75a
                       700971d683d13dda7b04e48130fb99592a97d425
                       a945a7396977101d7dfff13d86685eebba03ec16
                       45980e5e01546b5740b533d51ff161d66b1f8291
                       9b3207f28b2a497ba675472151cb643659bf82f4
                       8db947c906f116ab47b53b66373f5bb5cc9fefd3
                       b2c3bc5d387b8181b7e62cbf770755d1
       Extensions: 
                       critical(true) BasicConstraints: isCa(true)
                       critical(true) KeyUsage: 0x6
                       critical(false) 2.5.29.17 value = Sequence
    Tagged [7] IMPLICIT 
        DER Octet String[4] 

</msg>
<status status="PASS" starttime="20230923 10:22:08.250" endtime="20230923 10:22:08.251"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:22:08.252" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:22:08.251" endtime="20230923 10:22:08.252"/>
</kw>
<status status="PASS" starttime="20230923 10:21:58.217" endtime="20230923 10:22:08.252"/>
</kw>
<msg timestamp="20230923 10:22:08.252" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:21:58.217" endtime="20230923 10:22:08.252"/>
</kw>
<msg timestamp="20230923 10:22:08.253" level="INFO">${output} = The certificate list could be longer than the batch size: 1. Please use the "-c" option to see more certificates.
Certificate id: 1
  [0]         Version: 3
         SerialNumber: 1
             Issue...</msg>
<status status="PASS" starttime="20230923 10:21:58.217" endtime="20230923 10:22:08.253"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Certificate not found</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:22:08.253" endtime="20230923 10:22:08.253"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230923 10:21:58.216" endtime="20230923 10:22:08.254"/>
</test>
<doc>Test for ozone admin cert command</doc>
<status status="PASS" starttime="20230923 10:21:48.954" endtime="20230923 10:22:08.255"/>
</suite>
<suite id="s1-s5-s2" name="Bucket-Encryption" source="/opt/hadoop/smoketest/security/bucket-encryption.robot">
<kw name="Setup Test" type="SETUP">
<kw name="Create Random Volume" library="shell">
<var>${volume}</var>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[LOWER]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230923 10:22:08.267" level="INFO">${random} = yrxia</msg>
<status status="PASS" starttime="20230923 10:22:08.267" endtime="20230923 10:22:08.267"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create o3://${OM_SERVICE_ID}/vol-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:22:08.271" level="INFO">Running command 'ozone sh volume create o3://om/vol-yrxia 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:22:13.600" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:22:13.600" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:22:08.269" endtime="20230923 10:22:13.600"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:22:13.602" level="INFO"/>
<status status="PASS" starttime="20230923 10:22:13.601" endtime="20230923 10:22:13.602"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:22:13.603" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:22:13.602" endtime="20230923 10:22:13.603"/>
</kw>
<status status="PASS" starttime="20230923 10:22:08.268" endtime="20230923 10:22:13.603"/>
</kw>
<msg timestamp="20230923 10:22:13.603" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:22:08.268" endtime="20230923 10:22:13.603"/>
</kw>
<status status="PASS" starttime="20230923 10:22:08.267" endtime="20230923 10:22:13.603"/>
</kw>
<msg timestamp="20230923 10:22:13.604" level="INFO">${volume} = vol-yrxia</msg>
<status status="PASS" starttime="20230923 10:22:08.266" endtime="20230923 10:22:13.604"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${VOLUME}</arg>
<arg>${volume}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230923 10:22:13.604" level="INFO">${VOLUME} = vol-yrxia</msg>
<status status="PASS" starttime="20230923 10:22:13.604" endtime="20230923 10:22:13.605"/>
</kw>
<status status="PASS" starttime="20230923 10:22:08.266" endtime="20230923 10:22:13.605"/>
</kw>
<test id="s1-s5-s2-t1" name="Create Encrypted Bucket" line="37">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create -k ${KEY_NAME} o3://${OM_SERVICE_ID}/${VOLUME}/encrypted-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:22:13.611" level="INFO">Running command 'ozone sh bucket create -k key1 o3://om/vol-yrxia/encrypted-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:22:19.920" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:22:19.920" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:22:13.608" endtime="20230923 10:22:19.920"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:22:19.922" level="INFO"/>
<status status="PASS" starttime="20230923 10:22:19.921" endtime="20230923 10:22:19.922"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:22:19.923" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:22:19.922" endtime="20230923 10:22:19.923"/>
</kw>
<status status="PASS" starttime="20230923 10:22:13.607" endtime="20230923 10:22:19.923"/>
</kw>
<msg timestamp="20230923 10:22:19.923" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:22:13.607" endtime="20230923 10:22:19.923"/>
</kw>
<msg timestamp="20230923 10:22:19.923" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:22:13.606" endtime="20230923 10:22:19.923"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>INVALID_REQUEST</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:22:19.924" endtime="20230923 10:22:19.924"/>
</kw>
<kw name="Bucket Exists" library="shell">
<arg>o3://${OM_SERVICE_ID}/${VOLUME}/encrypted-bucket</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>timeout 15 ozone sh bucket info ${bucket}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:22:19.928" level="INFO">Running command 'timeout 15 ozone sh bucket info o3://om/vol-yrxia/encrypted-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:22:26.036" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:22:26.037" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "vol-yrxia",
  "name" : "encrypted-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2023-...</msg>
<status status="PASS" starttime="20230923 10:22:19.925" endtime="20230923 10:22:26.037"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${rc} != 0</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20230923 10:22:26.037" endtime="20230923 10:22:26.038"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'VOLUME_NOT_FOUND' in '''${output}'''</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20230923 10:22:26.039" endtime="20230923 10:22:26.039"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'BUCKET_NOT_FOUND' in '''${output}'''</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20230923 10:22:26.039" endtime="20230923 10:22:26.040"/>
</kw>
<status status="PASS" starttime="20230923 10:22:19.924" endtime="20230923 10:22:26.040"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230923 10:22:13.605" endtime="20230923 10:22:26.040"/>
</test>
<test id="s1-s5-s2-t2" name="Create Key in Encrypted Bucket" line="42">
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>o3://${OM_SERVICE_ID}/${VOLUME}/encrypted-bucket/passwd</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230923 10:22:26.043" level="INFO">${key} = o3://om/vol-yrxia/encrypted-bucket/passwd</msg>
<status status="PASS" starttime="20230923 10:22:26.043" endtime="20230923 10:22:26.043"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put ${key} /etc/passwd</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:22:26.048" level="INFO">Running command 'ozone sh key put o3://om/vol-yrxia/encrypted-bucket/passwd /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:22:35.692" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:22:35.692" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:22:26.045" endtime="20230923 10:22:35.692"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:22:35.693" level="INFO"/>
<status status="PASS" starttime="20230923 10:22:35.692" endtime="20230923 10:22:35.693"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:22:35.694" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:22:35.693" endtime="20230923 10:22:35.694"/>
</kw>
<status status="PASS" starttime="20230923 10:22:26.045" endtime="20230923 10:22:35.694"/>
</kw>
<msg timestamp="20230923 10:22:35.694" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:22:26.044" endtime="20230923 10:22:35.694"/>
</kw>
<msg timestamp="20230923 10:22:35.694" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:22:26.044" endtime="20230923 10:22:35.694"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${key}</arg>
<arg>/etc/passwd</arg>
<kw name="Compare Key With Local File" library="shell">
<var>${matches}</var>
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230923 10:22:35.696" level="INFO">${postfix} = 71468</msg>
<status status="PASS" starttime="20230923 10:22:35.696" endtime="20230923 10:22:35.696"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${tmpfile}</var>
<arg>/tmp/tempkey-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230923 10:22:35.697" level="INFO">${tmpfile} = /tmp/tempkey-71468</msg>
<status status="PASS" starttime="20230923 10:22:35.697" endtime="20230923 10:22:35.697"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${key} ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:22:35.702" level="INFO">Running command 'ozone sh key get o3://om/vol-yrxia/encrypted-bucket/passwd /tmp/tempkey-71468 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:22:44.118" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:22:44.118" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:22:35.699" endtime="20230923 10:22:44.119"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:22:44.120" level="INFO"/>
<status status="PASS" starttime="20230923 10:22:44.119" endtime="20230923 10:22:44.120"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:22:44.121" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:22:44.121" endtime="20230923 10:22:44.121"/>
</kw>
<status status="PASS" starttime="20230923 10:22:35.698" endtime="20230923 10:22:44.122"/>
</kw>
<msg timestamp="20230923 10:22:44.122" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:22:35.698" endtime="20230923 10:22:44.122"/>
</kw>
<status status="PASS" starttime="20230923 10:22:35.697" endtime="20230923 10:22:44.122"/>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<var>${rc}</var>
<arg>diff -q ${file} ${tmpfile}</arg>
<doc>Runs the given command in the system and returns the return code.</doc>
<msg timestamp="20230923 10:22:44.126" level="INFO">Running command 'diff -q /etc/passwd /tmp/tempkey-71468 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:22:44.129" level="INFO">${rc} = 0</msg>
<status status="PASS" starttime="20230923 10:22:44.122" endtime="20230923 10:22:44.129"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:22:44.137" level="INFO">Running command 'rm -f /tmp/tempkey-71468 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:22:44.140" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:22:44.140" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:22:44.132" endtime="20230923 10:22:44.140"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:22:44.141" level="INFO"/>
<status status="PASS" starttime="20230923 10:22:44.140" endtime="20230923 10:22:44.141"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:22:44.142" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:22:44.141" endtime="20230923 10:22:44.142"/>
</kw>
<status status="PASS" starttime="20230923 10:22:44.132" endtime="20230923 10:22:44.142"/>
</kw>
<msg timestamp="20230923 10:22:44.142" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:22:44.131" endtime="20230923 10:22:44.142"/>
</kw>
<status status="PASS" starttime="20230923 10:22:44.130" endtime="20230923 10:22:44.142"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230923 10:22:44.143" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20230923 10:22:44.143" endtime="20230923 10:22:44.143"/>
</kw>
<msg timestamp="20230923 10:22:44.143" level="INFO">${matches} = True</msg>
<status status="PASS" starttime="20230923 10:22:35.695" endtime="20230923 10:22:44.143"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${matches}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230923 10:22:44.144" endtime="20230923 10:22:44.144"/>
</kw>
<status status="PASS" starttime="20230923 10:22:35.695" endtime="20230923 10:22:44.144"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230923 10:22:26.042" endtime="20230923 10:22:44.144"/>
</test>
<doc>Test for bucket encryption</doc>
<status status="PASS" starttime="20230923 10:22:08.257" endtime="20230923 10:22:44.146"/>
</suite>
<suite id="s1-s5-s3" name="Ozone-Secure-Fs" source="/opt/hadoop/smoketest/security/ozone-secure-fs.robot">
<test id="s1-s5-s3-t1" name="Create volume bucket with wrong credentials" line="52">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:22:44.168" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:22:44.173" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:22:44.173" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:22:44.166" endtime="20230923 10:22:44.173"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:22:44.174" level="INFO"/>
<status status="PASS" starttime="20230923 10:22:44.173" endtime="20230923 10:22:44.174"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:22:44.175" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:22:44.174" endtime="20230923 10:22:44.175"/>
</kw>
<status status="PASS" starttime="20230923 10:22:44.165" endtime="20230923 10:22:44.175"/>
</kw>
<msg timestamp="20230923 10:22:44.175" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:22:44.165" endtime="20230923 10:22:44.175"/>
</kw>
<status status="PASS" starttime="20230923 10:22:44.164" endtime="20230923 10:22:44.175"/>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>ozone sh volume create o3://om/fstest</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:22:44.178" level="INFO">Running command 'ozone sh volume create o3://om/fstest 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:22:48.329" level="INFO">${rc} = 255</msg>
<msg timestamp="20230923 10:22:48.329" level="INFO">${output} = org.apache.hadoop.security.AccessControlException: Client cannot authenticate via:[TOKEN, KERBEROS]</msg>
<status status="PASS" starttime="20230923 10:22:44.176" endtime="20230923 10:22:48.329"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Client cannot authenticate via</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:22:48.330" endtime="20230923 10:22:48.331"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230923 10:22:44.164" endtime="20230923 10:22:48.331"/>
</test>
<test id="s1-s5-s3-t2" name="Create volume with non-admin user" line="57">
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:22:48.339" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:22:48.343" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:22:48.343" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230923 10:22:48.336" endtime="20230923 10:22:48.343"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:22:48.345" level="INFO">scm</msg>
<status status="PASS" starttime="20230923 10:22:48.344" endtime="20230923 10:22:48.345"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:22:48.345" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:22:48.345" endtime="20230923 10:22:48.346"/>
</kw>
<status status="PASS" starttime="20230923 10:22:48.335" endtime="20230923 10:22:48.346"/>
</kw>
<msg timestamp="20230923 10:22:48.346" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:22:48.335" endtime="20230923 10:22:48.346"/>
</kw>
<msg timestamp="20230923 10:22:48.346" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230923 10:22:48.335" endtime="20230923 10:22:48.346"/>
</kw>
<msg timestamp="20230923 10:22:48.347" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230923 10:22:48.334" endtime="20230923 10:22:48.347"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230923 10:22:48.347" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230923 10:22:48.347" endtime="20230923 10:22:48.347"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:22:48.352" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser2.keytab testuser2/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:22:48.373" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:22:48.373" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:22:48.350" endtime="20230923 10:22:48.373"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:22:48.374" level="INFO"/>
<status status="PASS" starttime="20230923 10:22:48.373" endtime="20230923 10:22:48.374"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:22:48.375" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:22:48.374" endtime="20230923 10:22:48.375"/>
</kw>
<status status="PASS" starttime="20230923 10:22:48.349" endtime="20230923 10:22:48.375"/>
</kw>
<msg timestamp="20230923 10:22:48.375" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:22:48.349" endtime="20230923 10:22:48.375"/>
</kw>
<status status="PASS" starttime="20230923 10:22:48.348" endtime="20230923 10:22:48.375"/>
</kw>
<status status="PASS" starttime="20230923 10:22:48.348" endtime="20230923 10:22:48.375"/>
</kw>
<status status="PASS" starttime="20230923 10:22:48.334" endtime="20230923 10:22:48.375"/>
</kw>
<status status="PASS" starttime="20230923 10:22:48.333" endtime="20230923 10:22:48.376"/>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>ozone sh volume create o3://om/fstest</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:22:48.378" level="INFO">Running command 'ozone sh volume create o3://om/fstest 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:22:53.873" level="INFO">${rc} = 255</msg>
<msg timestamp="20230923 10:22:53.873" level="INFO">${output} = PERMISSION_DENIED User testuser2 doesn't have CREATE permission to access volume Volume:fstest </msg>
<status status="PASS" starttime="20230923 10:22:48.376" endtime="20230923 10:22:53.873"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>doesn't have CREATE permission to access volume</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:22:53.874" endtime="20230923 10:22:53.875"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230923 10:22:48.332" endtime="20230923 10:22:53.875"/>
</test>
<test id="s1-s5-s3-t3" name="Create bucket with non-admin owner(testuser2)" line="62">
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:22:53.883" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:22:53.887" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:22:53.887" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230923 10:22:53.880" endtime="20230923 10:22:53.887"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:22:53.888" level="INFO">scm</msg>
<status status="PASS" starttime="20230923 10:22:53.888" endtime="20230923 10:22:53.889"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:22:53.889" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:22:53.889" endtime="20230923 10:22:53.889"/>
</kw>
<status status="PASS" starttime="20230923 10:22:53.880" endtime="20230923 10:22:53.890"/>
</kw>
<msg timestamp="20230923 10:22:53.890" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:22:53.879" endtime="20230923 10:22:53.890"/>
</kw>
<msg timestamp="20230923 10:22:53.890" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230923 10:22:53.879" endtime="20230923 10:22:53.890"/>
</kw>
<msg timestamp="20230923 10:22:53.890" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230923 10:22:53.878" endtime="20230923 10:22:53.890"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230923 10:22:53.891" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230923 10:22:53.890" endtime="20230923 10:22:53.891"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:22:53.896" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:22:53.945" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:22:53.945" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:22:53.893" endtime="20230923 10:22:53.945"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:22:53.946" level="INFO"/>
<status status="PASS" starttime="20230923 10:22:53.945" endtime="20230923 10:22:53.946"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:22:53.947" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:22:53.946" endtime="20230923 10:22:53.947"/>
</kw>
<status status="PASS" starttime="20230923 10:22:53.892" endtime="20230923 10:22:53.947"/>
</kw>
<msg timestamp="20230923 10:22:53.947" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:22:53.892" endtime="20230923 10:22:53.947"/>
</kw>
<status status="PASS" starttime="20230923 10:22:53.892" endtime="20230923 10:22:53.947"/>
</kw>
<status status="PASS" starttime="20230923 10:22:53.891" endtime="20230923 10:22:53.948"/>
</kw>
<status status="PASS" starttime="20230923 10:22:53.878" endtime="20230923 10:22:53.948"/>
</kw>
<status status="PASS" starttime="20230923 10:22:53.877" endtime="20230923 10:22:53.948"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Setup volume names</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Setup volume names">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>2</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230923 10:22:53.949" level="INFO">${random} = 68</msg>
<status status="PASS" starttime="20230923 10:22:53.949" endtime="20230923 10:22:53.950"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${volume1}</arg>
<arg>fstest${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230923 10:22:53.951" level="INFO">${volume1} = fstest68</msg>
<status status="PASS" starttime="20230923 10:22:53.950" endtime="20230923 10:22:53.951"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${volume2}</arg>
<arg>fstest2${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230923 10:22:53.953" level="INFO">${volume2} = fstest268</msg>
<status status="PASS" starttime="20230923 10:22:53.952" endtime="20230923 10:22:53.953"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${volume3}</arg>
<arg>fstest3${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230923 10:22:53.955" level="INFO">${volume3} = fstest368</msg>
<status status="PASS" starttime="20230923 10:22:53.953" endtime="20230923 10:22:53.955"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${volume4}</arg>
<arg>fstest4${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230923 10:22:53.957" level="INFO">${volume4} = fstest468</msg>
<status status="PASS" starttime="20230923 10:22:53.955" endtime="20230923 10:22:53.957"/>
</kw>
<status status="PASS" starttime="20230923 10:22:53.948" endtime="20230923 10:22:53.958"/>
</kw>
<status status="PASS" starttime="20230923 10:22:53.948" endtime="20230923 10:22:53.958"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create o3://om/${volume4} -u testuser2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:22:53.962" level="INFO">Running command 'ozone sh volume create o3://om/fstest468 -u testuser2 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:22:59.280" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:22:59.280" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:22:53.959" endtime="20230923 10:22:59.280"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:22:59.282" level="INFO"/>
<status status="PASS" starttime="20230923 10:22:59.281" endtime="20230923 10:22:59.282"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:22:59.283" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:22:59.282" endtime="20230923 10:22:59.283"/>
</kw>
<status status="PASS" starttime="20230923 10:22:53.959" endtime="20230923 10:22:59.283"/>
</kw>
<msg timestamp="20230923 10:22:59.283" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:22:53.958" endtime="20230923 10:22:59.283"/>
</kw>
<status status="PASS" starttime="20230923 10:22:53.958" endtime="20230923 10:22:59.283"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:22:59.289" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:22:59.293" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:22:59.293" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230923 10:22:59.286" endtime="20230923 10:22:59.293"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:22:59.295" level="INFO">scm</msg>
<status status="PASS" starttime="20230923 10:22:59.294" endtime="20230923 10:22:59.295"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:22:59.295" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:22:59.295" endtime="20230923 10:22:59.295"/>
</kw>
<status status="PASS" starttime="20230923 10:22:59.286" endtime="20230923 10:22:59.296"/>
</kw>
<msg timestamp="20230923 10:22:59.296" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:22:59.285" endtime="20230923 10:22:59.296"/>
</kw>
<msg timestamp="20230923 10:22:59.296" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230923 10:22:59.285" endtime="20230923 10:22:59.296"/>
</kw>
<msg timestamp="20230923 10:22:59.296" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230923 10:22:59.284" endtime="20230923 10:22:59.296"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230923 10:22:59.297" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230923 10:22:59.297" endtime="20230923 10:22:59.297"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:22:59.302" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser2.keytab testuser2/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:22:59.340" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:22:59.340" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:22:59.299" endtime="20230923 10:22:59.340"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:22:59.341" level="INFO"/>
<status status="PASS" starttime="20230923 10:22:59.341" endtime="20230923 10:22:59.341"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:22:59.342" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:22:59.342" endtime="20230923 10:22:59.342"/>
</kw>
<status status="PASS" starttime="20230923 10:22:59.299" endtime="20230923 10:22:59.342"/>
</kw>
<msg timestamp="20230923 10:22:59.342" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:22:59.298" endtime="20230923 10:22:59.342"/>
</kw>
<status status="PASS" starttime="20230923 10:22:59.298" endtime="20230923 10:22:59.343"/>
</kw>
<status status="PASS" starttime="20230923 10:22:59.297" endtime="20230923 10:22:59.343"/>
</kw>
<status status="PASS" starttime="20230923 10:22:59.284" endtime="20230923 10:22:59.343"/>
</kw>
<status status="PASS" starttime="20230923 10:22:59.284" endtime="20230923 10:22:59.343"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket create o3://om/${volume4}/bucket1 --layout FILE_SYSTEM_OPTIMIZED</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:22:59.347" level="INFO">Running command 'ozone sh bucket create o3://om/fstest468/bucket1 --layout FILE_SYSTEM_OPTIMIZED 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:23:05.192" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:23:05.192" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:22:59.345" endtime="20230923 10:23:05.193"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:23:05.194" level="INFO"/>
<status status="PASS" starttime="20230923 10:23:05.193" endtime="20230923 10:23:05.194"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:23:05.195" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:23:05.194" endtime="20230923 10:23:05.195"/>
</kw>
<status status="PASS" starttime="20230923 10:22:59.344" endtime="20230923 10:23:05.195"/>
</kw>
<msg timestamp="20230923 10:23:05.195" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:22:59.344" endtime="20230923 10:23:05.195"/>
</kw>
<msg timestamp="20230923 10:23:05.195" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230923 10:22:59.343" endtime="20230923 10:23:05.195"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:23:05.196" endtime="20230923 10:23:05.196"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key put ${volume4}/bucket1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:23:05.201" level="INFO">Running command 'ozone sh key put fstest468/bucket1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:23:13.756" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:23:13.756" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:23:05.198" endtime="20230923 10:23:13.756"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:23:13.758" level="INFO"/>
<status status="PASS" starttime="20230923 10:23:13.757" endtime="20230923 10:23:13.758"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:23:13.759" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:23:13.758" endtime="20230923 10:23:13.759"/>
</kw>
<status status="PASS" starttime="20230923 10:23:05.197" endtime="20230923 10:23:13.759"/>
</kw>
<msg timestamp="20230923 10:23:13.759" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:23:05.197" endtime="20230923 10:23:13.759"/>
</kw>
<msg timestamp="20230923 10:23:13.759" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230923 10:23:05.196" endtime="20230923 10:23:13.759"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:23:13.759" endtime="20230923 10:23:13.760"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${volume4}/bucket1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:23:13.765" level="INFO">Running command 'ozone sh key list fstest468/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:23:20.035" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:23:20.035" level="INFO">${output} = [ {
  "volumeName" : "fstest468",
  "bucketName" : "bucket1",
  "name" : "key1",
  "dataSize" : 17289,
  "creationTime" : "2023-09-23T10:23:11.120Z",
  "modificationTime" : "2023-09-23T10:23:13.244Z",...</msg>
<status status="PASS" starttime="20230923 10:23:13.762" endtime="20230923 10:23:20.035"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:23:20.037" level="INFO">[ {
  "volumeName" : "fstest468",
  "bucketName" : "bucket1",
  "name" : "key1",
  "dataSize" : 17289,
  "creationTime" : "2023-09-23T10:23:11.120Z",
  "modificationTime" : "2023-09-23T10:23:13.244Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "file" : true
} ]</msg>
<status status="PASS" starttime="20230923 10:23:20.036" endtime="20230923 10:23:20.037"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:23:20.038" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:23:20.037" endtime="20230923 10:23:20.038"/>
</kw>
<status status="PASS" starttime="20230923 10:23:13.761" endtime="20230923 10:23:20.038"/>
</kw>
<msg timestamp="20230923 10:23:20.038" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:23:13.761" endtime="20230923 10:23:20.038"/>
</kw>
<msg timestamp="20230923 10:23:20.038" level="INFO">${result} = [ {
  "volumeName" : "fstest468",
  "bucketName" : "bucket1",
  "name" : "key1",
  "dataSize" : 17289,
  "creationTime" : "2023-09-23T10:23:11.120Z",
  "modificationTime" : "2023-09-23T10:23:13.244Z",...</msg>
<status status="PASS" starttime="20230923 10:23:13.760" endtime="20230923 10:23:20.039"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:23:20.039" endtime="20230923 10:23:20.039"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key delete ${volume4}/bucket1/key1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:23:20.044" level="INFO">Running command 'ozone sh key delete fstest468/bucket1/key1 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:23:26.086" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:23:26.086" level="INFO">${output} = Key moved inside Trash: /.Trash/testuser2/Current/key1 </msg>
<status status="PASS" starttime="20230923 10:23:20.041" endtime="20230923 10:23:26.086"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:23:26.088" level="INFO">Key moved inside Trash: /.Trash/testuser2/Current/key1 </msg>
<status status="PASS" starttime="20230923 10:23:26.087" endtime="20230923 10:23:26.088"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:23:26.089" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:23:26.089" endtime="20230923 10:23:26.089"/>
</kw>
<status status="PASS" starttime="20230923 10:23:20.041" endtime="20230923 10:23:26.090"/>
</kw>
<msg timestamp="20230923 10:23:26.090" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:23:20.040" endtime="20230923 10:23:26.090"/>
</kw>
<msg timestamp="20230923 10:23:26.090" level="INFO">${result} = Key moved inside Trash: /.Trash/testuser2/Current/key1 </msg>
<status status="PASS" starttime="20230923 10:23:20.039" endtime="20230923 10:23:26.090"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:23:26.090" endtime="20230923 10:23:26.091"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket delete -r --yes ${volume4}/bucket1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:23:26.095" level="INFO">Running command 'ozone sh bucket delete -r --yes fstest468/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:23:31.857" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:23:31.857" level="INFO">${output} = Bucket bucket1 is deleted</msg>
<status status="PASS" starttime="20230923 10:23:26.093" endtime="20230923 10:23:31.857"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:23:31.858" level="INFO">Bucket bucket1 is deleted</msg>
<status status="PASS" starttime="20230923 10:23:31.858" endtime="20230923 10:23:31.859"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:23:31.859" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:23:31.859" endtime="20230923 10:23:31.859"/>
</kw>
<status status="PASS" starttime="20230923 10:23:26.092" endtime="20230923 10:23:31.860"/>
</kw>
<msg timestamp="20230923 10:23:31.860" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:23:26.092" endtime="20230923 10:23:31.860"/>
</kw>
<msg timestamp="20230923 10:23:31.860" level="INFO">${result} = Bucket bucket1 is deleted</msg>
<status status="PASS" starttime="20230923 10:23:26.091" endtime="20230923 10:23:31.860"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:23:31.860" endtime="20230923 10:23:31.861"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230923 10:22:53.876" endtime="20230923 10:23:31.861"/>
</test>
<test id="s1-s5-s3-t4" name="Create volume bucket with credentials" line="78">
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:23:31.870" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:23:31.874" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:23:31.874" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230923 10:23:31.867" endtime="20230923 10:23:31.874"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:23:31.875" level="INFO">scm</msg>
<status status="PASS" starttime="20230923 10:23:31.874" endtime="20230923 10:23:31.875"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:23:31.876" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:23:31.875" endtime="20230923 10:23:31.876"/>
</kw>
<status status="PASS" starttime="20230923 10:23:31.866" endtime="20230923 10:23:31.876"/>
</kw>
<msg timestamp="20230923 10:23:31.876" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:23:31.866" endtime="20230923 10:23:31.876"/>
</kw>
<msg timestamp="20230923 10:23:31.877" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230923 10:23:31.865" endtime="20230923 10:23:31.877"/>
</kw>
<msg timestamp="20230923 10:23:31.877" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230923 10:23:31.865" endtime="20230923 10:23:31.877"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230923 10:23:31.878" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230923 10:23:31.877" endtime="20230923 10:23:31.878"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:23:31.883" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:23:31.912" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:23:31.912" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:23:31.880" endtime="20230923 10:23:31.912"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:23:31.914" level="INFO"/>
<status status="PASS" starttime="20230923 10:23:31.913" endtime="20230923 10:23:31.914"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:23:31.915" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:23:31.914" endtime="20230923 10:23:31.915"/>
</kw>
<status status="PASS" starttime="20230923 10:23:31.879" endtime="20230923 10:23:31.915"/>
</kw>
<msg timestamp="20230923 10:23:31.915" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:23:31.879" endtime="20230923 10:23:31.915"/>
</kw>
<status status="PASS" starttime="20230923 10:23:31.878" endtime="20230923 10:23:31.915"/>
</kw>
<status status="PASS" starttime="20230923 10:23:31.878" endtime="20230923 10:23:31.916"/>
</kw>
<status status="PASS" starttime="20230923 10:23:31.864" endtime="20230923 10:23:31.916"/>
</kw>
<status status="PASS" starttime="20230923 10:23:31.863" endtime="20230923 10:23:31.916"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Setup volume names</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Setup volume names">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>2</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230923 10:23:31.917" level="INFO">${random} = 96</msg>
<status status="PASS" starttime="20230923 10:23:31.917" endtime="20230923 10:23:31.918"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${volume1}</arg>
<arg>fstest${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230923 10:23:31.918" level="INFO">${volume1} = fstest96</msg>
<status status="PASS" starttime="20230923 10:23:31.918" endtime="20230923 10:23:31.918"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${volume2}</arg>
<arg>fstest2${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230923 10:23:31.919" level="INFO">${volume2} = fstest296</msg>
<status status="PASS" starttime="20230923 10:23:31.918" endtime="20230923 10:23:31.919"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${volume3}</arg>
<arg>fstest3${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230923 10:23:31.919" level="INFO">${volume3} = fstest396</msg>
<status status="PASS" starttime="20230923 10:23:31.919" endtime="20230923 10:23:31.920"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${volume4}</arg>
<arg>fstest4${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230923 10:23:31.920" level="INFO">${volume4} = fstest496</msg>
<status status="PASS" starttime="20230923 10:23:31.920" endtime="20230923 10:23:31.920"/>
</kw>
<status status="PASS" starttime="20230923 10:23:31.916" endtime="20230923 10:23:31.920"/>
</kw>
<status status="PASS" starttime="20230923 10:23:31.916" endtime="20230923 10:23:31.920"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create o3://om/${volume1}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:23:31.925" level="INFO">Running command 'ozone sh volume create o3://om/fstest96 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:23:37.054" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:23:37.054" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:23:31.922" endtime="20230923 10:23:37.054"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:23:37.056" level="INFO"/>
<status status="PASS" starttime="20230923 10:23:37.055" endtime="20230923 10:23:37.056"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:23:37.057" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:23:37.056" endtime="20230923 10:23:37.057"/>
</kw>
<status status="PASS" starttime="20230923 10:23:31.921" endtime="20230923 10:23:37.057"/>
</kw>
<msg timestamp="20230923 10:23:37.057" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:23:31.921" endtime="20230923 10:23:37.057"/>
</kw>
<status status="PASS" starttime="20230923 10:23:31.921" endtime="20230923 10:23:37.057"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create o3://om/${volume2}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:23:37.063" level="INFO">Running command 'ozone sh volume create o3://om/fstest296 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:23:42.982" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:23:42.982" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:23:37.059" endtime="20230923 10:23:42.982"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:23:42.983" level="INFO"/>
<status status="PASS" starttime="20230923 10:23:42.983" endtime="20230923 10:23:42.984"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:23:42.984" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:23:42.984" endtime="20230923 10:23:42.984"/>
</kw>
<status status="PASS" starttime="20230923 10:23:37.059" endtime="20230923 10:23:42.985"/>
</kw>
<msg timestamp="20230923 10:23:42.985" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:23:37.058" endtime="20230923 10:23:42.985"/>
</kw>
<status status="PASS" starttime="20230923 10:23:37.058" endtime="20230923 10:23:42.985"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create o3://om/${volume1}/bucket1 --layout FILE_SYSTEM_OPTIMIZED</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:23:42.990" level="INFO">Running command 'ozone sh bucket create o3://om/fstest96/bucket1 --layout FILE_SYSTEM_OPTIMIZED 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:23:48.210" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:23:48.210" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:23:42.987" endtime="20230923 10:23:48.210"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:23:48.212" level="INFO"/>
<status status="PASS" starttime="20230923 10:23:48.211" endtime="20230923 10:23:48.212"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:23:48.213" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:23:48.212" endtime="20230923 10:23:48.213"/>
</kw>
<status status="PASS" starttime="20230923 10:23:42.986" endtime="20230923 10:23:48.213"/>
</kw>
<msg timestamp="20230923 10:23:48.213" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:23:42.986" endtime="20230923 10:23:48.213"/>
</kw>
<status status="PASS" starttime="20230923 10:23:42.985" endtime="20230923 10:23:48.213"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create o3://om/${volume1}/bucket2 --layout FILE_SYSTEM_OPTIMIZED</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:23:48.218" level="INFO">Running command 'ozone sh bucket create o3://om/fstest96/bucket2 --layout FILE_SYSTEM_OPTIMIZED 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:23:53.938" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:23:53.938" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:23:48.215" endtime="20230923 10:23:53.939"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:23:53.941" level="INFO"/>
<status status="PASS" starttime="20230923 10:23:53.939" endtime="20230923 10:23:53.941"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:23:53.942" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:23:53.941" endtime="20230923 10:23:53.942"/>
</kw>
<status status="PASS" starttime="20230923 10:23:48.215" endtime="20230923 10:23:53.942"/>
</kw>
<msg timestamp="20230923 10:23:53.942" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:23:48.214" endtime="20230923 10:23:53.942"/>
</kw>
<status status="PASS" starttime="20230923 10:23:48.214" endtime="20230923 10:23:53.942"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create o3://om/${volume2}/bucket3 --layout FILE_SYSTEM_OPTIMIZED</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:23:53.947" level="INFO">Running command 'ozone sh bucket create o3://om/fstest296/bucket3 --layout FILE_SYSTEM_OPTIMIZED 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:23:59.603" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:23:59.604" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:23:53.944" endtime="20230923 10:23:59.604"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:23:59.605" level="INFO"/>
<status status="PASS" starttime="20230923 10:23:59.604" endtime="20230923 10:23:59.605"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:23:59.606" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:23:59.605" endtime="20230923 10:23:59.606"/>
</kw>
<status status="PASS" starttime="20230923 10:23:53.944" endtime="20230923 10:23:59.606"/>
</kw>
<msg timestamp="20230923 10:23:59.606" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:23:53.943" endtime="20230923 10:23:59.607"/>
</kw>
<status status="PASS" starttime="20230923 10:23:53.943" endtime="20230923 10:23:59.607"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230923 10:23:31.863" endtime="20230923 10:23:59.607"/>
</test>
<test id="s1-s5-s3-t5" name="Check volume from ozonefs" line="88">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone fs -ls o3fs://bucket1.${volume1}/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:23:59.615" level="INFO">Running command 'ozone fs -ls o3fs://bucket1.fstest96/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:24:04.546" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:24:04.546" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:23:59.612" endtime="20230923 10:24:04.546"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:24:04.547" level="INFO"/>
<status status="PASS" starttime="20230923 10:24:04.546" endtime="20230923 10:24:04.547"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:24:04.548" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:24:04.548" endtime="20230923 10:24:04.549"/>
</kw>
<status status="PASS" starttime="20230923 10:23:59.612" endtime="20230923 10:24:04.549"/>
</kw>
<msg timestamp="20230923 10:24:04.549" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:23:59.611" endtime="20230923 10:24:04.549"/>
</kw>
<msg timestamp="20230923 10:24:04.549" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230923 10:23:59.610" endtime="20230923 10:24:04.549"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230923 10:23:59.609" endtime="20230923 10:24:04.550"/>
</test>
<test id="s1-s5-s3-t6" name="Test tmp mount for shared ofs tmp dir" line="91">
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone getconf confKey ozone.om.enable.ofs.shared.tmp.dir</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:24:04.556" level="INFO">Running command 'ozone getconf confKey ozone.om.enable.ofs.shared.tmp.dir 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:24:06.394" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:24:06.394" level="INFO">${output} = false</msg>
<status status="PASS" starttime="20230923 10:24:04.552" endtime="20230923 10:24:06.394"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:24:06.396" level="INFO">false</msg>
<status status="PASS" starttime="20230923 10:24:06.395" endtime="20230923 10:24:06.396"/>
</kw>
<msg timestamp="20230923 10:24:06.396" level="INFO">${result} = false</msg>
<status status="PASS" starttime="20230923 10:24:04.552" endtime="20230923 10:24:06.396"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${contains}</var>
<arg>"true" in """${result}"""</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230923 10:24:06.397" level="INFO">${contains} = False</msg>
<status status="PASS" starttime="20230923 10:24:06.397" endtime="20230923 10:24:06.397"/>
</kw>
<if>
<branch type="IF" condition="${contains} == ${True}">
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20230923 10:24:06.398" endtime="20230923 10:24:06.398"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create /${TMP_MOUNT} -u testuser</arg>
<status status="NOT RUN" starttime="20230923 10:24:06.398" endtime="20230923 10:24:06.399"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create /${TMP_MOUNT}/${TMP_DIR} -u testuser</arg>
<status status="NOT RUN" starttime="20230923 10:24:06.399" endtime="20230923 10:24:06.399"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume addacl /${TMP_MOUNT} -a user:testuser:a,user:testuser2:rw</arg>
<status status="NOT RUN" starttime="20230923 10:24:06.399" endtime="20230923 10:24:06.399"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl /${TMP_MOUNT}/${TMP_DIR} -a user:testuser:a,user:testuser2:rwlc</arg>
<status status="NOT RUN" starttime="20230923 10:24:06.399" endtime="20230923 10:24:06.399"/>
</kw>
<kw name="Format ofs TMPMOUNT">
<var>${tmpdirmount}</var>
<arg>${TMP_MOUNT}</arg>
<status status="NOT RUN" starttime="20230923 10:24:06.399" endtime="20230923 10:24:06.399"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone fs -put ./NOTICE.txt ${tmpdirmount}</arg>
<status status="NOT RUN" starttime="20230923 10:24:06.400" endtime="20230923 10:24:06.400"/>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<arg>${result}</arg>
<doc>Verifies that the given item is empty.</doc>
<status status="NOT RUN" starttime="20230923 10:24:06.400" endtime="20230923 10:24:06.400"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20230923 10:24:06.400" endtime="20230923 10:24:06.400"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone fs -put ./LICENSE.txt ${tmpdirmount}</arg>
<status status="NOT RUN" starttime="20230923 10:24:06.400" endtime="20230923 10:24:06.400"/>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<arg>${result}</arg>
<doc>Verifies that the given item is empty.</doc>
<status status="NOT RUN" starttime="20230923 10:24:06.401" endtime="20230923 10:24:06.401"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone fs -ls ${tmpdirmount}</arg>
<status status="NOT RUN" starttime="20230923 10:24:06.401" endtime="20230923 10:24:06.401"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230923 10:24:06.401" endtime="20230923 10:24:06.401"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>LICENSE.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230923 10:24:06.401" endtime="20230923 10:24:06.401"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone fs -rm -skipTrash ${tmpdirmount}/NOTICE.txt</arg>
<status status="NOT RUN" starttime="20230923 10:24:06.401" endtime="20230923 10:24:06.401"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>error</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230923 10:24:06.402" endtime="20230923 10:24:06.402"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone fs -rm -skipTrash ${tmpdirmount}/LICENSE.txt</arg>
<status status="NOT RUN" starttime="20230923 10:24:06.402" endtime="20230923 10:24:06.402"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Deleted</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230923 10:24:06.402" endtime="20230923 10:24:06.402"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20230923 10:24:06.402" endtime="20230923 10:24:06.402"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone fs -rm -skipTrash ${tmpdirmount}/NOTICE.txt</arg>
<status status="NOT RUN" starttime="20230923 10:24:06.403" endtime="20230923 10:24:06.403"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Deleted</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230923 10:24:06.403" endtime="20230923 10:24:06.403"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -rm -r -skipTrash ${tmpdirmount}</arg>
<status status="NOT RUN" starttime="20230923 10:24:06.403" endtime="20230923 10:24:06.403"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete /${TMP_MOUNT}</arg>
<status status="NOT RUN" starttime="20230923 10:24:06.403" endtime="20230923 10:24:06.403"/>
</kw>
<status status="NOT RUN" starttime="20230923 10:24:06.398" endtime="20230923 10:24:06.403"/>
</branch>
<status status="PASS" starttime="20230923 10:24:06.398" endtime="20230923 10:24:06.403"/>
</if>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230923 10:24:04.551" endtime="20230923 10:24:06.404"/>
</test>
<doc>Smoke test to start cluster with docker-compose environments.</doc>
<status status="PASS" starttime="20230923 10:22:44.148" endtime="20230923 10:24:06.405"/>
</suite>
<suite id="s1-s5-s4" name="Ozone-Secure-S3" source="/opt/hadoop/smoketest/security/ozone-secure-s3.robot">
<test id="s1-s5-s4-t1" name="Secure S3 test Success" line="37">
<kw name="Run Keyword" library="BuiltIn">
<arg>Setup s3 tests</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Setup s3 tests" library="commonawslib">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20230923 10:24:06.458" endtime="20230923 10:24:06.458"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Generate random prefix" library="commonawslib">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230923 10:24:06.460" level="INFO">${randStr} = 5717784529</msg>
<status status="PASS" starttime="20230923 10:24:06.459" endtime="20230923 10:24:06.460"/>
</kw>
<msg timestamp="20230923 10:24:06.460" level="INFO">${random} = ozone-test-5717784529</msg>
<status status="PASS" starttime="20230923 10:24:06.459" endtime="20230923 10:24:06.460"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230923 10:24:06.462" level="INFO">${PREFIX} = ozone-test-5717784529</msg>
<status status="PASS" starttime="20230923 10:24:06.460" endtime="20230923 10:24:06.462"/>
</kw>
<status status="PASS" starttime="20230923 10:24:06.458" endtime="20230923 10:24:06.462"/>
</kw>
<status status="PASS" starttime="20230923 10:24:06.458" endtime="20230923 10:24:06.462"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Install aws cli" library="commonawslib">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>which aws</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:24:06.466" level="INFO">Running command 'which aws 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:24:06.470" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:24:06.470" level="INFO">${output} = /usr/local/bin/aws</msg>
<status status="PASS" starttime="20230923 10:24:06.463" endtime="20230923 10:24:06.470"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20230923 10:24:06.471" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:24:06.471" endtime="20230923 10:24:06.471"/>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>which apt-get</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="NOT RUN" starttime="20230923 10:24:06.472" endtime="20230923 10:24:06.472"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 debian</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230923 10:24:06.472" endtime="20230923 10:24:06.472"/>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>yum --help</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="NOT RUN" starttime="20230923 10:24:06.473" endtime="20230923 10:24:06.473"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 centos</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230923 10:24:06.473" endtime="20230923 10:24:06.473"/>
</kw>
<status status="PASS" starttime="20230923 10:24:06.463" endtime="20230923 10:24:06.473"/>
</kw>
<status status="PASS" starttime="20230923 10:24:06.463" endtime="20230923 10:24:06.473"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup v4 headers" library="commonawslib">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:24:06.480" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:24:06.485" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:24:06.485" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230923 10:24:06.477" endtime="20230923 10:24:06.485"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:24:06.486" level="INFO">scm</msg>
<status status="PASS" starttime="20230923 10:24:06.485" endtime="20230923 10:24:06.486"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:24:06.487" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:24:06.487" endtime="20230923 10:24:06.487"/>
</kw>
<status status="PASS" starttime="20230923 10:24:06.477" endtime="20230923 10:24:06.487"/>
</kw>
<msg timestamp="20230923 10:24:06.487" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:24:06.477" endtime="20230923 10:24:06.487"/>
</kw>
<msg timestamp="20230923 10:24:06.488" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230923 10:24:06.476" endtime="20230923 10:24:06.488"/>
</kw>
<msg timestamp="20230923 10:24:06.488" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230923 10:24:06.476" endtime="20230923 10:24:06.488"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230923 10:24:06.489" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230923 10:24:06.488" endtime="20230923 10:24:06.489"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:24:06.493" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:24:06.512" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:24:06.512" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:24:06.491" endtime="20230923 10:24:06.512"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:24:06.513" level="INFO"/>
<status status="PASS" starttime="20230923 10:24:06.513" endtime="20230923 10:24:06.513"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:24:06.514" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:24:06.514" endtime="20230923 10:24:06.514"/>
</kw>
<status status="PASS" starttime="20230923 10:24:06.490" endtime="20230923 10:24:06.515"/>
</kw>
<msg timestamp="20230923 10:24:06.515" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:24:06.490" endtime="20230923 10:24:06.515"/>
</kw>
<status status="PASS" starttime="20230923 10:24:06.489" endtime="20230923 10:24:06.515"/>
</kw>
<status status="PASS" starttime="20230923 10:24:06.489" endtime="20230923 10:24:06.515"/>
</kw>
<status status="PASS" starttime="20230923 10:24:06.475" endtime="20230923 10:24:06.515"/>
</kw>
<status status="PASS" starttime="20230923 10:24:06.475" endtime="20230923 10:24:06.515"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:24:06.519" level="INFO">Running command 'ozone s3 getsecret  2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:24:11.209" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:24:11.209" level="INFO">${output} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=44c022e9021b7bae925c36282544a8f230d722beb5f082b96ebee73ea0a57d03</msg>
<status status="PASS" starttime="20230923 10:24:06.517" endtime="20230923 10:24:11.209"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:24:11.211" level="INFO">awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=44c022e9021b7bae925c36282544a8f230d722beb5f082b96ebee73ea0a57d03</msg>
<status status="PASS" starttime="20230923 10:24:11.210" endtime="20230923 10:24:11.211"/>
</kw>
<msg timestamp="20230923 10:24:11.211" level="INFO">${result} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=44c022e9021b7bae925c36282544a8f230d722beb5f082b96ebee73ea0a57d03</msg>
<status status="PASS" starttime="20230923 10:24:06.516" endtime="20230923 10:24:11.211"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${output}</var>
<arg>Should Contain</arg>
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20230923 10:24:11.213" level="FAIL">'awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=44c022e9021b7bae925c36282544a8f230d722beb5f082b96ebee73ea0a57d03' does not contain 'S3_SECRET_ALREADY_EXISTS'</msg>
<status status="FAIL" starttime="20230923 10:24:11.212" endtime="20230923 10:24:11.213"/>
</kw>
<msg timestamp="20230923 10:24:11.213" level="INFO">${output} = False</msg>
<status status="PASS" starttime="20230923 10:24:11.212" endtime="20230923 10:24:11.213"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${output}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20230923 10:24:11.213" endtime="20230923 10:24:11.214"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${accessKey}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230923 10:24:11.215" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20230923 10:24:11.214" endtime="20230923 10:24:11.215"/>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey}</arg>
<arg>testuser</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20230923 10:24:11.215" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20230923 10:24:11.215" endtime="20230923 10:24:11.215"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secret}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230923 10:24:11.216" level="INFO">${secret} = ['44c022e9021b7bae925c36282544a8f230d722beb5f082b96ebee73ea0a57d03']</msg>
<status status="PASS" starttime="20230923 10:24:11.215" endtime="20230923 10:24:11.216"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230923 10:24:11.218" level="INFO">${accessKey} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230923 10:24:11.217" endtime="20230923 10:24:11.218"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secret}</var>
<arg>${secret[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230923 10:24:11.219" level="INFO">${secret} = 44c022e9021b7bae925c36282544a8f230d722beb5f082b96ebee73ea0a57d03</msg>
<status status="PASS" starttime="20230923 10:24:11.218" endtime="20230923 10:24:11.219"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:24:11.224" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:24:11.779" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:24:11.779" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:24:11.221" endtime="20230923 10:24:11.779"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:24:11.780" level="INFO"/>
<status status="PASS" starttime="20230923 10:24:11.779" endtime="20230923 10:24:11.780"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:24:11.781" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:24:11.781" endtime="20230923 10:24:11.781"/>
</kw>
<status status="PASS" starttime="20230923 10:24:11.220" endtime="20230923 10:24:11.782"/>
</kw>
<msg timestamp="20230923 10:24:11.782" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:24:11.220" endtime="20230923 10:24:11.782"/>
</kw>
<status status="PASS" starttime="20230923 10:24:11.219" endtime="20230923 10:24:11.782"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:24:11.786" level="INFO">Running command 'aws configure set aws_access_key_id testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:24:12.307" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:24:12.307" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:24:11.783" endtime="20230923 10:24:12.307"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:24:12.309" level="INFO"/>
<status status="PASS" starttime="20230923 10:24:12.308" endtime="20230923 10:24:12.309"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:24:12.309" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:24:12.309" endtime="20230923 10:24:12.310"/>
</kw>
<status status="PASS" starttime="20230923 10:24:11.783" endtime="20230923 10:24:12.310"/>
</kw>
<msg timestamp="20230923 10:24:12.310" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:24:11.783" endtime="20230923 10:24:12.310"/>
</kw>
<status status="PASS" starttime="20230923 10:24:11.782" endtime="20230923 10:24:12.310"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${secret}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:24:12.315" level="INFO">Running command 'aws configure set aws_secret_access_key 44c022e9021b7bae925c36282544a8f230d722beb5f082b96ebee73ea0a57d03 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:24:12.838" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:24:12.838" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:24:12.312" endtime="20230923 10:24:12.838"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:24:12.839" level="INFO"/>
<status status="PASS" starttime="20230923 10:24:12.838" endtime="20230923 10:24:12.840"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:24:12.840" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:24:12.840" endtime="20230923 10:24:12.841"/>
</kw>
<status status="PASS" starttime="20230923 10:24:12.311" endtime="20230923 10:24:12.841"/>
</kw>
<msg timestamp="20230923 10:24:12.841" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:24:12.311" endtime="20230923 10:24:12.841"/>
</kw>
<status status="PASS" starttime="20230923 10:24:12.310" endtime="20230923 10:24:12.841"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:24:12.846" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:24:13.392" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:24:13.392" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:24:12.843" endtime="20230923 10:24:13.392"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:24:13.394" level="INFO"/>
<status status="PASS" starttime="20230923 10:24:13.393" endtime="20230923 10:24:13.394"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:24:13.394" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:24:13.394" endtime="20230923 10:24:13.395"/>
</kw>
<status status="PASS" starttime="20230923 10:24:12.842" endtime="20230923 10:24:13.395"/>
</kw>
<msg timestamp="20230923 10:24:13.395" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:24:12.842" endtime="20230923 10:24:13.395"/>
</kw>
<status status="PASS" starttime="20230923 10:24:12.841" endtime="20230923 10:24:13.395"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.addressing_style ${OZONE_S3_ADDRESS_STYLE}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:24:13.400" level="INFO">Running command 'aws configure set default.s3.addressing_style path 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:24:13.931" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:24:13.931" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:24:13.397" endtime="20230923 10:24:13.931"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:24:13.932" level="INFO"/>
<status status="PASS" starttime="20230923 10:24:13.932" endtime="20230923 10:24:13.933"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:24:13.933" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:24:13.933" endtime="20230923 10:24:13.933"/>
</kw>
<status status="PASS" starttime="20230923 10:24:13.396" endtime="20230923 10:24:13.934"/>
</kw>
<msg timestamp="20230923 10:24:13.934" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:24:13.396" endtime="20230923 10:24:13.934"/>
</kw>
<status status="PASS" starttime="20230923 10:24:13.395" endtime="20230923 10:24:13.934"/>
</kw>
<status status="PASS" starttime="20230923 10:24:06.516" endtime="20230923 10:24:13.934"/>
</kw>
<status status="PASS" starttime="20230923 10:24:06.515" endtime="20230923 10:24:13.934"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230923 10:24:13.934" endtime="20230923 10:24:13.935"/>
</kw>
<status status="PASS" starttime="20230923 10:24:06.474" endtime="20230923 10:24:13.935"/>
</kw>
<status status="PASS" starttime="20230923 10:24:06.473" endtime="20230923 10:24:13.935"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create generated bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Create generated bucket" library="commonawslib">
<kw name="Create bucket" library="commonawslib">
<var>${BUCKET}</var>
<kw name="Generate Ozone String" library="commonawslib">
<var>${postfix}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230923 10:24:13.938" level="INFO">${randStr} = 8729346004</msg>
<status status="PASS" starttime="20230923 10:24:13.937" endtime="20230923 10:24:13.938"/>
</kw>
<msg timestamp="20230923 10:24:13.938" level="INFO">${postfix} = ozone-test-8729346004</msg>
<status status="PASS" starttime="20230923 10:24:13.937" endtime="20230923 10:24:13.938"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${bucket}</var>
<arg>bucket-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230923 10:24:13.938" level="INFO">${bucket} = bucket-ozone-test-8729346004</msg>
<status status="PASS" starttime="20230923 10:24:13.938" endtime="20230923 10:24:13.938"/>
</kw>
<kw name="Create bucket with name" library="commonawslib">
<arg>${bucket}</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:24:13.944" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket bucket-ozone-test-8729346004 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:24:18.441" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:24:18.442" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-ozone-test-8729346004"
}</msg>
<status status="PASS" starttime="20230923 10:24:13.941" endtime="20230923 10:24:18.442"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:24:18.443" level="INFO">{
    "Location": "http://s3g:9878/bucket-ozone-test-8729346004"
}</msg>
<status status="PASS" starttime="20230923 10:24:18.442" endtime="20230923 10:24:18.444"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:24:18.444" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:24:18.444" endtime="20230923 10:24:18.445"/>
</kw>
<status status="PASS" starttime="20230923 10:24:13.940" endtime="20230923 10:24:18.445"/>
</kw>
<msg timestamp="20230923 10:24:18.445" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:24:13.940" endtime="20230923 10:24:18.445"/>
</kw>
<msg timestamp="20230923 10:24:18.445" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-ozone-test-8729346004"
}</msg>
<status status="PASS" starttime="20230923 10:24:13.940" endtime="20230923 10:24:18.445"/>
</kw>
<msg timestamp="20230923 10:24:18.446" level="INFO">${result} = {
    "Location": "http://s3g:9878/bucket-ozone-test-8729346004"
}</msg>
<status status="PASS" starttime="20230923 10:24:13.939" endtime="20230923 10:24:18.446"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Location</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:24:18.446" endtime="20230923 10:24:18.447"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:24:18.447" endtime="20230923 10:24:18.447"/>
</kw>
<status status="PASS" starttime="20230923 10:24:13.939" endtime="20230923 10:24:18.448"/>
</kw>
<msg timestamp="20230923 10:24:18.448" level="INFO">${BUCKET} = bucket-ozone-test-8729346004</msg>
<status status="PASS" starttime="20230923 10:24:13.936" endtime="20230923 10:24:18.448"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${BUCKET}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230923 10:24:18.449" level="INFO">${BUCKET} = bucket-ozone-test-8729346004</msg>
<status status="PASS" starttime="20230923 10:24:18.448" endtime="20230923 10:24:18.449"/>
</kw>
<status status="PASS" starttime="20230923 10:24:13.935" endtime="20230923 10:24:18.449"/>
</kw>
<status status="PASS" starttime="20230923 10:24:13.935" endtime="20230923 10:24:18.449"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230923 10:24:18.449" endtime="20230923 10:24:18.450"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230923 10:24:18.450" endtime="20230923 10:24:18.451"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230923 10:24:18.451" endtime="20230923 10:24:18.451"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<arg>${TRUE}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230923 10:24:18.452" level="INFO">${OZONE_S3_TESTS_SET_UP} = True</msg>
<status status="PASS" starttime="20230923 10:24:18.451" endtime="20230923 10:24:18.452"/>
</kw>
<status status="PASS" starttime="20230923 10:24:06.457" endtime="20230923 10:24:18.452"/>
</kw>
<status status="PASS" starttime="20230923 10:24:06.457" endtime="20230923 10:24:18.452"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} create-bucket --bucket bucket-test123</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:24:18.458" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket bucket-test123 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:24:19.281" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:24:19.281" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-test123"
}</msg>
<status status="PASS" starttime="20230923 10:24:18.454" endtime="20230923 10:24:19.281"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:24:19.282" level="INFO">{
    "Location": "http://s3g:9878/bucket-test123"
}</msg>
<status status="PASS" starttime="20230923 10:24:19.282" endtime="20230923 10:24:19.283"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:24:19.283" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:24:19.283" endtime="20230923 10:24:19.284"/>
</kw>
<status status="PASS" starttime="20230923 10:24:18.454" endtime="20230923 10:24:19.284"/>
</kw>
<msg timestamp="20230923 10:24:19.284" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:24:18.453" endtime="20230923 10:24:19.284"/>
</kw>
<msg timestamp="20230923 10:24:19.284" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-test123"
}</msg>
<status status="PASS" starttime="20230923 10:24:18.453" endtime="20230923 10:24:19.284"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} list-buckets</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:24:19.291" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-buckets 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:24:20.132" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:24:20.132" level="INFO">${output} = {
    "Buckets": [
        {
            "Name": "bucket-ozone-test-8729346004",
            "CreationDate": "2023-09-23T10:24:18.241Z"
        },
        {
            "Name": "bucket-test123",
     ...</msg>
<status status="PASS" starttime="20230923 10:24:19.286" endtime="20230923 10:24:20.132"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:24:20.134" level="INFO">{
    "Buckets": [
        {
            "Name": "bucket-ozone-test-8729346004",
            "CreationDate": "2023-09-23T10:24:18.241Z"
        },
        {
            "Name": "bucket-test123",
            "CreationDate": "2023-09-23T10:24:19.163Z"
        }
    ]
}</msg>
<status status="PASS" starttime="20230923 10:24:20.133" endtime="20230923 10:24:20.134"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:24:20.134" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:24:20.134" endtime="20230923 10:24:20.135"/>
</kw>
<status status="PASS" starttime="20230923 10:24:19.286" endtime="20230923 10:24:20.135"/>
</kw>
<msg timestamp="20230923 10:24:20.135" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:24:19.285" endtime="20230923 10:24:20.135"/>
</kw>
<msg timestamp="20230923 10:24:20.135" level="INFO">${output} = {
    "Buckets": [
        {
            "Name": "bucket-ozone-test-8729346004",
            "CreationDate": "2023-09-23T10:24:18.241Z"
        },
        {
            "Name": "bucket-test123",
     ...</msg>
<status status="PASS" starttime="20230923 10:24:19.284" endtime="20230923 10:24:20.135"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>bucket-test123</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:24:20.136" endtime="20230923 10:24:20.136"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230923 10:24:06.457" endtime="20230923 10:24:20.136"/>
</test>
<test id="s1-s5-s4-t2" name="Secure S3 put-object test" line="43">
<kw name="Set Variable" library="BuiltIn">
<var>${testFilePath}</var>
<arg>${TEMPDIR}/${TEST_FILE}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230923 10:24:20.139" level="INFO">${testFilePath} = /tmp/NOTICE.txt</msg>
<status status="PASS" starttime="20230923 10:24:20.138" endtime="20230923 10:24:20.139"/>
</kw>
<kw name="Copy File" library="OperatingSystem">
<arg>${TEST_FILE}</arg>
<arg>${testFilePath}</arg>
<doc>Copies the source file into the destination.</doc>
<msg timestamp="20230923 10:24:20.141" level="INFO" html="true">Copied file from '&lt;a href="file:///opt/hadoop/NOTICE.txt"&gt;/opt/hadoop/NOTICE.txt&lt;/a&gt;' to '&lt;a href="file:///tmp/NOTICE.txt"&gt;/tmp/NOTICE.txt&lt;/a&gt;'.</msg>
<status status="PASS" starttime="20230923 10:24:20.139" endtime="20230923 10:24:20.142"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint ${ENDPOINT_URL} put-object --bucket=bucket-test123 --key=tmp1/tmp2/NOTICE.txt --body=${testFilePath}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:24:20.147" level="INFO">Running command 'aws s3api --endpoint http://s3g:9878 put-object --bucket=bucket-test123 --key=tmp1/tmp2/NOTICE.txt --body=/tmp/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:24:22.617" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:24:22.617" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:24:20.144" endtime="20230923 10:24:22.617"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:24:22.619" level="INFO"/>
<status status="PASS" starttime="20230923 10:24:22.618" endtime="20230923 10:24:22.619"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:24:22.620" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:24:22.619" endtime="20230923 10:24:22.620"/>
</kw>
<status status="PASS" starttime="20230923 10:24:20.143" endtime="20230923 10:24:22.620"/>
</kw>
<msg timestamp="20230923 10:24:22.620" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:24:20.143" endtime="20230923 10:24:22.621"/>
</kw>
<msg timestamp="20230923 10:24:22.621" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:24:20.142" endtime="20230923 10:24:22.621"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint ${ENDPOINT_URL} list-objects --bucket=bucket-test123</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:24:22.627" level="INFO">Running command 'aws s3api --endpoint http://s3g:9878 list-objects --bucket=bucket-test123 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:24:23.373" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:24:23.373" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "tmp1/tmp2/NOTICE.txt",
            "LastModified": "2023-09-23T10:24:22.533Z",
            "ETag": "2023-09-23T10:24:22.533Z",
            "Size": 172...</msg>
<status status="PASS" starttime="20230923 10:24:22.623" endtime="20230923 10:24:23.373"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:24:23.375" level="INFO">{
    "Contents": [
        {
            "Key": "tmp1/tmp2/NOTICE.txt",
            "LastModified": "2023-09-23T10:24:22.533Z",
            "ETag": "2023-09-23T10:24:22.533Z",
            "Size": 17289,
            "StorageClass": "STANDARD"
        }
    ]
}</msg>
<status status="PASS" starttime="20230923 10:24:23.374" endtime="20230923 10:24:23.375"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:24:23.375" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:24:23.375" endtime="20230923 10:24:23.376"/>
</kw>
<status status="PASS" starttime="20230923 10:24:22.623" endtime="20230923 10:24:23.376"/>
</kw>
<msg timestamp="20230923 10:24:23.376" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:24:22.622" endtime="20230923 10:24:23.376"/>
</kw>
<msg timestamp="20230923 10:24:23.376" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "tmp1/tmp2/NOTICE.txt",
            "LastModified": "2023-09-23T10:24:22.533Z",
            "ETag": "2023-09-23T10:24:22.533Z",
            "Size": 172...</msg>
<status status="PASS" starttime="20230923 10:24:22.621" endtime="20230923 10:24:23.376"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>tmp1/tmp2/NOTICE.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:24:23.377" endtime="20230923 10:24:23.377"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint ${ENDPOINT_URL} put-object --bucket=bucket-test123 --key=tmp3//tmp4/NOTICE.txt --body=${testFilePath}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:24:23.383" level="INFO">Running command 'aws s3api --endpoint http://s3g:9878 put-object --bucket=bucket-test123 --key=tmp3//tmp4/NOTICE.txt --body=/tmp/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:24:24.206" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:24:24.207" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:24:23.379" endtime="20230923 10:24:24.207"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:24:24.209" level="INFO"/>
<status status="PASS" starttime="20230923 10:24:24.207" endtime="20230923 10:24:24.209"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:24:24.209" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:24:24.209" endtime="20230923 10:24:24.210"/>
</kw>
<status status="PASS" starttime="20230923 10:24:23.379" endtime="20230923 10:24:24.210"/>
</kw>
<msg timestamp="20230923 10:24:24.210" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:24:23.378" endtime="20230923 10:24:24.210"/>
</kw>
<msg timestamp="20230923 10:24:24.210" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:24:23.377" endtime="20230923 10:24:24.210"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint ${ENDPOINT_URL} list-objects --bucket=bucket-test123</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:24:24.216" level="INFO">Running command 'aws s3api --endpoint http://s3g:9878 list-objects --bucket=bucket-test123 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:24:24.905" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:24:24.905" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "tmp1/tmp2/NOTICE.txt",
            "LastModified": "2023-09-23T10:24:22.533Z",
            "ETag": "2023-09-23T10:24:22.533Z",
            "Size": 172...</msg>
<status status="PASS" starttime="20230923 10:24:24.213" endtime="20230923 10:24:24.905"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:24:24.907" level="INFO">{
    "Contents": [
        {
            "Key": "tmp1/tmp2/NOTICE.txt",
            "LastModified": "2023-09-23T10:24:22.533Z",
            "ETag": "2023-09-23T10:24:22.533Z",
            "Size": 17289,
            "StorageClass": "STANDARD"
        },
        {
            "Key": "tmp3//tmp4/NOTICE.txt",
            "LastModified": "2023-09-23T10:24:24.124Z",
            "ETag": "2023-09-23T10:24:24.124Z",
            "Size": 17289,
            "StorageClass": "STANDARD"
        }
    ]
}</msg>
<status status="PASS" starttime="20230923 10:24:24.906" endtime="20230923 10:24:24.907"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:24:24.908" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:24:24.907" endtime="20230923 10:24:24.908"/>
</kw>
<status status="PASS" starttime="20230923 10:24:24.212" endtime="20230923 10:24:24.908"/>
</kw>
<msg timestamp="20230923 10:24:24.908" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:24:24.212" endtime="20230923 10:24:24.908"/>
</kw>
<msg timestamp="20230923 10:24:24.908" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "tmp1/tmp2/NOTICE.txt",
            "LastModified": "2023-09-23T10:24:22.533Z",
            "ETag": "2023-09-23T10:24:22.533Z",
            "Size": 172...</msg>
<status status="PASS" starttime="20230923 10:24:24.211" endtime="20230923 10:24:24.908"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>tmp3//tmp4/NOTICE.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:24:24.909" endtime="20230923 10:24:24.909"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint ${ENDPOINT_URL} put-object --bucket=bucket-test123 --key=//tmp5/tmp6/NOTICE.txt --body=${testFilePath}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:24:24.914" level="INFO">Running command 'aws s3api --endpoint http://s3g:9878 put-object --bucket=bucket-test123 --key=//tmp5/tmp6/NOTICE.txt --body=/tmp/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:24:25.775" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:24:25.775" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:24:24.911" endtime="20230923 10:24:25.775"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:24:25.777" level="INFO"/>
<status status="PASS" starttime="20230923 10:24:25.776" endtime="20230923 10:24:25.777"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:24:25.778" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:24:25.777" endtime="20230923 10:24:25.778"/>
</kw>
<status status="PASS" starttime="20230923 10:24:24.910" endtime="20230923 10:24:25.778"/>
</kw>
<msg timestamp="20230923 10:24:25.778" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:24:24.910" endtime="20230923 10:24:25.778"/>
</kw>
<msg timestamp="20230923 10:24:25.778" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:24:24.909" endtime="20230923 10:24:25.778"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint ${ENDPOINT_URL} list-objects --bucket=bucket-test123</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:24:25.784" level="INFO">Running command 'aws s3api --endpoint http://s3g:9878 list-objects --bucket=bucket-test123 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:24:26.490" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:24:26.490" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "//tmp5/tmp6/NOTICE.txt",
            "LastModified": "2023-09-23T10:24:25.654Z",
            "ETag": "2023-09-23T10:24:25.654Z",
            "Size": 1...</msg>
<status status="PASS" starttime="20230923 10:24:25.781" endtime="20230923 10:24:26.490"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:24:26.491" level="INFO">{
    "Contents": [
        {
            "Key": "//tmp5/tmp6/NOTICE.txt",
            "LastModified": "2023-09-23T10:24:25.654Z",
            "ETag": "2023-09-23T10:24:25.654Z",
            "Size": 17289,
            "StorageClass": "STANDARD"
        },
        {
            "Key": "tmp1/tmp2/NOTICE.txt",
            "LastModified": "2023-09-23T10:24:22.533Z",
            "ETag": "2023-09-23T10:24:22.533Z",
            "Size": 17289,
            "StorageClass": "STANDARD"
        },
        {
            "Key": "tmp3//tmp4/NOTICE.txt",
            "LastModified": "2023-09-23T10:24:24.124Z",
            "ETag": "2023-09-23T10:24:24.124Z",
            "Size": 17289,
            "StorageClass": "STANDARD"
        }
    ]
}</msg>
<status status="PASS" starttime="20230923 10:24:26.490" endtime="20230923 10:24:26.492"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:24:26.492" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:24:26.492" endtime="20230923 10:24:26.492"/>
</kw>
<status status="PASS" starttime="20230923 10:24:25.780" endtime="20230923 10:24:26.493"/>
</kw>
<msg timestamp="20230923 10:24:26.493" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:24:25.780" endtime="20230923 10:24:26.493"/>
</kw>
<msg timestamp="20230923 10:24:26.493" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "//tmp5/tmp6/NOTICE.txt",
            "LastModified": "2023-09-23T10:24:25.654Z",
            "ETag": "2023-09-23T10:24:25.654Z",
            "Size": 1...</msg>
<status status="PASS" starttime="20230923 10:24:25.779" endtime="20230923 10:24:26.493"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>//tmp5/tmp6/NOTICE.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:24:26.493" endtime="20230923 10:24:26.494"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230923 10:24:20.137" endtime="20230923 10:24:26.494"/>
</test>
<test id="s1-s5-s4-t3" name="Secure S3 test Failure" line="56">
<kw name="Run Keyword" library="BuiltIn">
<arg>Setup dummy credentials for S3</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Setup dummy credentials for S3" library="commonawslib">
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:24:26.502" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:24:27.041" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:24:27.041" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:24:26.499" endtime="20230923 10:24:27.041"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:24:27.043" level="INFO"/>
<status status="PASS" starttime="20230923 10:24:27.042" endtime="20230923 10:24:27.043"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:24:27.043" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:24:27.043" endtime="20230923 10:24:27.044"/>
</kw>
<status status="PASS" starttime="20230923 10:24:26.498" endtime="20230923 10:24:27.044"/>
</kw>
<msg timestamp="20230923 10:24:27.044" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:24:26.498" endtime="20230923 10:24:27.044"/>
</kw>
<status status="PASS" starttime="20230923 10:24:26.497" endtime="20230923 10:24:27.044"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:24:27.048" level="INFO">Running command 'aws configure set aws_access_key_id dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:24:27.588" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:24:27.588" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:24:27.046" endtime="20230923 10:24:27.588"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:24:27.589" level="INFO"/>
<status status="PASS" starttime="20230923 10:24:27.588" endtime="20230923 10:24:27.589"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:24:27.590" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:24:27.590" endtime="20230923 10:24:27.590"/>
</kw>
<status status="PASS" starttime="20230923 10:24:27.045" endtime="20230923 10:24:27.590"/>
</kw>
<msg timestamp="20230923 10:24:27.590" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:24:27.045" endtime="20230923 10:24:27.590"/>
</kw>
<status status="PASS" starttime="20230923 10:24:27.044" endtime="20230923 10:24:27.591"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:24:27.595" level="INFO">Running command 'aws configure set aws_secret_access_key dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:24:28.125" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:24:28.125" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:24:27.593" endtime="20230923 10:24:28.125"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:24:28.127" level="INFO"/>
<status status="PASS" starttime="20230923 10:24:28.126" endtime="20230923 10:24:28.127"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:24:28.127" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:24:28.127" endtime="20230923 10:24:28.127"/>
</kw>
<status status="PASS" starttime="20230923 10:24:27.592" endtime="20230923 10:24:28.128"/>
</kw>
<msg timestamp="20230923 10:24:28.128" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:24:27.591" endtime="20230923 10:24:28.128"/>
</kw>
<status status="PASS" starttime="20230923 10:24:27.591" endtime="20230923 10:24:28.128"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:24:28.132" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:24:28.668" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:24:28.668" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:24:28.130" endtime="20230923 10:24:28.668"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:24:28.670" level="INFO"/>
<status status="PASS" starttime="20230923 10:24:28.669" endtime="20230923 10:24:28.670"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:24:28.670" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:24:28.670" endtime="20230923 10:24:28.671"/>
</kw>
<status status="PASS" starttime="20230923 10:24:28.129" endtime="20230923 10:24:28.671"/>
</kw>
<msg timestamp="20230923 10:24:28.671" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:24:28.129" endtime="20230923 10:24:28.671"/>
</kw>
<status status="PASS" starttime="20230923 10:24:28.128" endtime="20230923 10:24:28.671"/>
</kw>
<status status="PASS" starttime="20230923 10:24:26.497" endtime="20230923 10:24:28.673"/>
</kw>
<status status="PASS" starttime="20230923 10:24:26.496" endtime="20230923 10:24:28.673"/>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${result}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} create-bucket --bucket bucket-test123</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:24:28.676" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket bucket-test123 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:24:29.784" level="INFO">${rc} = 255</msg>
<msg timestamp="20230923 10:24:29.784" level="INFO">${result} = 
An error occurred (AccessDenied) when calling the CreateBucket operation: User doesn't have the right to access this resource.</msg>
<status status="PASS" starttime="20230923 10:24:28.673" endtime="20230923 10:24:29.784"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${rc} &gt; 0</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230923 10:24:29.784" endtime="20230923 10:24:29.786"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230923 10:24:26.495" endtime="20230923 10:24:29.786"/>
</test>
<doc>Smoke test to start cluster with docker-compose environments.</doc>
<status status="PASS" starttime="20230923 10:24:06.408" endtime="20230923 10:24:29.787"/>
</suite>
<suite id="s1-s5-s5" name="Ozone-Secure-Tenant" source="/opt/hadoop/smoketest/security/ozone-secure-tenant.robot">
<test id="s1-s5-s5-t1" name="Create Tenant Success with Cluster Admin" line="30">
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:24:29.810" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:24:29.815" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:24:29.815" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230923 10:24:29.807" endtime="20230923 10:24:29.815"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:24:29.817" level="INFO">scm</msg>
<status status="PASS" starttime="20230923 10:24:29.816" endtime="20230923 10:24:29.817"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:24:29.817" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:24:29.817" endtime="20230923 10:24:29.818"/>
</kw>
<status status="PASS" starttime="20230923 10:24:29.807" endtime="20230923 10:24:29.818"/>
</kw>
<msg timestamp="20230923 10:24:29.818" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:24:29.806" endtime="20230923 10:24:29.818"/>
</kw>
<msg timestamp="20230923 10:24:29.818" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230923 10:24:29.806" endtime="20230923 10:24:29.818"/>
</kw>
<msg timestamp="20230923 10:24:29.818" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230923 10:24:29.805" endtime="20230923 10:24:29.819"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230923 10:24:29.819" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230923 10:24:29.819" endtime="20230923 10:24:29.819"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:24:29.824" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:24:29.852" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:24:29.853" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:24:29.822" endtime="20230923 10:24:29.853"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:24:29.854" level="INFO"/>
<status status="PASS" starttime="20230923 10:24:29.853" endtime="20230923 10:24:29.854"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:24:29.855" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:24:29.854" endtime="20230923 10:24:29.855"/>
</kw>
<status status="PASS" starttime="20230923 10:24:29.821" endtime="20230923 10:24:29.855"/>
</kw>
<msg timestamp="20230923 10:24:29.855" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:24:29.821" endtime="20230923 10:24:29.855"/>
</kw>
<status status="PASS" starttime="20230923 10:24:29.820" endtime="20230923 10:24:29.855"/>
</kw>
<status status="PASS" starttime="20230923 10:24:29.819" endtime="20230923 10:24:29.856"/>
</kw>
<status status="PASS" starttime="20230923 10:24:29.805" endtime="20230923 10:24:29.856"/>
</kw>
<status status="PASS" starttime="20230923 10:24:29.804" endtime="20230923 10:24:29.856"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone tenant --verbose create tenantone</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:24:29.861" level="INFO">Running command 'ozone tenant --verbose create tenantone 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:24:34.400" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:24:34.400" level="INFO">${output} = {
  "tenantId": "tenantone"
}</msg>
<status status="PASS" starttime="20230923 10:24:29.858" endtime="20230923 10:24:34.400"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:24:34.402" level="INFO">{
  "tenantId": "tenantone"
}</msg>
<status status="PASS" starttime="20230923 10:24:34.401" endtime="20230923 10:24:34.402"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:24:34.403" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:24:34.402" endtime="20230923 10:24:34.403"/>
</kw>
<status status="PASS" starttime="20230923 10:24:29.857" endtime="20230923 10:24:34.403"/>
</kw>
<msg timestamp="20230923 10:24:34.403" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:24:29.857" endtime="20230923 10:24:34.403"/>
</kw>
<msg timestamp="20230923 10:24:34.404" level="INFO">${output} = {
  "tenantId": "tenantone"
}</msg>
<status status="PASS" starttime="20230923 10:24:29.856" endtime="20230923 10:24:34.404"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"tenantId": "tenantone"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:24:34.404" endtime="20230923 10:24:34.404"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230923 10:24:29.803" endtime="20230923 10:24:34.405"/>
</test>
<test id="s1-s5-s5-t2" name="Assign User Success with Cluster Admin" line="35">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone tenant --verbose user assign testuser --tenant=tenantone</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:24:34.411" level="INFO">Running command 'ozone tenant --verbose user assign testuser --tenant=tenantone 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:24:38.926" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:24:38.927" level="INFO">${output} = export AWS_ACCESS_KEY_ID='tenantone$testuser'
export AWS_SECRET_ACCESS_KEY='c99569bd87270ac3388ba6f63fd5ea28e062a7518f9c4e9f4d42f3f831ca2bb5'
Assigned 'testuser' to 'tenantone' with accessId 'tenanton...</msg>
<status status="PASS" starttime="20230923 10:24:34.408" endtime="20230923 10:24:38.927"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:24:38.928" level="INFO">export AWS_ACCESS_KEY_ID='tenantone$testuser'
export AWS_SECRET_ACCESS_KEY='c99569bd87270ac3388ba6f63fd5ea28e062a7518f9c4e9f4d42f3f831ca2bb5'
Assigned 'testuser' to 'tenantone' with accessId 'tenantone$testuser'.</msg>
<status status="PASS" starttime="20230923 10:24:38.927" endtime="20230923 10:24:38.928"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:24:38.929" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:24:38.929" endtime="20230923 10:24:38.929"/>
</kw>
<status status="PASS" starttime="20230923 10:24:34.408" endtime="20230923 10:24:38.930"/>
</kw>
<msg timestamp="20230923 10:24:38.930" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:24:34.407" endtime="20230923 10:24:38.930"/>
</kw>
<msg timestamp="20230923 10:24:38.930" level="INFO">${output} = export AWS_ACCESS_KEY_ID='tenantone$testuser'
export AWS_SECRET_ACCESS_KEY='c99569bd87270ac3388ba6f63fd5ea28e062a7518f9c4e9f4d42f3f831ca2bb5'
Assigned 'testuser' to 'tenantone' with accessId 'tenanton...</msg>
<status status="PASS" starttime="20230923 10:24:34.407" endtime="20230923 10:24:38.930"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Assigned 'testuser' to 'tenantone'</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:24:38.930" endtime="20230923 10:24:38.931"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${accessId}</var>
<arg>${output}</arg>
<arg>(?&lt;=export AWS_ACCESS_KEY_ID=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230923 10:24:38.932" level="INFO">${accessId} = ["'tenantone$testuser'"]</msg>
<status status="PASS" starttime="20230923 10:24:38.931" endtime="20230923 10:24:38.932"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secretKey}</var>
<arg>${output}</arg>
<arg>(?&lt;=export AWS_SECRET_ACCESS_KEY=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230923 10:24:38.933" level="INFO">${secretKey} = ["'c99569bd87270ac3388ba6f63fd5ea28e062a7518f9c4e9f4d42f3f831ca2bb5'"]</msg>
<status status="PASS" starttime="20230923 10:24:38.932" endtime="20230923 10:24:38.933"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessId}</var>
<arg>${accessId[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230923 10:24:38.936" level="INFO">${accessId} = 'tenantone$testuser'</msg>
<status status="PASS" starttime="20230923 10:24:38.933" endtime="20230923 10:24:38.936"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secretKey}</var>
<arg>${secretKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230923 10:24:38.937" level="INFO">${secretKey} = 'c99569bd87270ac3388ba6f63fd5ea28e062a7518f9c4e9f4d42f3f831ca2bb5'</msg>
<status status="PASS" starttime="20230923 10:24:38.936" endtime="20230923 10:24:38.937"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${ACCESS_ID}</arg>
<arg>${accessId}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230923 10:24:38.938" level="INFO">${ACCESS_ID} = 'tenantone$testuser'</msg>
<status status="PASS" starttime="20230923 10:24:38.938" endtime="20230923 10:24:38.938"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${SECRET_KEY}</arg>
<arg>${secretKey}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230923 10:24:38.939" level="INFO">${SECRET_KEY} = 'c99569bd87270ac3388ba6f63fd5ea28e062a7518f9c4e9f4d42f3f831ca2bb5'</msg>
<status status="PASS" starttime="20230923 10:24:38.938" endtime="20230923 10:24:38.939"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230923 10:24:34.406" endtime="20230923 10:24:38.939"/>
</test>
<test id="s1-s5-s5-t3" name="Assign User Failure to Non-existent Tenant" line="45">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>ozone tenant user assign testuser --tenant=thistenantdoesnotexist</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:24:38.944" level="INFO">Running command 'ozone tenant user assign testuser --tenant=thistenantdoesnotexist 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:24:43.353" level="INFO">${rc} = 255</msg>
<msg timestamp="20230923 10:24:43.353" level="INFO">${output} = TENANT_NOT_FOUND Tenant 'thistenantdoesnotexist' doesn't exist.</msg>
<status status="PASS" starttime="20230923 10:24:38.941" endtime="20230923 10:24:43.353"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Tenant 'thistenantdoesnotexist' doesn't exist</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:24:43.354" endtime="20230923 10:24:43.355"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230923 10:24:38.940" endtime="20230923 10:24:43.355"/>
</test>
<test id="s1-s5-s5-t4" name="GetUserInfo Success" line="49">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone tenant user info testuser</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:24:43.362" level="INFO">Running command 'ozone tenant user info testuser 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:24:47.919" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:24:47.919" level="INFO">${output} = User 'testuser' is assigned to:
- Tenant 'tenantone' with accessId 'tenantone$testuser'</msg>
<status status="PASS" starttime="20230923 10:24:43.359" endtime="20230923 10:24:47.919"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:24:47.921" level="INFO">User 'testuser' is assigned to:
- Tenant 'tenantone' with accessId 'tenantone$testuser'</msg>
<status status="PASS" starttime="20230923 10:24:47.920" endtime="20230923 10:24:47.921"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:24:47.922" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:24:47.921" endtime="20230923 10:24:47.922"/>
</kw>
<status status="PASS" starttime="20230923 10:24:43.358" endtime="20230923 10:24:47.922"/>
</kw>
<msg timestamp="20230923 10:24:47.922" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:24:43.358" endtime="20230923 10:24:47.922"/>
</kw>
<msg timestamp="20230923 10:24:47.922" level="INFO">${output} = User 'testuser' is assigned to:
- Tenant 'tenantone' with accessId 'tenantone$testuser'</msg>
<status status="PASS" starttime="20230923 10:24:43.357" endtime="20230923 10:24:47.922"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Tenant 'tenantone' with accessId 'tenantone$testuser'</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:24:47.923" endtime="20230923 10:24:47.923"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230923 10:24:43.356" endtime="20230923 10:24:47.923"/>
</test>
<test id="s1-s5-s5-t5" name="GetUserInfo as JSON Success" line="53">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone tenant user info --json testuser | jq '.tenants | .[].accessId'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:24:47.930" level="INFO">Running command 'ozone tenant user info --json testuser | jq '.tenants | .[].accessId' 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:24:52.596" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:24:52.596" level="INFO">${output} = "tenantone$testuser"</msg>
<status status="PASS" starttime="20230923 10:24:47.927" endtime="20230923 10:24:52.596"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:24:52.598" level="INFO">"tenantone$testuser"</msg>
<status status="PASS" starttime="20230923 10:24:52.597" endtime="20230923 10:24:52.598"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:24:52.599" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:24:52.598" endtime="20230923 10:24:52.599"/>
</kw>
<status status="PASS" starttime="20230923 10:24:47.926" endtime="20230923 10:24:52.599"/>
</kw>
<msg timestamp="20230923 10:24:52.599" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:24:47.926" endtime="20230923 10:24:52.600"/>
</kw>
<msg timestamp="20230923 10:24:52.600" level="INFO">${output} = "tenantone$testuser"</msg>
<status status="PASS" starttime="20230923 10:24:47.925" endtime="20230923 10:24:52.600"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"tenantone$testuser"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:24:52.600" endtime="20230923 10:24:52.601"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230923 10:24:47.924" endtime="20230923 10:24:52.601"/>
</test>
<test id="s1-s5-s5-t6" name="Create Bucket 1 Success via S3 API" line="57">
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${ACCESS_ID}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:24:52.608" level="INFO">Running command 'aws configure set aws_access_key_id 'tenantone$testuser' 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:24:53.156" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:24:53.156" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:24:52.605" endtime="20230923 10:24:53.156"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:24:53.158" level="INFO"/>
<status status="PASS" starttime="20230923 10:24:53.157" endtime="20230923 10:24:53.158"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:24:53.159" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:24:53.158" endtime="20230923 10:24:53.159"/>
</kw>
<status status="PASS" starttime="20230923 10:24:52.604" endtime="20230923 10:24:53.159"/>
</kw>
<msg timestamp="20230923 10:24:53.160" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:24:52.604" endtime="20230923 10:24:53.160"/>
</kw>
<status status="PASS" starttime="20230923 10:24:52.603" endtime="20230923 10:24:53.160"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${SECRET_KEY}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:24:53.165" level="INFO">Running command 'aws configure set aws_secret_access_key 'c99569bd87270ac3388ba6f63fd5ea28e062a7518f9c4e9f4d42f3f831ca2bb5' 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:24:53.702" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:24:53.702" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:24:53.163" endtime="20230923 10:24:53.702"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:24:53.703" level="INFO"/>
<status status="PASS" starttime="20230923 10:24:53.703" endtime="20230923 10:24:53.704"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:24:53.704" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:24:53.704" endtime="20230923 10:24:53.704"/>
</kw>
<status status="PASS" starttime="20230923 10:24:53.162" endtime="20230923 10:24:53.705"/>
</kw>
<msg timestamp="20230923 10:24:53.705" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:24:53.161" endtime="20230923 10:24:53.705"/>
</kw>
<status status="PASS" starttime="20230923 10:24:53.160" endtime="20230923 10:24:53.705"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${S3G_ENDPOINT_URL} create-bucket --bucket bucket-test1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:24:53.710" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket bucket-test1 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:24:54.394" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:24:54.394" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-test1"
}</msg>
<status status="PASS" starttime="20230923 10:24:53.707" endtime="20230923 10:24:54.394"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:24:54.396" level="INFO">{
    "Location": "http://s3g:9878/bucket-test1"
}</msg>
<status status="PASS" starttime="20230923 10:24:54.395" endtime="20230923 10:24:54.396"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:24:54.397" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:24:54.397" endtime="20230923 10:24:54.397"/>
</kw>
<status status="PASS" starttime="20230923 10:24:53.706" endtime="20230923 10:24:54.398"/>
</kw>
<msg timestamp="20230923 10:24:54.398" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:24:53.706" endtime="20230923 10:24:54.398"/>
</kw>
<msg timestamp="20230923 10:24:54.398" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-test1"
}</msg>
<status status="PASS" starttime="20230923 10:24:53.705" endtime="20230923 10:24:54.398"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>bucket-test1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:24:54.398" endtime="20230923 10:24:54.399"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${S3G_ENDPOINT_URL} list-buckets</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:24:54.404" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-buckets 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:24:55.113" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:24:55.113" level="INFO">${output} = {
    "Buckets": [
        {
            "Name": "bucket-test1",
            "CreationDate": "2023-09-23T10:24:54.319Z"
        }
    ]
}</msg>
<status status="PASS" starttime="20230923 10:24:54.401" endtime="20230923 10:24:55.113"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:24:55.115" level="INFO">{
    "Buckets": [
        {
            "Name": "bucket-test1",
            "CreationDate": "2023-09-23T10:24:54.319Z"
        }
    ]
}</msg>
<status status="PASS" starttime="20230923 10:24:55.114" endtime="20230923 10:24:55.115"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:24:55.116" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:24:55.116" endtime="20230923 10:24:55.116"/>
</kw>
<status status="PASS" starttime="20230923 10:24:54.400" endtime="20230923 10:24:55.117"/>
</kw>
<msg timestamp="20230923 10:24:55.117" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:24:54.400" endtime="20230923 10:24:55.117"/>
</kw>
<msg timestamp="20230923 10:24:55.117" level="INFO">${output} = {
    "Buckets": [
        {
            "Name": "bucket-test1",
            "CreationDate": "2023-09-23T10:24:54.319Z"
        }
    ]
}</msg>
<status status="PASS" starttime="20230923 10:24:54.399" endtime="20230923 10:24:55.117"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>bucket-test1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:24:55.117" endtime="20230923 10:24:55.118"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230923 10:24:52.602" endtime="20230923 10:24:55.118"/>
</test>
<test id="s1-s5-s5-t7" name="Verify Bucket 1 Owner" line="65">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info /tenantone/bucket-test1 | jq -r '.owner'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:24:55.125" level="INFO">Running command 'ozone sh bucket info /tenantone/bucket-test1 | jq -r '.owner' 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:25:01.596" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:25:01.597" level="INFO">${output} = testuser</msg>
<status status="PASS" starttime="20230923 10:24:55.122" endtime="20230923 10:25:01.597"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:25:01.598" level="INFO">testuser</msg>
<status status="PASS" starttime="20230923 10:25:01.597" endtime="20230923 10:25:01.599"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:25:01.599" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:25:01.599" endtime="20230923 10:25:01.599"/>
</kw>
<status status="PASS" starttime="20230923 10:24:55.121" endtime="20230923 10:25:01.600"/>
</kw>
<msg timestamp="20230923 10:25:01.600" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:24:55.121" endtime="20230923 10:25:01.600"/>
</kw>
<msg timestamp="20230923 10:25:01.600" level="INFO">${result} = testuser</msg>
<status status="PASS" starttime="20230923 10:24:55.120" endtime="20230923 10:25:01.600"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>testuser</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230923 10:25:01.600" endtime="20230923 10:25:01.601"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230923 10:24:55.119" endtime="20230923 10:25:01.601"/>
</test>
<test id="s1-s5-s5-t8" name="Put, get and delete a key in the tenant bucket" line="69">
<kw name="Execute" library="os">
<arg>echo "Randomtext" &gt; /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:25:01.609" level="INFO">Running command 'echo "Randomtext" &gt; /tmp/testfile'.</msg>
<msg timestamp="20230923 10:25:01.611" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:25:01.611" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:25:01.606" endtime="20230923 10:25:01.611"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:25:01.613" level="INFO"/>
<status status="PASS" starttime="20230923 10:25:01.612" endtime="20230923 10:25:01.613"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:25:01.614" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:25:01.613" endtime="20230923 10:25:01.614"/>
</kw>
<status status="PASS" starttime="20230923 10:25:01.605" endtime="20230923 10:25:01.614"/>
</kw>
<msg timestamp="20230923 10:25:01.614" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:25:01.604" endtime="20230923 10:25:01.615"/>
</kw>
<status status="PASS" starttime="20230923 10:25:01.604" endtime="20230923 10:25:01.615"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>aws s3api --endpoint-url ${S3G_ENDPOINT_URL} put-object --bucket bucket-test1 --key mykey --body /tmp/testfile</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:25:01.618" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket bucket-test1 --key mykey --body /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:25:02.574" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:25:02.574" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:25:01.616" endtime="20230923 10:25:02.574"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:25:02.575" level="INFO"/>
<status status="PASS" starttime="20230923 10:25:02.574" endtime="20230923 10:25:02.575"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:25:02.576" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:25:02.575" endtime="20230923 10:25:02.576"/>
</kw>
<status status="PASS" starttime="20230923 10:25:01.615" endtime="20230923 10:25:02.576"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>aws s3api --endpoint-url ${S3G_ENDPOINT_URL} head-object --bucket bucket-test1 --key mykey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:25:02.581" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-object --bucket bucket-test1 --key mykey 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:25:03.337" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:25:03.337" level="INFO">${output} = {
    "LastModified": "Sat, 23 Sep 2023 10:25:02 GMT",
    "ContentLength": 11,
    "ETag": "2023-09-23T10:25:02.468Z",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-stream",
    "E...</msg>
<status status="PASS" starttime="20230923 10:25:02.577" endtime="20230923 10:25:03.337"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:25:03.339" level="INFO">{
    "LastModified": "Sat, 23 Sep 2023 10:25:02 GMT",
    "ContentLength": 11,
    "ETag": "2023-09-23T10:25:02.468Z",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-stream",
    "Expires": "Sat, 23 Sep 2023 10:25:03 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20230923 10:25:03.338" endtime="20230923 10:25:03.339"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:25:03.339" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:25:03.339" endtime="20230923 10:25:03.340"/>
</kw>
<status status="PASS" starttime="20230923 10:25:02.577" endtime="20230923 10:25:03.340"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>aws s3api --endpoint-url ${S3G_ENDPOINT_URL} delete-object --bucket bucket-test1 --key mykey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:25:03.344" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-object --bucket bucket-test1 --key mykey 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:25:03.984" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:25:03.985" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:25:03.341" endtime="20230923 10:25:03.985"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:25:03.986" level="INFO"/>
<status status="PASS" starttime="20230923 10:25:03.985" endtime="20230923 10:25:03.986"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:25:03.987" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:25:03.986" endtime="20230923 10:25:03.987"/>
</kw>
<status status="PASS" starttime="20230923 10:25:03.340" endtime="20230923 10:25:03.987"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230923 10:25:01.603" endtime="20230923 10:25:03.988"/>
</test>
<test id="s1-s5-s5-t9" name="SetSecret Success with Cluster Admin" line="76">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone tenant user setsecret 'tenantone$testuser' --secret=somesecret1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:25:03.994" level="INFO">Running command 'ozone tenant user setsecret 'tenantone$testuser' --secret=somesecret1 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:25:08.550" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:25:08.550" level="INFO">${output} = export AWS_ACCESS_KEY_ID='tenantone$testuser'
export AWS_SECRET_ACCESS_KEY='somesecret1'</msg>
<status status="PASS" starttime="20230923 10:25:03.991" endtime="20230923 10:25:08.550"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:25:08.552" level="INFO">export AWS_ACCESS_KEY_ID='tenantone$testuser'
export AWS_SECRET_ACCESS_KEY='somesecret1'</msg>
<status status="PASS" starttime="20230923 10:25:08.551" endtime="20230923 10:25:08.552"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:25:08.553" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:25:08.552" endtime="20230923 10:25:08.553"/>
</kw>
<status status="PASS" starttime="20230923 10:25:03.990" endtime="20230923 10:25:08.553"/>
</kw>
<msg timestamp="20230923 10:25:08.553" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:25:03.990" endtime="20230923 10:25:08.553"/>
</kw>
<msg timestamp="20230923 10:25:08.554" level="INFO">${output} = export AWS_ACCESS_KEY_ID='tenantone$testuser'
export AWS_SECRET_ACCESS_KEY='somesecret1'</msg>
<status status="PASS" starttime="20230923 10:25:03.989" endtime="20230923 10:25:08.554"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>export AWS_SECRET_ACCESS_KEY='somesecret1'</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:25:08.554" endtime="20230923 10:25:08.554"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230923 10:25:03.988" endtime="20230923 10:25:08.555"/>
</test>
<test id="s1-s5-s5-t10" name="SetSecret Failure For Invalid Secret 1" line="80">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>ozone tenant user setsecret 'tenantone$testuser' --secret=''</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:25:08.560" level="INFO">Running command 'ozone tenant user setsecret 'tenantone$testuser' --secret='' 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:25:12.878" level="INFO">${rc} = 255</msg>
<msg timestamp="20230923 10:25:12.878" level="INFO">${output} = secretKey cannot be null or empty.</msg>
<status status="PASS" starttime="20230923 10:25:08.556" endtime="20230923 10:25:12.878"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>secretKey cannot be null or empty.</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:25:12.879" endtime="20230923 10:25:12.880"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230923 10:25:08.555" endtime="20230923 10:25:12.880"/>
</test>
<test id="s1-s5-s5-t11" name="SetSecret Failure For Invalid Secret 2" line="84">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>ozone tenant user setsecret 'tenantone$testuser' --secret=short</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:25:12.885" level="INFO">Running command 'ozone tenant user setsecret 'tenantone$testuser' --secret=short 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:25:17.774" level="INFO">${rc} = 255</msg>
<msg timestamp="20230923 10:25:17.774" level="INFO">${output} = INVALID_REQUEST Secret key length should be at least 8 characters</msg>
<status status="PASS" starttime="20230923 10:25:12.882" endtime="20230923 10:25:17.774"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Secret key length should be at least 8 characters</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:25:17.775" endtime="20230923 10:25:17.776"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230923 10:25:12.881" endtime="20230923 10:25:17.776"/>
</test>
<test id="s1-s5-s5-t12" name="GetSecret Success" line="88">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone tenant user getsecret 'tenantone$testuser'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:25:17.783" level="INFO">Running command 'ozone tenant user getsecret 'tenantone$testuser' 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:25:22.888" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:25:22.888" level="INFO">${output} = export AWS_ACCESS_KEY_ID='tenantone$testuser'
export AWS_SECRET_ACCESS_KEY='somesecret1'</msg>
<status status="PASS" starttime="20230923 10:25:17.780" endtime="20230923 10:25:22.888"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:25:22.890" level="INFO">export AWS_ACCESS_KEY_ID='tenantone$testuser'
export AWS_SECRET_ACCESS_KEY='somesecret1'</msg>
<status status="PASS" starttime="20230923 10:25:22.889" endtime="20230923 10:25:22.890"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:25:22.890" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:25:22.890" endtime="20230923 10:25:22.891"/>
</kw>
<status status="PASS" starttime="20230923 10:25:17.779" endtime="20230923 10:25:22.891"/>
</kw>
<msg timestamp="20230923 10:25:22.891" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:25:17.779" endtime="20230923 10:25:22.891"/>
</kw>
<msg timestamp="20230923 10:25:22.891" level="INFO">${output} = export AWS_ACCESS_KEY_ID='tenantone$testuser'
export AWS_SECRET_ACCESS_KEY='somesecret1'</msg>
<status status="PASS" starttime="20230923 10:25:17.778" endtime="20230923 10:25:22.891"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>export AWS_SECRET_ACCESS_KEY='somesecret1'</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:25:22.891" endtime="20230923 10:25:22.892"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230923 10:25:17.777" endtime="20230923 10:25:22.892"/>
</test>
<test id="s1-s5-s5-t13" name="Delete Bucket 1 Failure With Old SecretKey via S3 API" line="92">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>aws s3api --endpoint-url ${S3G_ENDPOINT_URL} delete-bucket --bucket bucket-test1</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:25:22.898" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-bucket --bucket bucket-test1 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:25:23.576" level="INFO">${rc} = 255</msg>
<msg timestamp="20230923 10:25:23.576" level="INFO">${output} = 
An error occurred (AccessDenied) when calling the DeleteBucket operation: User doesn't have the right to access this resource.</msg>
<status status="PASS" starttime="20230923 10:25:22.894" endtime="20230923 10:25:23.577"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${rc} &gt; 0</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230923 10:25:23.577" endtime="20230923 10:25:23.578"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230923 10:25:22.893" endtime="20230923 10:25:23.578"/>
</test>
<test id="s1-s5-s5-t14" name="Delete Bucket 1 Success With Newly Set SecretKey via S3 API" line="96">
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key 'somesecret1'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:25:23.585" level="INFO">Running command 'aws configure set aws_secret_access_key 'somesecret1' 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:25:24.125" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:25:24.125" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:25:23.582" endtime="20230923 10:25:24.126"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:25:24.127" level="INFO"/>
<status status="PASS" starttime="20230923 10:25:24.126" endtime="20230923 10:25:24.127"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:25:24.128" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:25:24.127" endtime="20230923 10:25:24.128"/>
</kw>
<status status="PASS" starttime="20230923 10:25:23.581" endtime="20230923 10:25:24.128"/>
</kw>
<msg timestamp="20230923 10:25:24.128" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:25:23.581" endtime="20230923 10:25:24.128"/>
</kw>
<status status="PASS" starttime="20230923 10:25:23.580" endtime="20230923 10:25:24.128"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${S3G_ENDPOINT_URL} delete-bucket --bucket bucket-test1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:25:24.133" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-bucket --bucket bucket-test1 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:25:24.796" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:25:24.796" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:25:24.130" endtime="20230923 10:25:24.796"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:25:24.798" level="INFO"/>
<status status="PASS" starttime="20230923 10:25:24.797" endtime="20230923 10:25:24.798"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:25:24.799" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:25:24.798" endtime="20230923 10:25:24.799"/>
</kw>
<status status="PASS" starttime="20230923 10:25:24.130" endtime="20230923 10:25:24.799"/>
</kw>
<msg timestamp="20230923 10:25:24.799" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:25:24.129" endtime="20230923 10:25:24.799"/>
</kw>
<msg timestamp="20230923 10:25:24.800" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:25:24.129" endtime="20230923 10:25:24.800"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230923 10:25:23.579" endtime="20230923 10:25:24.800"/>
</test>
<test id="s1-s5-s5-t15" name="Delete Tenant Failure Tenant Not Empty" line="100">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>ozone tenant delete tenantone</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:25:24.806" level="INFO">Running command 'ozone tenant delete tenantone 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:25:29.308" level="INFO">${rc} = 255</msg>
<msg timestamp="20230923 10:25:29.308" level="INFO">${output} = TENANT_NOT_EMPTY Tenant 'tenantone' is not empty. All accessIds associated to this tenant must be revoked before the tenant can be deleted. See `ozone tenant user revoke`</msg>
<status status="PASS" starttime="20230923 10:25:24.803" endtime="20230923 10:25:29.308"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>TENANT_NOT_EMPTY Tenant 'tenantone' is not empty. All accessIds associated to this tenant must be revoked before the tenant can be deleted. See `ozone tenant user revoke`</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:25:29.309" endtime="20230923 10:25:29.310"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230923 10:25:24.801" endtime="20230923 10:25:29.310"/>
</test>
<test id="s1-s5-s5-t16" name="Trigger and wait for background Sync to recover Policies and Roles in Authorizer" line="104">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>ozone admin om updateranger -host=om</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:25:29.318" level="INFO">Running command 'ozone admin om updateranger -host=om 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:25:34.224" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:25:34.224" level="INFO">${output} = Operation completed successfully</msg>
<status status="PASS" starttime="20230923 10:25:29.314" endtime="20230923 10:25:34.224"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Operation completed successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:25:34.225" endtime="20230923 10:25:34.226"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230923 10:25:29.312" endtime="20230923 10:25:34.226"/>
</test>
<test id="s1-s5-s5-t17" name="Create Tenant Failure with Regular User" line="108">
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:25:34.234" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:25:34.238" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:25:34.238" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230923 10:25:34.231" endtime="20230923 10:25:34.238"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:25:34.240" level="INFO">scm</msg>
<status status="PASS" starttime="20230923 10:25:34.239" endtime="20230923 10:25:34.240"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:25:34.241" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:25:34.240" endtime="20230923 10:25:34.241"/>
</kw>
<status status="PASS" starttime="20230923 10:25:34.231" endtime="20230923 10:25:34.241"/>
</kw>
<msg timestamp="20230923 10:25:34.241" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:25:34.230" endtime="20230923 10:25:34.241"/>
</kw>
<msg timestamp="20230923 10:25:34.241" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230923 10:25:34.229" endtime="20230923 10:25:34.241"/>
</kw>
<msg timestamp="20230923 10:25:34.242" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230923 10:25:34.229" endtime="20230923 10:25:34.242"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230923 10:25:34.242" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230923 10:25:34.242" endtime="20230923 10:25:34.242"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:25:34.247" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser2.keytab testuser2/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:25:34.284" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:25:34.284" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:25:34.245" endtime="20230923 10:25:34.285"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:25:34.286" level="INFO"/>
<status status="PASS" starttime="20230923 10:25:34.285" endtime="20230923 10:25:34.286"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:25:34.287" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:25:34.286" endtime="20230923 10:25:34.287"/>
</kw>
<status status="PASS" starttime="20230923 10:25:34.244" endtime="20230923 10:25:34.287"/>
</kw>
<msg timestamp="20230923 10:25:34.287" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:25:34.244" endtime="20230923 10:25:34.287"/>
</kw>
<status status="PASS" starttime="20230923 10:25:34.243" endtime="20230923 10:25:34.287"/>
</kw>
<status status="PASS" starttime="20230923 10:25:34.242" endtime="20230923 10:25:34.287"/>
</kw>
<status status="PASS" starttime="20230923 10:25:34.228" endtime="20230923 10:25:34.287"/>
</kw>
<status status="PASS" starttime="20230923 10:25:34.228" endtime="20230923 10:25:34.288"/>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>ozone tenant create tenanttwo</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:25:34.290" level="INFO">Running command 'ozone tenant create tenanttwo 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:25:39.116" level="INFO">${rc} = 255</msg>
<msg timestamp="20230923 10:25:39.116" level="INFO">${output} = PERMISSION_DENIED User 'testuser2' is not an Ozone admin</msg>
<status status="PASS" starttime="20230923 10:25:34.288" endtime="20230923 10:25:39.117"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>PERMISSION_DENIED User 'testuser2' is not an Ozone admin</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:25:39.117" endtime="20230923 10:25:39.118"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230923 10:25:34.227" endtime="20230923 10:25:39.118"/>
</test>
<test id="s1-s5-s5-t18" name="SetSecret Failure with Regular User" line="113">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>ozone tenant user set-secret 'tenantone$testuser' --secret=somesecret2</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:25:39.124" level="INFO">Running command 'ozone tenant user set-secret 'tenantone$testuser' --secret=somesecret2 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:25:43.675" level="INFO">${rc} = 255</msg>
<msg timestamp="20230923 10:25:43.675" level="INFO">${output} = USER_MISMATCH Requested accessId 'tenantone$testuser' doesn't belong to current user 'testuser2', nor does current user have Ozone or tenant administrator privilege</msg>
<status status="PASS" starttime="20230923 10:25:39.121" endtime="20230923 10:25:43.675"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>USER_MISMATCH Requested accessId 'tenantone$testuser' doesn't belong to current user 'testuser2', nor does current user have Ozone or tenant administrator privilege</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:25:43.676" endtime="20230923 10:25:43.676"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230923 10:25:39.120" endtime="20230923 10:25:43.677"/>
</test>
<test id="s1-s5-s5-t19" name="Create Bucket 2 Success with somesecret1 via S3 API" line="117">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${S3G_ENDPOINT_URL} create-bucket --bucket bucket-test2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:25:43.684" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket bucket-test2 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:25:44.407" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:25:44.408" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-test2"
}</msg>
<status status="PASS" starttime="20230923 10:25:43.681" endtime="20230923 10:25:44.408"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:25:44.409" level="INFO">{
    "Location": "http://s3g:9878/bucket-test2"
}</msg>
<status status="PASS" starttime="20230923 10:25:44.408" endtime="20230923 10:25:44.409"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:25:44.410" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:25:44.410" endtime="20230923 10:25:44.410"/>
</kw>
<status status="PASS" starttime="20230923 10:25:43.680" endtime="20230923 10:25:44.411"/>
</kw>
<msg timestamp="20230923 10:25:44.411" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:25:43.680" endtime="20230923 10:25:44.411"/>
</kw>
<msg timestamp="20230923 10:25:44.411" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-test2"
}</msg>
<status status="PASS" starttime="20230923 10:25:43.679" endtime="20230923 10:25:44.411"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>bucket-test2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:25:44.411" endtime="20230923 10:25:44.412"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230923 10:25:43.678" endtime="20230923 10:25:44.412"/>
</test>
<test id="s1-s5-s5-t20" name="Delete Bucket 2 Failure with somesecret2 via S3 API" line="121">
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key 'somesecret2'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:25:44.420" level="INFO">Running command 'aws configure set aws_secret_access_key 'somesecret2' 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:25:44.958" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:25:44.958" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:25:44.417" endtime="20230923 10:25:44.958"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:25:44.960" level="INFO"/>
<status status="PASS" starttime="20230923 10:25:44.959" endtime="20230923 10:25:44.960"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:25:44.960" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:25:44.960" endtime="20230923 10:25:44.961"/>
</kw>
<status status="PASS" starttime="20230923 10:25:44.416" endtime="20230923 10:25:44.961"/>
</kw>
<msg timestamp="20230923 10:25:44.961" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:25:44.415" endtime="20230923 10:25:44.961"/>
</kw>
<status status="PASS" starttime="20230923 10:25:44.415" endtime="20230923 10:25:44.961"/>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>aws s3api --endpoint-url ${S3G_ENDPOINT_URL} delete-bucket --bucket bucket-test2</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:25:44.964" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-bucket --bucket bucket-test2 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:25:45.596" level="INFO">${rc} = 255</msg>
<msg timestamp="20230923 10:25:45.596" level="INFO">${output} = 
An error occurred (AccessDenied) when calling the DeleteBucket operation: User doesn't have the right to access this resource.</msg>
<status status="PASS" starttime="20230923 10:25:44.961" endtime="20230923 10:25:45.596"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${rc} &gt; 0</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230923 10:25:45.597" endtime="20230923 10:25:45.598"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230923 10:25:44.413" endtime="20230923 10:25:45.598"/>
</test>
<test id="s1-s5-s5-t21" name="Delete Bucket 2 Success with somesecret1 via S3 API" line="126">
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key 'somesecret1'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:25:45.604" level="INFO">Running command 'aws configure set aws_secret_access_key 'somesecret1' 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:25:46.123" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:25:46.123" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:25:45.601" endtime="20230923 10:25:46.123"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:25:46.125" level="INFO"/>
<status status="PASS" starttime="20230923 10:25:46.124" endtime="20230923 10:25:46.125"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:25:46.125" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:25:46.125" endtime="20230923 10:25:46.125"/>
</kw>
<status status="PASS" starttime="20230923 10:25:45.601" endtime="20230923 10:25:46.126"/>
</kw>
<msg timestamp="20230923 10:25:46.126" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:25:45.600" endtime="20230923 10:25:46.126"/>
</kw>
<status status="PASS" starttime="20230923 10:25:45.600" endtime="20230923 10:25:46.126"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${S3G_ENDPOINT_URL} delete-bucket --bucket bucket-test2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:25:46.130" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-bucket --bucket bucket-test2 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:25:46.778" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:25:46.778" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:25:46.128" endtime="20230923 10:25:46.778"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:25:46.779" level="INFO"/>
<status status="PASS" starttime="20230923 10:25:46.779" endtime="20230923 10:25:46.779"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:25:46.780" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:25:46.780" endtime="20230923 10:25:46.780"/>
</kw>
<status status="PASS" starttime="20230923 10:25:46.127" endtime="20230923 10:25:46.780"/>
</kw>
<msg timestamp="20230923 10:25:46.781" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:25:46.127" endtime="20230923 10:25:46.781"/>
</kw>
<msg timestamp="20230923 10:25:46.781" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:25:46.126" endtime="20230923 10:25:46.781"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230923 10:25:45.599" endtime="20230923 10:25:46.781"/>
</test>
<test id="s1-s5-s5-t22" name="Revoke User AccessId Success with Cluster Admin" line="130">
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:25:46.789" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:25:46.793" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:25:46.793" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230923 10:25:46.786" endtime="20230923 10:25:46.793"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:25:46.794" level="INFO">scm</msg>
<status status="PASS" starttime="20230923 10:25:46.794" endtime="20230923 10:25:46.795"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:25:46.795" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:25:46.795" endtime="20230923 10:25:46.795"/>
</kw>
<status status="PASS" starttime="20230923 10:25:46.785" endtime="20230923 10:25:46.796"/>
</kw>
<msg timestamp="20230923 10:25:46.796" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:25:46.785" endtime="20230923 10:25:46.796"/>
</kw>
<msg timestamp="20230923 10:25:46.796" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230923 10:25:46.784" endtime="20230923 10:25:46.796"/>
</kw>
<msg timestamp="20230923 10:25:46.797" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230923 10:25:46.784" endtime="20230923 10:25:46.797"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230923 10:25:46.797" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230923 10:25:46.797" endtime="20230923 10:25:46.797"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:25:46.802" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:25:46.830" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:25:46.830" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:25:46.799" endtime="20230923 10:25:46.830"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:25:46.831" level="INFO"/>
<status status="PASS" starttime="20230923 10:25:46.831" endtime="20230923 10:25:46.832"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:25:46.832" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:25:46.832" endtime="20230923 10:25:46.832"/>
</kw>
<status status="PASS" starttime="20230923 10:25:46.799" endtime="20230923 10:25:46.833"/>
</kw>
<msg timestamp="20230923 10:25:46.833" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:25:46.799" endtime="20230923 10:25:46.833"/>
</kw>
<status status="PASS" starttime="20230923 10:25:46.798" endtime="20230923 10:25:46.833"/>
</kw>
<status status="PASS" starttime="20230923 10:25:46.797" endtime="20230923 10:25:46.833"/>
</kw>
<status status="PASS" starttime="20230923 10:25:46.783" endtime="20230923 10:25:46.833"/>
</kw>
<status status="PASS" starttime="20230923 10:25:46.783" endtime="20230923 10:25:46.833"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone tenant --verbose user revoke 'tenantone$testuser'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:25:46.838" level="INFO">Running command 'ozone tenant --verbose user revoke 'tenantone$testuser' 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:25:51.062" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:25:51.062" level="INFO">${output} = Revoked accessId 'tenantone$testuser'.</msg>
<status status="PASS" starttime="20230923 10:25:46.835" endtime="20230923 10:25:51.062"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:25:51.064" level="INFO">Revoked accessId 'tenantone$testuser'.</msg>
<status status="PASS" starttime="20230923 10:25:51.063" endtime="20230923 10:25:51.064"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:25:51.065" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:25:51.064" endtime="20230923 10:25:51.065"/>
</kw>
<status status="PASS" starttime="20230923 10:25:46.834" endtime="20230923 10:25:51.065"/>
</kw>
<msg timestamp="20230923 10:25:51.065" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:25:46.834" endtime="20230923 10:25:51.066"/>
</kw>
<msg timestamp="20230923 10:25:51.066" level="INFO">${output} = Revoked accessId 'tenantone$testuser'.</msg>
<status status="PASS" starttime="20230923 10:25:46.833" endtime="20230923 10:25:51.066"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Revoked accessId 'tenantone$testuser'.</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:25:51.066" endtime="20230923 10:25:51.067"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230923 10:25:46.782" endtime="20230923 10:25:51.067"/>
</test>
<test id="s1-s5-s5-t23" name="Create Bucket 3 Failure with Revoked AccessId via S3 API" line="135">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>aws s3api --endpoint-url ${S3G_ENDPOINT_URL} create-bucket --bucket bucket-test3</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:25:51.090" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket bucket-test3 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:25:51.798" level="INFO">${rc} = 255</msg>
<msg timestamp="20230923 10:25:51.798" level="INFO">${output} = 
An error occurred (AccessDenied) when calling the CreateBucket operation: User doesn't have the right to access this resource.</msg>
<status status="PASS" starttime="20230923 10:25:51.073" endtime="20230923 10:25:51.798"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${rc} &gt; 0</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230923 10:25:51.798" endtime="20230923 10:25:51.799"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230923 10:25:51.069" endtime="20230923 10:25:51.800"/>
</test>
<test id="s1-s5-s5-t24" name="Delete Tenant Success with Cluster Admin" line="139">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone tenant delete tenantone</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:25:51.811" level="INFO">Running command 'ozone tenant delete tenantone 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:25:56.359" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:25:56.359" level="INFO">${output} = Deleted tenant 'tenantone'.
But the associated volume 'tenantone' is not removed. To delete it, run
    ozone sh volume delete tenantone
</msg>
<status status="PASS" starttime="20230923 10:25:51.808" endtime="20230923 10:25:56.359"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:25:56.361" level="INFO">Deleted tenant 'tenantone'.
But the associated volume 'tenantone' is not removed. To delete it, run
    ozone sh volume delete tenantone
</msg>
<status status="PASS" starttime="20230923 10:25:56.360" endtime="20230923 10:25:56.361"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:25:56.362" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:25:56.361" endtime="20230923 10:25:56.362"/>
</kw>
<status status="PASS" starttime="20230923 10:25:51.807" endtime="20230923 10:25:56.362"/>
</kw>
<msg timestamp="20230923 10:25:56.362" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:25:51.807" endtime="20230923 10:25:56.362"/>
</kw>
<msg timestamp="20230923 10:25:56.363" level="INFO">${output} = Deleted tenant 'tenantone'.
But the associated volume 'tenantone' is not removed. To delete it, run
    ozone sh volume delete tenantone
</msg>
<status status="PASS" starttime="20230923 10:25:51.806" endtime="20230923 10:25:56.363"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Deleted tenant 'tenantone'.</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:25:56.363" endtime="20230923 10:25:56.363"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230923 10:25:51.805" endtime="20230923 10:25:56.363"/>
</test>
<test id="s1-s5-s5-t25" name="Delete Volume Success with Cluster Admin" line="143">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume delete tenantone</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:25:56.371" level="INFO">Running command 'ozone sh volume delete tenantone 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:26:01.552" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:26:01.552" level="INFO">${output} = Volume tenantone is deleted</msg>
<status status="PASS" starttime="20230923 10:25:56.368" endtime="20230923 10:26:01.552"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:26:01.554" level="INFO">Volume tenantone is deleted</msg>
<status status="PASS" starttime="20230923 10:26:01.553" endtime="20230923 10:26:01.554"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:26:01.555" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:26:01.554" endtime="20230923 10:26:01.555"/>
</kw>
<status status="PASS" starttime="20230923 10:25:56.367" endtime="20230923 10:26:01.555"/>
</kw>
<msg timestamp="20230923 10:26:01.555" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:25:56.366" endtime="20230923 10:26:01.556"/>
</kw>
<msg timestamp="20230923 10:26:01.556" level="INFO">${output} = Volume tenantone is deleted</msg>
<status status="PASS" starttime="20230923 10:25:56.366" endtime="20230923 10:26:01.556"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Volume tenantone is deleted</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:26:01.556" endtime="20230923 10:26:01.557"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230923 10:25:56.365" endtime="20230923 10:26:01.557"/>
</test>
<test id="s1-s5-s5-t26" name="List Tenant Expect Empty Result" line="147">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone tenant list</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:26:01.564" level="INFO">Running command 'ozone tenant list 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:26:06.139" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:26:06.139" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:26:01.561" endtime="20230923 10:26:06.139"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:26:06.141" level="INFO"/>
<status status="PASS" starttime="20230923 10:26:06.140" endtime="20230923 10:26:06.141"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:26:06.142" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:26:06.141" endtime="20230923 10:26:06.142"/>
</kw>
<status status="PASS" starttime="20230923 10:26:01.561" endtime="20230923 10:26:06.142"/>
</kw>
<msg timestamp="20230923 10:26:06.143" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:26:01.560" endtime="20230923 10:26:06.143"/>
</kw>
<msg timestamp="20230923 10:26:06.143" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:26:01.558" endtime="20230923 10:26:06.143"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>tenantone</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:26:06.143" endtime="20230923 10:26:06.144"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230923 10:26:01.558" endtime="20230923 10:26:06.144"/>
</test>
<doc>Smoke test for ozone secure tenant commands</doc>
<status status="PASS" starttime="20230923 10:24:29.790" endtime="20230923 10:26:06.147"/>
</suite>
<suite id="s1-s5-s6" name="Ozone-Secure-Token" source="/opt/hadoop/smoketest/security/ozone-secure-token.robot">
<test id="s1-s5-s6-t1" name="Token Test" line="82">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Token Test in Unsecure Cluster</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230923 10:26:06.161" endtime="20230923 10:26:06.162"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Token Test in Secure Cluster</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Token Test in Secure Cluster">
<kw name="Get and use Token in Secure Cluster">
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:26:06.168" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:26:06.172" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:26:06.172" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230923 10:26:06.165" endtime="20230923 10:26:06.172"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:26:06.173" level="INFO">scm</msg>
<status status="PASS" starttime="20230923 10:26:06.172" endtime="20230923 10:26:06.173"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:26:06.173" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:26:06.173" endtime="20230923 10:26:06.174"/>
</kw>
<status status="PASS" starttime="20230923 10:26:06.165" endtime="20230923 10:26:06.174"/>
</kw>
<msg timestamp="20230923 10:26:06.174" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:26:06.165" endtime="20230923 10:26:06.174"/>
</kw>
<msg timestamp="20230923 10:26:06.174" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230923 10:26:06.164" endtime="20230923 10:26:06.174"/>
</kw>
<msg timestamp="20230923 10:26:06.174" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230923 10:26:06.164" endtime="20230923 10:26:06.174"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230923 10:26:06.175" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230923 10:26:06.175" endtime="20230923 10:26:06.175"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:26:06.180" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:26:06.209" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:26:06.209" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:26:06.177" endtime="20230923 10:26:06.209"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:26:06.211" level="INFO"/>
<status status="PASS" starttime="20230923 10:26:06.210" endtime="20230923 10:26:06.211"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:26:06.211" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:26:06.211" endtime="20230923 10:26:06.211"/>
</kw>
<status status="PASS" starttime="20230923 10:26:06.177" endtime="20230923 10:26:06.212"/>
</kw>
<msg timestamp="20230923 10:26:06.212" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:26:06.176" endtime="20230923 10:26:06.212"/>
</kw>
<status status="PASS" starttime="20230923 10:26:06.176" endtime="20230923 10:26:06.212"/>
</kw>
<status status="PASS" starttime="20230923 10:26:06.175" endtime="20230923 10:26:06.212"/>
</kw>
<status status="PASS" starttime="20230923 10:26:06.163" endtime="20230923 10:26:06.212"/>
</kw>
<status status="PASS" starttime="20230923 10:26:06.163" endtime="20230923 10:26:06.212"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh token get -t ./ozone.token</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:26:06.217" level="INFO">Running command 'ozone sh token get -t ./ozone.token 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:26:11.902" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:26:11.902" level="INFO">${output} = Successfully get token for service 172.20.0.2:9862
Kind: OzoneToken, Service: 172.20.0.2:9862, Ident: (OzoneToken owner=testuser/scm@EXAMPLE.COM, renewer=testuser, realUser=, issueDate=2023-09-23T10:2...</msg>
<status status="PASS" starttime="20230923 10:26:06.214" endtime="20230923 10:26:11.902"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:26:11.904" level="INFO">Successfully get token for service 172.20.0.2:9862
Kind: OzoneToken, Service: 172.20.0.2:9862, Ident: (OzoneToken owner=testuser/scm@EXAMPLE.COM, renewer=testuser, realUser=, issueDate=2023-09-23T10:26:11.544Z, maxDate=2023-09-30T10:26:11.544Z, sequenceNumber=1, masterKeyId=1, strToSign=null, signature=null, awsAccessKeyId=null, omServiceId=omServiceIdDefault, omCertSerialId=518785912048)
Token persisted to ./ozone.token successfully!</msg>
<status status="PASS" starttime="20230923 10:26:11.903" endtime="20230923 10:26:11.904"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:26:11.905" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:26:11.904" endtime="20230923 10:26:11.905"/>
</kw>
<status status="PASS" starttime="20230923 10:26:06.213" endtime="20230923 10:26:11.905"/>
</kw>
<msg timestamp="20230923 10:26:11.905" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:26:06.213" endtime="20230923 10:26:11.905"/>
</kw>
<status status="PASS" starttime="20230923 10:26:06.213" endtime="20230923 10:26:11.905"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>./ozone.token</arg>
<doc>Fails if the specified file is empty.</doc>
<msg timestamp="20230923 10:26:11.906" level="INFO" html="true">File '&lt;a href="file:///opt/hadoop/ozone.token"&gt;/opt/hadoop/ozone.token&lt;/a&gt;' contains 402 bytes.</msg>
<status status="PASS" starttime="20230923 10:26:11.906" endtime="20230923 10:26:11.906"/>
</kw>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:26:11.911" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:26:11.915" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:26:11.916" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:26:11.908" endtime="20230923 10:26:11.916"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:26:11.917" level="INFO"/>
<status status="PASS" starttime="20230923 10:26:11.916" endtime="20230923 10:26:11.917"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:26:11.918" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:26:11.917" endtime="20230923 10:26:11.918"/>
</kw>
<status status="PASS" starttime="20230923 10:26:11.907" endtime="20230923 10:26:11.918"/>
</kw>
<msg timestamp="20230923 10:26:11.918" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:26:11.907" endtime="20230923 10:26:11.918"/>
</kw>
<status status="PASS" starttime="20230923 10:26:11.906" endtime="20230923 10:26:11.918"/>
</kw>
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>HADOOP_TOKEN_FILE_LOCATION</arg>
<arg>./ozone.token</arg>
<doc>Sets an environment variable to a specified value.</doc>
<msg timestamp="20230923 10:26:11.919" level="INFO">Environment variable 'HADOOP_TOKEN_FILE_LOCATION' set to value './ozone.token'.</msg>
<status status="PASS" starttime="20230923 10:26:11.918" endtime="20230923 10:26:11.919"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume list /</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:26:11.923" level="INFO">Running command 'ozone sh volume list / 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:26:17.250" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:26:17.250" level="INFO">${output} = [ ]</msg>
<status status="PASS" starttime="20230923 10:26:11.921" endtime="20230923 10:26:17.250"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:26:17.251" level="INFO">[ ]</msg>
<status status="PASS" starttime="20230923 10:26:17.250" endtime="20230923 10:26:17.251"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:26:17.252" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:26:17.252" endtime="20230923 10:26:17.252"/>
</kw>
<status status="PASS" starttime="20230923 10:26:11.920" endtime="20230923 10:26:17.252"/>
</kw>
<msg timestamp="20230923 10:26:17.252" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:26:11.920" endtime="20230923 10:26:17.253"/>
</kw>
<msg timestamp="20230923 10:26:17.253" level="INFO">${output} = [ ]</msg>
<status status="PASS" starttime="20230923 10:26:11.919" endtime="20230923 10:26:17.253"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Client cannot authenticate</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:26:17.253" endtime="20230923 10:26:17.253"/>
</kw>
<kw name="Remove Environment Variable" library="OperatingSystem">
<arg>HADOOP_TOKEN_FILE_LOCATION</arg>
<doc>Deletes the specified environment variable.</doc>
<msg timestamp="20230923 10:26:17.254" level="INFO">Environment variable 'HADOOP_TOKEN_FILE_LOCATION' deleted.</msg>
<status status="PASS" starttime="20230923 10:26:17.254" endtime="20230923 10:26:17.254"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${output}</var>
<arg>ozone sh volume list /</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:26:17.258" level="INFO">Running command 'ozone sh volume list / 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:26:21.771" level="INFO">${rc} = 255</msg>
<msg timestamp="20230923 10:26:21.771" level="INFO">${output} = org.apache.hadoop.security.AccessControlException: Client cannot authenticate via:[TOKEN, KERBEROS]</msg>
<status status="PASS" starttime="20230923 10:26:17.255" endtime="20230923 10:26:21.771"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:26:21.773" level="INFO">org.apache.hadoop.security.AccessControlException: Client cannot authenticate via:[TOKEN, KERBEROS]</msg>
<status status="PASS" starttime="20230923 10:26:21.772" endtime="20230923 10:26:21.773"/>
</kw>
<msg timestamp="20230923 10:26:21.773" level="INFO">${output} = org.apache.hadoop.security.AccessControlException: Client cannot authenticate via:[TOKEN, KERBEROS]</msg>
<status status="PASS" starttime="20230923 10:26:17.254" endtime="20230923 10:26:21.773"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Client cannot authenticate</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:26:21.774" endtime="20230923 10:26:21.774"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:26:21.781" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:26:21.785" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:26:21.785" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230923 10:26:21.778" endtime="20230923 10:26:21.785"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:26:21.787" level="INFO">scm</msg>
<status status="PASS" starttime="20230923 10:26:21.786" endtime="20230923 10:26:21.787"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:26:21.788" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:26:21.787" endtime="20230923 10:26:21.788"/>
</kw>
<status status="PASS" starttime="20230923 10:26:21.777" endtime="20230923 10:26:21.788"/>
</kw>
<msg timestamp="20230923 10:26:21.789" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:26:21.777" endtime="20230923 10:26:21.789"/>
</kw>
<msg timestamp="20230923 10:26:21.789" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230923 10:26:21.776" endtime="20230923 10:26:21.789"/>
</kw>
<msg timestamp="20230923 10:26:21.789" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230923 10:26:21.775" endtime="20230923 10:26:21.789"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230923 10:26:21.790" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230923 10:26:21.790" endtime="20230923 10:26:21.790"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:26:21.795" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:26:21.814" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:26:21.814" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:26:21.793" endtime="20230923 10:26:21.814"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:26:21.815" level="INFO"/>
<status status="PASS" starttime="20230923 10:26:21.814" endtime="20230923 10:26:21.815"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:26:21.816" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:26:21.816" endtime="20230923 10:26:21.817"/>
</kw>
<status status="PASS" starttime="20230923 10:26:21.792" endtime="20230923 10:26:21.817"/>
</kw>
<msg timestamp="20230923 10:26:21.817" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:26:21.792" endtime="20230923 10:26:21.817"/>
</kw>
<status status="PASS" starttime="20230923 10:26:21.791" endtime="20230923 10:26:21.817"/>
</kw>
<status status="PASS" starttime="20230923 10:26:21.790" endtime="20230923 10:26:21.817"/>
</kw>
<status status="PASS" starttime="20230923 10:26:21.775" endtime="20230923 10:26:21.817"/>
</kw>
<status status="PASS" starttime="20230923 10:26:21.774" endtime="20230923 10:26:21.817"/>
</kw>
<status status="PASS" starttime="20230923 10:26:06.163" endtime="20230923 10:26:21.817"/>
</kw>
<kw name="Print Valid Token File">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh token print -t ./ozone.token</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:26:21.822" level="INFO">Running command 'ozone sh token print -t ./ozone.token 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:26:24.629" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:26:24.629" level="INFO">${output} = Kind: OzoneToken, Service: 172.20.0.2:9862, Ident: (OzoneToken owner=testuser/scm@EXAMPLE.COM, renewer=testuser, realUser=, issueDate=2023-09-23T10:26:11.544Z, maxDate=2023-09-30T10:26:11.544Z, sequen...</msg>
<status status="PASS" starttime="20230923 10:26:21.820" endtime="20230923 10:26:24.629"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:26:24.630" level="INFO">Kind: OzoneToken, Service: 172.20.0.2:9862, Ident: (OzoneToken owner=testuser/scm@EXAMPLE.COM, renewer=testuser, realUser=, issueDate=2023-09-23T10:26:11.544Z, maxDate=2023-09-30T10:26:11.544Z, sequenceNumber=1, masterKeyId=1, strToSign=null, signature=null, awsAccessKeyId=null, omServiceId=omServiceIdDefault, omCertSerialId=518785912048)</msg>
<status status="PASS" starttime="20230923 10:26:24.630" endtime="20230923 10:26:24.631"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:26:24.631" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:26:24.631" endtime="20230923 10:26:24.631"/>
</kw>
<status status="PASS" starttime="20230923 10:26:21.819" endtime="20230923 10:26:24.632"/>
</kw>
<msg timestamp="20230923 10:26:24.632" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:26:21.819" endtime="20230923 10:26:24.632"/>
</kw>
<msg timestamp="20230923 10:26:24.632" level="INFO">${output} = Kind: OzoneToken, Service: 172.20.0.2:9862, Ident: (OzoneToken owner=testuser/scm@EXAMPLE.COM, renewer=testuser, realUser=, issueDate=2023-09-23T10:26:11.544Z, maxDate=2023-09-30T10:26:11.544Z, sequen...</msg>
<status status="PASS" starttime="20230923 10:26:21.818" endtime="20230923 10:26:24.632"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${output}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230923 10:26:24.633" level="INFO">Length is 340</msg>
<status status="PASS" starttime="20230923 10:26:24.632" endtime="20230923 10:26:24.633"/>
</kw>
<status status="PASS" starttime="20230923 10:26:21.818" endtime="20230923 10:26:24.633"/>
</kw>
<kw name="Renew Token in Secure Cluster">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh token renew -t ./ozone.token</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:26:24.639" level="INFO">Running command 'ozone sh token renew -t ./ozone.token 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:26:30.486" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:26:30.486" level="INFO">${output} = Token renewed successfully, expiry time: 2023-09-24T10:26:30.311Z.</msg>
<status status="PASS" starttime="20230923 10:26:24.635" endtime="20230923 10:26:30.486"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:26:30.488" level="INFO">Token renewed successfully, expiry time: 2023-09-24T10:26:30.311Z.</msg>
<status status="PASS" starttime="20230923 10:26:30.487" endtime="20230923 10:26:30.488"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:26:30.489" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:26:30.488" endtime="20230923 10:26:30.489"/>
</kw>
<status status="PASS" starttime="20230923 10:26:24.634" endtime="20230923 10:26:30.489"/>
</kw>
<msg timestamp="20230923 10:26:30.489" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:26:24.634" endtime="20230923 10:26:30.490"/>
</kw>
<msg timestamp="20230923 10:26:30.490" level="INFO">${output} = Token renewed successfully, expiry time: 2023-09-24T10:26:30.311Z.</msg>
<status status="PASS" starttime="20230923 10:26:24.634" endtime="20230923 10:26:30.490"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Token renewed successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:26:30.490" endtime="20230923 10:26:30.490"/>
</kw>
<status status="PASS" starttime="20230923 10:26:24.633" endtime="20230923 10:26:30.491"/>
</kw>
<kw name="Cancel Token in Secure Cluster">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh token cancel -t ./ozone.token</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:26:30.496" level="INFO">Running command 'ozone sh token cancel -t ./ozone.token 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:26:35.867" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:26:35.867" level="INFO">${output} = Token canceled successfully.</msg>
<status status="PASS" starttime="20230923 10:26:30.493" endtime="20230923 10:26:35.867"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:26:35.869" level="INFO">Token canceled successfully.</msg>
<status status="PASS" starttime="20230923 10:26:35.868" endtime="20230923 10:26:35.869"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:26:35.869" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:26:35.869" endtime="20230923 10:26:35.870"/>
</kw>
<status status="PASS" starttime="20230923 10:26:30.493" endtime="20230923 10:26:35.870"/>
</kw>
<msg timestamp="20230923 10:26:35.870" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:26:30.492" endtime="20230923 10:26:35.870"/>
</kw>
<msg timestamp="20230923 10:26:35.870" level="INFO">${output} = Token canceled successfully.</msg>
<status status="PASS" starttime="20230923 10:26:30.491" endtime="20230923 10:26:35.870"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Token canceled successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:26:35.870" endtime="20230923 10:26:35.872"/>
</kw>
<status status="PASS" starttime="20230923 10:26:30.491" endtime="20230923 10:26:35.872"/>
</kw>
<status status="PASS" starttime="20230923 10:26:06.162" endtime="20230923 10:26:35.872"/>
</kw>
<status status="PASS" starttime="20230923 10:26:06.162" endtime="20230923 10:26:35.872"/>
</kw>
<kw name="Print Nonexistent Token File">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh token print -t /asdf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:26:35.877" level="INFO">Running command 'ozone sh token print -t /asdf 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:26:38.665" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:26:38.665" level="INFO">${output} = Error: token operation failed as token file: /asdf containing encoded token doesn't exist.</msg>
<status status="PASS" starttime="20230923 10:26:35.874" endtime="20230923 10:26:38.665"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:26:38.667" level="INFO">Error: token operation failed as token file: /asdf containing encoded token doesn't exist.</msg>
<status status="PASS" starttime="20230923 10:26:38.666" endtime="20230923 10:26:38.667"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:26:38.668" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:26:38.667" endtime="20230923 10:26:38.668"/>
</kw>
<status status="PASS" starttime="20230923 10:26:35.873" endtime="20230923 10:26:38.668"/>
</kw>
<msg timestamp="20230923 10:26:38.668" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:26:35.873" endtime="20230923 10:26:38.668"/>
</kw>
<msg timestamp="20230923 10:26:38.668" level="INFO">${output} = Error: token operation failed as token file: /asdf containing encoded token doesn't exist.</msg>
<status status="PASS" starttime="20230923 10:26:35.873" endtime="20230923 10:26:38.668"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>operation failed as token file: /asdf</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:26:38.669" endtime="20230923 10:26:38.669"/>
</kw>
<status status="PASS" starttime="20230923 10:26:35.872" endtime="20230923 10:26:38.669"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230923 10:26:06.161" endtime="20230923 10:26:38.669"/>
</test>
<doc>Test token operations</doc>
<status status="PASS" starttime="20230923 10:26:06.152" endtime="20230923 10:26:38.671"/>
</suite>
<suite id="s1-s5-s7" name="S3-secret" source="/opt/hadoop/smoketest/security/S3-secret.robot">
<test id="s1-s5-s7-t1" name="Get S3 secret twice" line="40">
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:26:38.689" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:26:38.693" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:26:38.693" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230923 10:26:38.686" endtime="20230923 10:26:38.693"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:26:38.694" level="INFO">scm</msg>
<status status="PASS" starttime="20230923 10:26:38.693" endtime="20230923 10:26:38.694"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:26:38.695" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:26:38.695" endtime="20230923 10:26:38.695"/>
</kw>
<status status="PASS" starttime="20230923 10:26:38.686" endtime="20230923 10:26:38.695"/>
</kw>
<msg timestamp="20230923 10:26:38.695" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:26:38.685" endtime="20230923 10:26:38.696"/>
</kw>
<msg timestamp="20230923 10:26:38.696" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230923 10:26:38.685" endtime="20230923 10:26:38.696"/>
</kw>
<msg timestamp="20230923 10:26:38.696" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230923 10:26:38.685" endtime="20230923 10:26:38.696"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230923 10:26:38.697" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230923 10:26:38.697" endtime="20230923 10:26:38.697"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:26:38.703" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:26:38.742" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:26:38.742" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:26:38.700" endtime="20230923 10:26:38.742"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:26:38.744" level="INFO"/>
<status status="PASS" starttime="20230923 10:26:38.743" endtime="20230923 10:26:38.744"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:26:38.745" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:26:38.744" endtime="20230923 10:26:38.745"/>
</kw>
<status status="PASS" starttime="20230923 10:26:38.699" endtime="20230923 10:26:38.745"/>
</kw>
<msg timestamp="20230923 10:26:38.745" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:26:38.698" endtime="20230923 10:26:38.745"/>
</kw>
<status status="PASS" starttime="20230923 10:26:38.698" endtime="20230923 10:26:38.745"/>
</kw>
<status status="PASS" starttime="20230923 10:26:38.697" endtime="20230923 10:26:38.746"/>
</kw>
<status status="PASS" starttime="20230923 10:26:38.684" endtime="20230923 10:26:38.746"/>
</kw>
<status status="PASS" starttime="20230923 10:26:38.684" endtime="20230923 10:26:38.746"/>
</kw>
<kw name="Revoke Secrets">
<kw name="Execute And Ignore Error" library="os">
<var>${output}</var>
<arg>ozone s3 revokesecret -y -u testuser2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:26:38.750" level="INFO">Running command 'ozone s3 revokesecret -y -u testuser2 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:26:43.316" level="INFO">${rc} = 255</msg>
<msg timestamp="20230923 10:26:43.316" level="INFO">${output} = S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20230923 10:26:38.747" endtime="20230923 10:26:43.316"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:26:43.318" level="INFO">S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20230923 10:26:43.317" endtime="20230923 10:26:43.318"/>
</kw>
<msg timestamp="20230923 10:26:43.318" level="INFO">${output} = S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20230923 10:26:38.747" endtime="20230923 10:26:43.318"/>
</kw>
<status status="PASS" starttime="20230923 10:26:38.746" endtime="20230923 10:26:43.319"/>
</kw>
<kw name="GetSecret success">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone s3 getsecret -u testuser2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:26:43.324" level="INFO">Running command 'ozone s3 getsecret -u testuser2 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:26:47.787" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:26:47.787" level="INFO">${output} = awsAccessKey=testuser2
awsSecret=662626f844c05d4cc237ec8a138a7e0aad9150a2e091e28d3de0cb49ed514f2b</msg>
<status status="PASS" starttime="20230923 10:26:43.321" endtime="20230923 10:26:47.787"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:26:47.788" level="INFO">awsAccessKey=testuser2
awsSecret=662626f844c05d4cc237ec8a138a7e0aad9150a2e091e28d3de0cb49ed514f2b</msg>
<status status="PASS" starttime="20230923 10:26:47.788" endtime="20230923 10:26:47.789"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:26:47.789" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:26:47.789" endtime="20230923 10:26:47.789"/>
</kw>
<status status="PASS" starttime="20230923 10:26:43.320" endtime="20230923 10:26:47.789"/>
</kw>
<msg timestamp="20230923 10:26:47.790" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:26:43.320" endtime="20230923 10:26:47.790"/>
</kw>
<msg timestamp="20230923 10:26:47.790" level="INFO">${output} = awsAccessKey=testuser2
awsSecret=662626f844c05d4cc237ec8a138a7e0aad9150a2e091e28d3de0cb49ed514f2b</msg>
<status status="PASS" starttime="20230923 10:26:43.319" endtime="20230923 10:26:47.790"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>awsAccessKey</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:26:47.790" endtime="20230923 10:26:47.790"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>awsSecret</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:26:47.791" endtime="20230923 10:26:47.791"/>
</kw>
<status status="PASS" starttime="20230923 10:26:43.319" endtime="20230923 10:26:47.791"/>
</kw>
<kw name="GetSecret failure">
<kw name="Execute And Ignore Error" library="os">
<var>${output2}</var>
<arg>ozone s3 getsecret -u testuser2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:26:47.795" level="INFO">Running command 'ozone s3 getsecret -u testuser2 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:26:52.279" level="INFO">${rc} = 255</msg>
<msg timestamp="20230923 10:26:52.279" level="INFO">${output} = S3_SECRET_ALREADY_EXISTS Secret for 'testuser2' already exists</msg>
<status status="PASS" starttime="20230923 10:26:47.792" endtime="20230923 10:26:52.279"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:26:52.281" level="INFO">S3_SECRET_ALREADY_EXISTS Secret for 'testuser2' already exists</msg>
<status status="PASS" starttime="20230923 10:26:52.280" endtime="20230923 10:26:52.281"/>
</kw>
<msg timestamp="20230923 10:26:52.281" level="INFO">${output2} = S3_SECRET_ALREADY_EXISTS Secret for 'testuser2' already exists</msg>
<status status="PASS" starttime="20230923 10:26:47.792" endtime="20230923 10:26:52.281"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output2}</arg>
<arg>awsAccessKey</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:26:52.281" endtime="20230923 10:26:52.282"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output2}</arg>
<arg>awsSecret</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:26:52.282" endtime="20230923 10:26:52.282"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output2}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:26:52.282" endtime="20230923 10:26:52.283"/>
</kw>
<status status="PASS" starttime="20230923 10:26:47.791" endtime="20230923 10:26:52.283"/>
</kw>
<kw name="Revoke Secrets">
<kw name="Execute And Ignore Error" library="os">
<var>${output}</var>
<arg>ozone s3 revokesecret -y -u testuser2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:26:52.287" level="INFO">Running command 'ozone s3 revokesecret -y -u testuser2 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:26:56.378" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:26:56.378" level="INFO">${output} = S3 secret revoked.</msg>
<status status="PASS" starttime="20230923 10:26:52.284" endtime="20230923 10:26:56.378"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:26:56.380" level="INFO">S3 secret revoked.</msg>
<status status="PASS" starttime="20230923 10:26:56.379" endtime="20230923 10:26:56.380"/>
</kw>
<msg timestamp="20230923 10:26:56.380" level="INFO">${output} = S3 secret revoked.</msg>
<status status="PASS" starttime="20230923 10:26:52.283" endtime="20230923 10:26:56.380"/>
</kw>
<status status="PASS" starttime="20230923 10:26:52.283" endtime="20230923 10:26:56.380"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20230923 10:26:38.683" endtime="20230923 10:26:56.381"/>
</test>
<doc>Smoke test to start cluster with docker-compose environments.</doc>
<status status="PASS" starttime="20230923 10:26:38.674" endtime="20230923 10:26:56.382"/>
</suite>
<status status="PASS" starttime="20230923 10:21:48.927" endtime="20230923 10:26:56.386"/>
</suite>
<suite id="s1-s6" name="ozonefs-ofs-bucket" source="/opt/hadoop/smoketest/ozonefs/ozonefs.robot">
<kw name="Setup for FS test" library="setup" type="SETUP">
<kw name="Assign suite vars for FS test" library="setup">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230923 10:27:00.068" level="INFO">${random} = 34016</msg>
<status status="PASS" starttime="20230923 10:27:00.067" endtime="20230923 10:27:00.068"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${BUCKET}</arg>
<arg>${random}-${BUCKET_TYPE}1-${SCHEME}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230923 10:27:00.069" level="INFO">${BUCKET} = 34016-bucket1-ofs</msg>
<status status="PASS" starttime="20230923 10:27:00.069" endtime="20230923 10:27:00.069"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${BUCKET2}</arg>
<arg>${random}-${BUCKET_TYPE}2-${SCHEME}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230923 10:27:00.070" level="INFO">${BUCKET2} = 34016-bucket2-ofs</msg>
<status status="PASS" starttime="20230923 10:27:00.069" endtime="20230923 10:27:00.070"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${BUCKET_IN_VOL2}</arg>
<arg>${random}-${BUCKET_TYPE}3-${SCHEME}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230923 10:27:00.071" level="INFO">${BUCKET_IN_VOL2} = 34016-bucket3-ofs</msg>
<status status="PASS" starttime="20230923 10:27:00.070" endtime="20230923 10:27:00.071"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${BASE_URL}</var>
<arg>${SCHEME}</arg>
<arg>${VOLUME}</arg>
<arg>${BUCKET}</arg>
<arg>/</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20230923 10:27:00.075" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20230923 10:27:00.075" endtime="20230923 10:27:00.075"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230923 10:27:00.076" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20230923 10:27:00.075" endtime="20230923 10:27:00.076"/>
</kw>
<status status="PASS" starttime="20230923 10:27:00.074" endtime="20230923 10:27:00.076"/>
</kw>
<msg timestamp="20230923 10:27:00.076" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20230923 10:27:00.073" endtime="20230923 10:27:00.076"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>/</arg>
<arg>${path}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20230923 10:27:00.079" level="INFO">${first} = /</msg>
<status status="PASS" starttime="20230923 10:27:00.078" endtime="20230923 10:27:00.079"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230923 10:27:00.079" level="INFO">${result} = /</msg>
<status status="PASS" starttime="20230923 10:27:00.079" endtime="20230923 10:27:00.079"/>
</kw>
<status status="PASS" starttime="20230923 10:27:00.078" endtime="20230923 10:27:00.080"/>
</kw>
<msg timestamp="20230923 10:27:00.080" level="INFO">${path_with_leading} = /</msg>
<status status="PASS" starttime="20230923 10:27:00.076" endtime="20230923 10:27:00.080"/>
</kw>
<status status="PASS" starttime="20230923 10:27:00.072" endtime="20230923 10:27:00.080"/>
</kw>
<msg timestamp="20230923 10:27:00.080" level="INFO">${url} = ofs://om/fstest1/34016-bucket1-ofs/</msg>
<status status="PASS" starttime="20230923 10:27:00.072" endtime="20230923 10:27:00.080"/>
</kw>
<msg timestamp="20230923 10:27:00.080" level="INFO">${BASE_URL} = ofs://om/fstest1/34016-bucket1-ofs/</msg>
<status status="PASS" starttime="20230923 10:27:00.071" endtime="20230923 10:27:00.080"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${BASE_URL}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230923 10:27:00.081" level="INFO">${BASE_URL} = ofs://om/fstest1/34016-bucket1-ofs/</msg>
<status status="PASS" starttime="20230923 10:27:00.081" endtime="20230923 10:27:00.081"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${DEEP_URL}</arg>
<arg>${BASE_URL}${DEEP_DIR}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230923 10:27:00.083" level="INFO">${DEEP_URL} = ofs://om/fstest1/34016-bucket1-ofs/test/ofs/dir</msg>
<status status="PASS" starttime="20230923 10:27:00.081" endtime="20230923 10:27:00.083"/>
</kw>
<status status="PASS" starttime="20230923 10:27:00.067" endtime="20230923 10:27:00.083"/>
</kw>
<kw name="Create volumes for FS test" library="setup">
<kw name="Execute And Ignore Error" library="os">
<arg>ozone sh volume create ${VOLUME} --space-quota 100TB</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:27:00.087" level="INFO">Running command 'ozone sh volume create fstest1 --space-quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:27:05.586" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:27:05.586" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:27:00.084" endtime="20230923 10:27:05.586"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:27:05.587" level="INFO"/>
<status status="PASS" starttime="20230923 10:27:05.587" endtime="20230923 10:27:05.587"/>
</kw>
<status status="PASS" starttime="20230923 10:27:00.084" endtime="20230923 10:27:05.588"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arg>ozone sh volume create ${VOL2} --space-quota 100TB</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:27:05.591" level="INFO">Running command 'ozone sh volume create fstest2 --space-quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:27:11.231" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:27:11.231" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:27:05.588" endtime="20230923 10:27:11.231"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:27:11.232" level="INFO"/>
<status status="PASS" starttime="20230923 10:27:11.232" endtime="20230923 10:27:11.233"/>
</kw>
<status status="PASS" starttime="20230923 10:27:05.588" endtime="20230923 10:27:11.233"/>
</kw>
<status status="PASS" starttime="20230923 10:27:00.083" endtime="20230923 10:27:11.233"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Create ${BUCKET_TYPE}s for FS test</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Create buckets for FS test" library="setup">
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${VOLUME}/${BUCKET} --space-quota 1TB --layout FILE_SYSTEM_OPTIMIZED</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:27:11.242" level="INFO">Running command 'ozone sh bucket create fstest1/34016-bucket1-ofs --space-quota 1TB --layout FILE_SYSTEM_OPTIMIZED 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:27:17.365" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:27:17.365" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:27:11.239" endtime="20230923 10:27:17.365"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:27:17.366" level="INFO"/>
<status status="PASS" starttime="20230923 10:27:17.365" endtime="20230923 10:27:17.366"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:27:17.367" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:27:17.367" endtime="20230923 10:27:17.367"/>
</kw>
<status status="PASS" starttime="20230923 10:27:11.238" endtime="20230923 10:27:17.367"/>
</kw>
<msg timestamp="20230923 10:27:17.367" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:27:11.238" endtime="20230923 10:27:17.368"/>
</kw>
<status status="PASS" starttime="20230923 10:27:11.237" endtime="20230923 10:27:17.368"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${VOLUME}/${BUCKET2} --space-quota 1TB --layout FILE_SYSTEM_OPTIMIZED</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:27:17.372" level="INFO">Running command 'ozone sh bucket create fstest1/34016-bucket2-ofs --space-quota 1TB --layout FILE_SYSTEM_OPTIMIZED 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:27:22.968" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:27:22.968" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:27:17.369" endtime="20230923 10:27:22.968"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:27:22.970" level="INFO"/>
<status status="PASS" starttime="20230923 10:27:22.969" endtime="20230923 10:27:22.970"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:27:22.971" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:27:22.970" endtime="20230923 10:27:22.971"/>
</kw>
<status status="PASS" starttime="20230923 10:27:17.369" endtime="20230923 10:27:22.971"/>
</kw>
<msg timestamp="20230923 10:27:22.971" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:27:17.369" endtime="20230923 10:27:22.971"/>
</kw>
<status status="PASS" starttime="20230923 10:27:17.368" endtime="20230923 10:27:22.971"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${VOL2}/${BUCKET_IN_VOL2} --space-quota 1TB --layout FILE_SYSTEM_OPTIMIZED</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:27:22.977" level="INFO">Running command 'ozone sh bucket create fstest2/34016-bucket3-ofs --space-quota 1TB --layout FILE_SYSTEM_OPTIMIZED 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:27:28.956" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:27:28.956" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:27:22.974" endtime="20230923 10:27:28.956"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:27:28.958" level="INFO"/>
<status status="PASS" starttime="20230923 10:27:28.957" endtime="20230923 10:27:28.958"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:27:28.958" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:27:28.958" endtime="20230923 10:27:28.958"/>
</kw>
<status status="PASS" starttime="20230923 10:27:22.973" endtime="20230923 10:27:28.959"/>
</kw>
<msg timestamp="20230923 10:27:28.959" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:27:22.972" endtime="20230923 10:27:28.959"/>
</kw>
<status status="PASS" starttime="20230923 10:27:22.971" endtime="20230923 10:27:28.959"/>
</kw>
<status status="PASS" starttime="20230923 10:27:11.237" endtime="20230923 10:27:28.959"/>
</kw>
<status status="PASS" starttime="20230923 10:27:11.233" endtime="20230923 10:27:28.959"/>
</kw>
<kw name="Sanity check for FS test" library="setup">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:27:28.964" level="INFO">Running command 'ozone sh volume list 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:27:34.784" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:27:34.784" level="INFO">${output} = [ {
  "metadata" : { },
  "name" : "82376-source",
  "admin" : "testuser",
  "owner" : "testuser",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 3,
  "creationTime" : "2023-09-...</msg>
<status status="PASS" starttime="20230923 10:27:28.961" endtime="20230923 10:27:34.784"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:27:34.786" level="INFO">[ {
  "metadata" : { },
  "name" : "82376-source",
  "admin" : "testuser",
  "owner" : "testuser",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 3,
  "creationTime" : "2023-09-23T09:54:53.304Z",
  "modificationTime" : "2023-09-23T09:55:47.799Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "testuser",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "testuser",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "USER",
    "name" : "testuser2",
    "aclScope" : "ACCESS",
    "aclList" : [ "READ", "LIST" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "82376-target",
  "admin" : "testuser",
  "owner" : "testuser",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 8,
  "creationTime" : "2023-09-23T09:54:59.071Z",
  "modificationTime" : "2023-09-23T09:55:30.505Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "testuser",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "testuser",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "USER",
    "name" : "testuser2",
    "aclScope" : "DEFAULT",
    "aclList" : [ "READ" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "84532-acls",
  "admin" : "testuser",
  "owner" : "testuser",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2023-09-23T10:11:51.835Z",
  "modificationTime" : "2023-09-23T10:14:44.257Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "superuser1",
    "aclScope" : "DEFAULT",
    "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
  }, {
    "type" : "GROUP",
    "name" : "superuser1",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "USER",
    "name" : "testuser",
    "aclScope" : "ACCESS",
    "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
  }, {
    "type" : "GROUP",
    "name" : "superuser1",
    "aclScope" : "DEFAULT",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "USER",
    "name" : "testuser2",
    "aclScope" : "ACCESS",
    "aclList" : [ "READ", "WRITE", "LIST", "READ_ACL", "WRITE_ACL" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "84532-with-del",
  "admin" : "testuser",
  "owner" : "testuser",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 2,
  "creationTime" : "2023-09-23T10:20:36.831Z",
  "modificationTime" : "2023-09-23T10:20:36.831Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "testuser",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "testuser",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "fstest1",
  "admin" : "testuser",
  "owner" : "testuser",
  "quotaInBytes" : 109951162777600,
  "quotaInNamespace" : -1,
  "usedNamespace" : 2,
  "creationTime" : "2023-09-23T10:27:05.320Z",
  "modificationTime" : "2023-09-23T10:27:05.320Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "testuser",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "testuser",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "fstest2",
  "admin" : "testuser",
  "owner" : "testuser",
  "quotaInBytes" : 109951162777600,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2023-09-23T10:27:11.069Z",
  "modificationTime" : "2023-09-23T10:27:11.069Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "testuser",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "testuser",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "fstest296",
  "admin" : "testuser",
  "owner" : "testuser",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2023-09-23T10:23:42.735Z",
  "modificationTime" : "2023-09-23T10:23:42.735Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "testuser",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "testuser",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "fstest468",
  "admin" : "testuser",
  "owner" : "testuser2",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 0,
  "creationTime" : "2023-09-23T10:22:59.204Z",
  "modificationTime" : "2023-09-23T10:22:59.204Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "testuser2",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "testuser2",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "fstest96",
  "admin" : "testuser",
  "owner" : "testuser",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 2,
  "creationTime" : "2023-09-23T10:23:36.978Z",
  "modificationTime" : "2023-09-23T10:23:36.978Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "testuser",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "testuser",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "s3v",
  "admin" : "om",
  "owner" : "om",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 2,
  "creationTime" : "2023-09-23T09:53:47.864Z",
  "modificationTime" : "2023-09-23T09:53:47.864Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "om",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "om",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "vol-yrxia",
  "admin" : "testuser",
  "owner" : "testuser",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2023-09-23T10:22:13.343Z",
  "modificationTime" : "2023-09-23T10:22:13.343Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "testuser",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "testuser",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "vol1",
  "admin" : "testuser",
  "owner" : "testuser",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2023-09-23T09:54:16.889Z",
  "modificationTime" : "2023-09-23T09:54:16.889Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "testuser",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "testuser",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "refCount" : 0
} ]</msg>
<status status="PASS" starttime="20230923 10:27:34.785" endtime="20230923 10:27:34.786"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:27:34.787" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:27:34.787" endtime="20230923 10:27:34.787"/>
</kw>
<status status="PASS" starttime="20230923 10:27:28.961" endtime="20230923 10:27:34.787"/>
</kw>
<msg timestamp="20230923 10:27:34.787" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:27:28.960" endtime="20230923 10:27:34.788"/>
</kw>
<msg timestamp="20230923 10:27:34.788" level="INFO">${result} = [ {
  "metadata" : { },
  "name" : "82376-source",
  "admin" : "testuser",
  "owner" : "testuser",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 3,
  "creationTime" : "2023-09-...</msg>
<status status="PASS" starttime="20230923 10:27:28.960" endtime="20230923 10:27:34.788"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${VOLUME}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:27:34.788" endtime="20230923 10:27:34.789"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${VOL2}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:27:34.789" endtime="20230923 10:27:34.789"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>"admin" : "(hadoop|testuser)"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20230923 10:27:34.790" endtime="20230923 10:27:34.790"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${VOLUME}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:27:34.795" level="INFO">Running command 'ozone sh bucket list fstest1 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:27:40.590" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:27:40.590" level="INFO">${output} = [ {
  "metadata" : { },
  "volumeName" : "fstest1",
  "name" : "34016-bucket1-ofs",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2023...</msg>
<status status="PASS" starttime="20230923 10:27:34.792" endtime="20230923 10:27:40.590"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:27:40.592" level="INFO">[ {
  "metadata" : { },
  "volumeName" : "fstest1",
  "name" : "34016-bucket1-ofs",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2023-09-23T10:27:17.103Z",
  "modificationTime" : "2023-09-23T10:27:17.103Z",
  "sourcePathExist" : true,
  "quotaInBytes" : 1099511627776,
  "quotaInNamespace" : -1,
  "bucketLayout" : "FILE_SYSTEM_OPTIMIZED",
  "owner" : "testuser",
  "link" : false
}, {
  "metadata" : { },
  "volumeName" : "fstest1",
  "name" : "34016-bucket2-ofs",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2023-09-23T10:27:22.906Z",
  "modificationTime" : "2023-09-23T10:27:22.906Z",
  "sourcePathExist" : true,
  "quotaInBytes" : 1099511627776,
  "quotaInNamespace" : -1,
  "bucketLayout" : "FILE_SYSTEM_OPTIMIZED",
  "owner" : "testuser",
  "link" : false
} ]</msg>
<status status="PASS" starttime="20230923 10:27:40.591" endtime="20230923 10:27:40.592"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:27:40.592" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:27:40.592" endtime="20230923 10:27:40.593"/>
</kw>
<status status="PASS" starttime="20230923 10:27:34.792" endtime="20230923 10:27:40.593"/>
</kw>
<msg timestamp="20230923 10:27:40.593" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:27:34.791" endtime="20230923 10:27:40.593"/>
</kw>
<msg timestamp="20230923 10:27:40.593" level="INFO">${result} = [ {
  "metadata" : { },
  "volumeName" : "fstest1",
  "name" : "34016-bucket1-ofs",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2023...</msg>
<status status="PASS" starttime="20230923 10:27:34.791" endtime="20230923 10:27:40.593"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:27:40.593" endtime="20230923 10:27:40.594"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET2}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:27:40.594" endtime="20230923 10:27:40.594"/>
</kw>
<status status="PASS" starttime="20230923 10:27:28.959" endtime="20230923 10:27:40.594"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Completed setup for ${SCHEME} tests with ${BUCKET_TYPE}s in ${VOLUME}/${BUCKET} using FS base URL: ${BASE_URL}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:27:40.595" level="INFO">Completed setup for ofs tests with buckets in fstest1/34016-bucket1-ofs using FS base URL: ofs://om/fstest1/34016-bucket1-ofs/</msg>
<status status="PASS" starttime="20230923 10:27:40.595" endtime="20230923 10:27:40.595"/>
</kw>
<status status="PASS" starttime="20230923 10:27:00.066" endtime="20230923 10:27:40.595"/>
</kw>
<test id="s1-s6-t1" name="List root" line="26">
<kw name="Format FS URL" library="fs">
<var>${root}</var>
<arg>${SCHEME}</arg>
<arg>${VOLUME}</arg>
<arg>${BUCKET}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20230923 10:27:40.602" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20230923 10:27:40.602" endtime="20230923 10:27:40.602"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230923 10:27:40.603" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20230923 10:27:40.603" endtime="20230923 10:27:40.603"/>
</kw>
<status status="PASS" starttime="20230923 10:27:40.601" endtime="20230923 10:27:40.603"/>
</kw>
<msg timestamp="20230923 10:27:40.603" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20230923 10:27:40.600" endtime="20230923 10:27:40.603"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20230923 10:27:40.605" endtime="20230923 10:27:40.606"/>
</kw>
<msg timestamp="20230923 10:27:40.606" level="INFO">${path_with_leading} = </msg>
<status status="PASS" starttime="20230923 10:27:40.604" endtime="20230923 10:27:40.606"/>
</kw>
<status status="PASS" starttime="20230923 10:27:40.599" endtime="20230923 10:27:40.607"/>
</kw>
<msg timestamp="20230923 10:27:40.607" level="INFO">${url} = ofs://om/fstest1/34016-bucket1-ofs</msg>
<status status="PASS" starttime="20230923 10:27:40.598" endtime="20230923 10:27:40.607"/>
</kw>
<msg timestamp="20230923 10:27:40.607" level="INFO">${root} = ofs://om/fstest1/34016-bucket1-ofs</msg>
<status status="PASS" starttime="20230923 10:27:40.597" endtime="20230923 10:27:40.607"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -ls ${root}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:27:40.612" level="INFO">Running command 'ozone fs -ls ofs://om/fstest1/34016-bucket1-ofs 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:27:44.917" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:27:44.917" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:27:40.609" endtime="20230923 10:27:44.918"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:27:44.919" level="INFO"/>
<status status="PASS" starttime="20230923 10:27:44.918" endtime="20230923 10:27:44.919"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:27:44.920" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:27:44.919" endtime="20230923 10:27:44.920"/>
</kw>
<status status="PASS" starttime="20230923 10:27:40.608" endtime="20230923 10:27:44.920"/>
</kw>
<msg timestamp="20230923 10:27:44.920" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:27:40.608" endtime="20230923 10:27:44.920"/>
</kw>
<status status="PASS" starttime="20230923 10:27:40.607" endtime="20230923 10:27:44.920"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230923 10:27:40.596" endtime="20230923 10:27:44.920"/>
</test>
<test id="s1-s6-t2" name="List non-existent volume" line="30">
<kw name="Format FS URL" library="fs">
<var>${url}</var>
<arg>${SCHEME}</arg>
<arg>no-such-volume</arg>
<arg>${BUCKET}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20230923 10:27:44.927" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20230923 10:27:44.927" endtime="20230923 10:27:44.927"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230923 10:27:44.928" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20230923 10:27:44.928" endtime="20230923 10:27:44.928"/>
</kw>
<status status="PASS" starttime="20230923 10:27:44.927" endtime="20230923 10:27:44.929"/>
</kw>
<msg timestamp="20230923 10:27:44.929" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20230923 10:27:44.925" endtime="20230923 10:27:44.929"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20230923 10:27:44.930" endtime="20230923 10:27:44.931"/>
</kw>
<msg timestamp="20230923 10:27:44.931" level="INFO">${path_with_leading} = </msg>
<status status="PASS" starttime="20230923 10:27:44.929" endtime="20230923 10:27:44.931"/>
</kw>
<status status="PASS" starttime="20230923 10:27:44.925" endtime="20230923 10:27:44.931"/>
</kw>
<msg timestamp="20230923 10:27:44.931" level="INFO">${url} = ofs://om/no-such-volume/34016-bucket1-ofs</msg>
<status status="PASS" starttime="20230923 10:27:44.924" endtime="20230923 10:27:44.931"/>
</kw>
<msg timestamp="20230923 10:27:44.932" level="INFO">${url} = ofs://om/no-such-volume/34016-bucket1-ofs</msg>
<status status="PASS" starttime="20230923 10:27:44.922" endtime="20230923 10:27:44.932"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone fs -ls ${url}</arg>
<arg>1</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:27:44.935" level="INFO">Running command 'ozone fs -ls ofs://om/no-such-volume/34016-bucket1-ofs 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:27:49.139" level="INFO">${rc} = 1</msg>
<msg timestamp="20230923 10:27:49.139" level="INFO">${output} = ls: `ofs://om/no-such-volume/34016-bucket1-ofs': No such file or directory</msg>
<status status="PASS" starttime="20230923 10:27:44.932" endtime="20230923 10:27:49.139"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:27:49.140" level="INFO">ls: `ofs://om/no-such-volume/34016-bucket1-ofs': No such file or directory</msg>
<status status="PASS" starttime="20230923 10:27:49.139" endtime="20230923 10:27:49.140"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:27:49.141" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:27:49.141" endtime="20230923 10:27:49.141"/>
</kw>
<msg timestamp="20230923 10:27:49.142" level="INFO">${result} = ls: `ofs://om/no-such-volume/34016-bucket1-ofs': No such file or directory</msg>
<status status="PASS" starttime="20230923 10:27:44.932" endtime="20230923 10:27:49.142"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>(Check access operation failed)|(Volume no-such-volume is not found)|(No such file or directory)</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20230923 10:27:49.142" endtime="20230923 10:27:49.143"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230923 10:27:44.921" endtime="20230923 10:27:49.143"/>
</test>
<test id="s1-s6-t3" name="List non-existent bucket" line="35">
<kw name="Format FS URL" library="fs">
<var>${url}</var>
<arg>${SCHEME}</arg>
<arg>${VOLUME}</arg>
<arg>no-such-bucket</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20230923 10:27:49.152" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20230923 10:27:49.151" endtime="20230923 10:27:49.152"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230923 10:27:49.153" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20230923 10:27:49.152" endtime="20230923 10:27:49.153"/>
</kw>
<status status="PASS" starttime="20230923 10:27:49.151" endtime="20230923 10:27:49.153"/>
</kw>
<msg timestamp="20230923 10:27:49.153" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20230923 10:27:49.149" endtime="20230923 10:27:49.153"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20230923 10:27:49.154" endtime="20230923 10:27:49.155"/>
</kw>
<msg timestamp="20230923 10:27:49.156" level="INFO">${path_with_leading} = </msg>
<status status="PASS" starttime="20230923 10:27:49.153" endtime="20230923 10:27:49.156"/>
</kw>
<status status="PASS" starttime="20230923 10:27:49.149" endtime="20230923 10:27:49.156"/>
</kw>
<msg timestamp="20230923 10:27:49.156" level="INFO">${url} = ofs://om/fstest1/no-such-bucket</msg>
<status status="PASS" starttime="20230923 10:27:49.148" endtime="20230923 10:27:49.156"/>
</kw>
<msg timestamp="20230923 10:27:49.156" level="INFO">${url} = ofs://om/fstest1/no-such-bucket</msg>
<status status="PASS" starttime="20230923 10:27:49.146" endtime="20230923 10:27:49.156"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone fs -ls ${url}</arg>
<arg>1</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:27:49.160" level="INFO">Running command 'ozone fs -ls ofs://om/fstest1/no-such-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:27:53.615" level="INFO">${rc} = 1</msg>
<msg timestamp="20230923 10:27:53.615" level="INFO">${output} = ls: `ofs://om/fstest1/no-such-bucket': No such file or directory</msg>
<status status="PASS" starttime="20230923 10:27:49.157" endtime="20230923 10:27:53.615"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:27:53.617" level="INFO">ls: `ofs://om/fstest1/no-such-bucket': No such file or directory</msg>
<status status="PASS" starttime="20230923 10:27:53.616" endtime="20230923 10:27:53.617"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:27:53.618" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:27:53.617" endtime="20230923 10:27:53.618"/>
</kw>
<msg timestamp="20230923 10:27:53.618" level="INFO">${result} = ls: `ofs://om/fstest1/no-such-bucket': No such file or directory</msg>
<status status="PASS" starttime="20230923 10:27:49.156" endtime="20230923 10:27:53.618"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>(Check access operation failed)|(Bucket not found)|(No such file or directory)</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20230923 10:27:53.618" endtime="20230923 10:27:53.619"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230923 10:27:49.145" endtime="20230923 10:27:53.620"/>
</test>
<test id="s1-s6-t4" name="Create dir with parents" line="40">
<kw name="Execute" library="os">
<arg>ozone fs -mkdir -p ${DEEP_URL}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:27:53.626" level="INFO">Running command 'ozone fs -mkdir -p ofs://om/fstest1/34016-bucket1-ofs/test/ofs/dir 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:27:57.884" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:27:57.884" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:27:53.623" endtime="20230923 10:27:57.884"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:27:57.885" level="INFO"/>
<status status="PASS" starttime="20230923 10:27:57.884" endtime="20230923 10:27:57.886"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:27:57.886" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:27:57.886" endtime="20230923 10:27:57.887"/>
</kw>
<status status="PASS" starttime="20230923 10:27:53.622" endtime="20230923 10:27:57.887"/>
</kw>
<msg timestamp="20230923 10:27:57.887" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:27:53.622" endtime="20230923 10:27:57.887"/>
</kw>
<status status="PASS" starttime="20230923 10:27:53.621" endtime="20230923 10:27:57.887"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:27:57.892" level="INFO">Running command 'ozone sh key list fstest1/34016-bucket1-ofs | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:28:04.277" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:28:04.277" level="INFO">${output} = test/
test/ofs/
test/ofs/dir/</msg>
<status status="PASS" starttime="20230923 10:27:57.889" endtime="20230923 10:28:04.277"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:28:04.279" level="INFO">test/
test/ofs/
test/ofs/dir/</msg>
<status status="PASS" starttime="20230923 10:28:04.278" endtime="20230923 10:28:04.279"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:28:04.279" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:28:04.279" endtime="20230923 10:28:04.279"/>
</kw>
<status status="PASS" starttime="20230923 10:27:57.889" endtime="20230923 10:28:04.280"/>
</kw>
<msg timestamp="20230923 10:28:04.280" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:27:57.888" endtime="20230923 10:28:04.280"/>
</kw>
<msg timestamp="20230923 10:28:04.280" level="INFO">${result} = test/
test/ofs/
test/ofs/dir/</msg>
<status status="PASS" starttime="20230923 10:27:57.887" endtime="20230923 10:28:04.280"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${DEEP_DIR}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:28:04.280" endtime="20230923 10:28:04.281"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230923 10:27:53.620" endtime="20230923 10:28:04.281"/>
</test>
<test id="s1-s6-t5" name="Copy from local" line="45">
<kw name="Execute" library="os">
<arg>ozone fs -copyFromLocal NOTICE.txt ${DEEP_URL}/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:28:04.287" level="INFO">Running command 'ozone fs -copyFromLocal NOTICE.txt ofs://om/fstest1/34016-bucket1-ofs/test/ofs/dir/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:28:11.665" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:28:11.665" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:28:04.284" endtime="20230923 10:28:11.665"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:28:11.667" level="INFO"/>
<status status="PASS" starttime="20230923 10:28:11.666" endtime="20230923 10:28:11.667"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:28:11.668" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:28:11.667" endtime="20230923 10:28:11.668"/>
</kw>
<status status="PASS" starttime="20230923 10:28:04.283" endtime="20230923 10:28:11.668"/>
</kw>
<msg timestamp="20230923 10:28:11.668" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:28:04.283" endtime="20230923 10:28:11.668"/>
</kw>
<status status="PASS" starttime="20230923 10:28:04.282" endtime="20230923 10:28:11.669"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:28:11.674" level="INFO">Running command 'ozone sh key list fstest1/34016-bucket1-ofs | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:28:17.192" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:28:17.192" level="INFO">${output} = test/
test/ofs/
test/ofs/dir/
test/ofs/dir/NOTICE.txt</msg>
<status status="PASS" starttime="20230923 10:28:11.671" endtime="20230923 10:28:17.192"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:28:17.193" level="INFO">test/
test/ofs/
test/ofs/dir/
test/ofs/dir/NOTICE.txt</msg>
<status status="PASS" starttime="20230923 10:28:17.193" endtime="20230923 10:28:17.194"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:28:17.194" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:28:17.194" endtime="20230923 10:28:17.194"/>
</kw>
<status status="PASS" starttime="20230923 10:28:11.670" endtime="20230923 10:28:17.194"/>
</kw>
<msg timestamp="20230923 10:28:17.195" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:28:11.670" endtime="20230923 10:28:17.195"/>
</kw>
<msg timestamp="20230923 10:28:17.195" level="INFO">${result} = test/
test/ofs/
test/ofs/dir/
test/ofs/dir/NOTICE.txt</msg>
<status status="PASS" starttime="20230923 10:28:11.669" endtime="20230923 10:28:17.195"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:28:17.195" endtime="20230923 10:28:17.195"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${VOLUME}/${BUCKET}/${DEEP_DIR}/NOTICE.txt | jq -r '.replicationConfig.replicationFactor'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:28:17.200" level="INFO">Running command 'ozone sh key info fstest1/34016-bucket1-ofs/test/ofs/dir/NOTICE.txt | jq -r '.replicationConfig.replicationFactor' 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:28:23.134" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:28:23.135" level="INFO">${output} = THREE</msg>
<status status="PASS" starttime="20230923 10:28:17.197" endtime="20230923 10:28:23.135"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:28:23.137" level="INFO">THREE</msg>
<status status="PASS" starttime="20230923 10:28:23.135" endtime="20230923 10:28:23.137"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:28:23.137" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:28:23.137" endtime="20230923 10:28:23.137"/>
</kw>
<status status="PASS" starttime="20230923 10:28:17.197" endtime="20230923 10:28:23.138"/>
</kw>
<msg timestamp="20230923 10:28:23.138" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:28:17.196" endtime="20230923 10:28:23.138"/>
</kw>
<msg timestamp="20230923 10:28:23.138" level="INFO">${result} = THREE</msg>
<status status="PASS" starttime="20230923 10:28:17.196" endtime="20230923 10:28:23.138"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>THREE</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230923 10:28:23.138" endtime="20230923 10:28:23.139"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230923 10:28:04.282" endtime="20230923 10:28:23.139"/>
</test>
<test id="s1-s6-t6" name="Put" line="52">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone fs -put NOTICE.txt ${DEEP_URL}/PUTFILE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:28:23.145" level="INFO">Running command 'ozone fs -put NOTICE.txt ofs://om/fstest1/34016-bucket1-ofs/test/ofs/dir/PUTFILE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:28:30.305" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:28:30.305" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:28:23.142" endtime="20230923 10:28:30.305"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:28:30.307" level="INFO"/>
<status status="PASS" starttime="20230923 10:28:30.306" endtime="20230923 10:28:30.307"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:28:30.308" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:28:30.307" endtime="20230923 10:28:30.308"/>
</kw>
<status status="PASS" starttime="20230923 10:28:23.141" endtime="20230923 10:28:30.308"/>
</kw>
<msg timestamp="20230923 10:28:30.308" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:28:23.141" endtime="20230923 10:28:30.308"/>
</kw>
<msg timestamp="20230923 10:28:30.308" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230923 10:28:23.140" endtime="20230923 10:28:30.308"/>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<arg>${result}</arg>
<doc>Verifies that the given item is empty.</doc>
<msg timestamp="20230923 10:28:30.309" level="INFO">Length is 0</msg>
<status status="PASS" starttime="20230923 10:28:30.309" endtime="20230923 10:28:30.309"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:28:30.314" level="INFO">Running command 'ozone sh key list fstest1/34016-bucket1-ofs | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:28:36.634" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:28:36.634" level="INFO">${output} = test/
test/ofs/
test/ofs/dir/
test/ofs/dir/NOTICE.txt
test/ofs/dir/PUTFILE.txt</msg>
<status status="PASS" starttime="20230923 10:28:30.311" endtime="20230923 10:28:36.634"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:28:36.636" level="INFO">test/
test/ofs/
test/ofs/dir/
test/ofs/dir/NOTICE.txt
test/ofs/dir/PUTFILE.txt</msg>
<status status="PASS" starttime="20230923 10:28:36.635" endtime="20230923 10:28:36.636"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:28:36.637" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:28:36.636" endtime="20230923 10:28:36.637"/>
</kw>
<status status="PASS" starttime="20230923 10:28:30.310" endtime="20230923 10:28:36.637"/>
</kw>
<msg timestamp="20230923 10:28:36.637" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:28:30.310" endtime="20230923 10:28:36.638"/>
</kw>
<msg timestamp="20230923 10:28:36.638" level="INFO">${result} = test/
test/ofs/
test/ofs/dir/
test/ofs/dir/NOTICE.txt
test/ofs/dir/PUTFILE.txt</msg>
<status status="PASS" starttime="20230923 10:28:30.309" endtime="20230923 10:28:36.638"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PUTFILE.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:28:36.638" endtime="20230923 10:28:36.638"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230923 10:28:23.140" endtime="20230923 10:28:36.639"/>
</test>
<test id="s1-s6-t7" name="Check disk usage after create a file which uses RATIS replication type" line="59">
<kw name="Generate Random String" library="String">
<var>${vol}</var>
<arg>8</arg>
<arg>[LOWER]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230923 10:28:36.642" level="INFO">${vol} = wuvoqpno</msg>
<status status="PASS" starttime="20230923 10:28:36.641" endtime="20230923 10:28:36.642"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${bucket}</var>
<arg>8</arg>
<arg>[LOWER]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230923 10:28:36.642" level="INFO">${bucket} = babxtzib</msg>
<status status="PASS" starttime="20230923 10:28:36.642" endtime="20230923 10:28:36.643"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create /${vol}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:28:36.648" level="INFO">Running command 'ozone sh volume create /wuvoqpno 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:28:42.308" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:28:42.309" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:28:36.645" endtime="20230923 10:28:42.309"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:28:42.310" level="INFO"/>
<status status="PASS" starttime="20230923 10:28:42.309" endtime="20230923 10:28:42.310"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:28:42.311" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:28:42.311" endtime="20230923 10:28:42.311"/>
</kw>
<status status="PASS" starttime="20230923 10:28:36.644" endtime="20230923 10:28:42.312"/>
</kw>
<msg timestamp="20230923 10:28:42.312" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:28:36.644" endtime="20230923 10:28:42.312"/>
</kw>
<status status="PASS" starttime="20230923 10:28:36.643" endtime="20230923 10:28:42.312"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create /${vol}/${bucket} --type RATIS --replication 3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:28:42.317" level="INFO">Running command 'ozone sh bucket create /wuvoqpno/babxtzib --type RATIS --replication 3 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:28:47.549" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:28:47.549" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:28:42.314" endtime="20230923 10:28:47.549"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:28:47.551" level="INFO"/>
<status status="PASS" starttime="20230923 10:28:47.550" endtime="20230923 10:28:47.551"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:28:47.552" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:28:47.551" endtime="20230923 10:28:47.552"/>
</kw>
<status status="PASS" starttime="20230923 10:28:42.313" endtime="20230923 10:28:47.552"/>
</kw>
<msg timestamp="20230923 10:28:47.552" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:28:42.313" endtime="20230923 10:28:47.552"/>
</kw>
<status status="PASS" starttime="20230923 10:28:42.312" endtime="20230923 10:28:47.553"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -put NOTICE.txt /${vol}/${bucket}/PUTFILE1.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:28:47.559" level="INFO">Running command 'ozone fs -put NOTICE.txt /wuvoqpno/babxtzib/PUTFILE1.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:28:54.347" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:28:54.347" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:28:47.555" endtime="20230923 10:28:54.348"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:28:54.349" level="INFO"/>
<status status="PASS" starttime="20230923 10:28:54.348" endtime="20230923 10:28:54.349"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:28:54.350" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:28:54.349" endtime="20230923 10:28:54.350"/>
</kw>
<status status="PASS" starttime="20230923 10:28:47.554" endtime="20230923 10:28:54.350"/>
</kw>
<msg timestamp="20230923 10:28:54.350" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:28:47.554" endtime="20230923 10:28:54.350"/>
</kw>
<status status="PASS" starttime="20230923 10:28:47.553" endtime="20230923 10:28:54.351"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedFileLength}</var>
<arg>stat -c %s NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:28:54.355" level="INFO">Running command 'stat -c %s NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:28:54.360" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:28:54.360" level="INFO">${output} = 17289</msg>
<status status="PASS" starttime="20230923 10:28:54.352" endtime="20230923 10:28:54.360"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:28:54.361" level="INFO">17289</msg>
<status status="PASS" starttime="20230923 10:28:54.361" endtime="20230923 10:28:54.361"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:28:54.362" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:28:54.362" endtime="20230923 10:28:54.362"/>
</kw>
<status status="PASS" starttime="20230923 10:28:54.352" endtime="20230923 10:28:54.362"/>
</kw>
<msg timestamp="20230923 10:28:54.363" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:28:54.351" endtime="20230923 10:28:54.363"/>
</kw>
<msg timestamp="20230923 10:28:54.363" level="INFO">${expectedFileLength} = 17289</msg>
<status status="PASS" starttime="20230923 10:28:54.351" endtime="20230923 10:28:54.363"/>
</kw>
<kw name="Get Disk Usage of File with RATIS Replication">
<var>${expectedDiskUsage}</var>
<arg>${expectedFileLength}</arg>
<arg>3</arg>
<kw name="Evaluate" library="BuiltIn">
<var>${expectedDiskUsage}</var>
<arg>${fileLength} * ${replicationFactor}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230923 10:28:54.365" level="INFO">${expectedDiskUsage} = 51867</msg>
<status status="PASS" starttime="20230923 10:28:54.364" endtime="20230923 10:28:54.365"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${expectedDiskUsage}</var>
<arg>${expectedDiskUsage}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20230923 10:28:54.365" level="INFO">${expectedDiskUsage} = 51867</msg>
<status status="PASS" starttime="20230923 10:28:54.365" endtime="20230923 10:28:54.365"/>
</kw>
<msg timestamp="20230923 10:28:54.366" level="INFO">${expectedDiskUsage} = 51867</msg>
<status status="PASS" starttime="20230923 10:28:54.363" endtime="20230923 10:28:54.366"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone fs -du /${vol}/${bucket}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:28:54.370" level="INFO">Running command 'ozone fs -du /wuvoqpno/babxtzib 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:28:58.793" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:28:58.793" level="INFO">${output} = 17289  51867  /wuvoqpno/babxtzib/PUTFILE1.txt</msg>
<status status="PASS" starttime="20230923 10:28:54.368" endtime="20230923 10:28:58.793"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:28:58.795" level="INFO">17289  51867  /wuvoqpno/babxtzib/PUTFILE1.txt</msg>
<status status="PASS" starttime="20230923 10:28:58.794" endtime="20230923 10:28:58.795"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:28:58.796" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:28:58.795" endtime="20230923 10:28:58.796"/>
</kw>
<status status="PASS" starttime="20230923 10:28:54.367" endtime="20230923 10:28:58.796"/>
</kw>
<msg timestamp="20230923 10:28:58.796" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:28:54.366" endtime="20230923 10:28:58.796"/>
</kw>
<msg timestamp="20230923 10:28:58.796" level="INFO">${result} = 17289  51867  /wuvoqpno/babxtzib/PUTFILE1.txt</msg>
<status status="PASS" starttime="20230923 10:28:54.366" endtime="20230923 10:28:58.796"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PUTFILE1.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:28:58.797" endtime="20230923 10:28:58.797"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expectedFileLength}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:28:58.797" endtime="20230923 10:28:58.798"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expectedDiskUsage}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:28:58.798" endtime="20230923 10:28:58.798"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230923 10:28:36.640" endtime="20230923 10:28:58.798"/>
</test>
<test id="s1-s6-t8" name="Put with Streaming" line="73">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone fs -D ozone.fs.datastream.enabled=true -put NOTICE.txt ${DEEP_URL}/STREAMING.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:28:58.805" level="INFO">Running command 'ozone fs -D ozone.fs.datastream.enabled=true -put NOTICE.txt ofs://om/fstest1/34016-bucket1-ofs/test/ofs/dir/STREAMING.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:29:06.833" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:29:06.834" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:28:58.802" endtime="20230923 10:29:06.834"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:29:06.835" level="INFO"/>
<status status="PASS" starttime="20230923 10:29:06.834" endtime="20230923 10:29:06.835"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:29:06.836" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:29:06.835" endtime="20230923 10:29:06.836"/>
</kw>
<status status="PASS" starttime="20230923 10:28:58.801" endtime="20230923 10:29:06.836"/>
</kw>
<msg timestamp="20230923 10:29:06.837" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:28:58.801" endtime="20230923 10:29:06.837"/>
</kw>
<msg timestamp="20230923 10:29:06.837" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230923 10:28:58.800" endtime="20230923 10:29:06.837"/>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<arg>${result}</arg>
<doc>Verifies that the given item is empty.</doc>
<msg timestamp="20230923 10:29:06.837" level="INFO">Length is 0</msg>
<status status="PASS" starttime="20230923 10:29:06.837" endtime="20230923 10:29:06.837"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:29:06.842" level="INFO">Running command 'ozone sh key list fstest1/34016-bucket1-ofs | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:29:12.489" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:29:12.489" level="INFO">${output} = test/
test/ofs/
test/ofs/dir/
test/ofs/dir/NOTICE.txt
test/ofs/dir/PUTFILE.txt
test/ofs/dir/STREAMING.txt</msg>
<status status="PASS" starttime="20230923 10:29:06.839" endtime="20230923 10:29:12.490"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:29:12.491" level="INFO">test/
test/ofs/
test/ofs/dir/
test/ofs/dir/NOTICE.txt
test/ofs/dir/PUTFILE.txt
test/ofs/dir/STREAMING.txt</msg>
<status status="PASS" starttime="20230923 10:29:12.490" endtime="20230923 10:29:12.491"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:29:12.492" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:29:12.491" endtime="20230923 10:29:12.492"/>
</kw>
<status status="PASS" starttime="20230923 10:29:06.839" endtime="20230923 10:29:12.492"/>
</kw>
<msg timestamp="20230923 10:29:12.492" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:29:06.838" endtime="20230923 10:29:12.493"/>
</kw>
<msg timestamp="20230923 10:29:12.493" level="INFO">${result} = test/
test/ofs/
test/ofs/dir/
test/ofs/dir/NOTICE.txt
test/ofs/dir/PUTFILE.txt
test/ofs/dir/STREAMING.txt</msg>
<status status="PASS" starttime="20230923 10:29:06.838" endtime="20230923 10:29:12.493"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>STREAMING.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:29:12.493" endtime="20230923 10:29:12.494"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230923 10:28:58.799" endtime="20230923 10:29:12.494"/>
</test>
<test id="s1-s6-t9" name="List" line="80">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone fs -ls ${DEEP_URL}/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:29:12.502" level="INFO">Running command 'ozone fs -ls ofs://om/fstest1/34016-bucket1-ofs/test/ofs/dir/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:29:17.259" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:29:17.259" level="INFO">${output} = Found 3 items
-rw-rw-rw-   3 testuser testuser      17289 2023-09-23 10:28 ofs://om/fstest1/34016-bucket1-ofs/test/ofs/dir/NOTICE.txt
-rw-rw-rw-   3 testuser testuser      17289 2023-09-23 10:28 ofs:/...</msg>
<status status="PASS" starttime="20230923 10:29:12.499" endtime="20230923 10:29:17.259"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:29:17.261" level="INFO">Found 3 items
-rw-rw-rw-   3 testuser testuser      17289 2023-09-23 10:28 ofs://om/fstest1/34016-bucket1-ofs/test/ofs/dir/NOTICE.txt
-rw-rw-rw-   3 testuser testuser      17289 2023-09-23 10:28 ofs://om/fstest1/34016-bucket1-ofs/test/ofs/dir/PUTFILE.txt
-rw-rw-rw-   3 testuser testuser      17289 2023-09-23 10:29 ofs://om/fstest1/34016-bucket1-ofs/test/ofs/dir/STREAMING.txt</msg>
<status status="PASS" starttime="20230923 10:29:17.260" endtime="20230923 10:29:17.261"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:29:17.262" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:29:17.261" endtime="20230923 10:29:17.262"/>
</kw>
<status status="PASS" starttime="20230923 10:29:12.499" endtime="20230923 10:29:17.262"/>
</kw>
<msg timestamp="20230923 10:29:17.262" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:29:12.499" endtime="20230923 10:29:17.262"/>
</kw>
<msg timestamp="20230923 10:29:17.262" level="INFO">${result} = Found 3 items
-rw-rw-rw-   3 testuser testuser      17289 2023-09-23 10:28 ofs://om/fstest1/34016-bucket1-ofs/test/ofs/dir/NOTICE.txt
-rw-rw-rw-   3 testuser testuser      17289 2023-09-23 10:28 ofs:/...</msg>
<status status="PASS" starttime="20230923 10:29:12.498" endtime="20230923 10:29:17.262"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:29:17.263" endtime="20230923 10:29:17.263"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PUTFILE.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:29:17.263" endtime="20230923 10:29:17.264"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>STREAMING.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:29:17.264" endtime="20230923 10:29:17.265"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230923 10:29:12.497" endtime="20230923 10:29:17.265"/>
</test>
<test id="s1-s6-t10" name="Move" line="86">
<kw name="Execute" library="os">
<arg>ozone fs -mv ${DEEP_URL}/NOTICE.txt ${DEEP_URL}/MOVED.TXT</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:29:17.271" level="INFO">Running command 'ozone fs -mv ofs://om/fstest1/34016-bucket1-ofs/test/ofs/dir/NOTICE.txt ofs://om/fstest1/34016-bucket1-ofs/test/ofs/dir/MOVED.TXT 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:29:22.106" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:29:22.106" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:29:17.268" endtime="20230923 10:29:22.106"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:29:22.107" level="INFO"/>
<status status="PASS" starttime="20230923 10:29:22.106" endtime="20230923 10:29:22.107"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:29:22.108" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:29:22.108" endtime="20230923 10:29:22.108"/>
</kw>
<status status="PASS" starttime="20230923 10:29:17.268" endtime="20230923 10:29:22.109"/>
</kw>
<msg timestamp="20230923 10:29:22.109" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:29:17.268" endtime="20230923 10:29:22.109"/>
</kw>
<status status="PASS" starttime="20230923 10:29:17.267" endtime="20230923 10:29:22.109"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:29:22.114" level="INFO">Running command 'ozone sh key list fstest1/34016-bucket1-ofs | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:29:27.859" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:29:27.859" level="INFO">${output} = test/
test/ofs/
test/ofs/dir/
test/ofs/dir/MOVED.TXT
test/ofs/dir/PUTFILE.txt
test/ofs/dir/STREAMING.txt</msg>
<status status="PASS" starttime="20230923 10:29:22.111" endtime="20230923 10:29:27.860"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:29:27.861" level="INFO">test/
test/ofs/
test/ofs/dir/
test/ofs/dir/MOVED.TXT
test/ofs/dir/PUTFILE.txt
test/ofs/dir/STREAMING.txt</msg>
<status status="PASS" starttime="20230923 10:29:27.860" endtime="20230923 10:29:27.861"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:29:27.862" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:29:27.861" endtime="20230923 10:29:27.862"/>
</kw>
<status status="PASS" starttime="20230923 10:29:22.110" endtime="20230923 10:29:27.862"/>
</kw>
<msg timestamp="20230923 10:29:27.862" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:29:22.110" endtime="20230923 10:29:27.862"/>
</kw>
<msg timestamp="20230923 10:29:27.863" level="INFO">${result} = test/
test/ofs/
test/ofs/dir/
test/ofs/dir/MOVED.TXT
test/ofs/dir/PUTFILE.txt
test/ofs/dir/STREAMING.txt</msg>
<status status="PASS" starttime="20230923 10:29:22.109" endtime="20230923 10:29:27.863"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>MOVED.TXT</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:29:27.863" endtime="20230923 10:29:27.863"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:29:27.863" endtime="20230923 10:29:27.864"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230923 10:29:17.266" endtime="20230923 10:29:27.864"/>
</test>
<test id="s1-s6-t11" name="Copy within FS" line="92">
<kw name="Execute" library="os" type="SETUP">
<arg>ozone fs -mkdir -p ${DEEP_URL}/subdir1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:29:27.870" level="INFO">Running command 'ozone fs -mkdir -p ofs://om/fstest1/34016-bucket1-ofs/test/ofs/dir/subdir1 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:29:32.376" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:29:32.376" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:29:27.867" endtime="20230923 10:29:32.376"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:29:32.378" level="INFO"/>
<status status="PASS" starttime="20230923 10:29:32.377" endtime="20230923 10:29:32.378"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:29:32.379" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:29:32.378" endtime="20230923 10:29:32.379"/>
</kw>
<status status="PASS" starttime="20230923 10:29:27.866" endtime="20230923 10:29:32.379"/>
</kw>
<msg timestamp="20230923 10:29:32.379" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:29:27.866" endtime="20230923 10:29:32.379"/>
</kw>
<status status="PASS" starttime="20230923 10:29:27.865" endtime="20230923 10:29:32.379"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -cp ${DEEP_URL}/MOVED.TXT ${DEEP_URL}/subdir1/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:29:32.385" level="INFO">Running command 'ozone fs -cp ofs://om/fstest1/34016-bucket1-ofs/test/ofs/dir/MOVED.TXT ofs://om/fstest1/34016-bucket1-ofs/test/ofs/dir/subdir1/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:29:39.870" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:29:39.870" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:29:32.382" endtime="20230923 10:29:39.870"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:29:39.871" level="INFO"/>
<status status="PASS" starttime="20230923 10:29:39.870" endtime="20230923 10:29:39.871"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:29:39.872" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:29:39.871" endtime="20230923 10:29:39.872"/>
</kw>
<status status="PASS" starttime="20230923 10:29:32.381" endtime="20230923 10:29:39.873"/>
</kw>
<msg timestamp="20230923 10:29:39.873" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:29:32.381" endtime="20230923 10:29:39.873"/>
</kw>
<status status="PASS" starttime="20230923 10:29:32.380" endtime="20230923 10:29:39.873"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:29:39.877" level="INFO">Running command 'ozone sh key list fstest1/34016-bucket1-ofs | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:29:46.019" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:29:46.019" level="INFO">${output} = test/
test/ofs/
test/ofs/dir/
test/ofs/dir/MOVED.TXT
test/ofs/dir/PUTFILE.txt
test/ofs/dir/STREAMING.txt
test/ofs/dir/subdir1/
test/ofs/dir/subdir1/NOTICE.txt</msg>
<status status="PASS" starttime="20230923 10:29:39.875" endtime="20230923 10:29:46.019"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:29:46.021" level="INFO">test/
test/ofs/
test/ofs/dir/
test/ofs/dir/MOVED.TXT
test/ofs/dir/PUTFILE.txt
test/ofs/dir/STREAMING.txt
test/ofs/dir/subdir1/
test/ofs/dir/subdir1/NOTICE.txt</msg>
<status status="PASS" starttime="20230923 10:29:46.020" endtime="20230923 10:29:46.021"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:29:46.022" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:29:46.021" endtime="20230923 10:29:46.022"/>
</kw>
<status status="PASS" starttime="20230923 10:29:39.874" endtime="20230923 10:29:46.022"/>
</kw>
<msg timestamp="20230923 10:29:46.022" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:29:39.874" endtime="20230923 10:29:46.022"/>
</kw>
<msg timestamp="20230923 10:29:46.022" level="INFO">${result} = test/
test/ofs/
test/ofs/dir/
test/ofs/dir/MOVED.TXT
test/ofs/dir/PUTFILE.txt
test/ofs/dir/STREAMING.txt
test/ofs/dir/subdir1/
test/ofs/dir/subdir1/NOTICE.txt</msg>
<status status="PASS" starttime="20230923 10:29:39.873" endtime="20230923 10:29:46.022"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>subdir1/NOTICE.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:29:46.023" endtime="20230923 10:29:46.023"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone fs -ls ${DEEP_URL}/subdir1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:29:46.028" level="INFO">Running command 'ozone fs -ls ofs://om/fstest1/34016-bucket1-ofs/test/ofs/dir/subdir1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:29:50.342" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:29:50.342" level="INFO">${output} = Found 1 items
-rw-rw-rw-   3 testuser testuser      17289 2023-09-23 10:29 ofs://om/fstest1/34016-bucket1-ofs/test/ofs/dir/subdir1/NOTICE.txt</msg>
<status status="PASS" starttime="20230923 10:29:46.025" endtime="20230923 10:29:50.342"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:29:50.343" level="INFO">Found 1 items
-rw-rw-rw-   3 testuser testuser      17289 2023-09-23 10:29 ofs://om/fstest1/34016-bucket1-ofs/test/ofs/dir/subdir1/NOTICE.txt</msg>
<status status="PASS" starttime="20230923 10:29:50.343" endtime="20230923 10:29:50.343"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:29:50.344" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:29:50.344" endtime="20230923 10:29:50.344"/>
</kw>
<status status="PASS" starttime="20230923 10:29:46.024" endtime="20230923 10:29:50.344"/>
</kw>
<msg timestamp="20230923 10:29:50.345" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:29:46.024" endtime="20230923 10:29:50.345"/>
</kw>
<msg timestamp="20230923 10:29:50.345" level="INFO">${result} = Found 1 items
-rw-rw-rw-   3 testuser testuser      17289 2023-09-23 10:29 ofs://om/fstest1/34016-bucket1-ofs/test/ofs/dir/subdir1/NOTICE.txt</msg>
<status status="PASS" starttime="20230923 10:29:46.023" endtime="20230923 10:29:50.345"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:29:50.345" endtime="20230923 10:29:50.345"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:29:50.346" endtime="20230923 10:29:50.346"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230923 10:29:27.865" endtime="20230923 10:29:50.346"/>
</test>
<test id="s1-s6-t12" name="Cat file" line="102">
<kw name="Execute" library="os">
<arg>ozone fs -cat ${DEEP_URL}/subdir1/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:29:50.353" level="INFO">Running command 'ozone fs -cat ofs://om/fstest1/34016-bucket1-ofs/test/ofs/dir/subdir1/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:29:56.874" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:29:56.874" level="INFO">${output} = Apache Ozone
Copyright 2022 The Apache Software Foundation

This product includes software developed at
The Apache Software Foundation (http://www.apache.org/).

Export Control Notice
----------------...</msg>
<status status="PASS" starttime="20230923 10:29:50.349" endtime="20230923 10:29:56.874"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:29:56.876" level="INFO">Apache Ozone
Copyright 2022 The Apache Software Foundation

This product includes software developed at
The Apache Software Foundation (http://www.apache.org/).

Export Control Notice
---------------------

This distribution includes cryptographic software.  The country in
which you currently reside may have restrictions on the import,
possession, use, and/or re-export to another country, of
encryption software.  BEFORE using any encryption software, please
check your country's laws, regulations and policies concerning the
import, possession, or use, and re-export of encryption software, to
see if this is permitted.  See &lt;http://www.wassenaar.org/&gt; for more
information.

The U.S. Government Department of Commerce, Bureau of Industry and
Security (BIS), has classified this software as Export Commodity
Control Number (ECCN) 5D002.C.1, which includes information security
software using or performing cryptographic functions with asymmetric
algorithms.  The form and manner of this Apache Software Foundation
distribution makes it eligible for export under the License Exception
ENC Technology Software Unrestricted (TSU) exception (see the BIS
Export Administration Regulations, Section 740.13) for both object
code and source code.

This software uses the SSL libraries from the Jetty project written
by mortbay.org abd BouncyCastle Java cryptography APIs written by the
 Legion of the Bouncy Castle Inc.

**********************
THIRD PARTY COMPONENTS
**********************
This software includes third party software subject to the following copyrights:

io.netty:netty-all
====================


                            The Netty Project
                            =================

Please visit the Netty web site for more information:

  * https://netty.io/

Copyright 2014 The Netty Project

The Netty Project licenses this file to you under the Apache License,
version 2.0 (the "License"); you may not use this file except in compliance
with the License. You may obtain a copy of the License at:

  http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
License for the specific language governing permissions and limitations
under the License.

Also, please refer to each LICENSE.&lt;component&gt;.txt file, which is located in
the 'license' directory of the distribution file, for the license terms of the
components that this product depends on.

-------------------------------------------------------------------------------
This product contains the extensions to Java Collections Framework which has
been derived from the works by JSR-166 EG, Doug Lea, and Jason T. Greene:

  * LICENSE:
    * license/LICENSE.jsr166y.txt (Public Domain)
  * HOMEPAGE:
    * http://gee.cs.oswego.edu/cgi-bin/viewcvs.cgi/jsr166/
    * http://viewvc.jboss.org/cgi-bin/viewvc.cgi/jbosscache/experimental/jsr166/

This product contains a modified version of Robert Harder's Public Domain
Base64 Encoder and Decoder, which can be obtained at:

  * LICENSE:
    * license/LICENSE.base64.txt (Public Domain)
  * HOMEPAGE:
    * http://iharder.sourceforge.net/current/java/base64/

This product contains a modified portion of 'Webbit', an event based
WebSocket and HTTP server, which can be obtained at:

  * LICENSE:
    * license/LICENSE.webbit.txt (BSD License)
  * HOMEPAGE:
    * https://github.com/joewalnes/webbit

This product contains a modified portion of 'SLF4J', a simple logging
facade for Java, which can be obtained at:

  * LICENSE:
    * license/LICENSE.slf4j.txt (MIT License)
  * HOMEPAGE:
    * http://www.slf4j.org/

This product contains a modified portion of 'Apache Harmony', an open source
Java SE, which can be obtained at:

  * NOTICE:
    * license/NOTICE.harmony.txt
  * LICENSE:
    * license/LICENSE.harmony.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://archive.apache.org/dist/harmony/

This product contains a modified portion of 'jbzip2', a Java bzip2 compression
and decompression library written by Matthew J. Francis. It can be obtained at:

  * LICENSE:
    * license/LICENSE.jbzip2.txt (MIT License)
  * HOMEPAGE:
    * https://code.google.com/p/jbzip2/

This product contains a modified portion of 'libdivsufsort', a C API library to construct
the suffix array and the Burrows-Wheeler transformed string for any input string of
a constant-size alphabet written by Yuta Mori. It can be obtained at:

  * LICENSE:
    * license/LICENSE.libdivsufsort.txt (MIT License)
  * HOMEPAGE:
    * https://github.com/y-256/libdivsufsort

This product contains a modified portion of Nitsan Wakart's 'JCTools', Java Concurrency Tools for the JVM,
 which can be obtained at:

  * LICENSE:
    * license/LICENSE.jctools.txt (ASL2 License)
  * HOMEPAGE:
    * https://github.com/JCTools/JCTools

This product optionally depends on 'JZlib', a re-implementation of zlib in
pure Java, which can be obtained at:

  * LICENSE:
    * license/LICENSE.jzlib.txt (BSD style License)
  * HOMEPAGE:
    * http://www.jcraft.com/jzlib/

This product optionally depends on 'Compress-LZF', a Java library for encoding and
decoding data in LZF format, written by Tatu Saloranta. It can be obtained at:

  * LICENSE:
    * license/LICENSE.compress-lzf.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/ning/compress

This product optionally depends on 'lz4', a LZ4 Java compression
and decompression library written by Adrien Grand. It can be obtained at:

  * LICENSE:
    * license/LICENSE.lz4.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/jpountz/lz4-java

This product optionally depends on 'lzma-java', a LZMA Java compression
and decompression library, which can be obtained at:

  * LICENSE:
    * license/LICENSE.lzma-java.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/jponge/lzma-java

This product contains a modified portion of 'jfastlz', a Java port of FastLZ compression
and decompression library written by William Kinney. It can be obtained at:

  * LICENSE:
    * license/LICENSE.jfastlz.txt (MIT License)
  * HOMEPAGE:
    * https://code.google.com/p/jfastlz/

This product contains a modified portion of and optionally depends on 'Protocol Buffers', Google's data
interchange format, which can be obtained at:

  * LICENSE:
    * license/LICENSE.protobuf.txt (New BSD License)
  * HOMEPAGE:
    * https://github.com/google/protobuf

This product optionally depends on 'Bouncy Castle Crypto APIs' to generate
a temporary self-signed X.509 certificate when the JVM does not provide the
equivalent functionality.  It can be obtained at:

  * LICENSE:
    * license/LICENSE.bouncycastle.txt (MIT License)
  * HOMEPAGE:
    * http://www.bouncycastle.org/

This product optionally depends on 'Snappy', a compression library produced
by Google Inc, which can be obtained at:

  * LICENSE:
    * license/LICENSE.snappy.txt (New BSD License)
  * HOMEPAGE:
    * https://github.com/google/snappy

This product optionally depends on 'JBoss Marshalling', an alternative Java
serialization API, which can be obtained at:

  * LICENSE:
    * license/LICENSE.jboss-marshalling.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/jboss-remoting/jboss-marshalling

This product optionally depends on 'Caliper', Google's micro-
benchmarking framework, which can be obtained at:

  * LICENSE:
    * license/LICENSE.caliper.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/google/caliper

This product optionally depends on 'Apache Commons Logging', a logging
framework, which can be obtained at:

  * LICENSE:
    * license/LICENSE.commons-logging.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://commons.apache.org/logging/

This product optionally depends on 'Apache Log4J', a logging framework, which
can be obtained at:

  * LICENSE:
    * license/LICENSE.log4j.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://logging.apache.org/log4j/

This product optionally depends on 'Aalto XML', an ultra-high performance
non-blocking XML processor, which can be obtained at:

  * LICENSE:
    * license/LICENSE.aalto-xml.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://wiki.fasterxml.com/AaltoHome

This product contains a modified version of 'HPACK', a Java implementation of
the HTTP/2 HPACK algorithm written by Twitter. It can be obtained at:

  * LICENSE:
    * license/LICENSE.hpack.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/twitter/hpack

This product contains a modified version of 'HPACK', a Java implementation of
the HTTP/2 HPACK algorithm written by Cory Benfield. It can be obtained at:

  * LICENSE:
    * license/LICENSE.hyper-hpack.txt (MIT License)
  * HOMEPAGE:
    * https://github.com/python-hyper/hpack/

This product contains a modified version of 'HPACK', a Java implementation of
the HTTP/2 HPACK algorithm written by Tatsuhiro Tsujikawa. It can be obtained at:

  * LICENSE:
    * license/LICENSE.nghttp2-hpack.txt (MIT License)
  * HOMEPAGE:
    * https://github.com/nghttp2/nghttp2/

This product contains a modified portion of 'Apache Commons Lang', a Java library
provides utilities for the java.lang API, which can be obtained at:

  * LICENSE:
    * license/LICENSE.commons-lang.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://commons.apache.org/proper/commons-lang/


This product contains the Maven wrapper scripts from 'Maven Wrapper', that provides an easy way to ensure a user has everything necessary to run the Maven build.

  * LICENSE:
    * license/LICENSE.mvn-wrapper.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/takari/maven-wrapper


io.grpc:grpc-core
====================

Copyright 2014 The gRPC Authors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

-----------------------------------------------------------------------

This product contains a modified portion of 'OkHttp', an open source
HTTP &amp; SPDY client for Android and Java applications, which can be obtained
at:

  * LICENSE:
    * okhttp/third_party/okhttp/LICENSE (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/square/okhttp
  * LOCATION_IN_GRPC:
    * okhttp/third_party/okhttp

This product contains a modified portion of 'Envoy', an open source
cloud-native high-performance edge/middle/service proxy, which can be
obtained at:

  * LICENSE:
    * xds/third_party/envoy/LICENSE (Apache License 2.0)
  * NOTICE:
    * xds/third_party/envoy/NOTICE
  * HOMEPAGE:
    * https://www.envoyproxy.io
  * LOCATION_IN_GRPC:
    * xds/third_party/envoy

This product contains a modified portion of 'gogoprotobuf',
an open source Protocol Buffers support for Go with Gadgets,
which can be obtained at:

  * LICENSE:
    * xds/third_party/gogoproto/LICENSE
  * HOMEPAGE:
    * https://github.com/gogo/protobuf
  * LOCATION_IN_GRPC:
    * xds/third_party/gogoproto

This product contains a modified portion of 'protoc-gen-validate (PGV)',
an open source protoc plugin to generate polyglot message validators,
which can be obtained at:

  * LICENSE:
    * xds/third_party/protoc-gen-validate/LICENSE (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/lyft/protoc-gen-validate
  * LOCATION_IN_GRPC:
    * xds/third_party/protoc-gen-validate

This product contains a modified portion of 'udpa',
an open source universal data plane API, which can be obtained at:

  * LICENSE:
    * xds/third_party/udpa/LICENSE (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/cncf/udpa
  * LOCATION_IN_GRPC:
    * xds/third_party/udpa


com.fasterxml.jackson.dataformat:jackson-dataformat-xml
====================

# Jackson JSON processor

Jackson is a high-performance, Free/Open Source JSON processing library.
It was originally written by Tatu Saloranta (tatu.saloranta@iki.fi), and has
been in development since 2007.
It is currently developed by a community of developers, as well as supported
commercially by FasterXML.com.

## Licensing

Jackson core and extension components may licensed under different licenses.
To find the details that apply to this artifact see the accompanying LICENSE file.
For more information, including possible other licensing options, contact
FasterXML.com (http://fasterxml.com).

## Credits

A list of contributors may be found from CREDITS file, which is included
in some artifacts (usually source distributions); but is always available
from the source code management (SCM) system project uses.


com.jolbox:bonecp
====================

   =========================================================================
   ==  NOTICE file corresponding to the section 4 d of                    ==
   ==  the Apache License, Version 2.0,                                   ==
   ==  in this case for the BoneCP (Java connection pool).                ==
   =========================================================================

   BoneCP
   Copyright 2010 Wallace Wadge

   This product includes software developed by
   Wallace Wadge (http://jolbox.com/).

org.codehaus.jackson:jackson-mapper-asl
====================

This product currently only contains code developed by authors
of specific components, as identified by the source code files;
if such notes are missing files have been created by
Tatu Saloranta.

For additional credits (generally to people who reported problems)
see CREDITS file.


com.google.inject:guice
====================


Google Guice - Core Library
Copyright 2006-2015 Google, Inc.

This product includes software developed at
The Apache Software Foundation (http://www.apache.org/).




com.google.inject.extensions:guice-assistedinject
====================


Google Guice - Extensions - AssistedInject
Copyright 2006-2015 Google, Inc.

This product includes software developed at
The Apache Software Foundation (http://www.apache.org/).




org.codehaus.jackson:jackson-xc
====================

This product currently only contains code developed by authors
of specific components, as identified by the source code files;
if such notes are missing files have been created by
Tatu Saloranta.

For additional credits (generally to people who reported problems)
see CREDITS file.


org.codehaus.jackson:jackson-jaxrs
====================

This product currently only contains code developed by authors
of specific components, as identified by the source code files;
if such notes are missing files have been created by
Tatu Saloranta.

For additional credits (generally to people who reported problems)
see CREDITS file.


com.google.inject.extensions:guice-servlet
====================


Google Guice - Extensions - Servlet
Copyright 2006-2015 Google, Inc.

This product includes software developed at
The Apache Software Foundation (http://www.apache.org/).




org.codehaus.jackson:jackson-core-asl
====================

This product currently only contains code developed by authors
of specific components, as identified by the source code files;
if such notes are missing files have been created by
Tatu Saloranta.

For additional credits (generally to people who reported problems)
see CREDITS file.


org.bouncycastle:bcprov-jdk15on
====================

Copyright (c) 2000 - 2019 The Legion of the Bouncy Castle Inc. (https://www.bouncycastle.org)

Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

Source: https://bouncycastle.org/license.html

ch.qos.reload4j:reload4j
====================

Apache log4j
Copyright 2007 The Apache Software Foundation

This product includes software developed at
The Apache Software Foundation (http://www.apache.org/).


====================
ratis-thirdparty-misc is a shaded dependency which includes additional 3rd party dependencies in shaded form.
For the detailed list of the dependencies and the associated NOTICE file see licenses/NOTICE-ratis-thirdparty-misc.txt.</msg>
<status status="PASS" starttime="20230923 10:29:56.875" endtime="20230923 10:29:56.876"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:29:56.877" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:29:56.876" endtime="20230923 10:29:56.877"/>
</kw>
<status status="PASS" starttime="20230923 10:29:50.349" endtime="20230923 10:29:56.877"/>
</kw>
<msg timestamp="20230923 10:29:56.877" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:29:50.349" endtime="20230923 10:29:56.877"/>
</kw>
<status status="PASS" starttime="20230923 10:29:50.348" endtime="20230923 10:29:56.878"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230923 10:29:50.347" endtime="20230923 10:29:56.879"/>
</test>
<test id="s1-s6-t13" name="Delete file" line="105">
<kw name="Execute" library="os">
<arg>ozone fs -rm -skipTrash ${DEEP_URL}/subdir1/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:29:56.885" level="INFO">Running command 'ozone fs -rm -skipTrash ofs://om/fstest1/34016-bucket1-ofs/test/ofs/dir/subdir1/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:30:01.751" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:30:01.751" level="INFO">${output} = Deleted ofs://om/fstest1/34016-bucket1-ofs/test/ofs/dir/subdir1/NOTICE.txt</msg>
<status status="PASS" starttime="20230923 10:29:56.882" endtime="20230923 10:30:01.751"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:30:01.753" level="INFO">Deleted ofs://om/fstest1/34016-bucket1-ofs/test/ofs/dir/subdir1/NOTICE.txt</msg>
<status status="PASS" starttime="20230923 10:30:01.752" endtime="20230923 10:30:01.753"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:30:01.753" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:30:01.753" endtime="20230923 10:30:01.753"/>
</kw>
<status status="PASS" starttime="20230923 10:29:56.882" endtime="20230923 10:30:01.754"/>
</kw>
<msg timestamp="20230923 10:30:01.754" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:29:56.881" endtime="20230923 10:30:01.754"/>
</kw>
<status status="PASS" starttime="20230923 10:29:56.881" endtime="20230923 10:30:01.754"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:30:01.759" level="INFO">Running command 'ozone sh key list fstest1/34016-bucket1-ofs | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:30:07.344" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:30:07.344" level="INFO">${output} = test/
test/ofs/
test/ofs/dir/
test/ofs/dir/MOVED.TXT
test/ofs/dir/PUTFILE.txt
test/ofs/dir/STREAMING.txt
test/ofs/dir/subdir1/</msg>
<status status="PASS" starttime="20230923 10:30:01.756" endtime="20230923 10:30:07.344"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:30:07.346" level="INFO">test/
test/ofs/
test/ofs/dir/
test/ofs/dir/MOVED.TXT
test/ofs/dir/PUTFILE.txt
test/ofs/dir/STREAMING.txt
test/ofs/dir/subdir1/</msg>
<status status="PASS" starttime="20230923 10:30:07.345" endtime="20230923 10:30:07.346"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:30:07.347" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:30:07.346" endtime="20230923 10:30:07.347"/>
</kw>
<status status="PASS" starttime="20230923 10:30:01.755" endtime="20230923 10:30:07.347"/>
</kw>
<msg timestamp="20230923 10:30:07.347" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:30:01.755" endtime="20230923 10:30:07.347"/>
</kw>
<msg timestamp="20230923 10:30:07.347" level="INFO">${result} = test/
test/ofs/
test/ofs/dir/
test/ofs/dir/MOVED.TXT
test/ofs/dir/PUTFILE.txt
test/ofs/dir/STREAMING.txt
test/ofs/dir/subdir1/</msg>
<status status="PASS" starttime="20230923 10:30:01.754" endtime="20230923 10:30:07.347"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:30:07.347" endtime="20230923 10:30:07.348"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230923 10:29:56.880" endtime="20230923 10:30:07.348"/>
</test>
<test id="s1-s6-t14" name="Delete dir" line="110">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone fs -rmdir ${DEEP_URL}/subdir1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:30:07.354" level="INFO">Running command 'ozone fs -rmdir ofs://om/fstest1/34016-bucket1-ofs/test/ofs/dir/subdir1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:30:12.032" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:30:12.032" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:30:07.351" endtime="20230923 10:30:12.032"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:30:12.034" level="INFO"/>
<status status="PASS" starttime="20230923 10:30:12.033" endtime="20230923 10:30:12.034"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:30:12.035" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:30:12.034" endtime="20230923 10:30:12.035"/>
</kw>
<status status="PASS" starttime="20230923 10:30:07.351" endtime="20230923 10:30:12.035"/>
</kw>
<msg timestamp="20230923 10:30:12.035" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:30:07.350" endtime="20230923 10:30:12.035"/>
</kw>
<msg timestamp="20230923 10:30:12.036" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230923 10:30:07.350" endtime="20230923 10:30:12.036"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:30:12.041" level="INFO">Running command 'ozone sh key list fstest1/34016-bucket1-ofs | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:30:18.335" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:30:18.335" level="INFO">${output} = test/
test/ofs/
test/ofs/dir/
test/ofs/dir/MOVED.TXT
test/ofs/dir/PUTFILE.txt
test/ofs/dir/STREAMING.txt</msg>
<status status="PASS" starttime="20230923 10:30:12.038" endtime="20230923 10:30:18.335"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:30:18.337" level="INFO">test/
test/ofs/
test/ofs/dir/
test/ofs/dir/MOVED.TXT
test/ofs/dir/PUTFILE.txt
test/ofs/dir/STREAMING.txt</msg>
<status status="PASS" starttime="20230923 10:30:18.336" endtime="20230923 10:30:18.337"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:30:18.338" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:30:18.337" endtime="20230923 10:30:18.338"/>
</kw>
<status status="PASS" starttime="20230923 10:30:12.037" endtime="20230923 10:30:18.338"/>
</kw>
<msg timestamp="20230923 10:30:18.338" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:30:12.037" endtime="20230923 10:30:18.338"/>
</kw>
<msg timestamp="20230923 10:30:18.338" level="INFO">${result} = test/
test/ofs/
test/ofs/dir/
test/ofs/dir/MOVED.TXT
test/ofs/dir/PUTFILE.txt
test/ofs/dir/STREAMING.txt</msg>
<status status="PASS" starttime="20230923 10:30:12.036" endtime="20230923 10:30:18.338"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>subdir1</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:30:18.339" endtime="20230923 10:30:18.339"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230923 10:30:07.349" endtime="20230923 10:30:18.340"/>
</test>
<test id="s1-s6-t15" name="Touch file" line="115">
<kw name="Execute" library="os">
<arg>ozone fs -touch ${DEEP_URL}/TOUCHFILE-${SCHEME}.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:30:18.346" level="INFO">Running command 'ozone fs -touch ofs://om/fstest1/34016-bucket1-ofs/test/ofs/dir/TOUCHFILE-ofs.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:30:23.051" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:30:23.052" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:30:18.343" endtime="20230923 10:30:23.052"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:30:23.053" level="INFO"/>
<status status="PASS" starttime="20230923 10:30:23.052" endtime="20230923 10:30:23.053"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:30:23.054" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:30:23.054" endtime="20230923 10:30:23.054"/>
</kw>
<status status="PASS" starttime="20230923 10:30:18.342" endtime="20230923 10:30:23.055"/>
</kw>
<msg timestamp="20230923 10:30:23.055" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:30:18.342" endtime="20230923 10:30:23.055"/>
</kw>
<status status="PASS" starttime="20230923 10:30:18.341" endtime="20230923 10:30:23.055"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:30:23.060" level="INFO">Running command 'ozone sh key list fstest1/34016-bucket1-ofs | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:30:29.191" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:30:29.191" level="INFO">${output} = test/
test/ofs/
test/ofs/dir/
test/ofs/dir/MOVED.TXT
test/ofs/dir/PUTFILE.txt
test/ofs/dir/STREAMING.txt
test/ofs/dir/TOUCHFILE-ofs.txt</msg>
<status status="PASS" starttime="20230923 10:30:23.057" endtime="20230923 10:30:29.191"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:30:29.193" level="INFO">test/
test/ofs/
test/ofs/dir/
test/ofs/dir/MOVED.TXT
test/ofs/dir/PUTFILE.txt
test/ofs/dir/STREAMING.txt
test/ofs/dir/TOUCHFILE-ofs.txt</msg>
<status status="PASS" starttime="20230923 10:30:29.192" endtime="20230923 10:30:29.193"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:30:29.195" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:30:29.194" endtime="20230923 10:30:29.195"/>
</kw>
<status status="PASS" starttime="20230923 10:30:23.056" endtime="20230923 10:30:29.196"/>
</kw>
<msg timestamp="20230923 10:30:29.196" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:30:23.056" endtime="20230923 10:30:29.196"/>
</kw>
<msg timestamp="20230923 10:30:29.196" level="INFO">${result} = test/
test/ofs/
test/ofs/dir/
test/ofs/dir/MOVED.TXT
test/ofs/dir/PUTFILE.txt
test/ofs/dir/STREAMING.txt
test/ofs/dir/TOUCHFILE-ofs.txt</msg>
<status status="PASS" starttime="20230923 10:30:23.055" endtime="20230923 10:30:29.196"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>TOUCHFILE-${SCHEME}.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:30:29.196" endtime="20230923 10:30:29.197"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230923 10:30:18.340" endtime="20230923 10:30:29.197"/>
</test>
<test id="s1-s6-t16" name="Delete file with Trash" line="120">
<kw name="Execute" library="os">
<arg>ozone fs -touch ${DEEP_URL}/testFile.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:30:29.204" level="INFO">Running command 'ozone fs -touch ofs://om/fstest1/34016-bucket1-ofs/test/ofs/dir/testFile.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:30:34.182" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:30:34.182" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:30:29.201" endtime="20230923 10:30:34.182"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:30:34.184" level="INFO"/>
<status status="PASS" starttime="20230923 10:30:34.183" endtime="20230923 10:30:34.184"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:30:34.185" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:30:34.184" endtime="20230923 10:30:34.185"/>
</kw>
<status status="PASS" starttime="20230923 10:30:29.200" endtime="20230923 10:30:34.185"/>
</kw>
<msg timestamp="20230923 10:30:34.185" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:30:29.200" endtime="20230923 10:30:34.186"/>
</kw>
<status status="PASS" starttime="20230923 10:30:29.199" endtime="20230923 10:30:34.186"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -rm ${DEEP_URL}/testFile.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:30:34.191" level="INFO">Running command 'ozone fs -rm ofs://om/fstest1/34016-bucket1-ofs/test/ofs/dir/testFile.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:30:38.929" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:30:38.929" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:30:34.188" endtime="20230923 10:30:38.929"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:30:38.931" level="INFO"/>
<status status="PASS" starttime="20230923 10:30:38.930" endtime="20230923 10:30:38.931"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:30:38.932" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:30:38.931" endtime="20230923 10:30:38.932"/>
</kw>
<status status="PASS" starttime="20230923 10:30:34.187" endtime="20230923 10:30:38.932"/>
</kw>
<msg timestamp="20230923 10:30:38.932" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:30:34.187" endtime="20230923 10:30:38.932"/>
</kw>
<status status="PASS" starttime="20230923 10:30:34.186" endtime="20230923 10:30:38.932"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone fs -ls -R ${BASE_URL}/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:30:38.937" level="INFO">Running command 'ozone fs -ls -R ofs://om/fstest1/34016-bucket1-ofs// 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:30:43.431" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:30:43.431" level="INFO">${output} = drwxrwxrwx   - testuser testuser          0 2023-09-23 10:30 ofs://om/fstest1/34016-bucket1-ofs/.Trash
drwxrwxrwx   - testuser testuser          0 2023-09-23 10:30 ofs://om/fstest1/34016-bucket1-ofs/....</msg>
<status status="PASS" starttime="20230923 10:30:38.934" endtime="20230923 10:30:43.431"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:30:43.433" level="INFO">drwxrwxrwx   - testuser testuser          0 2023-09-23 10:30 ofs://om/fstest1/34016-bucket1-ofs/.Trash
drwxrwxrwx   - testuser testuser          0 2023-09-23 10:30 ofs://om/fstest1/34016-bucket1-ofs/.Trash/testuser
drwxrwxrwx   - testuser testuser          0 2023-09-23 10:30 ofs://om/fstest1/34016-bucket1-ofs/.Trash/testuser/Current
drwxrwxrwx   - testuser testuser          0 2023-09-23 10:30 ofs://om/fstest1/34016-bucket1-ofs/.Trash/testuser/Current/test
drwxrwxrwx   - testuser testuser          0 2023-09-23 10:30 ofs://om/fstest1/34016-bucket1-ofs/.Trash/testuser/Current/test/ofs
drwxrwxrwx   - testuser testuser          0 2023-09-23 10:30 ofs://om/fstest1/34016-bucket1-ofs/.Trash/testuser/Current/test/ofs/dir
-rw-rw-rw-   3 testuser testuser          0 2023-09-23 10:30 ofs://om/fstest1/34016-bucket1-ofs/.Trash/testuser/Current/test/ofs/dir/testFile.txt
drwxrwxrwx   - testuser testuser          0 2023-09-23 10:27 ofs://om/fstest1/34016-bucket1-ofs/test
drwxrwxrwx   - testuser testuser          0 2023-09-23 10:27 ofs://om/fstest1/34016-bucket1-ofs/test/ofs
drwxrwxrwx   - testuser testuser          0 2023-09-23 10:30 ofs://om/fstest1/34016-bucket1-ofs/test/ofs/dir
-rw-rw-rw-   3 testuser testuser      17289 2023-09-23 10:28 ofs://om/fstest1/34016-bucket1-ofs/test/ofs/dir/MOVED.TXT
-rw-rw-rw-   3 testuser testuser      17289 2023-09-23 10:28 ofs://om/fstest1/34016-bucket1-ofs/test/ofs/dir/PUTFILE.txt
-rw-rw-rw-   3 testuser testuser      17289 2023-09-23 10:29 ofs://om/fstest1/34016-bucket1-ofs/test/ofs/dir/STREAMING.txt
-rw-rw-rw-   3 testuser testuser          0 2023-09-23 10:30 ofs://om/fstest1/34016-bucket1-ofs/test/ofs/dir/TOUCHFILE-ofs.txt</msg>
<status status="PASS" starttime="20230923 10:30:43.432" endtime="20230923 10:30:43.433"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:30:43.434" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:30:43.433" endtime="20230923 10:30:43.434"/>
</kw>
<status status="PASS" starttime="20230923 10:30:38.934" endtime="20230923 10:30:43.435"/>
</kw>
<msg timestamp="20230923 10:30:43.435" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:30:38.933" endtime="20230923 10:30:43.435"/>
</kw>
<msg timestamp="20230923 10:30:43.435" level="INFO">${result} = drwxrwxrwx   - testuser testuser          0 2023-09-23 10:30 ofs://om/fstest1/34016-bucket1-ofs/.Trash
drwxrwxrwx   - testuser testuser          0 2023-09-23 10:30 ofs://om/fstest1/34016-bucket1-ofs/....</msg>
<status status="PASS" starttime="20230923 10:30:38.933" endtime="20230923 10:30:43.435"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${DEEP_URL}/testFile.txt</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:30:43.435" endtime="20230923 10:30:43.436"/>
</kw>
<kw name="Should Contain Any" library="BuiltIn">
<arg>${result}</arg>
<arg>.Trash/hadoop</arg>
<arg>.Trash/testuser</arg>
<arg>.Trash/root</arg>
<doc>Fails if ``container`` does not contain any of the ``*items``.</doc>
<status status="PASS" starttime="20230923 10:30:43.436" endtime="20230923 10:30:43.437"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${DEEP_DIR}/testFile.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:30:43.437" endtime="20230923 10:30:43.437"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230923 10:30:29.198" endtime="20230923 10:30:43.437"/>
</test>
<test id="s1-s6-t17" name="Delete recursively" line="128">
<kw name="Execute" library="os">
<arg>ozone fs -mkdir -p ${DEEP_URL}/subdir2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:30:43.444" level="INFO">Running command 'ozone fs -mkdir -p ofs://om/fstest1/34016-bucket1-ofs/test/ofs/dir/subdir2 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:30:48.158" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:30:48.158" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:30:43.441" endtime="20230923 10:30:48.158"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:30:48.160" level="INFO"/>
<status status="PASS" starttime="20230923 10:30:48.159" endtime="20230923 10:30:48.160"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:30:48.161" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:30:48.160" endtime="20230923 10:30:48.161"/>
</kw>
<status status="PASS" starttime="20230923 10:30:43.440" endtime="20230923 10:30:48.161"/>
</kw>
<msg timestamp="20230923 10:30:48.161" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:30:43.440" endtime="20230923 10:30:48.162"/>
</kw>
<status status="PASS" starttime="20230923 10:30:43.439" endtime="20230923 10:30:48.162"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -rm -skipTrash -r ${DEEP_URL}/subdir2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:30:48.167" level="INFO">Running command 'ozone fs -rm -skipTrash -r ofs://om/fstest1/34016-bucket1-ofs/test/ofs/dir/subdir2 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:30:52.789" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:30:52.789" level="INFO">${output} = Deleted ofs://om/fstest1/34016-bucket1-ofs/test/ofs/dir/subdir2</msg>
<status status="PASS" starttime="20230923 10:30:48.164" endtime="20230923 10:30:52.789"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:30:52.790" level="INFO">Deleted ofs://om/fstest1/34016-bucket1-ofs/test/ofs/dir/subdir2</msg>
<status status="PASS" starttime="20230923 10:30:52.789" endtime="20230923 10:30:52.790"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:30:52.791" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:30:52.790" endtime="20230923 10:30:52.791"/>
</kw>
<status status="PASS" starttime="20230923 10:30:48.163" endtime="20230923 10:30:52.791"/>
</kw>
<msg timestamp="20230923 10:30:52.791" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:30:48.163" endtime="20230923 10:30:52.791"/>
</kw>
<status status="PASS" starttime="20230923 10:30:48.162" endtime="20230923 10:30:52.791"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:30:52.796" level="INFO">Running command 'ozone sh key list fstest1/34016-bucket1-ofs | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:30:59.052" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:30:59.052" level="INFO">${output} = .Trash/
.Trash/testuser/
.Trash/testuser/Current/
.Trash/testuser/Current/test/
.Trash/testuser/Current/test/ofs/
.Trash/testuser/Current/test/ofs/dir/
.Trash/testuser/Current/test/ofs/dir/testFile.tx...</msg>
<status status="PASS" starttime="20230923 10:30:52.794" endtime="20230923 10:30:59.052"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:30:59.054" level="INFO">.Trash/
.Trash/testuser/
.Trash/testuser/Current/
.Trash/testuser/Current/test/
.Trash/testuser/Current/test/ofs/
.Trash/testuser/Current/test/ofs/dir/
.Trash/testuser/Current/test/ofs/dir/testFile.txt
test/
test/ofs/
test/ofs/dir/
test/ofs/dir/MOVED.TXT
test/ofs/dir/PUTFILE.txt
test/ofs/dir/STREAMING.txt
test/ofs/dir/TOUCHFILE-ofs.txt</msg>
<status status="PASS" starttime="20230923 10:30:59.053" endtime="20230923 10:30:59.054"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:30:59.054" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:30:59.054" endtime="20230923 10:30:59.054"/>
</kw>
<status status="PASS" starttime="20230923 10:30:52.793" endtime="20230923 10:30:59.055"/>
</kw>
<msg timestamp="20230923 10:30:59.055" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:30:52.793" endtime="20230923 10:30:59.055"/>
</kw>
<msg timestamp="20230923 10:30:59.055" level="INFO">${result} = .Trash/
.Trash/testuser/
.Trash/testuser/Current/
.Trash/testuser/Current/test/
.Trash/testuser/Current/test/ofs/
.Trash/testuser/Current/test/ofs/dir/
.Trash/testuser/Current/test/ofs/dir/testFile.tx...</msg>
<status status="PASS" starttime="20230923 10:30:52.792" endtime="20230923 10:30:59.055"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${DEEP_DIR}/subdir2</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:30:59.055" endtime="20230923 10:30:59.056"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230923 10:30:43.438" endtime="20230923 10:30:59.056"/>
</test>
<test id="s1-s6-t18" name="List recursively" line="134">
<kw name="Setup localdir1" type="SETUP">
<kw name="Execute" library="os">
<arg>rm -Rf /tmp/localdir1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:30:59.062" level="INFO">Running command 'rm -Rf /tmp/localdir1 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:30:59.066" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:30:59.066" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:30:59.060" endtime="20230923 10:30:59.066"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:30:59.067" level="INFO"/>
<status status="PASS" starttime="20230923 10:30:59.067" endtime="20230923 10:30:59.067"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:30:59.068" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:30:59.068" endtime="20230923 10:30:59.068"/>
</kw>
<status status="PASS" starttime="20230923 10:30:59.059" endtime="20230923 10:30:59.069"/>
</kw>
<msg timestamp="20230923 10:30:59.069" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:30:59.058" endtime="20230923 10:30:59.069"/>
</kw>
<status status="PASS" starttime="20230923 10:30:59.058" endtime="20230923 10:30:59.069"/>
</kw>
<kw name="Execute" library="os">
<arg>mkdir /tmp/localdir1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:30:59.073" level="INFO">Running command 'mkdir /tmp/localdir1 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:30:59.076" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:30:59.077" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:30:59.071" endtime="20230923 10:30:59.077"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:30:59.078" level="INFO"/>
<status status="PASS" starttime="20230923 10:30:59.077" endtime="20230923 10:30:59.078"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:30:59.078" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:30:59.078" endtime="20230923 10:30:59.079"/>
</kw>
<status status="PASS" starttime="20230923 10:30:59.070" endtime="20230923 10:30:59.079"/>
</kw>
<msg timestamp="20230923 10:30:59.079" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:30:59.070" endtime="20230923 10:30:59.079"/>
</kw>
<status status="PASS" starttime="20230923 10:30:59.069" endtime="20230923 10:30:59.079"/>
</kw>
<kw name="Execute" library="os">
<arg>cp NOTICE.txt /tmp/localdir1/LOCAL.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:30:59.083" level="INFO">Running command 'cp NOTICE.txt /tmp/localdir1/LOCAL.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:30:59.088" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:30:59.088" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:30:59.081" endtime="20230923 10:30:59.088"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:30:59.089" level="INFO"/>
<status status="PASS" starttime="20230923 10:30:59.088" endtime="20230923 10:30:59.089"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:30:59.090" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:30:59.089" endtime="20230923 10:30:59.090"/>
</kw>
<status status="PASS" starttime="20230923 10:30:59.080" endtime="20230923 10:30:59.090"/>
</kw>
<msg timestamp="20230923 10:30:59.090" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:30:59.080" endtime="20230923 10:30:59.091"/>
</kw>
<status status="PASS" starttime="20230923 10:30:59.079" endtime="20230923 10:30:59.091"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -mkdir -p ${BASE_URL}testdir1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:30:59.095" level="INFO">Running command 'ozone fs -mkdir -p ofs://om/fstest1/34016-bucket1-ofs/testdir1 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:31:03.595" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:31:03.596" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:30:59.092" endtime="20230923 10:31:03.596"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:31:03.597" level="INFO"/>
<status status="PASS" starttime="20230923 10:31:03.596" endtime="20230923 10:31:03.597"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:31:03.598" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:31:03.597" endtime="20230923 10:31:03.598"/>
</kw>
<status status="PASS" starttime="20230923 10:30:59.092" endtime="20230923 10:31:03.598"/>
</kw>
<msg timestamp="20230923 10:31:03.598" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:30:59.091" endtime="20230923 10:31:03.599"/>
</kw>
<status status="PASS" starttime="20230923 10:30:59.091" endtime="20230923 10:31:03.599"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -copyFromLocal /tmp/localdir1 ${BASE_URL}testdir1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:31:03.604" level="INFO">Running command 'ozone fs -copyFromLocal /tmp/localdir1 ofs://om/fstest1/34016-bucket1-ofs/testdir1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:31:10.771" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:31:10.771" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:31:03.601" endtime="20230923 10:31:10.771"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:31:10.774" level="INFO"/>
<status status="PASS" starttime="20230923 10:31:10.771" endtime="20230923 10:31:10.774"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:31:10.774" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:31:10.774" endtime="20230923 10:31:10.775"/>
</kw>
<status status="PASS" starttime="20230923 10:31:03.600" endtime="20230923 10:31:10.775"/>
</kw>
<msg timestamp="20230923 10:31:10.775" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:31:03.600" endtime="20230923 10:31:10.775"/>
</kw>
<status status="PASS" starttime="20230923 10:31:03.599" endtime="20230923 10:31:10.775"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -put NOTICE.txt ${BASE_URL}testdir1/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:31:10.780" level="INFO">Running command 'ozone fs -put NOTICE.txt ofs://om/fstest1/34016-bucket1-ofs/testdir1/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:31:18.216" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:31:18.216" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:31:10.777" endtime="20230923 10:31:18.217"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:31:18.218" level="INFO"/>
<status status="PASS" starttime="20230923 10:31:18.217" endtime="20230923 10:31:18.218"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:31:18.219" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:31:18.218" endtime="20230923 10:31:18.219"/>
</kw>
<status status="PASS" starttime="20230923 10:31:10.776" endtime="20230923 10:31:18.219"/>
</kw>
<msg timestamp="20230923 10:31:18.219" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:31:10.776" endtime="20230923 10:31:18.219"/>
</kw>
<status status="PASS" starttime="20230923 10:31:10.775" endtime="20230923 10:31:18.219"/>
</kw>
<status status="PASS" starttime="20230923 10:30:59.058" endtime="20230923 10:31:18.220"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone fs -ls -R ${BASE_URL}testdir1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:31:18.224" level="INFO">Running command 'ozone fs -ls -R ofs://om/fstest1/34016-bucket1-ofs/testdir1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:31:23.069" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:31:23.069" level="INFO">${output} = -rw-rw-rw-   3 testuser testuser      17289 2023-09-23 10:31 ofs://om/fstest1/34016-bucket1-ofs/testdir1/NOTICE.txt
drwxrwxrwx   - testuser testuser          0 2023-09-23 10:31 ofs://om/fstest1/34016-...</msg>
<status status="PASS" starttime="20230923 10:31:18.221" endtime="20230923 10:31:23.069"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:31:23.070" level="INFO">-rw-rw-rw-   3 testuser testuser      17289 2023-09-23 10:31 ofs://om/fstest1/34016-bucket1-ofs/testdir1/NOTICE.txt
drwxrwxrwx   - testuser testuser          0 2023-09-23 10:31 ofs://om/fstest1/34016-bucket1-ofs/testdir1/localdir1
-rw-rw-rw-   3 testuser testuser      17289 2023-09-23 10:31 ofs://om/fstest1/34016-bucket1-ofs/testdir1/localdir1/LOCAL.txt</msg>
<status status="PASS" starttime="20230923 10:31:23.070" endtime="20230923 10:31:23.071"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:31:23.071" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:31:23.071" endtime="20230923 10:31:23.071"/>
</kw>
<status status="PASS" starttime="20230923 10:31:18.221" endtime="20230923 10:31:23.072"/>
</kw>
<msg timestamp="20230923 10:31:23.072" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:31:18.220" endtime="20230923 10:31:23.072"/>
</kw>
<msg timestamp="20230923 10:31:23.072" level="INFO">${result} = -rw-rw-rw-   3 testuser testuser      17289 2023-09-23 10:31 ofs://om/fstest1/34016-bucket1-ofs/testdir1/NOTICE.txt
drwxrwxrwx   - testuser testuser          0 2023-09-23 10:31 ofs://om/fstest1/34016-...</msg>
<status status="PASS" starttime="20230923 10:31:18.220" endtime="20230923 10:31:23.072"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>localdir1/LOCAL.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:31:23.072" endtime="20230923 10:31:23.073"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>testdir1/NOTICE.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:31:23.073" endtime="20230923 10:31:23.073"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230923 10:30:59.057" endtime="20230923 10:31:23.073"/>
</test>
<test id="s1-s6-t19" name="Copy to other bucket" line="140">
<kw name="Format FS URL" library="fs">
<var>${target}</var>
<arg>${SCHEME}</arg>
<arg>${VOLUME}</arg>
<arg>${BUCKET2}</arg>
<arg>testdir2</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20230923 10:31:23.081" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20230923 10:31:23.081" endtime="20230923 10:31:23.081"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230923 10:31:23.082" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20230923 10:31:23.081" endtime="20230923 10:31:23.082"/>
</kw>
<status status="PASS" starttime="20230923 10:31:23.080" endtime="20230923 10:31:23.082"/>
</kw>
<msg timestamp="20230923 10:31:23.082" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20230923 10:31:23.078" endtime="20230923 10:31:23.082"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>/</arg>
<arg>${path}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20230923 10:31:23.084" level="INFO">${first} = t</msg>
<status status="PASS" starttime="20230923 10:31:23.084" endtime="20230923 10:31:23.084"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230923 10:31:23.085" level="INFO">${result} = /testdir2</msg>
<status status="PASS" starttime="20230923 10:31:23.085" endtime="20230923 10:31:23.085"/>
</kw>
<status status="PASS" starttime="20230923 10:31:23.083" endtime="20230923 10:31:23.085"/>
</kw>
<msg timestamp="20230923 10:31:23.085" level="INFO">${path_with_leading} = /testdir2</msg>
<status status="PASS" starttime="20230923 10:31:23.082" endtime="20230923 10:31:23.085"/>
</kw>
<status status="PASS" starttime="20230923 10:31:23.078" endtime="20230923 10:31:23.086"/>
</kw>
<msg timestamp="20230923 10:31:23.086" level="INFO">${url} = ofs://om/fstest1/34016-bucket2-ofs/testdir2</msg>
<status status="PASS" starttime="20230923 10:31:23.077" endtime="20230923 10:31:23.086"/>
</kw>
<msg timestamp="20230923 10:31:23.086" level="INFO">${target} = ofs://om/fstest1/34016-bucket2-ofs/testdir2</msg>
<status status="PASS" starttime="20230923 10:31:23.076" endtime="20230923 10:31:23.086"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -mkdir -p ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:31:23.090" level="INFO">Running command 'ozone fs -mkdir -p ofs://om/fstest1/34016-bucket2-ofs/testdir2 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:31:27.642" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:31:27.642" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:31:23.087" endtime="20230923 10:31:27.642"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:31:27.644" level="INFO"/>
<status status="PASS" starttime="20230923 10:31:27.643" endtime="20230923 10:31:27.644"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:31:27.645" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:31:27.644" endtime="20230923 10:31:27.645"/>
</kw>
<status status="PASS" starttime="20230923 10:31:23.087" endtime="20230923 10:31:27.645"/>
</kw>
<msg timestamp="20230923 10:31:27.645" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:31:23.087" endtime="20230923 10:31:27.645"/>
</kw>
<status status="PASS" starttime="20230923 10:31:23.086" endtime="20230923 10:31:27.645"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -cp ${BASE_URL}/testdir1/localdir1 ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:31:27.666" level="INFO">Running command 'ozone fs -cp ofs://om/fstest1/34016-bucket1-ofs//testdir1/localdir1 ofs://om/fstest1/34016-bucket2-ofs/testdir2 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:31:35.399" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:31:35.399" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:31:27.663" endtime="20230923 10:31:35.400"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:31:35.401" level="INFO"/>
<status status="PASS" starttime="20230923 10:31:35.400" endtime="20230923 10:31:35.401"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:31:35.402" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:31:35.401" endtime="20230923 10:31:35.402"/>
</kw>
<status status="PASS" starttime="20230923 10:31:27.662" endtime="20230923 10:31:35.402"/>
</kw>
<msg timestamp="20230923 10:31:35.402" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:31:27.646" endtime="20230923 10:31:35.402"/>
</kw>
<status status="PASS" starttime="20230923 10:31:27.646" endtime="20230923 10:31:35.402"/>
</kw>
<kw name="Execute" library="os" type="TEARDOWN">
<arg>ozone fs -rm -r ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:31:35.408" level="INFO">Running command 'ozone fs -rm -r ofs://om/fstest1/34016-bucket2-ofs/testdir2 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:31:39.957" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:31:39.958" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:31:35.405" endtime="20230923 10:31:39.958"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:31:39.959" level="INFO"/>
<status status="PASS" starttime="20230923 10:31:39.958" endtime="20230923 10:31:39.959"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:31:39.960" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:31:39.959" endtime="20230923 10:31:39.960"/>
</kw>
<status status="PASS" starttime="20230923 10:31:35.404" endtime="20230923 10:31:39.960"/>
</kw>
<msg timestamp="20230923 10:31:39.960" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:31:35.404" endtime="20230923 10:31:39.961"/>
</kw>
<status status="PASS" starttime="20230923 10:31:35.403" endtime="20230923 10:31:39.961"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230923 10:31:23.074" endtime="20230923 10:31:39.961"/>
</test>
<test id="s1-s6-t20" name="Copy to other volume" line="146">
<kw name="Format FS URL" library="fs">
<var>${target}</var>
<arg>${SCHEME}</arg>
<arg>${VOL2}</arg>
<arg>${BUCKET_IN_VOL2}</arg>
<arg>testdir3</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20230923 10:31:39.968" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20230923 10:31:39.967" endtime="20230923 10:31:39.968"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230923 10:31:39.969" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20230923 10:31:39.968" endtime="20230923 10:31:39.969"/>
</kw>
<status status="PASS" starttime="20230923 10:31:39.967" endtime="20230923 10:31:39.969"/>
</kw>
<msg timestamp="20230923 10:31:39.969" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20230923 10:31:39.965" endtime="20230923 10:31:39.969"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>/</arg>
<arg>${path}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20230923 10:31:39.971" level="INFO">${first} = t</msg>
<status status="PASS" starttime="20230923 10:31:39.971" endtime="20230923 10:31:39.972"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230923 10:31:39.972" level="INFO">${result} = /testdir3</msg>
<status status="PASS" starttime="20230923 10:31:39.972" endtime="20230923 10:31:39.972"/>
</kw>
<status status="PASS" starttime="20230923 10:31:39.970" endtime="20230923 10:31:39.972"/>
</kw>
<msg timestamp="20230923 10:31:39.972" level="INFO">${path_with_leading} = /testdir3</msg>
<status status="PASS" starttime="20230923 10:31:39.969" endtime="20230923 10:31:39.973"/>
</kw>
<status status="PASS" starttime="20230923 10:31:39.965" endtime="20230923 10:31:39.973"/>
</kw>
<msg timestamp="20230923 10:31:39.973" level="INFO">${url} = ofs://om/fstest2/34016-bucket3-ofs/testdir3</msg>
<status status="PASS" starttime="20230923 10:31:39.964" endtime="20230923 10:31:39.973"/>
</kw>
<msg timestamp="20230923 10:31:39.973" level="INFO">${target} = ofs://om/fstest2/34016-bucket3-ofs/testdir3</msg>
<status status="PASS" starttime="20230923 10:31:39.963" endtime="20230923 10:31:39.973"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -mkdir -p ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:31:39.977" level="INFO">Running command 'ozone fs -mkdir -p ofs://om/fstest2/34016-bucket3-ofs/testdir3 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:31:44.569" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:31:44.569" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:31:39.975" endtime="20230923 10:31:44.569"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:31:44.571" level="INFO"/>
<status status="PASS" starttime="20230923 10:31:44.570" endtime="20230923 10:31:44.571"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:31:44.572" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:31:44.571" endtime="20230923 10:31:44.572"/>
</kw>
<status status="PASS" starttime="20230923 10:31:39.974" endtime="20230923 10:31:44.572"/>
</kw>
<msg timestamp="20230923 10:31:44.572" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:31:39.974" endtime="20230923 10:31:44.573"/>
</kw>
<status status="PASS" starttime="20230923 10:31:39.973" endtime="20230923 10:31:44.573"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -cp ${BASE_URL}/testdir1/localdir1 ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:31:44.577" level="INFO">Running command 'ozone fs -cp ofs://om/fstest1/34016-bucket1-ofs//testdir1/localdir1 ofs://om/fstest2/34016-bucket3-ofs/testdir3 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:31:52.019" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:31:52.019" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:31:44.575" endtime="20230923 10:31:52.019"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:31:52.021" level="INFO"/>
<status status="PASS" starttime="20230923 10:31:52.019" endtime="20230923 10:31:52.021"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:31:52.021" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:31:52.021" endtime="20230923 10:31:52.022"/>
</kw>
<status status="PASS" starttime="20230923 10:31:44.574" endtime="20230923 10:31:52.022"/>
</kw>
<msg timestamp="20230923 10:31:52.022" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:31:44.574" endtime="20230923 10:31:52.022"/>
</kw>
<status status="PASS" starttime="20230923 10:31:44.573" endtime="20230923 10:31:52.022"/>
</kw>
<kw name="Execute" library="os" type="TEARDOWN">
<arg>ozone fs -rm -r ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:31:52.027" level="INFO">Running command 'ozone fs -rm -r ofs://om/fstest2/34016-bucket3-ofs/testdir3 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:31:57.023" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:31:57.023" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:31:52.024" endtime="20230923 10:31:57.023"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:31:57.025" level="INFO"/>
<status status="PASS" starttime="20230923 10:31:57.024" endtime="20230923 10:31:57.025"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:31:57.025" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:31:57.025" endtime="20230923 10:31:57.025"/>
</kw>
<status status="PASS" starttime="20230923 10:31:52.023" endtime="20230923 10:31:57.025"/>
</kw>
<msg timestamp="20230923 10:31:57.026" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:31:52.023" endtime="20230923 10:31:57.026"/>
</kw>
<status status="PASS" starttime="20230923 10:31:52.022" endtime="20230923 10:31:57.026"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230923 10:31:39.962" endtime="20230923 10:31:57.026"/>
</test>
<test id="s1-s6-t21" name="List file created via shell" line="152">
<kw name="Execute" library="os" type="SETUP">
<arg>ozone sh key put ${VOLUME}/${BUCKET}/${SCHEME}.txt NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:31:57.033" level="INFO">Running command 'ozone sh key put fstest1/34016-bucket1-ofs/ofs.txt NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:32:05.230" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:32:05.230" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:31:57.030" endtime="20230923 10:32:05.230"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:32:05.231" level="INFO"/>
<status status="PASS" starttime="20230923 10:32:05.230" endtime="20230923 10:32:05.231"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:32:05.233" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:32:05.232" endtime="20230923 10:32:05.233"/>
</kw>
<status status="PASS" starttime="20230923 10:31:57.029" endtime="20230923 10:32:05.233"/>
</kw>
<msg timestamp="20230923 10:32:05.233" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:31:57.029" endtime="20230923 10:32:05.233"/>
</kw>
<status status="PASS" starttime="20230923 10:31:57.028" endtime="20230923 10:32:05.233"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone fs -ls ${BASE_URL}${SCHEME}.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:32:05.238" level="INFO">Running command 'ozone fs -ls ofs://om/fstest1/34016-bucket1-ofs/ofs.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:32:10.072" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:32:10.073" level="INFO">${output} = -rw-rw-rw-   3 testuser testuser      17289 2023-09-23 10:32 ofs://om/fstest1/34016-bucket1-ofs/ofs.txt</msg>
<status status="PASS" starttime="20230923 10:32:05.235" endtime="20230923 10:32:10.073"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:32:10.074" level="INFO">-rw-rw-rw-   3 testuser testuser      17289 2023-09-23 10:32 ofs://om/fstest1/34016-bucket1-ofs/ofs.txt</msg>
<status status="PASS" starttime="20230923 10:32:10.073" endtime="20230923 10:32:10.074"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:32:10.075" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:32:10.075" endtime="20230923 10:32:10.075"/>
</kw>
<status status="PASS" starttime="20230923 10:32:05.234" endtime="20230923 10:32:10.076"/>
</kw>
<msg timestamp="20230923 10:32:10.076" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:32:05.234" endtime="20230923 10:32:10.076"/>
</kw>
<msg timestamp="20230923 10:32:10.076" level="INFO">${result} = -rw-rw-rw-   3 testuser testuser      17289 2023-09-23 10:32 ofs://om/fstest1/34016-bucket1-ofs/ofs.txt</msg>
<status status="PASS" starttime="20230923 10:32:05.233" endtime="20230923 10:32:10.076"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${SCHEME}.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:32:10.076" endtime="20230923 10:32:10.077"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230923 10:31:57.027" endtime="20230923 10:32:10.077"/>
</test>
<test id="s1-s6-t22" name="Reject overwrite existing" line="157">
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone fs -copyFromLocal NOTICE.txt ${BASE_URL}${SCHEME}.txt</arg>
<arg>1</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:32:10.084" level="INFO">Running command 'ozone fs -copyFromLocal NOTICE.txt ofs://om/fstest1/34016-bucket1-ofs/ofs.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:32:14.825" level="INFO">${rc} = 1</msg>
<msg timestamp="20230923 10:32:14.825" level="INFO">${output} = copyFromLocal: `ofs://om/fstest1/34016-bucket1-ofs/ofs.txt': File exists</msg>
<status status="PASS" starttime="20230923 10:32:10.081" endtime="20230923 10:32:14.825"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:32:14.827" level="INFO">copyFromLocal: `ofs://om/fstest1/34016-bucket1-ofs/ofs.txt': File exists</msg>
<status status="PASS" starttime="20230923 10:32:14.826" endtime="20230923 10:32:14.827"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:32:14.828" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:32:14.827" endtime="20230923 10:32:14.828"/>
</kw>
<msg timestamp="20230923 10:32:14.828" level="INFO">${result} = copyFromLocal: `ofs://om/fstest1/34016-bucket1-ofs/ofs.txt': File exists</msg>
<status status="PASS" starttime="20230923 10:32:10.080" endtime="20230923 10:32:14.828"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>File exists</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:32:14.828" endtime="20230923 10:32:14.829"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230923 10:32:10.079" endtime="20230923 10:32:14.829"/>
</test>
<test id="s1-s6-t23" name="Get file" line="161">
<kw name="Execute" library="os" type="SETUP">
<arg>rm -Rf /tmp/GET.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:32:14.836" level="INFO">Running command 'rm -Rf /tmp/GET.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:32:14.839" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:32:14.839" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:32:14.833" endtime="20230923 10:32:14.839"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:32:14.841" level="INFO"/>
<status status="PASS" starttime="20230923 10:32:14.840" endtime="20230923 10:32:14.841"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:32:14.841" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:32:14.841" endtime="20230923 10:32:14.841"/>
</kw>
<status status="PASS" starttime="20230923 10:32:14.832" endtime="20230923 10:32:14.842"/>
</kw>
<msg timestamp="20230923 10:32:14.842" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:32:14.832" endtime="20230923 10:32:14.842"/>
</kw>
<status status="PASS" starttime="20230923 10:32:14.831" endtime="20230923 10:32:14.842"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -get ${BASE_URL}${SCHEME}.txt /tmp/GET.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:32:14.846" level="INFO">Running command 'ozone fs -get ofs://om/fstest1/34016-bucket1-ofs/ofs.txt /tmp/GET.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:32:21.669" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:32:21.669" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:32:14.844" endtime="20230923 10:32:21.669"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:32:21.670" level="INFO"/>
<status status="PASS" starttime="20230923 10:32:21.670" endtime="20230923 10:32:21.670"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:32:21.671" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:32:21.671" endtime="20230923 10:32:21.671"/>
</kw>
<status status="PASS" starttime="20230923 10:32:14.843" endtime="20230923 10:32:21.671"/>
</kw>
<msg timestamp="20230923 10:32:21.671" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:32:14.843" endtime="20230923 10:32:21.672"/>
</kw>
<status status="PASS" starttime="20230923 10:32:14.842" endtime="20230923 10:32:21.672"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>/tmp/GET.txt</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20230923 10:32:21.672" level="INFO" html="true">File '&lt;a href="file:///tmp/GET.txt"&gt;/tmp/GET.txt&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230923 10:32:21.672" endtime="20230923 10:32:21.672"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230923 10:32:14.830" endtime="20230923 10:32:21.673"/>
</test>
<doc>Ozone FS tests</doc>
<status status="PASS" starttime="20230923 10:26:59.984" endtime="20230923 10:32:21.675"/>
</suite>
<suite id="s1-s7" name="Recon" source="/opt/hadoop/smoketest/recon">
<suite id="s1-s7-s1" name="Recon-Api" source="/opt/hadoop/smoketest/recon/recon-api.robot">
<test id="s1-s7-s1-t1" name="Check if Recon picks up OM data" line="61">
<kw name="Execute" library="os">
<arg>ozone sh volume create recon</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:32:25.309" level="INFO">Running command 'ozone sh volume create recon 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:32:31.009" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:32:31.010" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:32:25.306" endtime="20230923 10:32:31.010"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:32:31.011" level="INFO"/>
<status status="PASS" starttime="20230923 10:32:31.010" endtime="20230923 10:32:31.011"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:32:31.012" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:32:31.011" endtime="20230923 10:32:31.012"/>
</kw>
<status status="PASS" starttime="20230923 10:32:25.306" endtime="20230923 10:32:31.012"/>
</kw>
<msg timestamp="20230923 10:32:31.012" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:32:25.305" endtime="20230923 10:32:31.012"/>
</kw>
<status status="PASS" starttime="20230923 10:32:25.305" endtime="20230923 10:32:31.012"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create recon/api --layout=LEGACY</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:32:31.019" level="INFO">Running command 'ozone sh bucket create recon/api --layout=LEGACY 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:32:36.588" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:32:36.588" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:32:31.015" endtime="20230923 10:32:36.588"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:32:36.589" level="INFO"/>
<status status="PASS" starttime="20230923 10:32:36.588" endtime="20230923 10:32:36.590"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:32:36.590" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:32:36.590" endtime="20230923 10:32:36.590"/>
</kw>
<status status="PASS" starttime="20230923 10:32:31.014" endtime="20230923 10:32:36.591"/>
</kw>
<msg timestamp="20230923 10:32:36.591" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:32:31.013" endtime="20230923 10:32:36.591"/>
</kw>
<status status="PASS" starttime="20230923 10:32:31.013" endtime="20230923 10:32:36.591"/>
</kw>
<kw name="Freon OCKG" library="freon">
<arg>n=10</arg>
<arg>args=-s 1025 -v recon -b api</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:32:36.596" level="INFO">Running command 'ozone freon ockg  -t 1 -n10 -p ockg -s 1025 -v recon -b api 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:32:45.867" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:32:45.867" level="INFO">${output} = 2023-09-23 10:32:39,073 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-23 10:32:39,188 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230923 10:32:36.593" endtime="20230923 10:32:45.867"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:32:45.868" level="INFO">2023-09-23 10:32:39,073 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-23 10:32:39,188 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-09-23 10:32:39,188 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-09-23 10:32:39,269 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ockg and number-of-tests 10
2023-09-23 10:32:39,328 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2023-09-23 10:32:40,330 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2023-09-23 10:32:41,331 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2023-09-23 10:32:42,078 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2023-09-23 10:32:42,128 [pool-2-thread-1] INFO netty.NettyConfigKeys$DataStream: setTlsConf GrpcTlsConfig0-
2023-09-23 10:32:42,332 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2023-09-23 10:32:42,410 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2023-09-23 10:32:43,332 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2023-09-23 10:32:44,333 [Thread-5] INFO freon.ProgressBar: Progress: 80.00 % (8 out of 10)
2023-09-23 10:32:45,334 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (10 out of 10)
2023-09-23 10:32:45,499 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=10, min=85.558115, max=1788.587042, mean=269.5931811828625, stddev=504.4153358971848, median=96.137545, p75=124.078838, p95=1788.587042, p98=1788.587042, p99=1788.587042, p999=1788.587042, mean_rate=2.6524977859985595, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-09-23 10:32:45,499 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 6
2023-09-23 10:32:45,500 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-09-23 10:32:45,500 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 10</msg>
<status status="PASS" starttime="20230923 10:32:45.867" endtime="20230923 10:32:45.868"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:32:45.869" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:32:45.868" endtime="20230923 10:32:45.869"/>
</kw>
<status status="PASS" starttime="20230923 10:32:36.593" endtime="20230923 10:32:45.869"/>
</kw>
<msg timestamp="20230923 10:32:45.869" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:32:36.592" endtime="20230923 10:32:45.870"/>
</kw>
<msg timestamp="20230923 10:32:45.870" level="INFO">${result} = 2023-09-23 10:32:39,073 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-23 10:32:39,188 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230923 10:32:36.592" endtime="20230923 10:32:45.870"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:32:45.870" endtime="20230923 10:32:45.870"/>
</kw>
<status status="PASS" starttime="20230923 10:32:36.591" endtime="20230923 10:32:45.871"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Check if Recon picks up container from OM</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit as ozone admin</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:32:45.878" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:32:45.882" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:32:45.882" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230923 10:32:45.875" endtime="20230923 10:32:45.882"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:32:45.883" level="INFO">scm</msg>
<status status="PASS" starttime="20230923 10:32:45.883" endtime="20230923 10:32:45.883"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:32:45.884" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:32:45.884" endtime="20230923 10:32:45.884"/>
</kw>
<status status="PASS" starttime="20230923 10:32:45.875" endtime="20230923 10:32:45.885"/>
</kw>
<msg timestamp="20230923 10:32:45.885" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:32:45.874" endtime="20230923 10:32:45.885"/>
</kw>
<msg timestamp="20230923 10:32:45.885" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230923 10:32:45.874" endtime="20230923 10:32:45.885"/>
</kw>
<msg timestamp="20230923 10:32:45.885" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230923 10:32:45.874" endtime="20230923 10:32:45.885"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230923 10:32:45.886" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230923 10:32:45.885" endtime="20230923 10:32:45.886"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:32:45.890" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:32:45.974" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:32:45.974" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:32:45.888" endtime="20230923 10:32:45.974"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:32:45.975" level="INFO"/>
<status status="PASS" starttime="20230923 10:32:45.975" endtime="20230923 10:32:45.975"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:32:45.976" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:32:45.976" endtime="20230923 10:32:45.976"/>
</kw>
<status status="PASS" starttime="20230923 10:32:45.887" endtime="20230923 10:32:45.977"/>
</kw>
<msg timestamp="20230923 10:32:45.977" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:32:45.887" endtime="20230923 10:32:45.977"/>
</kw>
<status status="PASS" starttime="20230923 10:32:45.886" endtime="20230923 10:32:45.977"/>
</kw>
<status status="PASS" starttime="20230923 10:32:45.886" endtime="20230923 10:32:45.977"/>
</kw>
<status status="PASS" starttime="20230923 10:32:45.873" endtime="20230923 10:32:45.977"/>
</kw>
<status status="PASS" starttime="20230923 10:32:45.873" endtime="20230923 10:32:45.977"/>
</kw>
<status status="PASS" starttime="20230923 10:32:45.872" endtime="20230923 10:32:45.977"/>
</kw>
<status status="PASS" starttime="20230923 10:32:45.872" endtime="20230923 10:32:45.977"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/containers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:32:45.982" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:32:46.305" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:32:46.305" level="INFO">${output} = {"data":{"totalCount":2,"prevKey":2,"containers":[{"ContainerID":1,"NumberOfKeys":31,"pipelines":null},{"ContainerID":2,"NumberOfKeys":1,"pipelines":null}]}}</msg>
<status status="PASS" starttime="20230923 10:32:45.979" endtime="20230923 10:32:46.305"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:32:46.307" level="INFO">{"data":{"totalCount":2,"prevKey":2,"containers":[{"ContainerID":1,"NumberOfKeys":31,"pipelines":null},{"ContainerID":2,"NumberOfKeys":1,"pipelines":null}]}}</msg>
<status status="PASS" starttime="20230923 10:32:46.306" endtime="20230923 10:32:46.307"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:32:46.308" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:32:46.307" endtime="20230923 10:32:46.308"/>
</kw>
<status status="PASS" starttime="20230923 10:32:45.979" endtime="20230923 10:32:46.308"/>
</kw>
<msg timestamp="20230923 10:32:46.308" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:32:45.978" endtime="20230923 10:32:46.309"/>
</kw>
<msg timestamp="20230923 10:32:46.309" level="INFO">${result} = {"data":{"totalCount":2,"prevKey":2,"containers":[{"ContainerID":1,"NumberOfKeys":31,"pipelines":null},{"ContainerID":2,"NumberOfKeys":1,"pipelines":null}]}}</msg>
<status status="PASS" starttime="20230923 10:32:45.978" endtime="20230923 10:32:46.309"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"ContainerID\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:32:46.309" endtime="20230923 10:32:46.310"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/utilization/fileCount</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:32:46.315" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:32:46.351" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:32:46.351" level="INFO">${output} = [{"volume":"82376-source","bucket":"readable-bucket","fileSize":1024,"count":1},{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":2},{"volume":"82376-source","bucket":"bucket1","fileSize":1...</msg>
<status status="PASS" starttime="20230923 10:32:46.311" endtime="20230923 10:32:46.351"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:32:46.352" level="INFO">[{"volume":"82376-source","bucket":"readable-bucket","fileSize":1024,"count":1},{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":2},{"volume":"82376-source","bucket":"bucket1","fileSize":1024,"count":2},{"volume":"82376-source","bucket":"bucket1","fileSize":32768,"count":0},{"volume":"98191-without-scheme","bucket":"bb1","fileSize":32768,"count":0},{"volume":"84532-with-host","bucket":"bb1","fileSize":32768,"count":0},{"volume":"84532-acls","bucket":"bb1","fileSize":32768,"count":2},{"volume":"84532-without-host","bucket":"bb1","fileSize":32768,"count":0},{"volume":"84532-with-del","bucket":"bfso","fileSize":32768,"count":0},{"volume":"fstest468","bucket":"bucket1","fileSize":32768,"count":0},{"volume":"vol-yrxia","bucket":"encrypted-bucket","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-test123","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"34016-bucket1-ofs","fileSize":32768,"count":6},{"volume":"wuvoqpno","bucket":"babxtzib","fileSize":32768,"count":1},{"volume":"fstest1","bucket":"34016-bucket1-ofs","fileSize":1024,"count":1},{"volume":"fstest1","bucket":"34016-bucket2-ofs","fileSize":32768,"count":1},{"volume":"fstest2","bucket":"34016-bucket3-ofs","fileSize":32768,"count":1}]</msg>
<status status="PASS" starttime="20230923 10:32:46.352" endtime="20230923 10:32:46.352"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:32:46.353" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:32:46.353" endtime="20230923 10:32:46.353"/>
</kw>
<status status="PASS" starttime="20230923 10:32:46.311" endtime="20230923 10:32:46.353"/>
</kw>
<msg timestamp="20230923 10:32:46.353" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:32:46.311" endtime="20230923 10:32:46.354"/>
</kw>
<msg timestamp="20230923 10:32:46.354" level="INFO">${result} = [{"volume":"82376-source","bucket":"readable-bucket","fileSize":1024,"count":1},{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":2},{"volume":"82376-source","bucket":"bucket1","fileSize":1...</msg>
<status status="PASS" starttime="20230923 10:32:46.310" endtime="20230923 10:32:46.354"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20230923 10:32:46.355" level="FAIL">'[{"volume":"82376-source","bucket":"readable-bucket","fileSize":1024,"count":1},{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":2},{"volume":"82376-source","bucket":"bucket1","fileSize":1024,"count":2},{"volume":"82376-source","bucket":"bucket1","fileSize":32768,"count":0},{"volume":"98191-without-scheme","bucket":"bb1","fileSize":32768,"count":0},{"volume":"84532-with-host","bucket":"bb1","fileSize":32768,"count":0},{"volume":"84532-acls","bucket":"bb1","fileSize":32768,"count":2},{"volume":"84532-without-host","bucket":"bb1","fileSize":32768,"count":0},{"volume":"84532-with-del","bucket":"bfso","fileSize":32768,"count":0},{"volume":"fstest468","bucket":"bucket1","fileSize":32768,"count":0},{"volume":"vol-yrxia","bucket":"encrypted-bucket","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-test123","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"34016-bucket1-ofs","fileSize":32768,"count":6},{"volume":"wuvoqpno","bucket":"babxtzib","fileSize":32768,"count":1},{"volume":"fstest1","bucket":"34016-bucket1-ofs","fileSize":1024,"count":1},{"volume":"fstest1","bucket":"34016-bucket2-ofs","fileSize":32768,"count":1},{"volume":"fstest2","bucket":"34016-bucket3-ofs","fileSize":32768,"count":1}]' does not contain '"fileSize":2048,"count":10'</msg>
<status status="FAIL" starttime="20230923 10:32:46.354" endtime="20230923 10:32:46.355"/>
</kw>
<status status="FAIL" starttime="20230923 10:32:45.871" endtime="20230923 10:32:46.355"/>
</kw>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit as ozone admin</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:32:56.364" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:32:56.368" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:32:56.368" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230923 10:32:56.361" endtime="20230923 10:32:56.368"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:32:56.369" level="INFO">scm</msg>
<status status="PASS" starttime="20230923 10:32:56.369" endtime="20230923 10:32:56.370"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:32:56.370" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:32:56.370" endtime="20230923 10:32:56.370"/>
</kw>
<status status="PASS" starttime="20230923 10:32:56.360" endtime="20230923 10:32:56.371"/>
</kw>
<msg timestamp="20230923 10:32:56.371" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:32:56.360" endtime="20230923 10:32:56.371"/>
</kw>
<msg timestamp="20230923 10:32:56.371" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230923 10:32:56.360" endtime="20230923 10:32:56.371"/>
</kw>
<msg timestamp="20230923 10:32:56.372" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230923 10:32:56.359" endtime="20230923 10:32:56.372"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230923 10:32:56.372" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230923 10:32:56.372" endtime="20230923 10:32:56.372"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:32:56.377" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:32:56.424" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:32:56.424" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:32:56.375" endtime="20230923 10:32:56.424"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:32:56.426" level="INFO"/>
<status status="PASS" starttime="20230923 10:32:56.425" endtime="20230923 10:32:56.426"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:32:56.427" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:32:56.426" endtime="20230923 10:32:56.427"/>
</kw>
<status status="PASS" starttime="20230923 10:32:56.374" endtime="20230923 10:32:56.427"/>
</kw>
<msg timestamp="20230923 10:32:56.427" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:32:56.374" endtime="20230923 10:32:56.427"/>
</kw>
<status status="PASS" starttime="20230923 10:32:56.373" endtime="20230923 10:32:56.427"/>
</kw>
<status status="PASS" starttime="20230923 10:32:56.373" endtime="20230923 10:32:56.427"/>
</kw>
<status status="PASS" starttime="20230923 10:32:56.359" endtime="20230923 10:32:56.427"/>
</kw>
<status status="PASS" starttime="20230923 10:32:56.358" endtime="20230923 10:32:56.428"/>
</kw>
<status status="PASS" starttime="20230923 10:32:56.358" endtime="20230923 10:32:56.428"/>
</kw>
<status status="PASS" starttime="20230923 10:32:56.357" endtime="20230923 10:32:56.428"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/containers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:32:56.432" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:32:56.493" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:32:56.493" level="INFO">${output} = {"data":{"totalCount":2,"prevKey":2,"containers":[{"ContainerID":1,"NumberOfKeys":33,"pipelines":null},{"ContainerID":2,"NumberOfKeys":1,"pipelines":null}]}}</msg>
<status status="PASS" starttime="20230923 10:32:56.429" endtime="20230923 10:32:56.493"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:32:56.495" level="INFO">{"data":{"totalCount":2,"prevKey":2,"containers":[{"ContainerID":1,"NumberOfKeys":33,"pipelines":null},{"ContainerID":2,"NumberOfKeys":1,"pipelines":null}]}}</msg>
<status status="PASS" starttime="20230923 10:32:56.494" endtime="20230923 10:32:56.495"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:32:56.496" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:32:56.495" endtime="20230923 10:32:56.496"/>
</kw>
<status status="PASS" starttime="20230923 10:32:56.429" endtime="20230923 10:32:56.496"/>
</kw>
<msg timestamp="20230923 10:32:56.497" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:32:56.428" endtime="20230923 10:32:56.497"/>
</kw>
<msg timestamp="20230923 10:32:56.497" level="INFO">${result} = {"data":{"totalCount":2,"prevKey":2,"containers":[{"ContainerID":1,"NumberOfKeys":33,"pipelines":null},{"ContainerID":2,"NumberOfKeys":1,"pipelines":null}]}}</msg>
<status status="PASS" starttime="20230923 10:32:56.428" endtime="20230923 10:32:56.497"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"ContainerID\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:32:56.497" endtime="20230923 10:32:56.498"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/utilization/fileCount</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:32:56.502" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:32:56.523" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:32:56.523" level="INFO">${output} = [{"volume":"82376-source","bucket":"readable-bucket","fileSize":1024,"count":1},{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":2},{"volume":"82376-source","bucket":"bucket1","fileSize":1...</msg>
<status status="PASS" starttime="20230923 10:32:56.499" endtime="20230923 10:32:56.523"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:32:56.524" level="INFO">[{"volume":"82376-source","bucket":"readable-bucket","fileSize":1024,"count":1},{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":2},{"volume":"82376-source","bucket":"bucket1","fileSize":1024,"count":2},{"volume":"82376-source","bucket":"bucket1","fileSize":32768,"count":0},{"volume":"98191-without-scheme","bucket":"bb1","fileSize":32768,"count":0},{"volume":"84532-with-host","bucket":"bb1","fileSize":32768,"count":0},{"volume":"84532-acls","bucket":"bb1","fileSize":32768,"count":2},{"volume":"84532-without-host","bucket":"bb1","fileSize":32768,"count":0},{"volume":"84532-with-del","bucket":"bfso","fileSize":32768,"count":0},{"volume":"fstest468","bucket":"bucket1","fileSize":32768,"count":0},{"volume":"vol-yrxia","bucket":"encrypted-bucket","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-test123","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"34016-bucket1-ofs","fileSize":32768,"count":6},{"volume":"wuvoqpno","bucket":"babxtzib","fileSize":32768,"count":1},{"volume":"fstest1","bucket":"34016-bucket1-ofs","fileSize":1024,"count":1},{"volume":"fstest1","bucket":"34016-bucket2-ofs","fileSize":32768,"count":1},{"volume":"fstest2","bucket":"34016-bucket3-ofs","fileSize":32768,"count":1}]</msg>
<status status="PASS" starttime="20230923 10:32:56.524" endtime="20230923 10:32:56.525"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:32:56.525" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:32:56.525" endtime="20230923 10:32:56.525"/>
</kw>
<status status="PASS" starttime="20230923 10:32:56.499" endtime="20230923 10:32:56.525"/>
</kw>
<msg timestamp="20230923 10:32:56.526" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:32:56.499" endtime="20230923 10:32:56.526"/>
</kw>
<msg timestamp="20230923 10:32:56.526" level="INFO">${result} = [{"volume":"82376-source","bucket":"readable-bucket","fileSize":1024,"count":1},{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":2},{"volume":"82376-source","bucket":"bucket1","fileSize":1...</msg>
<status status="PASS" starttime="20230923 10:32:56.498" endtime="20230923 10:32:56.526"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20230923 10:32:56.527" level="FAIL">'[{"volume":"82376-source","bucket":"readable-bucket","fileSize":1024,"count":1},{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":2},{"volume":"82376-source","bucket":"bucket1","fileSize":1024,"count":2},{"volume":"82376-source","bucket":"bucket1","fileSize":32768,"count":0},{"volume":"98191-without-scheme","bucket":"bb1","fileSize":32768,"count":0},{"volume":"84532-with-host","bucket":"bb1","fileSize":32768,"count":0},{"volume":"84532-acls","bucket":"bb1","fileSize":32768,"count":2},{"volume":"84532-without-host","bucket":"bb1","fileSize":32768,"count":0},{"volume":"84532-with-del","bucket":"bfso","fileSize":32768,"count":0},{"volume":"fstest468","bucket":"bucket1","fileSize":32768,"count":0},{"volume":"vol-yrxia","bucket":"encrypted-bucket","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-test123","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"34016-bucket1-ofs","fileSize":32768,"count":6},{"volume":"wuvoqpno","bucket":"babxtzib","fileSize":32768,"count":1},{"volume":"fstest1","bucket":"34016-bucket1-ofs","fileSize":1024,"count":1},{"volume":"fstest1","bucket":"34016-bucket2-ofs","fileSize":32768,"count":1},{"volume":"fstest2","bucket":"34016-bucket3-ofs","fileSize":32768,"count":1}]' does not contain '"fileSize":2048,"count":10'</msg>
<status status="FAIL" starttime="20230923 10:32:56.526" endtime="20230923 10:32:56.527"/>
</kw>
<status status="FAIL" starttime="20230923 10:32:56.356" endtime="20230923 10:32:56.527"/>
</kw>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit as ozone admin</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:33:06.537" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:33:06.541" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:33:06.541" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230923 10:33:06.533" endtime="20230923 10:33:06.541"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:33:06.542" level="INFO">scm</msg>
<status status="PASS" starttime="20230923 10:33:06.542" endtime="20230923 10:33:06.543"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:33:06.544" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:33:06.543" endtime="20230923 10:33:06.544"/>
</kw>
<status status="PASS" starttime="20230923 10:33:06.533" endtime="20230923 10:33:06.544"/>
</kw>
<msg timestamp="20230923 10:33:06.544" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:33:06.532" endtime="20230923 10:33:06.544"/>
</kw>
<msg timestamp="20230923 10:33:06.545" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230923 10:33:06.532" endtime="20230923 10:33:06.545"/>
</kw>
<msg timestamp="20230923 10:33:06.545" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230923 10:33:06.531" endtime="20230923 10:33:06.545"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230923 10:33:06.546" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230923 10:33:06.545" endtime="20230923 10:33:06.546"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:33:06.550" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:33:06.570" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:33:06.570" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:33:06.548" endtime="20230923 10:33:06.570"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:33:06.572" level="INFO"/>
<status status="PASS" starttime="20230923 10:33:06.570" endtime="20230923 10:33:06.572"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:33:06.573" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:33:06.572" endtime="20230923 10:33:06.573"/>
</kw>
<status status="PASS" starttime="20230923 10:33:06.547" endtime="20230923 10:33:06.573"/>
</kw>
<msg timestamp="20230923 10:33:06.573" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:33:06.547" endtime="20230923 10:33:06.573"/>
</kw>
<status status="PASS" starttime="20230923 10:33:06.546" endtime="20230923 10:33:06.574"/>
</kw>
<status status="PASS" starttime="20230923 10:33:06.546" endtime="20230923 10:33:06.574"/>
</kw>
<status status="PASS" starttime="20230923 10:33:06.531" endtime="20230923 10:33:06.574"/>
</kw>
<status status="PASS" starttime="20230923 10:33:06.530" endtime="20230923 10:33:06.574"/>
</kw>
<status status="PASS" starttime="20230923 10:33:06.530" endtime="20230923 10:33:06.574"/>
</kw>
<status status="PASS" starttime="20230923 10:33:06.529" endtime="20230923 10:33:06.574"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/containers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:33:06.579" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:33:06.639" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:33:06.639" level="INFO">${output} = {"data":{"totalCount":2,"prevKey":2,"containers":[{"ContainerID":1,"NumberOfKeys":33,"pipelines":null},{"ContainerID":2,"NumberOfKeys":1,"pipelines":null}]}}</msg>
<status status="PASS" starttime="20230923 10:33:06.576" endtime="20230923 10:33:06.639"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:33:06.641" level="INFO">{"data":{"totalCount":2,"prevKey":2,"containers":[{"ContainerID":1,"NumberOfKeys":33,"pipelines":null},{"ContainerID":2,"NumberOfKeys":1,"pipelines":null}]}}</msg>
<status status="PASS" starttime="20230923 10:33:06.640" endtime="20230923 10:33:06.641"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:33:06.641" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:33:06.641" endtime="20230923 10:33:06.642"/>
</kw>
<status status="PASS" starttime="20230923 10:33:06.575" endtime="20230923 10:33:06.643"/>
</kw>
<msg timestamp="20230923 10:33:06.643" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:33:06.575" endtime="20230923 10:33:06.643"/>
</kw>
<msg timestamp="20230923 10:33:06.643" level="INFO">${result} = {"data":{"totalCount":2,"prevKey":2,"containers":[{"ContainerID":1,"NumberOfKeys":33,"pipelines":null},{"ContainerID":2,"NumberOfKeys":1,"pipelines":null}]}}</msg>
<status status="PASS" starttime="20230923 10:33:06.574" endtime="20230923 10:33:06.643"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"ContainerID\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:33:06.644" endtime="20230923 10:33:06.644"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/utilization/fileCount</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:33:06.653" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:33:06.678" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:33:06.678" level="INFO">${output} = [{"volume":"82376-source","bucket":"readable-bucket","fileSize":1024,"count":1},{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":2},{"volume":"82376-source","bucket":"bucket1","fileSize":1...</msg>
<status status="PASS" starttime="20230923 10:33:06.650" endtime="20230923 10:33:06.678"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:33:06.680" level="INFO">[{"volume":"82376-source","bucket":"readable-bucket","fileSize":1024,"count":1},{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":2},{"volume":"82376-source","bucket":"bucket1","fileSize":1024,"count":2},{"volume":"82376-source","bucket":"bucket1","fileSize":32768,"count":0},{"volume":"98191-without-scheme","bucket":"bb1","fileSize":32768,"count":0},{"volume":"84532-with-host","bucket":"bb1","fileSize":32768,"count":0},{"volume":"84532-acls","bucket":"bb1","fileSize":32768,"count":2},{"volume":"84532-without-host","bucket":"bb1","fileSize":32768,"count":0},{"volume":"84532-with-del","bucket":"bfso","fileSize":32768,"count":0},{"volume":"fstest468","bucket":"bucket1","fileSize":32768,"count":0},{"volume":"vol-yrxia","bucket":"encrypted-bucket","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-test123","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"34016-bucket1-ofs","fileSize":32768,"count":6},{"volume":"wuvoqpno","bucket":"babxtzib","fileSize":32768,"count":1},{"volume":"fstest1","bucket":"34016-bucket1-ofs","fileSize":1024,"count":1},{"volume":"fstest1","bucket":"34016-bucket2-ofs","fileSize":32768,"count":1},{"volume":"fstest2","bucket":"34016-bucket3-ofs","fileSize":32768,"count":1}]</msg>
<status status="PASS" starttime="20230923 10:33:06.679" endtime="20230923 10:33:06.680"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:33:06.681" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:33:06.680" endtime="20230923 10:33:06.681"/>
</kw>
<status status="PASS" starttime="20230923 10:33:06.650" endtime="20230923 10:33:06.681"/>
</kw>
<msg timestamp="20230923 10:33:06.681" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:33:06.646" endtime="20230923 10:33:06.681"/>
</kw>
<msg timestamp="20230923 10:33:06.682" level="INFO">${result} = [{"volume":"82376-source","bucket":"readable-bucket","fileSize":1024,"count":1},{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":2},{"volume":"82376-source","bucket":"bucket1","fileSize":1...</msg>
<status status="PASS" starttime="20230923 10:33:06.644" endtime="20230923 10:33:06.682"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20230923 10:33:06.682" level="FAIL">'[{"volume":"82376-source","bucket":"readable-bucket","fileSize":1024,"count":1},{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":2},{"volume":"82376-source","bucket":"bucket1","fileSize":1024,"count":2},{"volume":"82376-source","bucket":"bucket1","fileSize":32768,"count":0},{"volume":"98191-without-scheme","bucket":"bb1","fileSize":32768,"count":0},{"volume":"84532-with-host","bucket":"bb1","fileSize":32768,"count":0},{"volume":"84532-acls","bucket":"bb1","fileSize":32768,"count":2},{"volume":"84532-without-host","bucket":"bb1","fileSize":32768,"count":0},{"volume":"84532-with-del","bucket":"bfso","fileSize":32768,"count":0},{"volume":"fstest468","bucket":"bucket1","fileSize":32768,"count":0},{"volume":"vol-yrxia","bucket":"encrypted-bucket","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-test123","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"34016-bucket1-ofs","fileSize":32768,"count":6},{"volume":"wuvoqpno","bucket":"babxtzib","fileSize":32768,"count":1},{"volume":"fstest1","bucket":"34016-bucket1-ofs","fileSize":1024,"count":1},{"volume":"fstest1","bucket":"34016-bucket2-ofs","fileSize":32768,"count":1},{"volume":"fstest2","bucket":"34016-bucket3-ofs","fileSize":32768,"count":1}]' does not contain '"fileSize":2048,"count":10'</msg>
<status status="FAIL" starttime="20230923 10:33:06.682" endtime="20230923 10:33:06.682"/>
</kw>
<status status="FAIL" starttime="20230923 10:33:06.528" endtime="20230923 10:33:06.683"/>
</kw>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit as ozone admin</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:33:16.695" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:33:16.700" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:33:16.700" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230923 10:33:16.692" endtime="20230923 10:33:16.700"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:33:16.701" level="INFO">scm</msg>
<status status="PASS" starttime="20230923 10:33:16.701" endtime="20230923 10:33:16.702"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:33:16.702" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:33:16.702" endtime="20230923 10:33:16.702"/>
</kw>
<status status="PASS" starttime="20230923 10:33:16.691" endtime="20230923 10:33:16.703"/>
</kw>
<msg timestamp="20230923 10:33:16.703" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:33:16.690" endtime="20230923 10:33:16.703"/>
</kw>
<msg timestamp="20230923 10:33:16.703" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230923 10:33:16.690" endtime="20230923 10:33:16.703"/>
</kw>
<msg timestamp="20230923 10:33:16.704" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230923 10:33:16.689" endtime="20230923 10:33:16.704"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230923 10:33:16.704" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230923 10:33:16.704" endtime="20230923 10:33:16.704"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:33:16.710" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:33:16.759" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:33:16.759" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:33:16.707" endtime="20230923 10:33:16.759"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:33:16.761" level="INFO"/>
<status status="PASS" starttime="20230923 10:33:16.760" endtime="20230923 10:33:16.761"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:33:16.762" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:33:16.761" endtime="20230923 10:33:16.762"/>
</kw>
<status status="PASS" starttime="20230923 10:33:16.706" endtime="20230923 10:33:16.762"/>
</kw>
<msg timestamp="20230923 10:33:16.762" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:33:16.706" endtime="20230923 10:33:16.762"/>
</kw>
<status status="PASS" starttime="20230923 10:33:16.705" endtime="20230923 10:33:16.762"/>
</kw>
<status status="PASS" starttime="20230923 10:33:16.705" endtime="20230923 10:33:16.763"/>
</kw>
<status status="PASS" starttime="20230923 10:33:16.688" endtime="20230923 10:33:16.763"/>
</kw>
<status status="PASS" starttime="20230923 10:33:16.687" endtime="20230923 10:33:16.763"/>
</kw>
<status status="PASS" starttime="20230923 10:33:16.686" endtime="20230923 10:33:16.763"/>
</kw>
<status status="PASS" starttime="20230923 10:33:16.685" endtime="20230923 10:33:16.763"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/containers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:33:16.768" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:33:16.805" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:33:16.805" level="INFO">${output} = {"data":{"totalCount":2,"prevKey":2,"containers":[{"ContainerID":1,"NumberOfKeys":33,"pipelines":null},{"ContainerID":2,"NumberOfKeys":1,"pipelines":null}]}}</msg>
<status status="PASS" starttime="20230923 10:33:16.765" endtime="20230923 10:33:16.805"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:33:16.808" level="INFO">{"data":{"totalCount":2,"prevKey":2,"containers":[{"ContainerID":1,"NumberOfKeys":33,"pipelines":null},{"ContainerID":2,"NumberOfKeys":1,"pipelines":null}]}}</msg>
<status status="PASS" starttime="20230923 10:33:16.806" endtime="20230923 10:33:16.808"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:33:16.809" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:33:16.809" endtime="20230923 10:33:16.809"/>
</kw>
<status status="PASS" starttime="20230923 10:33:16.764" endtime="20230923 10:33:16.810"/>
</kw>
<msg timestamp="20230923 10:33:16.810" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:33:16.764" endtime="20230923 10:33:16.810"/>
</kw>
<msg timestamp="20230923 10:33:16.810" level="INFO">${result} = {"data":{"totalCount":2,"prevKey":2,"containers":[{"ContainerID":1,"NumberOfKeys":33,"pipelines":null},{"ContainerID":2,"NumberOfKeys":1,"pipelines":null}]}}</msg>
<status status="PASS" starttime="20230923 10:33:16.763" endtime="20230923 10:33:16.810"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"ContainerID\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:33:16.810" endtime="20230923 10:33:16.811"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/utilization/fileCount</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:33:16.817" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:33:16.840" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:33:16.840" level="INFO">${output} = [{"volume":"82376-source","bucket":"readable-bucket","fileSize":1024,"count":1},{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":2},{"volume":"82376-source","bucket":"bucket1","fileSize":1...</msg>
<status status="PASS" starttime="20230923 10:33:16.813" endtime="20230923 10:33:16.840"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:33:16.841" level="INFO">[{"volume":"82376-source","bucket":"readable-bucket","fileSize":1024,"count":1},{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":2},{"volume":"82376-source","bucket":"bucket1","fileSize":1024,"count":2},{"volume":"82376-source","bucket":"bucket1","fileSize":32768,"count":0},{"volume":"98191-without-scheme","bucket":"bb1","fileSize":32768,"count":0},{"volume":"84532-with-host","bucket":"bb1","fileSize":32768,"count":0},{"volume":"84532-acls","bucket":"bb1","fileSize":32768,"count":2},{"volume":"84532-without-host","bucket":"bb1","fileSize":32768,"count":0},{"volume":"84532-with-del","bucket":"bfso","fileSize":32768,"count":0},{"volume":"fstest468","bucket":"bucket1","fileSize":32768,"count":0},{"volume":"vol-yrxia","bucket":"encrypted-bucket","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-test123","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"34016-bucket1-ofs","fileSize":32768,"count":6},{"volume":"wuvoqpno","bucket":"babxtzib","fileSize":32768,"count":1},{"volume":"fstest1","bucket":"34016-bucket1-ofs","fileSize":1024,"count":1},{"volume":"fstest1","bucket":"34016-bucket2-ofs","fileSize":32768,"count":1},{"volume":"fstest2","bucket":"34016-bucket3-ofs","fileSize":32768,"count":1}]</msg>
<status status="PASS" starttime="20230923 10:33:16.840" endtime="20230923 10:33:16.841"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:33:16.842" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:33:16.841" endtime="20230923 10:33:16.842"/>
</kw>
<status status="PASS" starttime="20230923 10:33:16.812" endtime="20230923 10:33:16.842"/>
</kw>
<msg timestamp="20230923 10:33:16.842" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:33:16.812" endtime="20230923 10:33:16.842"/>
</kw>
<msg timestamp="20230923 10:33:16.843" level="INFO">${result} = [{"volume":"82376-source","bucket":"readable-bucket","fileSize":1024,"count":1},{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":2},{"volume":"82376-source","bucket":"bucket1","fileSize":1...</msg>
<status status="PASS" starttime="20230923 10:33:16.811" endtime="20230923 10:33:16.843"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20230923 10:33:16.843" level="FAIL">'[{"volume":"82376-source","bucket":"readable-bucket","fileSize":1024,"count":1},{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":2},{"volume":"82376-source","bucket":"bucket1","fileSize":1024,"count":2},{"volume":"82376-source","bucket":"bucket1","fileSize":32768,"count":0},{"volume":"98191-without-scheme","bucket":"bb1","fileSize":32768,"count":0},{"volume":"84532-with-host","bucket":"bb1","fileSize":32768,"count":0},{"volume":"84532-acls","bucket":"bb1","fileSize":32768,"count":2},{"volume":"84532-without-host","bucket":"bb1","fileSize":32768,"count":0},{"volume":"84532-with-del","bucket":"bfso","fileSize":32768,"count":0},{"volume":"fstest468","bucket":"bucket1","fileSize":32768,"count":0},{"volume":"vol-yrxia","bucket":"encrypted-bucket","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-test123","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"34016-bucket1-ofs","fileSize":32768,"count":6},{"volume":"wuvoqpno","bucket":"babxtzib","fileSize":32768,"count":1},{"volume":"fstest1","bucket":"34016-bucket1-ofs","fileSize":1024,"count":1},{"volume":"fstest1","bucket":"34016-bucket2-ofs","fileSize":32768,"count":1},{"volume":"fstest2","bucket":"34016-bucket3-ofs","fileSize":32768,"count":1}]' does not contain '"fileSize":2048,"count":10'</msg>
<status status="FAIL" starttime="20230923 10:33:16.843" endtime="20230923 10:33:16.844"/>
</kw>
<status status="FAIL" starttime="20230923 10:33:16.683" endtime="20230923 10:33:16.844"/>
</kw>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit as ozone admin</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:33:26.853" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:33:26.857" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:33:26.857" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230923 10:33:26.849" endtime="20230923 10:33:26.857"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:33:26.858" level="INFO">scm</msg>
<status status="PASS" starttime="20230923 10:33:26.857" endtime="20230923 10:33:26.858"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:33:26.859" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:33:26.858" endtime="20230923 10:33:26.859"/>
</kw>
<status status="PASS" starttime="20230923 10:33:26.849" endtime="20230923 10:33:26.859"/>
</kw>
<msg timestamp="20230923 10:33:26.859" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:33:26.848" endtime="20230923 10:33:26.859"/>
</kw>
<msg timestamp="20230923 10:33:26.860" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230923 10:33:26.848" endtime="20230923 10:33:26.860"/>
</kw>
<msg timestamp="20230923 10:33:26.860" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230923 10:33:26.847" endtime="20230923 10:33:26.860"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230923 10:33:26.861" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230923 10:33:26.860" endtime="20230923 10:33:26.861"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:33:26.866" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:33:26.894" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:33:26.894" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:33:26.863" endtime="20230923 10:33:26.895"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:33:26.896" level="INFO"/>
<status status="PASS" starttime="20230923 10:33:26.895" endtime="20230923 10:33:26.896"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:33:26.897" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:33:26.896" endtime="20230923 10:33:26.897"/>
</kw>
<status status="PASS" starttime="20230923 10:33:26.862" endtime="20230923 10:33:26.897"/>
</kw>
<msg timestamp="20230923 10:33:26.897" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:33:26.862" endtime="20230923 10:33:26.898"/>
</kw>
<status status="PASS" starttime="20230923 10:33:26.861" endtime="20230923 10:33:26.898"/>
</kw>
<status status="PASS" starttime="20230923 10:33:26.861" endtime="20230923 10:33:26.898"/>
</kw>
<status status="PASS" starttime="20230923 10:33:26.847" endtime="20230923 10:33:26.898"/>
</kw>
<status status="PASS" starttime="20230923 10:33:26.846" endtime="20230923 10:33:26.898"/>
</kw>
<status status="PASS" starttime="20230923 10:33:26.846" endtime="20230923 10:33:26.898"/>
</kw>
<status status="PASS" starttime="20230923 10:33:26.845" endtime="20230923 10:33:26.898"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/containers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:33:26.904" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:33:26.950" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:33:26.950" level="INFO">${output} = {"data":{"totalCount":2,"prevKey":2,"containers":[{"ContainerID":1,"NumberOfKeys":33,"pipelines":null},{"ContainerID":2,"NumberOfKeys":1,"pipelines":null}]}}</msg>
<status status="PASS" starttime="20230923 10:33:26.900" endtime="20230923 10:33:26.950"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:33:26.952" level="INFO">{"data":{"totalCount":2,"prevKey":2,"containers":[{"ContainerID":1,"NumberOfKeys":33,"pipelines":null},{"ContainerID":2,"NumberOfKeys":1,"pipelines":null}]}}</msg>
<status status="PASS" starttime="20230923 10:33:26.951" endtime="20230923 10:33:26.952"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:33:26.953" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:33:26.952" endtime="20230923 10:33:26.953"/>
</kw>
<status status="PASS" starttime="20230923 10:33:26.899" endtime="20230923 10:33:26.953"/>
</kw>
<msg timestamp="20230923 10:33:26.953" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:33:26.899" endtime="20230923 10:33:26.953"/>
</kw>
<msg timestamp="20230923 10:33:26.954" level="INFO">${result} = {"data":{"totalCount":2,"prevKey":2,"containers":[{"ContainerID":1,"NumberOfKeys":33,"pipelines":null},{"ContainerID":2,"NumberOfKeys":1,"pipelines":null}]}}</msg>
<status status="PASS" starttime="20230923 10:33:26.898" endtime="20230923 10:33:26.954"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"ContainerID\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:33:26.954" endtime="20230923 10:33:26.954"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/utilization/fileCount</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:33:26.959" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:33:26.985" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:33:26.985" level="INFO">${output} = [{"volume":"82376-source","bucket":"readable-bucket","fileSize":1024,"count":1},{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":2},{"volume":"82376-source","bucket":"bucket1","fileSize":1...</msg>
<status status="PASS" starttime="20230923 10:33:26.956" endtime="20230923 10:33:26.985"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:33:26.987" level="INFO">[{"volume":"82376-source","bucket":"readable-bucket","fileSize":1024,"count":1},{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":2},{"volume":"82376-source","bucket":"bucket1","fileSize":1024,"count":2},{"volume":"82376-source","bucket":"bucket1","fileSize":32768,"count":0},{"volume":"98191-without-scheme","bucket":"bb1","fileSize":32768,"count":0},{"volume":"84532-with-host","bucket":"bb1","fileSize":32768,"count":0},{"volume":"84532-acls","bucket":"bb1","fileSize":32768,"count":2},{"volume":"84532-without-host","bucket":"bb1","fileSize":32768,"count":0},{"volume":"84532-with-del","bucket":"bfso","fileSize":32768,"count":0},{"volume":"fstest468","bucket":"bucket1","fileSize":32768,"count":0},{"volume":"vol-yrxia","bucket":"encrypted-bucket","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-test123","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"34016-bucket1-ofs","fileSize":32768,"count":6},{"volume":"wuvoqpno","bucket":"babxtzib","fileSize":32768,"count":1},{"volume":"fstest1","bucket":"34016-bucket1-ofs","fileSize":1024,"count":1},{"volume":"fstest1","bucket":"34016-bucket2-ofs","fileSize":32768,"count":1},{"volume":"fstest2","bucket":"34016-bucket3-ofs","fileSize":32768,"count":1}]</msg>
<status status="PASS" starttime="20230923 10:33:26.986" endtime="20230923 10:33:26.987"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:33:26.987" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:33:26.987" endtime="20230923 10:33:26.988"/>
</kw>
<status status="PASS" starttime="20230923 10:33:26.955" endtime="20230923 10:33:26.988"/>
</kw>
<msg timestamp="20230923 10:33:26.988" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:33:26.955" endtime="20230923 10:33:26.988"/>
</kw>
<msg timestamp="20230923 10:33:26.988" level="INFO">${result} = [{"volume":"82376-source","bucket":"readable-bucket","fileSize":1024,"count":1},{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":2},{"volume":"82376-source","bucket":"bucket1","fileSize":1...</msg>
<status status="PASS" starttime="20230923 10:33:26.954" endtime="20230923 10:33:26.988"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20230923 10:33:26.989" level="FAIL">'[{"volume":"82376-source","bucket":"readable-bucket","fileSize":1024,"count":1},{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":2},{"volume":"82376-source","bucket":"bucket1","fileSize":1024,"count":2},{"volume":"82376-source","bucket":"bucket1","fileSize":32768,"count":0},{"volume":"98191-without-scheme","bucket":"bb1","fileSize":32768,"count":0},{"volume":"84532-with-host","bucket":"bb1","fileSize":32768,"count":0},{"volume":"84532-acls","bucket":"bb1","fileSize":32768,"count":2},{"volume":"84532-without-host","bucket":"bb1","fileSize":32768,"count":0},{"volume":"84532-with-del","bucket":"bfso","fileSize":32768,"count":0},{"volume":"fstest468","bucket":"bucket1","fileSize":32768,"count":0},{"volume":"vol-yrxia","bucket":"encrypted-bucket","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-test123","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"34016-bucket1-ofs","fileSize":32768,"count":6},{"volume":"wuvoqpno","bucket":"babxtzib","fileSize":32768,"count":1},{"volume":"fstest1","bucket":"34016-bucket1-ofs","fileSize":1024,"count":1},{"volume":"fstest1","bucket":"34016-bucket2-ofs","fileSize":32768,"count":1},{"volume":"fstest2","bucket":"34016-bucket3-ofs","fileSize":32768,"count":1}]' does not contain '"fileSize":2048,"count":10'</msg>
<status status="FAIL" starttime="20230923 10:33:26.988" endtime="20230923 10:33:26.989"/>
</kw>
<status status="FAIL" starttime="20230923 10:33:26.844" endtime="20230923 10:33:26.989"/>
</kw>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit as ozone admin</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:33:36.999" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:33:37.003" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:33:37.003" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230923 10:33:36.995" endtime="20230923 10:33:37.003"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:33:37.005" level="INFO">scm</msg>
<status status="PASS" starttime="20230923 10:33:37.004" endtime="20230923 10:33:37.005"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:33:37.005" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:33:37.005" endtime="20230923 10:33:37.006"/>
</kw>
<status status="PASS" starttime="20230923 10:33:36.995" endtime="20230923 10:33:37.006"/>
</kw>
<msg timestamp="20230923 10:33:37.006" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:33:36.994" endtime="20230923 10:33:37.006"/>
</kw>
<msg timestamp="20230923 10:33:37.006" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230923 10:33:36.994" endtime="20230923 10:33:37.006"/>
</kw>
<msg timestamp="20230923 10:33:37.007" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230923 10:33:36.993" endtime="20230923 10:33:37.007"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230923 10:33:37.007" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230923 10:33:37.007" endtime="20230923 10:33:37.007"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:33:37.012" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:33:37.033" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:33:37.033" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:33:37.010" endtime="20230923 10:33:37.033"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:33:37.035" level="INFO"/>
<status status="PASS" starttime="20230923 10:33:37.034" endtime="20230923 10:33:37.035"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:33:37.036" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:33:37.035" endtime="20230923 10:33:37.036"/>
</kw>
<status status="PASS" starttime="20230923 10:33:37.009" endtime="20230923 10:33:37.036"/>
</kw>
<msg timestamp="20230923 10:33:37.036" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:33:37.009" endtime="20230923 10:33:37.036"/>
</kw>
<status status="PASS" starttime="20230923 10:33:37.008" endtime="20230923 10:33:37.036"/>
</kw>
<status status="PASS" starttime="20230923 10:33:37.007" endtime="20230923 10:33:37.037"/>
</kw>
<status status="PASS" starttime="20230923 10:33:36.993" endtime="20230923 10:33:37.037"/>
</kw>
<status status="PASS" starttime="20230923 10:33:36.992" endtime="20230923 10:33:37.037"/>
</kw>
<status status="PASS" starttime="20230923 10:33:36.992" endtime="20230923 10:33:37.037"/>
</kw>
<status status="PASS" starttime="20230923 10:33:36.991" endtime="20230923 10:33:37.037"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/containers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:33:37.042" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:33:37.091" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:33:37.091" level="INFO">${output} = {"data":{"totalCount":2,"prevKey":2,"containers":[{"ContainerID":1,"NumberOfKeys":33,"pipelines":null},{"ContainerID":2,"NumberOfKeys":1,"pipelines":null}]}}</msg>
<status status="PASS" starttime="20230923 10:33:37.039" endtime="20230923 10:33:37.091"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:33:37.092" level="INFO">{"data":{"totalCount":2,"prevKey":2,"containers":[{"ContainerID":1,"NumberOfKeys":33,"pipelines":null},{"ContainerID":2,"NumberOfKeys":1,"pipelines":null}]}}</msg>
<status status="PASS" starttime="20230923 10:33:37.091" endtime="20230923 10:33:37.092"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:33:37.093" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:33:37.092" endtime="20230923 10:33:37.095"/>
</kw>
<status status="PASS" starttime="20230923 10:33:37.038" endtime="20230923 10:33:37.096"/>
</kw>
<msg timestamp="20230923 10:33:37.096" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:33:37.038" endtime="20230923 10:33:37.096"/>
</kw>
<msg timestamp="20230923 10:33:37.096" level="INFO">${result} = {"data":{"totalCount":2,"prevKey":2,"containers":[{"ContainerID":1,"NumberOfKeys":33,"pipelines":null},{"ContainerID":2,"NumberOfKeys":1,"pipelines":null}]}}</msg>
<status status="PASS" starttime="20230923 10:33:37.037" endtime="20230923 10:33:37.096"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"ContainerID\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:33:37.096" endtime="20230923 10:33:37.097"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/utilization/fileCount</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:33:37.102" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:33:37.124" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:33:37.124" level="INFO">${output} = [{"volume":"82376-source","bucket":"readable-bucket","fileSize":1024,"count":1},{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":2},{"volume":"82376-source","bucket":"bucket1","fileSize":1...</msg>
<status status="PASS" starttime="20230923 10:33:37.099" endtime="20230923 10:33:37.125"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:33:37.126" level="INFO">[{"volume":"82376-source","bucket":"readable-bucket","fileSize":1024,"count":1},{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":2},{"volume":"82376-source","bucket":"bucket1","fileSize":1024,"count":2},{"volume":"82376-source","bucket":"bucket1","fileSize":32768,"count":0},{"volume":"98191-without-scheme","bucket":"bb1","fileSize":32768,"count":0},{"volume":"84532-with-host","bucket":"bb1","fileSize":32768,"count":0},{"volume":"84532-acls","bucket":"bb1","fileSize":32768,"count":2},{"volume":"84532-without-host","bucket":"bb1","fileSize":32768,"count":0},{"volume":"84532-with-del","bucket":"bfso","fileSize":32768,"count":0},{"volume":"fstest468","bucket":"bucket1","fileSize":32768,"count":0},{"volume":"vol-yrxia","bucket":"encrypted-bucket","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-test123","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"34016-bucket1-ofs","fileSize":32768,"count":6},{"volume":"wuvoqpno","bucket":"babxtzib","fileSize":32768,"count":1},{"volume":"fstest1","bucket":"34016-bucket1-ofs","fileSize":1024,"count":1},{"volume":"fstest1","bucket":"34016-bucket2-ofs","fileSize":32768,"count":0},{"volume":"fstest2","bucket":"34016-bucket3-ofs","fileSize":32768,"count":0},{"volume":"recon","bucket":"api","fileSize":2048,"count":10}]</msg>
<status status="PASS" starttime="20230923 10:33:37.125" endtime="20230923 10:33:37.126"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:33:37.127" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:33:37.127" endtime="20230923 10:33:37.127"/>
</kw>
<status status="PASS" starttime="20230923 10:33:37.098" endtime="20230923 10:33:37.127"/>
</kw>
<msg timestamp="20230923 10:33:37.128" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:33:37.098" endtime="20230923 10:33:37.128"/>
</kw>
<msg timestamp="20230923 10:33:37.128" level="INFO">${result} = [{"volume":"82376-source","bucket":"readable-bucket","fileSize":1024,"count":1},{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":2},{"volume":"82376-source","bucket":"bucket1","fileSize":1...</msg>
<status status="PASS" starttime="20230923 10:33:37.097" endtime="20230923 10:33:37.128"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:33:37.128" endtime="20230923 10:33:37.129"/>
</kw>
<status status="PASS" starttime="20230923 10:33:36.990" endtime="20230923 10:33:37.129"/>
</kw>
<status status="PASS" starttime="20230923 10:32:45.871" endtime="20230923 10:33:37.129"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230923 10:32:25.304" endtime="20230923 10:33:37.129"/>
</test>
<test id="s1-s7-s1-t2" name="Check if Recon picks up DN heartbeats" line="71">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/datanodes</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:33:37.137" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/datanodes 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:33:37.211" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:33:37.211" level="INFO">${output} = {"totalCount":3,"datanodes":[{"uuid":"cefb5f11-4c66-4dc1-8ed3-0315d7bdcf97","hostname":"ozonesecure_datanode_1.ozonesecure_default","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":0,"storageR...</msg>
<status status="PASS" starttime="20230923 10:33:37.134" endtime="20230923 10:33:37.211"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:33:37.213" level="INFO">{"totalCount":3,"datanodes":[{"uuid":"cefb5f11-4c66-4dc1-8ed3-0315d7bdcf97","hostname":"ozonesecure_datanode_1.ozonesecure_default","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":0,"storageReport":{"capacity":89297309696,"used":501885,"remaining":15896014848},"pipelines":[{"pipelineID":"066b3c9e-5f3a-4202-9e9a-e108ca35ecc9","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozonesecure_datanode_1.ozonesecure_default"},{"pipelineID":"eab6469f-3c28-4c19-aa08-af50ebba6c5d","replicationType":"RATIS","replicationFactor":"ONE","leaderNode":"ozonesecure_datanode_1.ozonesecure_default"}],"containers":1,"openContainers":3,"leaderCount":2,"version":"1.4.0-SNAPSHOT","setupTime":1695462749768,"revision":"40588150b4cb36a4c355cb44246a4a8a856f9473","buildDate":"2023-09-23T09:21Z","layoutVersion":7,"networkLocation":"/default-rack"},{"uuid":"84f21144-36b5-4d76-8a98-b96ac8f4d8db","hostname":"ozonesecure_datanode_2.ozonesecure_default","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":0,"storageReport":{"capacity":89297309696,"used":512125,"remaining":15896014848},"pipelines":[{"pipelineID":"066b3c9e-5f3a-4202-9e9a-e108ca35ecc9","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozonesecure_datanode_1.ozonesecure_default"},{"pipelineID":"40155579-7c1c-4e1e-a32e-881f76122bf2","replicationType":"RATIS","replicationFactor":"ONE","leaderNode":"ozonesecure_datanode_2.ozonesecure_default"}],"containers":2,"openContainers":4,"leaderCount":1,"version":"1.4.0-SNAPSHOT","setupTime":1695462749784,"revision":"40588150b4cb36a4c355cb44246a4a8a856f9473","buildDate":"2023-09-23T09:21Z","layoutVersion":7,"networkLocation":"/default-rack"},{"uuid":"4d9fab95-a94e-48b5-88e0-d06ac1678a42","hostname":"ozonesecure_datanode_3.ozonesecure_default","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":0,"storageReport":{"capacity":89297309696,"used":501885,"remaining":15896014848},"pipelines":[{"pipelineID":"066b3c9e-5f3a-4202-9e9a-e108ca35ecc9","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozonesecure_datanode_1.ozonesecure_default"},{"pipelineID":"9091805f-a2e2-45f1-ba41-bb8e2476235c","replicationType":"RATIS","replicationFactor":"ONE","leaderNode":"ozonesecure_datanode_3.ozonesecure_default"}],"containers":1,"openContainers":3,"leaderCount":1,"version":"1.4.0-SNAPSHOT","setupTime":1695462750615,"revision":"40588150b4cb36a4c355cb44246a4a8a856f9473","buildDate":"2023-09-23T09:21Z","layoutVersion":7,"networkLocation":"/default-rack"}]}</msg>
<status status="PASS" starttime="20230923 10:33:37.212" endtime="20230923 10:33:37.213"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:33:37.214" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:33:37.213" endtime="20230923 10:33:37.214"/>
</kw>
<status status="PASS" starttime="20230923 10:33:37.133" endtime="20230923 10:33:37.214"/>
</kw>
<msg timestamp="20230923 10:33:37.214" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:33:37.133" endtime="20230923 10:33:37.214"/>
</kw>
<msg timestamp="20230923 10:33:37.214" level="INFO">${result} = {"totalCount":3,"datanodes":[{"uuid":"cefb5f11-4c66-4dc1-8ed3-0315d7bdcf97","hostname":"ozonesecure_datanode_1.ozonesecure_default","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":0,"storageR...</msg>
<status status="PASS" starttime="20230923 10:33:37.132" endtime="20230923 10:33:37.215"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>datanodes</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:33:37.215" endtime="20230923 10:33:37.215"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>datanode_1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:33:37.215" endtime="20230923 10:33:37.216"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>datanode_2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:33:37.216" endtime="20230923 10:33:37.220"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>datanode_3</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:33:37.220" endtime="20230923 10:33:37.220"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/pipelines</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:33:37.227" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/pipelines 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:33:37.298" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:33:37.298" level="INFO">${output} = {"totalCount":4,"pipelines":[{"pipelineId":"066b3c9e-5f3a-4202-9e9a-e108ca35ecc9","status":"OPEN","leaderNode":"ozonesecure_datanode_1.ozonesecure_default","datanodes":[{"level":0,"parent":null,"cost"...</msg>
<status status="PASS" starttime="20230923 10:33:37.223" endtime="20230923 10:33:37.298"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:33:37.300" level="INFO">{"totalCount":4,"pipelines":[{"pipelineId":"066b3c9e-5f3a-4202-9e9a-e108ca35ecc9","status":"OPEN","leaderNode":"ozonesecure_datanode_1.ozonesecure_default","datanodes":[{"level":0,"parent":null,"cost":0,"uuid":"4d9fab95-a94e-48b5-88e0-d06ac1678a42","uuidString":"4d9fab95-a94e-48b5-88e0-d06ac1678a42","ipAddress":"172.20.0.11","hostName":"ozonesecure_datanode_3.ozonesecure_default","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":9864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"RATIS_DATASTREAM","value":9855},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":-1198803449,"decommissioned":false,"maintenance":false,"networkName":"4d9fab95-a94e-48b5-88e0-d06ac1678a42","networkLocation":"/default-rack","networkFullPath":"/default-rack/4d9fab95-a94e-48b5-88e0-d06ac1678a42","numOfLeaves":1},{"level":0,"parent":null,"cost":0,"uuid":"cefb5f11-4c66-4dc1-8ed3-0315d7bdcf97","uuidString":"cefb5f11-4c66-4dc1-8ed3-0315d7bdcf97","ipAddress":"172.20.0.10","hostName":"ozonesecure_datanode_1.ozonesecure_default","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":9864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"RATIS_DATASTREAM","value":9855},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":-121806607,"decommissioned":false,"maintenance":false,"networkName":"cefb5f11-4c66-4dc1-8ed3-0315d7bdcf97","networkLocation":"/default-rack","networkFullPath":"/default-rack/cefb5f11-4c66-4dc1-8ed3-0315d7bdcf97","numOfLeaves":1},{"level":0,"parent":null,"cost":0,"uuid":"84f21144-36b5-4d76-8a98-b96ac8f4d8db","uuidString":"84f21144-36b5-4d76-8a98-b96ac8f4d8db","ipAddress":"172.20.0.9","hostName":"ozonesecure_datanode_2.ozonesecure_default","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":9864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"RATIS_DATASTREAM","value":9855},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":503717968,"decommissioned":false,"maintenance":false,"networkName":"84f21144-36b5-4d76-8a98-b96ac8f4d8db","networkLocation":"/default-rack","networkFullPath":"/default-rack/84f21144-36b5-4d76-8a98-b96ac8f4d8db","numOfLeaves":1}],"lastLeaderElection":0,"duration":2391214,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"THREE","containers":1},{"pipelineId":"eab6469f-3c28-4c19-aa08-af50ebba6c5d","status":"OPEN","leaderNode":"ozonesecure_datanode_1.ozonesecure_default","datanodes":[{"level":0,"parent":null,"cost":0,"uuid":"cefb5f11-4c66-4dc1-8ed3-0315d7bdcf97","uuidString":"cefb5f11-4c66-4dc1-8ed3-0315d7bdcf97","ipAddress":"172.20.0.10","hostName":"ozonesecure_datanode_1.ozonesecure_default","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":9864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"RATIS_DATASTREAM","value":9855},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":-121806607,"decommissioned":false,"maintenance":false,"networkName":"cefb5f11-4c66-4dc1-8ed3-0315d7bdcf97","networkLocation":"/default-rack","networkFullPath":"/default-rack/cefb5f11-4c66-4dc1-8ed3-0315d7bdcf97","numOfLeaves":1}],"lastLeaderElection":0,"duration":2391813,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"ONE","containers":0},{"pipelineId":"9091805f-a2e2-45f1-ba41-bb8e2476235c","status":"OPEN","leaderNode":"ozonesecure_datanode_3.ozonesecure_default","datanodes":[{"level":0,"parent":null,"cost":0,"uuid":"4d9fab95-a94e-48b5-88e0-d06ac1678a42","uuidString":"4d9fab95-a94e-48b5-88e0-d06ac1678a42","ipAddress":"172.20.0.11","hostName":"ozonesecure_datanode_3.ozonesecure_default","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":9864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"RATIS_DATASTREAM","value":9855},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":-1198803449,"decommissioned":false,"maintenance":false,"networkName":"4d9fab95-a94e-48b5-88e0-d06ac1678a42","networkLocation":"/default-rack","networkFullPath":"/default-rack/4d9fab95-a94e-48b5-88e0-d06ac1678a42","numOfLeaves":1}],"lastLeaderElection":0,"duration":2391267,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"ONE","containers":0},{"pipelineId":"40155579-7c1c-4e1e-a32e-881f76122bf2","status":"OPEN","leaderNode":"ozonesecure_datanode_2.ozonesecure_default","datanodes":[{"level":0,"parent":null,"cost":0,"uuid":"84f21144-36b5-4d76-8a98-b96ac8f4d8db","uuidString":"84f21144-36b5-4d76-8a98-b96ac8f4d8db","ipAddress":"172.20.0.9","hostName":"ozonesecure_datanode_2.ozonesecure_default","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":9864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"RATIS_DATASTREAM","value":9855},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":503717968,"decommissioned":false,"maintenance":false,"networkName":"84f21144-36b5-4d76-8a98-b96ac8f4d8db","networkLocation":"/default-rack","networkFullPath":"/default-rack/84f21144-36b5-4d76-8a98-b96ac8f4d8db","numOfLeaves":1}],"lastLeaderElection":0,"duration":2391375,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"ONE","containers":1}]}</msg>
<status status="PASS" starttime="20230923 10:33:37.299" endtime="20230923 10:33:37.300"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:33:37.301" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:33:37.300" endtime="20230923 10:33:37.301"/>
</kw>
<status status="PASS" starttime="20230923 10:33:37.222" endtime="20230923 10:33:37.301"/>
</kw>
<msg timestamp="20230923 10:33:37.302" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:33:37.222" endtime="20230923 10:33:37.302"/>
</kw>
<msg timestamp="20230923 10:33:37.302" level="INFO">${result} = {"totalCount":4,"pipelines":[{"pipelineId":"066b3c9e-5f3a-4202-9e9a-e108ca35ecc9","status":"OPEN","leaderNode":"ozonesecure_datanode_1.ozonesecure_default","datanodes":[{"level":0,"parent":null,"cost"...</msg>
<status status="PASS" starttime="20230923 10:33:37.221" endtime="20230923 10:33:37.302"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>pipelines</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:33:37.302" endtime="20230923 10:33:37.303"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:33:37.303" endtime="20230923 10:33:37.303"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>OPEN</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:33:37.304" endtime="20230923 10:33:37.304"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>datanode_1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:33:37.304" endtime="20230923 10:33:37.305"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>datanode_2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:33:37.305" endtime="20230923 10:33:37.305"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>datanode_3</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:33:37.305" endtime="20230923 10:33:37.306"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/clusterState</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:33:37.311" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/clusterState 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:33:37.383" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:33:37.383" level="INFO">${output} = {"deletedDirs":0,"pipelines":4,"totalDatanodes":3,"healthyDatanodes":3,"storageReport":{"capacity":267891929088,"used":1515895,"remaining":47688044544},"containers":2,"missingContainers":0,"openContai...</msg>
<status status="PASS" starttime="20230923 10:33:37.308" endtime="20230923 10:33:37.383"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:33:37.385" level="INFO">{"deletedDirs":0,"pipelines":4,"totalDatanodes":3,"healthyDatanodes":3,"storageReport":{"capacity":267891929088,"used":1515895,"remaining":47688044544},"containers":2,"missingContainers":0,"openContainers":2,"deletedContainers":0,"volumes":14,"buckets":26,"keys":29,"keysPendingDeletion":6}</msg>
<status status="PASS" starttime="20230923 10:33:37.384" endtime="20230923 10:33:37.385"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:33:37.385" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:33:37.385" endtime="20230923 10:33:37.386"/>
</kw>
<status status="PASS" starttime="20230923 10:33:37.307" endtime="20230923 10:33:37.386"/>
</kw>
<msg timestamp="20230923 10:33:37.386" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:33:37.307" endtime="20230923 10:33:37.386"/>
</kw>
<msg timestamp="20230923 10:33:37.386" level="INFO">${result} = {"deletedDirs":0,"pipelines":4,"totalDatanodes":3,"healthyDatanodes":3,"storageReport":{"capacity":267891929088,"used":1515895,"remaining":47688044544},"containers":2,"missingContainers":0,"openContai...</msg>
<status status="PASS" starttime="20230923 10:33:37.306" endtime="20230923 10:33:37.386"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"totalDatanodes\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:33:37.386" endtime="20230923 10:33:37.387"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"healthyDatanodes\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:33:37.387" endtime="20230923 10:33:37.387"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"pipelines\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:33:37.387" endtime="20230923 10:33:37.390"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/containers/1/replicaHistory</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:33:37.395" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/containers/1/replicaHistory 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:33:37.440" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:33:37.441" level="INFO">${output} = [{"containerId":1,"datanodeUuid":"cefb5f11-4c66-4dc1-8ed3-0315d7bdcf97","datanodeHost":"ozonesecure_datanode_1.ozonesecure_default","firstSeenTime":1695462862062,"lastSeenTime":1695465171102,"state":"...</msg>
<status status="PASS" starttime="20230923 10:33:37.392" endtime="20230923 10:33:37.441"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:33:37.442" level="INFO">[{"containerId":1,"datanodeUuid":"cefb5f11-4c66-4dc1-8ed3-0315d7bdcf97","datanodeHost":"ozonesecure_datanode_1.ozonesecure_default","firstSeenTime":1695462862062,"lastSeenTime":1695465171102,"state":"OPEN","lastBcsId":135},{"containerId":1,"datanodeUuid":"84f21144-36b5-4d76-8a98-b96ac8f4d8db","datanodeHost":"ozonesecure_datanode_2.ozonesecure_default","firstSeenTime":1695462862055,"lastSeenTime":1695465124722,"state":"OPEN","lastBcsId":131},{"containerId":1,"datanodeUuid":"4d9fab95-a94e-48b5-88e0-d06ac1678a42","datanodeHost":"ozonesecure_datanode_3.ozonesecure_default","firstSeenTime":1695462862030,"lastSeenTime":1695465201515,"state":"OPEN","lastBcsId":175}]</msg>
<status status="PASS" starttime="20230923 10:33:37.441" endtime="20230923 10:33:37.442"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:33:37.443" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:33:37.442" endtime="20230923 10:33:37.443"/>
</kw>
<status status="PASS" starttime="20230923 10:33:37.391" endtime="20230923 10:33:37.443"/>
</kw>
<msg timestamp="20230923 10:33:37.443" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:33:37.391" endtime="20230923 10:33:37.444"/>
</kw>
<msg timestamp="20230923 10:33:37.444" level="INFO">${result} = [{"containerId":1,"datanodeUuid":"cefb5f11-4c66-4dc1-8ed3-0315d7bdcf97","datanodeHost":"ozonesecure_datanode_1.ozonesecure_default","firstSeenTime":1695462862062,"lastSeenTime":1695465171102,"state":"...</msg>
<status status="PASS" starttime="20230923 10:33:37.390" endtime="20230923 10:33:37.444"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"containerId\":1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:33:37.444" endtime="20230923 10:33:37.444"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230923 10:33:37.131" endtime="20230923 10:33:37.445"/>
</test>
<test id="s1-s7-s1-t3" name="Check if Recon Web UI is up" line="94">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit HTTP user" library="commonlib">
<kw name="Get test user principal" library="commonlib">
<var>${principal}</var>
<arg>HTTP</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:33:37.457" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:33:37.462" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:33:37.462" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230923 10:33:37.453" endtime="20230923 10:33:37.462"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:33:37.463" level="INFO">scm</msg>
<status status="PASS" starttime="20230923 10:33:37.462" endtime="20230923 10:33:37.463"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:33:37.464" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:33:37.463" endtime="20230923 10:33:37.464"/>
</kw>
<status status="PASS" starttime="20230923 10:33:37.453" endtime="20230923 10:33:37.464"/>
</kw>
<msg timestamp="20230923 10:33:37.464" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:33:37.452" endtime="20230923 10:33:37.464"/>
</kw>
<msg timestamp="20230923 10:33:37.464" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230923 10:33:37.451" endtime="20230923 10:33:37.465"/>
</kw>
<msg timestamp="20230923 10:33:37.465" level="INFO">${principal} = HTTP/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230923 10:33:37.451" endtime="20230923 10:33:37.465"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/HTTP.keytab ${principal}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/HTTP.keytab ${principal}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:33:37.469" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/HTTP.keytab HTTP/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:33:37.487" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:33:37.487" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:33:37.467" endtime="20230923 10:33:37.487"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:33:37.489" level="INFO"/>
<status status="PASS" starttime="20230923 10:33:37.488" endtime="20230923 10:33:37.489"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:33:37.490" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:33:37.489" endtime="20230923 10:33:37.490"/>
</kw>
<status status="PASS" starttime="20230923 10:33:37.466" endtime="20230923 10:33:37.490"/>
</kw>
<msg timestamp="20230923 10:33:37.490" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:33:37.466" endtime="20230923 10:33:37.490"/>
</kw>
<status status="PASS" starttime="20230923 10:33:37.466" endtime="20230923 10:33:37.490"/>
</kw>
<status status="PASS" starttime="20230923 10:33:37.465" endtime="20230923 10:33:37.491"/>
</kw>
<status status="PASS" starttime="20230923 10:33:37.450" endtime="20230923 10:33:37.491"/>
</kw>
<status status="PASS" starttime="20230923 10:33:37.450" endtime="20230923 10:33:37.491"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${ENDPOINT_URL}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:33:37.496" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:33:37.549" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:33:37.549" level="INFO">${output} = &lt;!doctype html&gt;&lt;html lang="en"&gt;&lt;head&gt;&lt;meta charset="utf-8"/&gt;&lt;link rel="shortcut icon" href="/favicon.ico"/&gt;&lt;meta name="viewport" content="width=device-width,initial-scale=1"/&gt;&lt;meta name="theme-color" ...</msg>
<status status="PASS" starttime="20230923 10:33:37.493" endtime="20230923 10:33:37.549"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:33:37.551" level="INFO">&lt;!doctype html&gt;&lt;html lang="en"&gt;&lt;head&gt;&lt;meta charset="utf-8"/&gt;&lt;link rel="shortcut icon" href="/favicon.ico"/&gt;&lt;meta name="viewport" content="width=device-width,initial-scale=1"/&gt;&lt;meta name="theme-color" content="#000000"/&gt;&lt;link rel="manifest" href="/manifest.json"/&gt;&lt;title&gt;Ozone Recon&lt;/title&gt;&lt;link href="/static/css/2.58b4e004.chunk.css" rel="stylesheet"&gt;&lt;link href="/static/css/main.95934262.chunk.css" rel="stylesheet"&gt;&lt;/head&gt;&lt;body&gt;&lt;noscript&gt;You need to enable JavaScript to run this app.&lt;/noscript&gt;&lt;div id="root"&gt;&lt;/div&gt;&lt;script&gt;!function(e){function r(r){for(var n,l,f=r[0],i=r[1],a=r[2],p=0,s=[];p&lt;f.length;p++)l=f[p],Object.prototype.hasOwnProperty.call(o,l)&amp;&amp;o[l]&amp;&amp;s.push(o[l][0]),o[l]=0;for(n in i)Object.prototype.hasOwnProperty.call(i,n)&amp;&amp;(e[n]=i[n]);for(c&amp;&amp;c(r);s.length;)s.shift()();return u.push.apply(u,a||[]),t()}function t(){for(var e,r=0;r&lt;u.length;r++){for(var t=u[r],n=!0,f=1;f&lt;t.length;f++){var i=t[f];0!==o[i]&amp;&amp;(n=!1)}n&amp;&amp;(u.splice(r--,1),e=l(l.s=t[0]))}return e}var n={},o={1:0},u=[];function l(r){if(n[r])return n[r].exports;var t=n[r]={i:r,l:!1,exports:{}};return e[r].call(t.exports,t,t.exports,l),t.l=!0,t.exports}l.m=e,l.c=n,l.d=function(e,r,t){l.o(e,r)||Object.defineProperty(e,r,{enumerable:!0,get:t})},l.r=function(e){"undefined"!=typeof Symbol&amp;&amp;Symbol.toStringTag&amp;&amp;Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},l.t=function(e,r){if(1&amp;r&amp;&amp;(e=l(e)),8&amp;r)return e;if(4&amp;r&amp;&amp;"object"==typeof e&amp;&amp;e&amp;&amp;e.__esModule)return e;var t=Object.create(null);if(l.r(t),Object.defineProperty(t,"default",{enumerable:!0,value:e}),2&amp;r&amp;&amp;"string"!=typeof e)for(var n in e)l.d(t,n,function(r){return e[r]}.bind(null,n));return t},l.n=function(e){var r=e&amp;&amp;e.__esModule?function(){return e.default}:function(){return e};return l.d(r,"a",r),r},l.o=function(e,r){return Object.prototype.hasOwnProperty.call(e,r)},l.p="/";var f=this["webpackJsonpozone-recon"]=this["webpackJsonpozone-recon"]||[],i=f.push.bind(f);f.push=r,f=f.slice();for(var a=0;a&lt;f.length;a++)r(f[a]);var c=i;t()}([])&lt;/script&gt;&lt;script src="/static/js/2.60ad2f10.chunk.js"&gt;&lt;/script&gt;&lt;script src="/static/js/main.10bea825.chunk.js"&gt;&lt;/script&gt;&lt;/body&gt;&lt;/html&gt;</msg>
<status status="PASS" starttime="20230923 10:33:37.550" endtime="20230923 10:33:37.551"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:33:37.552" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:33:37.551" endtime="20230923 10:33:37.552"/>
</kw>
<status status="PASS" starttime="20230923 10:33:37.492" endtime="20230923 10:33:37.552"/>
</kw>
<msg timestamp="20230923 10:33:37.552" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:33:37.492" endtime="20230923 10:33:37.552"/>
</kw>
<msg timestamp="20230923 10:33:37.553" level="INFO">${result} = &lt;!doctype html&gt;&lt;html lang="en"&gt;&lt;head&gt;&lt;meta charset="utf-8"/&gt;&lt;link rel="shortcut icon" href="/favicon.ico"/&gt;&lt;meta name="viewport" content="width=device-width,initial-scale=1"/&gt;&lt;meta name="theme-color" ...</msg>
<status status="PASS" starttime="20230923 10:33:37.491" endtime="20230923 10:33:37.553"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Ozone Recon</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:33:37.553" endtime="20230923 10:33:37.553"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230923 10:33:37.449" endtime="20230923 10:33:37.554"/>
</test>
<test id="s1-s7-s1-t4" name="Check web UI access" line="99">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:33:37.561" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:33:37.566" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:33:37.566" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:33:37.558" endtime="20230923 10:33:37.566"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:33:37.567" level="INFO"/>
<status status="PASS" starttime="20230923 10:33:37.566" endtime="20230923 10:33:37.567"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:33:37.568" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:33:37.567" endtime="20230923 10:33:37.568"/>
</kw>
<status status="PASS" starttime="20230923 10:33:37.557" endtime="20230923 10:33:37.568"/>
</kw>
<msg timestamp="20230923 10:33:37.568" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:33:37.557" endtime="20230923 10:33:37.568"/>
</kw>
<status status="PASS" starttime="20230923 10:33:37.556" endtime="20230923 10:33:37.568"/>
</kw>
<kw name="Check http return code">
<arg>${ENDPOINT_URL}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:33:37.573" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:33:37.593" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:33:37.593" level="INFO">${output} = 401</msg>
<status status="PASS" starttime="20230923 10:33:37.571" endtime="20230923 10:33:37.593"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:33:37.595" level="INFO">401</msg>
<status status="PASS" starttime="20230923 10:33:37.594" endtime="20230923 10:33:37.596"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:33:37.597" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:33:37.596" endtime="20230923 10:33:37.597"/>
</kw>
<status status="PASS" starttime="20230923 10:33:37.570" endtime="20230923 10:33:37.597"/>
</kw>
<msg timestamp="20230923 10:33:37.597" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:33:37.570" endtime="20230923 10:33:37.597"/>
</kw>
<msg timestamp="20230923 10:33:37.597" level="INFO">${result} = 401</msg>
<status status="PASS" starttime="20230923 10:33:37.569" endtime="20230923 10:33:37.597"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:33:37.598" endtime="20230923 10:33:37.599"/>
</kw>
<status status="PASS" starttime="20230923 10:33:37.598" endtime="20230923 10:33:37.599"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230923 10:33:37.599" endtime="20230923 10:33:37.599"/>
</kw>
<status status="NOT RUN" starttime="20230923 10:33:37.599" endtime="20230923 10:33:37.599"/>
</branch>
<status status="PASS" starttime="20230923 10:33:37.598" endtime="20230923 10:33:37.599"/>
</if>
<status status="PASS" starttime="20230923 10:33:37.569" endtime="20230923 10:33:37.600"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>scm</arg>
<arg>scm.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:33:37.609" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:33:37.613" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:33:37.613" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230923 10:33:37.605" endtime="20230923 10:33:37.613"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:33:37.614" level="INFO">scm</msg>
<status status="PASS" starttime="20230923 10:33:37.614" endtime="20230923 10:33:37.615"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:33:37.615" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:33:37.615" endtime="20230923 10:33:37.615"/>
</kw>
<status status="PASS" starttime="20230923 10:33:37.605" endtime="20230923 10:33:37.616"/>
</kw>
<msg timestamp="20230923 10:33:37.616" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:33:37.603" endtime="20230923 10:33:37.616"/>
</kw>
<msg timestamp="20230923 10:33:37.616" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230923 10:33:37.602" endtime="20230923 10:33:37.616"/>
</kw>
<msg timestamp="20230923 10:33:37.617" level="INFO">${TEST_USER} = scm/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230923 10:33:37.602" endtime="20230923 10:33:37.617"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230923 10:33:37.617" level="INFO">${TEST_USER} = scm/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230923 10:33:37.617" endtime="20230923 10:33:37.617"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:33:37.623" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/scm.keytab scm/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:33:37.641" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:33:37.641" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:33:37.620" endtime="20230923 10:33:37.641"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:33:37.643" level="INFO"/>
<status status="PASS" starttime="20230923 10:33:37.642" endtime="20230923 10:33:37.643"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:33:37.644" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:33:37.643" endtime="20230923 10:33:37.644"/>
</kw>
<status status="PASS" starttime="20230923 10:33:37.619" endtime="20230923 10:33:37.644"/>
</kw>
<msg timestamp="20230923 10:33:37.644" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:33:37.619" endtime="20230923 10:33:37.644"/>
</kw>
<status status="PASS" starttime="20230923 10:33:37.618" endtime="20230923 10:33:37.644"/>
</kw>
<status status="PASS" starttime="20230923 10:33:37.618" endtime="20230923 10:33:37.645"/>
</kw>
<status status="PASS" starttime="20230923 10:33:37.601" endtime="20230923 10:33:37.645"/>
</kw>
<status status="PASS" starttime="20230923 10:33:37.600" endtime="20230923 10:33:37.645"/>
</kw>
<status status="PASS" starttime="20230923 10:33:37.600" endtime="20230923 10:33:37.645"/>
</kw>
<kw name="Check http return code">
<arg>${ENDPOINT_URL}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:33:37.650" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:33:37.683" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:33:37.684" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230923 10:33:37.647" endtime="20230923 10:33:37.684"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:33:37.686" level="INFO">200</msg>
<status status="PASS" starttime="20230923 10:33:37.684" endtime="20230923 10:33:37.686"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:33:37.687" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:33:37.686" endtime="20230923 10:33:37.687"/>
</kw>
<status status="PASS" starttime="20230923 10:33:37.647" endtime="20230923 10:33:37.687"/>
</kw>
<msg timestamp="20230923 10:33:37.687" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:33:37.646" endtime="20230923 10:33:37.687"/>
</kw>
<msg timestamp="20230923 10:33:37.687" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230923 10:33:37.646" endtime="20230923 10:33:37.688"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:33:37.688" endtime="20230923 10:33:37.689"/>
</kw>
<status status="PASS" starttime="20230923 10:33:37.688" endtime="20230923 10:33:37.689"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230923 10:33:37.689" endtime="20230923 10:33:37.689"/>
</kw>
<status status="NOT RUN" starttime="20230923 10:33:37.689" endtime="20230923 10:33:37.689"/>
</branch>
<status status="PASS" starttime="20230923 10:33:37.688" endtime="20230923 10:33:37.689"/>
</if>
<status status="PASS" starttime="20230923 10:33:37.645" endtime="20230923 10:33:37.689"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230923 10:33:37.555" endtime="20230923 10:33:37.690"/>
</test>
<test id="s1-s7-s1-t5" name="Check admin only api access" line="107">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:33:37.696" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:33:37.701" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:33:37.701" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:33:37.694" endtime="20230923 10:33:37.701"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:33:37.703" level="INFO"/>
<status status="PASS" starttime="20230923 10:33:37.702" endtime="20230923 10:33:37.703"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:33:37.704" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:33:37.703" endtime="20230923 10:33:37.704"/>
</kw>
<status status="PASS" starttime="20230923 10:33:37.693" endtime="20230923 10:33:37.704"/>
</kw>
<msg timestamp="20230923 10:33:37.704" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:33:37.693" endtime="20230923 10:33:37.704"/>
</kw>
<status status="PASS" starttime="20230923 10:33:37.692" endtime="20230923 10:33:37.705"/>
</kw>
<kw name="Check http return code">
<arg>${ADMIN_API_ENDPOINT_URL}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:33:37.728" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:33:37.747" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:33:37.747" level="INFO">${output} = 401</msg>
<status status="PASS" starttime="20230923 10:33:37.725" endtime="20230923 10:33:37.747"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:33:37.749" level="INFO">401</msg>
<status status="PASS" starttime="20230923 10:33:37.748" endtime="20230923 10:33:37.749"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:33:37.749" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:33:37.749" endtime="20230923 10:33:37.749"/>
</kw>
<status status="PASS" starttime="20230923 10:33:37.725" endtime="20230923 10:33:37.750"/>
</kw>
<msg timestamp="20230923 10:33:37.750" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:33:37.706" endtime="20230923 10:33:37.750"/>
</kw>
<msg timestamp="20230923 10:33:37.750" level="INFO">${result} = 401</msg>
<status status="PASS" starttime="20230923 10:33:37.705" endtime="20230923 10:33:37.750"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:33:37.751" endtime="20230923 10:33:37.751"/>
</kw>
<status status="PASS" starttime="20230923 10:33:37.750" endtime="20230923 10:33:37.751"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230923 10:33:37.752" endtime="20230923 10:33:37.752"/>
</kw>
<status status="NOT RUN" starttime="20230923 10:33:37.752" endtime="20230923 10:33:37.752"/>
</branch>
<status status="PASS" starttime="20230923 10:33:37.750" endtime="20230923 10:33:37.752"/>
</if>
<status status="PASS" starttime="20230923 10:33:37.705" endtime="20230923 10:33:37.752"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>scm</arg>
<arg>scm.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:33:37.758" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:33:37.762" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:33:37.763" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230923 10:33:37.755" endtime="20230923 10:33:37.763"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:33:37.764" level="INFO">scm</msg>
<status status="PASS" starttime="20230923 10:33:37.763" endtime="20230923 10:33:37.764"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:33:37.765" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:33:37.764" endtime="20230923 10:33:37.765"/>
</kw>
<status status="PASS" starttime="20230923 10:33:37.755" endtime="20230923 10:33:37.765"/>
</kw>
<msg timestamp="20230923 10:33:37.765" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:33:37.755" endtime="20230923 10:33:37.765"/>
</kw>
<msg timestamp="20230923 10:33:37.766" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230923 10:33:37.754" endtime="20230923 10:33:37.766"/>
</kw>
<msg timestamp="20230923 10:33:37.766" level="INFO">${TEST_USER} = scm/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230923 10:33:37.754" endtime="20230923 10:33:37.766"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230923 10:33:37.767" level="INFO">${TEST_USER} = scm/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230923 10:33:37.766" endtime="20230923 10:33:37.767"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:33:37.772" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/scm.keytab scm/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:33:37.801" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:33:37.801" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:33:37.769" endtime="20230923 10:33:37.801"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:33:37.813" level="INFO"/>
<status status="PASS" starttime="20230923 10:33:37.802" endtime="20230923 10:33:37.813"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:33:37.814" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:33:37.813" endtime="20230923 10:33:37.814"/>
</kw>
<status status="PASS" starttime="20230923 10:33:37.769" endtime="20230923 10:33:37.814"/>
</kw>
<msg timestamp="20230923 10:33:37.814" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:33:37.769" endtime="20230923 10:33:37.814"/>
</kw>
<status status="PASS" starttime="20230923 10:33:37.768" endtime="20230923 10:33:37.814"/>
</kw>
<status status="PASS" starttime="20230923 10:33:37.767" endtime="20230923 10:33:37.814"/>
</kw>
<status status="PASS" starttime="20230923 10:33:37.753" endtime="20230923 10:33:37.814"/>
</kw>
<status status="PASS" starttime="20230923 10:33:37.753" endtime="20230923 10:33:37.814"/>
</kw>
<status status="PASS" starttime="20230923 10:33:37.752" endtime="20230923 10:33:37.815"/>
</kw>
<kw name="Check http return code">
<arg>${ADMIN_API_ENDPOINT_URL}</arg>
<arg>403</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:33:37.830" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:33:37.894" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:33:37.894" level="INFO">${output} = 403</msg>
<status status="PASS" starttime="20230923 10:33:37.822" endtime="20230923 10:33:37.894"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:33:37.896" level="INFO">403</msg>
<status status="PASS" starttime="20230923 10:33:37.895" endtime="20230923 10:33:37.896"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:33:37.897" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:33:37.896" endtime="20230923 10:33:37.897"/>
</kw>
<status status="PASS" starttime="20230923 10:33:37.821" endtime="20230923 10:33:37.897"/>
</kw>
<msg timestamp="20230923 10:33:37.897" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:33:37.820" endtime="20230923 10:33:37.897"/>
</kw>
<msg timestamp="20230923 10:33:37.897" level="INFO">${result} = 403</msg>
<status status="PASS" starttime="20230923 10:33:37.815" endtime="20230923 10:33:37.898"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:33:37.899" endtime="20230923 10:33:37.899"/>
</kw>
<status status="PASS" starttime="20230923 10:33:37.898" endtime="20230923 10:33:37.899"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230923 10:33:37.900" endtime="20230923 10:33:37.900"/>
</kw>
<status status="NOT RUN" starttime="20230923 10:33:37.900" endtime="20230923 10:33:37.900"/>
</branch>
<status status="PASS" starttime="20230923 10:33:37.898" endtime="20230923 10:33:37.900"/>
</if>
<status status="PASS" starttime="20230923 10:33:37.815" endtime="20230923 10:33:37.900"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:33:37.908" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:33:37.912" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:33:37.912" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230923 10:33:37.904" endtime="20230923 10:33:37.912"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:33:37.914" level="INFO">scm</msg>
<status status="PASS" starttime="20230923 10:33:37.913" endtime="20230923 10:33:37.914"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:33:37.914" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:33:37.914" endtime="20230923 10:33:37.915"/>
</kw>
<status status="PASS" starttime="20230923 10:33:37.904" endtime="20230923 10:33:37.915"/>
</kw>
<msg timestamp="20230923 10:33:37.915" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:33:37.903" endtime="20230923 10:33:37.915"/>
</kw>
<msg timestamp="20230923 10:33:37.916" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230923 10:33:37.903" endtime="20230923 10:33:37.916"/>
</kw>
<msg timestamp="20230923 10:33:37.916" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230923 10:33:37.902" endtime="20230923 10:33:37.916"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230923 10:33:37.917" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230923 10:33:37.916" endtime="20230923 10:33:37.917"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:33:37.922" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:33:37.939" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:33:37.939" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:33:37.919" endtime="20230923 10:33:37.940"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:33:37.941" level="INFO"/>
<status status="PASS" starttime="20230923 10:33:37.940" endtime="20230923 10:33:37.941"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:33:37.942" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:33:37.941" endtime="20230923 10:33:37.942"/>
</kw>
<status status="PASS" starttime="20230923 10:33:37.919" endtime="20230923 10:33:37.942"/>
</kw>
<msg timestamp="20230923 10:33:37.942" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:33:37.918" endtime="20230923 10:33:37.943"/>
</kw>
<status status="PASS" starttime="20230923 10:33:37.917" endtime="20230923 10:33:37.943"/>
</kw>
<status status="PASS" starttime="20230923 10:33:37.917" endtime="20230923 10:33:37.943"/>
</kw>
<status status="PASS" starttime="20230923 10:33:37.902" endtime="20230923 10:33:37.943"/>
</kw>
<status status="PASS" starttime="20230923 10:33:37.901" endtime="20230923 10:33:37.943"/>
</kw>
<status status="PASS" starttime="20230923 10:33:37.900" endtime="20230923 10:33:37.943"/>
</kw>
<kw name="Check http return code">
<arg>${ADMIN_API_ENDPOINT_URL}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:33:37.949" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:33:37.981" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:33:37.981" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230923 10:33:37.946" endtime="20230923 10:33:37.981"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:33:37.983" level="INFO">200</msg>
<status status="PASS" starttime="20230923 10:33:37.982" endtime="20230923 10:33:37.983"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:33:37.984" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:33:37.983" endtime="20230923 10:33:37.984"/>
</kw>
<status status="PASS" starttime="20230923 10:33:37.945" endtime="20230923 10:33:37.984"/>
</kw>
<msg timestamp="20230923 10:33:37.985" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:33:37.945" endtime="20230923 10:33:37.985"/>
</kw>
<msg timestamp="20230923 10:33:37.985" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230923 10:33:37.944" endtime="20230923 10:33:37.985"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:33:37.986" endtime="20230923 10:33:37.987"/>
</kw>
<status status="PASS" starttime="20230923 10:33:37.985" endtime="20230923 10:33:37.987"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230923 10:33:37.987" endtime="20230923 10:33:37.987"/>
</kw>
<status status="NOT RUN" starttime="20230923 10:33:37.987" endtime="20230923 10:33:37.987"/>
</branch>
<status status="PASS" starttime="20230923 10:33:37.985" endtime="20230923 10:33:37.987"/>
</if>
<status status="PASS" starttime="20230923 10:33:37.943" endtime="20230923 10:33:37.987"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:33:37.995" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:33:38.000" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:33:38.000" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230923 10:33:37.992" endtime="20230923 10:33:38.000"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:33:38.002" level="INFO">scm</msg>
<status status="PASS" starttime="20230923 10:33:38.000" endtime="20230923 10:33:38.002"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:33:38.003" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:33:38.002" endtime="20230923 10:33:38.003"/>
</kw>
<status status="PASS" starttime="20230923 10:33:37.991" endtime="20230923 10:33:38.004"/>
</kw>
<msg timestamp="20230923 10:33:38.004" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:33:37.990" endtime="20230923 10:33:38.004"/>
</kw>
<msg timestamp="20230923 10:33:38.004" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230923 10:33:37.990" endtime="20230923 10:33:38.004"/>
</kw>
<msg timestamp="20230923 10:33:38.004" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230923 10:33:37.989" endtime="20230923 10:33:38.004"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230923 10:33:38.005" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230923 10:33:38.005" endtime="20230923 10:33:38.005"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:33:38.012" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser2.keytab testuser2/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:33:38.028" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:33:38.028" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:33:38.007" endtime="20230923 10:33:38.029"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:33:38.030" level="INFO"/>
<status status="PASS" starttime="20230923 10:33:38.029" endtime="20230923 10:33:38.030"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:33:38.030" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:33:38.030" endtime="20230923 10:33:38.030"/>
</kw>
<status status="PASS" starttime="20230923 10:33:38.007" endtime="20230923 10:33:38.031"/>
</kw>
<msg timestamp="20230923 10:33:38.031" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:33:38.007" endtime="20230923 10:33:38.031"/>
</kw>
<status status="PASS" starttime="20230923 10:33:38.006" endtime="20230923 10:33:38.031"/>
</kw>
<status status="PASS" starttime="20230923 10:33:38.005" endtime="20230923 10:33:38.031"/>
</kw>
<status status="PASS" starttime="20230923 10:33:37.989" endtime="20230923 10:33:38.031"/>
</kw>
<status status="PASS" starttime="20230923 10:33:37.988" endtime="20230923 10:33:38.031"/>
</kw>
<status status="PASS" starttime="20230923 10:33:37.987" endtime="20230923 10:33:38.031"/>
</kw>
<kw name="Check http return code">
<arg>${ADMIN_API_ENDPOINT_URL}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:33:38.036" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:33:38.077" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:33:38.077" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230923 10:33:38.033" endtime="20230923 10:33:38.077"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:33:38.078" level="INFO">200</msg>
<status status="PASS" starttime="20230923 10:33:38.077" endtime="20230923 10:33:38.078"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:33:38.079" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:33:38.079" endtime="20230923 10:33:38.079"/>
</kw>
<status status="PASS" starttime="20230923 10:33:38.033" endtime="20230923 10:33:38.080"/>
</kw>
<msg timestamp="20230923 10:33:38.080" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:33:38.033" endtime="20230923 10:33:38.080"/>
</kw>
<msg timestamp="20230923 10:33:38.081" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230923 10:33:38.032" endtime="20230923 10:33:38.081"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:33:38.081" endtime="20230923 10:33:38.082"/>
</kw>
<status status="PASS" starttime="20230923 10:33:38.081" endtime="20230923 10:33:38.082"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230923 10:33:38.082" endtime="20230923 10:33:38.082"/>
</kw>
<status status="NOT RUN" starttime="20230923 10:33:38.082" endtime="20230923 10:33:38.082"/>
</branch>
<status status="PASS" starttime="20230923 10:33:38.081" endtime="20230923 10:33:38.082"/>
</if>
<status status="PASS" starttime="20230923 10:33:38.031" endtime="20230923 10:33:38.082"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230923 10:33:37.691" endtime="20230923 10:33:38.083"/>
</test>
<test id="s1-s7-s1-t6" name="Check unhealthy, (admin) api access" line="120">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:33:38.089" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:33:38.094" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:33:38.094" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:33:38.086" endtime="20230923 10:33:38.094"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:33:38.095" level="INFO"/>
<status status="PASS" starttime="20230923 10:33:38.094" endtime="20230923 10:33:38.095"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:33:38.096" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:33:38.095" endtime="20230923 10:33:38.096"/>
</kw>
<status status="PASS" starttime="20230923 10:33:38.086" endtime="20230923 10:33:38.096"/>
</kw>
<msg timestamp="20230923 10:33:38.096" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:33:38.085" endtime="20230923 10:33:38.096"/>
</kw>
<status status="PASS" starttime="20230923 10:33:38.085" endtime="20230923 10:33:38.096"/>
</kw>
<kw name="Check http return code">
<arg>${UNHEALTHY_ENDPOINT_URL}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:33:38.102" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers/unhealthy 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:33:38.117" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:33:38.117" level="INFO">${output} = 401</msg>
<status status="PASS" starttime="20230923 10:33:38.099" endtime="20230923 10:33:38.117"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:33:38.118" level="INFO">401</msg>
<status status="PASS" starttime="20230923 10:33:38.117" endtime="20230923 10:33:38.118"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:33:38.119" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:33:38.118" endtime="20230923 10:33:38.119"/>
</kw>
<status status="PASS" starttime="20230923 10:33:38.099" endtime="20230923 10:33:38.119"/>
</kw>
<msg timestamp="20230923 10:33:38.119" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:33:38.098" endtime="20230923 10:33:38.119"/>
</kw>
<msg timestamp="20230923 10:33:38.120" level="INFO">${result} = 401</msg>
<status status="PASS" starttime="20230923 10:33:38.097" endtime="20230923 10:33:38.120"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:33:38.120" endtime="20230923 10:33:38.121"/>
</kw>
<status status="PASS" starttime="20230923 10:33:38.120" endtime="20230923 10:33:38.121"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230923 10:33:38.121" endtime="20230923 10:33:38.121"/>
</kw>
<status status="NOT RUN" starttime="20230923 10:33:38.121" endtime="20230923 10:33:38.121"/>
</branch>
<status status="PASS" starttime="20230923 10:33:38.120" endtime="20230923 10:33:38.121"/>
</if>
<status status="PASS" starttime="20230923 10:33:38.097" endtime="20230923 10:33:38.121"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>scm</arg>
<arg>scm.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:33:38.128" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:33:38.132" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:33:38.132" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230923 10:33:38.125" endtime="20230923 10:33:38.132"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:33:38.133" level="INFO">scm</msg>
<status status="PASS" starttime="20230923 10:33:38.133" endtime="20230923 10:33:38.133"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:33:38.134" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:33:38.134" endtime="20230923 10:33:38.134"/>
</kw>
<status status="PASS" starttime="20230923 10:33:38.124" endtime="20230923 10:33:38.134"/>
</kw>
<msg timestamp="20230923 10:33:38.135" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:33:38.124" endtime="20230923 10:33:38.135"/>
</kw>
<msg timestamp="20230923 10:33:38.135" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230923 10:33:38.124" endtime="20230923 10:33:38.135"/>
</kw>
<msg timestamp="20230923 10:33:38.135" level="INFO">${TEST_USER} = scm/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230923 10:33:38.123" endtime="20230923 10:33:38.135"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230923 10:33:38.136" level="INFO">${TEST_USER} = scm/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230923 10:33:38.135" endtime="20230923 10:33:38.136"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:33:38.141" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/scm.keytab scm/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:33:38.157" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:33:38.157" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:33:38.139" endtime="20230923 10:33:38.157"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:33:38.158" level="INFO"/>
<status status="PASS" starttime="20230923 10:33:38.158" endtime="20230923 10:33:38.159"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:33:38.159" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:33:38.159" endtime="20230923 10:33:38.159"/>
</kw>
<status status="PASS" starttime="20230923 10:33:38.138" endtime="20230923 10:33:38.160"/>
</kw>
<msg timestamp="20230923 10:33:38.160" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:33:38.138" endtime="20230923 10:33:38.160"/>
</kw>
<status status="PASS" starttime="20230923 10:33:38.137" endtime="20230923 10:33:38.160"/>
</kw>
<status status="PASS" starttime="20230923 10:33:38.136" endtime="20230923 10:33:38.160"/>
</kw>
<status status="PASS" starttime="20230923 10:33:38.123" endtime="20230923 10:33:38.160"/>
</kw>
<status status="PASS" starttime="20230923 10:33:38.122" endtime="20230923 10:33:38.160"/>
</kw>
<status status="PASS" starttime="20230923 10:33:38.122" endtime="20230923 10:33:38.160"/>
</kw>
<kw name="Check http return code">
<arg>${UNHEALTHY_ENDPOINT_URL}</arg>
<arg>403</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:33:38.166" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers/unhealthy 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:33:38.197" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:33:38.197" level="INFO">${output} = 403</msg>
<status status="PASS" starttime="20230923 10:33:38.163" endtime="20230923 10:33:38.197"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:33:38.198" level="INFO">403</msg>
<status status="PASS" starttime="20230923 10:33:38.197" endtime="20230923 10:33:38.198"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:33:38.199" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:33:38.199" endtime="20230923 10:33:38.199"/>
</kw>
<status status="PASS" starttime="20230923 10:33:38.163" endtime="20230923 10:33:38.199"/>
</kw>
<msg timestamp="20230923 10:33:38.200" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:33:38.162" endtime="20230923 10:33:38.200"/>
</kw>
<msg timestamp="20230923 10:33:38.200" level="INFO">${result} = 403</msg>
<status status="PASS" starttime="20230923 10:33:38.161" endtime="20230923 10:33:38.200"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:33:38.201" endtime="20230923 10:33:38.201"/>
</kw>
<status status="PASS" starttime="20230923 10:33:38.200" endtime="20230923 10:33:38.201"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230923 10:33:38.202" endtime="20230923 10:33:38.202"/>
</kw>
<status status="NOT RUN" starttime="20230923 10:33:38.201" endtime="20230923 10:33:38.202"/>
</branch>
<status status="PASS" starttime="20230923 10:33:38.200" endtime="20230923 10:33:38.202"/>
</if>
<status status="PASS" starttime="20230923 10:33:38.161" endtime="20230923 10:33:38.202"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:33:38.209" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:33:38.214" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:33:38.214" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230923 10:33:38.205" endtime="20230923 10:33:38.214"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:33:38.215" level="INFO">scm</msg>
<status status="PASS" starttime="20230923 10:33:38.214" endtime="20230923 10:33:38.215"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:33:38.216" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:33:38.216" endtime="20230923 10:33:38.216"/>
</kw>
<status status="PASS" starttime="20230923 10:33:38.205" endtime="20230923 10:33:38.217"/>
</kw>
<msg timestamp="20230923 10:33:38.217" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:33:38.204" endtime="20230923 10:33:38.217"/>
</kw>
<msg timestamp="20230923 10:33:38.217" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230923 10:33:38.204" endtime="20230923 10:33:38.217"/>
</kw>
<msg timestamp="20230923 10:33:38.217" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230923 10:33:38.204" endtime="20230923 10:33:38.218"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230923 10:33:38.218" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230923 10:33:38.218" endtime="20230923 10:33:38.218"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:33:38.224" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:33:38.241" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:33:38.241" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:33:38.221" endtime="20230923 10:33:38.241"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:33:38.243" level="INFO"/>
<status status="PASS" starttime="20230923 10:33:38.242" endtime="20230923 10:33:38.243"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:33:38.243" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:33:38.243" endtime="20230923 10:33:38.244"/>
</kw>
<status status="PASS" starttime="20230923 10:33:38.220" endtime="20230923 10:33:38.244"/>
</kw>
<msg timestamp="20230923 10:33:38.244" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:33:38.220" endtime="20230923 10:33:38.244"/>
</kw>
<status status="PASS" starttime="20230923 10:33:38.219" endtime="20230923 10:33:38.244"/>
</kw>
<status status="PASS" starttime="20230923 10:33:38.219" endtime="20230923 10:33:38.244"/>
</kw>
<status status="PASS" starttime="20230923 10:33:38.203" endtime="20230923 10:33:38.244"/>
</kw>
<status status="PASS" starttime="20230923 10:33:38.203" endtime="20230923 10:33:38.244"/>
</kw>
<status status="PASS" starttime="20230923 10:33:38.202" endtime="20230923 10:33:38.244"/>
</kw>
<kw name="Check http return code">
<arg>${UNHEALTHY_ENDPOINT_URL}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:33:38.250" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers/unhealthy 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:33:38.317" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:33:38.317" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230923 10:33:38.247" endtime="20230923 10:33:38.317"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:33:38.319" level="INFO">200</msg>
<status status="PASS" starttime="20230923 10:33:38.318" endtime="20230923 10:33:38.319"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:33:38.319" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:33:38.319" endtime="20230923 10:33:38.319"/>
</kw>
<status status="PASS" starttime="20230923 10:33:38.247" endtime="20230923 10:33:38.320"/>
</kw>
<msg timestamp="20230923 10:33:38.320" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:33:38.246" endtime="20230923 10:33:38.320"/>
</kw>
<msg timestamp="20230923 10:33:38.320" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230923 10:33:38.245" endtime="20230923 10:33:38.320"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:33:38.321" endtime="20230923 10:33:38.321"/>
</kw>
<status status="PASS" starttime="20230923 10:33:38.320" endtime="20230923 10:33:38.321"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230923 10:33:38.322" endtime="20230923 10:33:38.322"/>
</kw>
<status status="NOT RUN" starttime="20230923 10:33:38.321" endtime="20230923 10:33:38.322"/>
</branch>
<status status="PASS" starttime="20230923 10:33:38.320" endtime="20230923 10:33:38.322"/>
</if>
<status status="PASS" starttime="20230923 10:33:38.245" endtime="20230923 10:33:38.322"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:33:38.328" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:33:38.332" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:33:38.332" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230923 10:33:38.325" endtime="20230923 10:33:38.332"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:33:38.333" level="INFO">scm</msg>
<status status="PASS" starttime="20230923 10:33:38.333" endtime="20230923 10:33:38.334"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:33:38.334" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:33:38.334" endtime="20230923 10:33:38.334"/>
</kw>
<status status="PASS" starttime="20230923 10:33:38.325" endtime="20230923 10:33:38.335"/>
</kw>
<msg timestamp="20230923 10:33:38.335" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:33:38.324" endtime="20230923 10:33:38.335"/>
</kw>
<msg timestamp="20230923 10:33:38.335" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230923 10:33:38.324" endtime="20230923 10:33:38.335"/>
</kw>
<msg timestamp="20230923 10:33:38.335" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230923 10:33:38.323" endtime="20230923 10:33:38.335"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230923 10:33:38.336" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230923 10:33:38.335" endtime="20230923 10:33:38.336"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:33:38.341" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser2.keytab testuser2/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:33:38.359" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:33:38.360" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:33:38.338" endtime="20230923 10:33:38.360"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:33:38.361" level="INFO"/>
<status status="PASS" starttime="20230923 10:33:38.360" endtime="20230923 10:33:38.361"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:33:38.362" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:33:38.361" endtime="20230923 10:33:38.362"/>
</kw>
<status status="PASS" starttime="20230923 10:33:38.338" endtime="20230923 10:33:38.362"/>
</kw>
<msg timestamp="20230923 10:33:38.362" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:33:38.337" endtime="20230923 10:33:38.362"/>
</kw>
<status status="PASS" starttime="20230923 10:33:38.337" endtime="20230923 10:33:38.363"/>
</kw>
<status status="PASS" starttime="20230923 10:33:38.336" endtime="20230923 10:33:38.363"/>
</kw>
<status status="PASS" starttime="20230923 10:33:38.323" endtime="20230923 10:33:38.363"/>
</kw>
<status status="PASS" starttime="20230923 10:33:38.323" endtime="20230923 10:33:38.363"/>
</kw>
<status status="PASS" starttime="20230923 10:33:38.322" endtime="20230923 10:33:38.363"/>
</kw>
<kw name="Check http return code">
<arg>${UNHEALTHY_ENDPOINT_URL}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:33:38.368" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers/unhealthy 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:33:38.405" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:33:38.405" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230923 10:33:38.366" endtime="20230923 10:33:38.405"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:33:38.407" level="INFO">200</msg>
<status status="PASS" starttime="20230923 10:33:38.406" endtime="20230923 10:33:38.407"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:33:38.408" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:33:38.408" endtime="20230923 10:33:38.408"/>
</kw>
<status status="PASS" starttime="20230923 10:33:38.365" endtime="20230923 10:33:38.409"/>
</kw>
<msg timestamp="20230923 10:33:38.409" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:33:38.364" endtime="20230923 10:33:38.409"/>
</kw>
<msg timestamp="20230923 10:33:38.409" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230923 10:33:38.364" endtime="20230923 10:33:38.409"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:33:38.410" endtime="20230923 10:33:38.411"/>
</kw>
<status status="PASS" starttime="20230923 10:33:38.410" endtime="20230923 10:33:38.411"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230923 10:33:38.411" endtime="20230923 10:33:38.411"/>
</kw>
<status status="NOT RUN" starttime="20230923 10:33:38.411" endtime="20230923 10:33:38.411"/>
</branch>
<status status="PASS" starttime="20230923 10:33:38.409" endtime="20230923 10:33:38.411"/>
</if>
<status status="PASS" starttime="20230923 10:33:38.363" endtime="20230923 10:33:38.411"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230923 10:33:38.084" endtime="20230923 10:33:38.412"/>
</test>
<test id="s1-s7-s1-t7" name="Check normal api access" line="133">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:33:38.419" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:33:38.423" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:33:38.424" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:33:38.416" endtime="20230923 10:33:38.424"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:33:38.425" level="INFO"/>
<status status="PASS" starttime="20230923 10:33:38.424" endtime="20230923 10:33:38.425"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:33:38.426" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:33:38.425" endtime="20230923 10:33:38.426"/>
</kw>
<status status="PASS" starttime="20230923 10:33:38.415" endtime="20230923 10:33:38.426"/>
</kw>
<msg timestamp="20230923 10:33:38.426" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:33:38.415" endtime="20230923 10:33:38.426"/>
</kw>
<status status="PASS" starttime="20230923 10:33:38.414" endtime="20230923 10:33:38.426"/>
</kw>
<kw name="Check http return code">
<arg>${NON_ADMIN_API_ENDPOINT_URL}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:33:38.432" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/clusterState 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:33:38.450" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:33:38.450" level="INFO">${output} = 401</msg>
<status status="PASS" starttime="20230923 10:33:38.429" endtime="20230923 10:33:38.450"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:33:38.451" level="INFO">401</msg>
<status status="PASS" starttime="20230923 10:33:38.451" endtime="20230923 10:33:38.452"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:33:38.452" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:33:38.452" endtime="20230923 10:33:38.452"/>
</kw>
<status status="PASS" starttime="20230923 10:33:38.428" endtime="20230923 10:33:38.453"/>
</kw>
<msg timestamp="20230923 10:33:38.453" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:33:38.428" endtime="20230923 10:33:38.453"/>
</kw>
<msg timestamp="20230923 10:33:38.453" level="INFO">${result} = 401</msg>
<status status="PASS" starttime="20230923 10:33:38.427" endtime="20230923 10:33:38.453"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:33:38.454" endtime="20230923 10:33:38.455"/>
</kw>
<status status="PASS" starttime="20230923 10:33:38.454" endtime="20230923 10:33:38.455"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230923 10:33:38.455" endtime="20230923 10:33:38.455"/>
</kw>
<status status="NOT RUN" starttime="20230923 10:33:38.455" endtime="20230923 10:33:38.455"/>
</branch>
<status status="PASS" starttime="20230923 10:33:38.453" endtime="20230923 10:33:38.455"/>
</if>
<status status="PASS" starttime="20230923 10:33:38.427" endtime="20230923 10:33:38.455"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>scm</arg>
<arg>scm.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:33:38.462" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:33:38.466" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:33:38.466" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230923 10:33:38.460" endtime="20230923 10:33:38.466"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:33:38.467" level="INFO">scm</msg>
<status status="PASS" starttime="20230923 10:33:38.466" endtime="20230923 10:33:38.467"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:33:38.468" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:33:38.467" endtime="20230923 10:33:38.468"/>
</kw>
<status status="PASS" starttime="20230923 10:33:38.459" endtime="20230923 10:33:38.468"/>
</kw>
<msg timestamp="20230923 10:33:38.468" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:33:38.459" endtime="20230923 10:33:38.469"/>
</kw>
<msg timestamp="20230923 10:33:38.469" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230923 10:33:38.458" endtime="20230923 10:33:38.469"/>
</kw>
<msg timestamp="20230923 10:33:38.469" level="INFO">${TEST_USER} = scm/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230923 10:33:38.457" endtime="20230923 10:33:38.469"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230923 10:33:38.470" level="INFO">${TEST_USER} = scm/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230923 10:33:38.469" endtime="20230923 10:33:38.470"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:33:38.475" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/scm.keytab scm/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:33:38.499" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:33:38.499" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:33:38.473" endtime="20230923 10:33:38.499"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:33:38.500" level="INFO"/>
<status status="PASS" starttime="20230923 10:33:38.500" endtime="20230923 10:33:38.501"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:33:38.501" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:33:38.501" endtime="20230923 10:33:38.501"/>
</kw>
<status status="PASS" starttime="20230923 10:33:38.472" endtime="20230923 10:33:38.502"/>
</kw>
<msg timestamp="20230923 10:33:38.502" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:33:38.472" endtime="20230923 10:33:38.502"/>
</kw>
<status status="PASS" starttime="20230923 10:33:38.471" endtime="20230923 10:33:38.502"/>
</kw>
<status status="PASS" starttime="20230923 10:33:38.470" endtime="20230923 10:33:38.502"/>
</kw>
<status status="PASS" starttime="20230923 10:33:38.457" endtime="20230923 10:33:38.502"/>
</kw>
<status status="PASS" starttime="20230923 10:33:38.456" endtime="20230923 10:33:38.502"/>
</kw>
<status status="PASS" starttime="20230923 10:33:38.456" endtime="20230923 10:33:38.502"/>
</kw>
<kw name="Check http return code">
<arg>${NON_ADMIN_API_ENDPOINT_URL}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:33:38.507" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/clusterState 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:33:38.550" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:33:38.550" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230923 10:33:38.505" endtime="20230923 10:33:38.550"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:33:38.551" level="INFO">200</msg>
<status status="PASS" starttime="20230923 10:33:38.550" endtime="20230923 10:33:38.551"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:33:38.552" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:33:38.551" endtime="20230923 10:33:38.552"/>
</kw>
<status status="PASS" starttime="20230923 10:33:38.504" endtime="20230923 10:33:38.552"/>
</kw>
<msg timestamp="20230923 10:33:38.552" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:33:38.504" endtime="20230923 10:33:38.553"/>
</kw>
<msg timestamp="20230923 10:33:38.553" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230923 10:33:38.503" endtime="20230923 10:33:38.553"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:33:38.554" endtime="20230923 10:33:38.554"/>
</kw>
<status status="PASS" starttime="20230923 10:33:38.553" endtime="20230923 10:33:38.554"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230923 10:33:38.555" endtime="20230923 10:33:38.555"/>
</kw>
<status status="NOT RUN" starttime="20230923 10:33:38.554" endtime="20230923 10:33:38.555"/>
</branch>
<status status="PASS" starttime="20230923 10:33:38.553" endtime="20230923 10:33:38.555"/>
</if>
<status status="PASS" starttime="20230923 10:33:38.503" endtime="20230923 10:33:38.555"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230923 10:33:38.413" endtime="20230923 10:33:38.555"/>
</test>
<doc>Smoke test to start cluster with docker-compose environments.</doc>
<status status="PASS" starttime="20230923 10:32:25.265" endtime="20230923 10:33:38.558"/>
</suite>
<suite id="s1-s7-s2" name="Recon-Nssummary" source="/opt/hadoop/smoketest/recon/recon-nssummary.robot">
<test id="s1-s7-s2-t1" name="Check volume creation" line="99">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:33:38.578" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:33:38.582" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:33:38.582" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:33:38.575" endtime="20230923 10:33:38.582"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:33:38.583" level="INFO"/>
<status status="PASS" starttime="20230923 10:33:38.583" endtime="20230923 10:33:38.583"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:33:38.584" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:33:38.584" endtime="20230923 10:33:38.584"/>
</kw>
<status status="PASS" starttime="20230923 10:33:38.574" endtime="20230923 10:33:38.585"/>
</kw>
<msg timestamp="20230923 10:33:38.585" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:33:38.574" endtime="20230923 10:33:38.585"/>
</kw>
<status status="PASS" starttime="20230923 10:33:38.574" endtime="20230923 10:33:38.585"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:33:38.592" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:33:38.596" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:33:38.596" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230923 10:33:38.589" endtime="20230923 10:33:38.596"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:33:38.597" level="INFO">scm</msg>
<status status="PASS" starttime="20230923 10:33:38.596" endtime="20230923 10:33:38.597"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:33:38.598" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:33:38.597" endtime="20230923 10:33:38.598"/>
</kw>
<status status="PASS" starttime="20230923 10:33:38.589" endtime="20230923 10:33:38.598"/>
</kw>
<msg timestamp="20230923 10:33:38.598" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:33:38.588" endtime="20230923 10:33:38.598"/>
</kw>
<msg timestamp="20230923 10:33:38.598" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230923 10:33:38.588" endtime="20230923 10:33:38.598"/>
</kw>
<msg timestamp="20230923 10:33:38.599" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230923 10:33:38.587" endtime="20230923 10:33:38.599"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230923 10:33:38.599" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230923 10:33:38.599" endtime="20230923 10:33:38.599"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:33:38.604" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:33:38.622" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:33:38.622" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:33:38.601" endtime="20230923 10:33:38.622"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:33:38.623" level="INFO"/>
<status status="PASS" starttime="20230923 10:33:38.622" endtime="20230923 10:33:38.623"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:33:38.624" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:33:38.623" endtime="20230923 10:33:38.624"/>
</kw>
<status status="PASS" starttime="20230923 10:33:38.601" endtime="20230923 10:33:38.624"/>
</kw>
<msg timestamp="20230923 10:33:38.624" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:33:38.601" endtime="20230923 10:33:38.625"/>
</kw>
<status status="PASS" starttime="20230923 10:33:38.600" endtime="20230923 10:33:38.625"/>
</kw>
<status status="PASS" starttime="20230923 10:33:38.599" endtime="20230923 10:33:38.625"/>
</kw>
<status status="PASS" starttime="20230923 10:33:38.587" endtime="20230923 10:33:38.625"/>
</kw>
<status status="PASS" starttime="20230923 10:33:38.586" endtime="20230923 10:33:38.625"/>
</kw>
<status status="PASS" starttime="20230923 10:33:38.585" endtime="20230923 10:33:38.625"/>
</kw>
<kw name="Create volume">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[LOWER]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230923 10:33:38.626" level="INFO">${random} = kzkif</msg>
<status status="PASS" starttime="20230923 10:33:38.626" endtime="20230923 10:33:38.626"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${VOLUME}</arg>
<arg>vol-${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230923 10:33:38.627" level="INFO">${VOLUME} = vol-kzkif</msg>
<status status="PASS" starttime="20230923 10:33:38.626" endtime="20230923 10:33:38.627"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create /${VOLUME}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:33:38.631" level="INFO">Running command 'ozone sh volume create /vol-kzkif 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:33:44.595" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:33:44.595" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:33:38.628" endtime="20230923 10:33:44.595"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:33:44.597" level="INFO"/>
<status status="PASS" starttime="20230923 10:33:44.596" endtime="20230923 10:33:44.597"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:33:44.597" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:33:44.597" endtime="20230923 10:33:44.597"/>
</kw>
<status status="PASS" starttime="20230923 10:33:38.628" endtime="20230923 10:33:44.598"/>
</kw>
<msg timestamp="20230923 10:33:44.598" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:33:38.628" endtime="20230923 10:33:44.598"/>
</kw>
<msg timestamp="20230923 10:33:44.598" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230923 10:33:38.627" endtime="20230923 10:33:44.598"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:33:44.599" endtime="20230923 10:33:44.599"/>
</kw>
<status status="PASS" starttime="20230923 10:33:38.625" endtime="20230923 10:33:44.599"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230923 10:33:38.573" endtime="20230923 10:33:44.599"/>
</test>
<test id="s1-s7-s2-t2" name="Check bucket creation" line="104">
<kw name="Create bucket">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[LOWER]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230923 10:33:44.603" level="INFO">${random} = yfdkx</msg>
<status status="PASS" starttime="20230923 10:33:44.602" endtime="20230923 10:33:44.603"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${BUCKET}</arg>
<arg>buc-${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230923 10:33:44.604" level="INFO">${BUCKET} = buc-yfdkx</msg>
<status status="PASS" starttime="20230923 10:33:44.603" endtime="20230923 10:33:44.604"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket create -l ${BUCKET_LAYOUT} /${VOLUME}/${BUCKET}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:33:44.608" level="INFO">Running command 'ozone sh bucket create -l FILE_SYSTEM_OPTIMIZED /vol-kzkif/buc-yfdkx 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:33:50.718" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:33:50.718" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:33:44.605" endtime="20230923 10:33:50.719"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:33:50.720" level="INFO"/>
<status status="PASS" starttime="20230923 10:33:50.719" endtime="20230923 10:33:50.720"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:33:50.721" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:33:50.720" endtime="20230923 10:33:50.721"/>
</kw>
<status status="PASS" starttime="20230923 10:33:44.605" endtime="20230923 10:33:50.721"/>
</kw>
<msg timestamp="20230923 10:33:50.721" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:33:44.605" endtime="20230923 10:33:50.722"/>
</kw>
<msg timestamp="20230923 10:33:50.722" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230923 10:33:44.604" endtime="20230923 10:33:50.722"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:33:50.722" endtime="20230923 10:33:50.722"/>
</kw>
<status status="PASS" starttime="20230923 10:33:44.602" endtime="20230923 10:33:50.722"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230923 10:33:44.601" endtime="20230923 10:33:50.723"/>
</test>
<test id="s1-s7-s2-t3" name="Check keys creation" line="107">
<kw name="Create keys">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key put /${VOLUME}/${BUCKET}/file1 README.md</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:33:50.732" level="INFO">Running command 'ozone sh key put /vol-kzkif/buc-yfdkx/file1 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:33:58.894" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:33:58.894" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:33:50.727" endtime="20230923 10:33:58.895"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:33:58.896" level="INFO"/>
<status status="PASS" starttime="20230923 10:33:58.895" endtime="20230923 10:33:58.896"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:33:58.897" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:33:58.896" endtime="20230923 10:33:58.897"/>
</kw>
<status status="PASS" starttime="20230923 10:33:50.727" endtime="20230923 10:33:58.897"/>
</kw>
<msg timestamp="20230923 10:33:58.897" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:33:50.726" endtime="20230923 10:33:58.897"/>
</kw>
<msg timestamp="20230923 10:33:58.898" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230923 10:33:50.726" endtime="20230923 10:33:58.898"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:33:58.898" endtime="20230923 10:33:58.898"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key put /${VOLUME}/${BUCKET}/dir1/dir2/file2 HISTORY.md</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:33:58.903" level="INFO">Running command 'ozone sh key put /vol-kzkif/buc-yfdkx/dir1/dir2/file2 HISTORY.md 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:34:06.931" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:34:06.931" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:33:58.900" endtime="20230923 10:34:06.931"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:34:06.934" level="INFO"/>
<status status="PASS" starttime="20230923 10:34:06.933" endtime="20230923 10:34:06.934"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:34:06.935" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:34:06.934" endtime="20230923 10:34:06.935"/>
</kw>
<status status="PASS" starttime="20230923 10:33:58.899" endtime="20230923 10:34:06.936"/>
</kw>
<msg timestamp="20230923 10:34:06.936" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:33:58.899" endtime="20230923 10:34:06.936"/>
</kw>
<msg timestamp="20230923 10:34:06.936" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230923 10:33:58.898" endtime="20230923 10:34:06.936"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:34:06.936" endtime="20230923 10:34:06.937"/>
</kw>
<status status="PASS" starttime="20230923 10:33:50.725" endtime="20230923 10:34:06.937"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230923 10:33:50.724" endtime="20230923 10:34:06.937"/>
</test>
<test id="s1-s7-s2-t4" name="Check Summary api access" line="110">
<kw name="Check Access">
<arg>${SUMMARY_URL}?path=/</arg>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:34:06.945" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:34:06.949" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:34:06.950" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:34:06.942" endtime="20230923 10:34:06.950"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:34:06.951" level="INFO"/>
<status status="PASS" starttime="20230923 10:34:06.950" endtime="20230923 10:34:06.951"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:34:06.952" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:34:06.951" endtime="20230923 10:34:06.952"/>
</kw>
<status status="PASS" starttime="20230923 10:34:06.942" endtime="20230923 10:34:06.952"/>
</kw>
<msg timestamp="20230923 10:34:06.952" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:34:06.940" endtime="20230923 10:34:06.952"/>
</kw>
<status status="PASS" starttime="20230923 10:34:06.940" endtime="20230923 10:34:06.952"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:34:06.957" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:34:06.972" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:34:06.972" level="INFO">${output} = 401</msg>
<status status="PASS" starttime="20230923 10:34:06.955" endtime="20230923 10:34:06.972"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:34:06.973" level="INFO">401</msg>
<status status="PASS" starttime="20230923 10:34:06.973" endtime="20230923 10:34:06.973"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:34:06.974" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:34:06.974" endtime="20230923 10:34:06.974"/>
</kw>
<status status="PASS" starttime="20230923 10:34:06.954" endtime="20230923 10:34:06.974"/>
</kw>
<msg timestamp="20230923 10:34:06.974" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:34:06.954" endtime="20230923 10:34:06.975"/>
</kw>
<msg timestamp="20230923 10:34:06.975" level="INFO">${result} = 401</msg>
<status status="PASS" starttime="20230923 10:34:06.953" endtime="20230923 10:34:06.975"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:34:06.975" endtime="20230923 10:34:06.976"/>
</kw>
<status status="PASS" starttime="20230923 10:34:06.975" endtime="20230923 10:34:06.976"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230923 10:34:06.976" endtime="20230923 10:34:06.976"/>
</kw>
<status status="NOT RUN" starttime="20230923 10:34:06.976" endtime="20230923 10:34:06.976"/>
</branch>
<status status="PASS" starttime="20230923 10:34:06.975" endtime="20230923 10:34:06.976"/>
</if>
<status status="PASS" starttime="20230923 10:34:06.953" endtime="20230923 10:34:06.976"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>scm</arg>
<arg>scm.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:34:06.982" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:34:06.986" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:34:06.986" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230923 10:34:06.980" endtime="20230923 10:34:06.986"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:34:06.987" level="INFO">scm</msg>
<status status="PASS" starttime="20230923 10:34:06.987" endtime="20230923 10:34:06.988"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:34:06.988" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:34:06.988" endtime="20230923 10:34:06.988"/>
</kw>
<status status="PASS" starttime="20230923 10:34:06.980" endtime="20230923 10:34:06.989"/>
</kw>
<msg timestamp="20230923 10:34:06.989" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:34:06.979" endtime="20230923 10:34:06.989"/>
</kw>
<msg timestamp="20230923 10:34:06.989" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230923 10:34:06.979" endtime="20230923 10:34:06.989"/>
</kw>
<msg timestamp="20230923 10:34:06.989" level="INFO">${TEST_USER} = scm/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230923 10:34:06.978" endtime="20230923 10:34:06.989"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230923 10:34:06.990" level="INFO">${TEST_USER} = scm/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230923 10:34:06.990" endtime="20230923 10:34:06.990"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:34:06.995" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/scm.keytab scm/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:34:07.013" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:34:07.013" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:34:06.993" endtime="20230923 10:34:07.013"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:34:07.014" level="INFO"/>
<status status="PASS" starttime="20230923 10:34:07.014" endtime="20230923 10:34:07.015"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:34:07.015" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:34:07.015" endtime="20230923 10:34:07.015"/>
</kw>
<status status="PASS" starttime="20230923 10:34:06.992" endtime="20230923 10:34:07.016"/>
</kw>
<msg timestamp="20230923 10:34:07.016" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:34:06.991" endtime="20230923 10:34:07.016"/>
</kw>
<status status="PASS" starttime="20230923 10:34:06.991" endtime="20230923 10:34:07.016"/>
</kw>
<status status="PASS" starttime="20230923 10:34:06.990" endtime="20230923 10:34:07.016"/>
</kw>
<status status="PASS" starttime="20230923 10:34:06.978" endtime="20230923 10:34:07.016"/>
</kw>
<status status="PASS" starttime="20230923 10:34:06.977" endtime="20230923 10:34:07.016"/>
</kw>
<status status="PASS" starttime="20230923 10:34:06.977" endtime="20230923 10:34:07.016"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>403</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:34:07.022" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:34:07.054" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:34:07.054" level="INFO">${output} = 403</msg>
<status status="PASS" starttime="20230923 10:34:07.019" endtime="20230923 10:34:07.054"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:34:07.056" level="INFO">403</msg>
<status status="PASS" starttime="20230923 10:34:07.055" endtime="20230923 10:34:07.056"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:34:07.057" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:34:07.056" endtime="20230923 10:34:07.057"/>
</kw>
<status status="PASS" starttime="20230923 10:34:07.018" endtime="20230923 10:34:07.057"/>
</kw>
<msg timestamp="20230923 10:34:07.057" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:34:07.018" endtime="20230923 10:34:07.058"/>
</kw>
<msg timestamp="20230923 10:34:07.058" level="INFO">${result} = 403</msg>
<status status="PASS" starttime="20230923 10:34:07.017" endtime="20230923 10:34:07.058"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:34:07.059" endtime="20230923 10:34:07.059"/>
</kw>
<status status="PASS" starttime="20230923 10:34:07.058" endtime="20230923 10:34:07.059"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230923 10:34:07.060" endtime="20230923 10:34:07.060"/>
</kw>
<status status="NOT RUN" starttime="20230923 10:34:07.060" endtime="20230923 10:34:07.060"/>
</branch>
<status status="PASS" starttime="20230923 10:34:07.058" endtime="20230923 10:34:07.060"/>
</if>
<status status="PASS" starttime="20230923 10:34:07.017" endtime="20230923 10:34:07.060"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:34:07.067" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:34:07.072" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:34:07.072" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230923 10:34:07.064" endtime="20230923 10:34:07.072"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:34:07.073" level="INFO">scm</msg>
<status status="PASS" starttime="20230923 10:34:07.072" endtime="20230923 10:34:07.074"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:34:07.074" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:34:07.074" endtime="20230923 10:34:07.075"/>
</kw>
<status status="PASS" starttime="20230923 10:34:07.064" endtime="20230923 10:34:07.075"/>
</kw>
<msg timestamp="20230923 10:34:07.075" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:34:07.063" endtime="20230923 10:34:07.075"/>
</kw>
<msg timestamp="20230923 10:34:07.075" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230923 10:34:07.063" endtime="20230923 10:34:07.075"/>
</kw>
<msg timestamp="20230923 10:34:07.076" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230923 10:34:07.062" endtime="20230923 10:34:07.076"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230923 10:34:07.077" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230923 10:34:07.076" endtime="20230923 10:34:07.077"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:34:07.083" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:34:07.106" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:34:07.106" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:34:07.079" endtime="20230923 10:34:07.106"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:34:07.108" level="INFO"/>
<status status="PASS" starttime="20230923 10:34:07.107" endtime="20230923 10:34:07.108"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:34:07.109" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:34:07.108" endtime="20230923 10:34:07.109"/>
</kw>
<status status="PASS" starttime="20230923 10:34:07.079" endtime="20230923 10:34:07.109"/>
</kw>
<msg timestamp="20230923 10:34:07.109" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:34:07.078" endtime="20230923 10:34:07.109"/>
</kw>
<status status="PASS" starttime="20230923 10:34:07.077" endtime="20230923 10:34:07.109"/>
</kw>
<status status="PASS" starttime="20230923 10:34:07.077" endtime="20230923 10:34:07.110"/>
</kw>
<status status="PASS" starttime="20230923 10:34:07.062" endtime="20230923 10:34:07.110"/>
</kw>
<status status="PASS" starttime="20230923 10:34:07.061" endtime="20230923 10:34:07.110"/>
</kw>
<status status="PASS" starttime="20230923 10:34:07.060" endtime="20230923 10:34:07.110"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:34:07.115" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:34:07.175" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:34:07.176" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230923 10:34:07.113" endtime="20230923 10:34:07.176"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:34:07.177" level="INFO">200</msg>
<status status="PASS" starttime="20230923 10:34:07.176" endtime="20230923 10:34:07.177"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:34:07.178" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:34:07.178" endtime="20230923 10:34:07.178"/>
</kw>
<status status="PASS" starttime="20230923 10:34:07.112" endtime="20230923 10:34:07.178"/>
</kw>
<msg timestamp="20230923 10:34:07.178" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:34:07.111" endtime="20230923 10:34:07.179"/>
</kw>
<msg timestamp="20230923 10:34:07.179" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230923 10:34:07.111" endtime="20230923 10:34:07.179"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:34:07.180" endtime="20230923 10:34:07.180"/>
</kw>
<status status="PASS" starttime="20230923 10:34:07.179" endtime="20230923 10:34:07.180"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230923 10:34:07.181" endtime="20230923 10:34:07.181"/>
</kw>
<status status="NOT RUN" starttime="20230923 10:34:07.180" endtime="20230923 10:34:07.181"/>
</branch>
<status status="PASS" starttime="20230923 10:34:07.179" endtime="20230923 10:34:07.181"/>
</if>
<status status="PASS" starttime="20230923 10:34:07.110" endtime="20230923 10:34:07.181"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:34:07.189" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:34:07.194" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:34:07.194" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230923 10:34:07.185" endtime="20230923 10:34:07.194"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:34:07.196" level="INFO">scm</msg>
<status status="PASS" starttime="20230923 10:34:07.195" endtime="20230923 10:34:07.196"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:34:07.197" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:34:07.196" endtime="20230923 10:34:07.197"/>
</kw>
<status status="PASS" starttime="20230923 10:34:07.185" endtime="20230923 10:34:07.197"/>
</kw>
<msg timestamp="20230923 10:34:07.197" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:34:07.184" endtime="20230923 10:34:07.197"/>
</kw>
<msg timestamp="20230923 10:34:07.198" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230923 10:34:07.184" endtime="20230923 10:34:07.198"/>
</kw>
<msg timestamp="20230923 10:34:07.198" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230923 10:34:07.183" endtime="20230923 10:34:07.198"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230923 10:34:07.199" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230923 10:34:07.198" endtime="20230923 10:34:07.199"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:34:07.205" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser2.keytab testuser2/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:34:07.223" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:34:07.223" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:34:07.202" endtime="20230923 10:34:07.224"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:34:07.225" level="INFO"/>
<status status="PASS" starttime="20230923 10:34:07.224" endtime="20230923 10:34:07.225"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:34:07.226" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:34:07.225" endtime="20230923 10:34:07.226"/>
</kw>
<status status="PASS" starttime="20230923 10:34:07.201" endtime="20230923 10:34:07.226"/>
</kw>
<msg timestamp="20230923 10:34:07.226" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:34:07.200" endtime="20230923 10:34:07.226"/>
</kw>
<status status="PASS" starttime="20230923 10:34:07.200" endtime="20230923 10:34:07.227"/>
</kw>
<status status="PASS" starttime="20230923 10:34:07.199" endtime="20230923 10:34:07.227"/>
</kw>
<status status="PASS" starttime="20230923 10:34:07.182" endtime="20230923 10:34:07.227"/>
</kw>
<status status="PASS" starttime="20230923 10:34:07.182" endtime="20230923 10:34:07.227"/>
</kw>
<status status="PASS" starttime="20230923 10:34:07.181" endtime="20230923 10:34:07.227"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:34:07.232" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:34:07.269" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:34:07.269" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230923 10:34:07.230" endtime="20230923 10:34:07.269"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:34:07.271" level="INFO">200</msg>
<status status="PASS" starttime="20230923 10:34:07.270" endtime="20230923 10:34:07.271"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:34:07.271" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:34:07.271" endtime="20230923 10:34:07.271"/>
</kw>
<status status="PASS" starttime="20230923 10:34:07.229" endtime="20230923 10:34:07.272"/>
</kw>
<msg timestamp="20230923 10:34:07.272" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:34:07.229" endtime="20230923 10:34:07.272"/>
</kw>
<msg timestamp="20230923 10:34:07.273" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230923 10:34:07.228" endtime="20230923 10:34:07.273"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:34:07.273" endtime="20230923 10:34:07.274"/>
</kw>
<status status="PASS" starttime="20230923 10:34:07.273" endtime="20230923 10:34:07.274"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230923 10:34:07.274" endtime="20230923 10:34:07.274"/>
</kw>
<status status="NOT RUN" starttime="20230923 10:34:07.274" endtime="20230923 10:34:07.274"/>
</branch>
<status status="PASS" starttime="20230923 10:34:07.273" endtime="20230923 10:34:07.274"/>
</if>
<status status="PASS" starttime="20230923 10:34:07.227" endtime="20230923 10:34:07.275"/>
</kw>
<status status="PASS" starttime="20230923 10:34:06.939" endtime="20230923 10:34:07.275"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230923 10:34:06.938" endtime="20230923 10:34:07.275"/>
</test>
<test id="s1-s7-s2-t5" name="Check Disk Usage api access" line="113">
<kw name="Check Access">
<arg>${DISK_USAGE_URL}?path=/</arg>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:34:07.282" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:34:07.286" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:34:07.286" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:34:07.280" endtime="20230923 10:34:07.287"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:34:07.288" level="INFO"/>
<status status="PASS" starttime="20230923 10:34:07.287" endtime="20230923 10:34:07.288"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:34:07.289" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:34:07.288" endtime="20230923 10:34:07.289"/>
</kw>
<status status="PASS" starttime="20230923 10:34:07.279" endtime="20230923 10:34:07.289"/>
</kw>
<msg timestamp="20230923 10:34:07.289" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:34:07.278" endtime="20230923 10:34:07.289"/>
</kw>
<status status="PASS" starttime="20230923 10:34:07.278" endtime="20230923 10:34:07.290"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:34:07.295" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/du?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:34:07.310" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:34:07.310" level="INFO">${output} = 401</msg>
<status status="PASS" starttime="20230923 10:34:07.292" endtime="20230923 10:34:07.310"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:34:07.312" level="INFO">401</msg>
<status status="PASS" starttime="20230923 10:34:07.311" endtime="20230923 10:34:07.312"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:34:07.312" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:34:07.312" endtime="20230923 10:34:07.313"/>
</kw>
<status status="PASS" starttime="20230923 10:34:07.291" endtime="20230923 10:34:07.313"/>
</kw>
<msg timestamp="20230923 10:34:07.313" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:34:07.291" endtime="20230923 10:34:07.313"/>
</kw>
<msg timestamp="20230923 10:34:07.313" level="INFO">${result} = 401</msg>
<status status="PASS" starttime="20230923 10:34:07.290" endtime="20230923 10:34:07.313"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:34:07.314" endtime="20230923 10:34:07.314"/>
</kw>
<status status="PASS" starttime="20230923 10:34:07.314" endtime="20230923 10:34:07.315"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230923 10:34:07.315" endtime="20230923 10:34:07.315"/>
</kw>
<status status="NOT RUN" starttime="20230923 10:34:07.315" endtime="20230923 10:34:07.315"/>
</branch>
<status status="PASS" starttime="20230923 10:34:07.313" endtime="20230923 10:34:07.315"/>
</if>
<status status="PASS" starttime="20230923 10:34:07.290" endtime="20230923 10:34:07.315"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>scm</arg>
<arg>scm.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:34:07.322" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:34:07.326" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:34:07.326" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230923 10:34:07.320" endtime="20230923 10:34:07.326"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:34:07.327" level="INFO">scm</msg>
<status status="PASS" starttime="20230923 10:34:07.327" endtime="20230923 10:34:07.328"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:34:07.328" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:34:07.328" endtime="20230923 10:34:07.328"/>
</kw>
<status status="PASS" starttime="20230923 10:34:07.319" endtime="20230923 10:34:07.329"/>
</kw>
<msg timestamp="20230923 10:34:07.329" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:34:07.319" endtime="20230923 10:34:07.329"/>
</kw>
<msg timestamp="20230923 10:34:07.329" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230923 10:34:07.318" endtime="20230923 10:34:07.329"/>
</kw>
<msg timestamp="20230923 10:34:07.330" level="INFO">${TEST_USER} = scm/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230923 10:34:07.318" endtime="20230923 10:34:07.330"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230923 10:34:07.330" level="INFO">${TEST_USER} = scm/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230923 10:34:07.330" endtime="20230923 10:34:07.330"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:34:07.335" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/scm.keytab scm/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:34:07.353" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:34:07.353" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:34:07.333" endtime="20230923 10:34:07.353"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:34:07.354" level="INFO"/>
<status status="PASS" starttime="20230923 10:34:07.353" endtime="20230923 10:34:07.354"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:34:07.355" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:34:07.354" endtime="20230923 10:34:07.355"/>
</kw>
<status status="PASS" starttime="20230923 10:34:07.332" endtime="20230923 10:34:07.355"/>
</kw>
<msg timestamp="20230923 10:34:07.355" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:34:07.332" endtime="20230923 10:34:07.356"/>
</kw>
<status status="PASS" starttime="20230923 10:34:07.331" endtime="20230923 10:34:07.356"/>
</kw>
<status status="PASS" starttime="20230923 10:34:07.331" endtime="20230923 10:34:07.356"/>
</kw>
<status status="PASS" starttime="20230923 10:34:07.317" endtime="20230923 10:34:07.356"/>
</kw>
<status status="PASS" starttime="20230923 10:34:07.316" endtime="20230923 10:34:07.356"/>
</kw>
<status status="PASS" starttime="20230923 10:34:07.315" endtime="20230923 10:34:07.356"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>403</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:34:07.361" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/du?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:34:07.396" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:34:07.396" level="INFO">${output} = 403</msg>
<status status="PASS" starttime="20230923 10:34:07.358" endtime="20230923 10:34:07.396"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:34:07.398" level="INFO">403</msg>
<status status="PASS" starttime="20230923 10:34:07.397" endtime="20230923 10:34:07.398"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:34:07.398" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:34:07.398" endtime="20230923 10:34:07.398"/>
</kw>
<status status="PASS" starttime="20230923 10:34:07.358" endtime="20230923 10:34:07.399"/>
</kw>
<msg timestamp="20230923 10:34:07.399" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:34:07.358" endtime="20230923 10:34:07.399"/>
</kw>
<msg timestamp="20230923 10:34:07.399" level="INFO">${result} = 403</msg>
<status status="PASS" starttime="20230923 10:34:07.357" endtime="20230923 10:34:07.399"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:34:07.400" endtime="20230923 10:34:07.400"/>
</kw>
<status status="PASS" starttime="20230923 10:34:07.399" endtime="20230923 10:34:07.400"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230923 10:34:07.401" endtime="20230923 10:34:07.401"/>
</kw>
<status status="NOT RUN" starttime="20230923 10:34:07.400" endtime="20230923 10:34:07.401"/>
</branch>
<status status="PASS" starttime="20230923 10:34:07.399" endtime="20230923 10:34:07.401"/>
</if>
<status status="PASS" starttime="20230923 10:34:07.356" endtime="20230923 10:34:07.401"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:34:07.409" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:34:07.413" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:34:07.413" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230923 10:34:07.406" endtime="20230923 10:34:07.413"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:34:07.414" level="INFO">scm</msg>
<status status="PASS" starttime="20230923 10:34:07.414" endtime="20230923 10:34:07.414"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:34:07.415" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:34:07.415" endtime="20230923 10:34:07.415"/>
</kw>
<status status="PASS" starttime="20230923 10:34:07.405" endtime="20230923 10:34:07.415"/>
</kw>
<msg timestamp="20230923 10:34:07.416" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:34:07.405" endtime="20230923 10:34:07.416"/>
</kw>
<msg timestamp="20230923 10:34:07.416" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230923 10:34:07.404" endtime="20230923 10:34:07.416"/>
</kw>
<msg timestamp="20230923 10:34:07.416" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230923 10:34:07.404" endtime="20230923 10:34:07.416"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230923 10:34:07.417" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230923 10:34:07.416" endtime="20230923 10:34:07.417"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:34:07.422" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:34:07.439" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:34:07.439" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:34:07.419" endtime="20230923 10:34:07.439"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:34:07.440" level="INFO"/>
<status status="PASS" starttime="20230923 10:34:07.439" endtime="20230923 10:34:07.440"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:34:07.441" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:34:07.440" endtime="20230923 10:34:07.441"/>
</kw>
<status status="PASS" starttime="20230923 10:34:07.419" endtime="20230923 10:34:07.441"/>
</kw>
<msg timestamp="20230923 10:34:07.442" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:34:07.418" endtime="20230923 10:34:07.442"/>
</kw>
<status status="PASS" starttime="20230923 10:34:07.418" endtime="20230923 10:34:07.442"/>
</kw>
<status status="PASS" starttime="20230923 10:34:07.417" endtime="20230923 10:34:07.442"/>
</kw>
<status status="PASS" starttime="20230923 10:34:07.403" endtime="20230923 10:34:07.442"/>
</kw>
<status status="PASS" starttime="20230923 10:34:07.402" endtime="20230923 10:34:07.442"/>
</kw>
<status status="PASS" starttime="20230923 10:34:07.402" endtime="20230923 10:34:07.442"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:34:07.447" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/du?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:34:07.527" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:34:07.527" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230923 10:34:07.445" endtime="20230923 10:34:07.528"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:34:07.529" level="INFO">200</msg>
<status status="PASS" starttime="20230923 10:34:07.528" endtime="20230923 10:34:07.529"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:34:07.530" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:34:07.529" endtime="20230923 10:34:07.530"/>
</kw>
<status status="PASS" starttime="20230923 10:34:07.444" endtime="20230923 10:34:07.530"/>
</kw>
<msg timestamp="20230923 10:34:07.530" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:34:07.444" endtime="20230923 10:34:07.530"/>
</kw>
<msg timestamp="20230923 10:34:07.531" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230923 10:34:07.443" endtime="20230923 10:34:07.531"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:34:07.531" endtime="20230923 10:34:07.532"/>
</kw>
<status status="PASS" starttime="20230923 10:34:07.531" endtime="20230923 10:34:07.532"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230923 10:34:07.532" endtime="20230923 10:34:07.532"/>
</kw>
<status status="NOT RUN" starttime="20230923 10:34:07.532" endtime="20230923 10:34:07.532"/>
</branch>
<status status="PASS" starttime="20230923 10:34:07.531" endtime="20230923 10:34:07.532"/>
</if>
<status status="PASS" starttime="20230923 10:34:07.442" endtime="20230923 10:34:07.532"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:34:07.539" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:34:07.543" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:34:07.543" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230923 10:34:07.536" endtime="20230923 10:34:07.543"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:34:07.544" level="INFO">scm</msg>
<status status="PASS" starttime="20230923 10:34:07.543" endtime="20230923 10:34:07.544"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:34:07.545" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:34:07.545" endtime="20230923 10:34:07.545"/>
</kw>
<status status="PASS" starttime="20230923 10:34:07.536" endtime="20230923 10:34:07.545"/>
</kw>
<msg timestamp="20230923 10:34:07.546" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:34:07.535" endtime="20230923 10:34:07.546"/>
</kw>
<msg timestamp="20230923 10:34:07.546" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230923 10:34:07.535" endtime="20230923 10:34:07.546"/>
</kw>
<msg timestamp="20230923 10:34:07.546" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230923 10:34:07.535" endtime="20230923 10:34:07.546"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230923 10:34:07.547" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230923 10:34:07.546" endtime="20230923 10:34:07.547"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:34:07.552" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser2.keytab testuser2/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:34:07.570" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:34:07.571" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:34:07.549" endtime="20230923 10:34:07.571"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:34:07.572" level="INFO"/>
<status status="PASS" starttime="20230923 10:34:07.571" endtime="20230923 10:34:07.572"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:34:07.573" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:34:07.573" endtime="20230923 10:34:07.573"/>
</kw>
<status status="PASS" starttime="20230923 10:34:07.549" endtime="20230923 10:34:07.573"/>
</kw>
<msg timestamp="20230923 10:34:07.574" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:34:07.548" endtime="20230923 10:34:07.574"/>
</kw>
<status status="PASS" starttime="20230923 10:34:07.548" endtime="20230923 10:34:07.574"/>
</kw>
<status status="PASS" starttime="20230923 10:34:07.547" endtime="20230923 10:34:07.574"/>
</kw>
<status status="PASS" starttime="20230923 10:34:07.534" endtime="20230923 10:34:07.574"/>
</kw>
<status status="PASS" starttime="20230923 10:34:07.533" endtime="20230923 10:34:07.574"/>
</kw>
<status status="PASS" starttime="20230923 10:34:07.533" endtime="20230923 10:34:07.574"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:34:07.579" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/du?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:34:07.648" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:34:07.648" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230923 10:34:07.577" endtime="20230923 10:34:07.648"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:34:07.650" level="INFO">200</msg>
<status status="PASS" starttime="20230923 10:34:07.649" endtime="20230923 10:34:07.650"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:34:07.651" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:34:07.650" endtime="20230923 10:34:07.651"/>
</kw>
<status status="PASS" starttime="20230923 10:34:07.576" endtime="20230923 10:34:07.651"/>
</kw>
<msg timestamp="20230923 10:34:07.651" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:34:07.576" endtime="20230923 10:34:07.651"/>
</kw>
<msg timestamp="20230923 10:34:07.651" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230923 10:34:07.575" endtime="20230923 10:34:07.651"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:34:07.652" endtime="20230923 10:34:07.653"/>
</kw>
<status status="PASS" starttime="20230923 10:34:07.652" endtime="20230923 10:34:07.653"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230923 10:34:07.653" endtime="20230923 10:34:07.653"/>
</kw>
<status status="NOT RUN" starttime="20230923 10:34:07.653" endtime="20230923 10:34:07.653"/>
</branch>
<status status="PASS" starttime="20230923 10:34:07.652" endtime="20230923 10:34:07.653"/>
</if>
<status status="PASS" starttime="20230923 10:34:07.574" endtime="20230923 10:34:07.654"/>
</kw>
<status status="PASS" starttime="20230923 10:34:07.277" endtime="20230923 10:34:07.654"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230923 10:34:07.276" endtime="20230923 10:34:07.654"/>
</test>
<test id="s1-s7-s2-t6" name="Check Quota Usage api access" line="116">
<kw name="Check Access">
<arg>${QUOTA_USAGE_URL}?path=/</arg>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:34:07.664" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:34:07.668" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:34:07.668" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:34:07.660" endtime="20230923 10:34:07.668"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:34:07.670" level="INFO"/>
<status status="PASS" starttime="20230923 10:34:07.669" endtime="20230923 10:34:07.670"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:34:07.670" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:34:07.670" endtime="20230923 10:34:07.670"/>
</kw>
<status status="PASS" starttime="20230923 10:34:07.659" endtime="20230923 10:34:07.671"/>
</kw>
<msg timestamp="20230923 10:34:07.671" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:34:07.659" endtime="20230923 10:34:07.671"/>
</kw>
<status status="PASS" starttime="20230923 10:34:07.658" endtime="20230923 10:34:07.671"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:34:07.677" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/quota?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:34:07.695" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:34:07.695" level="INFO">${output} = 401</msg>
<status status="PASS" starttime="20230923 10:34:07.674" endtime="20230923 10:34:07.695"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:34:07.696" level="INFO">401</msg>
<status status="PASS" starttime="20230923 10:34:07.695" endtime="20230923 10:34:07.696"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:34:07.697" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:34:07.697" endtime="20230923 10:34:07.697"/>
</kw>
<status status="PASS" starttime="20230923 10:34:07.673" endtime="20230923 10:34:07.697"/>
</kw>
<msg timestamp="20230923 10:34:07.698" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:34:07.673" endtime="20230923 10:34:07.698"/>
</kw>
<msg timestamp="20230923 10:34:07.698" level="INFO">${result} = 401</msg>
<status status="PASS" starttime="20230923 10:34:07.672" endtime="20230923 10:34:07.698"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:34:07.699" endtime="20230923 10:34:07.699"/>
</kw>
<status status="PASS" starttime="20230923 10:34:07.698" endtime="20230923 10:34:07.699"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230923 10:34:07.700" endtime="20230923 10:34:07.700"/>
</kw>
<status status="NOT RUN" starttime="20230923 10:34:07.699" endtime="20230923 10:34:07.700"/>
</branch>
<status status="PASS" starttime="20230923 10:34:07.698" endtime="20230923 10:34:07.700"/>
</if>
<status status="PASS" starttime="20230923 10:34:07.671" endtime="20230923 10:34:07.700"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>scm</arg>
<arg>scm.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:34:07.708" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:34:07.713" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:34:07.713" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230923 10:34:07.705" endtime="20230923 10:34:07.713"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:34:07.715" level="INFO">scm</msg>
<status status="PASS" starttime="20230923 10:34:07.714" endtime="20230923 10:34:07.715"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:34:07.716" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:34:07.715" endtime="20230923 10:34:07.716"/>
</kw>
<status status="PASS" starttime="20230923 10:34:07.704" endtime="20230923 10:34:07.716"/>
</kw>
<msg timestamp="20230923 10:34:07.717" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:34:07.703" endtime="20230923 10:34:07.717"/>
</kw>
<msg timestamp="20230923 10:34:07.717" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230923 10:34:07.703" endtime="20230923 10:34:07.717"/>
</kw>
<msg timestamp="20230923 10:34:07.717" level="INFO">${TEST_USER} = scm/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230923 10:34:07.702" endtime="20230923 10:34:07.717"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230923 10:34:07.718" level="INFO">${TEST_USER} = scm/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230923 10:34:07.718" endtime="20230923 10:34:07.718"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:34:07.725" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/scm.keytab scm/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:34:07.746" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:34:07.746" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:34:07.721" endtime="20230923 10:34:07.747"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:34:07.748" level="INFO"/>
<status status="PASS" starttime="20230923 10:34:07.747" endtime="20230923 10:34:07.748"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:34:07.749" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:34:07.749" endtime="20230923 10:34:07.750"/>
</kw>
<status status="PASS" starttime="20230923 10:34:07.720" endtime="20230923 10:34:07.750"/>
</kw>
<msg timestamp="20230923 10:34:07.750" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:34:07.720" endtime="20230923 10:34:07.750"/>
</kw>
<status status="PASS" starttime="20230923 10:34:07.719" endtime="20230923 10:34:07.750"/>
</kw>
<status status="PASS" starttime="20230923 10:34:07.718" endtime="20230923 10:34:07.750"/>
</kw>
<status status="PASS" starttime="20230923 10:34:07.702" endtime="20230923 10:34:07.750"/>
</kw>
<status status="PASS" starttime="20230923 10:34:07.701" endtime="20230923 10:34:07.751"/>
</kw>
<status status="PASS" starttime="20230923 10:34:07.700" endtime="20230923 10:34:07.751"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>403</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:34:07.757" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/quota?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:34:07.794" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:34:07.794" level="INFO">${output} = 403</msg>
<status status="PASS" starttime="20230923 10:34:07.753" endtime="20230923 10:34:07.794"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:34:07.796" level="INFO">403</msg>
<status status="PASS" starttime="20230923 10:34:07.794" endtime="20230923 10:34:07.797"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:34:07.797" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:34:07.797" endtime="20230923 10:34:07.798"/>
</kw>
<status status="PASS" starttime="20230923 10:34:07.753" endtime="20230923 10:34:07.798"/>
</kw>
<msg timestamp="20230923 10:34:07.798" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:34:07.752" endtime="20230923 10:34:07.798"/>
</kw>
<msg timestamp="20230923 10:34:07.798" level="INFO">${result} = 403</msg>
<status status="PASS" starttime="20230923 10:34:07.752" endtime="20230923 10:34:07.798"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:34:07.799" endtime="20230923 10:34:07.800"/>
</kw>
<status status="PASS" starttime="20230923 10:34:07.799" endtime="20230923 10:34:07.800"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230923 10:34:07.800" endtime="20230923 10:34:07.800"/>
</kw>
<status status="NOT RUN" starttime="20230923 10:34:07.800" endtime="20230923 10:34:07.800"/>
</branch>
<status status="PASS" starttime="20230923 10:34:07.799" endtime="20230923 10:34:07.800"/>
</if>
<status status="PASS" starttime="20230923 10:34:07.751" endtime="20230923 10:34:07.800"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:34:07.808" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:34:07.812" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:34:07.813" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230923 10:34:07.805" endtime="20230923 10:34:07.813"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:34:07.814" level="INFO">scm</msg>
<status status="PASS" starttime="20230923 10:34:07.813" endtime="20230923 10:34:07.814"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:34:07.815" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:34:07.814" endtime="20230923 10:34:07.815"/>
</kw>
<status status="PASS" starttime="20230923 10:34:07.804" endtime="20230923 10:34:07.815"/>
</kw>
<msg timestamp="20230923 10:34:07.815" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:34:07.804" endtime="20230923 10:34:07.815"/>
</kw>
<msg timestamp="20230923 10:34:07.816" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230923 10:34:07.803" endtime="20230923 10:34:07.816"/>
</kw>
<msg timestamp="20230923 10:34:07.816" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230923 10:34:07.803" endtime="20230923 10:34:07.816"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230923 10:34:07.817" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230923 10:34:07.816" endtime="20230923 10:34:07.817"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:34:07.822" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:34:07.845" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:34:07.845" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:34:07.819" endtime="20230923 10:34:07.845"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:34:07.847" level="INFO"/>
<status status="PASS" starttime="20230923 10:34:07.846" endtime="20230923 10:34:07.847"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:34:07.848" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:34:07.847" endtime="20230923 10:34:07.848"/>
</kw>
<status status="PASS" starttime="20230923 10:34:07.818" endtime="20230923 10:34:07.848"/>
</kw>
<msg timestamp="20230923 10:34:07.848" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:34:07.818" endtime="20230923 10:34:07.848"/>
</kw>
<status status="PASS" starttime="20230923 10:34:07.817" endtime="20230923 10:34:07.849"/>
</kw>
<status status="PASS" starttime="20230923 10:34:07.817" endtime="20230923 10:34:07.849"/>
</kw>
<status status="PASS" starttime="20230923 10:34:07.802" endtime="20230923 10:34:07.849"/>
</kw>
<status status="PASS" starttime="20230923 10:34:07.801" endtime="20230923 10:34:07.849"/>
</kw>
<status status="PASS" starttime="20230923 10:34:07.801" endtime="20230923 10:34:07.849"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:34:07.854" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/quota?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:34:07.960" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:34:07.960" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230923 10:34:07.851" endtime="20230923 10:34:07.960"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:34:07.962" level="INFO">200</msg>
<status status="PASS" starttime="20230923 10:34:07.961" endtime="20230923 10:34:07.962"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:34:07.962" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:34:07.962" endtime="20230923 10:34:07.963"/>
</kw>
<status status="PASS" starttime="20230923 10:34:07.851" endtime="20230923 10:34:07.963"/>
</kw>
<msg timestamp="20230923 10:34:07.963" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:34:07.850" endtime="20230923 10:34:07.963"/>
</kw>
<msg timestamp="20230923 10:34:07.963" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230923 10:34:07.850" endtime="20230923 10:34:07.963"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:34:07.964" endtime="20230923 10:34:07.965"/>
</kw>
<status status="PASS" starttime="20230923 10:34:07.964" endtime="20230923 10:34:07.965"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230923 10:34:07.965" endtime="20230923 10:34:07.965"/>
</kw>
<status status="NOT RUN" starttime="20230923 10:34:07.965" endtime="20230923 10:34:07.965"/>
</branch>
<status status="PASS" starttime="20230923 10:34:07.963" endtime="20230923 10:34:07.965"/>
</if>
<status status="PASS" starttime="20230923 10:34:07.849" endtime="20230923 10:34:07.965"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:34:07.973" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:34:07.979" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:34:07.979" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230923 10:34:07.970" endtime="20230923 10:34:07.979"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:34:07.981" level="INFO">scm</msg>
<status status="PASS" starttime="20230923 10:34:07.980" endtime="20230923 10:34:07.981"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:34:07.982" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:34:07.981" endtime="20230923 10:34:07.982"/>
</kw>
<status status="PASS" starttime="20230923 10:34:07.969" endtime="20230923 10:34:07.982"/>
</kw>
<msg timestamp="20230923 10:34:07.982" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:34:07.969" endtime="20230923 10:34:07.982"/>
</kw>
<msg timestamp="20230923 10:34:07.983" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230923 10:34:07.968" endtime="20230923 10:34:07.983"/>
</kw>
<msg timestamp="20230923 10:34:07.983" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230923 10:34:07.968" endtime="20230923 10:34:07.983"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230923 10:34:07.984" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230923 10:34:07.983" endtime="20230923 10:34:07.984"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:34:07.991" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser2.keytab testuser2/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:34:08.014" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:34:08.014" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:34:07.987" endtime="20230923 10:34:08.014"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:34:08.015" level="INFO"/>
<status status="PASS" starttime="20230923 10:34:08.015" endtime="20230923 10:34:08.015"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:34:08.016" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:34:08.016" endtime="20230923 10:34:08.017"/>
</kw>
<status status="PASS" starttime="20230923 10:34:07.986" endtime="20230923 10:34:08.017"/>
</kw>
<msg timestamp="20230923 10:34:08.017" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:34:07.985" endtime="20230923 10:34:08.017"/>
</kw>
<status status="PASS" starttime="20230923 10:34:07.985" endtime="20230923 10:34:08.017"/>
</kw>
<status status="PASS" starttime="20230923 10:34:07.984" endtime="20230923 10:34:08.018"/>
</kw>
<status status="PASS" starttime="20230923 10:34:07.967" endtime="20230923 10:34:08.018"/>
</kw>
<status status="PASS" starttime="20230923 10:34:07.966" endtime="20230923 10:34:08.018"/>
</kw>
<status status="PASS" starttime="20230923 10:34:07.965" endtime="20230923 10:34:08.018"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:34:08.024" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/quota?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:34:08.131" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:34:08.131" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230923 10:34:08.021" endtime="20230923 10:34:08.131"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:34:08.132" level="INFO">200</msg>
<status status="PASS" starttime="20230923 10:34:08.131" endtime="20230923 10:34:08.133"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:34:08.133" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:34:08.133" endtime="20230923 10:34:08.133"/>
</kw>
<status status="PASS" starttime="20230923 10:34:08.020" endtime="20230923 10:34:08.134"/>
</kw>
<msg timestamp="20230923 10:34:08.134" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:34:08.020" endtime="20230923 10:34:08.134"/>
</kw>
<msg timestamp="20230923 10:34:08.134" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230923 10:34:08.019" endtime="20230923 10:34:08.134"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:34:08.135" endtime="20230923 10:34:08.135"/>
</kw>
<status status="PASS" starttime="20230923 10:34:08.134" endtime="20230923 10:34:08.135"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230923 10:34:08.136" endtime="20230923 10:34:08.136"/>
</kw>
<status status="NOT RUN" starttime="20230923 10:34:08.136" endtime="20230923 10:34:08.136"/>
</branch>
<status status="PASS" starttime="20230923 10:34:08.134" endtime="20230923 10:34:08.136"/>
</if>
<status status="PASS" starttime="20230923 10:34:08.018" endtime="20230923 10:34:08.136"/>
</kw>
<status status="PASS" starttime="20230923 10:34:07.657" endtime="20230923 10:34:08.136"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230923 10:34:07.656" endtime="20230923 10:34:08.137"/>
</test>
<test id="s1-s7-s2-t7" name="Check File Size Distribution api access" line="119">
<kw name="Check Access">
<arg>${FILE_SIZE_DIST_URL}?path=/</arg>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:34:08.145" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:34:08.150" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:34:08.150" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:34:08.141" endtime="20230923 10:34:08.150"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:34:08.151" level="INFO"/>
<status status="PASS" starttime="20230923 10:34:08.150" endtime="20230923 10:34:08.151"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:34:08.152" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:34:08.151" endtime="20230923 10:34:08.152"/>
</kw>
<status status="PASS" starttime="20230923 10:34:08.141" endtime="20230923 10:34:08.152"/>
</kw>
<msg timestamp="20230923 10:34:08.152" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:34:08.140" endtime="20230923 10:34:08.152"/>
</kw>
<status status="PASS" starttime="20230923 10:34:08.140" endtime="20230923 10:34:08.153"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:34:08.158" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/dist?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:34:08.173" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:34:08.173" level="INFO">${output} = 401</msg>
<status status="PASS" starttime="20230923 10:34:08.155" endtime="20230923 10:34:08.173"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:34:08.176" level="INFO">401</msg>
<status status="PASS" starttime="20230923 10:34:08.174" endtime="20230923 10:34:08.176"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:34:08.177" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:34:08.176" endtime="20230923 10:34:08.177"/>
</kw>
<status status="PASS" starttime="20230923 10:34:08.154" endtime="20230923 10:34:08.177"/>
</kw>
<msg timestamp="20230923 10:34:08.178" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:34:08.154" endtime="20230923 10:34:08.178"/>
</kw>
<msg timestamp="20230923 10:34:08.178" level="INFO">${result} = 401</msg>
<status status="PASS" starttime="20230923 10:34:08.153" endtime="20230923 10:34:08.178"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:34:08.179" endtime="20230923 10:34:08.179"/>
</kw>
<status status="PASS" starttime="20230923 10:34:08.178" endtime="20230923 10:34:08.179"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230923 10:34:08.179" endtime="20230923 10:34:08.180"/>
</kw>
<status status="NOT RUN" starttime="20230923 10:34:08.179" endtime="20230923 10:34:08.180"/>
</branch>
<status status="PASS" starttime="20230923 10:34:08.178" endtime="20230923 10:34:08.180"/>
</if>
<status status="PASS" starttime="20230923 10:34:08.153" endtime="20230923 10:34:08.180"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>scm</arg>
<arg>scm.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:34:08.187" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:34:08.192" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:34:08.192" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230923 10:34:08.184" endtime="20230923 10:34:08.193"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:34:08.194" level="INFO">scm</msg>
<status status="PASS" starttime="20230923 10:34:08.193" endtime="20230923 10:34:08.194"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:34:08.195" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:34:08.194" endtime="20230923 10:34:08.195"/>
</kw>
<status status="PASS" starttime="20230923 10:34:08.183" endtime="20230923 10:34:08.195"/>
</kw>
<msg timestamp="20230923 10:34:08.195" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:34:08.183" endtime="20230923 10:34:08.195"/>
</kw>
<msg timestamp="20230923 10:34:08.196" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230923 10:34:08.182" endtime="20230923 10:34:08.196"/>
</kw>
<msg timestamp="20230923 10:34:08.196" level="INFO">${TEST_USER} = scm/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230923 10:34:08.182" endtime="20230923 10:34:08.196"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230923 10:34:08.197" level="INFO">${TEST_USER} = scm/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230923 10:34:08.197" endtime="20230923 10:34:08.197"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:34:08.203" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/scm.keytab scm/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:34:08.227" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:34:08.227" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:34:08.200" endtime="20230923 10:34:08.227"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:34:08.228" level="INFO"/>
<status status="PASS" starttime="20230923 10:34:08.227" endtime="20230923 10:34:08.229"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:34:08.229" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:34:08.229" endtime="20230923 10:34:08.230"/>
</kw>
<status status="PASS" starttime="20230923 10:34:08.199" endtime="20230923 10:34:08.230"/>
</kw>
<msg timestamp="20230923 10:34:08.230" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:34:08.199" endtime="20230923 10:34:08.230"/>
</kw>
<status status="PASS" starttime="20230923 10:34:08.198" endtime="20230923 10:34:08.230"/>
</kw>
<status status="PASS" starttime="20230923 10:34:08.197" endtime="20230923 10:34:08.230"/>
</kw>
<status status="PASS" starttime="20230923 10:34:08.181" endtime="20230923 10:34:08.231"/>
</kw>
<status status="PASS" starttime="20230923 10:34:08.181" endtime="20230923 10:34:08.231"/>
</kw>
<status status="PASS" starttime="20230923 10:34:08.180" endtime="20230923 10:34:08.231"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>403</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:34:08.239" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/dist?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:34:08.276" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:34:08.276" level="INFO">${output} = 403</msg>
<status status="PASS" starttime="20230923 10:34:08.234" endtime="20230923 10:34:08.276"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:34:08.277" level="INFO">403</msg>
<status status="PASS" starttime="20230923 10:34:08.277" endtime="20230923 10:34:08.278"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:34:08.278" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:34:08.278" endtime="20230923 10:34:08.279"/>
</kw>
<status status="PASS" starttime="20230923 10:34:08.233" endtime="20230923 10:34:08.280"/>
</kw>
<msg timestamp="20230923 10:34:08.280" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:34:08.233" endtime="20230923 10:34:08.281"/>
</kw>
<msg timestamp="20230923 10:34:08.281" level="INFO">${result} = 403</msg>
<status status="PASS" starttime="20230923 10:34:08.232" endtime="20230923 10:34:08.281"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:34:08.282" endtime="20230923 10:34:08.282"/>
</kw>
<status status="PASS" starttime="20230923 10:34:08.281" endtime="20230923 10:34:08.283"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230923 10:34:08.283" endtime="20230923 10:34:08.283"/>
</kw>
<status status="NOT RUN" starttime="20230923 10:34:08.283" endtime="20230923 10:34:08.283"/>
</branch>
<status status="PASS" starttime="20230923 10:34:08.281" endtime="20230923 10:34:08.283"/>
</if>
<status status="PASS" starttime="20230923 10:34:08.231" endtime="20230923 10:34:08.283"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:34:08.296" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:34:08.305" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:34:08.305" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230923 10:34:08.291" endtime="20230923 10:34:08.305"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:34:08.307" level="INFO">scm</msg>
<status status="PASS" starttime="20230923 10:34:08.306" endtime="20230923 10:34:08.308"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:34:08.309" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:34:08.308" endtime="20230923 10:34:08.309"/>
</kw>
<status status="PASS" starttime="20230923 10:34:08.290" endtime="20230923 10:34:08.309"/>
</kw>
<msg timestamp="20230923 10:34:08.310" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:34:08.289" endtime="20230923 10:34:08.310"/>
</kw>
<msg timestamp="20230923 10:34:08.310" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230923 10:34:08.288" endtime="20230923 10:34:08.310"/>
</kw>
<msg timestamp="20230923 10:34:08.310" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230923 10:34:08.287" endtime="20230923 10:34:08.310"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230923 10:34:08.311" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230923 10:34:08.311" endtime="20230923 10:34:08.311"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:34:08.319" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:34:08.350" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:34:08.350" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:34:08.314" endtime="20230923 10:34:08.350"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:34:08.352" level="INFO"/>
<status status="PASS" starttime="20230923 10:34:08.351" endtime="20230923 10:34:08.352"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:34:08.353" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:34:08.352" endtime="20230923 10:34:08.353"/>
</kw>
<status status="PASS" starttime="20230923 10:34:08.314" endtime="20230923 10:34:08.353"/>
</kw>
<msg timestamp="20230923 10:34:08.353" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:34:08.313" endtime="20230923 10:34:08.354"/>
</kw>
<status status="PASS" starttime="20230923 10:34:08.312" endtime="20230923 10:34:08.354"/>
</kw>
<status status="PASS" starttime="20230923 10:34:08.311" endtime="20230923 10:34:08.354"/>
</kw>
<status status="PASS" starttime="20230923 10:34:08.286" endtime="20230923 10:34:08.354"/>
</kw>
<status status="PASS" starttime="20230923 10:34:08.285" endtime="20230923 10:34:08.354"/>
</kw>
<status status="PASS" starttime="20230923 10:34:08.283" endtime="20230923 10:34:08.354"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:34:08.361" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/dist?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:34:08.433" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:34:08.433" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230923 10:34:08.358" endtime="20230923 10:34:08.433"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:34:08.436" level="INFO">200</msg>
<status status="PASS" starttime="20230923 10:34:08.434" endtime="20230923 10:34:08.436"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:34:08.437" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:34:08.436" endtime="20230923 10:34:08.438"/>
</kw>
<status status="PASS" starttime="20230923 10:34:08.357" endtime="20230923 10:34:08.438"/>
</kw>
<msg timestamp="20230923 10:34:08.438" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:34:08.357" endtime="20230923 10:34:08.438"/>
</kw>
<msg timestamp="20230923 10:34:08.438" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230923 10:34:08.356" endtime="20230923 10:34:08.438"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:34:08.439" endtime="20230923 10:34:08.440"/>
</kw>
<status status="PASS" starttime="20230923 10:34:08.439" endtime="20230923 10:34:08.440"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230923 10:34:08.440" endtime="20230923 10:34:08.440"/>
</kw>
<status status="NOT RUN" starttime="20230923 10:34:08.440" endtime="20230923 10:34:08.440"/>
</branch>
<status status="PASS" starttime="20230923 10:34:08.439" endtime="20230923 10:34:08.440"/>
</if>
<status status="PASS" starttime="20230923 10:34:08.355" endtime="20230923 10:34:08.440"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:34:08.479" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:34:08.496" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:34:08.497" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230923 10:34:08.462" endtime="20230923 10:34:08.497"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:34:08.500" level="INFO">scm</msg>
<status status="PASS" starttime="20230923 10:34:08.498" endtime="20230923 10:34:08.500"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:34:08.502" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:34:08.501" endtime="20230923 10:34:08.502"/>
</kw>
<status status="PASS" starttime="20230923 10:34:08.461" endtime="20230923 10:34:08.502"/>
</kw>
<msg timestamp="20230923 10:34:08.503" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:34:08.460" endtime="20230923 10:34:08.503"/>
</kw>
<msg timestamp="20230923 10:34:08.503" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230923 10:34:08.454" endtime="20230923 10:34:08.503"/>
</kw>
<msg timestamp="20230923 10:34:08.504" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230923 10:34:08.454" endtime="20230923 10:34:08.504"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230923 10:34:08.506" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230923 10:34:08.505" endtime="20230923 10:34:08.506"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:34:08.521" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser2.keytab testuser2/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:34:08.549" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:34:08.550" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:34:08.512" endtime="20230923 10:34:08.550"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:34:08.551" level="INFO"/>
<status status="PASS" starttime="20230923 10:34:08.550" endtime="20230923 10:34:08.551"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:34:08.552" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:34:08.551" endtime="20230923 10:34:08.552"/>
</kw>
<status status="PASS" starttime="20230923 10:34:08.510" endtime="20230923 10:34:08.553"/>
</kw>
<msg timestamp="20230923 10:34:08.553" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:34:08.510" endtime="20230923 10:34:08.553"/>
</kw>
<status status="PASS" starttime="20230923 10:34:08.507" endtime="20230923 10:34:08.553"/>
</kw>
<status status="PASS" starttime="20230923 10:34:08.507" endtime="20230923 10:34:08.553"/>
</kw>
<status status="PASS" starttime="20230923 10:34:08.453" endtime="20230923 10:34:08.553"/>
</kw>
<status status="PASS" starttime="20230923 10:34:08.452" endtime="20230923 10:34:08.553"/>
</kw>
<status status="PASS" starttime="20230923 10:34:08.444" endtime="20230923 10:34:08.554"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:34:08.562" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/dist?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:34:08.624" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:34:08.624" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230923 10:34:08.557" endtime="20230923 10:34:08.624"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:34:08.630" level="INFO">200</msg>
<status status="PASS" starttime="20230923 10:34:08.625" endtime="20230923 10:34:08.631"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:34:08.635" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:34:08.632" endtime="20230923 10:34:08.635"/>
</kw>
<status status="PASS" starttime="20230923 10:34:08.557" endtime="20230923 10:34:08.636"/>
</kw>
<msg timestamp="20230923 10:34:08.636" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:34:08.556" endtime="20230923 10:34:08.636"/>
</kw>
<msg timestamp="20230923 10:34:08.636" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230923 10:34:08.555" endtime="20230923 10:34:08.636"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:34:08.639" endtime="20230923 10:34:08.640"/>
</kw>
<status status="PASS" starttime="20230923 10:34:08.637" endtime="20230923 10:34:08.640"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230923 10:34:08.641" endtime="20230923 10:34:08.641"/>
</kw>
<status status="NOT RUN" starttime="20230923 10:34:08.640" endtime="20230923 10:34:08.641"/>
</branch>
<status status="PASS" starttime="20230923 10:34:08.637" endtime="20230923 10:34:08.641"/>
</if>
<status status="PASS" starttime="20230923 10:34:08.554" endtime="20230923 10:34:08.641"/>
</kw>
<status status="PASS" starttime="20230923 10:34:08.139" endtime="20230923 10:34:08.641"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230923 10:34:08.138" endtime="20230923 10:34:08.642"/>
</test>
<test id="s1-s7-s2-t8" name="Check Recon Namespace Summary Root" line="122">
<kw name="Wait For Summary">
<arg>${SUMMARY_URL}?path=/</arg>
<arg>ROOT</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:34:08.654" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:34:08.695" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:34:08.695" level="INFO">${output} = {"path":"","type":"ROOT","countStats":{"numVolume":14,"numBucket":26,"numDir":18,"numKey":16},"objectInfo":{"metadata":null,"name":null,"quotaInBytes":0,"quotaInNamespace":0,"usedNamespace":0,"creatio...</msg>
<status status="PASS" starttime="20230923 10:34:08.650" endtime="20230923 10:34:08.695"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:34:08.697" level="INFO">{"path":"","type":"ROOT","countStats":{"numVolume":14,"numBucket":26,"numDir":18,"numKey":16},"objectInfo":{"metadata":null,"name":null,"quotaInBytes":0,"quotaInNamespace":0,"usedNamespace":0,"creationTime":0,"modificationTime":0,"acls":null},"status":"OK"}</msg>
<status status="PASS" starttime="20230923 10:34:08.696" endtime="20230923 10:34:08.697"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:34:08.698" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:34:08.697" endtime="20230923 10:34:08.698"/>
</kw>
<status status="PASS" starttime="20230923 10:34:08.650" endtime="20230923 10:34:08.698"/>
</kw>
<msg timestamp="20230923 10:34:08.698" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:34:08.649" endtime="20230923 10:34:08.698"/>
</kw>
<msg timestamp="20230923 10:34:08.699" level="INFO">${result} = {"path":"","type":"ROOT","countStats":{"numVolume":14,"numBucket":26,"numDir":18,"numKey":16},"objectInfo":{"metadata":null,"name":null,"quotaInBytes":0,"quotaInNamespace":0,"usedNamespace":0,"creatio...</msg>
<status status="PASS" starttime="20230923 10:34:08.649" endtime="20230923 10:34:08.699"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:34:08.699" endtime="20230923 10:34:08.699"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:34:08.700" endtime="20230923 10:34:08.700"/>
</kw>
<status status="PASS" starttime="20230923 10:34:08.648" endtime="20230923 10:34:08.700"/>
</kw>
<status status="PASS" starttime="20230923 10:34:08.647" endtime="20230923 10:34:08.700"/>
</kw>
<status status="PASS" starttime="20230923 10:34:08.645" endtime="20230923 10:34:08.701"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230923 10:34:08.643" endtime="20230923 10:34:08.701"/>
</test>
<test id="s1-s7-s2-t9" name="Check Recon Namespace Summary Volume" line="125">
<kw name="Wait For Summary">
<arg>${SUMMARY_URL}?path=/${VOLUME}</arg>
<arg>VOLUME</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:34:08.712" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-kzkif 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:34:08.740" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:34:08.740" level="INFO">${output} = {"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20230923 10:34:08.709" endtime="20230923 10:34:08.740"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:34:08.741" level="INFO">{"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20230923 10:34:08.740" endtime="20230923 10:34:08.742"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:34:08.742" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:34:08.742" endtime="20230923 10:34:08.742"/>
</kw>
<status status="PASS" starttime="20230923 10:34:08.708" endtime="20230923 10:34:08.743"/>
</kw>
<msg timestamp="20230923 10:34:08.743" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:34:08.707" endtime="20230923 10:34:08.743"/>
</kw>
<msg timestamp="20230923 10:34:08.745" level="INFO">${result} = {"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20230923 10:34:08.707" endtime="20230923 10:34:08.745"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20230923 10:34:08.745" level="FAIL">'{"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}' does not contain '"status":"OK"'</msg>
<status status="FAIL" starttime="20230923 10:34:08.745" endtime="20230923 10:34:08.746"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230923 10:34:08.746" endtime="20230923 10:34:08.746"/>
</kw>
<status status="FAIL" starttime="20230923 10:34:08.706" endtime="20230923 10:34:08.747"/>
</kw>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:34:18.753" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-kzkif 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:34:18.779" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:34:18.779" level="INFO">${output} = {"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20230923 10:34:18.750" endtime="20230923 10:34:18.779"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:34:18.781" level="INFO">{"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20230923 10:34:18.780" endtime="20230923 10:34:18.781"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:34:18.781" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:34:18.781" endtime="20230923 10:34:18.781"/>
</kw>
<status status="PASS" starttime="20230923 10:34:18.749" endtime="20230923 10:34:18.782"/>
</kw>
<msg timestamp="20230923 10:34:18.782" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:34:18.749" endtime="20230923 10:34:18.782"/>
</kw>
<msg timestamp="20230923 10:34:18.782" level="INFO">${result} = {"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20230923 10:34:18.748" endtime="20230923 10:34:18.782"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20230923 10:34:18.783" level="FAIL">'{"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}' does not contain '"status":"OK"'</msg>
<status status="FAIL" starttime="20230923 10:34:18.782" endtime="20230923 10:34:18.783"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230923 10:34:18.783" endtime="20230923 10:34:18.783"/>
</kw>
<status status="FAIL" starttime="20230923 10:34:18.747" endtime="20230923 10:34:18.783"/>
</kw>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:34:28.790" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-kzkif 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:34:28.813" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:34:28.813" level="INFO">${output} = {"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20230923 10:34:28.787" endtime="20230923 10:34:28.813"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:34:28.815" level="INFO">{"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20230923 10:34:28.814" endtime="20230923 10:34:28.815"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:34:28.816" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:34:28.815" endtime="20230923 10:34:28.816"/>
</kw>
<status status="PASS" starttime="20230923 10:34:28.786" endtime="20230923 10:34:28.816"/>
</kw>
<msg timestamp="20230923 10:34:28.816" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:34:28.786" endtime="20230923 10:34:28.817"/>
</kw>
<msg timestamp="20230923 10:34:28.817" level="INFO">${result} = {"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20230923 10:34:28.785" endtime="20230923 10:34:28.817"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20230923 10:34:28.818" level="FAIL">'{"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}' does not contain '"status":"OK"'</msg>
<status status="FAIL" starttime="20230923 10:34:28.817" endtime="20230923 10:34:28.818"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230923 10:34:28.818" endtime="20230923 10:34:28.819"/>
</kw>
<status status="FAIL" starttime="20230923 10:34:28.784" endtime="20230923 10:34:28.819"/>
</kw>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:34:38.826" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-kzkif 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:34:38.866" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:34:38.867" level="INFO">${output} = {"path":"","type":"VOLUME","countStats":{"numVolume":-1,"numBucket":1,"numDir":2,"numKey":2},"objectInfo":{"metadata":{},"name":"vol-kzkif","quotaInBytes":-1,"quotaInNamespace":-1,"usedNamespace":1,"c...</msg>
<status status="PASS" starttime="20230923 10:34:38.822" endtime="20230923 10:34:38.867"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:34:38.868" level="INFO">{"path":"","type":"VOLUME","countStats":{"numVolume":-1,"numBucket":1,"numDir":2,"numKey":2},"objectInfo":{"metadata":{},"name":"vol-kzkif","quotaInBytes":-1,"quotaInNamespace":-1,"usedNamespace":1,"creationTime":1695465224322,"modificationTime":1695465224322,"acls":[{"type":"USER","name":"testuser","aclScope":"ACCESS","aclList":["ALL"]},{"type":"GROUP","name":"testuser","aclScope":"ACCESS","aclList":["ALL"]}],"admin":"testuser","owner":"testuser","volume":"vol-kzkif"},"status":"OK"}</msg>
<status status="PASS" starttime="20230923 10:34:38.867" endtime="20230923 10:34:38.868"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:34:38.869" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:34:38.869" endtime="20230923 10:34:38.869"/>
</kw>
<status status="PASS" starttime="20230923 10:34:38.821" endtime="20230923 10:34:38.869"/>
</kw>
<msg timestamp="20230923 10:34:38.869" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:34:38.821" endtime="20230923 10:34:38.870"/>
</kw>
<msg timestamp="20230923 10:34:38.870" level="INFO">${result} = {"path":"","type":"VOLUME","countStats":{"numVolume":-1,"numBucket":1,"numDir":2,"numKey":2},"objectInfo":{"metadata":{},"name":"vol-kzkif","quotaInBytes":-1,"quotaInNamespace":-1,"usedNamespace":1,"c...</msg>
<status status="PASS" starttime="20230923 10:34:38.820" endtime="20230923 10:34:38.870"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:34:38.870" endtime="20230923 10:34:38.870"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:34:38.870" endtime="20230923 10:34:38.871"/>
</kw>
<status status="PASS" starttime="20230923 10:34:38.819" endtime="20230923 10:34:38.871"/>
</kw>
<status status="PASS" starttime="20230923 10:34:08.705" endtime="20230923 10:34:38.871"/>
</kw>
<status status="PASS" starttime="20230923 10:34:08.704" endtime="20230923 10:34:38.871"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230923 10:34:08.703" endtime="20230923 10:34:38.871"/>
</test>
<test id="s1-s7-s2-t10" name="Check Recon Namespace Summary Bucket" line="128">
<kw name="Wait For Summary">
<arg>${SUMMARY_URL}?path=/${VOLUME}/${BUCKET}</arg>
<arg>BUCKET</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:34:38.881" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-kzkif/buc-yfdkx 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:34:38.925" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:34:38.925" level="INFO">${output} = {"path":"","type":"BUCKET","countStats":{"numVolume":-1,"numBucket":-1,"numDir":2,"numKey":2},"objectInfo":{"versioningEnabled":false,"metadata":{},"name":"buc-yfdkx","quotaInBytes":-1,"quotaInNamespa...</msg>
<status status="PASS" starttime="20230923 10:34:38.879" endtime="20230923 10:34:38.925"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:34:38.927" level="INFO">{"path":"","type":"BUCKET","countStats":{"numVolume":-1,"numBucket":-1,"numDir":2,"numKey":2},"objectInfo":{"versioningEnabled":false,"metadata":{},"name":"buc-yfdkx","quotaInBytes":-1,"quotaInNamespace":-1,"usedNamespace":4,"creationTime":1695465230638,"modificationTime":1695465230638,"acls":[{"type":"USER","name":"testuser/scm@EXAMPLE.COM","aclScope":"ACCESS","aclList":["ALL"]},{"type":"GROUP","name":"testuser","aclScope":"ACCESS","aclList":["ALL"]}],"volumeName":"vol-kzkif","storageType":"DISK","versioning":false,"usedBytes":null,"encryptionInfo":null,"replicationConfigInfo":null,"sourceVolume":null,"sourceBucket":null,"bucketLayout":"FILE_SYSTEM_OPTIMIZED","owner":"testuser"},"status":"OK"}</msg>
<status status="PASS" starttime="20230923 10:34:38.926" endtime="20230923 10:34:38.927"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:34:38.928" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:34:38.927" endtime="20230923 10:34:38.928"/>
</kw>
<status status="PASS" starttime="20230923 10:34:38.878" endtime="20230923 10:34:38.928"/>
</kw>
<msg timestamp="20230923 10:34:38.928" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:34:38.878" endtime="20230923 10:34:38.929"/>
</kw>
<msg timestamp="20230923 10:34:38.929" level="INFO">${result} = {"path":"","type":"BUCKET","countStats":{"numVolume":-1,"numBucket":-1,"numDir":2,"numKey":2},"objectInfo":{"versioningEnabled":false,"metadata":{},"name":"buc-yfdkx","quotaInBytes":-1,"quotaInNamespa...</msg>
<status status="PASS" starttime="20230923 10:34:38.877" endtime="20230923 10:34:38.929"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:34:38.929" endtime="20230923 10:34:38.930"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:34:38.930" endtime="20230923 10:34:38.930"/>
</kw>
<status status="PASS" starttime="20230923 10:34:38.877" endtime="20230923 10:34:38.930"/>
</kw>
<status status="PASS" starttime="20230923 10:34:38.876" endtime="20230923 10:34:38.930"/>
</kw>
<status status="PASS" starttime="20230923 10:34:38.876" endtime="20230923 10:34:38.931"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230923 10:34:38.872" endtime="20230923 10:34:38.931"/>
</test>
<test id="s1-s7-s2-t11" name="Check Recon Namespace Summary Key" line="131">
<kw name="Wait For Summary">
<arg>${SUMMARY_URL}?path=/${VOLUME}/${BUCKET}/file1</arg>
<arg>KEY</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:34:38.940" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-kzkif/buc-yfdkx/file1 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:34:38.999" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:34:38.999" level="INFO">${output} = {"path":"","type":"KEY","countStats":{"numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0},"objectInfo":{"fileName":"file1","file":true,"metadata":{},"name":"file1","quotaInBytes":0,"quotaInNamespace...</msg>
<status status="PASS" starttime="20230923 10:34:38.937" endtime="20230923 10:34:38.999"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:34:39.001" level="INFO">{"path":"","type":"KEY","countStats":{"numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0},"objectInfo":{"fileName":"file1","file":true,"metadata":{},"name":"file1","quotaInBytes":0,"quotaInNamespace":0,"usedNamespace":0,"creationTime":1695465236472,"modificationTime":1695465238450,"acls":[{"type":"USER","name":"testuser/scm@EXAMPLE.COM","aclScope":"ACCESS","aclList":["ALL"]},{"type":"GROUP","name":"testuser","aclScope":"ACCESS","aclList":["ALL"]}],"volumeName":"vol-kzkif","bucketName":"buc-yfdkx","keyName":"file1","dataSize":4068,"keyLocationVersions":[{"version":0,"locationVersionMap":{"0":[{"blockID":{"containerBlockID":{"containerID":1,"localID":111677748019200048},"blockCommitSequenceId":179,"containerID":1,"localID":111677748019200048},"length":4068,"offset":0,"token":null,"createVersion":0,"pipeline":null,"partNumber":0,"containerID":1,"localID":111677748019200048,"blockCommitSequenceId":179}]},"locationList":[{"blockID":{"containerBlockID":{"containerID":1,"localID":111677748019200048},"blockCommitSequenceId":179,"containerID":1,"localID":111677748019200048},"length":4068,"offset":0,"token":null,"createVersion":0,"pipeline":null,"partNumber":0,"containerID":1,"localID":111677748019200048,"blockCommitSequenceId":179}],"multipartKey":false,"blocksLatestVersionOnly":[{"blockID":{"containerBlockID":{"containerID":1,"localID":111677748019200048},"blockCommitSequenceId":179,"containerID":1,"localID":111677748019200048},"length":4068,"offset":0,"token":null,"createVersion":0,"pipeline":null,"partNumber":0,"containerID":1,"localID":111677748019200048,"blockCommitSequenceId":179}],"locationLists":[[{"blockID":{"containerBlockID":{"containerID":1,"localID":111677748019200048},"blockCommitSequenceId":179,"containerID":1,"localID":111677748019200048},"length":4068,"offset":0,"token":null,"createVersion":0,"pipeline":null,"partNumber":0,"containerID":1,"localID":111677748019200048,"blockCommitSequenceId":179}]],"locationListCount":1}],"replicationConfig":{"replicationFactor":"THREE","requiredNodes":3,"replicationType":"RATIS"},"encInfo":null},"status":"OK"}</msg>
<status status="PASS" starttime="20230923 10:34:39.000" endtime="20230923 10:34:39.001"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:34:39.002" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:34:39.001" endtime="20230923 10:34:39.002"/>
</kw>
<status status="PASS" starttime="20230923 10:34:38.936" endtime="20230923 10:34:39.002"/>
</kw>
<msg timestamp="20230923 10:34:39.002" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:34:38.936" endtime="20230923 10:34:39.002"/>
</kw>
<msg timestamp="20230923 10:34:39.003" level="INFO">${result} = {"path":"","type":"KEY","countStats":{"numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0},"objectInfo":{"fileName":"file1","file":true,"metadata":{},"name":"file1","quotaInBytes":0,"quotaInNamespace...</msg>
<status status="PASS" starttime="20230923 10:34:38.935" endtime="20230923 10:34:39.003"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:34:39.003" endtime="20230923 10:34:39.003"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:34:39.003" endtime="20230923 10:34:39.004"/>
</kw>
<status status="PASS" starttime="20230923 10:34:38.935" endtime="20230923 10:34:39.004"/>
</kw>
<status status="PASS" starttime="20230923 10:34:38.934" endtime="20230923 10:34:39.004"/>
</kw>
<status status="PASS" starttime="20230923 10:34:38.933" endtime="20230923 10:34:39.004"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230923 10:34:38.932" endtime="20230923 10:34:39.005"/>
</test>
<test id="s1-s7-s2-t12" name="Check Recon Namespace Summary Directory" line="134">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET_LAYOUT}' == 'LEGACY'</arg>
<arg>Wait For Summary</arg>
<arg>${SUMMARY_URL}?path=/${VOLUME}/${BUCKET}/dir1/dir2/</arg>
<arg>DIRECTORY</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230923 10:34:39.007" endtime="20230923 10:34:39.008"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET_LAYOUT}' == 'FILE_SYSTEM_OPTIMIZED'</arg>
<arg>Wait For Summary</arg>
<arg>${SUMMARY_URL}?path=/${VOLUME}/${BUCKET}/dir1/dir2</arg>
<arg>DIRECTORY</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Wait For Summary">
<arg>${SUMMARY_URL}?path=/${VOLUME}/${BUCKET}/dir1/dir2</arg>
<arg>DIRECTORY</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:34:39.026" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-kzkif/buc-yfdkx/dir1/dir2 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:34:39.050" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:34:39.050" level="INFO">${output} = {"path":"","type":"DIRECTORY","countStats":{"numVolume":-1,"numBucket":-1,"numDir":0,"numKey":1},"objectInfo":{"metadata":{},"name":"dir2","quotaInBytes":0,"quotaInNamespace":0,"usedNamespace":0,"crea...</msg>
<status status="PASS" starttime="20230923 10:34:39.013" endtime="20230923 10:34:39.050"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:34:39.051" level="INFO">{"path":"","type":"DIRECTORY","countStats":{"numVolume":-1,"numBucket":-1,"numDir":0,"numKey":1},"objectInfo":{"metadata":{},"name":"dir2","quotaInBytes":0,"quotaInNamespace":0,"usedNamespace":0,"creationTime":1695465244196,"modificationTime":1695465244196,"acls":[{"type":"USER","name":"testuser/scm@EXAMPLE.COM","aclScope":"ACCESS","aclList":["ALL"]},{"type":"GROUP","name":"testuser","aclScope":"ACCESS","aclList":["ALL"]}]},"status":"OK"}</msg>
<status status="PASS" starttime="20230923 10:34:39.050" endtime="20230923 10:34:39.051"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:34:39.052" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:34:39.051" endtime="20230923 10:34:39.052"/>
</kw>
<status status="PASS" starttime="20230923 10:34:39.012" endtime="20230923 10:34:39.052"/>
</kw>
<msg timestamp="20230923 10:34:39.052" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:34:39.012" endtime="20230923 10:34:39.052"/>
</kw>
<msg timestamp="20230923 10:34:39.053" level="INFO">${result} = {"path":"","type":"DIRECTORY","countStats":{"numVolume":-1,"numBucket":-1,"numDir":0,"numKey":1},"objectInfo":{"metadata":{},"name":"dir2","quotaInBytes":0,"quotaInNamespace":0,"usedNamespace":0,"crea...</msg>
<status status="PASS" starttime="20230923 10:34:39.011" endtime="20230923 10:34:39.053"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:34:39.053" endtime="20230923 10:34:39.053"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:34:39.053" endtime="20230923 10:34:39.054"/>
</kw>
<status status="PASS" starttime="20230923 10:34:39.010" endtime="20230923 10:34:39.054"/>
</kw>
<status status="PASS" starttime="20230923 10:34:39.010" endtime="20230923 10:34:39.054"/>
</kw>
<status status="PASS" starttime="20230923 10:34:39.009" endtime="20230923 10:34:39.054"/>
</kw>
<status status="PASS" starttime="20230923 10:34:39.008" endtime="20230923 10:34:39.054"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230923 10:34:39.006" endtime="20230923 10:34:39.055"/>
</test>
<test id="s1-s7-s2-t13" name="Check Recon Namespace Disk Usage" line="138">
<kw name="Wait For Summary">
<arg>${DISK_USAGE_URL}?path=/${VOLUME}/${BUCKET}&amp;files=true&amp;replica=true</arg>
<arg>\"sizeWithReplica\"</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:34:39.064" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/du?path=/vol-kzkif/buc-yfdkx&amp;files=true&amp;replica=true 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:34:39.084" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:34:39.084" level="INFO">${output} = {"status":"OK","path":"/vol-kzkif/buc-yfdkx","size":10106,"sizeWithReplica":-1,"subPathCount":1,"subPaths":[{"key":false,"path":"/vol-kzkif/buc-yfdkx/dir1","size":6038,"sizeWithReplica":-1,"isKey":fal...</msg>
<status status="PASS" starttime="20230923 10:34:39.060" endtime="20230923 10:34:39.084"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:34:39.086" level="INFO">{"status":"OK","path":"/vol-kzkif/buc-yfdkx","size":10106,"sizeWithReplica":-1,"subPathCount":1,"subPaths":[{"key":false,"path":"/vol-kzkif/buc-yfdkx/dir1","size":6038,"sizeWithReplica":-1,"isKey":false}],"sizeDirectKey":4068}</msg>
<status status="PASS" starttime="20230923 10:34:39.085" endtime="20230923 10:34:39.086"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:34:39.087" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:34:39.086" endtime="20230923 10:34:39.088"/>
</kw>
<status status="PASS" starttime="20230923 10:34:39.060" endtime="20230923 10:34:39.088"/>
</kw>
<msg timestamp="20230923 10:34:39.088" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:34:39.059" endtime="20230923 10:34:39.088"/>
</kw>
<msg timestamp="20230923 10:34:39.088" level="INFO">${result} = {"status":"OK","path":"/vol-kzkif/buc-yfdkx","size":10106,"sizeWithReplica":-1,"subPathCount":1,"subPaths":[{"key":false,"path":"/vol-kzkif/buc-yfdkx/dir1","size":6038,"sizeWithReplica":-1,"isKey":fal...</msg>
<status status="PASS" starttime="20230923 10:34:39.059" endtime="20230923 10:34:39.088"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:34:39.088" endtime="20230923 10:34:39.089"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:34:39.089" endtime="20230923 10:34:39.090"/>
</kw>
<status status="PASS" starttime="20230923 10:34:39.058" endtime="20230923 10:34:39.090"/>
</kw>
<status status="PASS" starttime="20230923 10:34:39.058" endtime="20230923 10:34:39.091"/>
</kw>
<status status="PASS" starttime="20230923 10:34:39.057" endtime="20230923 10:34:39.091"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230923 10:34:39.056" endtime="20230923 10:34:39.091"/>
</test>
<test id="s1-s7-s2-t14" name="Check Recon Namespace Volume Quota Usage" line="141">
<kw name="Wait For Summary">
<arg>${QUOTA_USAGE_URL}?path=/${VOLUME}</arg>
<arg>\"used\"</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:34:39.099" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/quota?path=/vol-kzkif 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:34:39.123" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:34:39.123" level="INFO">${output} = {"allowed":-1,"used":10106,"status":"OK"}</msg>
<status status="PASS" starttime="20230923 10:34:39.097" endtime="20230923 10:34:39.123"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:34:39.124" level="INFO">{"allowed":-1,"used":10106,"status":"OK"}</msg>
<status status="PASS" starttime="20230923 10:34:39.124" endtime="20230923 10:34:39.125"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:34:39.126" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:34:39.125" endtime="20230923 10:34:39.126"/>
</kw>
<status status="PASS" starttime="20230923 10:34:39.096" endtime="20230923 10:34:39.126"/>
</kw>
<msg timestamp="20230923 10:34:39.126" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:34:39.096" endtime="20230923 10:34:39.126"/>
</kw>
<msg timestamp="20230923 10:34:39.127" level="INFO">${result} = {"allowed":-1,"used":10106,"status":"OK"}</msg>
<status status="PASS" starttime="20230923 10:34:39.095" endtime="20230923 10:34:39.127"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:34:39.127" endtime="20230923 10:34:39.127"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:34:39.128" endtime="20230923 10:34:39.128"/>
</kw>
<status status="PASS" starttime="20230923 10:34:39.094" endtime="20230923 10:34:39.128"/>
</kw>
<status status="PASS" starttime="20230923 10:34:39.093" endtime="20230923 10:34:39.128"/>
</kw>
<status status="PASS" starttime="20230923 10:34:39.093" endtime="20230923 10:34:39.128"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230923 10:34:39.092" endtime="20230923 10:34:39.129"/>
</test>
<test id="s1-s7-s2-t15" name="Check Recon Namespace Bucket Quota Usage" line="144">
<kw name="Wait For Summary">
<arg>${QUOTA_USAGE_URL}?path=/${VOLUME}/${BUCKET}</arg>
<arg>\"used\"</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:34:39.139" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/quota?path=/vol-kzkif/buc-yfdkx 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:34:39.159" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:34:39.159" level="INFO">${output} = {"allowed":-1,"used":10106,"status":"OK"}</msg>
<status status="PASS" starttime="20230923 10:34:39.136" endtime="20230923 10:34:39.160"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:34:39.161" level="INFO">{"allowed":-1,"used":10106,"status":"OK"}</msg>
<status status="PASS" starttime="20230923 10:34:39.160" endtime="20230923 10:34:39.161"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:34:39.162" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:34:39.161" endtime="20230923 10:34:39.162"/>
</kw>
<status status="PASS" starttime="20230923 10:34:39.135" endtime="20230923 10:34:39.162"/>
</kw>
<msg timestamp="20230923 10:34:39.162" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:34:39.135" endtime="20230923 10:34:39.162"/>
</kw>
<msg timestamp="20230923 10:34:39.162" level="INFO">${result} = {"allowed":-1,"used":10106,"status":"OK"}</msg>
<status status="PASS" starttime="20230923 10:34:39.134" endtime="20230923 10:34:39.163"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:34:39.163" endtime="20230923 10:34:39.163"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:34:39.163" endtime="20230923 10:34:39.164"/>
</kw>
<status status="PASS" starttime="20230923 10:34:39.133" endtime="20230923 10:34:39.164"/>
</kw>
<status status="PASS" starttime="20230923 10:34:39.133" endtime="20230923 10:34:39.164"/>
</kw>
<status status="PASS" starttime="20230923 10:34:39.132" endtime="20230923 10:34:39.164"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230923 10:34:39.131" endtime="20230923 10:34:39.164"/>
</test>
<test id="s1-s7-s2-t16" name="Check Recon Namespace File Size Distribution Root" line="147">
<kw name="Wait For Summary">
<arg>${FILE_SIZE_DIST_URL}?path=/</arg>
<arg>\"dist\"</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:34:39.173" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/dist?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:34:39.192" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:34:39.192" level="INFO">${output} = {"dist":[5,0,1,1,2,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"status":"OK"}</msg>
<status status="PASS" starttime="20230923 10:34:39.171" endtime="20230923 10:34:39.192"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:34:39.194" level="INFO">{"dist":[5,0,1,1,2,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"status":"OK"}</msg>
<status status="PASS" starttime="20230923 10:34:39.193" endtime="20230923 10:34:39.194"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:34:39.195" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:34:39.194" endtime="20230923 10:34:39.195"/>
</kw>
<status status="PASS" starttime="20230923 10:34:39.170" endtime="20230923 10:34:39.195"/>
</kw>
<msg timestamp="20230923 10:34:39.195" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:34:39.169" endtime="20230923 10:34:39.195"/>
</kw>
<msg timestamp="20230923 10:34:39.195" level="INFO">${result} = {"dist":[5,0,1,1,2,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"status":"OK"}</msg>
<status status="PASS" starttime="20230923 10:34:39.169" endtime="20230923 10:34:39.195"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:34:39.196" endtime="20230923 10:34:39.196"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:34:39.197" endtime="20230923 10:34:39.197"/>
</kw>
<status status="PASS" starttime="20230923 10:34:39.168" endtime="20230923 10:34:39.197"/>
</kw>
<status status="PASS" starttime="20230923 10:34:39.168" endtime="20230923 10:34:39.197"/>
</kw>
<status status="PASS" starttime="20230923 10:34:39.167" endtime="20230923 10:34:39.197"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230923 10:34:39.166" endtime="20230923 10:34:39.198"/>
</test>
<doc>Smoke test for Recon Namespace Summary Endpoint for FILE_SYSTEM_OPTIMIZED buckets.</doc>
<status status="PASS" starttime="20230923 10:33:38.561" endtime="20230923 10:34:39.199"/>
</suite>
<status status="PASS" starttime="20230923 10:32:25.238" endtime="20230923 10:34:39.203"/>
</suite>
<suite id="s1-s8" name="Admincli" source="/opt/hadoop/smoketest/admincli">
<suite id="s1-s8-s1" name="Admin" source="/opt/hadoop/smoketest/admincli/admin.robot">
<test id="s1-s8-s1-t1" name="Incomplete command" line="23">
<kw name="Execute And Ignore Error" library="os">
<var>${output}</var>
<arg>ozone admin</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:34:42.955" level="INFO">Running command 'ozone admin 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:34:46.743" level="INFO">${rc} = 2</msg>
<msg timestamp="20230923 10:34:46.744" level="INFO">${output} = Incomplete command
Usage: ozone admin [-hV] [--verbose] [-conf=&lt;configurationPath&gt;]
                   [-D=&lt;String=String&gt;]... [COMMAND]
Developer tools for Ozone Admin operations
      -conf=&lt;configu...</msg>
<status status="PASS" starttime="20230923 10:34:42.952" endtime="20230923 10:34:46.744"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:34:46.745" level="INFO">Incomplete command
Usage: ozone admin [-hV] [--verbose] [-conf=&lt;configurationPath&gt;]
                   [-D=&lt;String=String&gt;]... [COMMAND]
Developer tools for Ozone Admin operations
      -conf=&lt;configurationPath&gt;

  -D, --set=&lt;String=String&gt;

  -h, --help      Show this help message and exit.
  -V, --version   Print version information and exit.
      --verbose   More verbose output. Show the stack trace of the errors.
Commands:
  containerbalancer   ContainerBalancer specific operations
  replicationmanager  ReplicationManager specific operations
  safemode            Safe mode specific operations
  printTopology       Print a tree of the network topology as reported by SCM
  cert                Certificate related operations
  container           Container specific operations
  datanode            Datanode specific operations
  pipeline            Pipeline specific operations
  namespace           Namespace Summary specific admin operations
  om                  Ozone Manager specific admin operations
  reconfig            Dynamically reconfigure server without restarting it
  scm                 Ozone Storage Container Manager specific admin operations</msg>
<status status="PASS" starttime="20230923 10:34:46.744" endtime="20230923 10:34:46.745"/>
</kw>
<msg timestamp="20230923 10:34:46.745" level="INFO">${output} = Incomplete command
Usage: ozone admin [-hV] [--verbose] [-conf=&lt;configurationPath&gt;]
                   [-D=&lt;String=String&gt;]... [COMMAND]
Developer tools for Ozone Admin operations
      -conf=&lt;configu...</msg>
<status status="PASS" starttime="20230923 10:34:42.951" endtime="20230923 10:34:46.746"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Incomplete command</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:34:46.746" endtime="20230923 10:34:46.746"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>container</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:34:46.746" endtime="20230923 10:34:46.747"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>datanode</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:34:46.747" endtime="20230923 10:34:46.747"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:34:46.747" endtime="20230923 10:34:46.748"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>pipeline</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:34:46.748" endtime="20230923 10:34:46.748"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>replicationmanager</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:34:46.749" endtime="20230923 10:34:46.749"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>safemode</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:34:46.749" endtime="20230923 10:34:46.750"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>printTopology</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:34:46.750" endtime="20230923 10:34:46.750"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230923 10:34:42.951" endtime="20230923 10:34:46.750"/>
</test>
<doc>Test ozone admin command</doc>
<status status="PASS" starttime="20230923 10:34:42.921" endtime="20230923 10:34:46.752"/>
</suite>
<suite id="s1-s8-s2" name="Cert" source="/opt/hadoop/smoketest/admincli/cert.robot">
<test id="s1-s8-s2-t1" name="List certificates" line="26">
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>N/A</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20230923 10:34:46.762" endtime="20230923 10:34:46.762"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin cert list</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:34:46.767" level="INFO">Running command 'ozone admin cert list 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:34:52.116" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:34:52.116" level="INFO">${output} = Certificate list:(Type=VALID, BatchSize=20, CertCount=7)
SerialNumber      Valid From                     Expiry                         Subject                                                        ...</msg>
<status status="PASS" starttime="20230923 10:34:46.764" endtime="20230923 10:34:52.116"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:34:52.118" level="INFO">Certificate list:(Type=VALID, BatchSize=20, CertCount=7)
SerialNumber      Valid From                     Expiry                         Subject                                                                                                        Issuer                                                                                                        
1                 Sat Sep 23 09:52:48 UTC 2023   Tue Oct 31 09:52:48 UTC 2028   CN=scm-1@scm,OU=5116574b-609b-4159-b761-697571577420,O=CID-7c8010d4-a3e4-473c-94fa-52965ebc1dff                CN=scm-1@scm,OU=5116574b-609b-4159-b761-697571577420,O=CID-7c8010d4-a3e4-473c-94fa-52965ebc1dff               
487546741084      Sat Sep 23 09:52:49 UTC 2023   Tue Oct 31 09:52:49 UTC 2028   CN=scm-sub-487008116518@scm,OU=5116574b-609b-4159-b761-697571577420,O=CID-7c8010d4-a3e4-473c-94fa-52965ebc1dff CN=scm-1@scm,OU=5116574b-609b-4159-b761-697571577420,O=CID-7c8010d4-a3e4-473c-94fa-52965ebc1dff               
515900979902      Sat Sep 23 09:53:18 UTC 2023   Sun Sep 22 09:53:18 UTC 2024   CN=recon@recon,OU=5116574b-609b-4159-b761-697571577420,O=CID-7c8010d4-a3e4-473c-94fa-52965ebc1dff              CN=scm-sub-487008116518@scm,OU=5116574b-609b-4159-b761-697571577420,O=CID-7c8010d4-a3e4-473c-94fa-52965ebc1dff
517721468502      Sat Sep 23 09:53:20 UTC 2023   Sun Sep 22 09:53:20 UTC 2024   CN=dn@d9aaf8bf08ba,OU=5116574b-609b-4159-b761-697571577420,O=CID-7c8010d4-a3e4-473c-94fa-52965ebc1dff          CN=scm-sub-487008116518@scm,OU=5116574b-609b-4159-b761-697571577420,O=CID-7c8010d4-a3e4-473c-94fa-52965ebc1dff
517905861442      Sat Sep 23 09:53:20 UTC 2023   Sun Sep 22 09:53:20 UTC 2024   CN=dn@d8fe224c9a92,OU=5116574b-609b-4159-b761-697571577420,O=CID-7c8010d4-a3e4-473c-94fa-52965ebc1dff          CN=scm-sub-487008116518@scm,OU=5116574b-609b-4159-b761-697571577420,O=CID-7c8010d4-a3e4-473c-94fa-52965ebc1dff
518356410450      Sat Sep 23 09:53:20 UTC 2023   Sun Sep 22 09:53:20 UTC 2024   CN=dn@8cda37d11442,OU=5116574b-609b-4159-b761-697571577420,O=CID-7c8010d4-a3e4-473c-94fa-52965ebc1dff          CN=scm-sub-487008116518@scm,OU=5116574b-609b-4159-b761-697571577420,O=CID-7c8010d4-a3e4-473c-94fa-52965ebc1dff
518785912048      Sat Sep 23 09:53:21 UTC 2023   Sun Sep 22 09:53:21 UTC 2024   CN=om,OU=5116574b-609b-4159-b761-697571577420,O=CID-7c8010d4-a3e4-473c-94fa-52965ebc1dff                       CN=scm-sub-487008116518@scm,OU=5116574b-609b-4159-b761-697571577420,O=CID-7c8010d4-a3e4-473c-94fa-52965ebc1dff</msg>
<status status="PASS" starttime="20230923 10:34:52.117" endtime="20230923 10:34:52.118"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:34:52.119" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:34:52.118" endtime="20230923 10:34:52.119"/>
</kw>
<status status="PASS" starttime="20230923 10:34:46.763" endtime="20230923 10:34:52.119"/>
</kw>
<msg timestamp="20230923 10:34:52.119" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:34:46.763" endtime="20230923 10:34:52.119"/>
</kw>
<msg timestamp="20230923 10:34:52.120" level="INFO">${output} = Certificate list:(Type=VALID, BatchSize=20, CertCount=7)
SerialNumber      Valid From                     Expiry                         Subject                                                        ...</msg>
<status status="PASS" starttime="20230923 10:34:46.762" endtime="20230923 10:34:52.120"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Certificate list:(Type=</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:34:52.120" endtime="20230923 10:34:52.121"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230923 10:34:46.761" endtime="20230923 10:34:52.121"/>
</test>
<test id="s1-s8-s2-t2" name="List certificates as JSON" line="31">
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>N/A</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20230923 10:34:52.123" endtime="20230923 10:34:52.123"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone admin cert list --json 1&gt;&gt; outStream 2&gt;&gt; errStream</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:34:52.129" level="INFO">Running command 'ozone admin cert list --json 1&gt;&gt; outStream 2&gt;&gt; errStream'.</msg>
<msg timestamp="20230923 10:34:57.305" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:34:57.305" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:34:52.126" endtime="20230923 10:34:57.305"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:34:57.307" level="INFO"/>
<status status="PASS" starttime="20230923 10:34:57.306" endtime="20230923 10:34:57.307"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:34:57.308" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:34:57.307" endtime="20230923 10:34:57.308"/>
</kw>
<status status="PASS" starttime="20230923 10:34:52.124" endtime="20230923 10:34:57.308"/>
</kw>
<msg timestamp="20230923 10:34:57.308" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:34:52.124" endtime="20230923 10:34:57.308"/>
</kw>
<status status="PASS" starttime="20230923 10:34:52.123" endtime="20230923 10:34:57.308"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>cat outStream | jq -r '.[0] | keys'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:34:57.313" level="INFO">Running command 'cat outStream | jq -r '.[0] | keys' 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:34:57.358" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:34:57.358" level="INFO">${output} = [
  "expiry",
  "issuerDN",
  "serialNumber",
  "subjectDN",
  "validFrom"
]</msg>
<status status="PASS" starttime="20230923 10:34:57.310" endtime="20230923 10:34:57.358"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:34:57.359" level="INFO">[
  "expiry",
  "issuerDN",
  "serialNumber",
  "subjectDN",
  "validFrom"
]</msg>
<status status="PASS" starttime="20230923 10:34:57.359" endtime="20230923 10:34:57.359"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:34:57.360" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:34:57.360" endtime="20230923 10:34:57.360"/>
</kw>
<status status="PASS" starttime="20230923 10:34:57.310" endtime="20230923 10:34:57.360"/>
</kw>
<msg timestamp="20230923 10:34:57.361" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:34:57.309" endtime="20230923 10:34:57.361"/>
</kw>
<msg timestamp="20230923 10:34:57.361" level="INFO">${output} = [
  "expiry",
  "issuerDN",
  "serialNumber",
  "subjectDN",
  "validFrom"
]</msg>
<status status="PASS" starttime="20230923 10:34:57.309" endtime="20230923 10:34:57.361"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>serialNumber</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:34:57.361" endtime="20230923 10:34:57.361"/>
</kw>
<kw name="Execute" library="os">
<var>${errOutput}</var>
<arg>cat errStream</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:34:57.366" level="INFO">Running command 'cat errStream 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:34:57.369" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:34:57.369" level="INFO">${output} = Certificate list:(Type=VALID, BatchSize=20, CertCount=7)</msg>
<status status="PASS" starttime="20230923 10:34:57.363" endtime="20230923 10:34:57.369"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:34:57.370" level="INFO">Certificate list:(Type=VALID, BatchSize=20, CertCount=7)</msg>
<status status="PASS" starttime="20230923 10:34:57.369" endtime="20230923 10:34:57.370"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:34:57.371" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:34:57.370" endtime="20230923 10:34:57.371"/>
</kw>
<status status="PASS" starttime="20230923 10:34:57.362" endtime="20230923 10:34:57.371"/>
</kw>
<msg timestamp="20230923 10:34:57.371" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:34:57.362" endtime="20230923 10:34:57.372"/>
</kw>
<msg timestamp="20230923 10:34:57.372" level="INFO">${errOutput} = Certificate list:(Type=VALID, BatchSize=20, CertCount=7)</msg>
<status status="PASS" starttime="20230923 10:34:57.362" endtime="20230923 10:34:57.372"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${errOutput}</arg>
<arg>Certificate list:(Type=</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:34:57.372" endtime="20230923 10:34:57.372"/>
</kw>
<kw name="Execute" library="os">
<arg>rm outStream</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:34:57.376" level="INFO">Running command 'rm outStream 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:34:57.380" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:34:57.380" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:34:57.374" endtime="20230923 10:34:57.380"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:34:57.381" level="INFO"/>
<status status="PASS" starttime="20230923 10:34:57.380" endtime="20230923 10:34:57.381"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:34:57.381" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:34:57.381" endtime="20230923 10:34:57.382"/>
</kw>
<status status="PASS" starttime="20230923 10:34:57.373" endtime="20230923 10:34:57.382"/>
</kw>
<msg timestamp="20230923 10:34:57.382" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:34:57.373" endtime="20230923 10:34:57.382"/>
</kw>
<status status="PASS" starttime="20230923 10:34:57.373" endtime="20230923 10:34:57.382"/>
</kw>
<kw name="Execute" library="os">
<arg>rm errStream</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:34:57.386" level="INFO">Running command 'rm errStream 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:34:57.389" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:34:57.389" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:34:57.384" endtime="20230923 10:34:57.389"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:34:57.391" level="INFO"/>
<status status="PASS" starttime="20230923 10:34:57.390" endtime="20230923 10:34:57.391"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:34:57.391" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:34:57.391" endtime="20230923 10:34:57.392"/>
</kw>
<status status="PASS" starttime="20230923 10:34:57.383" endtime="20230923 10:34:57.392"/>
</kw>
<msg timestamp="20230923 10:34:57.392" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:34:57.383" endtime="20230923 10:34:57.392"/>
</kw>
<status status="PASS" starttime="20230923 10:34:57.382" endtime="20230923 10:34:57.392"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230923 10:34:52.122" endtime="20230923 10:34:57.392"/>
</test>
<doc>Test ozone admin cert command</doc>
<status status="PASS" starttime="20230923 10:34:46.754" endtime="20230923 10:34:57.394"/>
</suite>
<suite id="s1-s8-s3" name="Container" source="/opt/hadoop/smoketest/admincli/container.robot">
<kw name="Create test data" type="SETUP">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:34:57.408" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:34:57.412" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:34:57.412" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230923 10:34:57.406" endtime="20230923 10:34:57.412"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:34:57.413" level="INFO">scm</msg>
<status status="PASS" starttime="20230923 10:34:57.413" endtime="20230923 10:34:57.413"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:34:57.414" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:34:57.413" endtime="20230923 10:34:57.414"/>
</kw>
<status status="PASS" starttime="20230923 10:34:57.405" endtime="20230923 10:34:57.414"/>
</kw>
<msg timestamp="20230923 10:34:57.414" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:34:57.405" endtime="20230923 10:34:57.414"/>
</kw>
<msg timestamp="20230923 10:34:57.414" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230923 10:34:57.405" endtime="20230923 10:34:57.415"/>
</kw>
<msg timestamp="20230923 10:34:57.415" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230923 10:34:57.404" endtime="20230923 10:34:57.415"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230923 10:34:57.415" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230923 10:34:57.415" endtime="20230923 10:34:57.416"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:34:57.420" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:34:57.438" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:34:57.438" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:34:57.418" endtime="20230923 10:34:57.438"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:34:57.439" level="INFO"/>
<status status="PASS" starttime="20230923 10:34:57.439" endtime="20230923 10:34:57.439"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:34:57.440" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:34:57.440" endtime="20230923 10:34:57.440"/>
</kw>
<status status="PASS" starttime="20230923 10:34:57.417" endtime="20230923 10:34:57.440"/>
</kw>
<msg timestamp="20230923 10:34:57.441" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:34:57.417" endtime="20230923 10:34:57.441"/>
</kw>
<status status="PASS" starttime="20230923 10:34:57.416" endtime="20230923 10:34:57.441"/>
</kw>
<status status="PASS" starttime="20230923 10:34:57.416" endtime="20230923 10:34:57.441"/>
</kw>
<status status="PASS" starttime="20230923 10:34:57.404" endtime="20230923 10:34:57.441"/>
</kw>
<status status="PASS" starttime="20230923 10:34:57.403" endtime="20230923 10:34:57.441"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone freon ockg -n1 -t1 -p container</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:34:57.445" level="INFO">Running command 'ozone freon ockg -n1 -t1 -p container 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:35:06.919" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:35:06.919" level="INFO">${output} = 2023-09-23 10:35:00,450 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-23 10:35:00,640 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230923 10:34:57.442" endtime="20230923 10:35:06.919"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:35:06.921" level="INFO">2023-09-23 10:35:00,450 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-23 10:35:00,640 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-09-23 10:35:00,644 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-09-23 10:35:00,765 [main] INFO freon.BaseFreonGenerator: Executing test with prefix container and number-of-tests 1
2023-09-23 10:35:00,846 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-23 10:35:01,852 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-23 10:35:02,852 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-23 10:35:03,734 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2023-09-23 10:35:03,808 [pool-2-thread-1] INFO netty.NettyConfigKeys$DataStream: setTlsConf GrpcTlsConfig0-
2023-09-23 10:35:03,855 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-23 10:35:04,161 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2023-09-23 10:35:04,855 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-23 10:35:05,856 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2023-09-23 10:35:06,555 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=1, min=2214.961244, max=2214.961244, mean=2214.961244, stddev=0.0, median=2214.961244, p75=2214.961244, p95=2214.961244, p98=2214.961244, p99=2214.961244, p999=2214.961244, mean_rate=0.31638095210368217, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-09-23 10:35:06,556 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 6
2023-09-23 10:35:06,557 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-09-23 10:35:06,557 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20230923 10:35:06.920" endtime="20230923 10:35:06.921"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:35:06.922" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:35:06.921" endtime="20230923 10:35:06.922"/>
</kw>
<status status="PASS" starttime="20230923 10:34:57.442" endtime="20230923 10:35:06.922"/>
</kw>
<msg timestamp="20230923 10:35:06.922" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:34:57.442" endtime="20230923 10:35:06.922"/>
</kw>
<status status="PASS" starttime="20230923 10:34:57.441" endtime="20230923 10:35:06.923"/>
</kw>
<status status="PASS" starttime="20230923 10:34:57.403" endtime="20230923 10:35:06.923"/>
</kw>
<test id="s1-s8-s3-t1" name="Create container" line="38">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin container create</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:35:06.930" level="INFO">Running command 'ozone admin container create 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:35:15.252" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:35:15.260" level="INFO">${output} = Loaded properties from hadoop-metrics2.properties
Scheduled Metric snapshot period at 10 second(s).
XceiverClientMetrics metrics system started
Container 3 is created.</msg>
<status status="PASS" starttime="20230923 10:35:06.926" endtime="20230923 10:35:15.260"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:35:15.263" level="INFO">Loaded properties from hadoop-metrics2.properties
Scheduled Metric snapshot period at 10 second(s).
XceiverClientMetrics metrics system started
Container 3 is created.</msg>
<status status="PASS" starttime="20230923 10:35:15.261" endtime="20230923 10:35:15.263"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:35:15.265" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:35:15.264" endtime="20230923 10:35:15.265"/>
</kw>
<status status="PASS" starttime="20230923 10:35:06.926" endtime="20230923 10:35:15.266"/>
</kw>
<msg timestamp="20230923 10:35:15.266" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:35:06.925" endtime="20230923 10:35:15.266"/>
</kw>
<msg timestamp="20230923 10:35:15.266" level="INFO">${output} = Loaded properties from hadoop-metrics2.properties
Scheduled Metric snapshot period at 10 second(s).
XceiverClientMetrics metrics system started
Container 3 is created.</msg>
<status status="PASS" starttime="20230923 10:35:06.925" endtime="20230923 10:35:15.266"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>is created</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:35:15.267" endtime="20230923 10:35:15.268"/>
</kw>
<kw name="Execute" library="os">
<var>${container}</var>
<arg>echo "${output}" | grep 'is created' | cut -f2 -d' '</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:35:15.274" level="INFO">Running command 'echo "Loaded properties from hadoop-metrics2.properties
Scheduled Metric snapshot period at 10 second(s).
XceiverClientMetrics metrics system started
Container 3 is created." | grep 'is created' | cut -f2 -d' ' 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:35:15.278" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:35:15.278" level="INFO">${output} = 3</msg>
<status status="PASS" starttime="20230923 10:35:15.271" endtime="20230923 10:35:15.278"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:35:15.280" level="INFO">3</msg>
<status status="PASS" starttime="20230923 10:35:15.279" endtime="20230923 10:35:15.280"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:35:15.281" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:35:15.280" endtime="20230923 10:35:15.281"/>
</kw>
<status status="PASS" starttime="20230923 10:35:15.270" endtime="20230923 10:35:15.281"/>
</kw>
<msg timestamp="20230923 10:35:15.281" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:35:15.269" endtime="20230923 10:35:15.281"/>
</kw>
<msg timestamp="20230923 10:35:15.282" level="INFO">${container} = 3</msg>
<status status="PASS" starttime="20230923 10:35:15.268" endtime="20230923 10:35:15.282"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${CONTAINER}</arg>
<arg>${container}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230923 10:35:15.283" level="INFO">${CONTAINER} = 3</msg>
<status status="PASS" starttime="20230923 10:35:15.282" endtime="20230923 10:35:15.283"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230923 10:35:06.923" endtime="20230923 10:35:15.283"/>
</test>
<test id="s1-s8-s3-t2" name="List containers" line="44">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin container list</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:35:15.289" level="INFO">Running command 'ozone admin container list 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:35:20.502" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:35:20.502" level="INFO">${output} = {
  "state" : "OPEN",
  "stateEnterTime" : "2023-09-23T09:54:17.303Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "replicationType" : "RATIS"
  },
  "usedBytes" : 508039,
  "numb...</msg>
<status status="PASS" starttime="20230923 10:35:15.286" endtime="20230923 10:35:20.502"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:35:20.504" level="INFO">{
  "state" : "OPEN",
  "stateEnterTime" : "2023-09-23T09:54:17.303Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "replicationType" : "RATIS"
  },
  "usedBytes" : 508039,
  "numberOfKeys" : 44,
  "lastUsed" : "2023-09-23T10:35:20.328355Z",
  "owner" : "om1",
  "containerID" : 1,
  "deleteTransactionId" : 19,
  "sequenceId" : 182,
  "open" : true,
  "deleted" : false
}
{
  "state" : "OPEN",
  "stateEnterTime" : "2023-09-23T10:21:32.904Z",
  "replicationConfig" : {
    "replicationFactor" : "ONE",
    "replicationType" : "RATIS"
  },
  "usedBytes" : 10240,
  "numberOfKeys" : 1,
  "lastUsed" : "2023-09-23T10:35:20.328432Z",
  "owner" : "om1",
  "containerID" : 2,
  "deleteTransactionId" : 0,
  "sequenceId" : 3,
  "open" : true,
  "deleted" : false
}
{
  "state" : "OPEN",
  "stateEnterTime" : "2023-09-23T10:35:12.698Z",
  "replicationConfig" : {
    "replicationFactor" : "ONE",
    "replicationType" : "STANDALONE"
  },
  "usedBytes" : 0,
  "numberOfKeys" : 0,
  "lastUsed" : "2023-09-23T10:35:20.329603Z",
  "owner" : "OZONE",
  "containerID" : 3,
  "deleteTransactionId" : 0,
  "sequenceId" : 0,
  "open" : true,
  "deleted" : false
}</msg>
<status status="PASS" starttime="20230923 10:35:20.503" endtime="20230923 10:35:20.504"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:35:20.505" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:35:20.505" endtime="20230923 10:35:20.505"/>
</kw>
<status status="PASS" starttime="20230923 10:35:15.286" endtime="20230923 10:35:20.505"/>
</kw>
<msg timestamp="20230923 10:35:20.506" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:35:15.286" endtime="20230923 10:35:20.506"/>
</kw>
<msg timestamp="20230923 10:35:20.506" level="INFO">${output} = {
  "state" : "OPEN",
  "stateEnterTime" : "2023-09-23T09:54:17.303Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "replicationType" : "RATIS"
  },
  "usedBytes" : 508039,
  "numb...</msg>
<status status="PASS" starttime="20230923 10:35:15.285" endtime="20230923 10:35:20.506"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>OPEN</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:35:20.506" endtime="20230923 10:35:20.507"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230923 10:35:15.284" endtime="20230923 10:35:20.507"/>
</test>
<test id="s1-s8-s3-t3" name="List containers with explicit host" line="48">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin container list --scm ${SCM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:35:20.514" level="INFO">Running command 'ozone admin container list --scm scm 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:35:25.973" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:35:25.973" level="INFO">${output} = {
  "state" : "OPEN",
  "stateEnterTime" : "2023-09-23T09:54:17.303Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "replicationType" : "RATIS"
  },
  "usedBytes" : 508039,
  "numb...</msg>
<status status="PASS" starttime="20230923 10:35:20.511" endtime="20230923 10:35:25.973"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:35:25.974" level="INFO">{
  "state" : "OPEN",
  "stateEnterTime" : "2023-09-23T09:54:17.303Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "replicationType" : "RATIS"
  },
  "usedBytes" : 508039,
  "numberOfKeys" : 44,
  "lastUsed" : "2023-09-23T10:35:25.705386Z",
  "owner" : "om1",
  "containerID" : 1,
  "deleteTransactionId" : 19,
  "sequenceId" : 186,
  "open" : true,
  "deleted" : false
}
{
  "state" : "OPEN",
  "stateEnterTime" : "2023-09-23T10:21:32.904Z",
  "replicationConfig" : {
    "replicationFactor" : "ONE",
    "replicationType" : "RATIS"
  },
  "usedBytes" : 10240,
  "numberOfKeys" : 1,
  "lastUsed" : "2023-09-23T10:35:25.705433Z",
  "owner" : "om1",
  "containerID" : 2,
  "deleteTransactionId" : 0,
  "sequenceId" : 3,
  "open" : true,
  "deleted" : false
}
{
  "state" : "OPEN",
  "stateEnterTime" : "2023-09-23T10:35:12.698Z",
  "replicationConfig" : {
    "replicationFactor" : "ONE",
    "replicationType" : "STANDALONE"
  },
  "usedBytes" : 0,
  "numberOfKeys" : 0,
  "lastUsed" : "2023-09-23T10:35:25.706419Z",
  "owner" : "OZONE",
  "containerID" : 3,
  "deleteTransactionId" : 0,
  "sequenceId" : 0,
  "open" : true,
  "deleted" : false
}</msg>
<status status="PASS" starttime="20230923 10:35:25.973" endtime="20230923 10:35:25.974"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:35:25.975" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:35:25.974" endtime="20230923 10:35:25.975"/>
</kw>
<status status="PASS" starttime="20230923 10:35:20.510" endtime="20230923 10:35:25.975"/>
</kw>
<msg timestamp="20230923 10:35:25.975" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:35:20.510" endtime="20230923 10:35:25.975"/>
</kw>
<msg timestamp="20230923 10:35:25.976" level="INFO">${output} = {
  "state" : "OPEN",
  "stateEnterTime" : "2023-09-23T09:54:17.303Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "replicationType" : "RATIS"
  },
  "usedBytes" : 508039,
  "numb...</msg>
<status status="PASS" starttime="20230923 10:35:20.509" endtime="20230923 10:35:25.976"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>OPEN</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:35:25.976" endtime="20230923 10:35:25.976"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230923 10:35:20.508" endtime="20230923 10:35:25.977"/>
</test>
<test id="s1-s8-s3-t4" name="List containers with container state" line="52">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin container list --state=CLOSED</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:35:25.983" level="INFO">Running command 'ozone admin container list --state=CLOSED 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:35:30.940" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:35:30.940" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:35:25.980" endtime="20230923 10:35:30.940"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:35:30.941" level="INFO"/>
<status status="PASS" starttime="20230923 10:35:30.940" endtime="20230923 10:35:30.942"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:35:30.942" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:35:30.942" endtime="20230923 10:35:30.942"/>
</kw>
<status status="PASS" starttime="20230923 10:35:25.979" endtime="20230923 10:35:30.943"/>
</kw>
<msg timestamp="20230923 10:35:30.943" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:35:25.979" endtime="20230923 10:35:30.943"/>
</kw>
<msg timestamp="20230923 10:35:30.943" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:35:25.978" endtime="20230923 10:35:30.943"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>OPEN</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:35:30.943" endtime="20230923 10:35:30.944"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230923 10:35:25.977" endtime="20230923 10:35:30.944"/>
</test>
<test id="s1-s8-s3-t5" name="List containers with replication factor ONE" line="56">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin container list -t RATIS -r ONE</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:35:30.950" level="INFO">Running command 'ozone admin container list -t RATIS -r ONE 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:35:35.470" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:35:35.470" level="INFO">${output} = {
  "state" : "OPEN",
  "stateEnterTime" : "2023-09-23T10:21:32.904Z",
  "replicationConfig" : {
    "replicationFactor" : "ONE",
    "replicationType" : "RATIS"
  },
  "usedBytes" : 10240,
  "numberO...</msg>
<status status="PASS" starttime="20230923 10:35:30.947" endtime="20230923 10:35:35.470"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:35:35.472" level="INFO">{
  "state" : "OPEN",
  "stateEnterTime" : "2023-09-23T10:21:32.904Z",
  "replicationConfig" : {
    "replicationFactor" : "ONE",
    "replicationType" : "RATIS"
  },
  "usedBytes" : 10240,
  "numberOfKeys" : 1,
  "lastUsed" : "2023-09-23T10:35:35.349220Z",
  "owner" : "om1",
  "containerID" : 2,
  "deleteTransactionId" : 0,
  "sequenceId" : 3,
  "open" : true,
  "deleted" : false
}</msg>
<status status="PASS" starttime="20230923 10:35:35.471" endtime="20230923 10:35:35.472"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:35:35.473" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:35:35.473" endtime="20230923 10:35:35.473"/>
</kw>
<status status="PASS" starttime="20230923 10:35:30.947" endtime="20230923 10:35:35.474"/>
</kw>
<msg timestamp="20230923 10:35:35.474" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:35:30.946" endtime="20230923 10:35:35.474"/>
</kw>
<msg timestamp="20230923 10:35:35.474" level="INFO">${output} = {
  "state" : "OPEN",
  "stateEnterTime" : "2023-09-23T10:21:32.904Z",
  "replicationConfig" : {
    "replicationFactor" : "ONE",
    "replicationType" : "RATIS"
  },
  "usedBytes" : 10240,
  "numberO...</msg>
<status status="PASS" starttime="20230923 10:35:30.946" endtime="20230923 10:35:35.474"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>THREE</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:35:35.474" endtime="20230923 10:35:35.475"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230923 10:35:30.945" endtime="20230923 10:35:35.475"/>
</test>
<test id="s1-s8-s3-t6" name="List containers with replication factor THREE" line="60">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin container list -t RATIS -r THREE</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:35:35.488" level="INFO">Running command 'ozone admin container list -t RATIS -r THREE 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:35:40.639" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:35:40.639" level="INFO">${output} = {
  "state" : "OPEN",
  "stateEnterTime" : "2023-09-23T09:54:17.303Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "replicationType" : "RATIS"
  },
  "usedBytes" : 518145,
  "numb...</msg>
<status status="PASS" starttime="20230923 10:35:35.485" endtime="20230923 10:35:40.639"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:35:40.641" level="INFO">{
  "state" : "OPEN",
  "stateEnterTime" : "2023-09-23T09:54:17.303Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "replicationType" : "RATIS"
  },
  "usedBytes" : 518145,
  "numberOfKeys" : 46,
  "lastUsed" : "2023-09-23T10:35:40.252500Z",
  "owner" : "om1",
  "containerID" : 1,
  "deleteTransactionId" : 19,
  "sequenceId" : 186,
  "open" : true,
  "deleted" : false
}</msg>
<status status="PASS" starttime="20230923 10:35:40.640" endtime="20230923 10:35:40.641"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:35:40.642" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:35:40.641" endtime="20230923 10:35:40.642"/>
</kw>
<status status="PASS" starttime="20230923 10:35:35.485" endtime="20230923 10:35:40.642"/>
</kw>
<msg timestamp="20230923 10:35:40.642" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:35:35.484" endtime="20230923 10:35:40.642"/>
</kw>
<msg timestamp="20230923 10:35:40.642" level="INFO">${output} = {
  "state" : "OPEN",
  "stateEnterTime" : "2023-09-23T09:54:17.303Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "replicationType" : "RATIS"
  },
  "usedBytes" : 518145,
  "numb...</msg>
<status status="PASS" starttime="20230923 10:35:35.484" endtime="20230923 10:35:40.642"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>ONE</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:35:40.643" endtime="20230923 10:35:40.643"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230923 10:35:35.476" endtime="20230923 10:35:40.643"/>
</test>
<test id="s1-s8-s3-t7" name="Container info" line="64">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin container info "${CONTAINER}"</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:35:40.650" level="INFO">Running command 'ozone admin container info "3" 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:35:45.855" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:35:45.855" level="INFO">${output} = Container id: 3
Pipeline id: 25cdfddb-8862-4b95-8508-d2846eb1f6e7
Container State: OPEN
Datanodes: [cefb5f11-4c66-4dc1-8ed3-0315d7bdcf97/ozonesecure_datanode_1.ozonesecure_default]
Replicas: [State: O...</msg>
<status status="PASS" starttime="20230923 10:35:40.647" endtime="20230923 10:35:45.855"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:35:45.857" level="INFO">Container id: 3
Pipeline id: 25cdfddb-8862-4b95-8508-d2846eb1f6e7
Container State: OPEN
Datanodes: [cefb5f11-4c66-4dc1-8ed3-0315d7bdcf97/ozonesecure_datanode_1.ozonesecure_default]
Replicas: [State: OPEN; ReplicaIndex: 0; Origin: cefb5f11-4c66-4dc1-8ed3-0315d7bdcf97; Location: cefb5f11-4c66-4dc1-8ed3-0315d7bdcf97/ozonesecure_datanode_1.ozonesecure_default]</msg>
<status status="PASS" starttime="20230923 10:35:45.856" endtime="20230923 10:35:45.857"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:35:45.858" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:35:45.857" endtime="20230923 10:35:45.859"/>
</kw>
<status status="PASS" starttime="20230923 10:35:40.647" endtime="20230923 10:35:45.859"/>
</kw>
<msg timestamp="20230923 10:35:45.859" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:35:40.646" endtime="20230923 10:35:45.859"/>
</kw>
<msg timestamp="20230923 10:35:45.859" level="INFO">${output} = Container id: 3
Pipeline id: 25cdfddb-8862-4b95-8508-d2846eb1f6e7
Container State: OPEN
Datanodes: [cefb5f11-4c66-4dc1-8ed3-0315d7bdcf97/ozonesecure_datanode_1.ozonesecure_default]
Replicas: [State: O...</msg>
<status status="PASS" starttime="20230923 10:35:40.646" endtime="20230923 10:35:45.859"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Container id: ${CONTAINER}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:35:45.860" endtime="20230923 10:35:45.860"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Pipeline id</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:35:45.860" endtime="20230923 10:35:45.861"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Datanodes</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:35:45.861" endtime="20230923 10:35:45.861"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230923 10:35:40.645" endtime="20230923 10:35:45.862"/>
</test>
<test id="s1-s8-s3-t8" name="Verbose container info" line="70">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin --verbose container info "${CONTAINER}"</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:35:45.868" level="INFO">Running command 'ozone admin --verbose container info "3" 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:35:50.330" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:35:50.330" level="INFO">${output} = Container id: 3
Pipeline Info: Pipeline[ Id: 25cdfddb-8862-4b95-8508-d2846eb1f6e7, Nodes: cefb5f11-4c66-4dc1-8ed3-0315d7bdcf97(ozonesecure_datanode_1.ozonesecure_default/172.20.0.10), ReplicationConfi...</msg>
<status status="PASS" starttime="20230923 10:35:45.865" endtime="20230923 10:35:50.330"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:35:50.332" level="INFO">Container id: 3
Pipeline Info: Pipeline[ Id: 25cdfddb-8862-4b95-8508-d2846eb1f6e7, Nodes: cefb5f11-4c66-4dc1-8ed3-0315d7bdcf97(ozonesecure_datanode_1.ozonesecure_default/172.20.0.10), ReplicationConfig: STANDALONE/ONE, State:OPEN, leaderId:, CreationTimestamp2023-09-23T10:35:12.690Z[UTC]]
Container State: OPEN
Datanodes: [cefb5f11-4c66-4dc1-8ed3-0315d7bdcf97/ozonesecure_datanode_1.ozonesecure_default]
Replicas: [State: OPEN; ReplicaIndex: 0; Origin: cefb5f11-4c66-4dc1-8ed3-0315d7bdcf97; Location: cefb5f11-4c66-4dc1-8ed3-0315d7bdcf97/ozonesecure_datanode_1.ozonesecure_default]</msg>
<status status="PASS" starttime="20230923 10:35:50.331" endtime="20230923 10:35:50.332"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:35:50.333" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:35:50.332" endtime="20230923 10:35:50.333"/>
</kw>
<status status="PASS" starttime="20230923 10:35:45.865" endtime="20230923 10:35:50.333"/>
</kw>
<msg timestamp="20230923 10:35:50.333" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:35:45.864" endtime="20230923 10:35:50.333"/>
</kw>
<msg timestamp="20230923 10:35:50.333" level="INFO">${output} = Container id: 3
Pipeline Info: Pipeline[ Id: 25cdfddb-8862-4b95-8508-d2846eb1f6e7, Nodes: cefb5f11-4c66-4dc1-8ed3-0315d7bdcf97(ozonesecure_datanode_1.ozonesecure_default/172.20.0.10), ReplicationConfi...</msg>
<status status="PASS" starttime="20230923 10:35:45.864" endtime="20230923 10:35:50.333"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Pipeline Info</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:35:50.333" endtime="20230923 10:35:50.334"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230923 10:35:45.863" endtime="20230923 10:35:50.334"/>
</test>
<test id="s1-s8-s3-t9" name="Close container" line="74">
<kw name="Execute" library="os">
<var>${container}</var>
<arg>ozone admin container list --state OPEN | jq -r 'select(.replicationConfig.replicationFactor == "THREE") | .containerID' | head -1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:35:50.340" level="INFO">Running command 'ozone admin container list --state OPEN | jq -r 'select(.replicationConfig.replicationFactor == "THREE") | .containerID' | head -1 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:35:55.183" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:35:55.183" level="INFO">${output} = 1</msg>
<status status="PASS" starttime="20230923 10:35:50.337" endtime="20230923 10:35:55.184"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:35:55.185" level="INFO">1</msg>
<status status="PASS" starttime="20230923 10:35:55.184" endtime="20230923 10:35:55.185"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:35:55.186" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:35:55.185" endtime="20230923 10:35:55.186"/>
</kw>
<status status="PASS" starttime="20230923 10:35:50.337" endtime="20230923 10:35:55.186"/>
</kw>
<msg timestamp="20230923 10:35:55.186" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:35:50.336" endtime="20230923 10:35:55.187"/>
</kw>
<msg timestamp="20230923 10:35:55.187" level="INFO">${container} = 1</msg>
<status status="PASS" starttime="20230923 10:35:50.336" endtime="20230923 10:35:55.187"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone admin container close "${container}"</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:35:55.192" level="INFO">Running command 'ozone admin container close "1" 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:35:59.596" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:35:59.596" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:35:55.189" endtime="20230923 10:35:59.596"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:35:59.598" level="INFO"/>
<status status="PASS" starttime="20230923 10:35:59.597" endtime="20230923 10:35:59.598"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:35:59.599" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:35:59.598" endtime="20230923 10:35:59.599"/>
</kw>
<status status="PASS" starttime="20230923 10:35:55.188" endtime="20230923 10:35:59.599"/>
</kw>
<msg timestamp="20230923 10:35:59.599" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:35:55.188" endtime="20230923 10:35:59.599"/>
</kw>
<status status="PASS" starttime="20230923 10:35:55.187" endtime="20230923 10:35:59.600"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin container info "${container}"</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:35:59.605" level="INFO">Running command 'ozone admin container info "1" 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:36:03.933" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:36:03.933" level="INFO">${output} = Container id: 1
Pipeline id: 066b3c9e-5f3a-4202-9e9a-e108ca35ecc9
Container State: CLOSING
Datanodes: [4d9fab95-a94e-48b5-88e0-d06ac1678a42/ozonesecure_datanode_3.ozonesecure_default,
cefb5f11-4c66-4d...</msg>
<status status="PASS" starttime="20230923 10:35:59.602" endtime="20230923 10:36:03.933"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:36:03.934" level="INFO">Container id: 1
Pipeline id: 066b3c9e-5f3a-4202-9e9a-e108ca35ecc9
Container State: CLOSING
Datanodes: [4d9fab95-a94e-48b5-88e0-d06ac1678a42/ozonesecure_datanode_3.ozonesecure_default,
cefb5f11-4c66-4dc1-8ed3-0315d7bdcf97/ozonesecure_datanode_1.ozonesecure_default,
84f21144-36b5-4d76-8a98-b96ac8f4d8db/ozonesecure_datanode_2.ozonesecure_default]
Replicas: [State: OPEN; ReplicaIndex: 0; Origin: 84f21144-36b5-4d76-8a98-b96ac8f4d8db; Location: 84f21144-36b5-4d76-8a98-b96ac8f4d8db/ozonesecure_datanode_2.ozonesecure_default,
State: OPEN; ReplicaIndex: 0; Origin: 4d9fab95-a94e-48b5-88e0-d06ac1678a42; Location: 4d9fab95-a94e-48b5-88e0-d06ac1678a42/ozonesecure_datanode_3.ozonesecure_default,
State: OPEN; ReplicaIndex: 0; Origin: cefb5f11-4c66-4dc1-8ed3-0315d7bdcf97; Location: cefb5f11-4c66-4dc1-8ed3-0315d7bdcf97/ozonesecure_datanode_1.ozonesecure_default]</msg>
<status status="PASS" starttime="20230923 10:36:03.933" endtime="20230923 10:36:03.934"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:36:03.935" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:36:03.935" endtime="20230923 10:36:03.935"/>
</kw>
<status status="PASS" starttime="20230923 10:35:59.601" endtime="20230923 10:36:03.935"/>
</kw>
<msg timestamp="20230923 10:36:03.936" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:35:59.600" endtime="20230923 10:36:03.936"/>
</kw>
<msg timestamp="20230923 10:36:03.936" level="INFO">${output} = Container id: 1
Pipeline id: 066b3c9e-5f3a-4202-9e9a-e108ca35ecc9
Container State: CLOSING
Datanodes: [4d9fab95-a94e-48b5-88e0-d06ac1678a42/ozonesecure_datanode_3.ozonesecure_default,
cefb5f11-4c66-4d...</msg>
<status status="PASS" starttime="20230923 10:35:59.600" endtime="20230923 10:36:03.936"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>CLOS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:36:03.936" endtime="20230923 10:36:03.936"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>1min</arg>
<arg>10sec</arg>
<arg>Container is closed</arg>
<arg>${container}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Container is closed">
<arg>${container}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin container info "${container}"</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:36:03.942" level="INFO">Running command 'ozone admin container info "1" 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:36:08.700" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:36:08.700" level="INFO">${output} = Container id: 1
Pipeline id: 066b3c9e-5f3a-4202-9e9a-e108ca35ecc9
Container State: CLOSING
Datanodes: [4d9fab95-a94e-48b5-88e0-d06ac1678a42/ozonesecure_datanode_3.ozonesecure_default,
cefb5f11-4c66-4d...</msg>
<status status="PASS" starttime="20230923 10:36:03.939" endtime="20230923 10:36:08.700"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:36:08.702" level="INFO">Container id: 1
Pipeline id: 066b3c9e-5f3a-4202-9e9a-e108ca35ecc9
Container State: CLOSING
Datanodes: [4d9fab95-a94e-48b5-88e0-d06ac1678a42/ozonesecure_datanode_3.ozonesecure_default,
cefb5f11-4c66-4dc1-8ed3-0315d7bdcf97/ozonesecure_datanode_1.ozonesecure_default,
84f21144-36b5-4d76-8a98-b96ac8f4d8db/ozonesecure_datanode_2.ozonesecure_default]
Replicas: [State: CLOSING; ReplicaIndex: 0; Origin: 84f21144-36b5-4d76-8a98-b96ac8f4d8db; Location: 84f21144-36b5-4d76-8a98-b96ac8f4d8db/ozonesecure_datanode_2.ozonesecure_default,
State: OPEN; ReplicaIndex: 0; Origin: 4d9fab95-a94e-48b5-88e0-d06ac1678a42; Location: 4d9fab95-a94e-48b5-88e0-d06ac1678a42/ozonesecure_datanode_3.ozonesecure_default,
State: OPEN; ReplicaIndex: 0; Origin: cefb5f11-4c66-4dc1-8ed3-0315d7bdcf97; Location: cefb5f11-4c66-4dc1-8ed3-0315d7bdcf97/ozonesecure_datanode_1.ozonesecure_default]</msg>
<status status="PASS" starttime="20230923 10:36:08.701" endtime="20230923 10:36:08.702"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:36:08.703" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:36:08.702" endtime="20230923 10:36:08.703"/>
</kw>
<status status="PASS" starttime="20230923 10:36:03.939" endtime="20230923 10:36:08.703"/>
</kw>
<msg timestamp="20230923 10:36:08.703" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:36:03.938" endtime="20230923 10:36:08.704"/>
</kw>
<msg timestamp="20230923 10:36:08.704" level="INFO">${output} = Container id: 1
Pipeline id: 066b3c9e-5f3a-4202-9e9a-e108ca35ecc9
Container State: CLOSING
Datanodes: [4d9fab95-a94e-48b5-88e0-d06ac1678a42/ozonesecure_datanode_3.ozonesecure_default,
cefb5f11-4c66-4d...</msg>
<status status="PASS" starttime="20230923 10:36:03.938" endtime="20230923 10:36:08.704"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>CLOSED</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20230923 10:36:08.705" level="FAIL">'Container id: 1
Pipeline id: 066b3c9e-5f3a-4202-9e9a-e108ca35ecc9
Container State: CLOSING
Datanodes: [4d9fab95-a94e-48b5-88e0-d06ac1678a42/ozonesecure_datanode_3.ozonesecure_default,
cefb5f11-4c66-4dc1-8ed3-0315d7bdcf97/ozonesecure_datanode_1.ozonesecure_default,
84f21144-36b5-4d76-8a98-b96ac8f4d8db/ozonesecure_datanode_2.ozonesecure_default]
Replicas: [State: CLOSING; ReplicaIndex: 0; Origin: 84f21144-36b5-4d76-8a98-b96ac8f4d8db; Location: 84f21144-36b5-4d76-8a98-b96ac8f4d8db/ozonesecure_datanode_2.ozonesecure_default,
State: OPEN; ReplicaIndex: 0; Origin: 4d9fab95-a94e-48b5-88e0-d06ac1678a42; Location: 4d9fab95-a94e-48b5-88e0-d06ac1678a42/ozonesecure_datanode_3.ozonesecure_default,
State: OPEN; ReplicaIndex: 0; Origin: cefb5f11-4c66-4dc1-8ed3-0315d7bdcf97; Location: cefb5f11-4c66-4dc1-8ed3-0315d7bdcf97/ozonesecure_datanode_1.ozonesecure_default]' does not contain 'CLOSED'</msg>
<status status="FAIL" starttime="20230923 10:36:08.704" endtime="20230923 10:36:08.705"/>
</kw>
<status status="FAIL" starttime="20230923 10:36:03.937" endtime="20230923 10:36:08.705"/>
</kw>
<kw name="Container is closed">
<arg>${container}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin container info "${container}"</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:36:18.713" level="INFO">Running command 'ozone admin container info "1" 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:36:24.065" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:36:24.066" level="INFO">${output} = Container id: 1
Pipeline id: 138367eb-e232-4ad6-af50-a5cd67ac2457
Container State: CLOSED
Datanodes: [84f21144-36b5-4d76-8a98-b96ac8f4d8db/ozonesecure_datanode_2.ozonesecure_default,
4d9fab95-a94e-48b...</msg>
<status status="PASS" starttime="20230923 10:36:18.710" endtime="20230923 10:36:24.066"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:36:24.067" level="INFO">Container id: 1
Pipeline id: 138367eb-e232-4ad6-af50-a5cd67ac2457
Container State: CLOSED
Datanodes: [84f21144-36b5-4d76-8a98-b96ac8f4d8db/ozonesecure_datanode_2.ozonesecure_default,
4d9fab95-a94e-48b5-88e0-d06ac1678a42/ozonesecure_datanode_3.ozonesecure_default,
cefb5f11-4c66-4dc1-8ed3-0315d7bdcf97/ozonesecure_datanode_1.ozonesecure_default]
Replicas: [State: CLOSED; ReplicaIndex: 0; Origin: 84f21144-36b5-4d76-8a98-b96ac8f4d8db; Location: 84f21144-36b5-4d76-8a98-b96ac8f4d8db/ozonesecure_datanode_2.ozonesecure_default,
State: CLOSED; ReplicaIndex: 0; Origin: 4d9fab95-a94e-48b5-88e0-d06ac1678a42; Location: 4d9fab95-a94e-48b5-88e0-d06ac1678a42/ozonesecure_datanode_3.ozonesecure_default,
State: CLOSED; ReplicaIndex: 0; Origin: cefb5f11-4c66-4dc1-8ed3-0315d7bdcf97; Location: cefb5f11-4c66-4dc1-8ed3-0315d7bdcf97/ozonesecure_datanode_1.ozonesecure_default]</msg>
<status status="PASS" starttime="20230923 10:36:24.066" endtime="20230923 10:36:24.067"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:36:24.068" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:36:24.068" endtime="20230923 10:36:24.068"/>
</kw>
<status status="PASS" starttime="20230923 10:36:18.709" endtime="20230923 10:36:24.068"/>
</kw>
<msg timestamp="20230923 10:36:24.069" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:36:18.709" endtime="20230923 10:36:24.069"/>
</kw>
<msg timestamp="20230923 10:36:24.069" level="INFO">${output} = Container id: 1
Pipeline id: 138367eb-e232-4ad6-af50-a5cd67ac2457
Container State: CLOSED
Datanodes: [84f21144-36b5-4d76-8a98-b96ac8f4d8db/ozonesecure_datanode_2.ozonesecure_default,
4d9fab95-a94e-48b...</msg>
<status status="PASS" starttime="20230923 10:36:18.708" endtime="20230923 10:36:24.069"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>CLOSED</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:36:24.069" endtime="20230923 10:36:24.070"/>
</kw>
<status status="PASS" starttime="20230923 10:36:18.706" endtime="20230923 10:36:24.070"/>
</kw>
<status status="PASS" starttime="20230923 10:36:03.937" endtime="20230923 10:36:24.070"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230923 10:35:50.335" endtime="20230923 10:36:24.070"/>
</test>
<test id="s1-s8-s3-t10" name="Incomplete command" line="81">
<kw name="Execute And Ignore Error" library="os">
<var>${output}</var>
<arg>ozone admin container</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:36:24.077" level="INFO">Running command 'ozone admin container 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:36:27.724" level="INFO">${rc} = 255</msg>
<msg timestamp="20230923 10:36:27.724" level="INFO">${output} = Incomplete command
Usage: ozone admin container [-hV] [COMMAND]
Container specific operations
  -h, --help      Show this help message and exit.
  -V, --version   Print version information and exit.
C...</msg>
<status status="PASS" starttime="20230923 10:36:24.073" endtime="20230923 10:36:27.724"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:36:27.725" level="INFO">Incomplete command
Usage: ozone admin container [-hV] [COMMAND]
Container specific operations
  -h, --help      Show this help message and exit.
  -V, --version   Print version information and exit.
Commands:
  list    List containers
  info    Show information about a specific container
  create  Create container
  close   close container
  report  Display the container summary report</msg>
<status status="PASS" starttime="20230923 10:36:27.725" endtime="20230923 10:36:27.726"/>
</kw>
<msg timestamp="20230923 10:36:27.726" level="INFO">${output} = Incomplete command
Usage: ozone admin container [-hV] [COMMAND]
Container specific operations
  -h, --help      Show this help message and exit.
  -V, --version   Print version information and exit.
C...</msg>
<status status="PASS" starttime="20230923 10:36:24.072" endtime="20230923 10:36:27.726"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Incomplete command</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:36:27.726" endtime="20230923 10:36:27.726"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>list</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:36:27.727" endtime="20230923 10:36:27.727"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>info</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:36:27.727" endtime="20230923 10:36:27.727"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>create</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:36:27.728" endtime="20230923 10:36:27.728"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>close</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:36:27.728" endtime="20230923 10:36:27.729"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230923 10:36:24.071" endtime="20230923 10:36:27.729"/>
</test>
<test id="s1-s8-s3-t11" name="Cannot close container without admin privilege" line="93">
<kw name="Requires admin privilege" library="commonlib">
<arg>ozone admin container close "${CONTAINER}"</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip privilege check in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20230923 10:36:27.732" endtime="20230923 10:36:27.732"/>
</kw>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:36:27.737" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:36:27.741" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:36:27.741" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230923 10:36:27.734" endtime="20230923 10:36:27.741"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:36:27.743" level="INFO">scm</msg>
<status status="PASS" starttime="20230923 10:36:27.742" endtime="20230923 10:36:27.743"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:36:27.743" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:36:27.743" endtime="20230923 10:36:27.743"/>
</kw>
<status status="PASS" starttime="20230923 10:36:27.734" endtime="20230923 10:36:27.744"/>
</kw>
<msg timestamp="20230923 10:36:27.744" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:36:27.734" endtime="20230923 10:36:27.744"/>
</kw>
<msg timestamp="20230923 10:36:27.744" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230923 10:36:27.733" endtime="20230923 10:36:27.744"/>
</kw>
<msg timestamp="20230923 10:36:27.744" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230923 10:36:27.733" endtime="20230923 10:36:27.744"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230923 10:36:27.745" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230923 10:36:27.745" endtime="20230923 10:36:27.745"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:36:27.750" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser2.keytab testuser2/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:36:27.770" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:36:27.770" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:36:27.747" endtime="20230923 10:36:27.771"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:36:27.772" level="INFO"/>
<status status="PASS" starttime="20230923 10:36:27.771" endtime="20230923 10:36:27.772"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:36:27.772" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:36:27.772" endtime="20230923 10:36:27.773"/>
</kw>
<status status="PASS" starttime="20230923 10:36:27.747" endtime="20230923 10:36:27.773"/>
</kw>
<msg timestamp="20230923 10:36:27.773" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:36:27.746" endtime="20230923 10:36:27.773"/>
</kw>
<status status="PASS" starttime="20230923 10:36:27.746" endtime="20230923 10:36:27.773"/>
</kw>
<status status="PASS" starttime="20230923 10:36:27.745" endtime="20230923 10:36:27.773"/>
</kw>
<status status="PASS" starttime="20230923 10:36:27.732" endtime="20230923 10:36:27.773"/>
</kw>
<kw name="Access should be denied" library="commonlib">
<arg>${command}</arg>
<kw name="Execute And Ignore Error" library="os">
<var>${output}</var>
<arg>${command}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:36:27.777" level="INFO">Running command 'ozone admin container close "3" 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:36:31.993" level="INFO">${rc} = 255</msg>
<msg timestamp="20230923 10:36:31.993" level="INFO">${output} = Access denied for user testuser2/scm@EXAMPLE.COM. SCM superuser privilege is required.</msg>
<status status="PASS" starttime="20230923 10:36:27.775" endtime="20230923 10:36:31.993"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:36:31.994" level="INFO">Access denied for user testuser2/scm@EXAMPLE.COM. SCM superuser privilege is required.</msg>
<status status="PASS" starttime="20230923 10:36:31.993" endtime="20230923 10:36:31.994"/>
</kw>
<msg timestamp="20230923 10:36:31.995" level="INFO">${output} = Access denied for user testuser2/scm@EXAMPLE.COM. SCM superuser privilege is required.</msg>
<status status="PASS" starttime="20230923 10:36:27.774" endtime="20230923 10:36:31.995"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Access denied</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:36:31.995" endtime="20230923 10:36:31.995"/>
</kw>
<status status="PASS" starttime="20230923 10:36:27.774" endtime="20230923 10:36:31.995"/>
</kw>
<status status="PASS" starttime="20230923 10:36:27.731" endtime="20230923 10:36:31.996"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230923 10:36:27.730" endtime="20230923 10:36:31.996"/>
</test>
<test id="s1-s8-s3-t12" name="Cannot create container without admin privilege" line="96">
<kw name="Requires admin privilege" library="commonlib">
<arg>ozone admin container create</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip privilege check in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20230923 10:36:31.999" endtime="20230923 10:36:31.999"/>
</kw>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:36:32.005" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:36:32.008" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:36:32.008" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230923 10:36:32.002" endtime="20230923 10:36:32.008"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:36:32.009" level="INFO">scm</msg>
<status status="PASS" starttime="20230923 10:36:32.009" endtime="20230923 10:36:32.009"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:36:32.010" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:36:32.010" endtime="20230923 10:36:32.010"/>
</kw>
<status status="PASS" starttime="20230923 10:36:32.001" endtime="20230923 10:36:32.010"/>
</kw>
<msg timestamp="20230923 10:36:32.010" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:36:32.001" endtime="20230923 10:36:32.011"/>
</kw>
<msg timestamp="20230923 10:36:32.011" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230923 10:36:32.000" endtime="20230923 10:36:32.011"/>
</kw>
<msg timestamp="20230923 10:36:32.011" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230923 10:36:32.000" endtime="20230923 10:36:32.011"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230923 10:36:32.012" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230923 10:36:32.011" endtime="20230923 10:36:32.012"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:36:32.016" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser2.keytab testuser2/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:36:32.035" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:36:32.035" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:36:32.014" endtime="20230923 10:36:32.035"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:36:32.036" level="INFO"/>
<status status="PASS" starttime="20230923 10:36:32.035" endtime="20230923 10:36:32.036"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:36:32.037" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:36:32.036" endtime="20230923 10:36:32.037"/>
</kw>
<status status="PASS" starttime="20230923 10:36:32.013" endtime="20230923 10:36:32.037"/>
</kw>
<msg timestamp="20230923 10:36:32.037" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:36:32.013" endtime="20230923 10:36:32.037"/>
</kw>
<status status="PASS" starttime="20230923 10:36:32.012" endtime="20230923 10:36:32.037"/>
</kw>
<status status="PASS" starttime="20230923 10:36:32.012" endtime="20230923 10:36:32.038"/>
</kw>
<status status="PASS" starttime="20230923 10:36:31.999" endtime="20230923 10:36:32.038"/>
</kw>
<kw name="Access should be denied" library="commonlib">
<arg>${command}</arg>
<kw name="Execute And Ignore Error" library="os">
<var>${output}</var>
<arg>${command}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:36:32.041" level="INFO">Running command 'ozone admin container create 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:36:37.432" level="INFO">${rc} = 255</msg>
<msg timestamp="20230923 10:36:37.432" level="INFO">${output} = Access denied for user testuser2/scm@EXAMPLE.COM. SCM superuser privilege is required.</msg>
<status status="PASS" starttime="20230923 10:36:32.039" endtime="20230923 10:36:37.432"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:36:37.433" level="INFO">Access denied for user testuser2/scm@EXAMPLE.COM. SCM superuser privilege is required.</msg>
<status status="PASS" starttime="20230923 10:36:37.432" endtime="20230923 10:36:37.433"/>
</kw>
<msg timestamp="20230923 10:36:37.434" level="INFO">${output} = Access denied for user testuser2/scm@EXAMPLE.COM. SCM superuser privilege is required.</msg>
<status status="PASS" starttime="20230923 10:36:32.038" endtime="20230923 10:36:37.434"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Access denied</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:36:37.434" endtime="20230923 10:36:37.434"/>
</kw>
<status status="PASS" starttime="20230923 10:36:32.038" endtime="20230923 10:36:37.434"/>
</kw>
<status status="PASS" starttime="20230923 10:36:31.998" endtime="20230923 10:36:37.435"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230923 10:36:31.997" endtime="20230923 10:36:37.435"/>
</test>
<test id="s1-s8-s3-t13" name="Reset user" line="99">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:36:37.443" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:36:37.447" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:36:37.447" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230923 10:36:37.440" endtime="20230923 10:36:37.447"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:36:37.448" level="INFO">scm</msg>
<status status="PASS" starttime="20230923 10:36:37.448" endtime="20230923 10:36:37.448"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:36:37.449" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:36:37.449" endtime="20230923 10:36:37.449"/>
</kw>
<status status="PASS" starttime="20230923 10:36:37.440" endtime="20230923 10:36:37.449"/>
</kw>
<msg timestamp="20230923 10:36:37.450" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:36:37.439" endtime="20230923 10:36:37.450"/>
</kw>
<msg timestamp="20230923 10:36:37.450" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230923 10:36:37.439" endtime="20230923 10:36:37.450"/>
</kw>
<msg timestamp="20230923 10:36:37.450" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230923 10:36:37.438" endtime="20230923 10:36:37.450"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230923 10:36:37.451" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230923 10:36:37.450" endtime="20230923 10:36:37.451"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:36:37.455" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:36:37.474" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:36:37.474" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:36:37.453" endtime="20230923 10:36:37.474"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:36:37.475" level="INFO"/>
<status status="PASS" starttime="20230923 10:36:37.475" endtime="20230923 10:36:37.475"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:36:37.476" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:36:37.476" endtime="20230923 10:36:37.476"/>
</kw>
<status status="PASS" starttime="20230923 10:36:37.453" endtime="20230923 10:36:37.476"/>
</kw>
<msg timestamp="20230923 10:36:37.477" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:36:37.452" endtime="20230923 10:36:37.477"/>
</kw>
<status status="PASS" starttime="20230923 10:36:37.452" endtime="20230923 10:36:37.477"/>
</kw>
<status status="PASS" starttime="20230923 10:36:37.451" endtime="20230923 10:36:37.477"/>
</kw>
<status status="PASS" starttime="20230923 10:36:37.438" endtime="20230923 10:36:37.477"/>
</kw>
<status status="PASS" starttime="20230923 10:36:37.437" endtime="20230923 10:36:37.477"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230923 10:36:37.436" endtime="20230923 10:36:37.477"/>
</test>
<doc>Test ozone admin container command</doc>
<status status="PASS" starttime="20230923 10:34:57.396" endtime="20230923 10:36:37.479"/>
</suite>
<suite id="s1-s8-s4" name="Datanode" source="/opt/hadoop/smoketest/admincli/datanode.robot">
<test id="s1-s8-s4-t1" name="List datanodes" line="23">
<kw name="Execute" library="os">
<arg>ozone admin datanode list &gt; datanode.list</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:36:37.494" level="INFO">Running command 'ozone admin datanode list &gt; datanode.list'.</msg>
<msg timestamp="20230923 10:36:42.741" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:36:42.741" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:36:37.491" endtime="20230923 10:36:42.741"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:36:42.743" level="INFO"/>
<status status="PASS" starttime="20230923 10:36:42.742" endtime="20230923 10:36:42.743"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:36:42.743" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:36:42.743" endtime="20230923 10:36:42.744"/>
</kw>
<status status="PASS" starttime="20230923 10:36:37.491" endtime="20230923 10:36:42.744"/>
</kw>
<msg timestamp="20230923 10:36:42.744" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:36:37.491" endtime="20230923 10:36:42.744"/>
</kw>
<status status="PASS" starttime="20230923 10:36:37.490" endtime="20230923 10:36:42.744"/>
</kw>
<kw name="Get File" library="OperatingSystem">
<var>${output}</var>
<arg>datanode.list</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20230923 10:36:42.745" level="INFO" html="true">Getting file '&lt;a href="file:///opt/hadoop/datanode.list"&gt;/opt/hadoop/datanode.list&lt;/a&gt;'.</msg>
<msg timestamp="20230923 10:36:42.745" level="INFO">${output} = Datanode: 84f21144-36b5-4d76-8a98-b96ac8f4d8db (/default-rack/172.20.0.9/ozonesecure_datanode_2.ozonesecure_default/2 pipelines)
Operational State: IN_SERVICE
Health State: HEALTHY
Related pipelines:
...</msg>
<status status="PASS" starttime="20230923 10:36:42.744" endtime="20230923 10:36:42.745"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Datanode:</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:36:42.745" endtime="20230923 10:36:42.746"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Related pipelines:</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:36:42.746" endtime="20230923 10:36:42.746"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230923 10:36:37.489" endtime="20230923 10:36:42.747"/>
</test>
<test id="s1-s8-s4-t2" name="Filter list by UUID" line="29">
<kw name="Execute" library="os">
<var>${uuid}</var>
<arg>grep '^Datanode:' datanode.list | head -1 | awk '{ print \$2 }'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:36:42.755" level="INFO">Running command 'grep '^Datanode:' datanode.list | head -1 | awk '{ print $2 }' 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:36:42.759" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:36:42.760" level="INFO">${output} = 84f21144-36b5-4d76-8a98-b96ac8f4d8db</msg>
<status status="PASS" starttime="20230923 10:36:42.752" endtime="20230923 10:36:42.760"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:36:42.761" level="INFO">84f21144-36b5-4d76-8a98-b96ac8f4d8db</msg>
<status status="PASS" starttime="20230923 10:36:42.760" endtime="20230923 10:36:42.761"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:36:42.762" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:36:42.761" endtime="20230923 10:36:42.762"/>
</kw>
<status status="PASS" starttime="20230923 10:36:42.751" endtime="20230923 10:36:42.762"/>
</kw>
<msg timestamp="20230923 10:36:42.762" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:36:42.751" endtime="20230923 10:36:42.762"/>
</kw>
<msg timestamp="20230923 10:36:42.762" level="INFO">${uuid} = 84f21144-36b5-4d76-8a98-b96ac8f4d8db</msg>
<status status="PASS" starttime="20230923 10:36:42.750" endtime="20230923 10:36:42.762"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin datanode list --id "${uuid}"</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:36:42.767" level="INFO">Running command 'ozone admin datanode list --id "84f21144-36b5-4d76-8a98-b96ac8f4d8db" 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:36:47.148" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:36:47.148" level="INFO">${output} = Datanode: 84f21144-36b5-4d76-8a98-b96ac8f4d8db (/default-rack/172.20.0.9/ozonesecure_datanode_2.ozonesecure_default/2 pipelines)
Operational State: IN_SERVICE
Health State: HEALTHY
Related pipelines:
...</msg>
<status status="PASS" starttime="20230923 10:36:42.764" endtime="20230923 10:36:47.148"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:36:47.150" level="INFO">Datanode: 84f21144-36b5-4d76-8a98-b96ac8f4d8db (/default-rack/172.20.0.9/ozonesecure_datanode_2.ozonesecure_default/2 pipelines)
Operational State: IN_SERVICE
Health State: HEALTHY
Related pipelines:
066b3c9e-5f3a-4202-9e9a-e108ca35ecc9/RATIS/THREE/RATIS/OPEN/Follower
40155579-7c1c-4e1e-a32e-881f76122bf2/RATIS/ONE/RATIS/OPEN/Leader
</msg>
<status status="PASS" starttime="20230923 10:36:47.149" endtime="20230923 10:36:47.150"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:36:47.151" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:36:47.150" endtime="20230923 10:36:47.151"/>
</kw>
<status status="PASS" starttime="20230923 10:36:42.764" endtime="20230923 10:36:47.151"/>
</kw>
<msg timestamp="20230923 10:36:47.151" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:36:42.763" endtime="20230923 10:36:47.151"/>
</kw>
<msg timestamp="20230923 10:36:47.151" level="INFO">${output} = Datanode: 84f21144-36b5-4d76-8a98-b96ac8f4d8db (/default-rack/172.20.0.9/ozonesecure_datanode_2.ozonesecure_default/2 pipelines)
Operational State: IN_SERVICE
Health State: HEALTHY
Related pipelines:
...</msg>
<status status="PASS" starttime="20230923 10:36:42.763" endtime="20230923 10:36:47.151"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Datanode: ${uuid}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:36:47.152" endtime="20230923 10:36:47.152"/>
</kw>
<kw name="Get Lines Containing String" library="String">
<var>${datanodes}</var>
<arg>${output}</arg>
<arg>Datanode:</arg>
<doc>Returns lines of the given ``string`` that contain the ``pattern``.</doc>
<msg timestamp="20230923 10:36:47.153" level="INFO">1 out of 6 lines matched</msg>
<msg timestamp="20230923 10:36:47.153" level="INFO">${datanodes} = Datanode: 84f21144-36b5-4d76-8a98-b96ac8f4d8db (/default-rack/172.20.0.9/ozonesecure_datanode_2.ozonesecure_default/2 pipelines)</msg>
<status status="PASS" starttime="20230923 10:36:47.152" endtime="20230923 10:36:47.153"/>
</kw>
<kw name="Split To Lines" library="String">
<var>@{lines}</var>
<arg>${datanodes}</arg>
<doc>Splits the given string to lines.</doc>
<msg timestamp="20230923 10:36:47.153" level="INFO">1 lines returned</msg>
<msg timestamp="20230923 10:36:47.154" level="INFO">@{lines} = [ Datanode: 84f21144-36b5-4d76-8a98-b96ac8f4d8db (/default-rack/172.20.0.9/ozonesecure_datanode_2.ozonesecure_default/2 pipelines) ]</msg>
<status status="PASS" starttime="20230923 10:36:47.153" endtime="20230923 10:36:47.154"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${count}</var>
<arg>${lines}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230923 10:36:47.154" level="INFO">Length is 1</msg>
<msg timestamp="20230923 10:36:47.154" level="INFO">${count} = 1</msg>
<status status="PASS" starttime="20230923 10:36:47.154" endtime="20230923 10:36:47.154"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${count}</arg>
<arg>1</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:36:47.155" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:36:47.155" endtime="20230923 10:36:47.155"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230923 10:36:42.748" endtime="20230923 10:36:47.156"/>
</test>
<test id="s1-s8-s4-t3" name="Filter list by NodeOperationalState" line="38">
<kw name="Execute" library="os">
<var>${uuid}</var>
<arg>grep '^Datanode:' datanode.list | head -1 | awk '{ print \$2 }'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:36:47.162" level="INFO">Running command 'grep '^Datanode:' datanode.list | head -1 | awk '{ print $2 }' 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:36:47.167" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:36:47.167" level="INFO">${output} = 84f21144-36b5-4d76-8a98-b96ac8f4d8db</msg>
<status status="PASS" starttime="20230923 10:36:47.159" endtime="20230923 10:36:47.167"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:36:47.169" level="INFO">84f21144-36b5-4d76-8a98-b96ac8f4d8db</msg>
<status status="PASS" starttime="20230923 10:36:47.168" endtime="20230923 10:36:47.169"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:36:47.169" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:36:47.169" endtime="20230923 10:36:47.170"/>
</kw>
<status status="PASS" starttime="20230923 10:36:47.159" endtime="20230923 10:36:47.170"/>
</kw>
<msg timestamp="20230923 10:36:47.170" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:36:47.158" endtime="20230923 10:36:47.170"/>
</kw>
<msg timestamp="20230923 10:36:47.170" level="INFO">${uuid} = 84f21144-36b5-4d76-8a98-b96ac8f4d8db</msg>
<status status="PASS" starttime="20230923 10:36:47.158" endtime="20230923 10:36:47.170"/>
</kw>
<kw name="Execute" library="os">
<var>${expected}</var>
<arg>grep -c 'Operational State: IN_SERVICE' datanode.list</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:36:47.175" level="INFO">Running command 'grep -c 'Operational State: IN_SERVICE' datanode.list 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:36:47.178" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:36:47.178" level="INFO">${output} = 3</msg>
<status status="PASS" starttime="20230923 10:36:47.172" endtime="20230923 10:36:47.178"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:36:47.179" level="INFO">3</msg>
<status status="PASS" starttime="20230923 10:36:47.178" endtime="20230923 10:36:47.179"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:36:47.180" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:36:47.179" endtime="20230923 10:36:47.180"/>
</kw>
<status status="PASS" starttime="20230923 10:36:47.171" endtime="20230923 10:36:47.180"/>
</kw>
<msg timestamp="20230923 10:36:47.180" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:36:47.171" endtime="20230923 10:36:47.181"/>
</kw>
<msg timestamp="20230923 10:36:47.181" level="INFO">${expected} = 3</msg>
<status status="PASS" starttime="20230923 10:36:47.170" endtime="20230923 10:36:47.181"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin datanode list --operational-state IN_SERVICE</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:36:47.185" level="INFO">Running command 'ozone admin datanode list --operational-state IN_SERVICE 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:36:51.983" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:36:51.983" level="INFO">${output} = Datanode: 84f21144-36b5-4d76-8a98-b96ac8f4d8db (/default-rack/172.20.0.9/ozonesecure_datanode_2.ozonesecure_default/2 pipelines)
Operational State: IN_SERVICE
Health State: HEALTHY
Related pipelines:
...</msg>
<status status="PASS" starttime="20230923 10:36:47.182" endtime="20230923 10:36:51.983"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:36:51.985" level="INFO">Datanode: 84f21144-36b5-4d76-8a98-b96ac8f4d8db (/default-rack/172.20.0.9/ozonesecure_datanode_2.ozonesecure_default/2 pipelines)
Operational State: IN_SERVICE
Health State: HEALTHY
Related pipelines:
066b3c9e-5f3a-4202-9e9a-e108ca35ecc9/RATIS/THREE/RATIS/OPEN/Follower
40155579-7c1c-4e1e-a32e-881f76122bf2/RATIS/ONE/RATIS/OPEN/Leader

Datanode: cefb5f11-4c66-4dc1-8ed3-0315d7bdcf97 (/default-rack/172.20.0.10/ozonesecure_datanode_1.ozonesecure_default/3 pipelines)
Operational State: IN_SERVICE
Health State: HEALTHY
Related pipelines:
066b3c9e-5f3a-4202-9e9a-e108ca35ecc9/RATIS/THREE/RATIS/OPEN/Leader
eab6469f-3c28-4c19-aa08-af50ebba6c5d/RATIS/ONE/RATIS/OPEN/Leader
25cdfddb-8862-4b95-8508-d2846eb1f6e7/STANDALONE/ONE/STAND_ALONE/OPEN/Follower

Datanode: 4d9fab95-a94e-48b5-88e0-d06ac1678a42 (/default-rack/172.20.0.11/ozonesecure_datanode_3.ozonesecure_default/2 pipelines)
Operational State: IN_SERVICE
Health State: HEALTHY
Related pipelines:
066b3c9e-5f3a-4202-9e9a-e108ca35ecc9/RATIS/THREE/RATIS/OPEN/Follower
9091805f-a2e2-45f1-ba41-bb8e2476235c/RATIS/ONE/RATIS/OPEN/Leader
</msg>
<status status="PASS" starttime="20230923 10:36:51.984" endtime="20230923 10:36:51.985"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:36:51.985" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:36:51.985" endtime="20230923 10:36:51.986"/>
</kw>
<status status="PASS" starttime="20230923 10:36:47.182" endtime="20230923 10:36:51.986"/>
</kw>
<msg timestamp="20230923 10:36:51.986" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:36:47.182" endtime="20230923 10:36:51.986"/>
</kw>
<msg timestamp="20230923 10:36:51.986" level="INFO">${output} = Datanode: 84f21144-36b5-4d76-8a98-b96ac8f4d8db (/default-rack/172.20.0.9/ozonesecure_datanode_2.ozonesecure_default/2 pipelines)
Operational State: IN_SERVICE
Health State: HEALTHY
Related pipelines:
...</msg>
<status status="PASS" starttime="20230923 10:36:47.181" endtime="20230923 10:36:51.986"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Datanode: ${uuid}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:36:51.986" endtime="20230923 10:36:51.987"/>
</kw>
<kw name="Get Lines Containing String" library="String">
<var>${datanodes}</var>
<arg>${output}</arg>
<arg>Datanode:</arg>
<doc>Returns lines of the given ``string`` that contain the ``pattern``.</doc>
<msg timestamp="20230923 10:36:51.988" level="INFO">3 out of 21 lines matched</msg>
<msg timestamp="20230923 10:36:51.988" level="INFO">${datanodes} = Datanode: 84f21144-36b5-4d76-8a98-b96ac8f4d8db (/default-rack/172.20.0.9/ozonesecure_datanode_2.ozonesecure_default/2 pipelines)
Datanode: cefb5f11-4c66-4dc1-8ed3-0315d7bdcf97 (/default-rack/172.20.0....</msg>
<status status="PASS" starttime="20230923 10:36:51.987" endtime="20230923 10:36:51.988"/>
</kw>
<kw name="Split To Lines" library="String">
<var>@{lines}</var>
<arg>${datanodes}</arg>
<doc>Splits the given string to lines.</doc>
<msg timestamp="20230923 10:36:51.988" level="INFO">3 lines returned</msg>
<msg timestamp="20230923 10:36:51.989" level="INFO">@{lines} = [ Datanode: 84f21144-36b5-4d76-8a98-b96ac8f4d8db (/default-rack/172.20.0.9/ozonesecure_datanode_2.ozonesecure_default/2 pipelines) | Datanode: cefb5f11-4c66-4dc1-8ed3-0315d7bdcf97 (/default-rack/172.2...</msg>
<status status="PASS" starttime="20230923 10:36:51.988" endtime="20230923 10:36:51.989"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${count}</var>
<arg>${lines}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230923 10:36:51.989" level="INFO">Length is 3</msg>
<msg timestamp="20230923 10:36:51.990" level="INFO">${count} = 3</msg>
<status status="PASS" starttime="20230923 10:36:51.989" endtime="20230923 10:36:51.990"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${count}</arg>
<arg>${expected}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:36:51.990" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:36:51.990" endtime="20230923 10:36:51.990"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230923 10:36:47.156" endtime="20230923 10:36:51.991"/>
</test>
<test id="s1-s8-s4-t4" name="Filter list by NodeState" line="48">
<kw name="Execute" library="os">
<var>${uuid}</var>
<arg>grep '^Datanode:' datanode.list | head -1 | awk '{ print \$2 }'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:36:51.998" level="INFO">Running command 'grep '^Datanode:' datanode.list | head -1 | awk '{ print $2 }' 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:36:52.002" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:36:52.002" level="INFO">${output} = 84f21144-36b5-4d76-8a98-b96ac8f4d8db</msg>
<status status="PASS" starttime="20230923 10:36:51.995" endtime="20230923 10:36:52.002"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:36:52.004" level="INFO">84f21144-36b5-4d76-8a98-b96ac8f4d8db</msg>
<status status="PASS" starttime="20230923 10:36:52.003" endtime="20230923 10:36:52.004"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:36:52.005" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:36:52.004" endtime="20230923 10:36:52.005"/>
</kw>
<status status="PASS" starttime="20230923 10:36:51.993" endtime="20230923 10:36:52.005"/>
</kw>
<msg timestamp="20230923 10:36:52.005" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:36:51.993" endtime="20230923 10:36:52.005"/>
</kw>
<msg timestamp="20230923 10:36:52.006" level="INFO">${uuid} = 84f21144-36b5-4d76-8a98-b96ac8f4d8db</msg>
<status status="PASS" starttime="20230923 10:36:51.993" endtime="20230923 10:36:52.006"/>
</kw>
<kw name="Execute" library="os">
<var>${expected}</var>
<arg>grep -c 'Health State: HEALTHY' datanode.list</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:36:52.010" level="INFO">Running command 'grep -c 'Health State: HEALTHY' datanode.list 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:36:52.013" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:36:52.013" level="INFO">${output} = 3</msg>
<status status="PASS" starttime="20230923 10:36:52.008" endtime="20230923 10:36:52.013"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:36:52.014" level="INFO">3</msg>
<status status="PASS" starttime="20230923 10:36:52.013" endtime="20230923 10:36:52.014"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:36:52.015" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:36:52.014" endtime="20230923 10:36:52.015"/>
</kw>
<status status="PASS" starttime="20230923 10:36:52.007" endtime="20230923 10:36:52.015"/>
</kw>
<msg timestamp="20230923 10:36:52.015" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:36:52.007" endtime="20230923 10:36:52.015"/>
</kw>
<msg timestamp="20230923 10:36:52.016" level="INFO">${expected} = 3</msg>
<status status="PASS" starttime="20230923 10:36:52.006" endtime="20230923 10:36:52.016"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin datanode list --node-state HEALTHY</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:36:52.020" level="INFO">Running command 'ozone admin datanode list --node-state HEALTHY 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:36:56.484" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:36:56.484" level="INFO">${output} = Datanode: 84f21144-36b5-4d76-8a98-b96ac8f4d8db (/default-rack/172.20.0.9/ozonesecure_datanode_2.ozonesecure_default/2 pipelines)
Operational State: IN_SERVICE
Health State: HEALTHY
Related pipelines:
...</msg>
<status status="PASS" starttime="20230923 10:36:52.017" endtime="20230923 10:36:56.484"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:36:56.486" level="INFO">Datanode: 84f21144-36b5-4d76-8a98-b96ac8f4d8db (/default-rack/172.20.0.9/ozonesecure_datanode_2.ozonesecure_default/2 pipelines)
Operational State: IN_SERVICE
Health State: HEALTHY
Related pipelines:
066b3c9e-5f3a-4202-9e9a-e108ca35ecc9/RATIS/THREE/RATIS/OPEN/Follower
40155579-7c1c-4e1e-a32e-881f76122bf2/RATIS/ONE/RATIS/OPEN/Leader

Datanode: cefb5f11-4c66-4dc1-8ed3-0315d7bdcf97 (/default-rack/172.20.0.10/ozonesecure_datanode_1.ozonesecure_default/3 pipelines)
Operational State: IN_SERVICE
Health State: HEALTHY
Related pipelines:
066b3c9e-5f3a-4202-9e9a-e108ca35ecc9/RATIS/THREE/RATIS/OPEN/Leader
eab6469f-3c28-4c19-aa08-af50ebba6c5d/RATIS/ONE/RATIS/OPEN/Leader
25cdfddb-8862-4b95-8508-d2846eb1f6e7/STANDALONE/ONE/STAND_ALONE/OPEN/Follower

Datanode: 4d9fab95-a94e-48b5-88e0-d06ac1678a42 (/default-rack/172.20.0.11/ozonesecure_datanode_3.ozonesecure_default/2 pipelines)
Operational State: IN_SERVICE
Health State: HEALTHY
Related pipelines:
066b3c9e-5f3a-4202-9e9a-e108ca35ecc9/RATIS/THREE/RATIS/OPEN/Follower
9091805f-a2e2-45f1-ba41-bb8e2476235c/RATIS/ONE/RATIS/OPEN/Leader
</msg>
<status status="PASS" starttime="20230923 10:36:56.485" endtime="20230923 10:36:56.486"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:36:56.487" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:36:56.486" endtime="20230923 10:36:56.487"/>
</kw>
<status status="PASS" starttime="20230923 10:36:52.017" endtime="20230923 10:36:56.487"/>
</kw>
<msg timestamp="20230923 10:36:56.487" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:36:52.017" endtime="20230923 10:36:56.487"/>
</kw>
<msg timestamp="20230923 10:36:56.487" level="INFO">${output} = Datanode: 84f21144-36b5-4d76-8a98-b96ac8f4d8db (/default-rack/172.20.0.9/ozonesecure_datanode_2.ozonesecure_default/2 pipelines)
Operational State: IN_SERVICE
Health State: HEALTHY
Related pipelines:
...</msg>
<status status="PASS" starttime="20230923 10:36:52.016" endtime="20230923 10:36:56.487"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Datanode: ${uuid}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:36:56.488" endtime="20230923 10:36:56.488"/>
</kw>
<kw name="Get Lines Containing String" library="String">
<var>${datanodes}</var>
<arg>${output}</arg>
<arg>Datanode:</arg>
<doc>Returns lines of the given ``string`` that contain the ``pattern``.</doc>
<msg timestamp="20230923 10:36:56.489" level="INFO">3 out of 21 lines matched</msg>
<msg timestamp="20230923 10:36:56.489" level="INFO">${datanodes} = Datanode: 84f21144-36b5-4d76-8a98-b96ac8f4d8db (/default-rack/172.20.0.9/ozonesecure_datanode_2.ozonesecure_default/2 pipelines)
Datanode: cefb5f11-4c66-4dc1-8ed3-0315d7bdcf97 (/default-rack/172.20.0....</msg>
<status status="PASS" starttime="20230923 10:36:56.488" endtime="20230923 10:36:56.489"/>
</kw>
<kw name="Split To Lines" library="String">
<var>@{lines}</var>
<arg>${datanodes}</arg>
<doc>Splits the given string to lines.</doc>
<msg timestamp="20230923 10:36:56.489" level="INFO">3 lines returned</msg>
<msg timestamp="20230923 10:36:56.490" level="INFO">@{lines} = [ Datanode: 84f21144-36b5-4d76-8a98-b96ac8f4d8db (/default-rack/172.20.0.9/ozonesecure_datanode_2.ozonesecure_default/2 pipelines) | Datanode: cefb5f11-4c66-4dc1-8ed3-0315d7bdcf97 (/default-rack/172.2...</msg>
<status status="PASS" starttime="20230923 10:36:56.489" endtime="20230923 10:36:56.490"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${count}</var>
<arg>${lines}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230923 10:36:56.490" level="INFO">Length is 3</msg>
<msg timestamp="20230923 10:36:56.490" level="INFO">${count} = 3</msg>
<status status="PASS" starttime="20230923 10:36:56.490" endtime="20230923 10:36:56.490"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${count}</arg>
<arg>${expected}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:36:56.491" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:36:56.491" endtime="20230923 10:36:56.491"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230923 10:36:51.992" endtime="20230923 10:36:56.491"/>
</test>
<test id="s1-s8-s4-t5" name="Incomplete command" line="58">
<kw name="Execute And Ignore Error" library="os">
<var>${output}</var>
<arg>ozone admin datanode</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:36:56.497" level="INFO">Running command 'ozone admin datanode 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:37:00.080" level="INFO">${rc} = 255</msg>
<msg timestamp="20230923 10:37:00.080" level="INFO">${output} = Incomplete command
Usage: ozone admin datanode [-hV] [COMMAND]
Datanode specific operations
  -h, --help      Show this help message and exit.
  -V, --version   Print version information and exit.
Com...</msg>
<status status="PASS" starttime="20230923 10:36:56.494" endtime="20230923 10:37:00.080"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:37:00.082" level="INFO">Incomplete command
Usage: ozone admin datanode [-hV] [COMMAND]
Datanode specific operations
  -h, --help      Show this help message and exit.
  -V, --version   Print version information and exit.
Commands:
  list          List info of datanodes
  decommission  Decommission a datanode
  maintenance   Put a datanode into Maintenance Mode
  recommission  Return a datanode to service
  usageinfo     List usage information (such as Capacity, SCMUsed, Remaining)
                  of a datanode by IP address or UUID</msg>
<status status="PASS" starttime="20230923 10:37:00.081" endtime="20230923 10:37:00.082"/>
</kw>
<msg timestamp="20230923 10:37:00.082" level="INFO">${output} = Incomplete command
Usage: ozone admin datanode [-hV] [COMMAND]
Datanode specific operations
  -h, --help      Show this help message and exit.
  -V, --version   Print version information and exit.
Com...</msg>
<status status="PASS" starttime="20230923 10:36:56.493" endtime="20230923 10:37:00.082"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Incomplete command</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:37:00.083" endtime="20230923 10:37:00.083"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>list</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:37:00.083" endtime="20230923 10:37:00.084"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230923 10:36:56.492" endtime="20230923 10:37:00.084"/>
</test>
<test id="s1-s8-s4-t6" name="List datanodes as JSON" line="67">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin datanode list --json | jq -r '.'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:37:00.106" level="INFO">Running command 'ozone admin datanode list --json | jq -r '.' 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:37:04.551" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:37:04.551" level="INFO">${output} = [
  {
    "datanodeDetails": {
      "level": 0,
      "cost": 0,
      "uuid": "84f21144-36b5-4d76-8a98-b96ac8f4d8db",
      "uuidString": "84f21144-36b5-4d76-8a98-b96ac8f4d8db",
      "ipAddress": "...</msg>
<status status="PASS" starttime="20230923 10:37:00.087" endtime="20230923 10:37:04.551"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:37:04.553" level="INFO">[
  {
    "datanodeDetails": {
      "level": 0,
      "cost": 0,
      "uuid": "84f21144-36b5-4d76-8a98-b96ac8f4d8db",
      "uuidString": "84f21144-36b5-4d76-8a98-b96ac8f4d8db",
      "ipAddress": "172.20.0.9",
      "hostName": "ozonesecure_datanode_2.ozonesecure_default",
      "ports": [
        {
          "name": "HTTP",
          "value": 9882
        },
        {
          "name": "CLIENT_RPC",
          "value": 9864
        },
        {
          "name": "REPLICATION",
          "value": 9886
        },
        {
          "name": "RATIS",
          "value": 9858
        },
        {
          "name": "RATIS_ADMIN",
          "value": 9857
        },
        {
          "name": "RATIS_SERVER",
          "value": 9856
        },
        {
          "name": "RATIS_DATASTREAM",
          "value": 9855
        },
        {
          "name": "STANDALONE",
          "value": 9859
        }
      ],
      "setupTime": 0,
      "persistedOpState": "IN_SERVICE",
      "persistedOpStateExpiryEpochSec": 0,
      "initialVersion": 0,
      "currentVersion": 1,
      "signature": 1855292029,
      "decommissioned": false,
      "maintenance": false,
      "networkLocation": "/default-rack",
      "networkName": "84f21144-36b5-4d76-8a98-b96ac8f4d8db",
      "networkFullPath": "/default-rack/84f21144-36b5-4d76-8a98-b96ac8f4d8db",
      "numOfLeaves": 1
    },
    "healthState": "HEALTHY",
    "opState": "IN_SERVICE"
  },
  {
    "datanodeDetails": {
      "level": 0,
      "cost": 0,
      "uuid": "cefb5f11-4c66-4dc1-8ed3-0315d7bdcf97",
      "uuidString": "cefb5f11-4c66-4dc1-8ed3-0315d7bdcf97",
      "ipAddress": "172.20.0.10",
      "hostName": "ozonesecure_datanode_1.ozonesecure_default",
      "ports": [
        {
          "name": "HTTP",
          "value": 9882
        },
        {
          "name": "CLIENT_RPC",
          "value": 9864
        },
        {
          "name": "REPLICATION",
          "value": 9886
        },
        {
          "name": "RATIS",
          "value": 9858
        },
        {
          "name": "RATIS_ADMIN",
          "value": 9857
        },
        {
          "name": "RATIS_SERVER",
          "value": 9856
        },
        {
          "name": "RATIS_DATASTREAM",
          "value": 9855
        },
        {
          "name": "STANDALONE",
          "value": 9859
        }
      ],
      "setupTime": 0,
      "persistedOpState": "IN_SERVICE",
      "persistedOpStateExpiryEpochSec": 0,
      "initialVersion": 0,
      "currentVersion": 1,
      "signature": 1229767454,
      "decommissioned": false,
      "maintenance": false,
      "networkLocation": "/default-rack",
      "networkName": "cefb5f11-4c66-4dc1-8ed3-0315d7bdcf97",
      "networkFullPath": "/default-rack/cefb5f11-4c66-4dc1-8ed3-0315d7bdcf97",
      "numOfLeaves": 1
    },
    "healthState": "HEALTHY",
    "opState": "IN_SERVICE"
  },
  {
    "datanodeDetails": {
      "level": 0,
      "cost": 0,
      "uuid": "4d9fab95-a94e-48b5-88e0-d06ac1678a42",
      "uuidString": "4d9fab95-a94e-48b5-88e0-d06ac1678a42",
      "ipAddress": "172.20.0.11",
      "hostName": "ozonesecure_datanode_3.ozonesecure_default",
      "ports": [
        {
          "name": "HTTP",
          "value": 9882
        },
        {
          "name": "CLIENT_RPC",
          "value": 9864
        },
        {
          "name": "REPLICATION",
          "value": 9886
        },
        {
          "name": "RATIS",
          "value": 9858
        },
        {
          "name": "RATIS_ADMIN",
          "value": 9857
        },
        {
          "name": "RATIS_SERVER",
          "value": 9856
        },
        {
          "name": "RATIS_DATASTREAM",
          "value": 9855
        },
        {
          "name": "STANDALONE",
          "value": 9859
        }
      ],
      "setupTime": 0,
      "persistedOpState": "IN_SERVICE",
      "persistedOpStateExpiryEpochSec": 0,
      "initialVersion": 0,
      "currentVersion": 1,
      "signature": 152770612,
      "decommissioned": false,
      "maintenance": false,
      "networkLocation": "/default-rack",
      "networkName": "4d9fab95-a94e-48b5-88e0-d06ac1678a42",
      "networkFullPath": "/default-rack/4d9fab95-a94e-48b5-88e0-d06ac1678a42",
      "numOfLeaves": 1
    },
    "healthState": "HEALTHY",
    "opState": "IN_SERVICE"
  }
]</msg>
<status status="PASS" starttime="20230923 10:37:04.552" endtime="20230923 10:37:04.553"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:37:04.554" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:37:04.553" endtime="20230923 10:37:04.554"/>
</kw>
<status status="PASS" starttime="20230923 10:37:00.087" endtime="20230923 10:37:04.554"/>
</kw>
<msg timestamp="20230923 10:37:04.554" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:37:00.086" endtime="20230923 10:37:04.554"/>
</kw>
<msg timestamp="20230923 10:37:04.555" level="INFO">${output} = [
  {
    "datanodeDetails": {
      "level": 0,
      "cost": 0,
      "uuid": "84f21144-36b5-4d76-8a98-b96ac8f4d8db",
      "uuidString": "84f21144-36b5-4d76-8a98-b96ac8f4d8db",
      "ipAddress": "...</msg>
<status status="PASS" starttime="20230923 10:37:00.086" endtime="20230923 10:37:04.555"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>datanodeDetails</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:37:04.555" endtime="20230923 10:37:04.555"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>healthState</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:37:04.556" endtime="20230923 10:37:04.556"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>opState</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:37:04.556" endtime="20230923 10:37:04.557"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230923 10:37:00.085" endtime="20230923 10:37:04.557"/>
</test>
<doc>Test ozone admin datanode command</doc>
<status status="PASS" starttime="20230923 10:36:37.483" endtime="20230923 10:37:04.558"/>
</suite>
<suite id="s1-s8-s5" name="Pipeline" source="/opt/hadoop/smoketest/admincli/pipeline.robot">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:37:04.573" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:37:04.576" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:37:04.577" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230923 10:37:04.570" endtime="20230923 10:37:04.577"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:37:04.578" level="INFO">scm</msg>
<status status="PASS" starttime="20230923 10:37:04.577" endtime="20230923 10:37:04.578"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:37:04.578" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:37:04.578" endtime="20230923 10:37:04.578"/>
</kw>
<status status="PASS" starttime="20230923 10:37:04.570" endtime="20230923 10:37:04.579"/>
</kw>
<msg timestamp="20230923 10:37:04.579" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:37:04.569" endtime="20230923 10:37:04.579"/>
</kw>
<msg timestamp="20230923 10:37:04.579" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230923 10:37:04.569" endtime="20230923 10:37:04.579"/>
</kw>
<msg timestamp="20230923 10:37:04.579" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230923 10:37:04.568" endtime="20230923 10:37:04.579"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230923 10:37:04.580" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230923 10:37:04.580" endtime="20230923 10:37:04.580"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:37:04.584" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:37:04.603" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:37:04.603" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:37:04.582" endtime="20230923 10:37:04.603"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:37:04.604" level="INFO"/>
<status status="PASS" starttime="20230923 10:37:04.603" endtime="20230923 10:37:04.604"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:37:04.604" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:37:04.604" endtime="20230923 10:37:04.604"/>
</kw>
<status status="PASS" starttime="20230923 10:37:04.582" endtime="20230923 10:37:04.605"/>
</kw>
<msg timestamp="20230923 10:37:04.605" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:37:04.581" endtime="20230923 10:37:04.605"/>
</kw>
<status status="PASS" starttime="20230923 10:37:04.581" endtime="20230923 10:37:04.605"/>
</kw>
<status status="PASS" starttime="20230923 10:37:04.580" endtime="20230923 10:37:04.605"/>
</kw>
<status status="PASS" starttime="20230923 10:37:04.568" endtime="20230923 10:37:04.605"/>
</kw>
<status status="PASS" starttime="20230923 10:37:04.567" endtime="20230923 10:37:04.605"/>
</kw>
<test id="s1-s8-s5-t1" name="Create pipeline" line="28">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin pipeline create</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:37:04.611" level="INFO">Running command 'ozone admin pipeline create 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:37:09.677" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:37:09.677" level="INFO">${output} = PipelineID=32115bbc-cccd-41a7-ad0d-9514f52e10f2 is created. Pipeline[ Id: 32115bbc-cccd-41a7-ad0d-9514f52e10f2, Nodes: 84f21144-36b5-4d76-8a98-b96ac8f4d8db(ozonesecure_datanode_2.ozonesecure_default/1...</msg>
<status status="PASS" starttime="20230923 10:37:04.608" endtime="20230923 10:37:09.677"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:37:09.678" level="INFO">PipelineID=32115bbc-cccd-41a7-ad0d-9514f52e10f2 is created. Pipeline[ Id: 32115bbc-cccd-41a7-ad0d-9514f52e10f2, Nodes: 84f21144-36b5-4d76-8a98-b96ac8f4d8db(ozonesecure_datanode_2.ozonesecure_default/172.20.0.9), ReplicationConfig: STANDALONE/ONE, State:OPEN, leaderId:, CreationTimestamp2023-09-23T10:37:09.292Z[UTC]]</msg>
<status status="PASS" starttime="20230923 10:37:09.677" endtime="20230923 10:37:09.678"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:37:09.680" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:37:09.679" endtime="20230923 10:37:09.680"/>
</kw>
<status status="PASS" starttime="20230923 10:37:04.608" endtime="20230923 10:37:09.680"/>
</kw>
<msg timestamp="20230923 10:37:09.680" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:37:04.607" endtime="20230923 10:37:09.680"/>
</kw>
<msg timestamp="20230923 10:37:09.681" level="INFO">${output} = PipelineID=32115bbc-cccd-41a7-ad0d-9514f52e10f2 is created. Pipeline[ Id: 32115bbc-cccd-41a7-ad0d-9514f52e10f2, Nodes: 84f21144-36b5-4d76-8a98-b96ac8f4d8db(ozonesecure_datanode_2.ozonesecure_default/1...</msg>
<status status="PASS" starttime="20230923 10:37:04.607" endtime="20230923 10:37:09.681"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>is created.</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:37:09.681" endtime="20230923 10:37:09.681"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>STANDALONE/ONE</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:37:09.682" endtime="20230923 10:37:09.682"/>
</kw>
<kw name="Execute" library="os">
<var>${pipeline}</var>
<arg>echo "${output}" | grep 'is created' | cut -f1 -d' ' | cut -f2 -d'='</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:37:09.687" level="INFO">Running command 'echo "PipelineID=32115bbc-cccd-41a7-ad0d-9514f52e10f2 is created. Pipeline[ Id: 32115bbc-cccd-41a7-ad0d-9514f52e10f2, Nodes: 84f21144-36b5-4d76-8a98-b96ac8f4d8db(ozonesecure_datanode_2.ozonesecure_default/172.20.0.9), ReplicationConfig: STANDALONE/ONE, State:OPEN, leaderId:, CreationTimestamp2023-09-23T10:37:09.292Z[UTC]]" | grep 'is created' | cut -f1 -d' ' | cut -f2 -d'=' 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:37:09.692" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:37:09.692" level="INFO">${output} = 32115bbc-cccd-41a7-ad0d-9514f52e10f2</msg>
<status status="PASS" starttime="20230923 10:37:09.684" endtime="20230923 10:37:09.692"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:37:09.693" level="INFO">32115bbc-cccd-41a7-ad0d-9514f52e10f2</msg>
<status status="PASS" starttime="20230923 10:37:09.693" endtime="20230923 10:37:09.693"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:37:09.694" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:37:09.693" endtime="20230923 10:37:09.694"/>
</kw>
<status status="PASS" starttime="20230923 10:37:09.683" endtime="20230923 10:37:09.694"/>
</kw>
<msg timestamp="20230923 10:37:09.694" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:37:09.683" endtime="20230923 10:37:09.694"/>
</kw>
<msg timestamp="20230923 10:37:09.695" level="INFO">${pipeline} = 32115bbc-cccd-41a7-ad0d-9514f52e10f2</msg>
<status status="PASS" starttime="20230923 10:37:09.682" endtime="20230923 10:37:09.695"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${PIPELINE}</arg>
<arg>${pipeline}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230923 10:37:09.695" level="INFO">${PIPELINE} = 32115bbc-cccd-41a7-ad0d-9514f52e10f2</msg>
<status status="PASS" starttime="20230923 10:37:09.695" endtime="20230923 10:37:09.695"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230923 10:37:04.606" endtime="20230923 10:37:09.696"/>
</test>
<test id="s1-s8-s5-t2" name="List pipelines" line="35">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin pipeline list</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:37:09.702" level="INFO">Running command 'ozone admin pipeline list 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:37:14.405" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:37:14.406" level="INFO">${output} = Pipeline[ Id: 32115bbc-cccd-41a7-ad0d-9514f52e10f2, Nodes: 84f21144-36b5-4d76-8a98-b96ac8f4d8db(ozonesecure_datanode_2.ozonesecure_default/172.20.0.9), ReplicationConfig: STANDALONE/ONE, State:OPEN, l...</msg>
<status status="PASS" starttime="20230923 10:37:09.700" endtime="20230923 10:37:14.406"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:37:14.407" level="INFO">Pipeline[ Id: 32115bbc-cccd-41a7-ad0d-9514f52e10f2, Nodes: 84f21144-36b5-4d76-8a98-b96ac8f4d8db(ozonesecure_datanode_2.ozonesecure_default/172.20.0.9), ReplicationConfig: STANDALONE/ONE, State:OPEN, leaderId:, CreationTimestamp2023-09-23T10:37:09.292Z[UTC]]
Pipeline[ Id: 066b3c9e-5f3a-4202-9e9a-e108ca35ecc9, Nodes: 4d9fab95-a94e-48b5-88e0-d06ac1678a42(ozonesecure_datanode_3.ozonesecure_default/172.20.0.11)cefb5f11-4c66-4dc1-8ed3-0315d7bdcf97(ozonesecure_datanode_1.ozonesecure_default/172.20.0.10)84f21144-36b5-4d76-8a98-b96ac8f4d8db(ozonesecure_datanode_2.ozonesecure_default/172.20.0.9), ReplicationConfig: RATIS/THREE, State:OPEN, leaderId:cefb5f11-4c66-4dc1-8ed3-0315d7bdcf97, CreationTimestamp2023-09-23T09:53:46.040Z[UTC]]
Pipeline[ Id: eab6469f-3c28-4c19-aa08-af50ebba6c5d, Nodes: cefb5f11-4c66-4dc1-8ed3-0315d7bdcf97(ozonesecure_datanode_1.ozonesecure_default/172.20.0.10), ReplicationConfig: RATIS/ONE, State:OPEN, leaderId:cefb5f11-4c66-4dc1-8ed3-0315d7bdcf97, CreationTimestamp2023-09-23T09:53:45.441Z[UTC]]
Pipeline[ Id: 9091805f-a2e2-45f1-ba41-bb8e2476235c, Nodes: 4d9fab95-a94e-48b5-88e0-d06ac1678a42(ozonesecure_datanode_3.ozonesecure_default/172.20.0.11), ReplicationConfig: RATIS/ONE, State:OPEN, leaderId:4d9fab95-a94e-48b5-88e0-d06ac1678a42, CreationTimestamp2023-09-23T09:53:45.987Z[UTC]]
Pipeline[ Id: 25cdfddb-8862-4b95-8508-d2846eb1f6e7, Nodes: cefb5f11-4c66-4dc1-8ed3-0315d7bdcf97(ozonesecure_datanode_1.ozonesecure_default/172.20.0.10), ReplicationConfig: STANDALONE/ONE, State:OPEN, leaderId:, CreationTimestamp2023-09-23T10:35:12.690Z[UTC]]
Pipeline[ Id: 40155579-7c1c-4e1e-a32e-881f76122bf2, Nodes: 84f21144-36b5-4d76-8a98-b96ac8f4d8db(ozonesecure_datanode_2.ozonesecure_default/172.20.0.9), ReplicationConfig: RATIS/ONE, State:OPEN, leaderId:84f21144-36b5-4d76-8a98-b96ac8f4d8db, CreationTimestamp2023-09-23T09:53:45.879Z[UTC]]</msg>
<status status="PASS" starttime="20230923 10:37:14.406" endtime="20230923 10:37:14.407"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:37:14.408" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:37:14.408" endtime="20230923 10:37:14.408"/>
</kw>
<status status="PASS" starttime="20230923 10:37:09.699" endtime="20230923 10:37:14.409"/>
</kw>
<msg timestamp="20230923 10:37:14.409" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:37:09.699" endtime="20230923 10:37:14.412"/>
</kw>
<msg timestamp="20230923 10:37:14.413" level="INFO">${output} = Pipeline[ Id: 32115bbc-cccd-41a7-ad0d-9514f52e10f2, Nodes: 84f21144-36b5-4d76-8a98-b96ac8f4d8db(ozonesecure_datanode_2.ozonesecure_default/172.20.0.9), ReplicationConfig: STANDALONE/ONE, State:OPEN, l...</msg>
<status status="PASS" starttime="20230923 10:37:09.698" endtime="20230923 10:37:14.413"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>STANDALONE/ONE</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:37:14.413" endtime="20230923 10:37:14.414"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230923 10:37:09.697" endtime="20230923 10:37:14.414"/>
</test>
<test id="s1-s8-s5-t3" name="List pipelines with explicit host" line="39">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin pipeline list --scm ${SCM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:37:14.422" level="INFO">Running command 'ozone admin pipeline list --scm scm 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:37:19.573" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:37:19.573" level="INFO">${output} = Pipeline[ Id: 32115bbc-cccd-41a7-ad0d-9514f52e10f2, Nodes: 84f21144-36b5-4d76-8a98-b96ac8f4d8db(ozonesecure_datanode_2.ozonesecure_default/172.20.0.9), ReplicationConfig: STANDALONE/ONE, State:OPEN, l...</msg>
<status status="PASS" starttime="20230923 10:37:14.418" endtime="20230923 10:37:19.573"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:37:19.575" level="INFO">Pipeline[ Id: 32115bbc-cccd-41a7-ad0d-9514f52e10f2, Nodes: 84f21144-36b5-4d76-8a98-b96ac8f4d8db(ozonesecure_datanode_2.ozonesecure_default/172.20.0.9), ReplicationConfig: STANDALONE/ONE, State:OPEN, leaderId:, CreationTimestamp2023-09-23T10:37:09.292Z[UTC]]
Pipeline[ Id: 066b3c9e-5f3a-4202-9e9a-e108ca35ecc9, Nodes: 4d9fab95-a94e-48b5-88e0-d06ac1678a42(ozonesecure_datanode_3.ozonesecure_default/172.20.0.11)cefb5f11-4c66-4dc1-8ed3-0315d7bdcf97(ozonesecure_datanode_1.ozonesecure_default/172.20.0.10)84f21144-36b5-4d76-8a98-b96ac8f4d8db(ozonesecure_datanode_2.ozonesecure_default/172.20.0.9), ReplicationConfig: RATIS/THREE, State:OPEN, leaderId:cefb5f11-4c66-4dc1-8ed3-0315d7bdcf97, CreationTimestamp2023-09-23T09:53:46.040Z[UTC]]
Pipeline[ Id: eab6469f-3c28-4c19-aa08-af50ebba6c5d, Nodes: cefb5f11-4c66-4dc1-8ed3-0315d7bdcf97(ozonesecure_datanode_1.ozonesecure_default/172.20.0.10), ReplicationConfig: RATIS/ONE, State:OPEN, leaderId:cefb5f11-4c66-4dc1-8ed3-0315d7bdcf97, CreationTimestamp2023-09-23T09:53:45.441Z[UTC]]
Pipeline[ Id: 9091805f-a2e2-45f1-ba41-bb8e2476235c, Nodes: 4d9fab95-a94e-48b5-88e0-d06ac1678a42(ozonesecure_datanode_3.ozonesecure_default/172.20.0.11), ReplicationConfig: RATIS/ONE, State:OPEN, leaderId:4d9fab95-a94e-48b5-88e0-d06ac1678a42, CreationTimestamp2023-09-23T09:53:45.987Z[UTC]]
Pipeline[ Id: 25cdfddb-8862-4b95-8508-d2846eb1f6e7, Nodes: cefb5f11-4c66-4dc1-8ed3-0315d7bdcf97(ozonesecure_datanode_1.ozonesecure_default/172.20.0.10), ReplicationConfig: STANDALONE/ONE, State:OPEN, leaderId:, CreationTimestamp2023-09-23T10:35:12.690Z[UTC]]
Pipeline[ Id: 40155579-7c1c-4e1e-a32e-881f76122bf2, Nodes: 84f21144-36b5-4d76-8a98-b96ac8f4d8db(ozonesecure_datanode_2.ozonesecure_default/172.20.0.9), ReplicationConfig: RATIS/ONE, State:OPEN, leaderId:84f21144-36b5-4d76-8a98-b96ac8f4d8db, CreationTimestamp2023-09-23T09:53:45.879Z[UTC]]</msg>
<status status="PASS" starttime="20230923 10:37:19.574" endtime="20230923 10:37:19.575"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:37:19.576" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:37:19.575" endtime="20230923 10:37:19.576"/>
</kw>
<status status="PASS" starttime="20230923 10:37:14.418" endtime="20230923 10:37:19.576"/>
</kw>
<msg timestamp="20230923 10:37:19.576" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:37:14.417" endtime="20230923 10:37:19.576"/>
</kw>
<msg timestamp="20230923 10:37:19.576" level="INFO">${output} = Pipeline[ Id: 32115bbc-cccd-41a7-ad0d-9514f52e10f2, Nodes: 84f21144-36b5-4d76-8a98-b96ac8f4d8db(ozonesecure_datanode_2.ozonesecure_default/172.20.0.9), ReplicationConfig: STANDALONE/ONE, State:OPEN, l...</msg>
<status status="PASS" starttime="20230923 10:37:14.416" endtime="20230923 10:37:19.576"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>STANDALONE/ONE</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:37:19.577" endtime="20230923 10:37:19.577"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230923 10:37:14.415" endtime="20230923 10:37:19.577"/>
</test>
<test id="s1-s8-s5-t4" name="Deactivate pipeline" line="43">
<kw name="Execute" library="os">
<arg>ozone admin pipeline deactivate "${PIPELINE}"</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:37:19.584" level="INFO">Running command 'ozone admin pipeline deactivate "32115bbc-cccd-41a7-ad0d-9514f52e10f2" 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:37:24.284" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:37:24.284" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:37:19.581" endtime="20230923 10:37:24.284"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:37:24.286" level="INFO"/>
<status status="PASS" starttime="20230923 10:37:24.285" endtime="20230923 10:37:24.286"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:37:24.287" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:37:24.286" endtime="20230923 10:37:24.287"/>
</kw>
<status status="PASS" starttime="20230923 10:37:19.580" endtime="20230923 10:37:24.287"/>
</kw>
<msg timestamp="20230923 10:37:24.287" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:37:19.580" endtime="20230923 10:37:24.287"/>
</kw>
<status status="PASS" starttime="20230923 10:37:19.579" endtime="20230923 10:37:24.288"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin pipeline list | grep "${PIPELINE}"</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:37:24.292" level="INFO">Running command 'ozone admin pipeline list | grep "32115bbc-cccd-41a7-ad0d-9514f52e10f2" 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:37:28.628" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:37:28.628" level="INFO">${output} = Pipeline[ Id: 32115bbc-cccd-41a7-ad0d-9514f52e10f2, Nodes: 84f21144-36b5-4d76-8a98-b96ac8f4d8db(ozonesecure_datanode_2.ozonesecure_default/172.20.0.9), ReplicationConfig: STANDALONE/ONE, State:DORMANT...</msg>
<status status="PASS" starttime="20230923 10:37:24.289" endtime="20230923 10:37:28.629"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:37:28.630" level="INFO">Pipeline[ Id: 32115bbc-cccd-41a7-ad0d-9514f52e10f2, Nodes: 84f21144-36b5-4d76-8a98-b96ac8f4d8db(ozonesecure_datanode_2.ozonesecure_default/172.20.0.9), ReplicationConfig: STANDALONE/ONE, State:DORMANT, leaderId:, CreationTimestamp2023-09-23T10:37:09.292Z[UTC]]</msg>
<status status="PASS" starttime="20230923 10:37:28.629" endtime="20230923 10:37:28.630"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:37:28.631" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:37:28.631" endtime="20230923 10:37:28.631"/>
</kw>
<status status="PASS" starttime="20230923 10:37:24.289" endtime="20230923 10:37:28.631"/>
</kw>
<msg timestamp="20230923 10:37:28.632" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:37:24.289" endtime="20230923 10:37:28.632"/>
</kw>
<msg timestamp="20230923 10:37:28.632" level="INFO">${output} = Pipeline[ Id: 32115bbc-cccd-41a7-ad0d-9514f52e10f2, Nodes: 84f21144-36b5-4d76-8a98-b96ac8f4d8db(ozonesecure_datanode_2.ozonesecure_default/172.20.0.9), ReplicationConfig: STANDALONE/ONE, State:DORMANT...</msg>
<status status="PASS" starttime="20230923 10:37:24.288" endtime="20230923 10:37:28.632"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>DORMANT</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:37:28.632" endtime="20230923 10:37:28.633"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230923 10:37:19.578" endtime="20230923 10:37:28.633"/>
</test>
<test id="s1-s8-s5-t5" name="Activate pipeline" line="48">
<kw name="Execute" library="os">
<arg>ozone admin pipeline activate "${PIPELINE}"</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:37:28.640" level="INFO">Running command 'ozone admin pipeline activate "32115bbc-cccd-41a7-ad0d-9514f52e10f2" 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:37:33.126" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:37:33.126" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:37:28.637" endtime="20230923 10:37:33.126"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:37:33.128" level="INFO"/>
<status status="PASS" starttime="20230923 10:37:33.127" endtime="20230923 10:37:33.128"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:37:33.129" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:37:33.128" endtime="20230923 10:37:33.129"/>
</kw>
<status status="PASS" starttime="20230923 10:37:28.636" endtime="20230923 10:37:33.129"/>
</kw>
<msg timestamp="20230923 10:37:33.129" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:37:28.636" endtime="20230923 10:37:33.129"/>
</kw>
<status status="PASS" starttime="20230923 10:37:28.635" endtime="20230923 10:37:33.130"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin pipeline list | grep "${PIPELINE}"</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:37:33.135" level="INFO">Running command 'ozone admin pipeline list | grep "32115bbc-cccd-41a7-ad0d-9514f52e10f2" 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:37:37.877" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:37:37.877" level="INFO">${output} = Pipeline[ Id: 32115bbc-cccd-41a7-ad0d-9514f52e10f2, Nodes: 84f21144-36b5-4d76-8a98-b96ac8f4d8db(ozonesecure_datanode_2.ozonesecure_default/172.20.0.9), ReplicationConfig: STANDALONE/ONE, State:OPEN, l...</msg>
<status status="PASS" starttime="20230923 10:37:33.131" endtime="20230923 10:37:37.877"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:37:37.878" level="INFO">Pipeline[ Id: 32115bbc-cccd-41a7-ad0d-9514f52e10f2, Nodes: 84f21144-36b5-4d76-8a98-b96ac8f4d8db(ozonesecure_datanode_2.ozonesecure_default/172.20.0.9), ReplicationConfig: STANDALONE/ONE, State:OPEN, leaderId:, CreationTimestamp2023-09-23T10:37:09.292Z[UTC]]</msg>
<status status="PASS" starttime="20230923 10:37:37.878" endtime="20230923 10:37:37.878"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:37:37.879" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:37:37.879" endtime="20230923 10:37:37.879"/>
</kw>
<status status="PASS" starttime="20230923 10:37:33.131" endtime="20230923 10:37:37.880"/>
</kw>
<msg timestamp="20230923 10:37:37.880" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:37:33.131" endtime="20230923 10:37:37.880"/>
</kw>
<msg timestamp="20230923 10:37:37.880" level="INFO">${output} = Pipeline[ Id: 32115bbc-cccd-41a7-ad0d-9514f52e10f2, Nodes: 84f21144-36b5-4d76-8a98-b96ac8f4d8db(ozonesecure_datanode_2.ozonesecure_default/172.20.0.9), ReplicationConfig: STANDALONE/ONE, State:OPEN, l...</msg>
<status status="PASS" starttime="20230923 10:37:33.130" endtime="20230923 10:37:37.880"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>OPEN</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:37:37.880" endtime="20230923 10:37:37.881"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230923 10:37:28.634" endtime="20230923 10:37:37.881"/>
</test>
<test id="s1-s8-s5-t6" name="Close pipeline" line="53">
<kw name="Execute" library="os">
<arg>ozone admin pipeline close "${PIPELINE}"</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:37:37.888" level="INFO">Running command 'ozone admin pipeline close "32115bbc-cccd-41a7-ad0d-9514f52e10f2" 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:37:42.689" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:37:42.690" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:37:37.885" endtime="20230923 10:37:42.690"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:37:42.691" level="INFO"/>
<status status="PASS" starttime="20230923 10:37:42.690" endtime="20230923 10:37:42.691"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:37:42.692" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:37:42.691" endtime="20230923 10:37:42.692"/>
</kw>
<status status="PASS" starttime="20230923 10:37:37.884" endtime="20230923 10:37:42.692"/>
</kw>
<msg timestamp="20230923 10:37:42.693" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:37:37.884" endtime="20230923 10:37:42.693"/>
</kw>
<status status="PASS" starttime="20230923 10:37:37.883" endtime="20230923 10:37:42.693"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin pipeline list</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:37:42.698" level="INFO">Running command 'ozone admin pipeline list 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:37:47.167" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:37:47.168" level="INFO">${output} = Pipeline[ Id: 32115bbc-cccd-41a7-ad0d-9514f52e10f2, Nodes: 84f21144-36b5-4d76-8a98-b96ac8f4d8db(ozonesecure_datanode_2.ozonesecure_default/172.20.0.9), ReplicationConfig: STANDALONE/ONE, State:CLOSED,...</msg>
<status status="PASS" starttime="20230923 10:37:42.695" endtime="20230923 10:37:47.168"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:37:47.169" level="INFO">Pipeline[ Id: 32115bbc-cccd-41a7-ad0d-9514f52e10f2, Nodes: 84f21144-36b5-4d76-8a98-b96ac8f4d8db(ozonesecure_datanode_2.ozonesecure_default/172.20.0.9), ReplicationConfig: STANDALONE/ONE, State:CLOSED, leaderId:, CreationTimestamp2023-09-23T10:37:09.292Z[UTC]]
Pipeline[ Id: 066b3c9e-5f3a-4202-9e9a-e108ca35ecc9, Nodes: 4d9fab95-a94e-48b5-88e0-d06ac1678a42(ozonesecure_datanode_3.ozonesecure_default/172.20.0.11)cefb5f11-4c66-4dc1-8ed3-0315d7bdcf97(ozonesecure_datanode_1.ozonesecure_default/172.20.0.10)84f21144-36b5-4d76-8a98-b96ac8f4d8db(ozonesecure_datanode_2.ozonesecure_default/172.20.0.9), ReplicationConfig: RATIS/THREE, State:OPEN, leaderId:cefb5f11-4c66-4dc1-8ed3-0315d7bdcf97, CreationTimestamp2023-09-23T09:53:46.040Z[UTC]]
Pipeline[ Id: eab6469f-3c28-4c19-aa08-af50ebba6c5d, Nodes: cefb5f11-4c66-4dc1-8ed3-0315d7bdcf97(ozonesecure_datanode_1.ozonesecure_default/172.20.0.10), ReplicationConfig: RATIS/ONE, State:OPEN, leaderId:cefb5f11-4c66-4dc1-8ed3-0315d7bdcf97, CreationTimestamp2023-09-23T09:53:45.441Z[UTC]]
Pipeline[ Id: 9091805f-a2e2-45f1-ba41-bb8e2476235c, Nodes: 4d9fab95-a94e-48b5-88e0-d06ac1678a42(ozonesecure_datanode_3.ozonesecure_default/172.20.0.11), ReplicationConfig: RATIS/ONE, State:OPEN, leaderId:4d9fab95-a94e-48b5-88e0-d06ac1678a42, CreationTimestamp2023-09-23T09:53:45.987Z[UTC]]
Pipeline[ Id: 25cdfddb-8862-4b95-8508-d2846eb1f6e7, Nodes: cefb5f11-4c66-4dc1-8ed3-0315d7bdcf97(ozonesecure_datanode_1.ozonesecure_default/172.20.0.10), ReplicationConfig: STANDALONE/ONE, State:OPEN, leaderId:, CreationTimestamp2023-09-23T10:35:12.690Z[UTC]]
Pipeline[ Id: 40155579-7c1c-4e1e-a32e-881f76122bf2, Nodes: 84f21144-36b5-4d76-8a98-b96ac8f4d8db(ozonesecure_datanode_2.ozonesecure_default/172.20.0.9), ReplicationConfig: RATIS/ONE, State:OPEN, leaderId:84f21144-36b5-4d76-8a98-b96ac8f4d8db, CreationTimestamp2023-09-23T09:53:45.879Z[UTC]]</msg>
<status status="PASS" starttime="20230923 10:37:47.168" endtime="20230923 10:37:47.169"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:37:47.170" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:37:47.169" endtime="20230923 10:37:47.170"/>
</kw>
<status status="PASS" starttime="20230923 10:37:42.694" endtime="20230923 10:37:47.170"/>
</kw>
<msg timestamp="20230923 10:37:47.170" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:37:42.694" endtime="20230923 10:37:47.170"/>
</kw>
<msg timestamp="20230923 10:37:47.171" level="INFO">${output} = Pipeline[ Id: 32115bbc-cccd-41a7-ad0d-9514f52e10f2, Nodes: 84f21144-36b5-4d76-8a98-b96ac8f4d8db(ozonesecure_datanode_2.ozonesecure_default/172.20.0.9), ReplicationConfig: STANDALONE/ONE, State:CLOSED,...</msg>
<status status="PASS" starttime="20230923 10:37:42.693" endtime="20230923 10:37:47.171"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${PIPELINE}' not in '''${output}'''</arg>
<arg>Pipeline already scrubbed</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20230923 10:37:47.171" endtime="20230923 10:37:47.171"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${output}</arg>
<arg>${PIPELINE}.*CLOSED</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20230923 10:37:47.172" endtime="20230923 10:37:47.172"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230923 10:37:37.882" endtime="20230923 10:37:47.173"/>
</test>
<test id="s1-s8-s5-t7" name="Incomplete command" line="59">
<kw name="Execute And Ignore Error" library="os">
<var>${output}</var>
<arg>ozone admin pipeline</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:37:47.177" level="INFO">Running command 'ozone admin pipeline 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:37:50.597" level="INFO">${rc} = 255</msg>
<msg timestamp="20230923 10:37:50.597" level="INFO">${output} = Incomplete command
Usage: ozone admin pipeline [-hV] [COMMAND]
Pipeline specific operations
  -h, --help      Show this help message and exit.
  -V, --version   Print version information and exit.
Com...</msg>
<status status="PASS" starttime="20230923 10:37:47.174" endtime="20230923 10:37:50.597"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:37:50.599" level="INFO">Incomplete command
Usage: ozone admin pipeline [-hV] [COMMAND]
Pipeline specific operations
  -h, --help      Show this help message and exit.
  -V, --version   Print version information and exit.
Commands:
  list        List all active pipelines
  activate    Activates the given Pipeline
  deactivate  Deactivates the given Pipeline
  create      create pipeline
  close       Close pipeline</msg>
<status status="PASS" starttime="20230923 10:37:50.598" endtime="20230923 10:37:50.599"/>
</kw>
<msg timestamp="20230923 10:37:50.599" level="INFO">${output} = Incomplete command
Usage: ozone admin pipeline [-hV] [COMMAND]
Pipeline specific operations
  -h, --help      Show this help message and exit.
  -V, --version   Print version information and exit.
Com...</msg>
<status status="PASS" starttime="20230923 10:37:47.174" endtime="20230923 10:37:50.599"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Incomplete command</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:37:50.599" endtime="20230923 10:37:50.600"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>close</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:37:50.600" endtime="20230923 10:37:50.601"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>create</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:37:50.601" endtime="20230923 10:37:50.601"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>deactivate</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:37:50.601" endtime="20230923 10:37:50.602"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>list</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:37:50.602" endtime="20230923 10:37:50.602"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230923 10:37:47.173" endtime="20230923 10:37:50.603"/>
</test>
<doc>Test ozone admin pipeline command</doc>
<status status="PASS" starttime="20230923 10:37:04.561" endtime="20230923 10:37:50.604"/>
</suite>
<suite id="s1-s8-s6" name="printTopology" source="/opt/hadoop/smoketest/admincli/printTopology.robot">
<test id="s1-s8-s6-t1" name="Run printTopology" line="25">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin printTopology</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:37:50.618" level="INFO">Running command 'ozone admin printTopology 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:37:55.051" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:37:55.051" level="INFO">${output} = State = HEALTHY
 172.20.0.9(ozonesecure_datanode_2.ozonesecure_default):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,RATIS_DATASTREAM=9855,STANDALONE=9859  ...</msg>
<status status="PASS" starttime="20230923 10:37:50.616" endtime="20230923 10:37:55.051"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:37:55.053" level="INFO">State = HEALTHY
 172.20.0.9(ozonesecure_datanode_2.ozonesecure_default):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,RATIS_DATASTREAM=9855,STANDALONE=9859    IN_SERVICE    /default-rack
 172.20.0.10(ozonesecure_datanode_1.ozonesecure_default):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,RATIS_DATASTREAM=9855,STANDALONE=9859    IN_SERVICE    /default-rack
 172.20.0.11(ozonesecure_datanode_3.ozonesecure_default):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,RATIS_DATASTREAM=9855,STANDALONE=9859    IN_SERVICE    /default-rack</msg>
<status status="PASS" starttime="20230923 10:37:55.052" endtime="20230923 10:37:55.053"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:37:55.054" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:37:55.053" endtime="20230923 10:37:55.054"/>
</kw>
<status status="PASS" starttime="20230923 10:37:50.615" endtime="20230923 10:37:55.054"/>
</kw>
<msg timestamp="20230923 10:37:55.054" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:37:50.615" endtime="20230923 10:37:55.054"/>
</kw>
<msg timestamp="20230923 10:37:55.054" level="INFO">${output} = State = HEALTHY
 172.20.0.9(ozonesecure_datanode_2.ozonesecure_default):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,RATIS_DATASTREAM=9855,STANDALONE=9859  ...</msg>
<status status="PASS" starttime="20230923 10:37:50.614" endtime="20230923 10:37:55.055"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${output}</arg>
<arg>State =</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20230923 10:37:55.055" endtime="20230923 10:37:55.055"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230923 10:37:50.613" endtime="20230923 10:37:55.056"/>
</test>
<test id="s1-s8-s6-t2" name="Run printTopology as JSON" line="29">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin printTopology --json</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:37:55.062" level="INFO">Running command 'ozone admin printTopology --json 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:38:00.051" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:38:00.051" level="INFO">${output} = [ {
  "ipAddress" : "172.20.0.9",
  "hostName" : "ozonesecure_datanode_2.ozonesecure_default",
  "nodeState" : "HEALTHY",
  "operationalState" : "IN_SERVICE",
  "networkLocation" : "/default-rack",
  ...</msg>
<status status="PASS" starttime="20230923 10:37:55.059" endtime="20230923 10:38:00.051"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:38:00.053" level="INFO">[ {
  "ipAddress" : "172.20.0.9",
  "hostName" : "ozonesecure_datanode_2.ozonesecure_default",
  "nodeState" : "HEALTHY",
  "operationalState" : "IN_SERVICE",
  "networkLocation" : "/default-rack",
  "ports" : {
    "HTTP" : 9882,
    "CLIENT_RPC" : 9864,
    "REPLICATION" : 9886,
    "RATIS" : 9858,
    "RATIS_ADMIN" : 9857,
    "RATIS_SERVER" : 9856,
    "RATIS_DATASTREAM" : 9855,
    "STANDALONE" : 9859
  }
}, {
  "ipAddress" : "172.20.0.10",
  "hostName" : "ozonesecure_datanode_1.ozonesecure_default",
  "nodeState" : "HEALTHY",
  "operationalState" : "IN_SERVICE",
  "networkLocation" : "/default-rack",
  "ports" : {
    "HTTP" : 9882,
    "CLIENT_RPC" : 9864,
    "REPLICATION" : 9886,
    "RATIS" : 9858,
    "RATIS_ADMIN" : 9857,
    "RATIS_SERVER" : 9856,
    "RATIS_DATASTREAM" : 9855,
    "STANDALONE" : 9859
  }
}, {
  "ipAddress" : "172.20.0.11",
  "hostName" : "ozonesecure_datanode_3.ozonesecure_default",
  "nodeState" : "HEALTHY",
  "operationalState" : "IN_SERVICE",
  "networkLocation" : "/default-rack",
  "ports" : {
    "HTTP" : 9882,
    "CLIENT_RPC" : 9864,
    "REPLICATION" : 9886,
    "RATIS" : 9858,
    "RATIS_ADMIN" : 9857,
    "RATIS_SERVER" : 9856,
    "RATIS_DATASTREAM" : 9855,
    "STANDALONE" : 9859
  }
} ]</msg>
<status status="PASS" starttime="20230923 10:38:00.052" endtime="20230923 10:38:00.053"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:38:00.054" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:38:00.054" endtime="20230923 10:38:00.054"/>
</kw>
<status status="PASS" starttime="20230923 10:37:55.058" endtime="20230923 10:38:00.055"/>
</kw>
<msg timestamp="20230923 10:38:00.055" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:37:55.058" endtime="20230923 10:38:00.055"/>
</kw>
<msg timestamp="20230923 10:38:00.055" level="INFO">${output} = [ {
  "ipAddress" : "172.20.0.9",
  "hostName" : "ozonesecure_datanode_2.ozonesecure_default",
  "nodeState" : "HEALTHY",
  "operationalState" : "IN_SERVICE",
  "networkLocation" : "/default-rack",
  ...</msg>
<status status="PASS" starttime="20230923 10:37:55.057" endtime="20230923 10:38:00.055"/>
</kw>
<kw name="Execute" library="os">
<var>${keys}</var>
<arg>echo '${output}' | jq -r '.[0] | keys'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:38:00.060" level="INFO">Running command 'echo '[ {
  "ipAddress" : "172.20.0.9",
  "hostName" : "ozonesecure_datanode_2.ozonesecure_default",
  "nodeState" : "HEALTHY",
  "operationalState" : "IN_SERVICE",
  "networkLocation" : "/default-rack",
  "ports" : {
    "HTTP" : 9882,
    "CLIENT_RPC" : 9864,
    "REPLICATION" : 9886,
    "RATIS" : 9858,
    "RATIS_ADMIN" : 9857,
    "RATIS_SERVER" : 9856,
    "RATIS_DATASTREAM" : 9855,
    "STANDALONE" : 9859
  }
}, {
  "ipAddress" : "172.20.0.10",
  "hostName" : "ozonesecure_datanode_1.ozonesecure_default",
  "nodeState" : "HEALTHY",
  "operationalState" : "IN_SERVICE",
  "networkLocation" : "/default-rack",
  "ports" : {
    "HTTP" : 9882,
    "CLIENT_RPC" : 9864,
    "REPLICATION" : 9886,
    "RATIS" : 9858,
    "RATIS_ADMIN" : 9857,
    "RATIS_SERVER" : 9856,
    "RATIS_DATASTREAM" : 9855,
    "STANDALONE" : 9859
  }
}, {
  "ipAddress" : "172.20.0.11",
  "hostName" : "ozonesecure_datanode_3.ozonesecure_default",
  "nodeState" : "HEALTHY",
  "operationalState" : "IN_SERVICE",
  "networkLocation" : "/default-rack",
  "ports" : {
    "HTTP" : 9882,
    "CLIENT_RPC" : 9864,
    "REPLICATION" : 9886,
    "RATIS" : 9858,
    "RATIS_ADMIN" : 9857,
    "RATIS_SERVER" : 9856,
    "RATIS_DATASTREAM" : 9855,
    "STANDALONE" : 9859
  }
} ]' | jq -r '.[0] | keys' 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:38:00.104" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:38:00.104" level="INFO">${output} = [
  "hostName",
  "ipAddress",
  "networkLocation",
  "nodeState",
  "operationalState",
  "ports"
]</msg>
<status status="PASS" starttime="20230923 10:38:00.057" endtime="20230923 10:38:00.104"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:38:00.105" level="INFO">[
  "hostName",
  "ipAddress",
  "networkLocation",
  "nodeState",
  "operationalState",
  "ports"
]</msg>
<status status="PASS" starttime="20230923 10:38:00.104" endtime="20230923 10:38:00.105"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:38:00.106" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:38:00.105" endtime="20230923 10:38:00.106"/>
</kw>
<status status="PASS" starttime="20230923 10:38:00.056" endtime="20230923 10:38:00.106"/>
</kw>
<msg timestamp="20230923 10:38:00.106" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:38:00.056" endtime="20230923 10:38:00.107"/>
</kw>
<msg timestamp="20230923 10:38:00.107" level="INFO">${keys} = [
  "hostName",
  "ipAddress",
  "networkLocation",
  "nodeState",
  "operationalState",
  "ports"
]</msg>
<status status="PASS" starttime="20230923 10:38:00.055" endtime="20230923 10:38:00.107"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>ipAddress</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:38:00.107" endtime="20230923 10:38:00.107"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230923 10:37:55.056" endtime="20230923 10:38:00.108"/>
</test>
<doc>Test ozone admin printTopology command</doc>
<status status="PASS" starttime="20230923 10:37:50.606" endtime="20230923 10:38:00.109"/>
</suite>
<suite id="s1-s8-s7" name="Replicationmanager" source="/opt/hadoop/smoketest/admincli/replicationmanager.robot">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:38:00.123" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:38:00.126" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:38:00.127" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230923 10:38:00.120" endtime="20230923 10:38:00.127"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:38:00.128" level="INFO">scm</msg>
<status status="PASS" starttime="20230923 10:38:00.127" endtime="20230923 10:38:00.128"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:38:00.129" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:38:00.128" endtime="20230923 10:38:00.129"/>
</kw>
<status status="PASS" starttime="20230923 10:38:00.120" endtime="20230923 10:38:00.129"/>
</kw>
<msg timestamp="20230923 10:38:00.129" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:38:00.120" endtime="20230923 10:38:00.129"/>
</kw>
<msg timestamp="20230923 10:38:00.129" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230923 10:38:00.119" endtime="20230923 10:38:00.130"/>
</kw>
<msg timestamp="20230923 10:38:00.130" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230923 10:38:00.119" endtime="20230923 10:38:00.130"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230923 10:38:00.131" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230923 10:38:00.130" endtime="20230923 10:38:00.131"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:38:00.136" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:38:00.204" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:38:00.204" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:38:00.133" endtime="20230923 10:38:00.204"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:38:00.205" level="INFO"/>
<status status="PASS" starttime="20230923 10:38:00.205" endtime="20230923 10:38:00.205"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:38:00.206" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:38:00.206" endtime="20230923 10:38:00.206"/>
</kw>
<status status="PASS" starttime="20230923 10:38:00.133" endtime="20230923 10:38:00.206"/>
</kw>
<msg timestamp="20230923 10:38:00.206" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:38:00.132" endtime="20230923 10:38:00.206"/>
</kw>
<status status="PASS" starttime="20230923 10:38:00.132" endtime="20230923 10:38:00.207"/>
</kw>
<status status="PASS" starttime="20230923 10:38:00.131" endtime="20230923 10:38:00.207"/>
</kw>
<status status="PASS" starttime="20230923 10:38:00.118" endtime="20230923 10:38:00.207"/>
</kw>
<status status="PASS" starttime="20230923 10:38:00.118" endtime="20230923 10:38:00.207"/>
</kw>
<test id="s1-s8-s7-t1" name="Check replicationmanager" line="27">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin replicationmanager status</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:38:00.213" level="INFO">Running command 'ozone admin replicationmanager status 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:38:04.824" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:38:04.824" level="INFO">${output} = ReplicationManager is Running.</msg>
<status status="PASS" starttime="20230923 10:38:00.210" endtime="20230923 10:38:04.824"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:38:04.826" level="INFO">ReplicationManager is Running.</msg>
<status status="PASS" starttime="20230923 10:38:04.825" endtime="20230923 10:38:04.826"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:38:04.826" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:38:04.826" endtime="20230923 10:38:04.826"/>
</kw>
<status status="PASS" starttime="20230923 10:38:00.209" endtime="20230923 10:38:04.826"/>
</kw>
<msg timestamp="20230923 10:38:04.826" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:38:00.209" endtime="20230923 10:38:04.827"/>
</kw>
<msg timestamp="20230923 10:38:04.827" level="INFO">${output} = ReplicationManager is Running.</msg>
<status status="PASS" starttime="20230923 10:38:00.208" endtime="20230923 10:38:04.827"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>ReplicationManager</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:38:04.827" endtime="20230923 10:38:04.827"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Running</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:38:04.827" endtime="20230923 10:38:04.828"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230923 10:38:00.207" endtime="20230923 10:38:04.828"/>
</test>
<test id="s1-s8-s7-t2" name="Check replicationmanager with explicit host" line="32">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin replicationmanager status --scm ${SCM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:38:04.834" level="INFO">Running command 'ozone admin replicationmanager status --scm scm 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:38:09.597" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:38:09.597" level="INFO">${output} = ReplicationManager is Running.</msg>
<status status="PASS" starttime="20230923 10:38:04.831" endtime="20230923 10:38:09.597"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:38:09.598" level="INFO">ReplicationManager is Running.</msg>
<status status="PASS" starttime="20230923 10:38:09.598" endtime="20230923 10:38:09.599"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:38:09.600" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:38:09.599" endtime="20230923 10:38:09.600"/>
</kw>
<status status="PASS" starttime="20230923 10:38:04.831" endtime="20230923 10:38:09.600"/>
</kw>
<msg timestamp="20230923 10:38:09.600" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:38:04.830" endtime="20230923 10:38:09.600"/>
</kw>
<msg timestamp="20230923 10:38:09.601" level="INFO">${output} = ReplicationManager is Running.</msg>
<status status="PASS" starttime="20230923 10:38:04.830" endtime="20230923 10:38:09.601"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>ReplicationManager</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:38:09.601" endtime="20230923 10:38:09.601"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Running</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:38:09.601" endtime="20230923 10:38:09.602"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230923 10:38:04.829" endtime="20230923 10:38:09.602"/>
</test>
<test id="s1-s8-s7-t3" name="Stop replicationmanager" line="37">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin replicationmanager stop</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:38:09.609" level="INFO">Running command 'ozone admin replicationmanager stop 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:38:14.358" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:38:14.358" level="INFO">${output} = Stopping ReplicationManager...
Requested SCM to stop ReplicationManager, it might take sometime for the ReplicationManager to stop.</msg>
<status status="PASS" starttime="20230923 10:38:09.606" endtime="20230923 10:38:14.358"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:38:14.360" level="INFO">Stopping ReplicationManager...
Requested SCM to stop ReplicationManager, it might take sometime for the ReplicationManager to stop.</msg>
<status status="PASS" starttime="20230923 10:38:14.359" endtime="20230923 10:38:14.360"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:38:14.361" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:38:14.360" endtime="20230923 10:38:14.361"/>
</kw>
<status status="PASS" starttime="20230923 10:38:09.605" endtime="20230923 10:38:14.361"/>
</kw>
<msg timestamp="20230923 10:38:14.361" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:38:09.605" endtime="20230923 10:38:14.361"/>
</kw>
<msg timestamp="20230923 10:38:14.362" level="INFO">${output} = Stopping ReplicationManager...
Requested SCM to stop ReplicationManager, it might take sometime for the ReplicationManager to stop.</msg>
<status status="PASS" starttime="20230923 10:38:09.604" endtime="20230923 10:38:14.362"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Stopping ReplicationManager</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:38:14.362" endtime="20230923 10:38:14.362"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>30sec</arg>
<arg>5sec</arg>
<arg>Execute</arg>
<arg>ozone admin replicationmanager status | grep -q 'is Not Running'</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>ozone admin replicationmanager status | grep -q 'is Not Running'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:38:14.368" level="INFO">Running command 'ozone admin replicationmanager status | grep -q 'is Not Running' 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:38:18.834" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:38:18.834" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:38:14.365" endtime="20230923 10:38:18.835"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:38:18.836" level="INFO"/>
<status status="PASS" starttime="20230923 10:38:18.835" endtime="20230923 10:38:18.836"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:38:18.837" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:38:18.836" endtime="20230923 10:38:18.837"/>
</kw>
<status status="PASS" starttime="20230923 10:38:14.364" endtime="20230923 10:38:18.837"/>
</kw>
<msg timestamp="20230923 10:38:18.837" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:38:14.364" endtime="20230923 10:38:18.838"/>
</kw>
<status status="PASS" starttime="20230923 10:38:14.363" endtime="20230923 10:38:18.838"/>
</kw>
<status status="PASS" starttime="20230923 10:38:14.363" endtime="20230923 10:38:18.838"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230923 10:38:09.603" endtime="20230923 10:38:18.838"/>
</test>
<test id="s1-s8-s7-t4" name="Start replicationmanager" line="42">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin replicationmanager start</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:38:18.845" level="INFO">Running command 'ozone admin replicationmanager start 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:38:23.471" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:38:23.471" level="INFO">${output} = Starting ReplicationManager...</msg>
<status status="PASS" starttime="20230923 10:38:18.841" endtime="20230923 10:38:23.471"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:38:23.472" level="INFO">Starting ReplicationManager...</msg>
<status status="PASS" starttime="20230923 10:38:23.471" endtime="20230923 10:38:23.473"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:38:23.473" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:38:23.473" endtime="20230923 10:38:23.473"/>
</kw>
<status status="PASS" starttime="20230923 10:38:18.841" endtime="20230923 10:38:23.474"/>
</kw>
<msg timestamp="20230923 10:38:23.474" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:38:18.841" endtime="20230923 10:38:23.474"/>
</kw>
<msg timestamp="20230923 10:38:23.474" level="INFO">${output} = Starting ReplicationManager...</msg>
<status status="PASS" starttime="20230923 10:38:18.840" endtime="20230923 10:38:23.474"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Starting ReplicationManager</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:38:23.474" endtime="20230923 10:38:23.475"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>30sec</arg>
<arg>5sec</arg>
<arg>Execute</arg>
<arg>ozone admin replicationmanager status | grep -q 'is Running'</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>ozone admin replicationmanager status | grep -q 'is Running'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:38:23.480" level="INFO">Running command 'ozone admin replicationmanager status | grep -q 'is Running' 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:38:27.725" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:38:27.725" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:38:23.477" endtime="20230923 10:38:27.725"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:38:27.727" level="INFO"/>
<status status="PASS" starttime="20230923 10:38:27.726" endtime="20230923 10:38:27.727"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:38:27.727" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:38:27.727" endtime="20230923 10:38:27.728"/>
</kw>
<status status="PASS" starttime="20230923 10:38:23.477" endtime="20230923 10:38:27.728"/>
</kw>
<msg timestamp="20230923 10:38:27.728" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:38:23.476" endtime="20230923 10:38:27.728"/>
</kw>
<status status="PASS" starttime="20230923 10:38:23.476" endtime="20230923 10:38:27.728"/>
</kw>
<status status="PASS" starttime="20230923 10:38:23.475" endtime="20230923 10:38:27.728"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230923 10:38:18.839" endtime="20230923 10:38:27.729"/>
</test>
<test id="s1-s8-s7-t5" name="Incomplete command" line="47">
<kw name="Execute And Ignore Error" library="os">
<var>${output}</var>
<arg>ozone admin replicationmanager</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:38:27.734" level="INFO">Running command 'ozone admin replicationmanager 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:38:31.404" level="INFO">${rc} = 255</msg>
<msg timestamp="20230923 10:38:31.404" level="INFO">${output} = Incomplete command
Usage: ozone admin replicationmanager [-hV] [COMMAND]
ReplicationManager specific operations
  -h, --help      Show this help message and exit.
  -V, --version   Print version infor...</msg>
<status status="PASS" starttime="20230923 10:38:27.731" endtime="20230923 10:38:31.404"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:38:31.406" level="INFO">Incomplete command
Usage: ozone admin replicationmanager [-hV] [COMMAND]
ReplicationManager specific operations
  -h, --help      Show this help message and exit.
  -V, --version   Print version information and exit.
Commands:
  start   Start ReplicationManager
  stop    Stop ReplicationManager
  status  Check if ReplicationManager is running or not</msg>
<status status="PASS" starttime="20230923 10:38:31.405" endtime="20230923 10:38:31.406"/>
</kw>
<msg timestamp="20230923 10:38:31.406" level="INFO">${output} = Incomplete command
Usage: ozone admin replicationmanager [-hV] [COMMAND]
ReplicationManager specific operations
  -h, --help      Show this help message and exit.
  -V, --version   Print version infor...</msg>
<status status="PASS" starttime="20230923 10:38:27.730" endtime="20230923 10:38:31.406"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Incomplete command</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:38:31.406" endtime="20230923 10:38:31.407"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>start</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:38:31.407" endtime="20230923 10:38:31.408"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>stop</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:38:31.408" endtime="20230923 10:38:31.408"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>status</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:38:31.409" endtime="20230923 10:38:31.409"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230923 10:38:27.729" endtime="20230923 10:38:31.412"/>
</test>
<doc>Test ozone admin replicationmanager command</doc>
<status status="PASS" starttime="20230923 10:38:00.111" endtime="20230923 10:38:31.413"/>
</suite>
<suite id="s1-s8-s8" name="Safemode" source="/opt/hadoop/smoketest/admincli/safemode.robot">
<test id="s1-s8-s8-t1" name="Check safemode" line="26">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin safemode status</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:38:31.427" level="INFO">Running command 'ozone admin safemode status 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:38:35.894" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:38:35.894" level="INFO">${output} = SCM is out of safe mode.</msg>
<status status="PASS" starttime="20230923 10:38:31.424" endtime="20230923 10:38:35.894"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:38:35.896" level="INFO">SCM is out of safe mode.</msg>
<status status="PASS" starttime="20230923 10:38:35.895" endtime="20230923 10:38:35.896"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:38:35.897" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:38:35.896" endtime="20230923 10:38:35.897"/>
</kw>
<status status="PASS" starttime="20230923 10:38:31.424" endtime="20230923 10:38:35.897"/>
</kw>
<msg timestamp="20230923 10:38:35.897" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:38:31.423" endtime="20230923 10:38:35.897"/>
</kw>
<msg timestamp="20230923 10:38:35.898" level="INFO">${output} = SCM is out of safe mode.</msg>
<status status="PASS" starttime="20230923 10:38:31.423" endtime="20230923 10:38:35.898"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>SCM is out of safe mode</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:38:35.898" endtime="20230923 10:38:35.898"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230923 10:38:31.422" endtime="20230923 10:38:35.899"/>
</test>
<test id="s1-s8-s8-t2" name="Check safemode with explicit host" line="30">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin safemode status --scm ${SCM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:38:35.905" level="INFO">Running command 'ozone admin safemode status --scm scm 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:38:40.426" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:38:40.426" level="INFO">${output} = SCM is out of safe mode.</msg>
<status status="PASS" starttime="20230923 10:38:35.902" endtime="20230923 10:38:40.426"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:38:40.428" level="INFO">SCM is out of safe mode.</msg>
<status status="PASS" starttime="20230923 10:38:40.427" endtime="20230923 10:38:40.428"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:38:40.428" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:38:40.428" endtime="20230923 10:38:40.429"/>
</kw>
<status status="PASS" starttime="20230923 10:38:35.902" endtime="20230923 10:38:40.429"/>
</kw>
<msg timestamp="20230923 10:38:40.429" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:38:35.901" endtime="20230923 10:38:40.429"/>
</kw>
<msg timestamp="20230923 10:38:40.429" level="INFO">${output} = SCM is out of safe mode.</msg>
<status status="PASS" starttime="20230923 10:38:35.901" endtime="20230923 10:38:40.429"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>SCM is out of safe mode</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:38:40.429" endtime="20230923 10:38:40.430"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230923 10:38:35.900" endtime="20230923 10:38:40.430"/>
</test>
<test id="s1-s8-s8-t3" name="Wait for safemode exit" line="34">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin safemode wait -t 2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:38:40.437" level="INFO">Running command 'ozone admin safemode wait -t 2 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:38:45.133" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:38:45.133" level="INFO">${output} = SCM is out of safe mode.</msg>
<status status="PASS" starttime="20230923 10:38:40.433" endtime="20230923 10:38:45.133"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:38:45.135" level="INFO">SCM is out of safe mode.</msg>
<status status="PASS" starttime="20230923 10:38:45.134" endtime="20230923 10:38:45.135"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:38:45.135" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:38:45.135" endtime="20230923 10:38:45.136"/>
</kw>
<status status="PASS" starttime="20230923 10:38:40.433" endtime="20230923 10:38:45.136"/>
</kw>
<msg timestamp="20230923 10:38:45.136" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:38:40.432" endtime="20230923 10:38:45.136"/>
</kw>
<msg timestamp="20230923 10:38:45.136" level="INFO">${output} = SCM is out of safe mode.</msg>
<status status="PASS" starttime="20230923 10:38:40.432" endtime="20230923 10:38:45.136"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>SCM is out of safe mode</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:38:45.136" endtime="20230923 10:38:45.137"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230923 10:38:40.431" endtime="20230923 10:38:45.137"/>
</test>
<test id="s1-s8-s8-t4" name="Incomplete command" line="38">
<kw name="Execute And Ignore Error" library="os">
<var>${output}</var>
<arg>ozone admin safemode</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:38:45.143" level="INFO">Running command 'ozone admin safemode 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:38:48.746" level="INFO">${rc} = 255</msg>
<msg timestamp="20230923 10:38:48.746" level="INFO">${output} = Incomplete command
Usage: ozone admin safemode [-hV] [COMMAND]
Safe mode specific operations
  -h, --help      Show this help message and exit.
  -V, --version   Print version information and exit.
Co...</msg>
<status status="PASS" starttime="20230923 10:38:45.140" endtime="20230923 10:38:48.746"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:38:48.748" level="INFO">Incomplete command
Usage: ozone admin safemode [-hV] [COMMAND]
Safe mode specific operations
  -h, --help      Show this help message and exit.
  -V, --version   Print version information and exit.
Commands:
  status  Check if SCM is in safe mode
  exit    Force SCM out of safe mode
  wait    Wait until the scm is out from the safe mode.</msg>
<status status="PASS" starttime="20230923 10:38:48.747" endtime="20230923 10:38:48.748"/>
</kw>
<msg timestamp="20230923 10:38:48.748" level="INFO">${output} = Incomplete command
Usage: ozone admin safemode [-hV] [COMMAND]
Safe mode specific operations
  -h, --help      Show this help message and exit.
  -V, --version   Print version information and exit.
Co...</msg>
<status status="PASS" starttime="20230923 10:38:45.139" endtime="20230923 10:38:48.748"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Incomplete command</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:38:48.748" endtime="20230923 10:38:48.749"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>status</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:38:48.749" endtime="20230923 10:38:48.749"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>exit</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:38:48.750" endtime="20230923 10:38:48.750"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>wait</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:38:48.750" endtime="20230923 10:38:48.751"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230923 10:38:45.138" endtime="20230923 10:38:48.751"/>
</test>
<doc>Test ozone admin safemode command</doc>
<status status="PASS" starttime="20230923 10:38:31.415" endtime="20230923 10:38:48.752"/>
</suite>
<suite id="s1-s8-s9" name="Scmrole" source="/opt/hadoop/smoketest/admincli/scmrole.robot">
<test id="s1-s8-s9-t1" name="Run scm roles" line="26">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin scm roles</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:38:48.766" level="INFO">Running command 'ozone admin scm roles 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:38:53.397" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:38:53.397" level="INFO">${output} = scm:9894:LEADER:5116574b-609b-4159-b761-697571577420:172.20.0.5</msg>
<status status="PASS" starttime="20230923 10:38:48.762" endtime="20230923 10:38:53.397"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:38:53.398" level="INFO">scm:9894:LEADER:5116574b-609b-4159-b761-697571577420:172.20.0.5</msg>
<status status="PASS" starttime="20230923 10:38:53.397" endtime="20230923 10:38:53.398"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:38:53.399" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:38:53.398" endtime="20230923 10:38:53.399"/>
</kw>
<status status="PASS" starttime="20230923 10:38:48.762" endtime="20230923 10:38:53.399"/>
</kw>
<msg timestamp="20230923 10:38:53.399" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:38:48.761" endtime="20230923 10:38:53.399"/>
</kw>
<msg timestamp="20230923 10:38:53.400" level="INFO">${output} = scm:9894:LEADER:5116574b-609b-4159-b761-697571577420:172.20.0.5</msg>
<status status="PASS" starttime="20230923 10:38:48.761" endtime="20230923 10:38:53.400"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${output}</arg>
<arg>[scm:9894(:LEADER|)]</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20230923 10:38:53.400" endtime="20230923 10:38:53.400"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230923 10:38:48.760" endtime="20230923 10:38:53.401"/>
</test>
<test id="s1-s8-s9-t2" name="List scm roles as JSON" line="30">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin scm roles --json</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:38:53.407" level="INFO">Running command 'ozone admin scm roles --json 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:38:58.280" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:38:58.280" level="INFO">${output} = {
  "scm" : {
    "address" : "scm:9894",
    "raftPeerRole" : "LEADER",
    "ID" : "5116574b-609b-4159-b761-697571577420",
    "InetAddress" : "172.20.0.5"
  }
}</msg>
<status status="PASS" starttime="20230923 10:38:53.404" endtime="20230923 10:38:58.280"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:38:58.281" level="INFO">{
  "scm" : {
    "address" : "scm:9894",
    "raftPeerRole" : "LEADER",
    "ID" : "5116574b-609b-4159-b761-697571577420",
    "InetAddress" : "172.20.0.5"
  }
}</msg>
<status status="PASS" starttime="20230923 10:38:58.280" endtime="20230923 10:38:58.281"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:38:58.282" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:38:58.281" endtime="20230923 10:38:58.282"/>
</kw>
<status status="PASS" starttime="20230923 10:38:53.404" endtime="20230923 10:38:58.282"/>
</kw>
<msg timestamp="20230923 10:38:58.282" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:38:53.403" endtime="20230923 10:38:58.282"/>
</kw>
<msg timestamp="20230923 10:38:58.283" level="INFO">${output} = {
  "scm" : {
    "address" : "scm:9894",
    "raftPeerRole" : "LEADER",
    "ID" : "5116574b-609b-4159-b761-697571577420",
    "InetAddress" : "172.20.0.5"
  }
}</msg>
<status status="PASS" starttime="20230923 10:38:53.403" endtime="20230923 10:38:58.283"/>
</kw>
<kw name="Execute" library="os">
<var>${leader}</var>
<arg>echo '${output}' | jq -r '.[] | select(.raftPeerRole == "LEADER")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:38:58.288" level="INFO">Running command 'echo '{
  "scm" : {
    "address" : "scm:9894",
    "raftPeerRole" : "LEADER",
    "ID" : "5116574b-609b-4159-b761-697571577420",
    "InetAddress" : "172.20.0.5"
  }
}' | jq -r '.[] | select(.raftPeerRole == "LEADER")' 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:38:58.331" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:38:58.331" level="INFO">${output} = {
  "address": "scm:9894",
  "raftPeerRole": "LEADER",
  "ID": "5116574b-609b-4159-b761-697571577420",
  "InetAddress": "172.20.0.5"
}</msg>
<status status="PASS" starttime="20230923 10:38:58.284" endtime="20230923 10:38:58.331"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:38:58.332" level="INFO">{
  "address": "scm:9894",
  "raftPeerRole": "LEADER",
  "ID": "5116574b-609b-4159-b761-697571577420",
  "InetAddress": "172.20.0.5"
}</msg>
<status status="PASS" starttime="20230923 10:38:58.332" endtime="20230923 10:38:58.333"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:38:58.333" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:38:58.333" endtime="20230923 10:38:58.333"/>
</kw>
<status status="PASS" starttime="20230923 10:38:58.284" endtime="20230923 10:38:58.334"/>
</kw>
<msg timestamp="20230923 10:38:58.334" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:38:58.284" endtime="20230923 10:38:58.334"/>
</kw>
<msg timestamp="20230923 10:38:58.334" level="INFO">${leader} = {
  "address": "scm:9894",
  "raftPeerRole": "LEADER",
  "ID": "5116574b-609b-4159-b761-697571577420",
  "InetAddress": "172.20.0.5"
}</msg>
<status status="PASS" starttime="20230923 10:38:58.283" endtime="20230923 10:38:58.334"/>
</kw>
<kw name="Should Not Be Equal" library="BuiltIn">
<arg>${leader}</arg>
<arg>${EMPTY}</arg>
<doc>Fails if the given objects are equal.</doc>
<status status="PASS" starttime="20230923 10:38:58.334" endtime="20230923 10:38:58.336"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230923 10:38:53.402" endtime="20230923 10:38:58.336"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20230923 10:38:48.754" endtime="20230923 10:38:58.337"/>
</suite>
<status status="PASS" starttime="20230923 10:34:42.892" endtime="20230923 10:38:58.341"/>
</suite>
<suite id="s1-s9" name="Spnego" source="/opt/hadoop/smoketest/spnego">
<suite id="s1-s9-s1" name="Web" source="/opt/hadoop/smoketest/spnego/web.robot">
<test id="s1-s9-s1-t1" name="Test OM portal" line="53">
<kw name="Verify SPNEGO enabled URL">
<arg>${OM_URL}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Execute</arg>
<arg>kdestroy</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:39:02.238" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:39:02.243" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:39:02.243" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:39:02.235" endtime="20230923 10:39:02.243"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:39:02.244" level="INFO"/>
<status status="PASS" starttime="20230923 10:39:02.243" endtime="20230923 10:39:02.244"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:39:02.245" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:39:02.244" endtime="20230923 10:39:02.245"/>
</kw>
<status status="PASS" starttime="20230923 10:39:02.235" endtime="20230923 10:39:02.245"/>
</kw>
<msg timestamp="20230923 10:39:02.245" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:39:02.235" endtime="20230923 10:39:02.245"/>
</kw>
<status status="PASS" starttime="20230923 10:39:02.234" endtime="20230923 10:39:02.245"/>
</kw>
<status status="PASS" starttime="20230923 10:39:02.234" endtime="20230923 10:39:02.245"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:39:02.250" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://om:9874 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:39:02.274" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:39:02.274" level="INFO">${output} = * About to connect() to om port 9874 (#0)
*   Trying 172.20.0.2...
* Connected to om (172.20.0.2) port 9874 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1...</msg>
<status status="PASS" starttime="20230923 10:39:02.247" endtime="20230923 10:39:02.274"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:39:02.276" level="INFO">* About to connect() to om port 9874 (#0)
*   Trying 172.20.0.2...
* Connected to om (172.20.0.2) port 9874 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Authentication required
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-XSS-Protection: 1; mode=block
&lt; X-FRAME-OPTIONS: SAMEORIGIN
* gss_init_sec_context() failed: : No Kerberos credentials available (default cache: FILE:/tmp/krb5cc_1000)
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 446
&lt; 
* Connection #0 to host om left intact
HTTP/1.1 401 Authentication required
Pragma: no-cache
X-Content-Type-Options: nosniff
X-XSS-Protection: 1; mode=block
X-FRAME-OPTIONS: SAMEORIGIN
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 446
</msg>
<status status="PASS" starttime="20230923 10:39:02.275" endtime="20230923 10:39:02.276"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:39:02.277" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:39:02.276" endtime="20230923 10:39:02.277"/>
</kw>
<status status="PASS" starttime="20230923 10:39:02.247" endtime="20230923 10:39:02.277"/>
</kw>
<msg timestamp="20230923 10:39:02.277" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:39:02.246" endtime="20230923 10:39:02.277"/>
</kw>
<msg timestamp="20230923 10:39:02.278" level="INFO">${result} = * About to connect() to om port 9874 (#0)
*   Trying 172.20.0.2...
* Connected to om (172.20.0.2) port 9874 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1...</msg>
<status status="PASS" starttime="20230923 10:39:02.246" endtime="20230923 10:39:02.278"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>401 Authentication required</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:39:02.278" endtime="20230923 10:39:02.278"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:39:02.284" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:39:02.288" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:39:02.288" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230923 10:39:02.282" endtime="20230923 10:39:02.288"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:39:02.290" level="INFO">scm</msg>
<status status="PASS" starttime="20230923 10:39:02.289" endtime="20230923 10:39:02.290"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:39:02.290" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:39:02.290" endtime="20230923 10:39:02.291"/>
</kw>
<status status="PASS" starttime="20230923 10:39:02.281" endtime="20230923 10:39:02.291"/>
</kw>
<msg timestamp="20230923 10:39:02.291" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:39:02.281" endtime="20230923 10:39:02.291"/>
</kw>
<msg timestamp="20230923 10:39:02.291" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230923 10:39:02.280" endtime="20230923 10:39:02.291"/>
</kw>
<msg timestamp="20230923 10:39:02.292" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230923 10:39:02.280" endtime="20230923 10:39:02.292"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230923 10:39:02.292" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230923 10:39:02.292" endtime="20230923 10:39:02.292"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:39:02.297" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:39:02.369" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:39:02.369" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:39:02.295" endtime="20230923 10:39:02.369"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:39:02.370" level="INFO"/>
<status status="PASS" starttime="20230923 10:39:02.369" endtime="20230923 10:39:02.370"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:39:02.371" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:39:02.370" endtime="20230923 10:39:02.371"/>
</kw>
<status status="PASS" starttime="20230923 10:39:02.294" endtime="20230923 10:39:02.371"/>
</kw>
<msg timestamp="20230923 10:39:02.371" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:39:02.294" endtime="20230923 10:39:02.371"/>
</kw>
<status status="PASS" starttime="20230923 10:39:02.293" endtime="20230923 10:39:02.371"/>
</kw>
<status status="PASS" starttime="20230923 10:39:02.293" endtime="20230923 10:39:02.371"/>
</kw>
<status status="PASS" starttime="20230923 10:39:02.279" endtime="20230923 10:39:02.372"/>
</kw>
<status status="PASS" starttime="20230923 10:39:02.279" endtime="20230923 10:39:02.372"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:39:02.376" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://om:9874 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:39:02.465" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:39:02.465" level="INFO">${output} = * About to connect() to om port 9874 (#0)
*   Trying 172.20.0.2...
* Connected to om (172.20.0.2) port 9874 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1...</msg>
<status status="PASS" starttime="20230923 10:39:02.373" endtime="20230923 10:39:02.466"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:39:02.467" level="INFO">* About to connect() to om port 9874 (#0)
*   Trying 172.20.0.2...
* Connected to om (172.20.0.2) port 9874 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Authentication required
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-XSS-Protection: 1; mode=block
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 446
&lt; 
* Connection #0 to host om left intact
* Issue another request to this URL: 'http://om:9874/'
* Found bundle for host om: 0x244bf70
* Re-using existing connection! (#0) with host om
* Connected to om (172.20.0.2) port 9874 (#0)
* Server auth using GSS-Negotiate with user ''
&gt; HEAD / HTTP/1.1
&gt; Authorization: Negotiate YIICWAYJKoZIhvcSAQICAQBuggJHMIICQ6ADAgEFoQMCAQ6iBwMFACAAAACjggFTYYIBTzCCAUugAwIBBaENGwtFWEFNUExFLkNPTaIVMBOgAwIBA6EMMAobBEhUVFAbAm9to4IBHDCCARigAwIBEqEDAgEBooIBCgSCAQbXi91lSAGFyia+VSZ3/b+cmonqOT5V7S37yFxVuLI/jRdyHlR2zyaJR/wZB+PEuHV2tuK0z5aYUGX9Nf8zY3BZi5S6qL41cvr8umwPujn0stHIOWJyHanO10i+3NdcOjH8YTv3YM3N8+lXvkvIevt0kYKE5XcHNikNkWucg2lUJBkdm7OW/QuVKTHviMVEfkVL6FSei7glVEAgP1VjIj8FsPfPC/SqrdsNM951LEbHzxXYP5xSsx8m2qmMnXxi8qk7k4rPW5vTAS6dALGmf3dNRpX3AL/Diadw7Cx2s9nRiWBAwEpPdzyqqoWJrqScM35VvV6I9KFo3iQEVF5aG5lIslFs2fsWpIHWMIHToAMCARKigcsEgci0dXfrDyGJyvKXWBePkweDQ+LzW2bdS0vIGXRaRDdaBOzObj1tjWshVIlgBig4Z/gHwX+9olqrIa/Y7ExIw9i+62bXElUhYT+LA+vTQD/EAR9mX/WsambCPgUD7rRCofW7RJEcn4hP1sBs3YxdHywTtUGBApyCZDSrsZpbzRxMf8dg8s8P0nHX1TvXSV5vzpoFQpsXLMY80D+WGMWQP6fO3bOOxjpM3NnCKR9Zy0TjNU6vZ9skA7x1UzNdHK9EgrnWgboyqy4diw==
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Sat, 23 Sep 2023 10:39:02 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Sat, 23 Sep 2023 10:39:02 GMT
&lt; Pragma: no-cache
&lt; Content-Type: text/html
&lt; X-Content-Type-Options: nosniff
&lt; X-XSS-Protection: 1; mode=block
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCs1w/Vzk58XtkI8bmc/ZiAJ7AK5AEyKgIfyDDnlHSW5mWqMdxz0HAHl7DJr38XjFA59EUW5j/f0uDoHHgZtk5fTGz
&lt; Set-Cookie: hadoop.auth="u=testuser&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1695501542458&amp;s=qFZOe6wgAQf4PJVY9Ic0V4+6GUjTYiH9TeGniuadRzs="; Path=/; HttpOnly
&lt; Last-Modified: Sat, 23 Sep 2023 09:22:20 GMT
&lt; Accept-Ranges: bytes
&lt; Content-Length: 2927
&lt; 
* Closing connection 0
HTTP/1.1 401 Authentication required
Pragma: no-cache
X-Content-Type-Options: nosniff
X-XSS-Protection: 1; mode=block
X-FRAME-OPTIONS: SAMEORIGIN
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 446

HTTP/1.1 200 OK
Date: Sat, 23 Sep 2023 10:39:02 GMT
Cache-Control: no-cache
Expires: Sat, 23 Sep 2023 10:39:02 GMT
Pragma: no-cache
Content-Type: text/html
X-Content-Type-Options: nosniff
X-XSS-Protection: 1; mode=block
X-FRAME-OPTIONS: SAMEORIGIN
WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCs1w/Vzk58XtkI8bmc/ZiAJ7AK5AEyKgIfyDDnlHSW5mWqMdxz0HAHl7DJr38XjFA59EUW5j/f0uDoHHgZtk5fTGz
Set-Cookie: hadoop.auth="u=testuser&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1695501542458&amp;s=qFZOe6wgAQf4PJVY9Ic0V4+6GUjTYiH9TeGniuadRzs="; Path=/; HttpOnly
Last-Modified: Sat, 23 Sep 2023 09:22:20 GMT
Accept-Ranges: bytes
Content-Length: 2927
</msg>
<status status="PASS" starttime="20230923 10:39:02.466" endtime="20230923 10:39:02.467"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:39:02.468" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:39:02.468" endtime="20230923 10:39:02.468"/>
</kw>
<status status="PASS" starttime="20230923 10:39:02.373" endtime="20230923 10:39:02.469"/>
</kw>
<msg timestamp="20230923 10:39:02.469" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:39:02.372" endtime="20230923 10:39:02.469"/>
</kw>
<msg timestamp="20230923 10:39:02.469" level="INFO">${result} = * About to connect() to om port 9874 (#0)
*   Trying 172.20.0.2...
* Connected to om (172.20.0.2) port 9874 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1...</msg>
<status status="PASS" starttime="20230923 10:39:02.372" endtime="20230923 10:39:02.469"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200 OK</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:39:02.469" endtime="20230923 10:39:02.470"/>
</kw>
<status status="PASS" starttime="20230923 10:39:02.233" endtime="20230923 10:39:02.470"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230923 10:39:02.232" endtime="20230923 10:39:02.470"/>
</test>
<test id="s1-s9-s1-t2" name="Test OM DB Checkpoint" line="56">
<kw name="Verify SPNEGO enabled URL">
<arg>${OM_DB_CHECKPOINT_URL}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Execute</arg>
<arg>kdestroy</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:39:02.478" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:39:02.483" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:39:02.483" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:39:02.475" endtime="20230923 10:39:02.483"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:39:02.484" level="INFO"/>
<status status="PASS" starttime="20230923 10:39:02.483" endtime="20230923 10:39:02.484"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:39:02.485" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:39:02.485" endtime="20230923 10:39:02.485"/>
</kw>
<status status="PASS" starttime="20230923 10:39:02.475" endtime="20230923 10:39:02.485"/>
</kw>
<msg timestamp="20230923 10:39:02.486" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:39:02.475" endtime="20230923 10:39:02.486"/>
</kw>
<status status="PASS" starttime="20230923 10:39:02.474" endtime="20230923 10:39:02.486"/>
</kw>
<status status="PASS" starttime="20230923 10:39:02.474" endtime="20230923 10:39:02.486"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:39:02.490" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://om:9874/dbCheckpoint 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:39:02.504" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:39:02.505" level="INFO">${output} = * About to connect() to om port 9874 (#0)
*   Trying 172.20.0.2...
* Connected to om (172.20.0.2) port 9874 (#0)
&gt; HEAD /dbCheckpoint HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt;...</msg>
<status status="PASS" starttime="20230923 10:39:02.488" endtime="20230923 10:39:02.505"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:39:02.506" level="INFO">* About to connect() to om port 9874 (#0)
*   Trying 172.20.0.2...
* Connected to om (172.20.0.2) port 9874 (#0)
&gt; HEAD /dbCheckpoint HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Authentication required
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-XSS-Protection: 1; mode=block
&lt; X-FRAME-OPTIONS: SAMEORIGIN
* gss_init_sec_context() failed: : No Kerberos credentials available (default cache: FILE:/tmp/krb5cc_1000)
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 422
&lt; 
* Connection #0 to host om left intact
HTTP/1.1 401 Authentication required
Pragma: no-cache
X-Content-Type-Options: nosniff
X-XSS-Protection: 1; mode=block
X-FRAME-OPTIONS: SAMEORIGIN
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 422
</msg>
<status status="PASS" starttime="20230923 10:39:02.505" endtime="20230923 10:39:02.506"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:39:02.508" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:39:02.506" endtime="20230923 10:39:02.508"/>
</kw>
<status status="PASS" starttime="20230923 10:39:02.487" endtime="20230923 10:39:02.509"/>
</kw>
<msg timestamp="20230923 10:39:02.509" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:39:02.487" endtime="20230923 10:39:02.509"/>
</kw>
<msg timestamp="20230923 10:39:02.509" level="INFO">${result} = * About to connect() to om port 9874 (#0)
*   Trying 172.20.0.2...
* Connected to om (172.20.0.2) port 9874 (#0)
&gt; HEAD /dbCheckpoint HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt;...</msg>
<status status="PASS" starttime="20230923 10:39:02.486" endtime="20230923 10:39:02.509"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>401 Authentication required</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:39:02.509" endtime="20230923 10:39:02.510"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:39:02.516" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:39:02.520" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:39:02.520" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230923 10:39:02.513" endtime="20230923 10:39:02.520"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:39:02.521" level="INFO">scm</msg>
<status status="PASS" starttime="20230923 10:39:02.521" endtime="20230923 10:39:02.521"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:39:02.522" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:39:02.522" endtime="20230923 10:39:02.522"/>
</kw>
<status status="PASS" starttime="20230923 10:39:02.513" endtime="20230923 10:39:02.522"/>
</kw>
<msg timestamp="20230923 10:39:02.523" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:39:02.512" endtime="20230923 10:39:02.523"/>
</kw>
<msg timestamp="20230923 10:39:02.523" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230923 10:39:02.512" endtime="20230923 10:39:02.523"/>
</kw>
<msg timestamp="20230923 10:39:02.523" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230923 10:39:02.511" endtime="20230923 10:39:02.523"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230923 10:39:02.524" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230923 10:39:02.523" endtime="20230923 10:39:02.524"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:39:02.528" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:39:02.596" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:39:02.596" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:39:02.526" endtime="20230923 10:39:02.596"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:39:02.597" level="INFO"/>
<status status="PASS" starttime="20230923 10:39:02.597" endtime="20230923 10:39:02.598"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:39:02.598" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:39:02.598" endtime="20230923 10:39:02.598"/>
</kw>
<status status="PASS" starttime="20230923 10:39:02.525" endtime="20230923 10:39:02.598"/>
</kw>
<msg timestamp="20230923 10:39:02.598" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:39:02.525" endtime="20230923 10:39:02.599"/>
</kw>
<status status="PASS" starttime="20230923 10:39:02.525" endtime="20230923 10:39:02.599"/>
</kw>
<status status="PASS" starttime="20230923 10:39:02.524" endtime="20230923 10:39:02.599"/>
</kw>
<status status="PASS" starttime="20230923 10:39:02.510" endtime="20230923 10:39:02.599"/>
</kw>
<status status="PASS" starttime="20230923 10:39:02.510" endtime="20230923 10:39:02.599"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:39:02.603" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://om:9874/dbCheckpoint 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:39:03.740" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:39:03.741" level="INFO">${output} = * About to connect() to om port 9874 (#0)
*   Trying 172.20.0.2...
* Connected to om (172.20.0.2) port 9874 (#0)
&gt; HEAD /dbCheckpoint HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt;...</msg>
<status status="PASS" starttime="20230923 10:39:02.600" endtime="20230923 10:39:03.741"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:39:03.742" level="INFO">* About to connect() to om port 9874 (#0)
*   Trying 172.20.0.2...
* Connected to om (172.20.0.2) port 9874 (#0)
&gt; HEAD /dbCheckpoint HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Authentication required
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-XSS-Protection: 1; mode=block
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 422
&lt; 
* Connection #0 to host om left intact
* Issue another request to this URL: 'http://om:9874/dbCheckpoint'
* Found bundle for host om: 0x255cfa0
* Re-using existing connection! (#0) with host om
* Connected to om (172.20.0.2) port 9874 (#0)
* Server auth using GSS-Negotiate with user ''
&gt; HEAD /dbCheckpoint HTTP/1.1
&gt; Authorization: Negotiate YIICWAYJKoZIhvcSAQICAQBuggJHMIICQ6ADAgEFoQMCAQ6iBwMFACAAAACjggFTYYIBTzCCAUugAwIBBaENGwtFWEFNUExFLkNPTaIVMBOgAwIBA6EMMAobBEhUVFAbAm9to4IBHDCCARigAwIBEqEDAgEBooIBCgSCAQbgSHGPGq7F3enqeJfRYcXyjZqKjro426ZZzReYdGV3Mm6ylRaURDEmW4pfNGpUY6/6jMuMQFizxqlT/TCYU2K74af4p6LOs5+dKSIaGpn65knpANjPZvhvJUgFH1FDMMjDL5uQO6DoVmrPuAYtM22ru1kybKskf1Y2iycJ/+KdpmK+D6csw8XlaMxshWVFXGOOrYIzkMgvf6exwKQWZT3igETW9vhsjtjCD1oNUO6ackhyZA8JmR+wwTKzteMJ3fmUjqFNB5JVAHCHnp+M67PzXRTMUm6enU8emxPtdMpbmnjD4iOML9RSJI83uX7WOl1M2Zx0yKG/JHCQQLhwGY7kyWT/eNJ+pIHWMIHToAMCARKigcsEgcikRZd8zp2WeD3FN78Imbxo9M8IyrHfrvTWVxZEHfVLU47nh8dM2Z9mYRuZX8iw+O++I/jKmwHhVIJqulLMbyIElJPFI2TgFKZ067YOXyHXPDbkEQsc5tXmrQok39UE+gzZCISBva5ElOD57th9iArepgby+Dap++a7v6PdBms6rKqhdiN8ReS209GT0G+q+7F7QSX2mGB6Kd17FgMNJMsVr12wD6CgiIAwurpxi3PI00T+ruwU9T685ZLDWJ3fKUShELn/HbrMQQ==
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Sat, 23 Sep 2023 10:39:02 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Sat, 23 Sep 2023 10:39:02 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/x-tar
&lt; X-Content-Type-Options: nosniff
&lt; X-XSS-Protection: 1; mode=block
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARC9fX6dmjlEI90DcDqRMwZQgoEmr3BbLUaPGxSmpbIDq4V2HIuJfqw8l32ahvMEh9UUbCKG/NOoIRCQM6YB9DT/GWz
&lt; Set-Cookie: hadoop.auth="u=testuser&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1695501542663&amp;s=je2Y0qR6hERwDcqN9d7SwRuKm2s/e4/UahK4ycruvoc="; Path=/; HttpOnly
&lt; Content-Disposition: attachment; filename="om.db_checkpoint_1695465543649.tar"
&lt; Content-Length: 168448
&lt; 
* Closing connection 0
HTTP/1.1 401 Authentication required
Pragma: no-cache
X-Content-Type-Options: nosniff
X-XSS-Protection: 1; mode=block
X-FRAME-OPTIONS: SAMEORIGIN
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 422

HTTP/1.1 200 OK
Date: Sat, 23 Sep 2023 10:39:02 GMT
Cache-Control: no-cache
Expires: Sat, 23 Sep 2023 10:39:02 GMT
Pragma: no-cache
Content-Type: application/x-tar
X-Content-Type-Options: nosniff
X-XSS-Protection: 1; mode=block
X-FRAME-OPTIONS: SAMEORIGIN
WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARC9fX6dmjlEI90DcDqRMwZQgoEmr3BbLUaPGxSmpbIDq4V2HIuJfqw8l32ahvMEh9UUbCKG/NOoIRCQM6YB9DT/GWz
Set-Cookie: hadoop.auth="u=testuser&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1695501542663&amp;s=je2Y0qR6hERwDcqN9d7SwRuKm2s/e4/UahK4ycruvoc="; Path=/; HttpOnly
Content-Disposition: attachment; filename="om.db_checkpoint_1695465543649.tar"
Content-Length: 168448
</msg>
<status status="PASS" starttime="20230923 10:39:03.741" endtime="20230923 10:39:03.742"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:39:03.743" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:39:03.743" endtime="20230923 10:39:03.743"/>
</kw>
<status status="PASS" starttime="20230923 10:39:02.600" endtime="20230923 10:39:03.743"/>
</kw>
<msg timestamp="20230923 10:39:03.743" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:39:02.600" endtime="20230923 10:39:03.744"/>
</kw>
<msg timestamp="20230923 10:39:03.744" level="INFO">${result} = * About to connect() to om port 9874 (#0)
*   Trying 172.20.0.2...
* Connected to om (172.20.0.2) port 9874 (#0)
&gt; HEAD /dbCheckpoint HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt;...</msg>
<status status="PASS" starttime="20230923 10:39:02.599" endtime="20230923 10:39:03.744"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200 OK</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:39:03.744" endtime="20230923 10:39:03.745"/>
</kw>
<status status="PASS" starttime="20230923 10:39:02.473" endtime="20230923 10:39:03.745"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230923 10:39:02.472" endtime="20230923 10:39:03.746"/>
</test>
<test id="s1-s9-s1-t3" name="Test OM Service List" line="59">
<kw name="Verify SPNEGO enabled URL">
<arg>${OM_SERVICE_LIST_URL}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Execute</arg>
<arg>kdestroy</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:39:03.754" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:39:03.758" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:39:03.758" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:39:03.751" endtime="20230923 10:39:03.758"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:39:03.760" level="INFO"/>
<status status="PASS" starttime="20230923 10:39:03.759" endtime="20230923 10:39:03.760"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:39:03.760" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:39:03.760" endtime="20230923 10:39:03.761"/>
</kw>
<status status="PASS" starttime="20230923 10:39:03.750" endtime="20230923 10:39:03.761"/>
</kw>
<msg timestamp="20230923 10:39:03.761" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:39:03.750" endtime="20230923 10:39:03.761"/>
</kw>
<status status="PASS" starttime="20230923 10:39:03.749" endtime="20230923 10:39:03.761"/>
</kw>
<status status="PASS" starttime="20230923 10:39:03.748" endtime="20230923 10:39:03.761"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:39:03.766" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://om:9874/serviceList 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:39:03.780" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:39:03.780" level="INFO">${output} = * About to connect() to om port 9874 (#0)
*   Trying 172.20.0.2...
* Connected to om (172.20.0.2) port 9874 (#0)
&gt; HEAD /serviceList HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; ...</msg>
<status status="PASS" starttime="20230923 10:39:03.763" endtime="20230923 10:39:03.780"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:39:03.782" level="INFO">* About to connect() to om port 9874 (#0)
*   Trying 172.20.0.2...
* Connected to om (172.20.0.2) port 9874 (#0)
&gt; HEAD /serviceList HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Authentication required
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-XSS-Protection: 1; mode=block
&lt; X-FRAME-OPTIONS: SAMEORIGIN
* gss_init_sec_context() failed: : No Kerberos credentials available (default cache: FILE:/tmp/krb5cc_1000)
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 420
&lt; 
* Connection #0 to host om left intact
HTTP/1.1 401 Authentication required
Pragma: no-cache
X-Content-Type-Options: nosniff
X-XSS-Protection: 1; mode=block
X-FRAME-OPTIONS: SAMEORIGIN
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 420
</msg>
<status status="PASS" starttime="20230923 10:39:03.781" endtime="20230923 10:39:03.782"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:39:03.783" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:39:03.782" endtime="20230923 10:39:03.783"/>
</kw>
<status status="PASS" starttime="20230923 10:39:03.763" endtime="20230923 10:39:03.783"/>
</kw>
<msg timestamp="20230923 10:39:03.783" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:39:03.762" endtime="20230923 10:39:03.783"/>
</kw>
<msg timestamp="20230923 10:39:03.783" level="INFO">${result} = * About to connect() to om port 9874 (#0)
*   Trying 172.20.0.2...
* Connected to om (172.20.0.2) port 9874 (#0)
&gt; HEAD /serviceList HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; ...</msg>
<status status="PASS" starttime="20230923 10:39:03.761" endtime="20230923 10:39:03.783"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>401 Authentication required</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:39:03.784" endtime="20230923 10:39:03.784"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:39:03.790" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:39:03.794" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:39:03.794" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230923 10:39:03.788" endtime="20230923 10:39:03.794"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:39:03.795" level="INFO">scm</msg>
<status status="PASS" starttime="20230923 10:39:03.794" endtime="20230923 10:39:03.795"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:39:03.796" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:39:03.796" endtime="20230923 10:39:03.796"/>
</kw>
<status status="PASS" starttime="20230923 10:39:03.787" endtime="20230923 10:39:03.796"/>
</kw>
<msg timestamp="20230923 10:39:03.797" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:39:03.787" endtime="20230923 10:39:03.797"/>
</kw>
<msg timestamp="20230923 10:39:03.797" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230923 10:39:03.786" endtime="20230923 10:39:03.797"/>
</kw>
<msg timestamp="20230923 10:39:03.797" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230923 10:39:03.786" endtime="20230923 10:39:03.797"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230923 10:39:03.798" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230923 10:39:03.797" endtime="20230923 10:39:03.798"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:39:03.803" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:39:03.831" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:39:03.831" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:39:03.801" endtime="20230923 10:39:03.831"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:39:03.832" level="INFO"/>
<status status="PASS" starttime="20230923 10:39:03.831" endtime="20230923 10:39:03.832"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:39:03.833" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:39:03.833" endtime="20230923 10:39:03.833"/>
</kw>
<status status="PASS" starttime="20230923 10:39:03.800" endtime="20230923 10:39:03.833"/>
</kw>
<msg timestamp="20230923 10:39:03.834" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:39:03.799" endtime="20230923 10:39:03.834"/>
</kw>
<status status="PASS" starttime="20230923 10:39:03.799" endtime="20230923 10:39:03.834"/>
</kw>
<status status="PASS" starttime="20230923 10:39:03.798" endtime="20230923 10:39:03.834"/>
</kw>
<status status="PASS" starttime="20230923 10:39:03.785" endtime="20230923 10:39:03.834"/>
</kw>
<status status="PASS" starttime="20230923 10:39:03.784" endtime="20230923 10:39:03.834"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:39:03.838" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://om:9874/serviceList 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:39:03.906" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:39:03.907" level="INFO">${output} = * About to connect() to om port 9874 (#0)
*   Trying 172.20.0.2...
* Connected to om (172.20.0.2) port 9874 (#0)
&gt; HEAD /serviceList HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; ...</msg>
<status status="PASS" starttime="20230923 10:39:03.836" endtime="20230923 10:39:03.907"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:39:03.908" level="INFO">* About to connect() to om port 9874 (#0)
*   Trying 172.20.0.2...
* Connected to om (172.20.0.2) port 9874 (#0)
&gt; HEAD /serviceList HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Authentication required
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-XSS-Protection: 1; mode=block
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 420
&lt; 
* Connection #0 to host om left intact
* Issue another request to this URL: 'http://om:9874/serviceList'
* Found bundle for host om: 0x13a9fa0
* Re-using existing connection! (#0) with host om
* Connected to om (172.20.0.2) port 9874 (#0)
* Server auth using GSS-Negotiate with user ''
&gt; HEAD /serviceList HTTP/1.1
&gt; Authorization: Negotiate YIICWAYJKoZIhvcSAQICAQBuggJHMIICQ6ADAgEFoQMCAQ6iBwMFACAAAACjggFTYYIBTzCCAUugAwIBBaENGwtFWEFNUExFLkNPTaIVMBOgAwIBA6EMMAobBEhUVFAbAm9to4IBHDCCARigAwIBEqEDAgEBooIBCgSCAQYKJV5VOsbIOIzwtjeKgnqId0D6nQOQT3xov3LXEJ+JUg2+WjB8lJFh5RTmQ64CovcvVlYgcBWBgNJd37OcRAkCfckv7xUKWzIFBOp5mo7Cw+R4HRmvuTeh6pTAaqkWnsNcgFGC5Pmf3zeq6Oyrji1RCpjy+DXC4cE4rWur7/GiJ9bnu2xdzPuQaKkE9QFrObmfua57hfbiLLPGhXaw9chb/4yRsQvVvEWTajOi7BDTCD0gBH5vDS0RayVTJnf29AKfX27/GF1SXcYGbv6K1iJXsRGzCXZU8AHQTd19Cx79eme3I5ybKWVouK0lyTGk8frOHvSIBZ/V0OEMRol0fP4wI0kH2Z7jpIHWMIHToAMCARKigcsEgciZxiqaag5jVUlzX8CNnsCl4V67TlBVDwpkC9TEjwMYISBQ8el6ZaAiLK/koHokeBny8Hpebe0Dm4tXg1LwjokSoT9FtR0HhjtBNKsBy8/MuiiyJV6mBfOisr+8QQC7UieIF40qEoAY24oxzm0+9+bcJgg9lh4wr3fE2gDptQfobx4ef55fjDUBcBWDP2f6gnXoc/O0ky+aQJUBSkIkOUhhkZBA+nzYQ82OkLuF0DFDcZmkO0fh9o1Enzy+d5bcZZ0MAaITi14OMA==
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Sat, 23 Sep 2023 10:39:03 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Sat, 23 Sep 2023 10:39:03 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json; charset=utf8
&lt; X-Content-Type-Options: nosniff
&lt; X-XSS-Protection: 1; mode=block
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARC4uifmETM3BKWBtJouctCHz9u5UHgwgPR3qr8boGf2VlXmnAuePp58XiDPJ8GHkBA0g1jDTngk0DFg86VDqFm50WJ
&lt; Set-Cookie: hadoop.auth="u=testuser&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1695501543886&amp;s=WUdLH+LsJqoPDe3dkkhoaFn0k+UBTJyI4SiTfnyVjV4="; Path=/; HttpOnly
&lt; Content-Length: 227
&lt; 
* Closing connection 0
HTTP/1.1 401 Authentication required
Pragma: no-cache
X-Content-Type-Options: nosniff
X-XSS-Protection: 1; mode=block
X-FRAME-OPTIONS: SAMEORIGIN
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 420

HTTP/1.1 200 OK
Date: Sat, 23 Sep 2023 10:39:03 GMT
Cache-Control: no-cache
Expires: Sat, 23 Sep 2023 10:39:03 GMT
Pragma: no-cache
Content-Type: application/json; charset=utf8
X-Content-Type-Options: nosniff
X-XSS-Protection: 1; mode=block
X-FRAME-OPTIONS: SAMEORIGIN
WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARC4uifmETM3BKWBtJouctCHz9u5UHgwgPR3qr8boGf2VlXmnAuePp58XiDPJ8GHkBA0g1jDTngk0DFg86VDqFm50WJ
Set-Cookie: hadoop.auth="u=testuser&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1695501543886&amp;s=WUdLH+LsJqoPDe3dkkhoaFn0k+UBTJyI4SiTfnyVjV4="; Path=/; HttpOnly
Content-Length: 227
</msg>
<status status="PASS" starttime="20230923 10:39:03.907" endtime="20230923 10:39:03.908"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:39:03.909" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:39:03.909" endtime="20230923 10:39:03.909"/>
</kw>
<status status="PASS" starttime="20230923 10:39:03.835" endtime="20230923 10:39:03.910"/>
</kw>
<msg timestamp="20230923 10:39:03.910" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:39:03.835" endtime="20230923 10:39:03.910"/>
</kw>
<msg timestamp="20230923 10:39:03.910" level="INFO">${result} = * About to connect() to om port 9874 (#0)
*   Trying 172.20.0.2...
* Connected to om (172.20.0.2) port 9874 (#0)
&gt; HEAD /serviceList HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; ...</msg>
<status status="PASS" starttime="20230923 10:39:03.834" endtime="20230923 10:39:03.910"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200 OK</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:39:03.910" endtime="20230923 10:39:03.911"/>
</kw>
<status status="PASS" starttime="20230923 10:39:03.748" endtime="20230923 10:39:03.911"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230923 10:39:03.747" endtime="20230923 10:39:03.911"/>
</test>
<test id="s1-s9-s1-t4" name="Test SCM portal" line="62">
<kw name="Verify SPNEGO enabled URL">
<arg>${SCM_URL}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Execute</arg>
<arg>kdestroy</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:39:03.919" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:39:03.924" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:39:03.924" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:39:03.916" endtime="20230923 10:39:03.924"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:39:03.925" level="INFO"/>
<status status="PASS" starttime="20230923 10:39:03.925" endtime="20230923 10:39:03.925"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:39:03.926" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:39:03.925" endtime="20230923 10:39:03.926"/>
</kw>
<status status="PASS" starttime="20230923 10:39:03.915" endtime="20230923 10:39:03.926"/>
</kw>
<msg timestamp="20230923 10:39:03.926" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:39:03.915" endtime="20230923 10:39:03.926"/>
</kw>
<status status="PASS" starttime="20230923 10:39:03.915" endtime="20230923 10:39:03.927"/>
</kw>
<status status="PASS" starttime="20230923 10:39:03.914" endtime="20230923 10:39:03.927"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:39:03.930" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://scm:9876 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:39:03.955" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:39:03.955" level="INFO">${output} = * About to connect() to scm port 9876 (#0)
*   Trying 172.20.0.5...
* Connected to scm (172.20.0.5) port 9876 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: scm:9876
&gt; Accept: */*
&gt; 
&lt; HTTP/...</msg>
<status status="PASS" starttime="20230923 10:39:03.928" endtime="20230923 10:39:03.955"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:39:03.956" level="INFO">* About to connect() to scm port 9876 (#0)
*   Trying 172.20.0.5...
* Connected to scm (172.20.0.5) port 9876 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: scm:9876
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Authentication required
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-XSS-Protection: 1; mode=block
&lt; X-FRAME-OPTIONS: SAMEORIGIN
* gss_init_sec_context() failed: : No Kerberos credentials available (default cache: FILE:/tmp/krb5cc_1000)
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 447
&lt; 
* Connection #0 to host scm left intact
HTTP/1.1 401 Authentication required
Pragma: no-cache
X-Content-Type-Options: nosniff
X-XSS-Protection: 1; mode=block
X-FRAME-OPTIONS: SAMEORIGIN
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 447
</msg>
<status status="PASS" starttime="20230923 10:39:03.956" endtime="20230923 10:39:03.957"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:39:03.957" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:39:03.957" endtime="20230923 10:39:03.957"/>
</kw>
<status status="PASS" starttime="20230923 10:39:03.928" endtime="20230923 10:39:03.958"/>
</kw>
<msg timestamp="20230923 10:39:03.958" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:39:03.927" endtime="20230923 10:39:03.958"/>
</kw>
<msg timestamp="20230923 10:39:03.958" level="INFO">${result} = * About to connect() to scm port 9876 (#0)
*   Trying 172.20.0.5...
* Connected to scm (172.20.0.5) port 9876 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: scm:9876
&gt; Accept: */*
&gt; 
&lt; HTTP/...</msg>
<status status="PASS" starttime="20230923 10:39:03.927" endtime="20230923 10:39:03.958"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>401 Authentication required</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:39:03.958" endtime="20230923 10:39:03.959"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:39:03.965" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:39:03.969" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:39:03.969" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230923 10:39:03.962" endtime="20230923 10:39:03.969"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:39:03.971" level="INFO">scm</msg>
<status status="PASS" starttime="20230923 10:39:03.970" endtime="20230923 10:39:03.971"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:39:03.971" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:39:03.971" endtime="20230923 10:39:03.972"/>
</kw>
<status status="PASS" starttime="20230923 10:39:03.962" endtime="20230923 10:39:03.972"/>
</kw>
<msg timestamp="20230923 10:39:03.972" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:39:03.962" endtime="20230923 10:39:03.972"/>
</kw>
<msg timestamp="20230923 10:39:03.972" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230923 10:39:03.961" endtime="20230923 10:39:03.972"/>
</kw>
<msg timestamp="20230923 10:39:03.973" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230923 10:39:03.960" endtime="20230923 10:39:03.973"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230923 10:39:03.973" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230923 10:39:03.973" endtime="20230923 10:39:03.973"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:39:03.978" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:39:03.996" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:39:03.996" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:39:03.975" endtime="20230923 10:39:03.996"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:39:03.997" level="INFO"/>
<status status="PASS" starttime="20230923 10:39:03.997" endtime="20230923 10:39:03.997"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:39:03.998" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:39:03.998" endtime="20230923 10:39:03.998"/>
</kw>
<status status="PASS" starttime="20230923 10:39:03.975" endtime="20230923 10:39:03.999"/>
</kw>
<msg timestamp="20230923 10:39:03.999" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:39:03.975" endtime="20230923 10:39:03.999"/>
</kw>
<status status="PASS" starttime="20230923 10:39:03.974" endtime="20230923 10:39:03.999"/>
</kw>
<status status="PASS" starttime="20230923 10:39:03.973" endtime="20230923 10:39:03.999"/>
</kw>
<status status="PASS" starttime="20230923 10:39:03.959" endtime="20230923 10:39:03.999"/>
</kw>
<status status="PASS" starttime="20230923 10:39:03.959" endtime="20230923 10:39:03.999"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:39:04.004" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://scm:9876 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:39:04.065" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:39:04.065" level="INFO">${output} = * About to connect() to scm port 9876 (#0)
*   Trying 172.20.0.5...
* Connected to scm (172.20.0.5) port 9876 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: scm:9876
&gt; Accept: */*
&gt; 
&lt; HTTP/...</msg>
<status status="PASS" starttime="20230923 10:39:04.001" endtime="20230923 10:39:04.065"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:39:04.067" level="INFO">* About to connect() to scm port 9876 (#0)
*   Trying 172.20.0.5...
* Connected to scm (172.20.0.5) port 9876 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: scm:9876
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Authentication required
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-XSS-Protection: 1; mode=block
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 447
&lt; 
* Connection #0 to host scm left intact
* Issue another request to this URL: 'http://scm:9876/'
* Found bundle for host scm: 0x1544f70
* Re-using existing connection! (#0) with host scm
* Connected to scm (172.20.0.5) port 9876 (#0)
* Server auth using GSS-Negotiate with user ''
&gt; HEAD / HTTP/1.1
&gt; Authorization: Negotiate YIICawYJKoZIhvcSAQICAQBuggJaMIICVqADAgEFoQMCAQ6iBwMFACAAAACjggFnYYIBYzCCAV+gAwIBBaENGwtFWEFNUExFLkNPTaIWMBSgAwIBA6ENMAsbBEhUVFAbA3NjbaOCAS8wggEroAMCARKhAwIBAaKCAR0EggEZQfbqnQ/KkrmO7JPNrKdhcgOc5XPp73jgUDSzI0KIZCjv3buGuYgreQR8n/1+ngbDQ6tAEVEoP4G6J3OXO4WKxENjJ0SDhi1OQQ5heu6ENl2r8lvqHYSRGF+lXo77xSGkS0OOHs2t23zVIAHrS2VFWFwWODaNfB5Rq1Tcrm5rcGuY2oLSxkVAJ7KrcLx+l2qQozWyoR4zuSTt/T6qHw7DZEdne0AFpMXWJzarKzCWKs6xWnSoBXG+pnoFhGIBI0RvkE+7rb5pWKptRV1RlJA3nA2udaGdOw3HvrlUh0SBUjk4PNkFcSvMgypPiX9jy2e8LQ/Ee4+SbN8MXeRjphrM3WmNnUQ+hkrH0xifNQkl/5O8A4Bk9sne8BCkgdUwgdKgAwIBEqKBygSBx/1YbG1EN9nixzeFVXN0vhClE7Q8emFd9lx53wleNhcR9Yf9DC9U2MvZSJbg9fo/FktJJutJm5oOXrQqVOjJQayPU0y0NkZfkhJU61h3GJZQnEEM6jx6KkvkleEVW355IcdOLhSreM49PZL9N8QkpryR9yxQiayvQFPqjqevdMFwYBi3c2FjlCSfNy4bFrHAXNvIs3bou718+Vp/q95/s6DZU1d3PjpSNVln3Gjeoqam5kZ4Q7HfTtchaOB7ufK6e42SEe4NbHY=
&gt; User-Agent: curl/7.29.0
&gt; Host: scm:9876
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Sat, 23 Sep 2023 10:39:04 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Sat, 23 Sep 2023 10:39:04 GMT
&lt; Pragma: no-cache
&lt; Content-Type: text/html
&lt; X-Content-Type-Options: nosniff
&lt; X-XSS-Protection: 1; mode=block
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; WWW-Authenticate: Negotiate YGkGCSqGSIb3EgECAgIAb1owWKADAgEFoQMCAQ+iTDBKoAMCARKiQwRBUjZCYoTgntKVkkknTLya+cAQCJuFGmFXxijCBrV7GmOx1LtroxihGnoiIavuWUkY1m1HlmAHnSgp0SqqcZMSAIw=
&lt; Set-Cookie: hadoop.auth="u=testuser&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1695501544057&amp;s=XiAY3pcNdCIDpGd6WwUkicUHzxgrcZuLA89bKyFjGP0="; Path=/; HttpOnly
&lt; Last-Modified: Sat, 23 Sep 2023 09:21:44 GMT
&lt; Accept-Ranges: bytes
&lt; Content-Length: 2923
&lt; 
* Closing connection 0
HTTP/1.1 401 Authentication required
Pragma: no-cache
X-Content-Type-Options: nosniff
X-XSS-Protection: 1; mode=block
X-FRAME-OPTIONS: SAMEORIGIN
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 447

HTTP/1.1 200 OK
Date: Sat, 23 Sep 2023 10:39:04 GMT
Cache-Control: no-cache
Expires: Sat, 23 Sep 2023 10:39:04 GMT
Pragma: no-cache
Content-Type: text/html
X-Content-Type-Options: nosniff
X-XSS-Protection: 1; mode=block
X-FRAME-OPTIONS: SAMEORIGIN
WWW-Authenticate: Negotiate YGkGCSqGSIb3EgECAgIAb1owWKADAgEFoQMCAQ+iTDBKoAMCARKiQwRBUjZCYoTgntKVkkknTLya+cAQCJuFGmFXxijCBrV7GmOx1LtroxihGnoiIavuWUkY1m1HlmAHnSgp0SqqcZMSAIw=
Set-Cookie: hadoop.auth="u=testuser&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1695501544057&amp;s=XiAY3pcNdCIDpGd6WwUkicUHzxgrcZuLA89bKyFjGP0="; Path=/; HttpOnly
Last-Modified: Sat, 23 Sep 2023 09:21:44 GMT
Accept-Ranges: bytes
Content-Length: 2923
</msg>
<status status="PASS" starttime="20230923 10:39:04.066" endtime="20230923 10:39:04.067"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:39:04.068" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:39:04.067" endtime="20230923 10:39:04.068"/>
</kw>
<status status="PASS" starttime="20230923 10:39:04.000" endtime="20230923 10:39:04.068"/>
</kw>
<msg timestamp="20230923 10:39:04.069" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:39:04.000" endtime="20230923 10:39:04.069"/>
</kw>
<msg timestamp="20230923 10:39:04.069" level="INFO">${result} = * About to connect() to scm port 9876 (#0)
*   Trying 172.20.0.5...
* Connected to scm (172.20.0.5) port 9876 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: scm:9876
&gt; Accept: */*
&gt; 
&lt; HTTP/...</msg>
<status status="PASS" starttime="20230923 10:39:03.999" endtime="20230923 10:39:04.069"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200 OK</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:39:04.069" endtime="20230923 10:39:04.070"/>
</kw>
<status status="PASS" starttime="20230923 10:39:03.913" endtime="20230923 10:39:04.070"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230923 10:39:03.912" endtime="20230923 10:39:04.071"/>
</test>
<test id="s1-s9-s1-t5" name="Test SCM conf" line="65">
<kw name="Verify SPNEGO enabled URL">
<arg>${SCM_CONF_URL}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Execute</arg>
<arg>kdestroy</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:39:04.079" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:39:04.084" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:39:04.084" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:39:04.077" endtime="20230923 10:39:04.084"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:39:04.085" level="INFO"/>
<status status="PASS" starttime="20230923 10:39:04.085" endtime="20230923 10:39:04.085"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:39:04.086" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:39:04.086" endtime="20230923 10:39:04.086"/>
</kw>
<status status="PASS" starttime="20230923 10:39:04.076" endtime="20230923 10:39:04.086"/>
</kw>
<msg timestamp="20230923 10:39:04.087" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:39:04.075" endtime="20230923 10:39:04.087"/>
</kw>
<status status="PASS" starttime="20230923 10:39:04.075" endtime="20230923 10:39:04.087"/>
</kw>
<status status="PASS" starttime="20230923 10:39:04.074" endtime="20230923 10:39:04.087"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:39:04.091" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://scm:9876/conf 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:39:04.114" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:39:04.114" level="INFO">${output} = * About to connect() to scm port 9876 (#0)
*   Trying 172.20.0.5...
* Connected to scm (172.20.0.5) port 9876 (#0)
&gt; HEAD /conf HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: scm:9876
&gt; Accept: */*
&gt; 
&lt; H...</msg>
<status status="PASS" starttime="20230923 10:39:04.089" endtime="20230923 10:39:04.114"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:39:04.116" level="INFO">* About to connect() to scm port 9876 (#0)
*   Trying 172.20.0.5...
* Connected to scm (172.20.0.5) port 9876 (#0)
&gt; HEAD /conf HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: scm:9876
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Authentication required
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-XSS-Protection: 1; mode=block
&lt; X-FRAME-OPTIONS: SAMEORIGIN
* gss_init_sec_context() failed: : No Kerberos credentials available (default cache: FILE:/tmp/krb5cc_1000)
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 406
&lt; 
* Connection #0 to host scm left intact
HTTP/1.1 401 Authentication required
Pragma: no-cache
X-Content-Type-Options: nosniff
X-XSS-Protection: 1; mode=block
X-FRAME-OPTIONS: SAMEORIGIN
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 406
</msg>
<status status="PASS" starttime="20230923 10:39:04.115" endtime="20230923 10:39:04.116"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:39:04.117" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:39:04.116" endtime="20230923 10:39:04.117"/>
</kw>
<status status="PASS" starttime="20230923 10:39:04.088" endtime="20230923 10:39:04.117"/>
</kw>
<msg timestamp="20230923 10:39:04.117" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:39:04.088" endtime="20230923 10:39:04.117"/>
</kw>
<msg timestamp="20230923 10:39:04.117" level="INFO">${result} = * About to connect() to scm port 9876 (#0)
*   Trying 172.20.0.5...
* Connected to scm (172.20.0.5) port 9876 (#0)
&gt; HEAD /conf HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: scm:9876
&gt; Accept: */*
&gt; 
&lt; H...</msg>
<status status="PASS" starttime="20230923 10:39:04.087" endtime="20230923 10:39:04.118"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>401 Authentication required</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:39:04.118" endtime="20230923 10:39:04.118"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:39:04.125" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:39:04.130" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:39:04.130" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230923 10:39:04.122" endtime="20230923 10:39:04.130"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:39:04.131" level="INFO">scm</msg>
<status status="PASS" starttime="20230923 10:39:04.130" endtime="20230923 10:39:04.131"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:39:04.132" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:39:04.131" endtime="20230923 10:39:04.132"/>
</kw>
<status status="PASS" starttime="20230923 10:39:04.121" endtime="20230923 10:39:04.132"/>
</kw>
<msg timestamp="20230923 10:39:04.132" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:39:04.121" endtime="20230923 10:39:04.132"/>
</kw>
<msg timestamp="20230923 10:39:04.133" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230923 10:39:04.121" endtime="20230923 10:39:04.133"/>
</kw>
<msg timestamp="20230923 10:39:04.133" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230923 10:39:04.120" endtime="20230923 10:39:04.133"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230923 10:39:04.134" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230923 10:39:04.133" endtime="20230923 10:39:04.134"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:39:04.138" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:39:04.156" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:39:04.156" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:39:04.136" endtime="20230923 10:39:04.156"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:39:04.158" level="INFO"/>
<status status="PASS" starttime="20230923 10:39:04.157" endtime="20230923 10:39:04.158"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:39:04.159" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:39:04.158" endtime="20230923 10:39:04.159"/>
</kw>
<status status="PASS" starttime="20230923 10:39:04.135" endtime="20230923 10:39:04.159"/>
</kw>
<msg timestamp="20230923 10:39:04.159" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:39:04.135" endtime="20230923 10:39:04.160"/>
</kw>
<status status="PASS" starttime="20230923 10:39:04.134" endtime="20230923 10:39:04.160"/>
</kw>
<status status="PASS" starttime="20230923 10:39:04.134" endtime="20230923 10:39:04.160"/>
</kw>
<status status="PASS" starttime="20230923 10:39:04.119" endtime="20230923 10:39:04.160"/>
</kw>
<status status="PASS" starttime="20230923 10:39:04.118" endtime="20230923 10:39:04.160"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:39:04.164" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://scm:9876/conf 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:39:04.401" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:39:04.401" level="INFO">${output} = * About to connect() to scm port 9876 (#0)
*   Trying 172.20.0.5...
* Connected to scm (172.20.0.5) port 9876 (#0)
&gt; HEAD /conf HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: scm:9876
&gt; Accept: */*
&gt; 
&lt; H...</msg>
<status status="PASS" starttime="20230923 10:39:04.162" endtime="20230923 10:39:04.401"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:39:04.403" level="INFO">* About to connect() to scm port 9876 (#0)
*   Trying 172.20.0.5...
* Connected to scm (172.20.0.5) port 9876 (#0)
&gt; HEAD /conf HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: scm:9876
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Authentication required
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-XSS-Protection: 1; mode=block
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 406
&lt; 
* Connection #0 to host scm left intact
* Issue another request to this URL: 'http://scm:9876/conf'
* Found bundle for host scm: 0x194df50
* Re-using existing connection! (#0) with host scm
* Connected to scm (172.20.0.5) port 9876 (#0)
* Server auth using GSS-Negotiate with user ''
&gt; HEAD /conf HTTP/1.1
&gt; Authorization: Negotiate YIICWQYJKoZIhvcSAQICAQBuggJIMIICRKADAgEFoQMCAQ6iBwMFACAAAACjggFUYYIBUDCCAUygAwIBBaENGwtFWEFNUExFLkNPTaIWMBSgAwIBA6ENMAsbBEhUVFAbA3NjbaOCARwwggEYoAMCARKhAwIBAaKCAQoEggEGOP2C10emBOAuUJ9BYd7UE7cxu81WSqy5g+d0DlmlxvAN+XO0+RktsBjoJIsY51cKTRFdr9p/Psn85726M8jmnyWMIeFzApfrpPsK45Q9p/UHSUHjXZpyxgDdYUGlT3MKT+eLOr/gCZlM4K6wh0z5t9mc5pYZqwycF5zgWaMM25vrcGKcqnU0AKYAzuC4oYQFrj7WV7s9T+Ik4zRpP5/W0a6KJ07ixbGib6rco3GToe8Kd4DGmW37BOWX1dE4/nHP37f8Z9zJ4bs4yOE8tPVykcrKcz9hmKpv9YwqOLht3Qj07u6AqahtXyf5ia6U2Eq3yJkCUDYob5bl677GTrrgjxSb48yytaSB1jCB06ADAgESooHLBIHIya8JvDQQF4P7rNe2TehNX35gEndvCqAa46G+jGVEeio3qOohKur+gl7g7bMNIcjSrFg6gzVvHEyxIuQ60qHoqGEXUULdNx+04QqBjEBboJHFskUTNhKc2zWdvgoWfD6IYM791hSwMKrTMXszf4EG2TyzPiI9fRXLnOgWgEmMsaeqolW5/rbIw7G0FD0Y1avKIYCmqVpY57DQnMcNzm4HihWk+0zYpsF1FghExn6OIFSZcpg0OiZGcLBZ7/+Tjke/ohYOLIWZIOA=
&gt; User-Agent: curl/7.29.0
&gt; Host: scm:9876
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Sat, 23 Sep 2023 10:39:04 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Sat, 23 Sep 2023 10:39:04 GMT
&lt; Pragma: no-cache
&lt; Content-Type: text/xml;charset=utf-8
&lt; X-Content-Type-Options: nosniff
&lt; X-XSS-Protection: 1; mode=block
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCQhrZj8Wp4wjIOuax2LJVXFwyyZ/5Hp/MUzla4BCz9cipMBSM39+H1iL2zY8a8HDeaLVrE9nYYj7Y+1kTg0O6oP0X
&lt; Set-Cookie: hadoop.auth="u=testuser&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1695501544201&amp;s=4W3EspHNIp04sLW540pSO5GGIeMbytZ6lBSWsEBnkN8="; Path=/; HttpOnly
&lt; Content-Length: 216065
&lt; 
* Closing connection 0
HTTP/1.1 401 Authentication required
Pragma: no-cache
X-Content-Type-Options: nosniff
X-XSS-Protection: 1; mode=block
X-FRAME-OPTIONS: SAMEORIGIN
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 406

HTTP/1.1 200 OK
Date: Sat, 23 Sep 2023 10:39:04 GMT
Cache-Control: no-cache
Expires: Sat, 23 Sep 2023 10:39:04 GMT
Pragma: no-cache
Content-Type: text/xml;charset=utf-8
X-Content-Type-Options: nosniff
X-XSS-Protection: 1; mode=block
X-FRAME-OPTIONS: SAMEORIGIN
WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCQhrZj8Wp4wjIOuax2LJVXFwyyZ/5Hp/MUzla4BCz9cipMBSM39+H1iL2zY8a8HDeaLVrE9nYYj7Y+1kTg0O6oP0X
Set-Cookie: hadoop.auth="u=testuser&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1695501544201&amp;s=4W3EspHNIp04sLW540pSO5GGIeMbytZ6lBSWsEBnkN8="; Path=/; HttpOnly
Content-Length: 216065
</msg>
<status status="PASS" starttime="20230923 10:39:04.402" endtime="20230923 10:39:04.403"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:39:04.404" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:39:04.403" endtime="20230923 10:39:04.404"/>
</kw>
<status status="PASS" starttime="20230923 10:39:04.161" endtime="20230923 10:39:04.404"/>
</kw>
<msg timestamp="20230923 10:39:04.404" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:39:04.161" endtime="20230923 10:39:04.404"/>
</kw>
<msg timestamp="20230923 10:39:04.405" level="INFO">${result} = * About to connect() to scm port 9876 (#0)
*   Trying 172.20.0.5...
* Connected to scm (172.20.0.5) port 9876 (#0)
&gt; HEAD /conf HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: scm:9876
&gt; Accept: */*
&gt; 
&lt; H...</msg>
<status status="PASS" starttime="20230923 10:39:04.160" endtime="20230923 10:39:04.405"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200 OK</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:39:04.405" endtime="20230923 10:39:04.405"/>
</kw>
<status status="PASS" starttime="20230923 10:39:04.073" endtime="20230923 10:39:04.406"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230923 10:39:04.072" endtime="20230923 10:39:04.406"/>
</test>
<test id="s1-s9-s1-t6" name="Test SCM jmx" line="68">
<kw name="Verify SPNEGO enabled URL">
<arg>${SCM_JMX_URL}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Execute</arg>
<arg>kdestroy</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:39:04.419" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:39:04.430" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:39:04.430" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:39:04.415" endtime="20230923 10:39:04.430"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:39:04.432" level="INFO"/>
<status status="PASS" starttime="20230923 10:39:04.431" endtime="20230923 10:39:04.432"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:39:04.432" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:39:04.432" endtime="20230923 10:39:04.432"/>
</kw>
<status status="PASS" starttime="20230923 10:39:04.414" endtime="20230923 10:39:04.433"/>
</kw>
<msg timestamp="20230923 10:39:04.433" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:39:04.413" endtime="20230923 10:39:04.433"/>
</kw>
<status status="PASS" starttime="20230923 10:39:04.412" endtime="20230923 10:39:04.433"/>
</kw>
<status status="PASS" starttime="20230923 10:39:04.411" endtime="20230923 10:39:04.433"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:39:04.437" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://scm:9876/jmx 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:39:04.453" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:39:04.453" level="INFO">${output} = * About to connect() to scm port 9876 (#0)
*   Trying 172.20.0.5...
* Connected to scm (172.20.0.5) port 9876 (#0)
&gt; HEAD /jmx HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: scm:9876
&gt; Accept: */*
&gt; 
&lt; HT...</msg>
<status status="PASS" starttime="20230923 10:39:04.435" endtime="20230923 10:39:04.453"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:39:04.454" level="INFO">* About to connect() to scm port 9876 (#0)
*   Trying 172.20.0.5...
* Connected to scm (172.20.0.5) port 9876 (#0)
&gt; HEAD /jmx HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: scm:9876
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Authentication required
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-XSS-Protection: 1; mode=block
&lt; X-FRAME-OPTIONS: SAMEORIGIN
* gss_init_sec_context() failed: : No Kerberos credentials available (default cache: FILE:/tmp/krb5cc_1000)
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 404
&lt; 
* Connection #0 to host scm left intact
HTTP/1.1 401 Authentication required
Pragma: no-cache
X-Content-Type-Options: nosniff
X-XSS-Protection: 1; mode=block
X-FRAME-OPTIONS: SAMEORIGIN
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 404
</msg>
<status status="PASS" starttime="20230923 10:39:04.453" endtime="20230923 10:39:04.454"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:39:04.455" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:39:04.455" endtime="20230923 10:39:04.455"/>
</kw>
<status status="PASS" starttime="20230923 10:39:04.434" endtime="20230923 10:39:04.455"/>
</kw>
<msg timestamp="20230923 10:39:04.456" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:39:04.434" endtime="20230923 10:39:04.456"/>
</kw>
<msg timestamp="20230923 10:39:04.456" level="INFO">${result} = * About to connect() to scm port 9876 (#0)
*   Trying 172.20.0.5...
* Connected to scm (172.20.0.5) port 9876 (#0)
&gt; HEAD /jmx HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: scm:9876
&gt; Accept: */*
&gt; 
&lt; HT...</msg>
<status status="PASS" starttime="20230923 10:39:04.433" endtime="20230923 10:39:04.456"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>401 Authentication required</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:39:04.456" endtime="20230923 10:39:04.457"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:39:04.463" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:39:04.471" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:39:04.471" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230923 10:39:04.460" endtime="20230923 10:39:04.472"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:39:04.473" level="INFO">scm</msg>
<status status="PASS" starttime="20230923 10:39:04.472" endtime="20230923 10:39:04.473"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:39:04.474" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:39:04.473" endtime="20230923 10:39:04.474"/>
</kw>
<status status="PASS" starttime="20230923 10:39:04.460" endtime="20230923 10:39:04.474"/>
</kw>
<msg timestamp="20230923 10:39:04.474" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:39:04.460" endtime="20230923 10:39:04.474"/>
</kw>
<msg timestamp="20230923 10:39:04.475" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230923 10:39:04.459" endtime="20230923 10:39:04.475"/>
</kw>
<msg timestamp="20230923 10:39:04.475" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230923 10:39:04.458" endtime="20230923 10:39:04.475"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230923 10:39:04.476" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230923 10:39:04.475" endtime="20230923 10:39:04.476"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:39:04.480" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:39:04.507" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:39:04.507" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:39:04.478" endtime="20230923 10:39:04.507"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:39:04.509" level="INFO"/>
<status status="PASS" starttime="20230923 10:39:04.508" endtime="20230923 10:39:04.509"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:39:04.510" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:39:04.509" endtime="20230923 10:39:04.510"/>
</kw>
<status status="PASS" starttime="20230923 10:39:04.477" endtime="20230923 10:39:04.510"/>
</kw>
<msg timestamp="20230923 10:39:04.510" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:39:04.477" endtime="20230923 10:39:04.510"/>
</kw>
<status status="PASS" starttime="20230923 10:39:04.476" endtime="20230923 10:39:04.511"/>
</kw>
<status status="PASS" starttime="20230923 10:39:04.476" endtime="20230923 10:39:04.511"/>
</kw>
<status status="PASS" starttime="20230923 10:39:04.457" endtime="20230923 10:39:04.511"/>
</kw>
<status status="PASS" starttime="20230923 10:39:04.457" endtime="20230923 10:39:04.511"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:39:04.516" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://scm:9876/jmx 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:39:04.887" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:39:04.887" level="INFO">${output} = * About to connect() to scm port 9876 (#0)
*   Trying 172.20.0.5...
* Connected to scm (172.20.0.5) port 9876 (#0)
&gt; HEAD /jmx HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: scm:9876
&gt; Accept: */*
&gt; 
&lt; HT...</msg>
<status status="PASS" starttime="20230923 10:39:04.513" endtime="20230923 10:39:04.887"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:39:04.889" level="INFO">* About to connect() to scm port 9876 (#0)
*   Trying 172.20.0.5...
* Connected to scm (172.20.0.5) port 9876 (#0)
&gt; HEAD /jmx HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: scm:9876
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Authentication required
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-XSS-Protection: 1; mode=block
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 404
&lt; 
* Connection #0 to host scm left intact
* Issue another request to this URL: 'http://scm:9876/jmx'
* Found bundle for host scm: 0x21cdf50
* Re-using existing connection! (#0) with host scm
* Connected to scm (172.20.0.5) port 9876 (#0)
* Server auth using GSS-Negotiate with user ''
&gt; HEAD /jmx HTTP/1.1
&gt; Authorization: Negotiate YIICWQYJKoZIhvcSAQICAQBuggJIMIICRKADAgEFoQMCAQ6iBwMFACAAAACjggFUYYIBUDCCAUygAwIBBaENGwtFWEFNUExFLkNPTaIWMBSgAwIBA6ENMAsbBEhUVFAbA3NjbaOCARwwggEYoAMCARKhAwIBAaKCAQoEggEG6qtHv4MavSlGB/nZghcu/dXCftiS1gmZck6+MX8KfD4uw6B4ilsR4EKC5UJ1Ecsd+7xpOasFhehzlTjrUsB7UhvG4JPtlLM6FjAU3sYbR73TcEZ6exoVBGidm/pa2gqrfHHwFicQ3c5Fedh3qkUvtnt1Jao3mTx1Oi0fiIQ4CF6FcVTDm7HnZ6+cIownQ6UGFx5JDKFwb5skYpyEnnrM3VpJD8k3zU7qd1xYCRAdBax0ZPsEcplSBVcBkeYrbc2J1bQR8zE9dDqYwj2vcBkGSUEqo5gHolkKyxUd/J5kcHsgEhPs4poTt0+pcQccHonW9JKf/o8f5W6u6jt+kEdy2Zs8KSQrY6SB1jCB06ADAgESooHLBIHI3KKN3Vap/oCFPDlIXMabt1ZKD1rbjE6rmKDZE6jQLo4CORywjwb9rryYj8UxFVr+5x33FMbnckoLrgvi1nasg1O0ok4JEbj5ViCBe2oEYz56F63cwPH1SMLfcQrAAbpKxaPPlIL4HpriBMofoSicYqDargrAmKq1u/cCWEq98V0iK82rU1A/0RCWTbyj0ntlVB5e4TLCuK2L4BrWge3NlHWl5h6Qi4K9CedpHzUkYZWZiylsxqYKwq2v0wq19a7QIQducrtDE9s=
&gt; User-Agent: curl/7.29.0
&gt; Host: scm:9876
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Sat, 23 Sep 2023 10:39:04 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Sat, 23 Sep 2023 10:39:04 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json; charset=utf8
&lt; X-Content-Type-Options: nosniff
&lt; X-XSS-Protection: 1; mode=block
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCArWfntjKtvlAjTghxkQhP3TSAkx3c1RsazizjmnQDYGttM0kotdluqfSN8VB47VpHNJvzvHclyAtdn3zSNrN0stt
&lt; Set-Cookie: hadoop.auth="u=testuser&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1695501544545&amp;s=DMWVLPGSM0VbeL2KROiIt+Oyi290BfvKQmJLM01Om+4="; Path=/; HttpOnly
&lt; Access-Control-Allow-Methods: GET
&lt; Access-Control-Allow-Origin: *
&lt; Content-Length: 342765
&lt; 
* Closing connection 0
HTTP/1.1 401 Authentication required
Pragma: no-cache
X-Content-Type-Options: nosniff
X-XSS-Protection: 1; mode=block
X-FRAME-OPTIONS: SAMEORIGIN
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 404

HTTP/1.1 200 OK
Date: Sat, 23 Sep 2023 10:39:04 GMT
Cache-Control: no-cache
Expires: Sat, 23 Sep 2023 10:39:04 GMT
Pragma: no-cache
Content-Type: application/json; charset=utf8
X-Content-Type-Options: nosniff
X-XSS-Protection: 1; mode=block
X-FRAME-OPTIONS: SAMEORIGIN
WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCArWfntjKtvlAjTghxkQhP3TSAkx3c1RsazizjmnQDYGttM0kotdluqfSN8VB47VpHNJvzvHclyAtdn3zSNrN0stt
Set-Cookie: hadoop.auth="u=testuser&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1695501544545&amp;s=DMWVLPGSM0VbeL2KROiIt+Oyi290BfvKQmJLM01Om+4="; Path=/; HttpOnly
Access-Control-Allow-Methods: GET
Access-Control-Allow-Origin: *
Content-Length: 342765
</msg>
<status status="PASS" starttime="20230923 10:39:04.888" endtime="20230923 10:39:04.889"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:39:04.890" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:39:04.889" endtime="20230923 10:39:04.890"/>
</kw>
<status status="PASS" starttime="20230923 10:39:04.513" endtime="20230923 10:39:04.890"/>
</kw>
<msg timestamp="20230923 10:39:04.890" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:39:04.512" endtime="20230923 10:39:04.891"/>
</kw>
<msg timestamp="20230923 10:39:04.891" level="INFO">${result} = * About to connect() to scm port 9876 (#0)
*   Trying 172.20.0.5...
* Connected to scm (172.20.0.5) port 9876 (#0)
&gt; HEAD /jmx HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: scm:9876
&gt; Accept: */*
&gt; 
&lt; HT...</msg>
<status status="PASS" starttime="20230923 10:39:04.511" endtime="20230923 10:39:04.891"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200 OK</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:39:04.891" endtime="20230923 10:39:04.892"/>
</kw>
<status status="PASS" starttime="20230923 10:39:04.409" endtime="20230923 10:39:04.892"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230923 10:39:04.407" endtime="20230923 10:39:04.892"/>
</test>
<test id="s1-s9-s1-t7" name="Test SCM stacks" line="71">
<kw name="Verify SPNEGO enabled URL">
<arg>${SCM_STACKS_URL}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Execute</arg>
<arg>kdestroy</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:39:04.904" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:39:04.909" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:39:04.909" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:39:04.901" endtime="20230923 10:39:04.909"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:39:04.910" level="INFO"/>
<status status="PASS" starttime="20230923 10:39:04.910" endtime="20230923 10:39:04.910"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:39:04.911" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:39:04.911" endtime="20230923 10:39:04.911"/>
</kw>
<status status="PASS" starttime="20230923 10:39:04.900" endtime="20230923 10:39:04.912"/>
</kw>
<msg timestamp="20230923 10:39:04.912" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:39:04.900" endtime="20230923 10:39:04.912"/>
</kw>
<status status="PASS" starttime="20230923 10:39:04.899" endtime="20230923 10:39:04.912"/>
</kw>
<status status="PASS" starttime="20230923 10:39:04.899" endtime="20230923 10:39:04.912"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:39:04.916" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://scm:9876/stacks 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:39:04.932" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:39:04.932" level="INFO">${output} = * About to connect() to scm port 9876 (#0)
*   Trying 172.20.0.5...
* Connected to scm (172.20.0.5) port 9876 (#0)
&gt; HEAD /stacks HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: scm:9876
&gt; Accept: */*
&gt; 
&lt;...</msg>
<status status="PASS" starttime="20230923 10:39:04.914" endtime="20230923 10:39:04.932"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:39:04.933" level="INFO">* About to connect() to scm port 9876 (#0)
*   Trying 172.20.0.5...
* Connected to scm (172.20.0.5) port 9876 (#0)
&gt; HEAD /stacks HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: scm:9876
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Authentication required
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-XSS-Protection: 1; mode=block
&lt; X-FRAME-OPTIONS: SAMEORIGIN
* gss_init_sec_context() failed: : No Kerberos credentials available (default cache: FILE:/tmp/krb5cc_1000)
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 410
&lt; 
* Connection #0 to host scm left intact
HTTP/1.1 401 Authentication required
Pragma: no-cache
X-Content-Type-Options: nosniff
X-XSS-Protection: 1; mode=block
X-FRAME-OPTIONS: SAMEORIGIN
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 410
</msg>
<status status="PASS" starttime="20230923 10:39:04.932" endtime="20230923 10:39:04.933"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:39:04.935" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:39:04.934" endtime="20230923 10:39:04.935"/>
</kw>
<status status="PASS" starttime="20230923 10:39:04.913" endtime="20230923 10:39:04.935"/>
</kw>
<msg timestamp="20230923 10:39:04.935" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:39:04.913" endtime="20230923 10:39:04.935"/>
</kw>
<msg timestamp="20230923 10:39:04.936" level="INFO">${result} = * About to connect() to scm port 9876 (#0)
*   Trying 172.20.0.5...
* Connected to scm (172.20.0.5) port 9876 (#0)
&gt; HEAD /stacks HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: scm:9876
&gt; Accept: */*
&gt; 
&lt;...</msg>
<status status="PASS" starttime="20230923 10:39:04.912" endtime="20230923 10:39:04.936"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>401 Authentication required</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:39:04.936" endtime="20230923 10:39:04.936"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:39:04.943" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:39:04.954" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:39:04.954" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230923 10:39:04.940" endtime="20230923 10:39:04.954"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:39:04.955" level="INFO">scm</msg>
<status status="PASS" starttime="20230923 10:39:04.954" endtime="20230923 10:39:04.955"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:39:04.956" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:39:04.955" endtime="20230923 10:39:04.956"/>
</kw>
<status status="PASS" starttime="20230923 10:39:04.940" endtime="20230923 10:39:04.957"/>
</kw>
<msg timestamp="20230923 10:39:04.957" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:39:04.939" endtime="20230923 10:39:04.957"/>
</kw>
<msg timestamp="20230923 10:39:04.957" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230923 10:39:04.939" endtime="20230923 10:39:04.957"/>
</kw>
<msg timestamp="20230923 10:39:04.957" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230923 10:39:04.938" endtime="20230923 10:39:04.957"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230923 10:39:04.958" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230923 10:39:04.958" endtime="20230923 10:39:04.958"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:39:04.964" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:39:04.988" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:39:04.988" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:39:04.961" endtime="20230923 10:39:04.988"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:39:04.989" level="INFO"/>
<status status="PASS" starttime="20230923 10:39:04.989" endtime="20230923 10:39:04.990"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:39:04.991" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:39:04.990" endtime="20230923 10:39:04.991"/>
</kw>
<status status="PASS" starttime="20230923 10:39:04.960" endtime="20230923 10:39:04.991"/>
</kw>
<msg timestamp="20230923 10:39:04.991" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:39:04.960" endtime="20230923 10:39:04.991"/>
</kw>
<status status="PASS" starttime="20230923 10:39:04.959" endtime="20230923 10:39:04.992"/>
</kw>
<status status="PASS" starttime="20230923 10:39:04.958" endtime="20230923 10:39:04.992"/>
</kw>
<status status="PASS" starttime="20230923 10:39:04.937" endtime="20230923 10:39:04.992"/>
</kw>
<status status="PASS" starttime="20230923 10:39:04.937" endtime="20230923 10:39:04.992"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:39:04.996" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://scm:9876/stacks 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:39:05.335" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:39:05.335" level="INFO">${output} = * About to connect() to scm port 9876 (#0)
*   Trying 172.20.0.5...
* Connected to scm (172.20.0.5) port 9876 (#0)
&gt; HEAD /stacks HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: scm:9876
&gt; Accept: */*
&gt; 
&lt;...</msg>
<status status="PASS" starttime="20230923 10:39:04.994" endtime="20230923 10:39:05.335"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:39:05.337" level="INFO">* About to connect() to scm port 9876 (#0)
*   Trying 172.20.0.5...
* Connected to scm (172.20.0.5) port 9876 (#0)
&gt; HEAD /stacks HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: scm:9876
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Authentication required
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-XSS-Protection: 1; mode=block
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 410
&lt; 
* Connection #0 to host scm left intact
* Issue another request to this URL: 'http://scm:9876/stacks'
* Found bundle for host scm: 0x1ac5f50
* Re-using existing connection! (#0) with host scm
* Connected to scm (172.20.0.5) port 9876 (#0)
* Server auth using GSS-Negotiate with user ''
&gt; HEAD /stacks HTTP/1.1
&gt; Authorization: Negotiate YIICawYJKoZIhvcSAQICAQBuggJaMIICVqADAgEFoQMCAQ6iBwMFACAAAACjggFnYYIBYzCCAV+gAwIBBaENGwtFWEFNUExFLkNPTaIWMBSgAwIBA6ENMAsbBEhUVFAbA3NjbaOCAS8wggEroAMCARKhAwIBAaKCAR0EggEZSWXD2aDLZCcZr7rLDPthMSRZ5hwa1naUz5JZ96n4buykZJ/UEicn9O+CpEFeTS5NItER53cz3GAbX1H/l5Gpzgd6+HNrFYnuthX+RSsRjjHyChQdOBuoLohG5ZBibNvmB4tRuqiWrvMlO/GFPBGO3Vlu1bOeEOYeLSzK7yKf2WXJ5qamK+KGeuoKjkjOAjr1pvguN9ETPYVCC738UMYUN+5MVf7OR9V6BPWiLduyYVEyEc1vYcPVa91PJJqh84eh7vjiww+uLa7Jcfx4VD6AbtRMehlxoe4SVvIa4JzsgGhjYlIF0+sRif2vs4pRY6bxh2VHaHUgbnz+Pz/wUtitCv/gCrnVoQ7KQX7YdgVZ3E4ld/lHeXbMI3WkgdUwgdKgAwIBEqKBygSBxwbf6hlWTkLXVe1QQ1r+BkLnrxgBIHvaQRvXNYfUFBbysftn2EZU1msQ5+ocK75rVb0vORfQ308oiKXJBpCC2vCJrlR3sEy/+hHlYf5l85xMS/2jA0HAFFAF7D2aCDrNYXof5dqF08rbnC3FrxdbdeFuQ6eo+z3VNU8xD0XEJU5RXCu7j8Pt1jtc/bxbn5DmVSkWfGo1g5AdAqa16TvvokXr768JF6Yt+9foSDGZMe2vRUbDKwbfrV+tLNGyogwBDlbCfOaw/v8=
&gt; User-Agent: curl/7.29.0
&gt; Host: scm:9876
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Sat, 23 Sep 2023 10:39:05 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Sat, 23 Sep 2023 10:39:05 GMT
&lt; Pragma: no-cache
&lt; Content-Type: text/plain;charset=utf-8
&lt; X-Content-Type-Options: nosniff
&lt; X-XSS-Protection: 1; mode=block
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; WWW-Authenticate: Negotiate YGkGCSqGSIb3EgECAgIAb1owWKADAgEFoQMCAQ+iTDBKoAMCARKiQwRBNqmzg541xa0sg1cg+HOTwL4EcHMUH+fXr5jLksRk4GC6rUPtzGSLXwPRrpzU5L6Bsj+AIlbKXpWGkxtWYUc/gOY=
&lt; Set-Cookie: hadoop.auth="u=testuser&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1695501545025&amp;s=khXxvg/GVIEe6E/YoL4QX0M0CnoQhjJffYZixzMryXc="; Path=/; HttpOnly
&lt; Content-Length: 279660
&lt; 
* Closing connection 0
HTTP/1.1 401 Authentication required
Pragma: no-cache
X-Content-Type-Options: nosniff
X-XSS-Protection: 1; mode=block
X-FRAME-OPTIONS: SAMEORIGIN
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 410

HTTP/1.1 200 OK
Date: Sat, 23 Sep 2023 10:39:05 GMT
Cache-Control: no-cache
Expires: Sat, 23 Sep 2023 10:39:05 GMT
Pragma: no-cache
Content-Type: text/plain;charset=utf-8
X-Content-Type-Options: nosniff
X-XSS-Protection: 1; mode=block
X-FRAME-OPTIONS: SAMEORIGIN
WWW-Authenticate: Negotiate YGkGCSqGSIb3EgECAgIAb1owWKADAgEFoQMCAQ+iTDBKoAMCARKiQwRBNqmzg541xa0sg1cg+HOTwL4EcHMUH+fXr5jLksRk4GC6rUPtzGSLXwPRrpzU5L6Bsj+AIlbKXpWGkxtWYUc/gOY=
Set-Cookie: hadoop.auth="u=testuser&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1695501545025&amp;s=khXxvg/GVIEe6E/YoL4QX0M0CnoQhjJffYZixzMryXc="; Path=/; HttpOnly
Content-Length: 279660
</msg>
<status status="PASS" starttime="20230923 10:39:05.336" endtime="20230923 10:39:05.337"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:39:05.339" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:39:05.338" endtime="20230923 10:39:05.339"/>
</kw>
<status status="PASS" starttime="20230923 10:39:04.993" endtime="20230923 10:39:05.339"/>
</kw>
<msg timestamp="20230923 10:39:05.339" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:39:04.993" endtime="20230923 10:39:05.339"/>
</kw>
<msg timestamp="20230923 10:39:05.340" level="INFO">${result} = * About to connect() to scm port 9876 (#0)
*   Trying 172.20.0.5...
* Connected to scm (172.20.0.5) port 9876 (#0)
&gt; HEAD /stacks HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: scm:9876
&gt; Accept: */*
&gt; 
&lt;...</msg>
<status status="PASS" starttime="20230923 10:39:04.992" endtime="20230923 10:39:05.340"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200 OK</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:39:05.340" endtime="20230923 10:39:05.340"/>
</kw>
<status status="PASS" starttime="20230923 10:39:04.897" endtime="20230923 10:39:05.340"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230923 10:39:04.895" endtime="20230923 10:39:05.341"/>
</test>
<test id="s1-s9-s1-t8" name="Test Recon portal" line="74">
<kw name="Verify SPNEGO enabled URL">
<arg>${RECON_URL}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Execute</arg>
<arg>kdestroy</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:39:05.348" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:39:05.354" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:39:05.355" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:39:05.345" endtime="20230923 10:39:05.355"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:39:05.356" level="INFO"/>
<status status="PASS" starttime="20230923 10:39:05.355" endtime="20230923 10:39:05.356"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:39:05.356" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:39:05.356" endtime="20230923 10:39:05.357"/>
</kw>
<status status="PASS" starttime="20230923 10:39:05.344" endtime="20230923 10:39:05.357"/>
</kw>
<msg timestamp="20230923 10:39:05.357" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:39:05.344" endtime="20230923 10:39:05.357"/>
</kw>
<status status="PASS" starttime="20230923 10:39:05.343" endtime="20230923 10:39:05.357"/>
</kw>
<status status="PASS" starttime="20230923 10:39:05.343" endtime="20230923 10:39:05.357"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:39:05.361" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://recon:9888 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:39:05.390" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:39:05.390" level="INFO">${output} = * About to connect() to recon port 9888 (#0)
*   Trying 172.20.0.7...
* Connected to recon (172.20.0.7) port 9888 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt;...</msg>
<status status="PASS" starttime="20230923 10:39:05.359" endtime="20230923 10:39:05.390"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:39:05.392" level="INFO">* About to connect() to recon port 9888 (#0)
*   Trying 172.20.0.7...
* Connected to recon (172.20.0.7) port 9888 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Authentication required
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-XSS-Protection: 1; mode=block
&lt; X-FRAME-OPTIONS: SAMEORIGIN
* gss_init_sec_context() failed: : No Kerberos credentials available (default cache: FILE:/tmp/krb5cc_1000)
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 447
&lt; 
* Connection #0 to host recon left intact
HTTP/1.1 401 Authentication required
Pragma: no-cache
X-Content-Type-Options: nosniff
X-XSS-Protection: 1; mode=block
X-FRAME-OPTIONS: SAMEORIGIN
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 447
</msg>
<status status="PASS" starttime="20230923 10:39:05.391" endtime="20230923 10:39:05.392"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:39:05.393" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:39:05.392" endtime="20230923 10:39:05.393"/>
</kw>
<status status="PASS" starttime="20230923 10:39:05.358" endtime="20230923 10:39:05.393"/>
</kw>
<msg timestamp="20230923 10:39:05.393" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:39:05.358" endtime="20230923 10:39:05.393"/>
</kw>
<msg timestamp="20230923 10:39:05.394" level="INFO">${result} = * About to connect() to recon port 9888 (#0)
*   Trying 172.20.0.7...
* Connected to recon (172.20.0.7) port 9888 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt;...</msg>
<status status="PASS" starttime="20230923 10:39:05.357" endtime="20230923 10:39:05.394"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>401 Authentication required</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:39:05.394" endtime="20230923 10:39:05.394"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:39:05.401" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:39:05.405" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:39:05.405" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230923 10:39:05.398" endtime="20230923 10:39:05.405"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:39:05.406" level="INFO">scm</msg>
<status status="PASS" starttime="20230923 10:39:05.406" endtime="20230923 10:39:05.407"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:39:05.407" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:39:05.407" endtime="20230923 10:39:05.407"/>
</kw>
<status status="PASS" starttime="20230923 10:39:05.398" endtime="20230923 10:39:05.407"/>
</kw>
<msg timestamp="20230923 10:39:05.408" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:39:05.397" endtime="20230923 10:39:05.408"/>
</kw>
<msg timestamp="20230923 10:39:05.408" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230923 10:39:05.397" endtime="20230923 10:39:05.408"/>
</kw>
<msg timestamp="20230923 10:39:05.408" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230923 10:39:05.396" endtime="20230923 10:39:05.408"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230923 10:39:05.409" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230923 10:39:05.408" endtime="20230923 10:39:05.409"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:39:05.414" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:39:05.434" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:39:05.434" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:39:05.412" endtime="20230923 10:39:05.434"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:39:05.436" level="INFO"/>
<status status="PASS" starttime="20230923 10:39:05.435" endtime="20230923 10:39:05.436"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:39:05.437" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:39:05.436" endtime="20230923 10:39:05.437"/>
</kw>
<status status="PASS" starttime="20230923 10:39:05.411" endtime="20230923 10:39:05.437"/>
</kw>
<msg timestamp="20230923 10:39:05.437" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:39:05.411" endtime="20230923 10:39:05.437"/>
</kw>
<status status="PASS" starttime="20230923 10:39:05.410" endtime="20230923 10:39:05.437"/>
</kw>
<status status="PASS" starttime="20230923 10:39:05.409" endtime="20230923 10:39:05.438"/>
</kw>
<status status="PASS" starttime="20230923 10:39:05.395" endtime="20230923 10:39:05.438"/>
</kw>
<status status="PASS" starttime="20230923 10:39:05.395" endtime="20230923 10:39:05.438"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:39:05.443" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://recon:9888 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:39:05.486" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:39:05.486" level="INFO">${output} = * About to connect() to recon port 9888 (#0)
*   Trying 172.20.0.7...
* Connected to recon (172.20.0.7) port 9888 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt;...</msg>
<status status="PASS" starttime="20230923 10:39:05.440" endtime="20230923 10:39:05.486"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:39:05.488" level="INFO">* About to connect() to recon port 9888 (#0)
*   Trying 172.20.0.7...
* Connected to recon (172.20.0.7) port 9888 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Authentication required
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-XSS-Protection: 1; mode=block
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 447
&lt; 
* Connection #0 to host recon left intact
* Issue another request to this URL: 'http://recon:9888/'
* Found bundle for host recon: 0x1d75f70
* Re-using existing connection! (#0) with host recon
* Connected to recon (172.20.0.7) port 9888 (#0)
* Server auth using GSS-Negotiate with user ''
&gt; HEAD / HTTP/1.1
&gt; Authorization: Negotiate YIICWwYJKoZIhvcSAQICAQBuggJKMIICRqADAgEFoQMCAQ6iBwMFACAAAACjggFWYYIBUjCCAU6gAwIBBaENGwtFWEFNUExFLkNPTaIYMBagAwIBA6EPMA0bBEhUVFAbBXJlY29uo4IBHDCCARigAwIBEqEDAgEBooIBCgSCAQaw+WS0grLswLdFRljtbRDsoo3f1A3eynu7d3L/MKDBIgLNuFpmOUqYjBxW4YwJ+zBq7svzC6VDK9Y4fzURA0h09Y2JjcxVmb2KOtkqfPzAqnL/49MN/VTZvBQfxFZ6GbBTf6+1hjclhDXQZ3xwiucNQEyExgX/72ZalDy4pe2cDCSYkWxf5j4iTcg6Nbh9ykeRihNlT0PWzKU9I9OsHCdn+xyvqk5ameMP3u+su5C/E5t3hEdGFnZgF2hz4ZniQ6HqSUXOJfPzHHPBE++Ne7iWNCkPFi9PsPhYlXyKgVHH89QSvc90Ye4QI88zC2zctekBIAQrgWUiKI0cT7UXKu+K7D07l2p8pIHWMIHToAMCARKigcsEgcgQVsWYBf5eELhs7OliFbNW+8I+t8Ca4L8UmWNIwqC75PUXHMTvohmjmpfXD7nHjcUhDctXKMO6zeECva0rGAgLiGRSTM0wr6VI+gkO9J1ML+H/1Pqwg9MbrMQg8N/NFboGP4ELVFu5sLVCNcpO1nHj5OqwieC4HAYPctLLTbax0u/h4k5UzEX8CQ0hHE1oAWuZndCCzRIFF+4g7o3bNhN0P451DM1xEHhqla8VfaZDHwm7ZhQDPTzcjjT/mKOZMCbZKDF4j/Y97w==
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Sat, 23 Sep 2023 10:39:05 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Sat, 23 Sep 2023 10:39:05 GMT
&lt; Pragma: no-cache
&lt; Content-Type: text/html
&lt; X-Content-Type-Options: nosniff
&lt; X-XSS-Protection: 1; mode=block
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCwEuR1s2cjU/M1O1mQM2y0GmXx5/sxyrV6T/svNi4QS8NF5mkFepcZtOOLzfzA5EicNm0qK8merf7Ntk/QYhxr8cL
&lt; Set-Cookie: hadoop.auth="u=testuser&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1695501545476&amp;s=A8JkMvmR6zCEEo5ESleIm/ej/ppWlOzSfYaw5bYQOjc="; Path=/; HttpOnly
&lt; Last-Modified: Sat, 23 Sep 2023 09:27:06 GMT
&lt; Accept-Ranges: bytes
&lt; Content-Length: 2177
&lt; 
* Closing connection 0
HTTP/1.1 401 Authentication required
Pragma: no-cache
X-Content-Type-Options: nosniff
X-XSS-Protection: 1; mode=block
X-FRAME-OPTIONS: SAMEORIGIN
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 447

HTTP/1.1 200 OK
Date: Sat, 23 Sep 2023 10:39:05 GMT
Cache-Control: no-cache
Expires: Sat, 23 Sep 2023 10:39:05 GMT
Pragma: no-cache
Content-Type: text/html
X-Content-Type-Options: nosniff
X-XSS-Protection: 1; mode=block
X-FRAME-OPTIONS: SAMEORIGIN
WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCwEuR1s2cjU/M1O1mQM2y0GmXx5/sxyrV6T/svNi4QS8NF5mkFepcZtOOLzfzA5EicNm0qK8merf7Ntk/QYhxr8cL
Set-Cookie: hadoop.auth="u=testuser&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1695501545476&amp;s=A8JkMvmR6zCEEo5ESleIm/ej/ppWlOzSfYaw5bYQOjc="; Path=/; HttpOnly
Last-Modified: Sat, 23 Sep 2023 09:27:06 GMT
Accept-Ranges: bytes
Content-Length: 2177
</msg>
<status status="PASS" starttime="20230923 10:39:05.487" endtime="20230923 10:39:05.488"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:39:05.489" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:39:05.488" endtime="20230923 10:39:05.489"/>
</kw>
<status status="PASS" starttime="20230923 10:39:05.439" endtime="20230923 10:39:05.489"/>
</kw>
<msg timestamp="20230923 10:39:05.489" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:39:05.439" endtime="20230923 10:39:05.489"/>
</kw>
<msg timestamp="20230923 10:39:05.490" level="INFO">${result} = * About to connect() to recon port 9888 (#0)
*   Trying 172.20.0.7...
* Connected to recon (172.20.0.7) port 9888 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt;...</msg>
<status status="PASS" starttime="20230923 10:39:05.438" endtime="20230923 10:39:05.490"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200 OK</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:39:05.490" endtime="20230923 10:39:05.491"/>
</kw>
<status status="PASS" starttime="20230923 10:39:05.342" endtime="20230923 10:39:05.491"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230923 10:39:05.341" endtime="20230923 10:39:05.491"/>
</test>
<doc>Smoke test for spnego with docker-compose environments.</doc>
<status status="PASS" starttime="20230923 10:39:02.202" endtime="20230923 10:39:05.493"/>
</suite>
<status status="PASS" starttime="20230923 10:39:02.174" endtime="20230923 10:39:05.495"/>
</suite>
<suite id="s1-s10" name="Snapshot-Acls" source="/opt/hadoop/smoketest/snapshot/snapshot-acls.robot">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>BuiltIn.Skip</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230923 10:39:09.187" endtime="20230923 10:39:09.187"/>
</kw>
<test id="s1-s10-t1" name="Test creating first snapshot as user1" line="47">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:39:09.193" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:39:09.197" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:39:09.197" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:39:09.190" endtime="20230923 10:39:09.197"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:39:09.198" level="INFO"/>
<status status="PASS" starttime="20230923 10:39:09.198" endtime="20230923 10:39:09.198"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:39:09.199" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:39:09.199" endtime="20230923 10:39:09.199"/>
</kw>
<status status="PASS" starttime="20230923 10:39:09.189" endtime="20230923 10:39:09.199"/>
</kw>
<msg timestamp="20230923 10:39:09.199" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:39:09.189" endtime="20230923 10:39:09.200"/>
</kw>
<status status="PASS" starttime="20230923 10:39:09.189" endtime="20230923 10:39:09.200"/>
</kw>
<kw name="Kinit test user" library="commonlib">
<arg>${USER1}</arg>
<arg>${USER1}.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:39:09.206" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:39:09.216" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:39:09.216" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230923 10:39:09.203" endtime="20230923 10:39:09.216"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:39:09.217" level="INFO">scm</msg>
<status status="PASS" starttime="20230923 10:39:09.217" endtime="20230923 10:39:09.217"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:39:09.218" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:39:09.217" endtime="20230923 10:39:09.218"/>
</kw>
<status status="PASS" starttime="20230923 10:39:09.202" endtime="20230923 10:39:09.218"/>
</kw>
<msg timestamp="20230923 10:39:09.218" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:39:09.202" endtime="20230923 10:39:09.218"/>
</kw>
<msg timestamp="20230923 10:39:09.218" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230923 10:39:09.201" endtime="20230923 10:39:09.218"/>
</kw>
<msg timestamp="20230923 10:39:09.219" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230923 10:39:09.201" endtime="20230923 10:39:09.219"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230923 10:39:09.219" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230923 10:39:09.219" endtime="20230923 10:39:09.219"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:39:09.223" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:39:09.243" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:39:09.243" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:39:09.221" endtime="20230923 10:39:09.243"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:39:09.244" level="INFO"/>
<status status="PASS" starttime="20230923 10:39:09.244" endtime="20230923 10:39:09.245"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:39:09.245" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:39:09.245" endtime="20230923 10:39:09.245"/>
</kw>
<status status="PASS" starttime="20230923 10:39:09.221" endtime="20230923 10:39:09.246"/>
</kw>
<msg timestamp="20230923 10:39:09.246" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:39:09.220" endtime="20230923 10:39:09.246"/>
</kw>
<status status="PASS" starttime="20230923 10:39:09.220" endtime="20230923 10:39:09.246"/>
</kw>
<status status="PASS" starttime="20230923 10:39:09.219" endtime="20230923 10:39:09.246"/>
</kw>
<status status="PASS" starttime="20230923 10:39:09.200" endtime="20230923 10:39:09.246"/>
</kw>
<kw name="Setup volume and bucket" library="snapshot-setup">
<kw name="Create volume" library="snapshot-setup">
<var>${volume}</var>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[LOWER]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230923 10:39:09.248" level="INFO">${random} = qmkbu</msg>
<status status="PASS" starttime="20230923 10:39:09.247" endtime="20230923 10:39:09.248"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${volume}</var>
<arg>vol-${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230923 10:39:09.249" level="INFO">${volume} = vol-qmkbu</msg>
<status status="PASS" starttime="20230923 10:39:09.248" endtime="20230923 10:39:09.249"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create /${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:39:09.253" level="INFO">Running command 'ozone sh volume create /vol-qmkbu 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:39:15.176" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:39:15.176" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:39:09.251" endtime="20230923 10:39:15.176"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:39:15.178" level="INFO"/>
<status status="PASS" starttime="20230923 10:39:15.177" endtime="20230923 10:39:15.178"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:39:15.179" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:39:15.178" endtime="20230923 10:39:15.179"/>
</kw>
<status status="PASS" starttime="20230923 10:39:09.250" endtime="20230923 10:39:15.179"/>
</kw>
<msg timestamp="20230923 10:39:15.179" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:39:09.250" endtime="20230923 10:39:15.179"/>
</kw>
<msg timestamp="20230923 10:39:15.180" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230923 10:39:09.249" endtime="20230923 10:39:15.180"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:39:15.180" endtime="20230923 10:39:15.180"/>
</kw>
<msg timestamp="20230923 10:39:15.181" level="INFO">${volume} = vol-qmkbu</msg>
<status status="PASS" starttime="20230923 10:39:09.247" endtime="20230923 10:39:15.181"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${VOLUME}</arg>
<arg>${volume}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230923 10:39:15.181" level="INFO">${VOLUME} = vol-qmkbu</msg>
<status status="PASS" starttime="20230923 10:39:15.181" endtime="20230923 10:39:15.181"/>
</kw>
<kw name="Create bucket" library="snapshot-setup">
<var>${bucket}</var>
<arg>${VOLUME}</arg>
<arg>FILE_SYSTEM_OPTIMIZED</arg>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[LOWER]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230923 10:39:15.183" level="INFO">${random} = rqcyf</msg>
<status status="PASS" starttime="20230923 10:39:15.182" endtime="20230923 10:39:15.183"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${bucket}</var>
<arg>buc-${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230923 10:39:15.184" level="INFO">${bucket} = buc-rqcyf</msg>
<status status="PASS" starttime="20230923 10:39:15.183" endtime="20230923 10:39:15.184"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket create -l ${bucket_layout} /${volume}/${bucket}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:39:15.189" level="INFO">Running command 'ozone sh bucket create -l FILE_SYSTEM_OPTIMIZED /vol-qmkbu/buc-rqcyf 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:39:20.941" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:39:20.941" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:39:15.185" endtime="20230923 10:39:20.942"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:39:20.943" level="INFO"/>
<status status="PASS" starttime="20230923 10:39:20.942" endtime="20230923 10:39:20.943"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:39:20.944" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:39:20.943" endtime="20230923 10:39:20.944"/>
</kw>
<status status="PASS" starttime="20230923 10:39:15.185" endtime="20230923 10:39:20.944"/>
</kw>
<msg timestamp="20230923 10:39:20.944" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:39:15.184" endtime="20230923 10:39:20.944"/>
</kw>
<msg timestamp="20230923 10:39:20.945" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230923 10:39:15.184" endtime="20230923 10:39:20.945"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:39:20.945" endtime="20230923 10:39:20.945"/>
</kw>
<msg timestamp="20230923 10:39:20.946" level="INFO">${bucket} = buc-rqcyf</msg>
<status status="PASS" starttime="20230923 10:39:15.182" endtime="20230923 10:39:20.946"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${BUCKET}</arg>
<arg>${bucket}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230923 10:39:20.946" level="INFO">${BUCKET} = buc-rqcyf</msg>
<status status="PASS" starttime="20230923 10:39:20.946" endtime="20230923 10:39:20.946"/>
</kw>
<status status="PASS" starttime="20230923 10:39:09.246" endtime="20230923 10:39:20.946"/>
</kw>
<kw name="Create key" library="snapshot-setup">
<var>${key}</var>
<arg>${VOLUME}</arg>
<arg>${BUCKET}</arg>
<arg>README.md</arg>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[LOWER]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230923 10:39:20.948" level="INFO">${random} = ilfji</msg>
<status status="PASS" starttime="20230923 10:39:20.947" endtime="20230923 10:39:20.948"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>key-${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230923 10:39:20.949" level="INFO">${key} = key-ilfji</msg>
<status status="PASS" starttime="20230923 10:39:20.948" endtime="20230923 10:39:20.949"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key put /${volume}/${bucket}/${key} ${file}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:39:20.954" level="INFO">Running command 'ozone sh key put /vol-qmkbu/buc-rqcyf/key-ilfji README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:39:29.172" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:39:29.172" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:39:20.951" endtime="20230923 10:39:29.172"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:39:29.174" level="INFO"/>
<status status="PASS" starttime="20230923 10:39:29.173" endtime="20230923 10:39:29.174"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:39:29.174" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:39:29.174" endtime="20230923 10:39:29.174"/>
</kw>
<status status="PASS" starttime="20230923 10:39:20.950" endtime="20230923 10:39:29.175"/>
</kw>
<msg timestamp="20230923 10:39:29.175" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:39:20.949" endtime="20230923 10:39:29.175"/>
</kw>
<msg timestamp="20230923 10:39:29.175" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230923 10:39:20.949" endtime="20230923 10:39:29.175"/>
</kw>
<msg timestamp="20230923 10:39:29.175" level="INFO">${key} = key-ilfji</msg>
<status status="PASS" starttime="20230923 10:39:20.947" endtime="20230923 10:39:29.175"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${KEY}</arg>
<arg>${key}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230923 10:39:29.176" level="INFO">${KEY} = key-ilfji</msg>
<status status="PASS" starttime="20230923 10:39:29.175" endtime="20230923 10:39:29.176"/>
</kw>
<kw name="Create snapshot" library="snapshot-setup">
<var>${snapshot}</var>
<arg>${VOLUME}</arg>
<arg>${BUCKET}</arg>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[LOWER]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230923 10:39:29.177" level="INFO">${random} = qdfxu</msg>
<status status="PASS" starttime="20230923 10:39:29.177" endtime="20230923 10:39:29.177"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${snapshot}</var>
<arg>snap-${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230923 10:39:29.178" level="INFO">${snapshot} = snap-qdfxu</msg>
<status status="PASS" starttime="20230923 10:39:29.177" endtime="20230923 10:39:29.178"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh snapshot create /${volume}/${bucket} ${snapshot}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:39:29.184" level="INFO">Running command 'ozone sh snapshot create /vol-qmkbu/buc-rqcyf snap-qdfxu 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:39:35.053" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:39:35.053" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:39:29.180" endtime="20230923 10:39:35.054"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:39:35.055" level="INFO"/>
<status status="PASS" starttime="20230923 10:39:35.054" endtime="20230923 10:39:35.055"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:39:35.056" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:39:35.055" endtime="20230923 10:39:35.056"/>
</kw>
<status status="PASS" starttime="20230923 10:39:29.180" endtime="20230923 10:39:35.056"/>
</kw>
<msg timestamp="20230923 10:39:35.056" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:39:29.179" endtime="20230923 10:39:35.056"/>
</kw>
<msg timestamp="20230923 10:39:35.057" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230923 10:39:29.179" endtime="20230923 10:39:35.057"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:39:35.057" endtime="20230923 10:39:35.057"/>
</kw>
<msg timestamp="20230923 10:39:35.057" level="INFO">${snapshot} = snap-qdfxu</msg>
<status status="PASS" starttime="20230923 10:39:29.176" endtime="20230923 10:39:35.057"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${FIRST_SNAPSHOT}</arg>
<arg>${snapshot}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230923 10:39:35.058" level="INFO">${FIRST_SNAPSHOT} = snap-qdfxu</msg>
<status status="PASS" starttime="20230923 10:39:35.058" endtime="20230923 10:39:35.058"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230923 10:39:09.188" endtime="20230923 10:39:35.058"/>
</test>
<test id="s1-s10-t2" name="Test adding ACLs for user2" line="56">
<kw name="Add ACLs">
<kw name="Add ACL">
<arg>volume</arg>
<arg>${USER2}</arg>
<arg>${VOLUME}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh ${object} addacl -a user:${user}:a ${objectName}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:39:35.065" level="INFO">Running command 'ozone sh volume addacl -a user:testuser2:a vol-qmkbu 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:39:40.566" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:39:40.566" level="INFO">${output} = ACL user:testuser2:a[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20230923 10:39:35.063" endtime="20230923 10:39:40.566"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:39:40.568" level="INFO">ACL user:testuser2:a[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20230923 10:39:40.567" endtime="20230923 10:39:40.568"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:39:40.569" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:39:40.568" endtime="20230923 10:39:40.569"/>
</kw>
<status status="PASS" starttime="20230923 10:39:35.062" endtime="20230923 10:39:40.569"/>
</kw>
<msg timestamp="20230923 10:39:40.569" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:39:35.062" endtime="20230923 10:39:40.570"/>
</kw>
<msg timestamp="20230923 10:39:40.570" level="INFO">${result} = ACL user:testuser2:a[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20230923 10:39:35.061" endtime="20230923 10:39:40.570"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:39:40.570" endtime="20230923 10:39:40.570"/>
</kw>
<status status="PASS" starttime="20230923 10:39:35.061" endtime="20230923 10:39:40.571"/>
</kw>
<kw name="Add ACL">
<arg>bucket</arg>
<arg>${USER2}</arg>
<arg>${VOLUME}/${BUCKET}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh ${object} addacl -a user:${user}:a ${objectName}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:39:40.576" level="INFO">Running command 'ozone sh bucket addacl -a user:testuser2:a vol-qmkbu/buc-rqcyf 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:39:46.029" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:39:46.029" level="INFO">${output} = ACL user:testuser2:a[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20230923 10:39:40.573" endtime="20230923 10:39:46.029"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:39:46.030" level="INFO">ACL user:testuser2:a[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20230923 10:39:46.029" endtime="20230923 10:39:46.031"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:39:46.031" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:39:46.031" endtime="20230923 10:39:46.031"/>
</kw>
<status status="PASS" starttime="20230923 10:39:40.572" endtime="20230923 10:39:46.032"/>
</kw>
<msg timestamp="20230923 10:39:46.032" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:39:40.572" endtime="20230923 10:39:46.032"/>
</kw>
<msg timestamp="20230923 10:39:46.032" level="INFO">${result} = ACL user:testuser2:a[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20230923 10:39:40.571" endtime="20230923 10:39:46.032"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:39:46.032" endtime="20230923 10:39:46.033"/>
</kw>
<status status="PASS" starttime="20230923 10:39:40.571" endtime="20230923 10:39:46.033"/>
</kw>
<kw name="Add ACL">
<arg>key</arg>
<arg>${USER2}</arg>
<arg>${VOLUME}/${BUCKET}/${KEY}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh ${object} addacl -a user:${user}:a ${objectName}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:39:46.038" level="INFO">Running command 'ozone sh key addacl -a user:testuser2:a vol-qmkbu/buc-rqcyf/key-ilfji 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:39:50.949" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:39:50.949" level="INFO">${output} = ACL user:testuser2:a[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20230923 10:39:46.035" endtime="20230923 10:39:50.949"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:39:50.950" level="INFO">ACL user:testuser2:a[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20230923 10:39:50.950" endtime="20230923 10:39:50.951"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:39:50.951" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:39:50.951" endtime="20230923 10:39:50.951"/>
</kw>
<status status="PASS" starttime="20230923 10:39:46.034" endtime="20230923 10:39:50.951"/>
</kw>
<msg timestamp="20230923 10:39:50.952" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:39:46.034" endtime="20230923 10:39:50.952"/>
</kw>
<msg timestamp="20230923 10:39:50.952" level="INFO">${result} = ACL user:testuser2:a[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20230923 10:39:46.034" endtime="20230923 10:39:50.952"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:39:50.952" endtime="20230923 10:39:50.953"/>
</kw>
<status status="PASS" starttime="20230923 10:39:46.033" endtime="20230923 10:39:50.953"/>
</kw>
<status status="PASS" starttime="20230923 10:39:35.060" endtime="20230923 10:39:50.953"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230923 10:39:35.060" endtime="20230923 10:39:50.953"/>
</test>
<test id="s1-s10-t3" name="Test creating second snapshot as user2" line="59">
<kw name="Create snapshot" library="snapshot-setup">
<var>${snapshot}</var>
<arg>${VOLUME}</arg>
<arg>${BUCKET}</arg>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[LOWER]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230923 10:39:50.956" level="INFO">${random} = znidz</msg>
<status status="PASS" starttime="20230923 10:39:50.955" endtime="20230923 10:39:50.956"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${snapshot}</var>
<arg>snap-${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230923 10:39:50.956" level="INFO">${snapshot} = snap-znidz</msg>
<status status="PASS" starttime="20230923 10:39:50.956" endtime="20230923 10:39:50.956"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh snapshot create /${volume}/${bucket} ${snapshot}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:39:50.961" level="INFO">Running command 'ozone sh snapshot create /vol-qmkbu/buc-rqcyf snap-znidz 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:39:56.074" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:39:56.074" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:39:50.958" endtime="20230923 10:39:56.074"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:39:56.076" level="INFO"/>
<status status="PASS" starttime="20230923 10:39:56.075" endtime="20230923 10:39:56.076"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:39:56.077" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:39:56.076" endtime="20230923 10:39:56.077"/>
</kw>
<status status="PASS" starttime="20230923 10:39:50.957" endtime="20230923 10:39:56.077"/>
</kw>
<msg timestamp="20230923 10:39:56.077" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:39:50.957" endtime="20230923 10:39:56.077"/>
</kw>
<msg timestamp="20230923 10:39:56.077" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230923 10:39:50.956" endtime="20230923 10:39:56.077"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:39:56.077" endtime="20230923 10:39:56.078"/>
</kw>
<msg timestamp="20230923 10:39:56.078" level="INFO">${snapshot} = snap-znidz</msg>
<status status="PASS" starttime="20230923 10:39:50.955" endtime="20230923 10:39:56.078"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${SECOND_SNAPSHOT}</arg>
<arg>${snapshot}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230923 10:39:56.079" level="INFO">${SECOND_SNAPSHOT} = snap-znidz</msg>
<status status="PASS" starttime="20230923 10:39:56.078" endtime="20230923 10:39:56.079"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230923 10:39:50.954" endtime="20230923 10:39:56.079"/>
</test>
<test id="s1-s10-t4" name="Test reading first snapshot as user2" line="63">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:39:56.085" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:39:56.089" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:39:56.089" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:39:56.082" endtime="20230923 10:39:56.089"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:39:56.091" level="INFO"/>
<status status="PASS" starttime="20230923 10:39:56.090" endtime="20230923 10:39:56.091"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:39:56.091" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:39:56.091" endtime="20230923 10:39:56.092"/>
</kw>
<status status="PASS" starttime="20230923 10:39:56.081" endtime="20230923 10:39:56.092"/>
</kw>
<msg timestamp="20230923 10:39:56.092" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:39:56.081" endtime="20230923 10:39:56.092"/>
</kw>
<status status="PASS" starttime="20230923 10:39:56.081" endtime="20230923 10:39:56.092"/>
</kw>
<kw name="Kinit test user" library="commonlib">
<arg>${USER2}</arg>
<arg>${USER2}.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:39:56.098" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:39:56.102" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:39:56.102" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230923 10:39:56.095" endtime="20230923 10:39:56.102"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:39:56.103" level="INFO">scm</msg>
<status status="PASS" starttime="20230923 10:39:56.103" endtime="20230923 10:39:56.104"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:39:56.104" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:39:56.104" endtime="20230923 10:39:56.104"/>
</kw>
<status status="PASS" starttime="20230923 10:39:56.095" endtime="20230923 10:39:56.105"/>
</kw>
<msg timestamp="20230923 10:39:56.105" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:39:56.094" endtime="20230923 10:39:56.105"/>
</kw>
<msg timestamp="20230923 10:39:56.105" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230923 10:39:56.094" endtime="20230923 10:39:56.105"/>
</kw>
<msg timestamp="20230923 10:39:56.105" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230923 10:39:56.093" endtime="20230923 10:39:56.105"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230923 10:39:56.106" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230923 10:39:56.106" endtime="20230923 10:39:56.106"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:39:56.111" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser2.keytab testuser2/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:39:56.130" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:39:56.130" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:39:56.108" endtime="20230923 10:39:56.130"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:39:56.131" level="INFO"/>
<status status="PASS" starttime="20230923 10:39:56.130" endtime="20230923 10:39:56.131"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:39:56.132" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:39:56.131" endtime="20230923 10:39:56.132"/>
</kw>
<status status="PASS" starttime="20230923 10:39:56.108" endtime="20230923 10:39:56.132"/>
</kw>
<msg timestamp="20230923 10:39:56.132" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:39:56.108" endtime="20230923 10:39:56.132"/>
</kw>
<status status="PASS" starttime="20230923 10:39:56.107" endtime="20230923 10:39:56.133"/>
</kw>
<status status="PASS" starttime="20230923 10:39:56.106" endtime="20230923 10:39:56.133"/>
</kw>
<status status="PASS" starttime="20230923 10:39:56.093" endtime="20230923 10:39:56.133"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${keyDest}</var>
<arg>5</arg>
<arg>[LOWER]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230923 10:39:56.133" level="INFO">${keyDest} = ptfgm</msg>
<status status="PASS" starttime="20230923 10:39:56.133" endtime="20230923 10:39:56.134"/>
</kw>
<kw name="Get key">
<var>${result}</var>
<arg>${FIRST_SNAPSHOT}</arg>
<arg>${keyDest}</arg>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key get ${VOLUME}/${BUCKET}/${SNAPSHOT_INDICATOR}/${snapshotName}/${KEY} ${keyDest}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:39:56.138" level="INFO">Running command 'ozone sh key get vol-qmkbu/buc-rqcyf/.snapshot/snap-qdfxu/key-ilfji ptfgm 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:40:02.078" level="INFO">${rc} = 255</msg>
<msg timestamp="20230923 10:40:02.078" level="INFO">${output} = PERMISSION_DENIED User testuser2 doesn't have READ permission to access key Volume:vol-qmkbu Bucket:buc-rqcyf Key:key-ilfji</msg>
<status status="PASS" starttime="20230923 10:39:56.135" endtime="20230923 10:40:02.078"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:40:02.079" level="INFO">PERMISSION_DENIED User testuser2 doesn't have READ permission to access key Volume:vol-qmkbu Bucket:buc-rqcyf Key:key-ilfji</msg>
<status status="PASS" starttime="20230923 10:40:02.078" endtime="20230923 10:40:02.079"/>
</kw>
<msg timestamp="20230923 10:40:02.080" level="INFO">${result} = PERMISSION_DENIED User testuser2 doesn't have READ permission to access key Volume:vol-qmkbu Bucket:buc-rqcyf Key:key-ilfji</msg>
<status status="PASS" starttime="20230923 10:39:56.134" endtime="20230923 10:40:02.080"/>
</kw>
<msg timestamp="20230923 10:40:02.080" level="INFO">${result} = PERMISSION_DENIED User testuser2 doesn't have READ permission to access key Volume:vol-qmkbu Bucket:buc-rqcyf Key:key-ilfji</msg>
<status status="PASS" starttime="20230923 10:39:56.134" endtime="20230923 10:40:02.080"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:40:02.080" endtime="20230923 10:40:02.081"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230923 10:39:56.080" endtime="20230923 10:40:02.081"/>
</test>
<test id="s1-s10-t5" name="Test reading second snapshot as user2" line="70">
<kw name="Generate Random String" library="String">
<var>${keyDest}</var>
<arg>5</arg>
<arg>[LOWER]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230923 10:40:02.083" level="INFO">${keyDest} = ugytw</msg>
<status status="PASS" starttime="20230923 10:40:02.083" endtime="20230923 10:40:02.083"/>
</kw>
<kw name="Get key">
<var>${result}</var>
<arg>${SECOND_SNAPSHOT}</arg>
<arg>${keyDest}</arg>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key get ${VOLUME}/${BUCKET}/${SNAPSHOT_INDICATOR}/${snapshotName}/${KEY} ${keyDest}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:40:02.088" level="INFO">Running command 'ozone sh key get vol-qmkbu/buc-rqcyf/.snapshot/snap-znidz/key-ilfji ugytw 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:40:10.121" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:40:10.121" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:40:02.085" endtime="20230923 10:40:10.122"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:40:10.123" level="INFO"/>
<status status="PASS" starttime="20230923 10:40:10.122" endtime="20230923 10:40:10.123"/>
</kw>
<msg timestamp="20230923 10:40:10.123" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230923 10:40:02.084" endtime="20230923 10:40:10.123"/>
</kw>
<msg timestamp="20230923 10:40:10.123" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230923 10:40:02.083" endtime="20230923 10:40:10.123"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:40:10.124" endtime="20230923 10:40:10.124"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230923 10:40:02.082" endtime="20230923 10:40:10.124"/>
</test>
<doc>Test for reading snapshots with ACLs as different users</doc>
<status status="PASS" starttime="20230923 10:39:09.128" endtime="20230923 10:40:10.126"/>
</suite>
<suite id="s1-s11" name="Httpfs" source="/opt/hadoop/smoketest/httpfs">
<suite id="s1-s11-s1" name="Operations Tests" source="/opt/hadoop/smoketest/httpfs/operations_tests.robot">
<kw name="Generate volume" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[LOWER]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230923 10:40:13.758" level="INFO">${random} = gfntx</msg>
<status status="PASS" starttime="20230923 10:40:13.758" endtime="20230923 10:40:13.758"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${volume}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230923 10:40:13.759" level="INFO">${volume} = gfntx</msg>
<status status="PASS" starttime="20230923 10:40:13.759" endtime="20230923 10:40:13.759"/>
</kw>
<status status="PASS" starttime="20230923 10:40:13.758" endtime="20230923 10:40:13.759"/>
</kw>
<test id="s1-s11-s1-t1" name="Kinit admin user" line="38">
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}'=='false'</arg>
<arg>This is for secured environment</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20230923 10:40:13.760" endtime="20230923 10:40:13.760"/>
</kw>
<kw name="Kinit admin">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k om/om@EXAMPLE.COM -t /etc/security/keytabs/om.keytab</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k om/om@EXAMPLE.COM -t /etc/security/keytabs/om.keytab</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:40:13.765" level="INFO">Running command 'kinit -k om/om@EXAMPLE.COM -t /etc/security/keytabs/om.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:40:13.784" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:40:13.784" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:40:13.762" endtime="20230923 10:40:13.784"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:40:13.785" level="INFO"/>
<status status="PASS" starttime="20230923 10:40:13.785" endtime="20230923 10:40:13.785"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:40:13.786" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:40:13.786" endtime="20230923 10:40:13.786"/>
</kw>
<status status="PASS" starttime="20230923 10:40:13.762" endtime="20230923 10:40:13.786"/>
</kw>
<msg timestamp="20230923 10:40:13.786" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:40:13.762" endtime="20230923 10:40:13.787"/>
</kw>
<status status="PASS" starttime="20230923 10:40:13.761" endtime="20230923 10:40:13.787"/>
</kw>
<status status="PASS" starttime="20230923 10:40:13.761" endtime="20230923 10:40:13.787"/>
</kw>
<status status="PASS" starttime="20230923 10:40:13.760" endtime="20230923 10:40:13.787"/>
</kw>
<status status="PASS" starttime="20230923 10:40:13.759" endtime="20230923 10:40:13.787"/>
</test>
<test id="s1-s11-s1-t2" name="Create volume" line="42">
<kw name="Execute curl command" library="operations">
<var>${vol}</var>
<arg>${volume}</arg>
<arg>MKDIRS</arg>
<arg>-X PUT</arg>
<kw name="Set Variable If" library="BuiltIn">
<var>${user.name}</var>
<arg>'${SECURITY_ENABLED}'=='false'</arg>
<arg>&amp;user.name=${USERNAME}</arg>
<arg>${EMPTY}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230923 10:40:13.791" level="INFO">${user.name} = </msg>
<status status="PASS" starttime="20230923 10:40:13.789" endtime="20230923 10:40:13.791"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${final_url}</var>
<arg>SEPARATOR=</arg>
<arg>${URL}</arg>
<arg>${path}</arg>
<arg>?op=</arg>
<arg>${operation}</arg>
<arg>${user.name}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230923 10:40:13.792" level="INFO">${final_url} = http://httpfs:14000/webhdfs/v1/gfntx?op=MKDIRS</msg>
<status status="PASS" starttime="20230923 10:40:13.791" endtime="20230923 10:40:13.792"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${curl_extra_commands}</var>
<arg>'${SECURITY_ENABLED}'=='true'</arg>
<arg>--negotiate -u :</arg>
<arg>${EMPTY}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230923 10:40:13.792" level="INFO">${curl_extra_commands} = --negotiate -u :</msg>
<status status="PASS" starttime="20230923 10:40:13.792" endtime="20230923 10:40:13.792"/>
</kw>
<kw name="Run Process" library="Process">
<var>${output}</var>
<arg>curl ${extra_commands} ${curl_extra_commands} "${final_url}"</arg>
<arg>shell=True</arg>
<doc>Runs a process and waits for it to complete.</doc>
<msg timestamp="20230923 10:40:13.793" level="INFO">Starting process:
curl -X PUT --negotiate -u : "http://httpfs:14000/webhdfs/v1/gfntx?op=MKDIRS"</msg>
<msg timestamp="20230923 10:40:13.797" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20230923 10:40:16.524" level="INFO">Process completed.</msg>
<msg timestamp="20230923 10:40:16.525" level="INFO">${output} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20230923 10:40:13.793" endtime="20230923 10:40:16.525"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${output.rc}</arg>
<arg>0</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:40:16.527" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:40:16.526" endtime="20230923 10:40:16.528"/>
</kw>
<msg timestamp="20230923 10:40:16.528" level="INFO">${vol} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20230923 10:40:13.788" endtime="20230923 10:40:16.528"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${vol.stdout}</arg>
<arg>true</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:40:16.528" endtime="20230923 10:40:16.529"/>
</kw>
<status status="PASS" starttime="20230923 10:40:13.788" endtime="20230923 10:40:16.529"/>
</test>
<test id="s1-s11-s1-t3" name="Set owner of volume" line="46">
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}'=='false'</arg>
<arg>This is for secured environment</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20230923 10:40:16.533" endtime="20230923 10:40:16.533"/>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<var>${rc}</var>
<arg>ozone sh volume update --user=testuser /${volume}</arg>
<doc>Runs the given command in the system and returns the return code.</doc>
<msg timestamp="20230923 10:40:16.538" level="INFO">Running command 'ozone sh volume update --user=testuser /gfntx 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:40:22.554" level="INFO">${rc} = 0</msg>
<status status="PASS" starttime="20230923 10:40:16.533" endtime="20230923 10:40:22.555"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>0</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:40:22.556" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:40:22.555" endtime="20230923 10:40:22.556"/>
</kw>
<status status="PASS" starttime="20230923 10:40:16.531" endtime="20230923 10:40:22.556"/>
</test>
<test id="s1-s11-s1-t4" name="Kinit testuser" line="51">
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}'=='false'</arg>
<arg>This is for secured environment</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20230923 10:40:22.558" endtime="20230923 10:40:22.560"/>
</kw>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:40:22.565" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:40:22.569" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:40:22.569" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230923 10:40:22.562" endtime="20230923 10:40:22.569"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:40:22.570" level="INFO">scm</msg>
<status status="PASS" starttime="20230923 10:40:22.570" endtime="20230923 10:40:22.570"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:40:22.571" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:40:22.570" endtime="20230923 10:40:22.571"/>
</kw>
<status status="PASS" starttime="20230923 10:40:22.561" endtime="20230923 10:40:22.571"/>
</kw>
<msg timestamp="20230923 10:40:22.571" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:40:22.561" endtime="20230923 10:40:22.571"/>
</kw>
<msg timestamp="20230923 10:40:22.572" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230923 10:40:22.561" endtime="20230923 10:40:22.572"/>
</kw>
<msg timestamp="20230923 10:40:22.572" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230923 10:40:22.560" endtime="20230923 10:40:22.572"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230923 10:40:22.572" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230923 10:40:22.572" endtime="20230923 10:40:22.572"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 10:40:22.577" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 10:40:22.595" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 10:40:22.595" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 10:40:22.575" endtime="20230923 10:40:22.595"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 10:40:22.596" level="INFO"/>
<status status="PASS" starttime="20230923 10:40:22.595" endtime="20230923 10:40:22.596"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:40:22.597" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:40:22.596" endtime="20230923 10:40:22.597"/>
</kw>
<status status="PASS" starttime="20230923 10:40:22.574" endtime="20230923 10:40:22.597"/>
</kw>
<msg timestamp="20230923 10:40:22.597" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 10:40:22.574" endtime="20230923 10:40:22.597"/>
</kw>
<status status="PASS" starttime="20230923 10:40:22.573" endtime="20230923 10:40:22.597"/>
</kw>
<status status="PASS" starttime="20230923 10:40:22.573" endtime="20230923 10:40:22.598"/>
</kw>
<status status="PASS" starttime="20230923 10:40:22.560" endtime="20230923 10:40:22.598"/>
</kw>
<status status="PASS" starttime="20230923 10:40:22.557" endtime="20230923 10:40:22.598"/>
</test>
<test id="s1-s11-s1-t5" name="Create first bucket" line="55">
<kw name="Execute curl command" library="operations">
<var>${bucket}</var>
<arg>${volume}/buck1</arg>
<arg>MKDIRS</arg>
<arg>-X PUT</arg>
<kw name="Set Variable If" library="BuiltIn">
<var>${user.name}</var>
<arg>'${SECURITY_ENABLED}'=='false'</arg>
<arg>&amp;user.name=${USERNAME}</arg>
<arg>${EMPTY}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230923 10:40:22.603" level="INFO">${user.name} = </msg>
<status status="PASS" starttime="20230923 10:40:22.600" endtime="20230923 10:40:22.603"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${final_url}</var>
<arg>SEPARATOR=</arg>
<arg>${URL}</arg>
<arg>${path}</arg>
<arg>?op=</arg>
<arg>${operation}</arg>
<arg>${user.name}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230923 10:40:22.604" level="INFO">${final_url} = http://httpfs:14000/webhdfs/v1/gfntx/buck1?op=MKDIRS</msg>
<status status="PASS" starttime="20230923 10:40:22.603" endtime="20230923 10:40:22.604"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${curl_extra_commands}</var>
<arg>'${SECURITY_ENABLED}'=='true'</arg>
<arg>--negotiate -u :</arg>
<arg>${EMPTY}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230923 10:40:22.605" level="INFO">${curl_extra_commands} = --negotiate -u :</msg>
<status status="PASS" starttime="20230923 10:40:22.604" endtime="20230923 10:40:22.605"/>
</kw>
<kw name="Run Process" library="Process">
<var>${output}</var>
<arg>curl ${extra_commands} ${curl_extra_commands} "${final_url}"</arg>
<arg>shell=True</arg>
<doc>Runs a process and waits for it to complete.</doc>
<msg timestamp="20230923 10:40:22.605" level="INFO">Starting process:
curl -X PUT --negotiate -u : "http://httpfs:14000/webhdfs/v1/gfntx/buck1?op=MKDIRS"</msg>
<msg timestamp="20230923 10:40:22.609" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20230923 10:40:22.802" level="INFO">Process completed.</msg>
<msg timestamp="20230923 10:40:22.802" level="INFO">${output} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20230923 10:40:22.605" endtime="20230923 10:40:22.803"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${output.rc}</arg>
<arg>0</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:40:22.805" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:40:22.803" endtime="20230923 10:40:22.805"/>
</kw>
<msg timestamp="20230923 10:40:22.806" level="INFO">${bucket} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20230923 10:40:22.599" endtime="20230923 10:40:22.806"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${bucket.stdout}</arg>
<arg>true</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:40:22.806" endtime="20230923 10:40:22.807"/>
</kw>
<status status="PASS" starttime="20230923 10:40:22.599" endtime="20230923 10:40:22.807"/>
</test>
<test id="s1-s11-s1-t6" name="Create second bucket" line="59">
<kw name="Execute curl command" library="operations">
<var>${bucket}</var>
<arg>${volume}/buck2</arg>
<arg>MKDIRS</arg>
<arg>-X PUT</arg>
<kw name="Set Variable If" library="BuiltIn">
<var>${user.name}</var>
<arg>'${SECURITY_ENABLED}'=='false'</arg>
<arg>&amp;user.name=${USERNAME}</arg>
<arg>${EMPTY}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230923 10:40:22.812" level="INFO">${user.name} = </msg>
<status status="PASS" starttime="20230923 10:40:22.810" endtime="20230923 10:40:22.813"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${final_url}</var>
<arg>SEPARATOR=</arg>
<arg>${URL}</arg>
<arg>${path}</arg>
<arg>?op=</arg>
<arg>${operation}</arg>
<arg>${user.name}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230923 10:40:22.814" level="INFO">${final_url} = http://httpfs:14000/webhdfs/v1/gfntx/buck2?op=MKDIRS</msg>
<status status="PASS" starttime="20230923 10:40:22.813" endtime="20230923 10:40:22.814"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${curl_extra_commands}</var>
<arg>'${SECURITY_ENABLED}'=='true'</arg>
<arg>--negotiate -u :</arg>
<arg>${EMPTY}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230923 10:40:22.815" level="INFO">${curl_extra_commands} = --negotiate -u :</msg>
<status status="PASS" starttime="20230923 10:40:22.814" endtime="20230923 10:40:22.815"/>
</kw>
<kw name="Run Process" library="Process">
<var>${output}</var>
<arg>curl ${extra_commands} ${curl_extra_commands} "${final_url}"</arg>
<arg>shell=True</arg>
<doc>Runs a process and waits for it to complete.</doc>
<msg timestamp="20230923 10:40:22.816" level="INFO">Starting process:
curl -X PUT --negotiate -u : "http://httpfs:14000/webhdfs/v1/gfntx/buck2?op=MKDIRS"</msg>
<msg timestamp="20230923 10:40:22.822" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20230923 10:40:22.866" level="INFO">Process completed.</msg>
<msg timestamp="20230923 10:40:22.866" level="INFO">${output} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20230923 10:40:22.815" endtime="20230923 10:40:22.866"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${output.rc}</arg>
<arg>0</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:40:22.869" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:40:22.867" endtime="20230923 10:40:22.869"/>
</kw>
<msg timestamp="20230923 10:40:22.869" level="INFO">${bucket} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20230923 10:40:22.809" endtime="20230923 10:40:22.869"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${bucket.stdout}</arg>
<arg>true</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:40:22.869" endtime="20230923 10:40:22.871"/>
</kw>
<status status="PASS" starttime="20230923 10:40:22.808" endtime="20230923 10:40:22.871"/>
</test>
<test id="s1-s11-s1-t7" name="Create local testfile" line="63">
<kw name="Create file" library="operations">
<arg>testfile</arg>
<kw name="Run Process" library="Process">
<arg>touch ${file_name}</arg>
<arg>shell=True</arg>
<doc>Runs a process and waits for it to complete.</doc>
<msg timestamp="20230923 10:40:22.874" level="INFO">Starting process:
touch testfile</msg>
<msg timestamp="20230923 10:40:22.878" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20230923 10:40:22.881" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20230923 10:40:22.874" endtime="20230923 10:40:22.881"/>
</kw>
<kw name="Run Process" library="Process">
<arg>echo "Hello world!"&gt;${file_name}</arg>
<arg>shell=True</arg>
<doc>Runs a process and waits for it to complete.</doc>
<msg timestamp="20230923 10:40:22.882" level="INFO">Starting process:
echo "Hello world!"&gt;testfile</msg>
<msg timestamp="20230923 10:40:22.892" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20230923 10:40:22.898" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20230923 10:40:22.882" endtime="20230923 10:40:22.898"/>
</kw>
<status status="PASS" starttime="20230923 10:40:22.873" endtime="20230923 10:40:22.898"/>
</kw>
<status status="PASS" starttime="20230923 10:40:22.872" endtime="20230923 10:40:22.899"/>
</test>
<test id="s1-s11-s1-t8" name="Create testfile" line="66">
<kw name="Execute create file command" library="operations">
<var>${file}</var>
<arg>${volume}/buck1/testfile</arg>
<arg>testfile</arg>
<kw name="Set Variable If" library="BuiltIn">
<var>${user.name}</var>
<arg>'${SECURITY_ENABLED}'=='false'</arg>
<arg>&amp;user.name=${USERNAME}</arg>
<arg>${EMPTY}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230923 10:40:22.906" level="INFO">${user.name} = </msg>
<status status="PASS" starttime="20230923 10:40:22.903" endtime="20230923 10:40:22.906"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${curl_extra_commands}</var>
<arg>'${SECURITY_ENABLED}'=='true'</arg>
<arg>--negotiate -u :</arg>
<arg>${EMPTY}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230923 10:40:22.908" level="INFO">${curl_extra_commands} = --negotiate -u :</msg>
<status status="PASS" starttime="20230923 10:40:22.906" endtime="20230923 10:40:22.908"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${final_url}</var>
<arg>SEPARATOR=</arg>
<arg>${URL}</arg>
<arg>${path}</arg>
<arg>?op=CREATE</arg>
<arg>${user.name}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230923 10:40:22.909" level="INFO">${final_url} = http://httpfs:14000/webhdfs/v1/gfntx/buck1/testfile?op=CREATE</msg>
<status status="PASS" starttime="20230923 10:40:22.909" endtime="20230923 10:40:22.909"/>
</kw>
<kw name="Run Process" library="Process">
<var>${output}</var>
<arg>curl -X PUT ${curl_extra_commands} "${final_url}"</arg>
<arg>shell=True</arg>
<doc>Runs a process and waits for it to complete.</doc>
<msg timestamp="20230923 10:40:22.910" level="INFO">Starting process:
curl -X PUT --negotiate -u : "http://httpfs:14000/webhdfs/v1/gfntx/buck1/testfile?op=CREATE"</msg>
<msg timestamp="20230923 10:40:22.914" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20230923 10:40:22.950" level="INFO">Process completed.</msg>
<msg timestamp="20230923 10:40:22.950" level="INFO">${output} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20230923 10:40:22.909" endtime="20230923 10:40:22.950"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${output.rc}</arg>
<arg>0</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:40:22.953" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:40:22.951" endtime="20230923 10:40:22.953"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${final_url2}</var>
<arg>SEPARATOR=</arg>
<arg>${URL}</arg>
<arg>${path}</arg>
<arg>?op=CREATE&amp;data=true</arg>
<arg>${user.name}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230923 10:40:22.954" level="INFO">${final_url2} = http://httpfs:14000/webhdfs/v1/gfntx/buck1/testfile?op=CREATE&amp;data=true</msg>
<status status="PASS" starttime="20230923 10:40:22.953" endtime="20230923 10:40:22.954"/>
</kw>
<kw name="Run Process" library="Process">
<var>${output2}</var>
<arg>curl -X PUT -T ${file_name} ${curl_extra_commands} "${final_url2}" -H"Content-Type: application/octet-stream"</arg>
<arg>shell=True</arg>
<doc>Runs a process and waits for it to complete.</doc>
<msg timestamp="20230923 10:40:22.955" level="INFO">Starting process:
curl -X PUT -T testfile --negotiate -u : "http://httpfs:14000/webhdfs/v1/gfntx/buck1/testfile?op=CREATE&amp;data=true" -H"Content-Type: application/octet-stream"</msg>
<msg timestamp="20230923 10:40:22.958" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20230923 10:40:24.964" level="INFO">Process completed.</msg>
<msg timestamp="20230923 10:40:24.965" level="INFO">${output2} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20230923 10:40:22.954" endtime="20230923 10:40:24.965"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${output2.rc}</arg>
<arg>0</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:40:24.967" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:40:24.965" endtime="20230923 10:40:24.967"/>
</kw>
<msg timestamp="20230923 10:40:24.967" level="INFO">${file} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20230923 10:40:22.902" endtime="20230923 10:40:24.967"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${file.stdout}</arg>
<arg>http://httpfs:14000/webhdfs/v1/${volume}/buck1/testfile</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:40:24.968" endtime="20230923 10:40:24.969"/>
</kw>
<status status="PASS" starttime="20230923 10:40:22.899" endtime="20230923 10:40:24.969"/>
</test>
<test id="s1-s11-s1-t9" name="Read file" line="70">
<kw name="Execute curl command" library="operations">
<var>${file}</var>
<arg>${volume}/buck1/testfile</arg>
<arg>OPEN</arg>
<arg>-L</arg>
<kw name="Set Variable If" library="BuiltIn">
<var>${user.name}</var>
<arg>'${SECURITY_ENABLED}'=='false'</arg>
<arg>&amp;user.name=${USERNAME}</arg>
<arg>${EMPTY}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230923 10:40:24.975" level="INFO">${user.name} = </msg>
<status status="PASS" starttime="20230923 10:40:24.972" endtime="20230923 10:40:24.975"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${final_url}</var>
<arg>SEPARATOR=</arg>
<arg>${URL}</arg>
<arg>${path}</arg>
<arg>?op=</arg>
<arg>${operation}</arg>
<arg>${user.name}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230923 10:40:24.975" level="INFO">${final_url} = http://httpfs:14000/webhdfs/v1/gfntx/buck1/testfile?op=OPEN</msg>
<status status="PASS" starttime="20230923 10:40:24.975" endtime="20230923 10:40:24.976"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${curl_extra_commands}</var>
<arg>'${SECURITY_ENABLED}'=='true'</arg>
<arg>--negotiate -u :</arg>
<arg>${EMPTY}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230923 10:40:24.976" level="INFO">${curl_extra_commands} = --negotiate -u :</msg>
<status status="PASS" starttime="20230923 10:40:24.976" endtime="20230923 10:40:24.976"/>
</kw>
<kw name="Run Process" library="Process">
<var>${output}</var>
<arg>curl ${extra_commands} ${curl_extra_commands} "${final_url}"</arg>
<arg>shell=True</arg>
<doc>Runs a process and waits for it to complete.</doc>
<msg timestamp="20230923 10:40:24.977" level="INFO">Starting process:
curl -L --negotiate -u : "http://httpfs:14000/webhdfs/v1/gfntx/buck1/testfile?op=OPEN"</msg>
<msg timestamp="20230923 10:40:24.981" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20230923 10:40:25.360" level="INFO">Process completed.</msg>
<msg timestamp="20230923 10:40:25.361" level="INFO">${output} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20230923 10:40:24.976" endtime="20230923 10:40:25.361"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${output.rc}</arg>
<arg>0</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:40:25.363" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:40:25.362" endtime="20230923 10:40:25.364"/>
</kw>
<msg timestamp="20230923 10:40:25.364" level="INFO">${file} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20230923 10:40:24.971" endtime="20230923 10:40:25.364"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${file.stdout}</arg>
<arg>Hello world!</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:40:25.364" endtime="20230923 10:40:25.366"/>
</kw>
<status status="PASS" starttime="20230923 10:40:24.970" endtime="20230923 10:40:25.366"/>
</test>
<test id="s1-s11-s1-t10" name="Delete bucket" line="80">
<kw name="Execute curl command" library="operations">
<var>${bucket}</var>
<arg>${volume}/buck2</arg>
<arg>DELETE</arg>
<arg>-X DELETE</arg>
<kw name="Set Variable If" library="BuiltIn">
<var>${user.name}</var>
<arg>'${SECURITY_ENABLED}'=='false'</arg>
<arg>&amp;user.name=${USERNAME}</arg>
<arg>${EMPTY}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230923 10:40:25.371" level="INFO">${user.name} = </msg>
<status status="PASS" starttime="20230923 10:40:25.369" endtime="20230923 10:40:25.372"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${final_url}</var>
<arg>SEPARATOR=</arg>
<arg>${URL}</arg>
<arg>${path}</arg>
<arg>?op=</arg>
<arg>${operation}</arg>
<arg>${user.name}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230923 10:40:25.373" level="INFO">${final_url} = http://httpfs:14000/webhdfs/v1/gfntx/buck2?op=DELETE</msg>
<status status="PASS" starttime="20230923 10:40:25.372" endtime="20230923 10:40:25.373"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${curl_extra_commands}</var>
<arg>'${SECURITY_ENABLED}'=='true'</arg>
<arg>--negotiate -u :</arg>
<arg>${EMPTY}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230923 10:40:25.373" level="INFO">${curl_extra_commands} = --negotiate -u :</msg>
<status status="PASS" starttime="20230923 10:40:25.373" endtime="20230923 10:40:25.373"/>
</kw>
<kw name="Run Process" library="Process">
<var>${output}</var>
<arg>curl ${extra_commands} ${curl_extra_commands} "${final_url}"</arg>
<arg>shell=True</arg>
<doc>Runs a process and waits for it to complete.</doc>
<msg timestamp="20230923 10:40:25.374" level="INFO">Starting process:
curl -X DELETE --negotiate -u : "http://httpfs:14000/webhdfs/v1/gfntx/buck2?op=DELETE"</msg>
<msg timestamp="20230923 10:40:25.378" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20230923 10:40:25.638" level="INFO">Process completed.</msg>
<msg timestamp="20230923 10:40:25.638" level="INFO">${output} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20230923 10:40:25.374" endtime="20230923 10:40:25.638"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${output.rc}</arg>
<arg>0</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:40:25.641" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:40:25.639" endtime="20230923 10:40:25.641"/>
</kw>
<msg timestamp="20230923 10:40:25.641" level="INFO">${bucket} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20230923 10:40:25.368" endtime="20230923 10:40:25.641"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${bucket.stdout}</arg>
<arg>true</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:40:25.641" endtime="20230923 10:40:25.645"/>
</kw>
<status status="PASS" starttime="20230923 10:40:25.367" endtime="20230923 10:40:25.645"/>
</test>
<test id="s1-s11-s1-t11" name="Get status of bucket" line="84">
<kw name="Execute curl command" library="operations">
<var>${status}</var>
<arg>${volume}/buck1</arg>
<arg>GETFILESTATUS</arg>
<arg>${EMPTY}</arg>
<kw name="Set Variable If" library="BuiltIn">
<var>${user.name}</var>
<arg>'${SECURITY_ENABLED}'=='false'</arg>
<arg>&amp;user.name=${USERNAME}</arg>
<arg>${EMPTY}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230923 10:40:25.657" level="INFO">${user.name} = </msg>
<status status="PASS" starttime="20230923 10:40:25.652" endtime="20230923 10:40:25.657"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${final_url}</var>
<arg>SEPARATOR=</arg>
<arg>${URL}</arg>
<arg>${path}</arg>
<arg>?op=</arg>
<arg>${operation}</arg>
<arg>${user.name}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230923 10:40:25.658" level="INFO">${final_url} = http://httpfs:14000/webhdfs/v1/gfntx/buck1?op=GETFILESTATUS</msg>
<status status="PASS" starttime="20230923 10:40:25.657" endtime="20230923 10:40:25.658"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${curl_extra_commands}</var>
<arg>'${SECURITY_ENABLED}'=='true'</arg>
<arg>--negotiate -u :</arg>
<arg>${EMPTY}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230923 10:40:25.659" level="INFO">${curl_extra_commands} = --negotiate -u :</msg>
<status status="PASS" starttime="20230923 10:40:25.658" endtime="20230923 10:40:25.659"/>
</kw>
<kw name="Run Process" library="Process">
<var>${output}</var>
<arg>curl ${extra_commands} ${curl_extra_commands} "${final_url}"</arg>
<arg>shell=True</arg>
<doc>Runs a process and waits for it to complete.</doc>
<msg timestamp="20230923 10:40:25.660" level="INFO">Starting process:
curl  --negotiate -u : "http://httpfs:14000/webhdfs/v1/gfntx/buck1?op=GETFILESTATUS"</msg>
<msg timestamp="20230923 10:40:25.663" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20230923 10:40:25.704" level="INFO">Process completed.</msg>
<msg timestamp="20230923 10:40:25.705" level="INFO">${output} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20230923 10:40:25.659" endtime="20230923 10:40:25.705"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${output.rc}</arg>
<arg>0</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:40:25.707" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:40:25.705" endtime="20230923 10:40:25.707"/>
</kw>
<msg timestamp="20230923 10:40:25.707" level="INFO">${status} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20230923 10:40:25.649" endtime="20230923 10:40:25.707"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${status.stdout}</arg>
<arg>FileStatus</arg>
<arg>DIRECTORY</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:40:25.708" endtime="20230923 10:40:25.709"/>
</kw>
<status status="PASS" starttime="20230923 10:40:25.647" endtime="20230923 10:40:25.709"/>
</test>
<test id="s1-s11-s1-t12" name="Get status of file" line="88">
<kw name="Execute curl command" library="operations">
<var>${status}</var>
<arg>${volume}/buck1/testfile</arg>
<arg>GETFILESTATUS</arg>
<arg>${EMPTY}</arg>
<kw name="Set Variable If" library="BuiltIn">
<var>${user.name}</var>
<arg>'${SECURITY_ENABLED}'=='false'</arg>
<arg>&amp;user.name=${USERNAME}</arg>
<arg>${EMPTY}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230923 10:40:25.715" level="INFO">${user.name} = </msg>
<status status="PASS" starttime="20230923 10:40:25.712" endtime="20230923 10:40:25.715"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${final_url}</var>
<arg>SEPARATOR=</arg>
<arg>${URL}</arg>
<arg>${path}</arg>
<arg>?op=</arg>
<arg>${operation}</arg>
<arg>${user.name}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230923 10:40:25.715" level="INFO">${final_url} = http://httpfs:14000/webhdfs/v1/gfntx/buck1/testfile?op=GETFILESTATUS</msg>
<status status="PASS" starttime="20230923 10:40:25.715" endtime="20230923 10:40:25.716"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${curl_extra_commands}</var>
<arg>'${SECURITY_ENABLED}'=='true'</arg>
<arg>--negotiate -u :</arg>
<arg>${EMPTY}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230923 10:40:25.716" level="INFO">${curl_extra_commands} = --negotiate -u :</msg>
<status status="PASS" starttime="20230923 10:40:25.716" endtime="20230923 10:40:25.716"/>
</kw>
<kw name="Run Process" library="Process">
<var>${output}</var>
<arg>curl ${extra_commands} ${curl_extra_commands} "${final_url}"</arg>
<arg>shell=True</arg>
<doc>Runs a process and waits for it to complete.</doc>
<msg timestamp="20230923 10:40:25.717" level="INFO">Starting process:
curl  --negotiate -u : "http://httpfs:14000/webhdfs/v1/gfntx/buck1/testfile?op=GETFILESTATUS"</msg>
<msg timestamp="20230923 10:40:25.721" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20230923 10:40:25.788" level="INFO">Process completed.</msg>
<msg timestamp="20230923 10:40:25.790" level="INFO">${output} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20230923 10:40:25.716" endtime="20230923 10:40:25.790"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${output.rc}</arg>
<arg>0</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:40:25.792" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:40:25.790" endtime="20230923 10:40:25.793"/>
</kw>
<msg timestamp="20230923 10:40:25.793" level="INFO">${status} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20230923 10:40:25.711" endtime="20230923 10:40:25.793"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${status.stdout}</arg>
<arg>FileStatus</arg>
<arg>FILE</arg>
<arg>13</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:40:25.793" endtime="20230923 10:40:25.795"/>
</kw>
<status status="PASS" starttime="20230923 10:40:25.710" endtime="20230923 10:40:25.795"/>
</test>
<test id="s1-s11-s1-t13" name="List bucket" line="92">
<kw name="Execute curl command" library="operations">
<var>${list}</var>
<arg>${volume}/buck1</arg>
<arg>LISTSTATUS</arg>
<arg>${EMPTY}</arg>
<kw name="Set Variable If" library="BuiltIn">
<var>${user.name}</var>
<arg>'${SECURITY_ENABLED}'=='false'</arg>
<arg>&amp;user.name=${USERNAME}</arg>
<arg>${EMPTY}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230923 10:40:25.807" level="INFO">${user.name} = </msg>
<status status="PASS" starttime="20230923 10:40:25.802" endtime="20230923 10:40:25.807"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${final_url}</var>
<arg>SEPARATOR=</arg>
<arg>${URL}</arg>
<arg>${path}</arg>
<arg>?op=</arg>
<arg>${operation}</arg>
<arg>${user.name}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230923 10:40:25.808" level="INFO">${final_url} = http://httpfs:14000/webhdfs/v1/gfntx/buck1?op=LISTSTATUS</msg>
<status status="PASS" starttime="20230923 10:40:25.807" endtime="20230923 10:40:25.808"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${curl_extra_commands}</var>
<arg>'${SECURITY_ENABLED}'=='true'</arg>
<arg>--negotiate -u :</arg>
<arg>${EMPTY}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230923 10:40:25.810" level="INFO">${curl_extra_commands} = --negotiate -u :</msg>
<status status="PASS" starttime="20230923 10:40:25.809" endtime="20230923 10:40:25.810"/>
</kw>
<kw name="Run Process" library="Process">
<var>${output}</var>
<arg>curl ${extra_commands} ${curl_extra_commands} "${final_url}"</arg>
<arg>shell=True</arg>
<doc>Runs a process and waits for it to complete.</doc>
<msg timestamp="20230923 10:40:25.812" level="INFO">Starting process:
curl  --negotiate -u : "http://httpfs:14000/webhdfs/v1/gfntx/buck1?op=LISTSTATUS"</msg>
<msg timestamp="20230923 10:40:25.819" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20230923 10:40:25.885" level="INFO">Process completed.</msg>
<msg timestamp="20230923 10:40:25.886" level="INFO">${output} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20230923 10:40:25.811" endtime="20230923 10:40:25.887"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${output.rc}</arg>
<arg>0</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:40:25.889" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:40:25.887" endtime="20230923 10:40:25.890"/>
</kw>
<msg timestamp="20230923 10:40:25.890" level="INFO">${list} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20230923 10:40:25.798" endtime="20230923 10:40:25.890"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${list.stdout}</arg>
<arg>FileStatus</arg>
<arg>testfile</arg>
<arg>FILE</arg>
<arg>13</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:40:25.890" endtime="20230923 10:40:25.892"/>
</kw>
<status status="PASS" starttime="20230923 10:40:25.796" endtime="20230923 10:40:25.892"/>
</test>
<test id="s1-s11-s1-t14" name="List file" line="96">
<kw name="Execute curl command" library="operations">
<var>${list}</var>
<arg>${volume}/buck1/testfile</arg>
<arg>LISTSTATUS</arg>
<arg>${EMPTY}</arg>
<kw name="Set Variable If" library="BuiltIn">
<var>${user.name}</var>
<arg>'${SECURITY_ENABLED}'=='false'</arg>
<arg>&amp;user.name=${USERNAME}</arg>
<arg>${EMPTY}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230923 10:40:25.904" level="INFO">${user.name} = </msg>
<status status="PASS" starttime="20230923 10:40:25.898" endtime="20230923 10:40:25.904"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${final_url}</var>
<arg>SEPARATOR=</arg>
<arg>${URL}</arg>
<arg>${path}</arg>
<arg>?op=</arg>
<arg>${operation}</arg>
<arg>${user.name}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230923 10:40:25.906" level="INFO">${final_url} = http://httpfs:14000/webhdfs/v1/gfntx/buck1/testfile?op=LISTSTATUS</msg>
<status status="PASS" starttime="20230923 10:40:25.904" endtime="20230923 10:40:25.906"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${curl_extra_commands}</var>
<arg>'${SECURITY_ENABLED}'=='true'</arg>
<arg>--negotiate -u :</arg>
<arg>${EMPTY}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230923 10:40:25.907" level="INFO">${curl_extra_commands} = --negotiate -u :</msg>
<status status="PASS" starttime="20230923 10:40:25.906" endtime="20230923 10:40:25.907"/>
</kw>
<kw name="Run Process" library="Process">
<var>${output}</var>
<arg>curl ${extra_commands} ${curl_extra_commands} "${final_url}"</arg>
<arg>shell=True</arg>
<doc>Runs a process and waits for it to complete.</doc>
<msg timestamp="20230923 10:40:25.908" level="INFO">Starting process:
curl  --negotiate -u : "http://httpfs:14000/webhdfs/v1/gfntx/buck1/testfile?op=LISTSTATUS"</msg>
<msg timestamp="20230923 10:40:25.912" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20230923 10:40:25.952" level="INFO">Process completed.</msg>
<msg timestamp="20230923 10:40:25.952" level="INFO">${output} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20230923 10:40:25.907" endtime="20230923 10:40:25.952"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${output.rc}</arg>
<arg>0</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:40:25.955" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:40:25.953" endtime="20230923 10:40:25.955"/>
</kw>
<msg timestamp="20230923 10:40:25.956" level="INFO">${list} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20230923 10:40:25.895" endtime="20230923 10:40:25.956"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${list.stdout}</arg>
<arg>FileStatus</arg>
<arg>FILE</arg>
<arg>13</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:40:25.956" endtime="20230923 10:40:25.958"/>
</kw>
<status status="PASS" starttime="20230923 10:40:25.893" endtime="20230923 10:40:25.958"/>
</test>
<test id="s1-s11-s1-t15" name="Get content summary of directory" line="100">
<kw name="Execute curl command" library="operations">
<var>${summary}</var>
<arg>${volume}</arg>
<arg>GETCONTENTSUMMARY</arg>
<arg>${EMPTY}</arg>
<kw name="Set Variable If" library="BuiltIn">
<var>${user.name}</var>
<arg>'${SECURITY_ENABLED}'=='false'</arg>
<arg>&amp;user.name=${USERNAME}</arg>
<arg>${EMPTY}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230923 10:40:25.965" level="INFO">${user.name} = </msg>
<status status="PASS" starttime="20230923 10:40:25.962" endtime="20230923 10:40:25.965"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${final_url}</var>
<arg>SEPARATOR=</arg>
<arg>${URL}</arg>
<arg>${path}</arg>
<arg>?op=</arg>
<arg>${operation}</arg>
<arg>${user.name}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230923 10:40:25.966" level="INFO">${final_url} = http://httpfs:14000/webhdfs/v1/gfntx?op=GETCONTENTSUMMARY</msg>
<status status="PASS" starttime="20230923 10:40:25.965" endtime="20230923 10:40:25.966"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${curl_extra_commands}</var>
<arg>'${SECURITY_ENABLED}'=='true'</arg>
<arg>--negotiate -u :</arg>
<arg>${EMPTY}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230923 10:40:25.966" level="INFO">${curl_extra_commands} = --negotiate -u :</msg>
<status status="PASS" starttime="20230923 10:40:25.966" endtime="20230923 10:40:25.966"/>
</kw>
<kw name="Run Process" library="Process">
<var>${output}</var>
<arg>curl ${extra_commands} ${curl_extra_commands} "${final_url}"</arg>
<arg>shell=True</arg>
<doc>Runs a process and waits for it to complete.</doc>
<msg timestamp="20230923 10:40:25.967" level="INFO">Starting process:
curl  --negotiate -u : "http://httpfs:14000/webhdfs/v1/gfntx?op=GETCONTENTSUMMARY"</msg>
<msg timestamp="20230923 10:40:25.971" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20230923 10:40:26.014" level="INFO">Process completed.</msg>
<msg timestamp="20230923 10:40:26.014" level="INFO">${output} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20230923 10:40:25.966" endtime="20230923 10:40:26.014"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${output.rc}</arg>
<arg>0</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:40:26.017" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:40:26.015" endtime="20230923 10:40:26.017"/>
</kw>
<msg timestamp="20230923 10:40:26.017" level="INFO">${summary} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20230923 10:40:25.961" endtime="20230923 10:40:26.017"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${summary.stdout}</arg>
<arg>ContentSummary</arg>
<arg>"directoryCount":2</arg>
<arg>"fileCount":1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:40:26.017" endtime="20230923 10:40:26.019"/>
</kw>
<status status="PASS" starttime="20230923 10:40:25.959" endtime="20230923 10:40:26.019"/>
</test>
<test id="s1-s11-s1-t16" name="Get quota usage of directory" line="104">
<kw name="Execute curl command" library="operations">
<var>${usage}</var>
<arg>${volume}</arg>
<arg>GETQUOTAUSAGE</arg>
<arg>${EMPTY}</arg>
<kw name="Set Variable If" library="BuiltIn">
<var>${user.name}</var>
<arg>'${SECURITY_ENABLED}'=='false'</arg>
<arg>&amp;user.name=${USERNAME}</arg>
<arg>${EMPTY}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230923 10:40:26.026" level="INFO">${user.name} = </msg>
<status status="PASS" starttime="20230923 10:40:26.023" endtime="20230923 10:40:26.026"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${final_url}</var>
<arg>SEPARATOR=</arg>
<arg>${URL}</arg>
<arg>${path}</arg>
<arg>?op=</arg>
<arg>${operation}</arg>
<arg>${user.name}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230923 10:40:26.027" level="INFO">${final_url} = http://httpfs:14000/webhdfs/v1/gfntx?op=GETQUOTAUSAGE</msg>
<status status="PASS" starttime="20230923 10:40:26.026" endtime="20230923 10:40:26.027"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${curl_extra_commands}</var>
<arg>'${SECURITY_ENABLED}'=='true'</arg>
<arg>--negotiate -u :</arg>
<arg>${EMPTY}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230923 10:40:26.027" level="INFO">${curl_extra_commands} = --negotiate -u :</msg>
<status status="PASS" starttime="20230923 10:40:26.027" endtime="20230923 10:40:26.027"/>
</kw>
<kw name="Run Process" library="Process">
<var>${output}</var>
<arg>curl ${extra_commands} ${curl_extra_commands} "${final_url}"</arg>
<arg>shell=True</arg>
<doc>Runs a process and waits for it to complete.</doc>
<msg timestamp="20230923 10:40:26.028" level="INFO">Starting process:
curl  --negotiate -u : "http://httpfs:14000/webhdfs/v1/gfntx?op=GETQUOTAUSAGE"</msg>
<msg timestamp="20230923 10:40:26.033" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20230923 10:40:26.084" level="INFO">Process completed.</msg>
<msg timestamp="20230923 10:40:26.084" level="INFO">${output} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20230923 10:40:26.028" endtime="20230923 10:40:26.085"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${output.rc}</arg>
<arg>0</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:40:26.087" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:40:26.085" endtime="20230923 10:40:26.087"/>
</kw>
<msg timestamp="20230923 10:40:26.087" level="INFO">${usage} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20230923 10:40:26.022" endtime="20230923 10:40:26.087"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${usage.stdout}</arg>
<arg>QuotaUsage</arg>
<arg>"fileAndDirectoryCount":3</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:40:26.087" endtime="20230923 10:40:26.088"/>
</kw>
<status status="PASS" starttime="20230923 10:40:26.021" endtime="20230923 10:40:26.089"/>
</test>
<test id="s1-s11-s1-t17" name="Get home directory" line="108">
<kw name="Execute curl command" library="operations">
<var>${home}</var>
<arg>${EMPTY}</arg>
<arg>GETHOMEDIRECTORY</arg>
<arg>${EMPTY}</arg>
<kw name="Set Variable If" library="BuiltIn">
<var>${user.name}</var>
<arg>'${SECURITY_ENABLED}'=='false'</arg>
<arg>&amp;user.name=${USERNAME}</arg>
<arg>${EMPTY}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230923 10:40:26.096" level="INFO">${user.name} = </msg>
<status status="PASS" starttime="20230923 10:40:26.094" endtime="20230923 10:40:26.097"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${final_url}</var>
<arg>SEPARATOR=</arg>
<arg>${URL}</arg>
<arg>${path}</arg>
<arg>?op=</arg>
<arg>${operation}</arg>
<arg>${user.name}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230923 10:40:26.097" level="INFO">${final_url} = http://httpfs:14000/webhdfs/v1/?op=GETHOMEDIRECTORY</msg>
<status status="PASS" starttime="20230923 10:40:26.097" endtime="20230923 10:40:26.097"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${curl_extra_commands}</var>
<arg>'${SECURITY_ENABLED}'=='true'</arg>
<arg>--negotiate -u :</arg>
<arg>${EMPTY}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230923 10:40:26.098" level="INFO">${curl_extra_commands} = --negotiate -u :</msg>
<status status="PASS" starttime="20230923 10:40:26.098" endtime="20230923 10:40:26.098"/>
</kw>
<kw name="Run Process" library="Process">
<var>${output}</var>
<arg>curl ${extra_commands} ${curl_extra_commands} "${final_url}"</arg>
<arg>shell=True</arg>
<doc>Runs a process and waits for it to complete.</doc>
<msg timestamp="20230923 10:40:26.099" level="INFO">Starting process:
curl  --negotiate -u : "http://httpfs:14000/webhdfs/v1/?op=GETHOMEDIRECTORY"</msg>
<msg timestamp="20230923 10:40:26.103" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20230923 10:40:26.125" level="INFO">Process completed.</msg>
<msg timestamp="20230923 10:40:26.125" level="INFO">${output} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20230923 10:40:26.098" endtime="20230923 10:40:26.125"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${output.rc}</arg>
<arg>0</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:40:26.127" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:40:26.126" endtime="20230923 10:40:26.127"/>
</kw>
<msg timestamp="20230923 10:40:26.127" level="INFO">${home} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20230923 10:40:26.092" endtime="20230923 10:40:26.128"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${user}</var>
<arg>'${SECURITY_ENABLED}'=='true'</arg>
<arg>testuser</arg>
<arg>${USERNAME}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230923 10:40:26.128" level="INFO">${user} = testuser</msg>
<status status="PASS" starttime="20230923 10:40:26.128" endtime="20230923 10:40:26.128"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${home.stdout}</arg>
<arg>"Path":"\\/user\\/${user}"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:40:26.128" endtime="20230923 10:40:26.130"/>
</kw>
<status status="PASS" starttime="20230923 10:40:26.090" endtime="20230923 10:40:26.132"/>
</test>
<test id="s1-s11-s1-t18" name="Get trash root" line="113">
<kw name="Execute curl command" library="operations">
<var>${trash}</var>
<arg>${volume}/buck1/testfile</arg>
<arg>GETTRASHROOT</arg>
<arg>${EMPTY}</arg>
<kw name="Set Variable If" library="BuiltIn">
<var>${user.name}</var>
<arg>'${SECURITY_ENABLED}'=='false'</arg>
<arg>&amp;user.name=${USERNAME}</arg>
<arg>${EMPTY}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230923 10:40:26.138" level="INFO">${user.name} = </msg>
<status status="PASS" starttime="20230923 10:40:26.135" endtime="20230923 10:40:26.138"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${final_url}</var>
<arg>SEPARATOR=</arg>
<arg>${URL}</arg>
<arg>${path}</arg>
<arg>?op=</arg>
<arg>${operation}</arg>
<arg>${user.name}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230923 10:40:26.138" level="INFO">${final_url} = http://httpfs:14000/webhdfs/v1/gfntx/buck1/testfile?op=GETTRASHROOT</msg>
<status status="PASS" starttime="20230923 10:40:26.138" endtime="20230923 10:40:26.139"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${curl_extra_commands}</var>
<arg>'${SECURITY_ENABLED}'=='true'</arg>
<arg>--negotiate -u :</arg>
<arg>${EMPTY}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230923 10:40:26.139" level="INFO">${curl_extra_commands} = --negotiate -u :</msg>
<status status="PASS" starttime="20230923 10:40:26.139" endtime="20230923 10:40:26.139"/>
</kw>
<kw name="Run Process" library="Process">
<var>${output}</var>
<arg>curl ${extra_commands} ${curl_extra_commands} "${final_url}"</arg>
<arg>shell=True</arg>
<doc>Runs a process and waits for it to complete.</doc>
<msg timestamp="20230923 10:40:26.140" level="INFO">Starting process:
curl  --negotiate -u : "http://httpfs:14000/webhdfs/v1/gfntx/buck1/testfile?op=GETTRASHROOT"</msg>
<msg timestamp="20230923 10:40:26.144" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20230923 10:40:26.186" level="INFO">Process completed.</msg>
<msg timestamp="20230923 10:40:26.187" level="INFO">${output} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20230923 10:40:26.140" endtime="20230923 10:40:26.187"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${output.rc}</arg>
<arg>0</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 10:40:26.189" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 10:40:26.187" endtime="20230923 10:40:26.189"/>
</kw>
<msg timestamp="20230923 10:40:26.189" level="INFO">${trash} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20230923 10:40:26.134" endtime="20230923 10:40:26.189"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${user}</var>
<arg>'${SECURITY_ENABLED}'=='true'</arg>
<arg>testuser</arg>
<arg>${USERNAME}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230923 10:40:26.190" level="INFO">${user} = testuser</msg>
<status status="PASS" starttime="20230923 10:40:26.190" endtime="20230923 10:40:26.190"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${trash.stdout}</arg>
<arg>"Path":"\\/${volume}\\/buck1\\/.Trash\\/${user}"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 10:40:26.190" endtime="20230923 10:40:26.193"/>
</kw>
<status status="PASS" starttime="20230923 10:40:26.133" endtime="20230923 10:40:26.193"/>
</test>
<doc>HttpFS gateway test with curl commands</doc>
<status status="PASS" starttime="20230923 10:40:13.720" endtime="20230923 10:40:26.195"/>
</suite>
<status status="PASS" starttime="20230923 10:40:13.693" endtime="20230923 10:40:26.197"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="2989854"/>
</suite>
<statistics>
<total>
<stat pass="198" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="198" fail="0" skip="0" id="s1" name="ozonesecure">ozonesecure</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1" name="Kinit">ozonesecure.Kinit</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2" name="Wait">ozonesecure.Wait</stat>
<stat pass="1" fail="0" skip="0" id="s1-s3" name="Wait">ozonesecure.Wait</stat>
<stat pass="34" fail="0" skip="0" id="s1-s4" name="Basic">ozonesecure.Basic</stat>
<stat pass="2" fail="0" skip="0" id="s1-s4-s1" name="Basic">ozonesecure.Basic.Basic</stat>
<stat pass="4" fail="0" skip="0" id="s1-s4-s2" name="Getconf">ozonesecure.Basic.Getconf</stat>
<stat pass="17" fail="0" skip="0" id="s1-s4-s3" name="Links">ozonesecure.Basic.Links</stat>
<stat pass="1" fail="0" skip="0" id="s1-s4-s4" name="Ozone-Shell-Single">ozonesecure.Basic.Ozone-Shell-Single</stat>
<stat pass="9" fail="0" skip="0" id="s1-s4-s5" name="Ozone-Shell">ozonesecure.Basic.Ozone-Shell</stat>
<stat pass="1" fail="0" skip="0" id="s1-s4-s6" name="Single Node">ozonesecure.Basic.Single Node</stat>
<stat pass="42" fail="0" skip="0" id="s1-s5" name="Security">ozonesecure.Security</stat>
<stat pass="3" fail="0" skip="0" id="s1-s5-s1" name="Admin-Cert">ozonesecure.Security.Admin-Cert</stat>
<stat pass="2" fail="0" skip="0" id="s1-s5-s2" name="Bucket-Encryption">ozonesecure.Security.Bucket-Encryption</stat>
<stat pass="6" fail="0" skip="0" id="s1-s5-s3" name="Ozone-Secure-Fs">ozonesecure.Security.Ozone-Secure-Fs</stat>
<stat pass="3" fail="0" skip="0" id="s1-s5-s4" name="Ozone-Secure-S3">ozonesecure.Security.Ozone-Secure-S3</stat>
<stat pass="26" fail="0" skip="0" id="s1-s5-s5" name="Ozone-Secure-Tenant">ozonesecure.Security.Ozone-Secure-Tenant</stat>
<stat pass="1" fail="0" skip="0" id="s1-s5-s6" name="Ozone-Secure-Token">ozonesecure.Security.Ozone-Secure-Token</stat>
<stat pass="1" fail="0" skip="0" id="s1-s5-s7" name="S3-secret">ozonesecure.Security.S3-secret</stat>
<stat pass="23" fail="0" skip="0" id="s1-s6" name="ozonefs-ofs-bucket">ozonesecure.ozonefs-ofs-bucket</stat>
<stat pass="23" fail="0" skip="0" id="s1-s7" name="Recon">ozonesecure.Recon</stat>
<stat pass="7" fail="0" skip="0" id="s1-s7-s1" name="Recon-Api">ozonesecure.Recon.Recon-Api</stat>
<stat pass="16" fail="0" skip="0" id="s1-s7-s2" name="Recon-Nssummary">ozonesecure.Recon.Recon-Nssummary</stat>
<stat pass="42" fail="0" skip="0" id="s1-s8" name="Admincli">ozonesecure.Admincli</stat>
<stat pass="1" fail="0" skip="0" id="s1-s8-s1" name="Admin">ozonesecure.Admincli.Admin</stat>
<stat pass="2" fail="0" skip="0" id="s1-s8-s2" name="Cert">ozonesecure.Admincli.Cert</stat>
<stat pass="13" fail="0" skip="0" id="s1-s8-s3" name="Container">ozonesecure.Admincli.Container</stat>
<stat pass="6" fail="0" skip="0" id="s1-s8-s4" name="Datanode">ozonesecure.Admincli.Datanode</stat>
<stat pass="7" fail="0" skip="0" id="s1-s8-s5" name="Pipeline">ozonesecure.Admincli.Pipeline</stat>
<stat pass="2" fail="0" skip="0" id="s1-s8-s6" name="printTopology">ozonesecure.Admincli.printTopology</stat>
<stat pass="5" fail="0" skip="0" id="s1-s8-s7" name="Replicationmanager">ozonesecure.Admincli.Replicationmanager</stat>
<stat pass="4" fail="0" skip="0" id="s1-s8-s8" name="Safemode">ozonesecure.Admincli.Safemode</stat>
<stat pass="2" fail="0" skip="0" id="s1-s8-s9" name="Scmrole">ozonesecure.Admincli.Scmrole</stat>
<stat pass="8" fail="0" skip="0" id="s1-s9" name="Spnego">ozonesecure.Spnego</stat>
<stat pass="8" fail="0" skip="0" id="s1-s9-s1" name="Web">ozonesecure.Spnego.Web</stat>
<stat pass="5" fail="0" skip="0" id="s1-s10" name="Snapshot-Acls">ozonesecure.Snapshot-Acls</stat>
<stat pass="18" fail="0" skip="0" id="s1-s11" name="Httpfs">ozonesecure.Httpfs</stat>
<stat pass="18" fail="0" skip="0" id="s1-s11-s1" name="Operations Tests">ozonesecure.Httpfs.Operations Tests</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
