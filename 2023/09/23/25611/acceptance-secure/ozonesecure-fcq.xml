<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 6.1.1 (Python 3.8.10 on linux)" generated="20230923 09:51:56.505" rpa="false" schemaversion="4">
<suite id="s1" name="ozonesecure-fcq" source="/opt/hadoop/smoketest/fcq/s3_om_fcq.robot">
<test id="s1-t1" name="Test setup headers" line="64">
<kw name="Setup headers">
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 09:49:59.872" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 09:49:59.882" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 09:49:59.882" level="INFO">${output} = s3g</msg>
<status status="PASS" starttime="20230923 09:49:59.868" endtime="20230923 09:49:59.882"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 09:49:59.885" level="INFO">s3g</msg>
<status status="PASS" starttime="20230923 09:49:59.883" endtime="20230923 09:49:59.885"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 09:49:59.886" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 09:49:59.885" endtime="20230923 09:49:59.886"/>
</kw>
<status status="PASS" starttime="20230923 09:49:59.866" endtime="20230923 09:49:59.896"/>
</kw>
<msg timestamp="20230923 09:49:59.897" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 09:49:59.866" endtime="20230923 09:49:59.897"/>
</kw>
<msg timestamp="20230923 09:49:59.897" level="INFO">${instance} = s3g</msg>
<status status="PASS" starttime="20230923 09:49:59.866" endtime="20230923 09:49:59.897"/>
</kw>
<msg timestamp="20230923 09:49:59.897" level="INFO">${TEST_USER} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230923 09:49:59.863" endtime="20230923 09:49:59.898"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230923 09:49:59.899" level="INFO">${TEST_USER} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230923 09:49:59.898" endtime="20230923 09:49:59.900"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 09:49:59.911" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/s3g@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 09:49:59.950" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 09:49:59.951" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 09:49:59.906" endtime="20230923 09:49:59.951"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 09:49:59.957" level="INFO"/>
<status status="PASS" starttime="20230923 09:49:59.955" endtime="20230923 09:49:59.957"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 09:49:59.958" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 09:49:59.958" endtime="20230923 09:49:59.958"/>
</kw>
<status status="PASS" starttime="20230923 09:49:59.904" endtime="20230923 09:49:59.958"/>
</kw>
<msg timestamp="20230923 09:49:59.958" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 09:49:59.904" endtime="20230923 09:49:59.959"/>
</kw>
<status status="PASS" starttime="20230923 09:49:59.902" endtime="20230923 09:49:59.959"/>
</kw>
<status status="PASS" starttime="20230923 09:49:59.900" endtime="20230923 09:49:59.959"/>
</kw>
<status status="PASS" starttime="20230923 09:49:59.863" endtime="20230923 09:49:59.959"/>
</kw>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 09:49:59.972" level="INFO">Running command 'ozone s3 getsecret  2&gt;&amp;1'.</msg>
<msg timestamp="20230923 09:50:09.878" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 09:50:09.878" level="INFO">${output} = awsAccessKey=testuser/s3g@EXAMPLE.COM
awsSecret=f18e72a2c86ff0efb597d71138ea543698bfadd0e30c6818cf5335f58c20825d</msg>
<status status="PASS" starttime="20230923 09:49:59.961" endtime="20230923 09:50:09.878"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 09:50:09.881" level="INFO">awsAccessKey=testuser/s3g@EXAMPLE.COM
awsSecret=f18e72a2c86ff0efb597d71138ea543698bfadd0e30c6818cf5335f58c20825d</msg>
<status status="PASS" starttime="20230923 09:50:09.880" endtime="20230923 09:50:09.882"/>
</kw>
<msg timestamp="20230923 09:50:09.882" level="INFO">${result} = awsAccessKey=testuser/s3g@EXAMPLE.COM
awsSecret=f18e72a2c86ff0efb597d71138ea543698bfadd0e30c6818cf5335f58c20825d</msg>
<status status="PASS" starttime="20230923 09:49:59.961" endtime="20230923 09:50:09.882"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${output}</var>
<arg>Should Contain</arg>
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20230923 09:50:09.884" level="FAIL">'awsAccessKey=testuser/s3g@EXAMPLE.COM
awsSecret=f18e72a2c86ff0efb597d71138ea543698bfadd0e30c6818cf5335f58c20825d' does not contain 'S3_SECRET_ALREADY_EXISTS'</msg>
<status status="FAIL" starttime="20230923 09:50:09.883" endtime="20230923 09:50:09.884"/>
</kw>
<msg timestamp="20230923 09:50:09.914" level="INFO">${output} = False</msg>
<status status="PASS" starttime="20230923 09:50:09.883" endtime="20230923 09:50:09.914"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${output}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20230923 09:50:09.915" endtime="20230923 09:50:09.915"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${accessKey}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230923 09:50:09.921" level="INFO">${accessKey} = ['testuser/s3g@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20230923 09:50:09.915" endtime="20230923 09:50:09.921"/>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey}</arg>
<arg>testuser</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20230923 09:50:09.922" level="INFO">${accessKey} = ['testuser/s3g@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20230923 09:50:09.921" endtime="20230923 09:50:09.922"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secret}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230923 09:50:09.922" level="INFO">${secret} = ['f18e72a2c86ff0efb597d71138ea543698bfadd0e30c6818cf5335f58c20825d']</msg>
<status status="PASS" starttime="20230923 09:50:09.922" endtime="20230923 09:50:09.922"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230923 09:50:09.924" level="INFO">${accessKey} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230923 09:50:09.923" endtime="20230923 09:50:09.924"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secret}</var>
<arg>${secret[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230923 09:50:09.925" level="INFO">${secret} = f18e72a2c86ff0efb597d71138ea543698bfadd0e30c6818cf5335f58c20825d</msg>
<status status="PASS" starttime="20230923 09:50:09.924" endtime="20230923 09:50:09.925"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 09:50:09.942" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 09:50:10.833" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 09:50:10.833" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 09:50:09.934" endtime="20230923 09:50:10.833"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 09:50:10.835" level="INFO"/>
<status status="PASS" starttime="20230923 09:50:10.834" endtime="20230923 09:50:10.835"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 09:50:10.835" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 09:50:10.835" endtime="20230923 09:50:10.836"/>
</kw>
<status status="PASS" starttime="20230923 09:50:09.933" endtime="20230923 09:50:10.836"/>
</kw>
<msg timestamp="20230923 09:50:10.836" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 09:50:09.933" endtime="20230923 09:50:10.836"/>
</kw>
<status status="PASS" starttime="20230923 09:50:09.932" endtime="20230923 09:50:10.836"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 09:50:10.841" level="INFO">Running command 'aws configure set aws_access_key_id testuser/s3g@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 09:50:11.456" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 09:50:11.456" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 09:50:10.838" endtime="20230923 09:50:11.456"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 09:50:11.459" level="INFO"/>
<status status="PASS" starttime="20230923 09:50:11.458" endtime="20230923 09:50:11.459"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 09:50:11.460" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 09:50:11.459" endtime="20230923 09:50:11.460"/>
</kw>
<status status="PASS" starttime="20230923 09:50:10.837" endtime="20230923 09:50:11.460"/>
</kw>
<msg timestamp="20230923 09:50:11.460" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 09:50:10.837" endtime="20230923 09:50:11.460"/>
</kw>
<status status="PASS" starttime="20230923 09:50:10.836" endtime="20230923 09:50:11.460"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${secret}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 09:50:11.472" level="INFO">Running command 'aws configure set aws_secret_access_key f18e72a2c86ff0efb597d71138ea543698bfadd0e30c6818cf5335f58c20825d 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 09:50:12.038" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 09:50:12.038" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 09:50:11.462" endtime="20230923 09:50:12.038"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 09:50:12.039" level="INFO"/>
<status status="PASS" starttime="20230923 09:50:12.038" endtime="20230923 09:50:12.039"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 09:50:12.039" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 09:50:12.039" endtime="20230923 09:50:12.040"/>
</kw>
<status status="PASS" starttime="20230923 09:50:11.461" endtime="20230923 09:50:12.040"/>
</kw>
<msg timestamp="20230923 09:50:12.040" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 09:50:11.461" endtime="20230923 09:50:12.040"/>
</kw>
<status status="PASS" starttime="20230923 09:50:11.460" endtime="20230923 09:50:12.040"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 09:50:12.044" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 09:50:12.590" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 09:50:12.590" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 09:50:12.042" endtime="20230923 09:50:12.590"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 09:50:12.591" level="INFO"/>
<status status="PASS" starttime="20230923 09:50:12.591" endtime="20230923 09:50:12.592"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 09:50:12.592" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 09:50:12.592" endtime="20230923 09:50:12.593"/>
</kw>
<status status="PASS" starttime="20230923 09:50:12.041" endtime="20230923 09:50:12.593"/>
</kw>
<msg timestamp="20230923 09:50:12.593" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 09:50:12.041" endtime="20230923 09:50:12.593"/>
</kw>
<status status="PASS" starttime="20230923 09:50:12.040" endtime="20230923 09:50:12.593"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.addressing_style ${OZONE_S3_ADDRESS_STYLE}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 09:50:12.597" level="INFO">Running command 'aws configure set default.s3.addressing_style path 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 09:50:13.152" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 09:50:13.152" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 09:50:12.595" endtime="20230923 09:50:13.153"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 09:50:13.154" level="INFO"/>
<status status="PASS" starttime="20230923 09:50:13.153" endtime="20230923 09:50:13.154"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 09:50:13.154" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 09:50:13.154" endtime="20230923 09:50:13.154"/>
</kw>
<status status="PASS" starttime="20230923 09:50:12.594" endtime="20230923 09:50:13.155"/>
</kw>
<msg timestamp="20230923 09:50:13.155" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 09:50:12.594" endtime="20230923 09:50:13.155"/>
</kw>
<status status="PASS" starttime="20230923 09:50:12.593" endtime="20230923 09:50:13.155"/>
</kw>
<status status="PASS" starttime="20230923 09:49:59.959" endtime="20230923 09:50:13.155"/>
</kw>
<status status="PASS" starttime="20230923 09:49:59.862" endtime="20230923 09:50:13.155"/>
</kw>
<status status="PASS" starttime="20230923 09:49:59.860" endtime="20230923 09:50:13.155"/>
</test>
<test id="s1-t2" name="Test setup credentials" line="67">
<kw name="Setup aws credentials">
<kw name="Execute" library="os">
<var>${accessKey}</var>
<arg>aws configure get aws_access_key_id</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 09:50:13.163" level="INFO">Running command 'aws configure get aws_access_key_id 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 09:50:13.732" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 09:50:13.732" level="INFO">${output} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230923 09:50:13.159" endtime="20230923 09:50:13.732"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 09:50:13.733" level="INFO">testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230923 09:50:13.733" endtime="20230923 09:50:13.733"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 09:50:13.734" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 09:50:13.733" endtime="20230923 09:50:13.734"/>
</kw>
<status status="PASS" starttime="20230923 09:50:13.159" endtime="20230923 09:50:13.734"/>
</kw>
<msg timestamp="20230923 09:50:13.734" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 09:50:13.158" endtime="20230923 09:50:13.734"/>
</kw>
<msg timestamp="20230923 09:50:13.735" level="INFO">${accessKey} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230923 09:50:13.158" endtime="20230923 09:50:13.735"/>
</kw>
<kw name="Execute" library="os">
<var>${secret}</var>
<arg>aws configure get aws_secret_access_key</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 09:50:13.740" level="INFO">Running command 'aws configure get aws_secret_access_key 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 09:50:14.268" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 09:50:14.268" level="INFO">${output} = f18e72a2c86ff0efb597d71138ea543698bfadd0e30c6818cf5335f58c20825d</msg>
<status status="PASS" starttime="20230923 09:50:13.736" endtime="20230923 09:50:14.268"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 09:50:14.269" level="INFO">f18e72a2c86ff0efb597d71138ea543698bfadd0e30c6818cf5335f58c20825d</msg>
<status status="PASS" starttime="20230923 09:50:14.268" endtime="20230923 09:50:14.269"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 09:50:14.270" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 09:50:14.269" endtime="20230923 09:50:14.270"/>
</kw>
<status status="PASS" starttime="20230923 09:50:13.736" endtime="20230923 09:50:14.270"/>
</kw>
<msg timestamp="20230923 09:50:14.270" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 09:50:13.735" endtime="20230923 09:50:14.270"/>
</kw>
<msg timestamp="20230923 09:50:14.271" level="INFO">${secret} = f18e72a2c86ff0efb597d71138ea543698bfadd0e30c6818cf5335f58c20825d</msg>
<status status="PASS" starttime="20230923 09:50:13.735" endtime="20230923 09:50:14.271"/>
</kw>
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>AWS_SECRET_ACCESS_KEY</arg>
<arg>${secret}</arg>
<doc>Sets an environment variable to a specified value.</doc>
<msg timestamp="20230923 09:50:14.271" level="INFO">Environment variable 'AWS_SECRET_ACCESS_KEY' set to value 'f18e72a2c86ff0efb597d71138ea543698bfadd0e30c6818cf5335f58c20825d'.</msg>
<status status="PASS" starttime="20230923 09:50:14.271" endtime="20230923 09:50:14.271"/>
</kw>
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>AWS_ACCESS_KEY_ID</arg>
<arg>${accessKey}</arg>
<doc>Sets an environment variable to a specified value.</doc>
<msg timestamp="20230923 09:50:14.271" level="INFO">Environment variable 'AWS_ACCESS_KEY_ID' set to value 'testuser/s3g@EXAMPLE.COM'.</msg>
<status status="PASS" starttime="20230923 09:50:14.271" endtime="20230923 09:50:14.272"/>
</kw>
<status status="PASS" starttime="20230923 09:50:13.157" endtime="20230923 09:50:14.272"/>
</kw>
<status status="PASS" starttime="20230923 09:50:13.156" endtime="20230923 09:50:14.272"/>
</test>
<test id="s1-t3" name="Test create bucket 1" line="70">
<kw name="Setup bucket1">
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>create-bucket --bucket bucket1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 09:50:14.278" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 09:50:18.331" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 09:50:18.331" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket1"
}</msg>
<status status="PASS" starttime="20230923 09:50:14.276" endtime="20230923 09:50:18.331"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 09:50:18.332" level="INFO">{
    "Location": "http://s3g:9878/bucket1"
}</msg>
<status status="PASS" starttime="20230923 09:50:18.332" endtime="20230923 09:50:18.332"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 09:50:18.333" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 09:50:18.333" endtime="20230923 09:50:18.339"/>
</kw>
<status status="PASS" starttime="20230923 09:50:14.275" endtime="20230923 09:50:18.339"/>
</kw>
<msg timestamp="20230923 09:50:18.339" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 09:50:14.275" endtime="20230923 09:50:18.339"/>
</kw>
<msg timestamp="20230923 09:50:18.339" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket1"
}</msg>
<status status="PASS" starttime="20230923 09:50:14.274" endtime="20230923 09:50:18.339"/>
</kw>
<status status="PASS" starttime="20230923 09:50:14.274" endtime="20230923 09:50:18.344"/>
</kw>
<status status="PASS" starttime="20230923 09:50:14.274" endtime="20230923 09:50:18.344"/>
</kw>
<status status="PASS" starttime="20230923 09:50:14.273" endtime="20230923 09:50:18.345"/>
</test>
<test id="s1-t4" name="Test OM JMX endpoint" line="73">
<kw name="Verify endpoint is up">
<arg>${OM_JMX_ENDPOINT}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit HTTP user" library="commonlib">
<kw name="Get test user principal" library="commonlib">
<var>${principal}</var>
<arg>HTTP</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 09:50:18.375" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 09:50:18.395" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 09:50:18.395" level="INFO">${output} = s3g</msg>
<status status="PASS" starttime="20230923 09:50:18.371" endtime="20230923 09:50:18.396"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 09:50:18.397" level="INFO">s3g</msg>
<status status="PASS" starttime="20230923 09:50:18.396" endtime="20230923 09:50:18.400"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 09:50:18.401" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 09:50:18.400" endtime="20230923 09:50:18.401"/>
</kw>
<status status="PASS" starttime="20230923 09:50:18.366" endtime="20230923 09:50:18.404"/>
</kw>
<msg timestamp="20230923 09:50:18.405" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 09:50:18.366" endtime="20230923 09:50:18.405"/>
</kw>
<msg timestamp="20230923 09:50:18.405" level="INFO">${instance} = s3g</msg>
<status status="PASS" starttime="20230923 09:50:18.365" endtime="20230923 09:50:18.405"/>
</kw>
<msg timestamp="20230923 09:50:18.405" level="INFO">${principal} = HTTP/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230923 09:50:18.363" endtime="20230923 09:50:18.405"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/HTTP.keytab ${principal}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/HTTP.keytab ${principal}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 09:50:18.428" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/HTTP.keytab HTTP/s3g@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 09:50:18.483" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 09:50:18.483" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230923 09:50:18.413" endtime="20230923 09:50:18.483"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 09:50:18.486" level="INFO"/>
<status status="PASS" starttime="20230923 09:50:18.485" endtime="20230923 09:50:18.486"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 09:50:18.488" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 09:50:18.486" endtime="20230923 09:50:18.488"/>
</kw>
<status status="PASS" starttime="20230923 09:50:18.413" endtime="20230923 09:50:18.488"/>
</kw>
<msg timestamp="20230923 09:50:18.488" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 09:50:18.412" endtime="20230923 09:50:18.490"/>
</kw>
<status status="PASS" starttime="20230923 09:50:18.410" endtime="20230923 09:50:18.490"/>
</kw>
<status status="PASS" starttime="20230923 09:50:18.408" endtime="20230923 09:50:18.490"/>
</kw>
<status status="PASS" starttime="20230923 09:50:18.362" endtime="20230923 09:50:18.490"/>
</kw>
<status status="PASS" starttime="20230923 09:50:18.359" endtime="20230923 09:50:18.496"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 09:50:18.513" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://om:9874/jmx 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 09:50:19.508" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 09:50:19.508" level="INFO">${output} = * About to connect() to om port 9874 (#0)
*   Trying 172.18.0.10...
* Connected to om (172.18.0.10) port 9874 (#0)
&gt; HEAD /jmx HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTT...</msg>
<status status="PASS" starttime="20230923 09:50:18.498" endtime="20230923 09:50:19.508"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 09:50:19.510" level="INFO">* About to connect() to om port 9874 (#0)
*   Trying 172.18.0.10...
* Connected to om (172.18.0.10) port 9874 (#0)
&gt; HEAD /jmx HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Authentication required
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-XSS-Protection: 1; mode=block
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 404
&lt; 
* Connection #0 to host om left intact
* Issue another request to this URL: 'http://om:9874/jmx'
* Found bundle for host om: 0xb4ef50
* Re-using existing connection! (#0) with host om
* Connected to om (172.18.0.10) port 9874 (#0)
* Server auth using GSS-Negotiate with user ''
&gt; HEAD /jmx HTTP/1.1
&gt; Authorization: Negotiate YIICUAYJKoZIhvcSAQICAQBuggI/MIICO6ADAgEFoQMCAQ6iBwMFACAAAACjggFPYYIBSzCCAUegAwIBBaENGwtFWEFNUExFLkNPTaIVMBOgAwIBA6EMMAobBEhUVFAbAm9to4IBGDCCARSgAwIBEqEDAgEBooIBBgSCAQI03BHF4jeZ/Y6O2DymJDwKQZ/2BiBy9lUXu6CEvxXc8khDTFe/hq3GAa9vVrYTbtSn4JZgLumaE23YLsZu2w/p4CP3/gM8dfzeQwCfSVyfeegKVmoqimkXJZBUumRyteTxXnEiOsmY2Hq6Pk6JhHfix0gyy5cp00XxgonynrrSqxK4xmLSONfuICaUd/swcfSCf1FxXVa/L0xcGmDEkkn3SoTSx/W142FOhv8vKIbU8t5w73WMTq79tg17Vu99GstBmiggypUchnsV/aZFZFeNStJe1iCwOuNrCBosrFF7F7F3F2tTx/MfUVBAc6IttKt8GcptuQRK8giryfwsDaoKT6WkgdIwgc+gAwIBEqKBxwSBxPQzQAu00Q3AD4GMyWIYfcuAiVadqbehivw13k1sYksR47LWm/92xvZKdriVb/VSIBvSjT49nctNLYqM1vi8RWobl0HPG2TERYSxomxllirnGFi/Dg7EQQGj10LUQ4t8klF6nDgWm2HpTKVPCFp8JxqFj75ioQFBi6CjctTPu1T1VHYBvUPWcA9TlqQgfcdjaOIZyF7i1R2vb9Arqy4HAoQvPSkcUc9UfBafFSMKuhVDZdKP4ZpIwV422JPoGMuZDtH/aSU=
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Sat, 23 Sep 2023 09:50:18 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Sat, 23 Sep 2023 09:50:18 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json; charset=utf8
&lt; X-Content-Type-Options: nosniff
&lt; X-XSS-Protection: 1; mode=block
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCwebcQ+Nc7CqWqYZmK7xIyzZDKLHOU30ljntnfgVafntnNwpbULHvGtPHQ7xv33QgLIKxeBFGkzw+eofzPqUo+h2f
&lt; Set-Cookie: hadoop.auth="u=HTTP&amp;p=HTTP/s3g@EXAMPLE.COM&amp;t=kerberos&amp;e=1695498618639&amp;s=eqg3OFRxr72uD8th1io3Tw8OMuL1H2mjvLx0tSEFFE8="; Path=/; HttpOnly
&lt; Access-Control-Allow-Methods: GET
&lt; Access-Control-Allow-Origin: *
&lt; Content-Length: 334708
&lt; 
* Closing connection 0
HTTP/1.1 401 Authentication required
Pragma: no-cache
X-Content-Type-Options: nosniff
X-XSS-Protection: 1; mode=block
X-FRAME-OPTIONS: SAMEORIGIN
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 404

HTTP/1.1 200 OK
Date: Sat, 23 Sep 2023 09:50:18 GMT
Cache-Control: no-cache
Expires: Sat, 23 Sep 2023 09:50:18 GMT
Pragma: no-cache
Content-Type: application/json; charset=utf8
X-Content-Type-Options: nosniff
X-XSS-Protection: 1; mode=block
X-FRAME-OPTIONS: SAMEORIGIN
WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCwebcQ+Nc7CqWqYZmK7xIyzZDKLHOU30ljntnfgVafntnNwpbULHvGtPHQ7xv33QgLIKxeBFGkzw+eofzPqUo+h2f
Set-Cookie: hadoop.auth="u=HTTP&amp;p=HTTP/s3g@EXAMPLE.COM&amp;t=kerberos&amp;e=1695498618639&amp;s=eqg3OFRxr72uD8th1io3Tw8OMuL1H2mjvLx0tSEFFE8="; Path=/; HttpOnly
Access-Control-Allow-Methods: GET
Access-Control-Allow-Origin: *
Content-Length: 334708
</msg>
<status status="PASS" starttime="20230923 09:50:19.509" endtime="20230923 09:50:19.510"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 09:50:19.511" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 09:50:19.510" endtime="20230923 09:50:19.511"/>
</kw>
<status status="PASS" starttime="20230923 09:50:18.498" endtime="20230923 09:50:19.511"/>
</kw>
<msg timestamp="20230923 09:50:19.511" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 09:50:18.497" endtime="20230923 09:50:19.511"/>
</kw>
<msg timestamp="20230923 09:50:19.512" level="INFO">${result} = * About to connect() to om port 9874 (#0)
*   Trying 172.18.0.10...
* Connected to om (172.18.0.10) port 9874 (#0)
&gt; HEAD /jmx HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTT...</msg>
<status status="PASS" starttime="20230923 09:50:18.497" endtime="20230923 09:50:19.512"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200 OK</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 09:50:19.512" endtime="20230923 09:50:19.512"/>
</kw>
<status status="PASS" starttime="20230923 09:50:18.357" endtime="20230923 09:50:19.513"/>
</kw>
<status status="PASS" starttime="20230923 09:50:18.349" endtime="20230923 09:50:19.513"/>
</test>
<test id="s1-t5" name="Test metrics are registered" line="76">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${OM_JMX_ENDPOINT} | grep ${DECAY_RPC_SCHEDULER_METRICS_NAME}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 09:50:19.524" level="INFO">Running command 'curl --negotiate -u : -LSs http://om:9874/jmx | grep DecayRpcSchedulerMetrics2.ipc.9862 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 09:50:19.780" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 09:50:19.780" level="INFO">${output} =     "name" : "Hadoop:service=OzoneManager,name=DecayRpcSchedulerMetrics2.ipc.9862",
    "modelerType" : "DecayRpcSchedulerMetrics2.ipc.9862",</msg>
<status status="PASS" starttime="20230923 09:50:19.519" endtime="20230923 09:50:19.780"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 09:50:19.781" level="INFO">    "name" : "Hadoop:service=OzoneManager,name=DecayRpcSchedulerMetrics2.ipc.9862",
    "modelerType" : "DecayRpcSchedulerMetrics2.ipc.9862",</msg>
<status status="PASS" starttime="20230923 09:50:19.781" endtime="20230923 09:50:19.784"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 09:50:19.785" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 09:50:19.784" endtime="20230923 09:50:19.786"/>
</kw>
<status status="PASS" starttime="20230923 09:50:19.518" endtime="20230923 09:50:19.787"/>
</kw>
<msg timestamp="20230923 09:50:19.787" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 09:50:19.517" endtime="20230923 09:50:19.787"/>
</kw>
<msg timestamp="20230923 09:50:19.787" level="INFO">${result} =     "name" : "Hadoop:service=OzoneManager,name=DecayRpcSchedulerMetrics2.ipc.9862",
    "modelerType" : "DecayRpcSchedulerMetrics2.ipc.9862",</msg>
<status status="PASS" starttime="20230923 09:50:19.516" endtime="20230923 09:50:19.787"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${DECAY_RPC_SCHEDULER_METRICS_NAME}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 09:50:19.789" endtime="20230923 09:50:19.790"/>
</kw>
<status status="PASS" starttime="20230923 09:50:19.514" endtime="20230923 09:50:19.790"/>
</test>
<test id="s1-t6" name="Run freon s3kg" line="80">
<kw name="Freon s3kg">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon s3kg -e ${S3_ENDPOINT_URL} -t ${threads} -n ${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 09:50:19.804" level="INFO">Running command 'ozone freon s3kg -e http://s3g:9878 -t 10 -n 1000 -p s3bg  2&gt;&amp;1'.</msg>
<msg timestamp="20230923 09:51:39.591" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 09:51:39.591" level="INFO">${output} = 2023-09-23 09:50:23,255 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-23 09:50:23,413 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230923 09:50:19.801" endtime="20230923 09:51:39.591"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 09:51:39.593" level="INFO">2023-09-23 09:50:23,255 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-23 09:50:23,413 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-09-23 09:50:23,413 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-09-23 09:50:23,517 [main] INFO freon.BaseFreonGenerator: Executing test with prefix s3bg and number-of-tests 1000
2023-09-23 09:50:23,571 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1000)
2023-09-23 09:50:24,574 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1000)
2023-09-23 09:50:25,575 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1000)
2023-09-23 09:50:26,575 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1000)
2023-09-23 09:50:27,576 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1000)
2023-09-23 09:50:28,576 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1000)
2023-09-23 09:50:29,581 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1000)
2023-09-23 09:50:30,583 [Thread-5] INFO freon.ProgressBar: Progress: 1.00 % (10 out of 1000)
2023-09-23 09:50:31,586 [Thread-5] INFO freon.ProgressBar: Progress: 1.30 % (13 out of 1000)
2023-09-23 09:50:32,586 [Thread-5] INFO freon.ProgressBar: Progress: 2.60 % (26 out of 1000)
2023-09-23 09:50:33,846 [Thread-5] INFO freon.ProgressBar: Progress: 3.40 % (34 out of 1000)
2023-09-23 09:50:34,850 [Thread-5] INFO freon.ProgressBar: Progress: 4.30 % (43 out of 1000)
2023-09-23 09:50:35,855 [Thread-5] INFO freon.ProgressBar: Progress: 5.40 % (54 out of 1000)
2023-09-23 09:50:36,856 [Thread-5] INFO freon.ProgressBar: Progress: 6.20 % (62 out of 1000)
2023-09-23 09:50:37,857 [Thread-5] INFO freon.ProgressBar: Progress: 7.40 % (74 out of 1000)
2023-09-23 09:50:38,860 [Thread-5] INFO freon.ProgressBar: Progress: 8.60 % (86 out of 1000)
2023-09-23 09:50:39,872 [Thread-5] INFO freon.ProgressBar: Progress: 9.50 % (95 out of 1000)
2023-09-23 09:50:40,878 [Thread-5] INFO freon.ProgressBar: Progress: 10.80 % (108 out of 1000)
2023-09-23 09:50:41,879 [Thread-5] INFO freon.ProgressBar: Progress: 11.80 % (118 out of 1000)
2023-09-23 09:50:42,880 [Thread-5] INFO freon.ProgressBar: Progress: 12.60 % (126 out of 1000)
2023-09-23 09:50:44,038 [Thread-5] INFO freon.ProgressBar: Progress: 14.00 % (140 out of 1000)
2023-09-23 09:50:45,042 [Thread-5] INFO freon.ProgressBar: Progress: 15.20 % (152 out of 1000)
2023-09-23 09:50:46,042 [Thread-5] INFO freon.ProgressBar: Progress: 16.30 % (163 out of 1000)
2023-09-23 09:50:47,045 [Thread-5] INFO freon.ProgressBar: Progress: 17.70 % (177 out of 1000)
2023-09-23 09:50:48,046 [Thread-5] INFO freon.ProgressBar: Progress: 18.50 % (185 out of 1000)
2023-09-23 09:50:49,047 [Thread-5] INFO freon.ProgressBar: Progress: 19.80 % (198 out of 1000)
2023-09-23 09:50:50,048 [Thread-5] INFO freon.ProgressBar: Progress: 21.10 % (211 out of 1000)
2023-09-23 09:50:51,049 [Thread-5] INFO freon.ProgressBar: Progress: 22.30 % (223 out of 1000)
2023-09-23 09:50:52,068 [Thread-5] INFO freon.ProgressBar: Progress: 23.70 % (237 out of 1000)
2023-09-23 09:50:53,070 [Thread-5] INFO freon.ProgressBar: Progress: 25.10 % (251 out of 1000)
2023-09-23 09:50:54,072 [Thread-5] INFO freon.ProgressBar: Progress: 26.70 % (267 out of 1000)
2023-09-23 09:50:55,073 [Thread-5] INFO freon.ProgressBar: Progress: 27.90 % (279 out of 1000)
2023-09-23 09:50:56,080 [Thread-5] INFO freon.ProgressBar: Progress: 29.10 % (291 out of 1000)
2023-09-23 09:50:57,080 [Thread-5] INFO freon.ProgressBar: Progress: 30.30 % (303 out of 1000)
2023-09-23 09:50:58,084 [Thread-5] INFO freon.ProgressBar: Progress: 31.80 % (318 out of 1000)
2023-09-23 09:50:59,084 [Thread-5] INFO freon.ProgressBar: Progress: 33.50 % (335 out of 1000)
2023-09-23 09:51:00,085 [Thread-5] INFO freon.ProgressBar: Progress: 34.40 % (344 out of 1000)
2023-09-23 09:51:01,085 [Thread-5] INFO freon.ProgressBar: Progress: 36.00 % (360 out of 1000)
2023-09-23 09:51:02,086 [Thread-5] INFO freon.ProgressBar: Progress: 37.90 % (379 out of 1000)
2023-09-23 09:51:03,094 [Thread-5] INFO freon.ProgressBar: Progress: 39.40 % (394 out of 1000)
2023-09-23 09:51:04,095 [Thread-5] INFO freon.ProgressBar: Progress: 41.20 % (412 out of 1000)
2023-09-23 09:51:05,096 [Thread-5] INFO freon.ProgressBar: Progress: 43.00 % (430 out of 1000)
2023-09-23 09:51:06,096 [Thread-5] INFO freon.ProgressBar: Progress: 44.20 % (442 out of 1000)
2023-09-23 09:51:07,108 [Thread-5] INFO freon.ProgressBar: Progress: 45.80 % (458 out of 1000)
2023-09-23 09:51:08,112 [Thread-5] INFO freon.ProgressBar: Progress: 46.80 % (468 out of 1000)
2023-09-23 09:51:09,113 [Thread-5] INFO freon.ProgressBar: Progress: 48.40 % (484 out of 1000)
2023-09-23 09:51:10,114 [Thread-5] INFO freon.ProgressBar: Progress: 50.00 % (500 out of 1000)
2023-09-23 09:51:11,114 [Thread-5] INFO freon.ProgressBar: Progress: 51.40 % (514 out of 1000)
2023-09-23 09:51:12,117 [Thread-5] INFO freon.ProgressBar: Progress: 53.00 % (530 out of 1000)
2023-09-23 09:51:13,117 [Thread-5] INFO freon.ProgressBar: Progress: 54.90 % (549 out of 1000)
2023-09-23 09:51:14,118 [Thread-5] INFO freon.ProgressBar: Progress: 56.20 % (562 out of 1000)
2023-09-23 09:51:15,119 [Thread-5] INFO freon.ProgressBar: Progress: 58.10 % (581 out of 1000)
2023-09-23 09:51:16,126 [Thread-5] INFO freon.ProgressBar: Progress: 59.90 % (599 out of 1000)
2023-09-23 09:51:17,138 [Thread-5] INFO freon.ProgressBar: Progress: 61.20 % (612 out of 1000)
2023-09-23 09:51:18,142 [Thread-5] INFO freon.ProgressBar: Progress: 62.40 % (624 out of 1000)
2023-09-23 09:51:19,147 [Thread-5] INFO freon.ProgressBar: Progress: 63.80 % (638 out of 1000)
2023-09-23 09:51:20,151 [Thread-5] INFO freon.ProgressBar: Progress: 66.00 % (660 out of 1000)
2023-09-23 09:51:21,154 [Thread-5] INFO freon.ProgressBar: Progress: 66.90 % (669 out of 1000)
2023-09-23 09:51:22,162 [Thread-5] INFO freon.ProgressBar: Progress: 68.40 % (684 out of 1000)
2023-09-23 09:51:23,167 [Thread-5] INFO freon.ProgressBar: Progress: 69.40 % (694 out of 1000)
2023-09-23 09:51:24,168 [Thread-5] INFO freon.ProgressBar: Progress: 70.90 % (709 out of 1000)
2023-09-23 09:51:25,168 [Thread-5] INFO freon.ProgressBar: Progress: 72.00 % (720 out of 1000)
2023-09-23 09:51:26,171 [Thread-5] INFO freon.ProgressBar: Progress: 73.60 % (736 out of 1000)
2023-09-23 09:51:27,177 [Thread-5] INFO freon.ProgressBar: Progress: 75.70 % (757 out of 1000)
2023-09-23 09:51:28,179 [Thread-5] INFO freon.ProgressBar: Progress: 77.60 % (776 out of 1000)
2023-09-23 09:51:29,179 [Thread-5] INFO freon.ProgressBar: Progress: 79.20 % (792 out of 1000)
2023-09-23 09:51:30,180 [Thread-5] INFO freon.ProgressBar: Progress: 81.60 % (816 out of 1000)
2023-09-23 09:51:31,180 [Thread-5] INFO freon.ProgressBar: Progress: 83.30 % (833 out of 1000)
2023-09-23 09:51:32,186 [Thread-5] INFO freon.ProgressBar: Progress: 85.10 % (851 out of 1000)
2023-09-23 09:51:33,186 [Thread-5] INFO freon.ProgressBar: Progress: 86.90 % (869 out of 1000)
2023-09-23 09:51:34,191 [Thread-5] INFO freon.ProgressBar: Progress: 88.60 % (886 out of 1000)
2023-09-23 09:51:35,192 [Thread-5] INFO freon.ProgressBar: Progress: 90.90 % (909 out of 1000)
2023-09-23 09:51:36,192 [Thread-5] INFO freon.ProgressBar: Progress: 93.00 % (930 out of 1000)
2023-09-23 09:51:37,192 [Thread-5] INFO freon.ProgressBar: Progress: 94.80 % (948 out of 1000)
2023-09-23 09:51:38,193 [Thread-5] INFO freon.ProgressBar: Progress: 97.00 % (970 out of 1000)
2023-09-23 09:51:39,196 [Thread-5] INFO freon.ProgressBar: Progress: 99.20 % (992 out of 1000)
2023-09-23 09:51:39,510 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=1000, min=145.98227, max=5347.381086, mean=681.6845973103297, stddev=421.8642561379502, median=622.374412, p75=790.580738, p95=1153.366257, p98=1345.727426, p99=1573.403301, p999=5347.372085, mean_rate=13.418815511505061, m1=9.670822993127533, m5=2.733037354051927, m15=0.9704491498674209, rate_unit=events/second, duration_unit=milliseconds
2023-09-23 09:51:39,510 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 76
2023-09-23 09:51:39,511 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-09-23 09:51:39,511 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1000</msg>
<status status="PASS" starttime="20230923 09:51:39.592" endtime="20230923 09:51:39.593"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 09:51:39.594" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 09:51:39.593" endtime="20230923 09:51:39.594"/>
</kw>
<status status="PASS" starttime="20230923 09:50:19.800" endtime="20230923 09:51:39.594"/>
</kw>
<msg timestamp="20230923 09:51:39.594" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 09:50:19.799" endtime="20230923 09:51:39.594"/>
</kw>
<msg timestamp="20230923 09:51:39.595" level="INFO">${result} = 2023-09-23 09:50:23,255 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-23 09:50:23,413 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230923 09:50:19.797" endtime="20230923 09:51:39.595"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 09:51:39.595" endtime="20230923 09:51:39.595"/>
</kw>
<status status="PASS" starttime="20230923 09:50:19.794" endtime="20230923 09:51:39.596"/>
</kw>
<status status="PASS" starttime="20230923 09:50:19.792" endtime="20230923 09:51:39.596"/>
</test>
<test id="s1-t7" name="Test caller from metrics" line="83">
<kw name="Check metrics caller">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${OM_JMX_ENDPOINT} | sed -n '/${DECAY_RPC_SCHEDULER_METRICS_NAME}/,/}/p' | grep 'Caller('</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230923 09:51:39.602" level="INFO">Running command 'curl --negotiate -u : -LSs http://om:9874/jmx | sed -n '/DecayRpcSchedulerMetrics2.ipc.9862/,/}/p' | grep 'Caller(' 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 09:51:39.716" level="INFO">${rc} = 0</msg>
<msg timestamp="20230923 09:51:39.716" level="INFO">${output} =     "Caller(testuser/s3g@EXAMPLE.COM).Volume" : 4002,
    "Caller(testuser/s3g@EXAMPLE.COM).Priority" : 3,</msg>
<status status="PASS" starttime="20230923 09:51:39.600" endtime="20230923 09:51:39.717"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 09:51:39.718" level="INFO">    "Caller(testuser/s3g@EXAMPLE.COM).Volume" : 4002,
    "Caller(testuser/s3g@EXAMPLE.COM).Priority" : 3,</msg>
<status status="PASS" starttime="20230923 09:51:39.717" endtime="20230923 09:51:39.718"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230923 09:51:39.718" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230923 09:51:39.718" endtime="20230923 09:51:39.719"/>
</kw>
<status status="PASS" starttime="20230923 09:51:39.599" endtime="20230923 09:51:39.719"/>
</kw>
<msg timestamp="20230923 09:51:39.719" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 09:51:39.599" endtime="20230923 09:51:39.719"/>
</kw>
<msg timestamp="20230923 09:51:39.719" level="INFO">${result} =     "Caller(testuser/s3g@EXAMPLE.COM).Volume" : 4002,
    "Caller(testuser/s3g@EXAMPLE.COM).Priority" : 3,</msg>
<status status="PASS" starttime="20230923 09:51:39.598" endtime="20230923 09:51:39.720"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${TEST_USER}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 09:51:39.720" endtime="20230923 09:51:39.720"/>
</kw>
<status status="PASS" starttime="20230923 09:51:39.598" endtime="20230923 09:51:39.720"/>
</kw>
<status status="PASS" starttime="20230923 09:51:39.597" endtime="20230923 09:51:39.721"/>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" starttime="20230923 09:49:59.661" endtime="20230923 09:51:39.723"/>
</suite>
<statistics>
<total>
<stat pass="7" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="7" fail="0" skip="0" id="s1" name="ozonesecure-fcq">ozonesecure-fcq</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
