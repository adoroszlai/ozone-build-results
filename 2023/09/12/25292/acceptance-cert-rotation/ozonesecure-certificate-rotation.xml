<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 6.1.1 (Python 3.8.10 on linux)" generated="20230912 10:11:23.993" rpa="false" schemaversion="4">
<suite id="s1" name="ozonesecure-certificate-rotation" source="/opt/hadoop/smoketest/certrotation">
<suite id="s1-s1" name="Cert-Rotation" source="/opt/hadoop/smoketest/certrotation/cert-rotation.robot">
<kw name="Setup Test" type="SETUP">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230912 10:09:41.776" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230912 10:09:41.780" level="INFO">${rc} = 0</msg>
<msg timestamp="20230912 10:09:41.780" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230912 10:09:41.774" endtime="20230912 10:09:41.780"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230912 10:09:41.781" level="INFO">scm</msg>
<status status="PASS" starttime="20230912 10:09:41.781" endtime="20230912 10:09:41.781"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230912 10:09:41.782" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230912 10:09:41.781" endtime="20230912 10:09:41.782"/>
</kw>
<status status="PASS" starttime="20230912 10:09:41.773" endtime="20230912 10:09:41.782"/>
</kw>
<msg timestamp="20230912 10:09:41.782" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230912 10:09:41.773" endtime="20230912 10:09:41.782"/>
</kw>
<msg timestamp="20230912 10:09:41.782" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230912 10:09:41.773" endtime="20230912 10:09:41.782"/>
</kw>
<msg timestamp="20230912 10:09:41.783" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230912 10:09:41.772" endtime="20230912 10:09:41.783"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230912 10:09:41.783" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230912 10:09:41.783" endtime="20230912 10:09:41.783"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230912 10:09:41.788" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20230912 10:09:41.818" level="INFO">${rc} = 0</msg>
<msg timestamp="20230912 10:09:41.818" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230912 10:09:41.785" endtime="20230912 10:09:41.818"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230912 10:09:41.819" level="INFO"/>
<status status="PASS" starttime="20230912 10:09:41.819" endtime="20230912 10:09:41.819"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230912 10:09:41.820" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230912 10:09:41.820" endtime="20230912 10:09:41.820"/>
</kw>
<status status="PASS" starttime="20230912 10:09:41.785" endtime="20230912 10:09:41.820"/>
</kw>
<msg timestamp="20230912 10:09:41.820" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230912 10:09:41.785" endtime="20230912 10:09:41.820"/>
</kw>
<status status="PASS" starttime="20230912 10:09:41.784" endtime="20230912 10:09:41.821"/>
</kw>
<status status="PASS" starttime="20230912 10:09:41.784" endtime="20230912 10:09:41.821"/>
</kw>
<status status="PASS" starttime="20230912 10:09:41.772" endtime="20230912 10:09:41.821"/>
</kw>
<status status="PASS" starttime="20230912 10:09:41.771" endtime="20230912 10:09:41.821"/>
</kw>
<status status="PASS" starttime="20230912 10:09:41.770" endtime="20230912 10:09:41.821"/>
</kw>
<test id="s1-s1-t1" name="Test datanode functions before and after certificate rotation" line="55">
<kw name="Basic key generation and validation">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>10</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230912 10:09:41.824" level="INFO">${random} = YW5MjKKSb8</msg>
<status status="PASS" starttime="20230912 10:09:41.824" endtime="20230912 10:09:41.824"/>
</kw>
<kw name="Freon OCKG" library="freon">
<arg>prefix=${random}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230912 10:09:41.830" level="INFO">Running command 'ozone freon ockg  -t 1 -n1 -p YW5MjKKSb8  2&gt;&amp;1'.</msg>
<msg timestamp="20230912 10:09:55.013" level="INFO">${rc} = 0</msg>
<msg timestamp="20230912 10:09:55.013" level="INFO">${output} = 2023-09-12 10:09:46,253 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-12 10:09:46,499 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230912 10:09:41.827" endtime="20230912 10:09:55.013"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230912 10:09:55.014" level="INFO">2023-09-12 10:09:46,253 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-12 10:09:46,499 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-09-12 10:09:46,500 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-09-12 10:09:46,607 [main] INFO freon.BaseFreonGenerator: Executing test with prefix YW5MjKKSb8 and number-of-tests 1
2023-09-12 10:09:46,674 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-12 10:09:47,681 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-12 10:09:48,682 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-12 10:09:49,146 [main] INFO rpc.RpcClient: Creating Volume: vol1, with testuser as owner and space quota set to -1 bytes, counts quota set to -1
2023-09-12 10:09:49,314 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with server-side default bucket layout, testuser as owner, Versioning false, Storage Type set to DISK and Encryption set to false, Replication Type set to server-side default replication type, Namespace Quota set to -1, Space Quota set to -1 
2023-09-12 10:09:49,682 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-12 10:09:49,973 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2023-09-12 10:09:50,034 [pool-2-thread-1] INFO netty.NettyConfigKeys$DataStream: setTlsConf GrpcTlsConfig0-
2023-09-12 10:09:50,333 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2023-09-12 10:09:50,683 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-12 10:09:51,683 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-12 10:09:52,684 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-12 10:09:53,684 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2023-09-12 10:09:54,641 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=1, min=4213.783315, max=4213.783315, mean=4213.783315, stddev=0.0, median=4213.783315, p75=4213.783315, p95=4213.783315, p98=4213.783315, p99=4213.783315, p999=4213.783315, mean_rate=0.19039515753556271, m1=0.2, m5=0.2, m15=0.2, rate_unit=events/second, duration_unit=milliseconds
2023-09-12 10:09:54,642 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 8
2023-09-12 10:09:54,643 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-09-12 10:09:54,643 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20230912 10:09:55.014" endtime="20230912 10:09:55.015"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230912 10:09:55.015" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230912 10:09:55.015" endtime="20230912 10:09:55.015"/>
</kw>
<status status="PASS" starttime="20230912 10:09:41.827" endtime="20230912 10:09:55.016"/>
</kw>
<msg timestamp="20230912 10:09:55.016" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230912 10:09:41.827" endtime="20230912 10:09:55.016"/>
</kw>
<msg timestamp="20230912 10:09:55.016" level="INFO">${result} = 2023-09-12 10:09:46,253 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-12 10:09:46,499 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230912 10:09:41.826" endtime="20230912 10:09:55.016"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230912 10:09:55.016" endtime="20230912 10:09:55.017"/>
</kw>
<status status="PASS" starttime="20230912 10:09:41.824" endtime="20230912 10:09:55.017"/>
</kw>
<kw name="Freon OCKV" library="freon">
<arg>prefix=${random}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockv ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230912 10:09:55.022" level="INFO">Running command 'ozone freon ockv  -t 1 -n1 -p YW5MjKKSb8  2&gt;&amp;1'.</msg>
<msg timestamp="20230912 10:10:05.723" level="INFO">${rc} = 0</msg>
<msg timestamp="20230912 10:10:05.723" level="INFO">${output} = 2023-09-12 10:09:58,817 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-12 10:09:58,978 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230912 10:09:55.020" endtime="20230912 10:10:05.724"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230912 10:10:05.725" level="INFO">2023-09-12 10:09:58,817 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-12 10:09:58,978 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-09-12 10:09:58,978 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-09-12 10:09:59,066 [main] INFO freon.BaseFreonGenerator: Executing test with prefix YW5MjKKSb8 and number-of-tests 1
2023-09-12 10:09:59,157 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-12 10:10:00,158 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-12 10:10:01,158 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-12 10:10:02,159 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-12 10:10:02,472 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2023-09-12 10:10:03,160 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-12 10:10:04,161 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-12 10:10:05,162 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2023-09-12 10:10:05,357 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-validate, count=1, min=159.683401, max=159.683401, mean=159.683401, stddev=0.0, median=159.683401, p75=159.683401, p95=159.683401, p98=159.683401, p99=159.683401, p999=159.683401, mean_rate=0.8592081881536776, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-09-12 10:10:05,359 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 6
2023-09-12 10:10:05,359 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-09-12 10:10:05,359 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20230912 10:10:05.724" endtime="20230912 10:10:05.725"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230912 10:10:05.725" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230912 10:10:05.725" endtime="20230912 10:10:05.726"/>
</kw>
<status status="PASS" starttime="20230912 10:09:55.019" endtime="20230912 10:10:05.726"/>
</kw>
<msg timestamp="20230912 10:10:05.726" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230912 10:09:55.019" endtime="20230912 10:10:05.726"/>
</kw>
<msg timestamp="20230912 10:10:05.726" level="INFO">${result} = 2023-09-12 10:09:58,817 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-12 10:09:58,978 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230912 10:09:55.018" endtime="20230912 10:10:05.726"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230912 10:10:05.726" endtime="20230912 10:10:05.727"/>
</kw>
<status status="PASS" starttime="20230912 10:09:55.017" endtime="20230912 10:10:05.727"/>
</kw>
<status status="PASS" starttime="20230912 10:09:41.823" endtime="20230912 10:10:05.727"/>
</kw>
<kw name="Find certificate duration">
<var>${certDuration}</var>
<kw name="Execute" library="os">
<var>${waitTime}</var>
<arg>ozone getconf confKey hdds.x509.default.duration | sed 's/PT//'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230912 10:10:05.733" level="INFO">Running command 'ozone getconf confKey hdds.x509.default.duration | sed 's/PT//' 2&gt;&amp;1'.</msg>
<msg timestamp="20230912 10:10:07.415" level="INFO">${rc} = 0</msg>
<msg timestamp="20230912 10:10:07.415" level="INFO">${output} = 40s</msg>
<status status="PASS" starttime="20230912 10:10:05.729" endtime="20230912 10:10:07.416"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230912 10:10:07.417" level="INFO">40s</msg>
<status status="PASS" starttime="20230912 10:10:07.416" endtime="20230912 10:10:07.417"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230912 10:10:07.418" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230912 10:10:07.417" endtime="20230912 10:10:07.418"/>
</kw>
<status status="PASS" starttime="20230912 10:10:05.728" endtime="20230912 10:10:07.418"/>
</kw>
<msg timestamp="20230912 10:10:07.418" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230912 10:10:05.728" endtime="20230912 10:10:07.418"/>
</kw>
<msg timestamp="20230912 10:10:07.418" level="INFO">${waitTime} = 40s</msg>
<status status="PASS" starttime="20230912 10:10:05.727" endtime="20230912 10:10:07.418"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>"${waitTime}" != "${EMPTY}"</arg>
<arg>${waitTime}</arg>
<arg>0s</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230912 10:10:07.420" level="INFO">${result} = 40s</msg>
<status status="PASS" starttime="20230912 10:10:07.419" endtime="20230912 10:10:07.420"/>
</kw>
<msg timestamp="20230912 10:10:07.420" level="INFO">${certDuration} = 40s</msg>
<status status="PASS" starttime="20230912 10:10:05.727" endtime="20230912 10:10:07.420"/>
</kw>
<kw name="Double duration">
<var>${doubleDuration}</var>
<arg>${certDuration}</arg>
<kw name="Add Time To Time" library="DateTime">
<var>${doubleDuration}</var>
<arg>${duration}</arg>
<arg>${duration}</arg>
<doc>Adds time to another time and returns the resulting time.</doc>
<msg timestamp="20230912 10:10:07.421" level="INFO">${doubleDuration} = 80.0</msg>
<status status="PASS" starttime="20230912 10:10:07.421" endtime="20230912 10:10:07.421"/>
</kw>
<msg timestamp="20230912 10:10:07.422" level="INFO">${doubleDuration} = 80.0</msg>
<status status="PASS" starttime="20230912 10:10:07.420" endtime="20230912 10:10:07.422"/>
</kw>
<kw name="Get datanode cert serial">
<var>${certId1}</var>
<kw name="Execute" library="os">
<var>${certSerial}</var>
<arg>openssl s_client -connect "${datanode}":"${port}" -showcerts | openssl x509 -noout -serial | grep serial | sed 's/serial=//'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230912 10:10:07.426" level="INFO">Running command 'openssl s_client -connect "datanode":"9859" -showcerts | openssl x509 -noout -serial | grep serial | sed 's/serial=//' 2&gt;&amp;1'.</msg>
<msg timestamp="20230912 10:10:07.529" level="INFO">${rc} = 0</msg>
<msg timestamp="20230912 10:10:07.529" level="INFO">${output} = E3E44A103C</msg>
<status status="PASS" starttime="20230912 10:10:07.423" endtime="20230912 10:10:07.529"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230912 10:10:07.530" level="INFO">E3E44A103C</msg>
<status status="PASS" starttime="20230912 10:10:07.529" endtime="20230912 10:10:07.530"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230912 10:10:07.531" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230912 10:10:07.530" endtime="20230912 10:10:07.531"/>
</kw>
<status status="PASS" starttime="20230912 10:10:07.423" endtime="20230912 10:10:07.531"/>
</kw>
<msg timestamp="20230912 10:10:07.531" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230912 10:10:07.423" endtime="20230912 10:10:07.531"/>
</kw>
<msg timestamp="20230912 10:10:07.531" level="INFO">${certSerial} = E3E44A103C</msg>
<status status="PASS" starttime="20230912 10:10:07.422" endtime="20230912 10:10:07.531"/>
</kw>
<msg timestamp="20230912 10:10:07.531" level="INFO">${certId1} = E3E44A103C</msg>
<status status="PASS" starttime="20230912 10:10:07.422" endtime="20230912 10:10:07.531"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${doubleDuration}</arg>
<arg>5sec</arg>
<arg>Datanode has new certificate</arg>
<arg>${certId1}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Datanode has new certificate">
<arg>${certId1}</arg>
<kw name="Get datanode cert serial">
<var>${newCertId}</var>
<kw name="Execute" library="os">
<var>${certSerial}</var>
<arg>openssl s_client -connect "${datanode}":"${port}" -showcerts | openssl x509 -noout -serial | grep serial | sed 's/serial=//'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230912 10:10:07.538" level="INFO">Running command 'openssl s_client -connect "datanode":"9859" -showcerts | openssl x509 -noout -serial | grep serial | sed 's/serial=//' 2&gt;&amp;1'.</msg>
<msg timestamp="20230912 10:10:07.621" level="INFO">${rc} = 0</msg>
<msg timestamp="20230912 10:10:07.621" level="INFO">${output} = E3E44A103C</msg>
<status status="PASS" starttime="20230912 10:10:07.535" endtime="20230912 10:10:07.622"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230912 10:10:07.623" level="INFO">E3E44A103C</msg>
<status status="PASS" starttime="20230912 10:10:07.622" endtime="20230912 10:10:07.623"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230912 10:10:07.624" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230912 10:10:07.623" endtime="20230912 10:10:07.624"/>
</kw>
<status status="PASS" starttime="20230912 10:10:07.534" endtime="20230912 10:10:07.624"/>
</kw>
<msg timestamp="20230912 10:10:07.624" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230912 10:10:07.534" endtime="20230912 10:10:07.624"/>
</kw>
<msg timestamp="20230912 10:10:07.624" level="INFO">${certSerial} = E3E44A103C</msg>
<status status="PASS" starttime="20230912 10:10:07.533" endtime="20230912 10:10:07.624"/>
</kw>
<msg timestamp="20230912 10:10:07.625" level="INFO">${newCertId} = E3E44A103C</msg>
<status status="PASS" starttime="20230912 10:10:07.533" endtime="20230912 10:10:07.625"/>
</kw>
<kw name="Should Not Be Equal" library="BuiltIn">
<arg>${certId}</arg>
<arg>${newCertId}</arg>
<doc>Fails if the given objects are equal.</doc>
<msg timestamp="20230912 10:10:07.625" level="FAIL">E3E44A103C == E3E44A103C</msg>
<status status="FAIL" starttime="20230912 10:10:07.625" endtime="20230912 10:10:07.626"/>
</kw>
<status status="FAIL" starttime="20230912 10:10:07.532" endtime="20230912 10:10:07.626"/>
</kw>
<kw name="Datanode has new certificate">
<arg>${certId1}</arg>
<kw name="Get datanode cert serial">
<var>${newCertId}</var>
<kw name="Execute" library="os">
<var>${certSerial}</var>
<arg>openssl s_client -connect "${datanode}":"${port}" -showcerts | openssl x509 -noout -serial | grep serial | sed 's/serial=//'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230912 10:10:12.632" level="INFO">Running command 'openssl s_client -connect "datanode":"9859" -showcerts | openssl x509 -noout -serial | grep serial | sed 's/serial=//' 2&gt;&amp;1'.</msg>
<msg timestamp="20230912 10:10:12.718" level="INFO">${rc} = 0</msg>
<msg timestamp="20230912 10:10:12.718" level="INFO">${output} = E3E44A103C</msg>
<status status="PASS" starttime="20230912 10:10:12.629" endtime="20230912 10:10:12.718"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230912 10:10:12.720" level="INFO">E3E44A103C</msg>
<status status="PASS" starttime="20230912 10:10:12.719" endtime="20230912 10:10:12.720"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230912 10:10:12.720" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230912 10:10:12.720" endtime="20230912 10:10:12.721"/>
</kw>
<status status="PASS" starttime="20230912 10:10:12.629" endtime="20230912 10:10:12.721"/>
</kw>
<msg timestamp="20230912 10:10:12.721" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230912 10:10:12.629" endtime="20230912 10:10:12.721"/>
</kw>
<msg timestamp="20230912 10:10:12.721" level="INFO">${certSerial} = E3E44A103C</msg>
<status status="PASS" starttime="20230912 10:10:12.628" endtime="20230912 10:10:12.721"/>
</kw>
<msg timestamp="20230912 10:10:12.721" level="INFO">${newCertId} = E3E44A103C</msg>
<status status="PASS" starttime="20230912 10:10:12.627" endtime="20230912 10:10:12.721"/>
</kw>
<kw name="Should Not Be Equal" library="BuiltIn">
<arg>${certId}</arg>
<arg>${newCertId}</arg>
<doc>Fails if the given objects are equal.</doc>
<msg timestamp="20230912 10:10:12.722" level="FAIL">E3E44A103C == E3E44A103C</msg>
<status status="FAIL" starttime="20230912 10:10:12.722" endtime="20230912 10:10:12.722"/>
</kw>
<status status="FAIL" starttime="20230912 10:10:12.627" endtime="20230912 10:10:12.723"/>
</kw>
<kw name="Datanode has new certificate">
<arg>${certId1}</arg>
<kw name="Get datanode cert serial">
<var>${newCertId}</var>
<kw name="Execute" library="os">
<var>${certSerial}</var>
<arg>openssl s_client -connect "${datanode}":"${port}" -showcerts | openssl x509 -noout -serial | grep serial | sed 's/serial=//'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230912 10:10:17.729" level="INFO">Running command 'openssl s_client -connect "datanode":"9859" -showcerts | openssl x509 -noout -serial | grep serial | sed 's/serial=//' 2&gt;&amp;1'.</msg>
<msg timestamp="20230912 10:10:17.793" level="INFO">${rc} = 0</msg>
<msg timestamp="20230912 10:10:17.793" level="INFO">${output} = E60C5AC5DF</msg>
<status status="PASS" starttime="20230912 10:10:17.726" endtime="20230912 10:10:17.793"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230912 10:10:17.794" level="INFO">E60C5AC5DF</msg>
<status status="PASS" starttime="20230912 10:10:17.794" endtime="20230912 10:10:17.795"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230912 10:10:17.795" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230912 10:10:17.795" endtime="20230912 10:10:17.795"/>
</kw>
<status status="PASS" starttime="20230912 10:10:17.725" endtime="20230912 10:10:17.795"/>
</kw>
<msg timestamp="20230912 10:10:17.796" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230912 10:10:17.725" endtime="20230912 10:10:17.796"/>
</kw>
<msg timestamp="20230912 10:10:17.796" level="INFO">${certSerial} = E60C5AC5DF</msg>
<status status="PASS" starttime="20230912 10:10:17.724" endtime="20230912 10:10:17.796"/>
</kw>
<msg timestamp="20230912 10:10:17.796" level="INFO">${newCertId} = E60C5AC5DF</msg>
<status status="PASS" starttime="20230912 10:10:17.724" endtime="20230912 10:10:17.796"/>
</kw>
<kw name="Should Not Be Equal" library="BuiltIn">
<arg>${certId}</arg>
<arg>${newCertId}</arg>
<doc>Fails if the given objects are equal.</doc>
<status status="PASS" starttime="20230912 10:10:17.796" endtime="20230912 10:10:17.797"/>
</kw>
<status status="PASS" starttime="20230912 10:10:17.723" endtime="20230912 10:10:17.797"/>
</kw>
<status status="PASS" starttime="20230912 10:10:07.532" endtime="20230912 10:10:17.797"/>
</kw>
<kw name="Basic key generation and validation">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>10</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230912 10:10:17.798" level="INFO">${random} = du6gAIBWXi</msg>
<status status="PASS" starttime="20230912 10:10:17.798" endtime="20230912 10:10:17.798"/>
</kw>
<kw name="Freon OCKG" library="freon">
<arg>prefix=${random}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230912 10:10:17.804" level="INFO">Running command 'ozone freon ockg  -t 1 -n1 -p du6gAIBWXi  2&gt;&amp;1'.</msg>
<msg timestamp="20230912 10:10:28.086" level="INFO">${rc} = 0</msg>
<msg timestamp="20230912 10:10:28.086" level="INFO">${output} = 2023-09-12 10:10:20,681 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-12 10:10:20,943 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230912 10:10:17.801" endtime="20230912 10:10:28.086"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230912 10:10:28.087" level="INFO">2023-09-12 10:10:20,681 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-12 10:10:20,943 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-09-12 10:10:20,943 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-09-12 10:10:21,061 [main] INFO freon.BaseFreonGenerator: Executing test with prefix du6gAIBWXi and number-of-tests 1
2023-09-12 10:10:21,131 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-12 10:10:22,136 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-12 10:10:23,137 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-12 10:10:23,922 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2023-09-12 10:10:23,970 [pool-2-thread-1] INFO netty.NettyConfigKeys$DataStream: setTlsConf GrpcTlsConfig0-
2023-09-12 10:10:24,137 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-12 10:10:25,138 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-12 10:10:25,338 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2023-09-12 10:10:26,138 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-12 10:10:27,139 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2023-09-12 10:10:27,738 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=1, min=3119.439947, max=3119.439947, mean=3119.439947, stddev=0.0, median=3119.439947, p75=3119.439947, p95=3119.439947, p98=3119.439947, p99=3119.439947, p999=3119.439947, mean_rate=0.2397051863611774, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-09-12 10:10:27,738 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 7
2023-09-12 10:10:27,739 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-09-12 10:10:27,739 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20230912 10:10:28.086" endtime="20230912 10:10:28.087"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230912 10:10:28.088" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230912 10:10:28.088" endtime="20230912 10:10:28.088"/>
</kw>
<status status="PASS" starttime="20230912 10:10:17.800" endtime="20230912 10:10:28.088"/>
</kw>
<msg timestamp="20230912 10:10:28.089" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230912 10:10:17.800" endtime="20230912 10:10:28.089"/>
</kw>
<msg timestamp="20230912 10:10:28.089" level="INFO">${result} = 2023-09-12 10:10:20,681 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-12 10:10:20,943 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230912 10:10:17.799" endtime="20230912 10:10:28.089"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230912 10:10:28.090" endtime="20230912 10:10:28.090"/>
</kw>
<status status="PASS" starttime="20230912 10:10:17.798" endtime="20230912 10:10:28.090"/>
</kw>
<kw name="Freon OCKV" library="freon">
<arg>prefix=${random}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockv ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230912 10:10:28.096" level="INFO">Running command 'ozone freon ockv  -t 1 -n1 -p du6gAIBWXi  2&gt;&amp;1'.</msg>
<msg timestamp="20230912 10:10:37.126" level="INFO">${rc} = 0</msg>
<msg timestamp="20230912 10:10:37.126" level="INFO">${output} = 2023-09-12 10:10:30,881 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-12 10:10:31,008 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230912 10:10:28.093" endtime="20230912 10:10:37.126"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230912 10:10:37.127" level="INFO">2023-09-12 10:10:30,881 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-12 10:10:31,008 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-09-12 10:10:31,008 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-09-12 10:10:31,075 [main] INFO freon.BaseFreonGenerator: Executing test with prefix du6gAIBWXi and number-of-tests 1
2023-09-12 10:10:31,126 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-12 10:10:32,128 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-12 10:10:33,129 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-12 10:10:33,509 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2023-09-12 10:10:34,130 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-12 10:10:35,131 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-12 10:10:36,131 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2023-09-12 10:10:36,780 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-validate, count=1, min=38.589299, max=38.589299, mean=38.589299, stddev=0.0, median=38.589299, p75=38.589299, p95=38.589299, p98=38.589299, p99=38.589299, p999=38.589299, mean_rate=0.9066415041493714, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-09-12 10:10:36,780 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 6
2023-09-12 10:10:36,781 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-09-12 10:10:36,781 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20230912 10:10:37.126" endtime="20230912 10:10:37.127"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230912 10:10:37.128" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230912 10:10:37.127" endtime="20230912 10:10:37.128"/>
</kw>
<status status="PASS" starttime="20230912 10:10:28.093" endtime="20230912 10:10:37.128"/>
</kw>
<msg timestamp="20230912 10:10:37.128" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230912 10:10:28.093" endtime="20230912 10:10:37.128"/>
</kw>
<msg timestamp="20230912 10:10:37.128" level="INFO">${result} = 2023-09-12 10:10:30,881 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-12 10:10:31,008 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230912 10:10:28.092" endtime="20230912 10:10:37.128"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230912 10:10:37.129" endtime="20230912 10:10:37.129"/>
</kw>
<status status="PASS" starttime="20230912 10:10:28.091" endtime="20230912 10:10:37.129"/>
</kw>
<status status="PASS" starttime="20230912 10:10:17.797" endtime="20230912 10:10:37.130"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230912 10:09:41.821" endtime="20230912 10:10:37.130"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20230912 10:09:41.729" endtime="20230912 10:10:37.131"/>
</suite>
<suite id="s1-s2" name="Root-Ca-Rotation-Client-Checks" source="/opt/hadoop/smoketest/certrotation/root-ca-rotation-client-checks.robot">
<test id="s1-s2-t1" name="Create a volume and bucket" line="27">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230912 10:10:37.146" level="INFO">Running command 'ozone sh volume create rootca-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20230912 10:10:43.234" level="INFO">${rc} = 0</msg>
<msg timestamp="20230912 10:10:43.234" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230912 10:10:37.141" endtime="20230912 10:10:43.234"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230912 10:10:43.236" level="INFO"/>
<status status="PASS" starttime="20230912 10:10:43.235" endtime="20230912 10:10:43.236"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230912 10:10:43.236" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230912 10:10:43.236" endtime="20230912 10:10:43.236"/>
</kw>
<status status="PASS" starttime="20230912 10:10:37.141" endtime="20230912 10:10:43.237"/>
</kw>
<msg timestamp="20230912 10:10:43.237" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230912 10:10:37.141" endtime="20230912 10:10:43.237"/>
</kw>
<msg timestamp="20230912 10:10:43.237" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230912 10:10:37.140" endtime="20230912 10:10:43.237"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230912 10:10:43.237" endtime="20230912 10:10:43.238"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230912 10:10:43.242" level="INFO">Running command 'ozone sh bucket create /rootca-volume/rootca-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230912 10:10:49.562" level="INFO">${rc} = 0</msg>
<msg timestamp="20230912 10:10:49.562" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230912 10:10:43.239" endtime="20230912 10:10:49.562"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230912 10:10:49.563" level="INFO"/>
<status status="PASS" starttime="20230912 10:10:49.563" endtime="20230912 10:10:49.563"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230912 10:10:49.564" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230912 10:10:49.564" endtime="20230912 10:10:49.564"/>
</kw>
<status status="PASS" starttime="20230912 10:10:43.239" endtime="20230912 10:10:49.564"/>
</kw>
<msg timestamp="20230912 10:10:49.564" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230912 10:10:43.238" endtime="20230912 10:10:49.565"/>
</kw>
<msg timestamp="20230912 10:10:49.565" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230912 10:10:43.238" endtime="20230912 10:10:49.565"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230912 10:10:49.565" endtime="20230912 10:10:49.565"/>
</kw>
<tag>create-volume-and-bucket</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230912 10:10:37.139" endtime="20230912 10:10:49.565"/>
</test>
<test id="s1-s2-t2" name="Create key" line="34">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230912 10:10:49.570" level="INFO">Running command 'echo "rootca: key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20230912 10:10:49.572" level="INFO">${rc} = 0</msg>
<msg timestamp="20230912 10:10:49.572" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230912 10:10:49.567" endtime="20230912 10:10:49.572"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230912 10:10:49.573" level="INFO"/>
<status status="PASS" starttime="20230912 10:10:49.573" endtime="20230912 10:10:49.573"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230912 10:10:49.575" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230912 10:10:49.573" endtime="20230912 10:10:49.575"/>
</kw>
<status status="PASS" starttime="20230912 10:10:49.567" endtime="20230912 10:10:49.575"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230912 10:10:49.579" level="INFO">Running command 'ozone sh key put /rootca-volume/rootca-bucket/rootca-key /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230912 10:10:59.487" level="INFO">${rc} = 0</msg>
<msg timestamp="20230912 10:10:59.487" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230912 10:10:49.577" endtime="20230912 10:10:59.487"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230912 10:10:59.488" level="INFO"/>
<status status="PASS" starttime="20230912 10:10:59.487" endtime="20230912 10:10:59.488"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230912 10:10:59.489" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230912 10:10:59.488" endtime="20230912 10:10:59.489"/>
</kw>
<status status="PASS" starttime="20230912 10:10:49.576" endtime="20230912 10:10:59.490"/>
</kw>
<msg timestamp="20230912 10:10:59.490" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230912 10:10:49.576" endtime="20230912 10:10:59.490"/>
</kw>
<msg timestamp="20230912 10:10:59.490" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230912 10:10:49.575" endtime="20230912 10:10:59.490"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230912 10:10:59.490" endtime="20230912 10:10:59.490"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230912 10:10:59.494" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230912 10:10:59.497" level="INFO">${rc} = 0</msg>
<msg timestamp="20230912 10:10:59.497" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230912 10:10:59.491" endtime="20230912 10:10:59.497"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230912 10:10:59.498" level="INFO"/>
<status status="PASS" starttime="20230912 10:10:59.497" endtime="20230912 10:10:59.498"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230912 10:10:59.498" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230912 10:10:59.498" endtime="20230912 10:10:59.499"/>
</kw>
<status status="PASS" starttime="20230912 10:10:59.491" endtime="20230912 10:10:59.499"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230912 10:10:49.566" endtime="20230912 10:10:59.499"/>
</test>
<test id="s1-s2-t3" name="Read data from previously created key" line="40">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230912 10:10:59.501" level="INFO">${random} = 72373</msg>
<status status="PASS" starttime="20230912 10:10:59.501" endtime="20230912 10:10:59.501"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230912 10:10:59.505" level="INFO">Running command 'ozone sh key get /rootca-volume/rootca-bucket/rootca-key /tmp/key-72373 2&gt;&amp;1'.</msg>
<msg timestamp="20230912 10:11:07.534" level="INFO">${rc} = 0</msg>
<msg timestamp="20230912 10:11:07.534" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230912 10:10:59.503" endtime="20230912 10:11:07.534"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230912 10:11:07.535" level="INFO"/>
<status status="PASS" starttime="20230912 10:11:07.534" endtime="20230912 10:11:07.535"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230912 10:11:07.536" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230912 10:11:07.535" endtime="20230912 10:11:07.536"/>
</kw>
<status status="PASS" starttime="20230912 10:10:59.502" endtime="20230912 10:11:07.536"/>
</kw>
<msg timestamp="20230912 10:11:07.536" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230912 10:10:59.502" endtime="20230912 10:11:07.536"/>
</kw>
<msg timestamp="20230912 10:11:07.537" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230912 10:10:59.501" endtime="20230912 10:11:07.537"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230912 10:11:07.537" endtime="20230912 10:11:07.537"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230912 10:11:07.540" level="INFO">Running command 'cat /tmp/key-72373 2&gt;&amp;1'.</msg>
<msg timestamp="20230912 10:11:07.543" level="INFO">${rc} = 0</msg>
<msg timestamp="20230912 10:11:07.544" level="INFO">${output} = rootca: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230912 10:11:07.538" endtime="20230912 10:11:07.544"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230912 10:11:07.545" level="INFO">rootca: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230912 10:11:07.544" endtime="20230912 10:11:07.545"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230912 10:11:07.545" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230912 10:11:07.545" endtime="20230912 10:11:07.546"/>
</kw>
<msg timestamp="20230912 10:11:07.546" level="INFO">${output} = rootca: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230912 10:11:07.537" endtime="20230912 10:11:07.546"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230912 10:11:07.546" endtime="20230912 10:11:07.547"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230912 10:11:07.550" level="INFO">Running command 'rm /tmp/key-72373 2&gt;&amp;1'.</msg>
<msg timestamp="20230912 10:11:07.553" level="INFO">${rc} = 0</msg>
<msg timestamp="20230912 10:11:07.553" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230912 10:11:07.548" endtime="20230912 10:11:07.553"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230912 10:11:07.555" level="INFO"/>
<status status="PASS" starttime="20230912 10:11:07.554" endtime="20230912 10:11:07.555"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230912 10:11:07.555" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230912 10:11:07.555" endtime="20230912 10:11:07.555"/>
</kw>
<status status="PASS" starttime="20230912 10:11:07.547" endtime="20230912 10:11:07.556"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230912 10:10:59.500" endtime="20230912 10:11:07.556"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20230912 10:10:37.133" endtime="20230912 10:11:07.557"/>
</suite>
<status status="PASS" starttime="20230912 10:09:41.700" endtime="20230912 10:11:07.559"/>
</suite>
<statistics>
<total>
<stat pass="4" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="1" fail="0" skip="0">create-volume-and-bucket</stat>
</tag>
<suite>
<stat pass="4" fail="0" skip="0" id="s1" name="ozonesecure-certificate-rotation">ozonesecure-certificate-rotation</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1" name="Cert-Rotation">ozonesecure-certificate-rotation.Cert-Rotation</stat>
<stat pass="3" fail="0" skip="0" id="s1-s2" name="Root-Ca-Rotation-Client-Checks">ozonesecure-certificate-rotation.Root-Ca-Rotation-Client-Checks</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
