<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 6.1.1 (Python 3.8.10 on linux)" generated="20230912 10:16:20.262" rpa="false" schemaversion="4">
<suite id="s1" name="ozonesecure-root-ca-rotation">
<suite id="s1-s1" name="Kinit" source="/opt/hadoop/smoketest/kinit.robot">
<test id="s1-s1-t1" name="Kinit" line="27">
<kw name="Kinit test user" library="commonlib">
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230912 10:13:25.416" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230912 10:13:25.422" level="INFO">${rc} = 0</msg>
<msg timestamp="20230912 10:13:25.422" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230912 10:13:25.412" endtime="20230912 10:13:25.422"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230912 10:13:25.423" level="INFO">scm</msg>
<status status="PASS" starttime="20230912 10:13:25.422" endtime="20230912 10:13:25.423"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230912 10:13:25.424" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230912 10:13:25.423" endtime="20230912 10:13:25.424"/>
</kw>
<status status="PASS" starttime="20230912 10:13:25.412" endtime="20230912 10:13:25.424"/>
</kw>
<msg timestamp="20230912 10:13:25.424" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230912 10:13:25.411" endtime="20230912 10:13:25.424"/>
</kw>
<msg timestamp="20230912 10:13:25.425" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230912 10:13:25.411" endtime="20230912 10:13:25.425"/>
</kw>
<msg timestamp="20230912 10:13:25.425" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230912 10:13:25.411" endtime="20230912 10:13:25.425"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230912 10:13:25.426" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230912 10:13:25.425" endtime="20230912 10:13:25.426"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230912 10:13:25.431" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20230912 10:13:25.466" level="INFO">${rc} = 0</msg>
<msg timestamp="20230912 10:13:25.467" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230912 10:13:25.428" endtime="20230912 10:13:25.467"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230912 10:13:25.468" level="INFO"/>
<status status="PASS" starttime="20230912 10:13:25.467" endtime="20230912 10:13:25.468"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230912 10:13:25.469" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230912 10:13:25.468" endtime="20230912 10:13:25.469"/>
</kw>
<status status="PASS" starttime="20230912 10:13:25.427" endtime="20230912 10:13:25.469"/>
</kw>
<msg timestamp="20230912 10:13:25.469" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230912 10:13:25.427" endtime="20230912 10:13:25.469"/>
</kw>
<status status="PASS" starttime="20230912 10:13:25.426" endtime="20230912 10:13:25.469"/>
</kw>
<status status="PASS" starttime="20230912 10:13:25.426" endtime="20230912 10:13:25.470"/>
</kw>
<status status="PASS" starttime="20230912 10:13:25.410" endtime="20230912 10:13:25.470"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20230912 10:13:25.409" endtime="20230912 10:13:25.470"/>
</test>
<doc>Kinit test user</doc>
<status status="PASS" starttime="20230912 10:13:25.235" endtime="20230912 10:13:25.479"/>
</suite>
<suite id="s1-s2" name="Root-Ca-Rotation-Client-Checks" source="/opt/hadoop/smoketest/certrotation/root-ca-rotation-client-checks.robot">
<test id="s1-s2-t1" name="Create a volume and bucket" line="27">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230912 10:13:57.306" level="INFO">Running command 'ozone sh volume create rootca-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20230912 10:14:03.342" level="INFO">${rc} = 0</msg>
<msg timestamp="20230912 10:14:03.342" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230912 10:13:57.303" endtime="20230912 10:14:03.342"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230912 10:14:03.344" level="INFO"/>
<status status="PASS" starttime="20230912 10:14:03.343" endtime="20230912 10:14:03.344"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230912 10:14:03.345" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230912 10:14:03.344" endtime="20230912 10:14:03.345"/>
</kw>
<status status="PASS" starttime="20230912 10:13:57.302" endtime="20230912 10:14:03.345"/>
</kw>
<msg timestamp="20230912 10:14:03.345" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230912 10:13:57.302" endtime="20230912 10:14:03.345"/>
</kw>
<msg timestamp="20230912 10:14:03.345" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230912 10:13:57.301" endtime="20230912 10:14:03.345"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230912 10:14:03.346" endtime="20230912 10:14:03.346"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230912 10:14:03.351" level="INFO">Running command 'ozone sh bucket create /rootca-volume/rootca-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230912 10:14:10.416" level="INFO">${rc} = 0</msg>
<msg timestamp="20230912 10:14:10.416" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230912 10:14:03.348" endtime="20230912 10:14:10.416"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230912 10:14:10.417" level="INFO"/>
<status status="PASS" starttime="20230912 10:14:10.417" endtime="20230912 10:14:10.418"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230912 10:14:10.418" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230912 10:14:10.418" endtime="20230912 10:14:10.418"/>
</kw>
<status status="PASS" starttime="20230912 10:14:03.347" endtime="20230912 10:14:10.418"/>
</kw>
<msg timestamp="20230912 10:14:10.418" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230912 10:14:03.347" endtime="20230912 10:14:10.419"/>
</kw>
<msg timestamp="20230912 10:14:10.419" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230912 10:14:03.346" endtime="20230912 10:14:10.419"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230912 10:14:10.419" endtime="20230912 10:14:10.419"/>
</kw>
<tag>create-volume-and-bucket</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230912 10:13:57.301" endtime="20230912 10:14:10.420"/>
</test>
<test id="s1-s2-t2" name="Create key" line="34">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230912 10:14:10.425" level="INFO">Running command 'echo "rootca: key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20230912 10:14:10.427" level="INFO">${rc} = 0</msg>
<msg timestamp="20230912 10:14:10.427" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230912 10:14:10.422" endtime="20230912 10:14:10.427"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230912 10:14:10.429" level="INFO"/>
<status status="PASS" starttime="20230912 10:14:10.428" endtime="20230912 10:14:10.429"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230912 10:14:10.429" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230912 10:14:10.429" endtime="20230912 10:14:10.429"/>
</kw>
<status status="PASS" starttime="20230912 10:14:10.422" endtime="20230912 10:14:10.429"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230912 10:14:10.434" level="INFO">Running command 'ozone sh key put /rootca-volume/rootca-bucket/rootca-key /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230912 10:14:20.518" level="INFO">${rc} = 0</msg>
<msg timestamp="20230912 10:14:20.518" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230912 10:14:10.431" endtime="20230912 10:14:20.518"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230912 10:14:20.528" level="INFO"/>
<status status="PASS" starttime="20230912 10:14:20.520" endtime="20230912 10:14:20.528"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230912 10:14:20.536" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230912 10:14:20.529" endtime="20230912 10:14:20.537"/>
</kw>
<status status="PASS" starttime="20230912 10:14:10.431" endtime="20230912 10:14:20.537"/>
</kw>
<msg timestamp="20230912 10:14:20.537" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230912 10:14:10.430" endtime="20230912 10:14:20.540"/>
</kw>
<msg timestamp="20230912 10:14:20.540" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230912 10:14:10.430" endtime="20230912 10:14:20.540"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230912 10:14:20.541" endtime="20230912 10:14:20.541"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230912 10:14:20.545" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230912 10:14:20.549" level="INFO">${rc} = 0</msg>
<msg timestamp="20230912 10:14:20.549" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230912 10:14:20.542" endtime="20230912 10:14:20.549"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230912 10:14:20.550" level="INFO"/>
<status status="PASS" starttime="20230912 10:14:20.550" endtime="20230912 10:14:20.550"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230912 10:14:20.551" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230912 10:14:20.551" endtime="20230912 10:14:20.551"/>
</kw>
<status status="PASS" starttime="20230912 10:14:20.541" endtime="20230912 10:14:20.551"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230912 10:14:10.421" endtime="20230912 10:14:20.552"/>
</test>
<test id="s1-s2-t3" name="Read data from previously created key" line="40">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230912 10:14:20.553" level="INFO">${random} = 43825</msg>
<status status="PASS" starttime="20230912 10:14:20.553" endtime="20230912 10:14:20.554"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230912 10:14:20.558" level="INFO">Running command 'ozone sh key get /rootca-volume/rootca-bucket/rootca-key /tmp/key-43825 2&gt;&amp;1'.</msg>
<msg timestamp="20230912 10:14:29.989" level="INFO">${rc} = 0</msg>
<msg timestamp="20230912 10:14:29.989" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230912 10:14:20.555" endtime="20230912 10:14:29.989"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230912 10:14:29.991" level="INFO"/>
<status status="PASS" starttime="20230912 10:14:29.990" endtime="20230912 10:14:29.991"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230912 10:14:29.992" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230912 10:14:29.991" endtime="20230912 10:14:29.992"/>
</kw>
<status status="PASS" starttime="20230912 10:14:20.555" endtime="20230912 10:14:29.992"/>
</kw>
<msg timestamp="20230912 10:14:29.992" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230912 10:14:20.554" endtime="20230912 10:14:29.992"/>
</kw>
<msg timestamp="20230912 10:14:29.992" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230912 10:14:20.554" endtime="20230912 10:14:29.992"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230912 10:14:29.992" endtime="20230912 10:14:29.993"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230912 10:14:29.997" level="INFO">Running command 'cat /tmp/key-43825 2&gt;&amp;1'.</msg>
<msg timestamp="20230912 10:14:29.999" level="INFO">${rc} = 0</msg>
<msg timestamp="20230912 10:14:30.000" level="INFO">${output} = rootca: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230912 10:14:29.994" endtime="20230912 10:14:30.000"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230912 10:14:30.001" level="INFO">rootca: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230912 10:14:30.000" endtime="20230912 10:14:30.001"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230912 10:14:30.002" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230912 10:14:30.001" endtime="20230912 10:14:30.002"/>
</kw>
<msg timestamp="20230912 10:14:30.002" level="INFO">${output} = rootca: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230912 10:14:29.993" endtime="20230912 10:14:30.002"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230912 10:14:30.002" endtime="20230912 10:14:30.003"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230912 10:14:30.006" level="INFO">Running command 'rm /tmp/key-43825 2&gt;&amp;1'.</msg>
<msg timestamp="20230912 10:14:30.009" level="INFO">${rc} = 0</msg>
<msg timestamp="20230912 10:14:30.009" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230912 10:14:30.003" endtime="20230912 10:14:30.009"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230912 10:14:30.011" level="INFO"/>
<status status="PASS" starttime="20230912 10:14:30.010" endtime="20230912 10:14:30.011"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230912 10:14:30.012" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230912 10:14:30.011" endtime="20230912 10:14:30.012"/>
</kw>
<status status="PASS" starttime="20230912 10:14:30.003" endtime="20230912 10:14:30.012"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230912 10:14:20.552" endtime="20230912 10:14:30.012"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20230912 10:13:57.249" endtime="20230912 10:14:30.014"/>
</suite>
<suite id="s1-s3" name="Root-Ca-Rotation-Client-Checks" source="/opt/hadoop/smoketest/certrotation/root-ca-rotation-client-checks.robot">
<test id="s1-s3-t1" name="Create a volume and bucket" line="27">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230912 10:15:27.904" level="INFO">Running command 'ozone sh volume create rootca2-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20230912 10:15:33.012" level="INFO">${rc} = 0</msg>
<msg timestamp="20230912 10:15:33.012" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230912 10:15:27.901" endtime="20230912 10:15:33.012"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230912 10:15:33.014" level="INFO"/>
<status status="PASS" starttime="20230912 10:15:33.013" endtime="20230912 10:15:33.014"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230912 10:15:33.014" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230912 10:15:33.014" endtime="20230912 10:15:33.014"/>
</kw>
<status status="PASS" starttime="20230912 10:15:27.901" endtime="20230912 10:15:33.015"/>
</kw>
<msg timestamp="20230912 10:15:33.015" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230912 10:15:27.900" endtime="20230912 10:15:33.015"/>
</kw>
<msg timestamp="20230912 10:15:33.015" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230912 10:15:27.899" endtime="20230912 10:15:33.015"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230912 10:15:33.015" endtime="20230912 10:15:33.016"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230912 10:15:33.020" level="INFO">Running command 'ozone sh bucket create /rootca2-volume/rootca2-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230912 10:15:39.866" level="INFO">${rc} = 0</msg>
<msg timestamp="20230912 10:15:39.866" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230912 10:15:33.017" endtime="20230912 10:15:39.866"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230912 10:15:39.867" level="INFO"/>
<status status="PASS" starttime="20230912 10:15:39.866" endtime="20230912 10:15:39.867"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230912 10:15:39.868" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230912 10:15:39.868" endtime="20230912 10:15:39.868"/>
</kw>
<status status="PASS" starttime="20230912 10:15:33.017" endtime="20230912 10:15:39.868"/>
</kw>
<msg timestamp="20230912 10:15:39.868" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230912 10:15:33.017" endtime="20230912 10:15:39.869"/>
</kw>
<msg timestamp="20230912 10:15:39.869" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230912 10:15:33.016" endtime="20230912 10:15:39.869"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230912 10:15:39.869" endtime="20230912 10:15:39.869"/>
</kw>
<tag>create-volume-and-bucket</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230912 10:15:27.899" endtime="20230912 10:15:39.870"/>
</test>
<test id="s1-s3-t2" name="Create key" line="34">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230912 10:15:39.875" level="INFO">Running command 'echo "rootca2: key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20230912 10:15:39.877" level="INFO">${rc} = 0</msg>
<msg timestamp="20230912 10:15:39.877" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230912 10:15:39.872" endtime="20230912 10:15:39.877"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230912 10:15:39.878" level="INFO"/>
<status status="PASS" starttime="20230912 10:15:39.878" endtime="20230912 10:15:39.878"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230912 10:15:39.879" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230912 10:15:39.878" endtime="20230912 10:15:39.879"/>
</kw>
<status status="PASS" starttime="20230912 10:15:39.871" endtime="20230912 10:15:39.879"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230912 10:15:39.884" level="INFO">Running command 'ozone sh key put /rootca2-volume/rootca2-bucket/rootca2-key /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230912 10:15:47.920" level="INFO">${rc} = 0</msg>
<msg timestamp="20230912 10:15:47.920" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230912 10:15:39.881" endtime="20230912 10:15:47.920"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230912 10:15:47.922" level="INFO"/>
<status status="PASS" starttime="20230912 10:15:47.921" endtime="20230912 10:15:47.922"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230912 10:15:47.922" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230912 10:15:47.922" endtime="20230912 10:15:47.923"/>
</kw>
<status status="PASS" starttime="20230912 10:15:39.880" endtime="20230912 10:15:47.923"/>
</kw>
<msg timestamp="20230912 10:15:47.923" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230912 10:15:39.880" endtime="20230912 10:15:47.923"/>
</kw>
<msg timestamp="20230912 10:15:47.923" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230912 10:15:39.879" endtime="20230912 10:15:47.923"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230912 10:15:47.923" endtime="20230912 10:15:47.924"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230912 10:15:47.927" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230912 10:15:47.930" level="INFO">${rc} = 0</msg>
<msg timestamp="20230912 10:15:47.930" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230912 10:15:47.924" endtime="20230912 10:15:47.930"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230912 10:15:47.931" level="INFO"/>
<status status="PASS" starttime="20230912 10:15:47.930" endtime="20230912 10:15:47.931"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230912 10:15:47.932" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230912 10:15:47.931" endtime="20230912 10:15:47.932"/>
</kw>
<status status="PASS" starttime="20230912 10:15:47.924" endtime="20230912 10:15:47.932"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230912 10:15:39.871" endtime="20230912 10:15:47.932"/>
</test>
<test id="s1-s3-t3" name="Read data from previously created key" line="40">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230912 10:15:47.935" level="INFO">${random} = 39636</msg>
<status status="PASS" starttime="20230912 10:15:47.934" endtime="20230912 10:15:47.935"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230912 10:15:47.939" level="INFO">Running command 'ozone sh key get /rootca2-volume/rootca2-bucket/rootca2-key /tmp/key-39636 2&gt;&amp;1'.</msg>
<msg timestamp="20230912 10:15:56.792" level="INFO">${rc} = 0</msg>
<msg timestamp="20230912 10:15:56.792" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230912 10:15:47.936" endtime="20230912 10:15:56.792"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230912 10:15:56.793" level="INFO"/>
<status status="PASS" starttime="20230912 10:15:56.793" endtime="20230912 10:15:56.793"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230912 10:15:56.794" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230912 10:15:56.794" endtime="20230912 10:15:56.794"/>
</kw>
<status status="PASS" starttime="20230912 10:15:47.936" endtime="20230912 10:15:56.794"/>
</kw>
<msg timestamp="20230912 10:15:56.794" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230912 10:15:47.935" endtime="20230912 10:15:56.795"/>
</kw>
<msg timestamp="20230912 10:15:56.795" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230912 10:15:47.935" endtime="20230912 10:15:56.795"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230912 10:15:56.795" endtime="20230912 10:15:56.795"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230912 10:15:56.799" level="INFO">Running command 'cat /tmp/key-39636 2&gt;&amp;1'.</msg>
<msg timestamp="20230912 10:15:56.802" level="INFO">${rc} = 0</msg>
<msg timestamp="20230912 10:15:56.802" level="INFO">${output} = rootca2: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230912 10:15:56.796" endtime="20230912 10:15:56.802"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230912 10:15:56.803" level="INFO">rootca2: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230912 10:15:56.802" endtime="20230912 10:15:56.803"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230912 10:15:56.803" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230912 10:15:56.803" endtime="20230912 10:15:56.803"/>
</kw>
<msg timestamp="20230912 10:15:56.804" level="INFO">${output} = rootca2: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230912 10:15:56.795" endtime="20230912 10:15:56.804"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230912 10:15:56.804" endtime="20230912 10:15:56.804"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230912 10:15:56.810" level="INFO">Running command 'rm /tmp/key-39636 2&gt;&amp;1'.</msg>
<msg timestamp="20230912 10:15:56.813" level="INFO">${rc} = 0</msg>
<msg timestamp="20230912 10:15:56.813" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230912 10:15:56.805" endtime="20230912 10:15:56.813"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230912 10:15:56.814" level="INFO"/>
<status status="PASS" starttime="20230912 10:15:56.814" endtime="20230912 10:15:56.815"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230912 10:15:56.815" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230912 10:15:56.815" endtime="20230912 10:15:56.815"/>
</kw>
<status status="PASS" starttime="20230912 10:15:56.805" endtime="20230912 10:15:56.816"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230912 10:15:47.933" endtime="20230912 10:15:56.816"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20230912 10:15:27.837" endtime="20230912 10:15:56.818"/>
</suite>
<suite id="s1-s4" name="Root-Ca-Rotation" source="/opt/hadoop/smoketest/scmha/root-ca-rotation.robot">
<test id="s1-s4-t1" name="Verify root CA rotation metrics" line="26">
<kw name="Execute" library="os">
<var>${successRotationLine}</var>
<arg>curl -sS 'http://localhost:9876/jmx' | grep NumSuccessRotation</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230912 10:16:00.233" level="INFO">Running command 'curl -sS 'http://localhost:9876/jmx' | grep NumSuccessRotation 2&gt;&amp;1'.</msg>
<msg timestamp="20230912 10:16:00.807" level="INFO">${rc} = 0</msg>
<msg timestamp="20230912 10:16:00.807" level="INFO">${output} =     "NumSuccessRotation" : 2,</msg>
<status status="PASS" starttime="20230912 10:16:00.230" endtime="20230912 10:16:00.807"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230912 10:16:00.809" level="INFO">    "NumSuccessRotation" : 2,</msg>
<status status="PASS" starttime="20230912 10:16:00.808" endtime="20230912 10:16:00.809"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230912 10:16:00.809" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230912 10:16:00.809" endtime="20230912 10:16:00.810"/>
</kw>
<status status="PASS" starttime="20230912 10:16:00.230" endtime="20230912 10:16:00.810"/>
</kw>
<msg timestamp="20230912 10:16:00.810" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230912 10:16:00.229" endtime="20230912 10:16:00.810"/>
</kw>
<msg timestamp="20230912 10:16:00.810" level="INFO">${successRotationLine} =     "NumSuccessRotation" : 2,</msg>
<status status="PASS" starttime="20230912 10:16:00.229" endtime="20230912 10:16:00.810"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${successRotationLine}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230912 10:16:00.811" level="INFO">    "NumSuccessRotation" : 2,</msg>
<status status="PASS" starttime="20230912 10:16:00.810" endtime="20230912 10:16:00.811"/>
</kw>
<kw name="Split String" library="String">
<var>${temp_1}</var>
<arg>${successRotationLine}</arg>
<arg>:</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20230912 10:16:00.812" level="INFO">${temp_1} = ['    "NumSuccessRotation" ', ' 2,']</msg>
<status status="PASS" starttime="20230912 10:16:00.811" endtime="20230912 10:16:00.812"/>
</kw>
<kw name="Strip String" library="String">
<var>${temp_2}</var>
<arg>${temp_1[1]}</arg>
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<msg timestamp="20230912 10:16:00.813" level="INFO">${temp_2} = 2,</msg>
<status status="PASS" starttime="20230912 10:16:00.812" endtime="20230912 10:16:00.813"/>
</kw>
<kw name="Split String" library="String">
<var>${temp_3}</var>
<arg>${temp_2}</arg>
<arg>,</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20230912 10:16:00.815" level="INFO">${temp_3} = ['2', '']</msg>
<status status="PASS" starttime="20230912 10:16:00.813" endtime="20230912 10:16:00.815"/>
</kw>
<kw name="Strip String" library="String">
<var>${successRotation}</var>
<arg>${temp_3[0]}</arg>
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<msg timestamp="20230912 10:16:00.819" level="INFO">${successRotation} = 2</msg>
<status status="PASS" starttime="20230912 10:16:00.816" endtime="20230912 10:16:00.819"/>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<var>${successRotation}</var>
<arg>${successRotation}</arg>
<doc>Converts the given item to a floating point number.</doc>
<msg timestamp="20230912 10:16:00.820" level="INFO">${successRotation} = 2.0</msg>
<status status="PASS" starttime="20230912 10:16:00.819" endtime="20230912 10:16:00.820"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${successRotation} &gt;= 1</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230912 10:16:00.820" endtime="20230912 10:16:00.821"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230912 10:16:00.228" endtime="20230912 10:16:00.821"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20230912 10:16:00.177" endtime="20230912 10:16:00.823"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="62636"/>
</suite>
<statistics>
<total>
<stat pass="8" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="2" fail="0" skip="0">create-volume-and-bucket</stat>
</tag>
<suite>
<stat pass="8" fail="0" skip="0" id="s1" name="ozonesecure-root-ca-rotation">ozonesecure-root-ca-rotation</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1" name="Kinit">ozonesecure-root-ca-rotation.Kinit</stat>
<stat pass="3" fail="0" skip="0" id="s1-s2" name="Root-Ca-Rotation-Client-Checks">ozonesecure-root-ca-rotation.Root-Ca-Rotation-Client-Checks</stat>
<stat pass="3" fail="0" skip="0" id="s1-s3" name="Root-Ca-Rotation-Client-Checks">ozonesecure-root-ca-rotation.Root-Ca-Rotation-Client-Checks</stat>
<stat pass="1" fail="0" skip="0" id="s1-s4" name="Root-Ca-Rotation">ozonesecure-root-ca-rotation.Root-Ca-Rotation</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
