<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 6.1.1 (Python 3.8.10 on linux)" generated="20230912 10:06:13.685" rpa="false" schemaversion="4">
<suite id="s1" name="ozone-om-prepare">
<suite id="s1-s1" name="Om-Prepare" source="/opt/hadoop/smoketest/omha/om-prepare.robot">
<kw name="Create Specific OM data for prepare" type="SETUP">
<kw name="Freon OCKG" library="freon">
<arg>prefix=om-prepare</arg>
<arg>n=100</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230912 09:59:50.604" level="INFO">Running command 'ozone freon ockg --om-service-id=omservice -t 1 -n100 -p om-prepare  2&gt;&amp;1'.</msg>
<msg timestamp="20230912 10:00:08.465" level="INFO">${rc} = 0</msg>
<msg timestamp="20230912 10:00:08.465" level="INFO">${output} = 2023-09-12 09:59:52,693 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-12 09:59:52,864 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230912 09:59:50.602" endtime="20230912 10:00:08.465"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230912 10:00:08.467" level="INFO">2023-09-12 09:59:52,693 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-12 09:59:52,864 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-09-12 09:59:52,864 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-09-12 09:59:52,945 [main] INFO freon.BaseFreonGenerator: Executing test with prefix om-prepare and number-of-tests 100
2023-09-12 09:59:53,002 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2023-09-12 09:59:53,933 [main] INFO rpc.RpcClient: Creating Volume: vol1, with hadoop as owner and space quota set to -1 bytes, counts quota set to -1
2023-09-12 09:59:54,003 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2023-09-12 09:59:54,164 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Encryption set to false, Replication Type set to server-side default replication type, Namespace Quota set to -1, Space Quota set to -1 
2023-09-12 09:59:55,003 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2023-09-12 09:59:55,624 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2023-09-12 09:59:56,005 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2023-09-12 09:59:56,021 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2023-09-12 09:59:57,006 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2023-09-12 09:59:58,006 [Thread-3] INFO freon.ProgressBar: Progress: 3.00 % (3 out of 100)
2023-09-12 09:59:59,007 [Thread-3] INFO freon.ProgressBar: Progress: 7.00 % (7 out of 100)
2023-09-12 10:00:00,008 [Thread-3] INFO freon.ProgressBar: Progress: 16.00 % (16 out of 100)
2023-09-12 10:00:01,008 [Thread-3] INFO freon.ProgressBar: Progress: 25.00 % (25 out of 100)
2023-09-12 10:00:02,011 [Thread-3] INFO freon.ProgressBar: Progress: 35.00 % (35 out of 100)
2023-09-12 10:00:03,012 [Thread-3] INFO freon.ProgressBar: Progress: 47.00 % (47 out of 100)
2023-09-12 10:00:04,012 [Thread-3] INFO freon.ProgressBar: Progress: 58.00 % (58 out of 100)
2023-09-12 10:00:05,013 [Thread-3] INFO freon.ProgressBar: Progress: 70.00 % (70 out of 100)
2023-09-12 10:00:06,013 [Thread-3] INFO freon.ProgressBar: Progress: 84.00 % (84 out of 100)
2023-09-12 10:00:07,014 [Thread-3] INFO freon.ProgressBar: Progress: 97.00 % (97 out of 100)
2023-09-12 10:00:08,014 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (100 out of 100)
2023-09-12 10:00:08,099 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=100, min=54.532449, max=3006.198872, mean=124.87136523654914, stddev=284.899397866263, median=83.009228, p75=101.434958, p95=167.58833, p98=381.994064, p99=637.236831, p999=3006.198872, mean_rate=7.242220225887318, m1=2.4876180341878196, m5=1.9421454971340895, m15=1.8476453071578882, rate_unit=events/second, duration_unit=milliseconds
2023-09-12 10:00:08,099 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 15
2023-09-12 10:00:08,099 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-09-12 10:00:08,099 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 100</msg>
<status status="PASS" starttime="20230912 10:00:08.466" endtime="20230912 10:00:08.467"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230912 10:00:08.467" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230912 10:00:08.467" endtime="20230912 10:00:08.467"/>
</kw>
<status status="PASS" starttime="20230912 09:59:50.601" endtime="20230912 10:00:08.468"/>
</kw>
<msg timestamp="20230912 10:00:08.468" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230912 09:59:50.601" endtime="20230912 10:00:08.468"/>
</kw>
<msg timestamp="20230912 10:00:08.468" level="INFO">${result} = 2023-09-12 09:59:52,693 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-12 09:59:52,864 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230912 09:59:50.600" endtime="20230912 10:00:08.468"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230912 10:00:08.468" endtime="20230912 10:00:08.469"/>
</kw>
<status status="PASS" starttime="20230912 09:59:50.599" endtime="20230912 10:00:08.469"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230912 10:00:08.470" level="INFO">${random} = 71716</msg>
<status status="PASS" starttime="20230912 10:00:08.469" endtime="20230912 10:00:08.470"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${volume_name}</arg>
<arg>${random}-volume-for-prepare</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230912 10:00:08.471" level="INFO">${volume_name} = 71716-volume-for-prepare</msg>
<status status="PASS" starttime="20230912 10:00:08.470" endtime="20230912 10:00:08.471"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${bucket_name}</arg>
<arg>${random}-bucket-for-prepare</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230912 10:00:08.473" level="INFO">${bucket_name} = 71716-bucket-for-prepare</msg>
<status status="PASS" starttime="20230912 10:00:08.471" endtime="20230912 10:00:08.473"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create /${volume_name}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230912 10:00:08.477" level="INFO">Running command 'ozone sh volume create /71716-volume-for-prepare 2&gt;&amp;1'.</msg>
<msg timestamp="20230912 10:00:11.847" level="INFO">${rc} = 0</msg>
<msg timestamp="20230912 10:00:11.847" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230912 10:00:08.474" endtime="20230912 10:00:11.847"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230912 10:00:11.848" level="INFO"/>
<status status="PASS" starttime="20230912 10:00:11.848" endtime="20230912 10:00:11.848"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230912 10:00:11.849" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230912 10:00:11.849" endtime="20230912 10:00:11.849"/>
</kw>
<status status="PASS" starttime="20230912 10:00:08.474" endtime="20230912 10:00:11.849"/>
</kw>
<msg timestamp="20230912 10:00:11.849" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230912 10:00:08.473" endtime="20230912 10:00:11.850"/>
</kw>
<status status="PASS" starttime="20230912 10:00:08.473" endtime="20230912 10:00:11.850"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create /${volume_name}/${bucket_name}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230912 10:00:11.855" level="INFO">Running command 'ozone sh bucket create /71716-volume-for-prepare/71716-bucket-for-prepare 2&gt;&amp;1'.</msg>
<msg timestamp="20230912 10:00:15.470" level="INFO">${rc} = 0</msg>
<msg timestamp="20230912 10:00:15.470" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230912 10:00:11.851" endtime="20230912 10:00:15.470"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230912 10:00:15.471" level="INFO"/>
<status status="PASS" starttime="20230912 10:00:15.471" endtime="20230912 10:00:15.471"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230912 10:00:15.472" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230912 10:00:15.472" endtime="20230912 10:00:15.472"/>
</kw>
<status status="PASS" starttime="20230912 10:00:11.851" endtime="20230912 10:00:15.472"/>
</kw>
<msg timestamp="20230912 10:00:15.473" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230912 10:00:11.850" endtime="20230912 10:00:15.473"/>
</kw>
<status status="PASS" starttime="20230912 10:00:11.850" endtime="20230912 10:00:15.473"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put /${volume_name}/${bucket_name}/prepare-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230912 10:00:15.477" level="INFO">Running command 'ozone sh key put /71716-volume-for-prepare/71716-bucket-for-prepare/prepare-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230912 10:00:21.412" level="INFO">${rc} = 0</msg>
<msg timestamp="20230912 10:00:21.413" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230912 10:00:15.474" endtime="20230912 10:00:21.413"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230912 10:00:21.414" level="INFO"/>
<status status="PASS" starttime="20230912 10:00:21.413" endtime="20230912 10:00:21.414"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230912 10:00:21.414" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230912 10:00:21.414" endtime="20230912 10:00:21.414"/>
</kw>
<status status="PASS" starttime="20230912 10:00:15.474" endtime="20230912 10:00:21.415"/>
</kw>
<msg timestamp="20230912 10:00:21.415" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230912 10:00:15.474" endtime="20230912 10:00:21.415"/>
</kw>
<status status="PASS" starttime="20230912 10:00:15.473" endtime="20230912 10:00:21.415"/>
</kw>
<status status="PASS" starttime="20230912 09:59:50.598" endtime="20230912 10:00:21.415"/>
</kw>
<test id="s1-s1-t1" name="Prepare Ozone Manager" line="39">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230912 10:00:21.417" endtime="20230912 10:00:21.417"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om prepare -id=omservice</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230912 10:00:21.422" level="INFO">Running command 'ozone admin om prepare -id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20230912 10:00:30.362" level="INFO">${rc} = 0</msg>
<msg timestamp="20230912 10:00:30.362" level="INFO">${output} = Ozone Manager Prepare Request successfully returned with Transaction Id : [413].

Checking individual OM instances for prepare request completion...
OM : [om1], Prepare Status : [PREPARE_COMPLETED], C...</msg>
<status status="PASS" starttime="20230912 10:00:21.419" endtime="20230912 10:00:30.362"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230912 10:00:30.363" level="INFO">Ozone Manager Prepare Request successfully returned with Transaction Id : [413].

Checking individual OM instances for prepare request completion...
OM : [om1], Prepare Status : [PREPARE_COMPLETED], Current Transaction Id : [413]
OM : [om3], Prepare Status : [PREPARE_COMPLETED], Current Transaction Id : [413]
OM : [om2], Prepare Status : [PREPARE_COMPLETED], Current Transaction Id : [413]

OM Preparation successful! 
All OMs are prepared
No new write requests will be allowed until preparation is cancelled or upgrade/downgrade is done.</msg>
<status status="PASS" starttime="20230912 10:00:30.363" endtime="20230912 10:00:30.364"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230912 10:00:30.364" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230912 10:00:30.364" endtime="20230912 10:00:30.365"/>
</kw>
<status status="PASS" starttime="20230912 10:00:21.418" endtime="20230912 10:00:30.365"/>
</kw>
<msg timestamp="20230912 10:00:30.365" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230912 10:00:21.418" endtime="20230912 10:00:30.365"/>
</kw>
<msg timestamp="20230912 10:00:30.365" level="INFO">${result} = Ozone Manager Prepare Request successfully returned with Transaction Id : [413].

Checking individual OM instances for prepare request completion...
OM : [om1], Prepare Status : [PREPARE_COMPLETED], C...</msg>
<status status="PASS" starttime="20230912 10:00:21.417" endtime="20230912 10:00:30.365"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>OM Preparation successful!</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>OM Preparation successful!</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230912 10:00:30.366" endtime="20230912 10:00:30.366"/>
</kw>
<status status="PASS" starttime="20230912 10:00:30.365" endtime="20230912 10:00:30.366"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230912 10:00:21.415" endtime="20230912 10:00:30.367"/>
</test>
<test id="s1-s1-t2" name="Checks if the expected data is present in OM" line="43">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230912 10:00:30.369" endtime="20230912 10:00:30.369"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info /${volume_name}/${bucket_name}/prepare-key</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230912 10:00:30.374" level="INFO">Running command 'ozone sh key info /71716-volume-for-prepare/71716-bucket-for-prepare/prepare-key 2&gt;&amp;1'.</msg>
<msg timestamp="20230912 10:00:34.731" level="INFO">${rc} = 0</msg>
<msg timestamp="20230912 10:00:34.731" level="INFO">${output} = {
  "volumeName" : "71716-volume-for-prepare",
  "bucketName" : "71716-bucket-for-prepare",
  "name" : "prepare-key",
  "dataSize" : 17289,
  "creationTime" : "2023-09-12T10:00:19.058Z",
  "modificati...</msg>
<status status="PASS" starttime="20230912 10:00:30.371" endtime="20230912 10:00:34.731"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230912 10:00:34.733" level="INFO">{
  "volumeName" : "71716-volume-for-prepare",
  "bucketName" : "71716-bucket-for-prepare",
  "name" : "prepare-key",
  "dataSize" : 17289,
  "creationTime" : "2023-09-12T10:00:19.058Z",
  "modificationTime" : "2023-09-12T10:00:21.015Z",
  "replicationConfig" : {
    "replicationFactor" : "ONE",
    "requiredNodes" : 1,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "ozoneKeyLocations" : [ {
    "containerID" : 2,
    "localID" : 111677748019200101,
    "length" : 17289,
    "offset" : 0,
    "keyOffset" : 0
  } ],
  "file" : true
}</msg>
<status status="PASS" starttime="20230912 10:00:34.732" endtime="20230912 10:00:34.733"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230912 10:00:34.734" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230912 10:00:34.733" endtime="20230912 10:00:34.734"/>
</kw>
<status status="PASS" starttime="20230912 10:00:30.370" endtime="20230912 10:00:34.734"/>
</kw>
<msg timestamp="20230912 10:00:34.734" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230912 10:00:30.370" endtime="20230912 10:00:34.734"/>
</kw>
<msg timestamp="20230912 10:00:34.734" level="INFO">${result} = {
  "volumeName" : "71716-volume-for-prepare",
  "bucketName" : "71716-bucket-for-prepare",
  "name" : "prepare-key",
  "dataSize" : 17289,
  "creationTime" : "2023-09-12T10:00:19.058Z",
  "modificati...</msg>
<status status="PASS" starttime="20230912 10:00:30.369" endtime="20230912 10:00:34.734"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"name\" : \"prepare-key\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230912 10:00:34.734" endtime="20230912 10:00:34.735"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230912 10:00:30.368" endtime="20230912 10:00:34.735"/>
</test>
<test id="s1-s1-t3" name="Test write operation fails" line="47">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230912 10:00:34.737" endtime="20230912 10:00:34.737"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh key put /${volume_name}/${bucket_name}/prepare-key2 /opt/hadoop/NOTICE.txt</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230912 10:00:34.741" level="INFO">Running command 'ozone sh key put /71716-volume-for-prepare/71716-bucket-for-prepare/prepare-key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230912 10:00:38.068" level="INFO">${rc} = 255</msg>
<msg timestamp="20230912 10:00:38.068" level="INFO">${output} = NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateKey when OM is in prepare mode.</msg>
<status status="PASS" starttime="20230912 10:00:34.738" endtime="20230912 10:00:38.068"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230912 10:00:38.070" level="INFO">NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateKey when OM is in prepare mode.</msg>
<status status="PASS" starttime="20230912 10:00:38.069" endtime="20230912 10:00:38.070"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230912 10:00:38.070" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230912 10:00:38.070" endtime="20230912 10:00:38.070"/>
</kw>
<msg timestamp="20230912 10:00:38.071" level="INFO">${result} = NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateKey when OM is in prepare mode.</msg>
<status status="PASS" starttime="20230912 10:00:34.737" endtime="20230912 10:00:38.071"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>OM is in prepare mode</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230912 10:00:38.071" endtime="20230912 10:00:38.072"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>ozone sh key info /${volume_name}/${bucket_name}/prepare-key2</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230912 10:00:38.075" level="INFO">Running command 'ozone sh key info /71716-volume-for-prepare/71716-bucket-for-prepare/prepare-key2 2&gt;&amp;1'.</msg>
<msg timestamp="20230912 10:00:41.338" level="INFO">${rc} = 255</msg>
<msg timestamp="20230912 10:00:41.338" level="INFO">${output} = KEY_NOT_FOUND Key:prepare-key2 not found</msg>
<status status="PASS" starttime="20230912 10:00:38.073" endtime="20230912 10:00:41.338"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230912 10:00:41.340" level="INFO">KEY_NOT_FOUND Key:prepare-key2 not found</msg>
<status status="PASS" starttime="20230912 10:00:41.339" endtime="20230912 10:00:41.340"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230912 10:00:41.340" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230912 10:00:41.340" endtime="20230912 10:00:41.340"/>
</kw>
<status status="PASS" starttime="20230912 10:00:38.072" endtime="20230912 10:00:41.341"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230912 10:00:34.736" endtime="20230912 10:00:41.341"/>
</test>
<doc>Smoke test to test preparing OMs in an OM HA cluster.</doc>
<status status="PASS" starttime="20230912 09:59:50.533" endtime="20230912 10:00:41.343"/>
</suite>
<suite id="s1-s2" name="Om-Cancel-Prepare" source="/opt/hadoop/smoketest/omha/om-cancel-prepare.robot">
<kw name="Generate volume and bucket names" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230912 10:00:44.305" level="INFO">${random} = 17082</msg>
<status status="PASS" starttime="20230912 10:00:44.305" endtime="20230912 10:00:44.305"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${volume_name}</arg>
<arg>${random}-volume-for-cancel</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230912 10:00:44.307" level="INFO">${volume_name} = 17082-volume-for-cancel</msg>
<status status="PASS" starttime="20230912 10:00:44.306" endtime="20230912 10:00:44.308"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${bucket_name}</arg>
<arg>${random}-bucket-for-cancel</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230912 10:00:44.309" level="INFO">${bucket_name} = 17082-bucket-for-cancel</msg>
<status status="PASS" starttime="20230912 10:00:44.308" endtime="20230912 10:00:44.309"/>
</kw>
<status status="PASS" starttime="20230912 10:00:44.304" endtime="20230912 10:00:44.309"/>
</kw>
<test id="s1-s2-t1" name="Cancel Ozone Manager Prepare" line="33">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230912 10:00:44.310" endtime="20230912 10:00:44.311"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om cancelprepare -id=omservice</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230912 10:00:44.315" level="INFO">Running command 'ozone admin om cancelprepare -id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20230912 10:00:48.123" level="INFO">${rc} = 0</msg>
<msg timestamp="20230912 10:00:48.123" level="INFO">${output} = Cancel prepare succeeded, cluster can now accept write requests.</msg>
<status status="PASS" starttime="20230912 10:00:44.312" endtime="20230912 10:00:48.123"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230912 10:00:48.124" level="INFO">Cancel prepare succeeded, cluster can now accept write requests.</msg>
<status status="PASS" starttime="20230912 10:00:48.123" endtime="20230912 10:00:48.124"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230912 10:00:48.125" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230912 10:00:48.124" endtime="20230912 10:00:48.125"/>
</kw>
<status status="PASS" starttime="20230912 10:00:44.312" endtime="20230912 10:00:48.125"/>
</kw>
<msg timestamp="20230912 10:00:48.125" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230912 10:00:44.311" endtime="20230912 10:00:48.125"/>
</kw>
<msg timestamp="20230912 10:00:48.125" level="INFO">${result} = Cancel prepare succeeded, cluster can now accept write requests.</msg>
<status status="PASS" starttime="20230912 10:00:44.311" endtime="20230912 10:00:48.125"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>5sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Cancel prepare succeeded</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Cancel prepare succeeded</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230912 10:00:48.126" endtime="20230912 10:00:48.127"/>
</kw>
<status status="PASS" starttime="20230912 10:00:48.126" endtime="20230912 10:00:48.127"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230912 10:00:44.309" endtime="20230912 10:00:48.127"/>
</test>
<test id="s1-s2-t2" name="Test write operations" line="37">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230912 10:00:48.129" endtime="20230912 10:00:48.129"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create /${volume_name}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230912 10:00:48.133" level="INFO">Running command 'ozone sh volume create /17082-volume-for-cancel 2&gt;&amp;1'.</msg>
<msg timestamp="20230912 10:00:51.166" level="INFO">${rc} = 0</msg>
<msg timestamp="20230912 10:00:51.167" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230912 10:00:48.131" endtime="20230912 10:00:51.167"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230912 10:00:51.169" level="INFO"/>
<status status="PASS" starttime="20230912 10:00:51.167" endtime="20230912 10:00:51.170"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230912 10:00:51.171" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230912 10:00:51.170" endtime="20230912 10:00:51.171"/>
</kw>
<status status="PASS" starttime="20230912 10:00:48.130" endtime="20230912 10:00:51.171"/>
</kw>
<msg timestamp="20230912 10:00:51.171" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230912 10:00:48.130" endtime="20230912 10:00:51.171"/>
</kw>
<status status="PASS" starttime="20230912 10:00:48.129" endtime="20230912 10:00:51.172"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create /${volume_name}/${bucket_name}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230912 10:00:51.192" level="INFO">Running command 'ozone sh bucket create /17082-volume-for-cancel/17082-bucket-for-cancel 2&gt;&amp;1'.</msg>
<msg timestamp="20230912 10:00:54.587" level="INFO">${rc} = 0</msg>
<msg timestamp="20230912 10:00:54.587" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230912 10:00:51.176" endtime="20230912 10:00:54.588"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230912 10:00:54.589" level="INFO"/>
<status status="PASS" starttime="20230912 10:00:54.588" endtime="20230912 10:00:54.589"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230912 10:00:54.590" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230912 10:00:54.589" endtime="20230912 10:00:54.590"/>
</kw>
<status status="PASS" starttime="20230912 10:00:51.174" endtime="20230912 10:00:54.590"/>
</kw>
<msg timestamp="20230912 10:00:54.590" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230912 10:00:51.174" endtime="20230912 10:00:54.590"/>
</kw>
<status status="PASS" starttime="20230912 10:00:51.172" endtime="20230912 10:00:54.590"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key put /${volume_name}/${bucket_name}/cancel-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230912 10:00:54.595" level="INFO">Running command 'ozone sh key put /17082-volume-for-cancel/17082-bucket-for-cancel/cancel-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230912 10:00:59.995" level="INFO">${rc} = 0</msg>
<msg timestamp="20230912 10:00:59.995" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230912 10:00:54.592" endtime="20230912 10:00:59.995"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230912 10:00:59.996" level="INFO"/>
<status status="PASS" starttime="20230912 10:00:59.996" endtime="20230912 10:00:59.997"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230912 10:00:59.997" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230912 10:00:59.997" endtime="20230912 10:00:59.997"/>
</kw>
<status status="PASS" starttime="20230912 10:00:54.592" endtime="20230912 10:00:59.998"/>
</kw>
<msg timestamp="20230912 10:00:59.998" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230912 10:00:54.591" endtime="20230912 10:00:59.998"/>
</kw>
<msg timestamp="20230912 10:00:59.998" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230912 10:00:54.590" endtime="20230912 10:00:59.998"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info /${volume_name}/${bucket_name}/cancel-key</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230912 10:01:00.002" level="INFO">Running command 'ozone sh key info /17082-volume-for-cancel/17082-bucket-for-cancel/cancel-key 2&gt;&amp;1'.</msg>
<msg timestamp="20230912 10:01:03.678" level="INFO">${rc} = 0</msg>
<msg timestamp="20230912 10:01:03.678" level="INFO">${output} = {
  "volumeName" : "17082-volume-for-cancel",
  "bucketName" : "17082-bucket-for-cancel",
  "name" : "cancel-key",
  "dataSize" : 17289,
  "creationTime" : "2023-09-12T10:00:57.794Z",
  "modificationT...</msg>
<status status="PASS" starttime="20230912 10:01:00.000" endtime="20230912 10:01:03.678"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230912 10:01:03.679" level="INFO">{
  "volumeName" : "17082-volume-for-cancel",
  "bucketName" : "17082-bucket-for-cancel",
  "name" : "cancel-key",
  "dataSize" : 17289,
  "creationTime" : "2023-09-12T10:00:57.794Z",
  "modificationTime" : "2023-09-12T10:00:59.606Z",
  "replicationConfig" : {
    "replicationFactor" : "ONE",
    "requiredNodes" : 1,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "ozoneKeyLocations" : [ {
    "containerID" : 4,
    "localID" : 111677748019200103,
    "length" : 17289,
    "offset" : 0,
    "keyOffset" : 0
  } ],
  "file" : true
}</msg>
<status status="PASS" starttime="20230912 10:01:03.678" endtime="20230912 10:01:03.679"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230912 10:01:03.680" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230912 10:01:03.679" endtime="20230912 10:01:03.680"/>
</kw>
<status status="PASS" starttime="20230912 10:00:59.999" endtime="20230912 10:01:03.680"/>
</kw>
<msg timestamp="20230912 10:01:03.680" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230912 10:00:59.999" endtime="20230912 10:01:03.681"/>
</kw>
<msg timestamp="20230912 10:01:03.681" level="INFO">${result} = {
  "volumeName" : "17082-volume-for-cancel",
  "bucketName" : "17082-bucket-for-cancel",
  "name" : "cancel-key",
  "dataSize" : 17289,
  "creationTime" : "2023-09-12T10:00:57.794Z",
  "modificationT...</msg>
<status status="PASS" starttime="20230912 10:00:59.998" endtime="20230912 10:01:03.681"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"name\" : \"cancel-key\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230912 10:01:03.681" endtime="20230912 10:01:03.681"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230912 10:00:48.128" endtime="20230912 10:01:03.682"/>
</test>
<doc>Smoke test for ozone manager cancel prepare</doc>
<status status="PASS" starttime="20230912 10:00:44.211" endtime="20230912 10:01:03.684"/>
</suite>
<suite id="s1-s3" name="Om-Prepare" source="/opt/hadoop/smoketest/omha/om-prepare.robot">
<kw name="Create Specific OM data for prepare" type="SETUP">
<kw name="Freon OCKG" library="freon">
<arg>prefix=om-prepare</arg>
<arg>n=100</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230912 10:01:06.728" level="INFO">Running command 'ozone freon ockg --om-service-id=omservice -t 1 -n100 -p om-prepare  2&gt;&amp;1'.</msg>
<msg timestamp="20230912 10:01:20.131" level="INFO">${rc} = 0</msg>
<msg timestamp="20230912 10:01:20.131" level="INFO">${output} = 2023-09-12 10:01:08,593 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-12 10:01:08,731 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230912 10:01:06.725" endtime="20230912 10:01:20.131"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230912 10:01:20.133" level="INFO">2023-09-12 10:01:08,593 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-12 10:01:08,731 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-09-12 10:01:08,731 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-09-12 10:01:08,820 [main] INFO freon.BaseFreonGenerator: Executing test with prefix om-prepare and number-of-tests 100
2023-09-12 10:01:08,892 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2023-09-12 10:01:09,896 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2023-09-12 10:01:10,400 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2023-09-12 10:01:10,697 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2023-09-12 10:01:10,896 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2023-09-12 10:01:11,901 [Thread-3] INFO freon.ProgressBar: Progress: 4.00 % (4 out of 100)
2023-09-12 10:01:12,922 [Thread-3] INFO freon.ProgressBar: Progress: 16.00 % (16 out of 100)
2023-09-12 10:01:13,924 [Thread-3] INFO freon.ProgressBar: Progress: 29.00 % (29 out of 100)
2023-09-12 10:01:14,935 [Thread-3] INFO freon.ProgressBar: Progress: 42.00 % (42 out of 100)
2023-09-12 10:01:15,936 [Thread-3] INFO freon.ProgressBar: Progress: 56.00 % (56 out of 100)
2023-09-12 10:01:16,936 [Thread-3] INFO freon.ProgressBar: Progress: 72.00 % (72 out of 100)
2023-09-12 10:01:17,937 [Thread-3] INFO freon.ProgressBar: Progress: 86.00 % (86 out of 100)
2023-09-12 10:01:18,937 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (100 out of 100)
2023-09-12 10:01:19,782 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=100, min=50.282048, max=1839.76824, mean=89.6651963985851, stddev=171.707445438894, median=69.424614, p75=82.000466, p95=112.036627, p98=130.005233, p99=152.050522, p999=1839.76824, mean_rate=9.939703764056627, m1=8.151804575630978, m5=7.8727256031848825, m15=7.824376668778456, rate_unit=events/second, duration_unit=milliseconds
2023-09-12 10:01:19,782 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 11
2023-09-12 10:01:19,783 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-09-12 10:01:19,783 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 100</msg>
<status status="PASS" starttime="20230912 10:01:20.132" endtime="20230912 10:01:20.133"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230912 10:01:20.133" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230912 10:01:20.133" endtime="20230912 10:01:20.133"/>
</kw>
<status status="PASS" starttime="20230912 10:01:06.725" endtime="20230912 10:01:20.134"/>
</kw>
<msg timestamp="20230912 10:01:20.134" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230912 10:01:06.724" endtime="20230912 10:01:20.134"/>
</kw>
<msg timestamp="20230912 10:01:20.134" level="INFO">${result} = 2023-09-12 10:01:08,593 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-12 10:01:08,731 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230912 10:01:06.724" endtime="20230912 10:01:20.134"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230912 10:01:20.134" endtime="20230912 10:01:20.135"/>
</kw>
<status status="PASS" starttime="20230912 10:01:06.722" endtime="20230912 10:01:20.135"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230912 10:01:20.136" level="INFO">${random} = 95231</msg>
<status status="PASS" starttime="20230912 10:01:20.135" endtime="20230912 10:01:20.136"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${volume_name}</arg>
<arg>${random}-volume-for-prepare</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230912 10:01:20.137" level="INFO">${volume_name} = 95231-volume-for-prepare</msg>
<status status="PASS" starttime="20230912 10:01:20.136" endtime="20230912 10:01:20.137"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${bucket_name}</arg>
<arg>${random}-bucket-for-prepare</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230912 10:01:20.139" level="INFO">${bucket_name} = 95231-bucket-for-prepare</msg>
<status status="PASS" starttime="20230912 10:01:20.138" endtime="20230912 10:01:20.139"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create /${volume_name}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230912 10:01:20.143" level="INFO">Running command 'ozone sh volume create /95231-volume-for-prepare 2&gt;&amp;1'.</msg>
<msg timestamp="20230912 10:01:23.379" level="INFO">${rc} = 0</msg>
<msg timestamp="20230912 10:01:23.379" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230912 10:01:20.141" endtime="20230912 10:01:23.379"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230912 10:01:23.380" level="INFO"/>
<status status="PASS" starttime="20230912 10:01:23.380" endtime="20230912 10:01:23.381"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230912 10:01:23.381" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230912 10:01:23.381" endtime="20230912 10:01:23.381"/>
</kw>
<status status="PASS" starttime="20230912 10:01:20.140" endtime="20230912 10:01:23.382"/>
</kw>
<msg timestamp="20230912 10:01:23.382" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230912 10:01:20.140" endtime="20230912 10:01:23.382"/>
</kw>
<status status="PASS" starttime="20230912 10:01:20.139" endtime="20230912 10:01:23.382"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create /${volume_name}/${bucket_name}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230912 10:01:23.387" level="INFO">Running command 'ozone sh bucket create /95231-volume-for-prepare/95231-bucket-for-prepare 2&gt;&amp;1'.</msg>
<msg timestamp="20230912 10:01:27.106" level="INFO">${rc} = 0</msg>
<msg timestamp="20230912 10:01:27.107" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230912 10:01:23.384" endtime="20230912 10:01:27.107"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230912 10:01:27.108" level="INFO"/>
<status status="PASS" starttime="20230912 10:01:27.107" endtime="20230912 10:01:27.108"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230912 10:01:27.109" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230912 10:01:27.108" endtime="20230912 10:01:27.109"/>
</kw>
<status status="PASS" starttime="20230912 10:01:23.383" endtime="20230912 10:01:27.109"/>
</kw>
<msg timestamp="20230912 10:01:27.109" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230912 10:01:23.383" endtime="20230912 10:01:27.109"/>
</kw>
<status status="PASS" starttime="20230912 10:01:23.382" endtime="20230912 10:01:27.109"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put /${volume_name}/${bucket_name}/prepare-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230912 10:01:27.114" level="INFO">Running command 'ozone sh key put /95231-volume-for-prepare/95231-bucket-for-prepare/prepare-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230912 10:01:32.786" level="INFO">${rc} = 0</msg>
<msg timestamp="20230912 10:01:32.786" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230912 10:01:27.111" endtime="20230912 10:01:32.786"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230912 10:01:32.788" level="INFO"/>
<status status="PASS" starttime="20230912 10:01:32.787" endtime="20230912 10:01:32.788"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230912 10:01:32.788" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230912 10:01:32.788" endtime="20230912 10:01:32.789"/>
</kw>
<status status="PASS" starttime="20230912 10:01:27.111" endtime="20230912 10:01:32.789"/>
</kw>
<msg timestamp="20230912 10:01:32.789" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230912 10:01:27.110" endtime="20230912 10:01:32.789"/>
</kw>
<status status="PASS" starttime="20230912 10:01:27.109" endtime="20230912 10:01:32.789"/>
</kw>
<status status="PASS" starttime="20230912 10:01:06.722" endtime="20230912 10:01:32.789"/>
</kw>
<test id="s1-s3-t1" name="Prepare Ozone Manager" line="39">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230912 10:01:32.791" endtime="20230912 10:01:32.791"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om prepare -id=omservice</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230912 10:01:32.796" level="INFO">Running command 'ozone admin om prepare -id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20230912 10:01:41.820" level="INFO">${rc} = 0</msg>
<msg timestamp="20230912 10:01:41.821" level="INFO">${output} = Ozone Manager Prepare Request successfully returned with Transaction Id : [835].

Checking individual OM instances for prepare request completion...
OM : [om1], Prepare Status : [PREPARE_COMPLETED], C...</msg>
<status status="PASS" starttime="20230912 10:01:32.793" endtime="20230912 10:01:41.821"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230912 10:01:41.822" level="INFO">Ozone Manager Prepare Request successfully returned with Transaction Id : [835].

Checking individual OM instances for prepare request completion...
OM : [om1], Prepare Status : [PREPARE_COMPLETED], Current Transaction Id : [835]
OM : [om3], Prepare Status : [PREPARE_COMPLETED], Current Transaction Id : [835]
OM : [om2], Prepare Status : [PREPARE_COMPLETED], Current Transaction Id : [835]

OM Preparation successful! 
All OMs are prepared
No new write requests will be allowed until preparation is cancelled or upgrade/downgrade is done.</msg>
<status status="PASS" starttime="20230912 10:01:41.821" endtime="20230912 10:01:41.822"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230912 10:01:41.823" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230912 10:01:41.822" endtime="20230912 10:01:41.823"/>
</kw>
<status status="PASS" starttime="20230912 10:01:32.792" endtime="20230912 10:01:41.823"/>
</kw>
<msg timestamp="20230912 10:01:41.823" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230912 10:01:32.792" endtime="20230912 10:01:41.823"/>
</kw>
<msg timestamp="20230912 10:01:41.824" level="INFO">${result} = Ozone Manager Prepare Request successfully returned with Transaction Id : [835].

Checking individual OM instances for prepare request completion...
OM : [om1], Prepare Status : [PREPARE_COMPLETED], C...</msg>
<status status="PASS" starttime="20230912 10:01:32.791" endtime="20230912 10:01:41.824"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>OM Preparation successful!</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>OM Preparation successful!</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230912 10:01:41.825" endtime="20230912 10:01:41.825"/>
</kw>
<status status="PASS" starttime="20230912 10:01:41.824" endtime="20230912 10:01:41.825"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230912 10:01:32.790" endtime="20230912 10:01:41.825"/>
</test>
<test id="s1-s3-t2" name="Checks if the expected data is present in OM" line="43">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230912 10:01:41.828" endtime="20230912 10:01:41.828"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info /${volume_name}/${bucket_name}/prepare-key</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230912 10:01:41.833" level="INFO">Running command 'ozone sh key info /95231-volume-for-prepare/95231-bucket-for-prepare/prepare-key 2&gt;&amp;1'.</msg>
<msg timestamp="20230912 10:01:45.582" level="INFO">${rc} = 0</msg>
<msg timestamp="20230912 10:01:45.582" level="INFO">${output} = {
  "volumeName" : "95231-volume-for-prepare",
  "bucketName" : "95231-bucket-for-prepare",
  "name" : "prepare-key",
  "dataSize" : 17289,
  "creationTime" : "2023-09-12T10:01:30.634Z",
  "modificati...</msg>
<status status="PASS" starttime="20230912 10:01:41.830" endtime="20230912 10:01:45.582"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230912 10:01:45.583" level="INFO">{
  "volumeName" : "95231-volume-for-prepare",
  "bucketName" : "95231-bucket-for-prepare",
  "name" : "prepare-key",
  "dataSize" : 17289,
  "creationTime" : "2023-09-12T10:01:30.634Z",
  "modificationTime" : "2023-09-12T10:01:32.416Z",
  "replicationConfig" : {
    "replicationFactor" : "ONE",
    "requiredNodes" : 1,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "ozoneKeyLocations" : [ {
    "containerID" : 4,
    "localID" : 111677748019200204,
    "length" : 17289,
    "offset" : 0,
    "keyOffset" : 0
  } ],
  "file" : true
}</msg>
<status status="PASS" starttime="20230912 10:01:45.583" endtime="20230912 10:01:45.583"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230912 10:01:45.584" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230912 10:01:45.584" endtime="20230912 10:01:45.584"/>
</kw>
<status status="PASS" starttime="20230912 10:01:41.829" endtime="20230912 10:01:45.585"/>
</kw>
<msg timestamp="20230912 10:01:45.585" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230912 10:01:41.829" endtime="20230912 10:01:45.585"/>
</kw>
<msg timestamp="20230912 10:01:45.585" level="INFO">${result} = {
  "volumeName" : "95231-volume-for-prepare",
  "bucketName" : "95231-bucket-for-prepare",
  "name" : "prepare-key",
  "dataSize" : 17289,
  "creationTime" : "2023-09-12T10:01:30.634Z",
  "modificati...</msg>
<status status="PASS" starttime="20230912 10:01:41.828" endtime="20230912 10:01:45.585"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"name\" : \"prepare-key\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230912 10:01:45.585" endtime="20230912 10:01:45.586"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230912 10:01:41.827" endtime="20230912 10:01:45.586"/>
</test>
<test id="s1-s3-t3" name="Test write operation fails" line="47">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230912 10:01:45.587" endtime="20230912 10:01:45.588"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh key put /${volume_name}/${bucket_name}/prepare-key2 /opt/hadoop/NOTICE.txt</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230912 10:01:45.592" level="INFO">Running command 'ozone sh key put /95231-volume-for-prepare/95231-bucket-for-prepare/prepare-key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230912 10:01:49.124" level="INFO">${rc} = 255</msg>
<msg timestamp="20230912 10:01:49.124" level="INFO">${output} = NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateKey when OM is in prepare mode.</msg>
<status status="PASS" starttime="20230912 10:01:45.589" endtime="20230912 10:01:49.124"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230912 10:01:49.125" level="INFO">NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateKey when OM is in prepare mode.</msg>
<status status="PASS" starttime="20230912 10:01:49.124" endtime="20230912 10:01:49.125"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230912 10:01:49.126" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230912 10:01:49.125" endtime="20230912 10:01:49.126"/>
</kw>
<msg timestamp="20230912 10:01:49.126" level="INFO">${result} = NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateKey when OM is in prepare mode.</msg>
<status status="PASS" starttime="20230912 10:01:45.588" endtime="20230912 10:01:49.126"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>OM is in prepare mode</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230912 10:01:49.127" endtime="20230912 10:01:49.127"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>ozone sh key info /${volume_name}/${bucket_name}/prepare-key2</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230912 10:01:49.131" level="INFO">Running command 'ozone sh key info /95231-volume-for-prepare/95231-bucket-for-prepare/prepare-key2 2&gt;&amp;1'.</msg>
<msg timestamp="20230912 10:01:52.642" level="INFO">${rc} = 255</msg>
<msg timestamp="20230912 10:01:52.642" level="INFO">${output} = KEY_NOT_FOUND Key:prepare-key2 not found</msg>
<status status="PASS" starttime="20230912 10:01:49.128" endtime="20230912 10:01:52.642"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230912 10:01:52.643" level="INFO">KEY_NOT_FOUND Key:prepare-key2 not found</msg>
<status status="PASS" starttime="20230912 10:01:52.643" endtime="20230912 10:01:52.644"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230912 10:01:52.645" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230912 10:01:52.644" endtime="20230912 10:01:52.645"/>
</kw>
<status status="PASS" starttime="20230912 10:01:49.127" endtime="20230912 10:01:52.645"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230912 10:01:45.587" endtime="20230912 10:01:52.645"/>
</test>
<doc>Smoke test to test preparing OMs in an OM HA cluster.</doc>
<status status="PASS" starttime="20230912 10:01:06.656" endtime="20230912 10:01:52.647"/>
</suite>
<suite id="s1-s4" name="Om-Prepared" source="/opt/hadoop/smoketest/omha/om-prepared.robot">
<test id="s1-s4-t1" name="Test create volume fails" line="26">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230912 10:01:55.581" endtime="20230912 10:01:55.582"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230912 10:01:55.583" level="INFO">${random} = 49359</msg>
<status status="PASS" starttime="20230912 10:01:55.582" endtime="20230912 10:01:55.583"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${volume_name}</arg>
<arg>${random}-volume-for-prepare</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230912 10:01:55.584" level="INFO">${volume_name} = 49359-volume-for-prepare</msg>
<status status="PASS" starttime="20230912 10:01:55.583" endtime="20230912 10:01:55.584"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh volume create /${volume_name}</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230912 10:01:55.588" level="INFO">Running command 'ozone sh volume create /49359-volume-for-prepare 2&gt;&amp;1'.</msg>
<msg timestamp="20230912 10:01:58.913" level="INFO">${rc} = 255</msg>
<msg timestamp="20230912 10:01:58.914" level="INFO">${output} = NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateVolume when OM is in prepare mode.</msg>
<status status="PASS" starttime="20230912 10:01:55.585" endtime="20230912 10:01:58.914"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230912 10:01:58.915" level="INFO">NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateVolume when OM is in prepare mode.</msg>
<status status="PASS" starttime="20230912 10:01:58.914" endtime="20230912 10:01:58.915"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230912 10:01:58.916" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230912 10:01:58.915" endtime="20230912 10:01:58.916"/>
</kw>
<msg timestamp="20230912 10:01:58.916" level="INFO">${result} = NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateVolume when OM is in prepare mode.</msg>
<status status="PASS" starttime="20230912 10:01:55.585" endtime="20230912 10:01:58.916"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>OM is in prepare mode</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230912 10:01:58.916" endtime="20230912 10:01:58.917"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh volume info /${volume_name}</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230912 10:01:58.921" level="INFO">Running command 'ozone sh volume info /49359-volume-for-prepare 2&gt;&amp;1'.</msg>
<msg timestamp="20230912 10:02:02.358" level="INFO">${rc} = 255</msg>
<msg timestamp="20230912 10:02:02.358" level="INFO">${output} = VOLUME_NOT_FOUND Volume 49359-volume-for-prepare is not found</msg>
<status status="PASS" starttime="20230912 10:01:58.918" endtime="20230912 10:02:02.358"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230912 10:02:02.359" level="INFO">VOLUME_NOT_FOUND Volume 49359-volume-for-prepare is not found</msg>
<status status="PASS" starttime="20230912 10:02:02.359" endtime="20230912 10:02:02.360"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230912 10:02:02.360" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230912 10:02:02.360" endtime="20230912 10:02:02.360"/>
</kw>
<msg timestamp="20230912 10:02:02.361" level="INFO">${result} = VOLUME_NOT_FOUND Volume 49359-volume-for-prepare is not found</msg>
<status status="PASS" starttime="20230912 10:01:58.917" endtime="20230912 10:02:02.361"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230912 10:02:02.361" endtime="20230912 10:02:02.361"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230912 10:01:55.581" endtime="20230912 10:02:02.361"/>
</test>
<test id="s1-s4-t2" name="Test list volumes succeeds" line="34">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230912 10:02:02.364" endtime="20230912 10:02:02.364"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230912 10:02:02.369" level="INFO">Running command 'ozone sh volume list 2&gt;&amp;1'.</msg>
<msg timestamp="20230912 10:02:06.170" level="INFO">${rc} = 0</msg>
<msg timestamp="20230912 10:02:06.170" level="INFO">${output} = [ {
  "metadata" : { },
  "name" : "71716-volume-for-prepare",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "...</msg>
<status status="PASS" starttime="20230912 10:02:02.366" endtime="20230912 10:02:06.170"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230912 10:02:06.171" level="INFO">[ {
  "metadata" : { },
  "name" : "71716-volume-for-prepare",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2023-09-12T10:00:11.813Z",
  "modificationTime" : "2023-09-12T10:00:11.813Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "17082-volume-for-cancel",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2023-09-12T10:00:51.132Z",
  "modificationTime" : "2023-09-12T10:00:51.132Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "s3v",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 0,
  "creationTime" : "2023-09-12T09:59:25.527Z",
  "modificationTime" : "2023-09-12T09:59:25.527Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "95231-volume-for-prepare",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2023-09-12T10:01:23.334Z",
  "modificationTime" : "2023-09-12T10:01:23.334Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "vol1",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2023-09-12T09:59:53.943Z",
  "modificationTime" : "2023-09-12T09:59:53.943Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "refCount" : 0
} ]</msg>
<status status="PASS" starttime="20230912 10:02:06.170" endtime="20230912 10:02:06.171"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230912 10:02:06.172" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230912 10:02:06.171" endtime="20230912 10:02:06.172"/>
</kw>
<status status="PASS" starttime="20230912 10:02:02.365" endtime="20230912 10:02:06.172"/>
</kw>
<msg timestamp="20230912 10:02:06.172" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230912 10:02:02.365" endtime="20230912 10:02:06.173"/>
</kw>
<msg timestamp="20230912 10:02:06.173" level="INFO">${result} = [ {
  "metadata" : { },
  "name" : "71716-volume-for-prepare",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "...</msg>
<status status="PASS" starttime="20230912 10:02:02.364" endtime="20230912 10:02:06.173"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230912 10:02:02.363" endtime="20230912 10:02:06.173"/>
</test>
<doc>Smoke test to test that OMs are prepared in an OM HA cluster.</doc>
<status status="PASS" starttime="20230912 10:01:55.525" endtime="20230912 10:02:06.174"/>
</suite>
<suite id="s1-s5" name="Om-Prepared" source="/opt/hadoop/smoketest/omha/om-prepared.robot">
<test id="s1-s5-t1" name="Test create volume fails" line="26">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230912 10:03:46.257" endtime="20230912 10:03:46.257"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230912 10:03:46.258" level="INFO">${random} = 96879</msg>
<status status="PASS" starttime="20230912 10:03:46.258" endtime="20230912 10:03:46.258"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${volume_name}</arg>
<arg>${random}-volume-for-prepare</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230912 10:03:46.260" level="INFO">${volume_name} = 96879-volume-for-prepare</msg>
<status status="PASS" starttime="20230912 10:03:46.259" endtime="20230912 10:03:46.260"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh volume create /${volume_name}</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230912 10:03:46.264" level="INFO">Running command 'ozone sh volume create /96879-volume-for-prepare 2&gt;&amp;1'.</msg>
<msg timestamp="20230912 10:03:50.160" level="INFO">${rc} = 255</msg>
<msg timestamp="20230912 10:03:50.160" level="INFO">${output} = NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateVolume when OM is in prepare mode.</msg>
<status status="PASS" starttime="20230912 10:03:46.261" endtime="20230912 10:03:50.160"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230912 10:03:50.162" level="INFO">NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateVolume when OM is in prepare mode.</msg>
<status status="PASS" starttime="20230912 10:03:50.161" endtime="20230912 10:03:50.162"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230912 10:03:50.162" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230912 10:03:50.162" endtime="20230912 10:03:50.162"/>
</kw>
<msg timestamp="20230912 10:03:50.163" level="INFO">${result} = NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateVolume when OM is in prepare mode.</msg>
<status status="PASS" starttime="20230912 10:03:46.261" endtime="20230912 10:03:50.163"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>OM is in prepare mode</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230912 10:03:50.163" endtime="20230912 10:03:50.163"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh volume info /${volume_name}</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230912 10:03:50.167" level="INFO">Running command 'ozone sh volume info /96879-volume-for-prepare 2&gt;&amp;1'.</msg>
<msg timestamp="20230912 10:03:54.005" level="INFO">${rc} = 255</msg>
<msg timestamp="20230912 10:03:54.005" level="INFO">${output} = VOLUME_NOT_FOUND Volume 96879-volume-for-prepare is not found</msg>
<status status="PASS" starttime="20230912 10:03:50.164" endtime="20230912 10:03:54.005"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230912 10:03:54.006" level="INFO">VOLUME_NOT_FOUND Volume 96879-volume-for-prepare is not found</msg>
<status status="PASS" starttime="20230912 10:03:54.005" endtime="20230912 10:03:54.006"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230912 10:03:54.007" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230912 10:03:54.007" endtime="20230912 10:03:54.007"/>
</kw>
<msg timestamp="20230912 10:03:54.007" level="INFO">${result} = VOLUME_NOT_FOUND Volume 96879-volume-for-prepare is not found</msg>
<status status="PASS" starttime="20230912 10:03:50.163" endtime="20230912 10:03:54.008"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230912 10:03:54.008" endtime="20230912 10:03:54.008"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230912 10:03:46.252" endtime="20230912 10:03:54.008"/>
</test>
<test id="s1-s5-t2" name="Test list volumes succeeds" line="34">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230912 10:03:54.010" endtime="20230912 10:03:54.011"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230912 10:03:54.015" level="INFO">Running command 'ozone sh volume list 2&gt;&amp;1'.</msg>
<msg timestamp="20230912 10:03:58.365" level="INFO">${rc} = 0</msg>
<msg timestamp="20230912 10:03:58.365" level="INFO">${output} = [ {
  "metadata" : { },
  "name" : "71716-volume-for-prepare",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "...</msg>
<status status="PASS" starttime="20230912 10:03:54.012" endtime="20230912 10:03:58.365"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230912 10:03:58.367" level="INFO">[ {
  "metadata" : { },
  "name" : "71716-volume-for-prepare",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2023-09-12T10:00:11.813Z",
  "modificationTime" : "2023-09-12T10:00:11.813Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "17082-volume-for-cancel",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2023-09-12T10:00:51.132Z",
  "modificationTime" : "2023-09-12T10:00:51.132Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "s3v",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 0,
  "creationTime" : "2023-09-12T09:59:26.027Z",
  "modificationTime" : "2023-09-12T09:59:26.027Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "95231-volume-for-prepare",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2023-09-12T10:01:23.334Z",
  "modificationTime" : "2023-09-12T10:01:23.334Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "vol1",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2023-09-12T09:59:53.943Z",
  "modificationTime" : "2023-09-12T09:59:53.943Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "refCount" : 0
} ]</msg>
<status status="PASS" starttime="20230912 10:03:58.366" endtime="20230912 10:03:58.368"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230912 10:03:58.368" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230912 10:03:58.368" endtime="20230912 10:03:58.368"/>
</kw>
<status status="PASS" starttime="20230912 10:03:54.012" endtime="20230912 10:03:58.369"/>
</kw>
<msg timestamp="20230912 10:03:58.369" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230912 10:03:54.011" endtime="20230912 10:03:58.369"/>
</kw>
<msg timestamp="20230912 10:03:58.369" level="INFO">${result} = [ {
  "metadata" : { },
  "name" : "71716-volume-for-prepare",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "...</msg>
<status status="PASS" starttime="20230912 10:03:54.011" endtime="20230912 10:03:58.369"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230912 10:03:54.009" endtime="20230912 10:03:58.369"/>
</test>
<doc>Smoke test to test that OMs are prepared in an OM HA cluster.</doc>
<status status="PASS" starttime="20230912 10:03:46.194" endtime="20230912 10:03:58.372"/>
</suite>
<suite id="s1-s6" name="Loaddata" source="/opt/hadoop/smoketest/topology/loaddata.robot">
<test id="s1-s6-t1" name="Create a volume, bucket and key" line="27">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create topvol1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230912 10:05:34.544" level="INFO">Running command 'ozone sh volume create topvol1 2&gt;&amp;1'.</msg>
<msg timestamp="20230912 10:05:38.597" level="INFO">${rc} = 0</msg>
<msg timestamp="20230912 10:05:38.597" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230912 10:05:34.541" endtime="20230912 10:05:38.597"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230912 10:05:38.599" level="INFO"/>
<status status="PASS" starttime="20230912 10:05:38.598" endtime="20230912 10:05:38.599"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230912 10:05:38.607" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230912 10:05:38.599" endtime="20230912 10:05:38.607"/>
</kw>
<status status="PASS" starttime="20230912 10:05:34.540" endtime="20230912 10:05:38.607"/>
</kw>
<msg timestamp="20230912 10:05:38.607" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230912 10:05:34.540" endtime="20230912 10:05:38.608"/>
</kw>
<msg timestamp="20230912 10:05:38.608" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230912 10:05:34.538" endtime="20230912 10:05:38.608"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230912 10:05:38.608" endtime="20230912 10:05:38.609"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /topvol1/bucket1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230912 10:05:38.617" level="INFO">Running command 'ozone sh bucket create /topvol1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20230912 10:05:42.153" level="INFO">${rc} = 0</msg>
<msg timestamp="20230912 10:05:42.153" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230912 10:05:38.613" endtime="20230912 10:05:42.153"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230912 10:05:42.155" level="INFO"/>
<status status="PASS" starttime="20230912 10:05:42.154" endtime="20230912 10:05:42.155"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230912 10:05:42.156" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230912 10:05:42.156" endtime="20230912 10:05:42.156"/>
</kw>
<status status="PASS" starttime="20230912 10:05:38.613" endtime="20230912 10:05:42.156"/>
</kw>
<msg timestamp="20230912 10:05:42.157" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230912 10:05:38.612" endtime="20230912 10:05:42.157"/>
</kw>
<msg timestamp="20230912 10:05:42.157" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230912 10:05:38.609" endtime="20230912 10:05:42.157"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230912 10:05:42.157" endtime="20230912 10:05:42.158"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /topvol1/bucket1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230912 10:05:42.162" level="INFO">Running command 'ozone sh key put /topvol1/bucket1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230912 10:05:49.467" level="INFO">${rc} = 0</msg>
<msg timestamp="20230912 10:05:49.467" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230912 10:05:42.159" endtime="20230912 10:05:49.467"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230912 10:05:49.468" level="INFO"/>
<status status="PASS" starttime="20230912 10:05:49.467" endtime="20230912 10:05:49.468"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230912 10:05:49.469" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230912 10:05:49.469" endtime="20230912 10:05:49.469"/>
</kw>
<status status="PASS" starttime="20230912 10:05:42.159" endtime="20230912 10:05:49.470"/>
</kw>
<msg timestamp="20230912 10:05:49.470" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230912 10:05:42.158" endtime="20230912 10:05:49.470"/>
</kw>
<msg timestamp="20230912 10:05:49.470" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230912 10:05:42.158" endtime="20230912 10:05:49.470"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230912 10:05:49.470" endtime="20230912 10:05:49.471"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230912 10:05:34.538" endtime="20230912 10:05:49.471"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20230912 10:05:34.483" endtime="20230912 10:05:49.473"/>
</suite>
<suite id="s1-s7" name="Readdata" source="/opt/hadoop/smoketest/topology/readdata.robot">
<test id="s1-s7-t1" name="Read data from previously created key" line="27">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230912 10:05:52.502" level="INFO">${random} = 57276</msg>
<status status="PASS" starttime="20230912 10:05:52.501" endtime="20230912 10:05:52.502"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /topvol1/bucket1/key1 /tmp/key1-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230912 10:05:52.506" level="INFO">Running command 'ozone sh key get /topvol1/bucket1/key1 /tmp/key1-57276 2&gt;&amp;1'.</msg>
<msg timestamp="20230912 10:05:58.433" level="INFO">${rc} = 0</msg>
<msg timestamp="20230912 10:05:58.433" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230912 10:05:52.504" endtime="20230912 10:05:58.433"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230912 10:05:58.435" level="INFO"/>
<status status="PASS" starttime="20230912 10:05:58.434" endtime="20230912 10:05:58.435"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230912 10:05:58.435" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230912 10:05:58.435" endtime="20230912 10:05:58.435"/>
</kw>
<status status="PASS" starttime="20230912 10:05:52.503" endtime="20230912 10:05:58.436"/>
</kw>
<msg timestamp="20230912 10:05:58.436" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230912 10:05:52.503" endtime="20230912 10:05:58.436"/>
</kw>
<msg timestamp="20230912 10:05:58.436" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230912 10:05:52.502" endtime="20230912 10:05:58.436"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230912 10:05:58.436" endtime="20230912 10:05:58.437"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230912 10:05:52.501" endtime="20230912 10:05:58.437"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20230912 10:05:52.444" endtime="20230912 10:05:58.438"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="160085"/>
</suite>
<statistics>
<total>
<stat pass="14" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="14" fail="0" skip="0" id="s1" name="ozone-om-prepare">ozone-om-prepare</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1" name="Om-Prepare">ozone-om-prepare.Om-Prepare</stat>
<stat pass="2" fail="0" skip="0" id="s1-s2" name="Om-Cancel-Prepare">ozone-om-prepare.Om-Cancel-Prepare</stat>
<stat pass="3" fail="0" skip="0" id="s1-s3" name="Om-Prepare">ozone-om-prepare.Om-Prepare</stat>
<stat pass="2" fail="0" skip="0" id="s1-s4" name="Om-Prepared">ozone-om-prepare.Om-Prepared</stat>
<stat pass="2" fail="0" skip="0" id="s1-s5" name="Om-Prepared">ozone-om-prepare.Om-Prepared</stat>
<stat pass="1" fail="0" skip="0" id="s1-s6" name="Loaddata">ozone-om-prepare.Loaddata</stat>
<stat pass="1" fail="0" skip="0" id="s1-s7" name="Readdata">ozone-om-prepare.Readdata</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
