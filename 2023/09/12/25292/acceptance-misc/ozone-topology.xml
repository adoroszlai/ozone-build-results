<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 6.1.1 (Python 3.8.10 on linux)" generated="20230912 10:13:38.332" rpa="false" schemaversion="4">
<suite id="s1" name="ozone-topology">
<suite id="s1-s1" name="Basic" source="/opt/hadoop/smoketest/basic/basic.robot">
<test id="s1-s1-t1" name="Check webui static resources" line="29">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230912 10:08:09.346" endtime="20230912 10:08:09.349"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -s -I http://${SCM}:9876/static/bootstrap-3.4.1/js/bootstrap.min.js</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230912 10:08:09.364" level="INFO">Running command 'curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js 2&gt;&amp;1'.</msg>
<msg timestamp="20230912 10:08:10.145" level="INFO">${rc} = 0</msg>
<msg timestamp="20230912 10:08:10.146" level="INFO">${output} = HTTP/1.1 200 OK
Date: Tue, 12 Sep 2023 10:08:10 GMT
X-Content-Type-Options: nosniff
X-XSS-Protection: 1; mode=block
X-FRAME-OPTIONS: SAMEORIGIN
Last-Modified: Tue, 12 Sep 2023 09:31:32 GMT
Content-Typ...</msg>
<status status="PASS" starttime="20230912 10:08:09.355" endtime="20230912 10:08:10.146"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230912 10:08:10.151" level="INFO">HTTP/1.1 200 OK
Date: Tue, 12 Sep 2023 10:08:10 GMT
X-Content-Type-Options: nosniff
X-XSS-Protection: 1; mode=block
X-FRAME-OPTIONS: SAMEORIGIN
Last-Modified: Tue, 12 Sep 2023 09:31:32 GMT
Content-Type: application/javascript
Accept-Ranges: bytes
Content-Length: 39680
</msg>
<status status="PASS" starttime="20230912 10:08:10.149" endtime="20230912 10:08:10.151"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230912 10:08:10.154" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230912 10:08:10.154" endtime="20230912 10:08:10.157"/>
</kw>
<status status="PASS" starttime="20230912 10:08:09.352" endtime="20230912 10:08:10.157"/>
</kw>
<msg timestamp="20230912 10:08:10.157" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230912 10:08:09.352" endtime="20230912 10:08:10.157"/>
</kw>
<msg timestamp="20230912 10:08:10.158" level="INFO">${result} = HTTP/1.1 200 OK
Date: Tue, 12 Sep 2023 10:08:10 GMT
X-Content-Type-Options: nosniff
X-XSS-Protection: 1; mode=block
X-FRAME-OPTIONS: SAMEORIGIN
Last-Modified: Tue, 12 Sep 2023 09:31:32 GMT
Content-Typ...</msg>
<status status="PASS" starttime="20230912 10:08:09.349" endtime="20230912 10:08:10.158"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230912 10:08:10.160" endtime="20230912 10:08:10.161"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230912 10:08:09.341" endtime="20230912 10:08:10.162"/>
</test>
<test id="s1-s1-t2" name="Basic Freon smoketest" line="34">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230912 10:08:10.170" endtime="20230912 10:08:10.170"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>10</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230912 10:08:10.173" level="INFO">${random} = e1OZL71Hoe</msg>
<status status="PASS" starttime="20230912 10:08:10.171" endtime="20230912 10:08:10.173"/>
</kw>
<kw name="Freon OCKG" library="freon">
<arg>prefix=${random}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230912 10:08:10.199" level="INFO">Running command 'ozone freon ockg  -t 1 -n1 -p e1OZL71Hoe  2&gt;&amp;1'.</msg>
<msg timestamp="20230912 10:08:39.394" level="INFO">${rc} = 0</msg>
<msg timestamp="20230912 10:08:39.394" level="INFO">${output} = 2023-09-12 10:08:18,784 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-12 10:08:19,138 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230912 10:08:10.186" endtime="20230912 10:08:39.394"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230912 10:08:39.396" level="INFO">2023-09-12 10:08:18,784 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-12 10:08:19,138 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-09-12 10:08:19,139 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-09-12 10:08:19,437 [main] INFO freon.BaseFreonGenerator: Executing test with prefix e1OZL71Hoe and number-of-tests 1
2023-09-12 10:08:19,628 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-12 10:08:20,654 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-12 10:08:21,655 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-12 10:08:22,656 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-12 10:08:23,656 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-12 10:08:24,657 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-12 10:08:25,657 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-12 10:08:26,657 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-12 10:08:27,658 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-12 10:08:27,767 [main] INFO retry.RetryInvocationHandler: com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.ozone.om.exceptions.OMNotLeaderException): OM:om1 is not the leader. Could not determine the leader node.
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createNotLeaderException(OzoneManagerProtocolServerSideTranslatorPB.java:246)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createLeaderErrorException(OzoneManagerProtocolServerSideTranslatorPB.java:234)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitReadRequestToOM(OzoneManagerProtocolServerSideTranslatorPB.java:227)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.processRequest(OzoneManagerProtocolServerSideTranslatorPB.java:179)
	at org.apache.hadoop.hdds.server.OzoneProtocolMessageDispatcher.processRequest(OzoneProtocolMessageDispatcher.java:87)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitRequest(OzoneManagerProtocolServerSideTranslatorPB.java:148)
	at org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos$OzoneManagerService$2.callBlockingMethod(OzoneManagerProtocolProtos.java)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Server.processCall(ProtobufRpcEngine.java:484)
	at org.apache.hadoop.ipc.ProtobufRpcEngine2$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine2.java:595)
	at org.apache.hadoop.ipc.ProtobufRpcEngine2$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine2.java:573)
	at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:1227)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:1094)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:1017)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/javax.security.auth.Subject.doAs(Subject.java:423)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1899)
	at org.apache.hadoop.ipc.Server$Handler.run(Server.java:3048)
, while invoking $Proxy25.submitRequest over nodeId=null,nodeAddress=om:9862 after 1 failover attempts. Trying to failover after sleeping for 4000ms. Current retry count: 1.
2023-09-12 10:08:28,658 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-12 10:08:29,659 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-12 10:08:30,659 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-12 10:08:31,660 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-12 10:08:32,451 [main] INFO rpc.RpcClient: Creating Volume: vol1, with hadoop as owner and space quota set to -1 bytes, counts quota set to -1
2023-09-12 10:08:32,655 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Encryption set to false, Replication Type set to server-side default replication type, Namespace Quota set to -1, Space Quota set to -1 
2023-09-12 10:08:32,661 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-12 10:08:33,662 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-12 10:08:34,091 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2023-09-12 10:08:34,507 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2023-09-12 10:08:34,662 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-12 10:08:35,663 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-12 10:08:36,670 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-12 10:08:37,672 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-12 10:08:38,676 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2023-09-12 10:08:38,974 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=1, min=4999.224443, max=4999.224443, mean=4999.224443, stddev=0.0, median=4999.224443, p75=4999.224443, p95=4999.224443, p98=4999.224443, p99=4999.224443, p999=4999.224443, mean_rate=0.16085608736977655, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-09-12 10:08:38,976 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 19
2023-09-12 10:08:38,976 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-09-12 10:08:38,976 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20230912 10:08:39.395" endtime="20230912 10:08:39.396"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230912 10:08:39.397" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230912 10:08:39.396" endtime="20230912 10:08:39.397"/>
</kw>
<status status="PASS" starttime="20230912 10:08:10.183" endtime="20230912 10:08:39.397"/>
</kw>
<msg timestamp="20230912 10:08:39.398" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230912 10:08:10.183" endtime="20230912 10:08:39.398"/>
</kw>
<msg timestamp="20230912 10:08:39.398" level="INFO">${result} = 2023-09-12 10:08:18,784 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-12 10:08:19,138 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230912 10:08:10.181" endtime="20230912 10:08:39.398"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230912 10:08:39.398" endtime="20230912 10:08:39.399"/>
</kw>
<status status="PASS" starttime="20230912 10:08:10.174" endtime="20230912 10:08:39.399"/>
</kw>
<kw name="Freon OCKV" library="freon">
<arg>prefix=${random}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockv ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230912 10:08:39.406" level="INFO">Running command 'ozone freon ockv  -t 1 -n1 -p e1OZL71Hoe  2&gt;&amp;1'.</msg>
<msg timestamp="20230912 10:08:50.859" level="INFO">${rc} = 0</msg>
<msg timestamp="20230912 10:08:50.859" level="INFO">${output} = 2023-09-12 10:08:43,077 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-12 10:08:43,419 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230912 10:08:39.403" endtime="20230912 10:08:50.859"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230912 10:08:50.861" level="INFO">2023-09-12 10:08:43,077 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-12 10:08:43,419 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-09-12 10:08:43,419 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-09-12 10:08:43,574 [main] INFO freon.BaseFreonGenerator: Executing test with prefix e1OZL71Hoe and number-of-tests 1
2023-09-12 10:08:43,641 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-12 10:08:44,648 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-12 10:08:45,652 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-12 10:08:46,653 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-12 10:08:47,653 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-12 10:08:47,697 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2023-09-12 10:08:48,655 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-12 10:08:49,655 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2023-09-12 10:08:50,480 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-validate, count=1, min=79.266858, max=79.266858, mean=79.266858, stddev=0.0, median=79.266858, p75=79.266858, p95=79.266858, p98=79.266858, p99=79.266858, p999=79.266858, mean_rate=0.7738635282443488, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-09-12 10:08:50,481 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 7
2023-09-12 10:08:50,481 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-09-12 10:08:50,481 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20230912 10:08:50.860" endtime="20230912 10:08:50.861"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230912 10:08:50.861" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230912 10:08:50.861" endtime="20230912 10:08:50.861"/>
</kw>
<status status="PASS" starttime="20230912 10:08:39.402" endtime="20230912 10:08:50.862"/>
</kw>
<msg timestamp="20230912 10:08:50.862" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230912 10:08:39.402" endtime="20230912 10:08:50.862"/>
</kw>
<msg timestamp="20230912 10:08:50.862" level="INFO">${result} = 2023-09-12 10:08:43,077 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-12 10:08:43,419 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230912 10:08:39.401" endtime="20230912 10:08:50.862"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230912 10:08:50.862" endtime="20230912 10:08:50.863"/>
</kw>
<status status="PASS" starttime="20230912 10:08:39.399" endtime="20230912 10:08:50.863"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230912 10:08:10.167" endtime="20230912 10:08:50.863"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20230912 10:08:08.963" endtime="20230912 10:08:50.865"/>
</suite>
<suite id="s1-s2" name="Cli" source="/opt/hadoop/smoketest/topology/cli.robot">
<test id="s1-s2-t1" name="Run printTopology" line="27">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin printTopology</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230912 10:08:54.251" level="INFO">Running command 'ozone admin printTopology 2&gt;&amp;1'.</msg>
<msg timestamp="20230912 10:08:59.667" level="INFO">${rc} = 0</msg>
<msg timestamp="20230912 10:08:59.667" level="INFO">${output} = State = HEALTHY
 10.5.0.8(ozone-topology_datanode_5_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rac...</msg>
<status status="PASS" starttime="20230912 10:08:54.248" endtime="20230912 10:08:59.667"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230912 10:08:59.669" level="INFO">State = HEALTHY
 10.5.0.8(ozone-topology_datanode_5_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.9(ozone-topology_datanode_6_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2</msg>
<status status="PASS" starttime="20230912 10:08:59.668" endtime="20230912 10:08:59.669"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230912 10:08:59.670" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230912 10:08:59.669" endtime="20230912 10:08:59.670"/>
</kw>
<status status="PASS" starttime="20230912 10:08:54.247" endtime="20230912 10:08:59.670"/>
</kw>
<msg timestamp="20230912 10:08:59.670" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230912 10:08:54.246" endtime="20230912 10:08:59.670"/>
</kw>
<msg timestamp="20230912 10:08:59.671" level="INFO">${output} = State = HEALTHY
 10.5.0.8(ozone-topology_datanode_5_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rac...</msg>
<status status="PASS" starttime="20230912 10:08:54.246" endtime="20230912 10:08:59.671"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net)</arg>
<arg>IN_SERVICE</arg>
<arg>/rack2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230912 10:08:59.671" endtime="20230912 10:08:59.671"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230912 10:08:54.245" endtime="20230912 10:08:59.672"/>
</test>
<test id="s1-s2-t2" name="Run printTopology -o" line="30">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin printTopology -o</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230912 10:08:59.681" level="INFO">Running command 'ozone admin printTopology -o 2&gt;&amp;1'.</msg>
<msg timestamp="20230912 10:09:04.523" level="INFO">${rc} = 0</msg>
<msg timestamp="20230912 10:09:04.523" level="INFO">${output} = State = HEALTHY
Location: /rack1
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net) IN_SERVICE
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net) IN_SERVICE
 10.5.0.4(ozone-topology_data...</msg>
<status status="PASS" starttime="20230912 10:08:59.678" endtime="20230912 10:09:04.523"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230912 10:09:04.525" level="INFO">State = HEALTHY
Location: /rack1
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net) IN_SERVICE
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net) IN_SERVICE
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net) IN_SERVICE
Location: /rack2
 10.5.0.8(ozone-topology_datanode_5_1.ozone-topology_net) IN_SERVICE
 10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net) IN_SERVICE
 10.5.0.9(ozone-topology_datanode_6_1.ozone-topology_net) IN_SERVICE</msg>
<status status="PASS" starttime="20230912 10:09:04.524" endtime="20230912 10:09:04.525"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230912 10:09:04.526" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230912 10:09:04.525" endtime="20230912 10:09:04.526"/>
</kw>
<status status="PASS" starttime="20230912 10:08:59.677" endtime="20230912 10:09:04.526"/>
</kw>
<msg timestamp="20230912 10:09:04.526" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230912 10:08:59.677" endtime="20230912 10:09:04.526"/>
</kw>
<msg timestamp="20230912 10:09:04.527" level="INFO">${output} = State = HEALTHY
Location: /rack1
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net) IN_SERVICE
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net) IN_SERVICE
 10.5.0.4(ozone-topology_data...</msg>
<status status="PASS" starttime="20230912 10:08:59.674" endtime="20230912 10:09:04.527"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Location: /rack2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230912 10:09:04.527" endtime="20230912 10:09:04.527"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net) IN_SERVICE</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230912 10:09:04.528" endtime="20230912 10:09:04.528"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230912 10:08:59.673" endtime="20230912 10:09:04.528"/>
</test>
<test id="s1-s2-t3" name="Run printTopology --operational-state IN_SERVICE" line="34">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin printTopology --operational-state IN_SERVICE</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230912 10:09:04.536" level="INFO">Running command 'ozone admin printTopology --operational-state IN_SERVICE 2&gt;&amp;1'.</msg>
<msg timestamp="20230912 10:09:10.242" level="INFO">${rc} = 0</msg>
<msg timestamp="20230912 10:09:10.242" level="INFO">${output} = State = HEALTHY
 10.5.0.8(ozone-topology_datanode_5_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rac...</msg>
<status status="PASS" starttime="20230912 10:09:04.533" endtime="20230912 10:09:10.242"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230912 10:09:10.244" level="INFO">State = HEALTHY
 10.5.0.8(ozone-topology_datanode_5_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.9(ozone-topology_datanode_6_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2</msg>
<status status="PASS" starttime="20230912 10:09:10.243" endtime="20230912 10:09:10.244"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230912 10:09:10.245" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230912 10:09:10.244" endtime="20230912 10:09:10.245"/>
</kw>
<status status="PASS" starttime="20230912 10:09:04.532" endtime="20230912 10:09:10.245"/>
</kw>
<msg timestamp="20230912 10:09:10.245" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230912 10:09:04.532" endtime="20230912 10:09:10.245"/>
</kw>
<msg timestamp="20230912 10:09:10.246" level="INFO">${output} = State = HEALTHY
 10.5.0.8(ozone-topology_datanode_5_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rac...</msg>
<status status="PASS" starttime="20230912 10:09:04.531" endtime="20230912 10:09:10.246"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net)</arg>
<arg>IN_SERVICE</arg>
<arg>/rack2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230912 10:09:10.246" endtime="20230912 10:09:10.246"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230912 10:09:04.530" endtime="20230912 10:09:10.247"/>
</test>
<test id="s1-s2-t4" name="Run printTopology --node-state HEALTHY" line="37">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin printTopology --node-state HEALTHY</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230912 10:09:10.254" level="INFO">Running command 'ozone admin printTopology --node-state HEALTHY 2&gt;&amp;1'.</msg>
<msg timestamp="20230912 10:09:15.691" level="INFO">${rc} = 0</msg>
<msg timestamp="20230912 10:09:15.691" level="INFO">${output} = State = HEALTHY
 10.5.0.8(ozone-topology_datanode_5_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rac...</msg>
<status status="PASS" starttime="20230912 10:09:10.251" endtime="20230912 10:09:15.691"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230912 10:09:15.693" level="INFO">State = HEALTHY
 10.5.0.8(ozone-topology_datanode_5_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.9(ozone-topology_datanode_6_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2</msg>
<status status="PASS" starttime="20230912 10:09:15.692" endtime="20230912 10:09:15.693"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230912 10:09:15.694" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230912 10:09:15.693" endtime="20230912 10:09:15.694"/>
</kw>
<status status="PASS" starttime="20230912 10:09:10.250" endtime="20230912 10:09:15.694"/>
</kw>
<msg timestamp="20230912 10:09:15.694" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230912 10:09:10.250" endtime="20230912 10:09:15.694"/>
</kw>
<msg timestamp="20230912 10:09:15.695" level="INFO">${output} = State = HEALTHY
 10.5.0.8(ozone-topology_datanode_5_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rac...</msg>
<status status="PASS" starttime="20230912 10:09:10.249" endtime="20230912 10:09:15.695"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net)</arg>
<arg>IN_SERVICE</arg>
<arg>/rack2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230912 10:09:15.695" endtime="20230912 10:09:15.695"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230912 10:09:10.248" endtime="20230912 10:09:15.695"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20230912 10:08:54.186" endtime="20230912 10:09:15.697"/>
</suite>
<suite id="s1-s3" name="Recon" source="/opt/hadoop/smoketest/recon">
<suite id="s1-s3-s1" name="Recon-Api" source="/opt/hadoop/smoketest/recon/recon-api.robot">
<test id="s1-s3-s1-t1" name="Check if Recon picks up OM data" line="61">
<kw name="Execute" library="os">
<arg>ozone sh volume create recon</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230912 10:09:18.981" level="INFO">Running command 'ozone sh volume create recon 2&gt;&amp;1'.</msg>
<msg timestamp="20230912 10:09:24.254" level="INFO">${rc} = 0</msg>
<msg timestamp="20230912 10:09:24.254" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230912 10:09:18.978" endtime="20230912 10:09:24.255"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230912 10:09:24.256" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230912 10:09:24.255" endtime="20230912 10:09:24.256"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230912 10:09:24.257" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230912 10:09:24.256" endtime="20230912 10:09:24.257"/>
</kw>
<status status="PASS" starttime="20230912 10:09:18.977" endtime="20230912 10:09:24.257"/>
</kw>
<msg timestamp="20230912 10:09:24.257" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230912 10:09:18.977" endtime="20230912 10:09:24.257"/>
</kw>
<status status="PASS" starttime="20230912 10:09:18.976" endtime="20230912 10:09:24.258"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create recon/api --layout=LEGACY</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230912 10:09:24.266" level="INFO">Running command 'ozone sh bucket create recon/api --layout=LEGACY 2&gt;&amp;1'.</msg>
<msg timestamp="20230912 10:09:29.986" level="INFO">${rc} = 0</msg>
<msg timestamp="20230912 10:09:29.986" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230912 10:09:24.261" endtime="20230912 10:09:29.986"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230912 10:09:29.987" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230912 10:09:29.986" endtime="20230912 10:09:29.987"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230912 10:09:29.988" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230912 10:09:29.987" endtime="20230912 10:09:29.988"/>
</kw>
<status status="PASS" starttime="20230912 10:09:24.259" endtime="20230912 10:09:29.988"/>
</kw>
<msg timestamp="20230912 10:09:29.988" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230912 10:09:24.258" endtime="20230912 10:09:29.989"/>
</kw>
<status status="PASS" starttime="20230912 10:09:24.258" endtime="20230912 10:09:29.989"/>
</kw>
<kw name="Freon OCKG" library="freon">
<arg>n=10</arg>
<arg>args=-s 1025 -v recon -b api</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230912 10:09:29.994" level="INFO">Running command 'ozone freon ockg  -t 1 -n10 -p ockg -s 1025 -v recon -b api 2&gt;&amp;1'.</msg>
<msg timestamp="20230912 10:09:44.940" level="INFO">${rc} = 0</msg>
<msg timestamp="20230912 10:09:44.940" level="INFO">${output} = 2023-09-12 10:09:32,888 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-12 10:09:33,015 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230912 10:09:29.991" endtime="20230912 10:09:44.940"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230912 10:09:44.942" level="INFO">2023-09-12 10:09:32,888 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-12 10:09:33,015 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-09-12 10:09:33,016 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-09-12 10:09:33,204 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ockg and number-of-tests 10
2023-09-12 10:09:33,280 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2023-09-12 10:09:34,281 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2023-09-12 10:09:35,282 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2023-09-12 10:09:35,944 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2023-09-12 10:09:36,282 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2023-09-12 10:09:36,475 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2023-09-12 10:09:37,283 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2023-09-12 10:09:38,284 [Thread-5] INFO freon.ProgressBar: Progress: 10.00 % (1 out of 10)
2023-09-12 10:09:39,284 [Thread-5] INFO freon.ProgressBar: Progress: 10.00 % (1 out of 10)
2023-09-12 10:09:40,285 [Thread-5] INFO freon.ProgressBar: Progress: 10.00 % (1 out of 10)
2023-09-12 10:09:41,285 [Thread-5] INFO freon.ProgressBar: Progress: 30.00 % (3 out of 10)
2023-09-12 10:09:42,286 [Thread-5] INFO freon.ProgressBar: Progress: 30.00 % (3 out of 10)
2023-09-12 10:09:43,286 [Thread-5] INFO freon.ProgressBar: Progress: 70.00 % (7 out of 10)
2023-09-12 10:09:44,288 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (10 out of 10)
2023-09-12 10:09:44,562 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=10, min=133.984391, max=2832.115869, mean=873.0666173442562, stddev=1045.4789284363685, median=190.546819, p75=1992.425579, p95=2832.115869, p98=2832.115869, p99=2832.115869, p999=2832.115869, mean_rate=1.03931003916421, m1=0.2, m5=0.2, m15=0.2, rate_unit=events/second, duration_unit=milliseconds
2023-09-12 10:09:44,563 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 11
2023-09-12 10:09:44,564 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-09-12 10:09:44,564 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 10</msg>
<status status="PASS" starttime="20230912 10:09:44.941" endtime="20230912 10:09:44.942"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230912 10:09:44.943" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230912 10:09:44.942" endtime="20230912 10:09:44.943"/>
</kw>
<status status="PASS" starttime="20230912 10:09:29.991" endtime="20230912 10:09:44.943"/>
</kw>
<msg timestamp="20230912 10:09:44.943" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230912 10:09:29.990" endtime="20230912 10:09:44.944"/>
</kw>
<msg timestamp="20230912 10:09:44.944" level="INFO">${result} = 2023-09-12 10:09:32,888 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-12 10:09:33,015 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230912 10:09:29.990" endtime="20230912 10:09:44.944"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230912 10:09:44.944" endtime="20230912 10:09:44.945"/>
</kw>
<status status="PASS" starttime="20230912 10:09:29.989" endtime="20230912 10:09:44.945"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Check if Recon picks up container from OM</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit as ozone admin</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230912 10:09:44.946" endtime="20230912 10:09:44.946"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/containers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230912 10:09:44.951" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20230912 10:09:45.254" level="INFO">${rc} = 0</msg>
<msg timestamp="20230912 10:09:45.254" level="INFO">${output} = {"data":{"totalCount":4,"prevKey":4,"containers":[{"ContainerID":1,"NumberOfKeys":0,"pipelines":null},{"ContainerID":2,"NumberOfKeys":0,"pipelines":null},{"ContainerID":3,"NumberOfKeys":0,"pipelines":...</msg>
<status status="PASS" starttime="20230912 10:09:44.948" endtime="20230912 10:09:45.254"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230912 10:09:45.255" level="INFO">{"data":{"totalCount":4,"prevKey":4,"containers":[{"ContainerID":1,"NumberOfKeys":0,"pipelines":null},{"ContainerID":2,"NumberOfKeys":0,"pipelines":null},{"ContainerID":3,"NumberOfKeys":0,"pipelines":null},{"ContainerID":4,"NumberOfKeys":0,"pipelines":null}]}}</msg>
<status status="PASS" starttime="20230912 10:09:45.254" endtime="20230912 10:09:45.255"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230912 10:09:45.256" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230912 10:09:45.255" endtime="20230912 10:09:45.256"/>
</kw>
<status status="PASS" starttime="20230912 10:09:44.947" endtime="20230912 10:09:45.256"/>
</kw>
<msg timestamp="20230912 10:09:45.256" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230912 10:09:44.947" endtime="20230912 10:09:45.256"/>
</kw>
<msg timestamp="20230912 10:09:45.257" level="INFO">${result} = {"data":{"totalCount":4,"prevKey":4,"containers":[{"ContainerID":1,"NumberOfKeys":0,"pipelines":null},{"ContainerID":2,"NumberOfKeys":0,"pipelines":null},{"ContainerID":3,"NumberOfKeys":0,"pipelines":...</msg>
<status status="PASS" starttime="20230912 10:09:44.947" endtime="20230912 10:09:45.257"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"ContainerID\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230912 10:09:45.257" endtime="20230912 10:09:45.257"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/utilization/fileCount</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230912 10:09:45.262" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20230912 10:09:45.302" level="INFO">${rc} = 0</msg>
<msg timestamp="20230912 10:09:45.302" level="INFO">${output} = [{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20230912 10:09:45.259" endtime="20230912 10:09:45.302"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230912 10:09:45.304" level="INFO">[{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20230912 10:09:45.302" endtime="20230912 10:09:45.304"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230912 10:09:45.305" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230912 10:09:45.304" endtime="20230912 10:09:45.305"/>
</kw>
<status status="PASS" starttime="20230912 10:09:45.258" endtime="20230912 10:09:45.305"/>
</kw>
<msg timestamp="20230912 10:09:45.305" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230912 10:09:45.258" endtime="20230912 10:09:45.305"/>
</kw>
<msg timestamp="20230912 10:09:45.306" level="INFO">${result} = [{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20230912 10:09:45.257" endtime="20230912 10:09:45.306"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20230912 10:09:45.307" level="FAIL">'[{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]' does not contain '"fileSize":2048,"count":10'</msg>
<status status="FAIL" starttime="20230912 10:09:45.306" endtime="20230912 10:09:45.307"/>
</kw>
<status status="FAIL" starttime="20230912 10:09:44.946" endtime="20230912 10:09:45.307"/>
</kw>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit as ozone admin</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230912 10:09:55.309" endtime="20230912 10:09:55.309"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/containers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230912 10:09:55.314" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20230912 10:09:55.331" level="INFO">${rc} = 0</msg>
<msg timestamp="20230912 10:09:55.332" level="INFO">${output} = {"data":{"totalCount":4,"prevKey":4,"containers":[{"ContainerID":1,"NumberOfKeys":0,"pipelines":null},{"ContainerID":2,"NumberOfKeys":0,"pipelines":null},{"ContainerID":3,"NumberOfKeys":0,"pipelines":...</msg>
<status status="PASS" starttime="20230912 10:09:55.311" endtime="20230912 10:09:55.332"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230912 10:09:55.333" level="INFO">{"data":{"totalCount":4,"prevKey":4,"containers":[{"ContainerID":1,"NumberOfKeys":0,"pipelines":null},{"ContainerID":2,"NumberOfKeys":0,"pipelines":null},{"ContainerID":3,"NumberOfKeys":0,"pipelines":null},{"ContainerID":4,"NumberOfKeys":0,"pipelines":null}]}}</msg>
<status status="PASS" starttime="20230912 10:09:55.332" endtime="20230912 10:09:55.333"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230912 10:09:55.334" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230912 10:09:55.333" endtime="20230912 10:09:55.334"/>
</kw>
<status status="PASS" starttime="20230912 10:09:55.310" endtime="20230912 10:09:55.334"/>
</kw>
<msg timestamp="20230912 10:09:55.334" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230912 10:09:55.310" endtime="20230912 10:09:55.335"/>
</kw>
<msg timestamp="20230912 10:09:55.335" level="INFO">${result} = {"data":{"totalCount":4,"prevKey":4,"containers":[{"ContainerID":1,"NumberOfKeys":0,"pipelines":null},{"ContainerID":2,"NumberOfKeys":0,"pipelines":null},{"ContainerID":3,"NumberOfKeys":0,"pipelines":...</msg>
<status status="PASS" starttime="20230912 10:09:55.310" endtime="20230912 10:09:55.335"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"ContainerID\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230912 10:09:55.335" endtime="20230912 10:09:55.336"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/utilization/fileCount</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230912 10:09:55.340" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20230912 10:09:55.361" level="INFO">${rc} = 0</msg>
<msg timestamp="20230912 10:09:55.361" level="INFO">${output} = [{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1},{"volume":"recon","bucket":"api","fileSize":2048,"count":10}]</msg>
<status status="PASS" starttime="20230912 10:09:55.338" endtime="20230912 10:09:55.361"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230912 10:09:55.362" level="INFO">[{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1},{"volume":"recon","bucket":"api","fileSize":2048,"count":10}]</msg>
<status status="PASS" starttime="20230912 10:09:55.362" endtime="20230912 10:09:55.362"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230912 10:09:55.363" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230912 10:09:55.363" endtime="20230912 10:09:55.363"/>
</kw>
<status status="PASS" starttime="20230912 10:09:55.337" endtime="20230912 10:09:55.363"/>
</kw>
<msg timestamp="20230912 10:09:55.363" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230912 10:09:55.337" endtime="20230912 10:09:55.364"/>
</kw>
<msg timestamp="20230912 10:09:55.364" level="INFO">${result} = [{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1},{"volume":"recon","bucket":"api","fileSize":2048,"count":10}]</msg>
<status status="PASS" starttime="20230912 10:09:55.336" endtime="20230912 10:09:55.364"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230912 10:09:55.364" endtime="20230912 10:09:55.365"/>
</kw>
<status status="PASS" starttime="20230912 10:09:55.308" endtime="20230912 10:09:55.365"/>
</kw>
<status status="PASS" starttime="20230912 10:09:44.945" endtime="20230912 10:09:55.365"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230912 10:09:18.976" endtime="20230912 10:09:55.365"/>
</test>
<test id="s1-s3-s1-t2" name="Check if Recon picks up DN heartbeats" line="71">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/datanodes</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230912 10:09:55.373" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/datanodes 2&gt;&amp;1'.</msg>
<msg timestamp="20230912 10:09:55.422" level="INFO">${rc} = 0</msg>
<msg timestamp="20230912 10:09:55.422" level="INFO">${output} = {"totalCount":6,"datanodes":[{"uuid":"8e5991b2-7011-4881-89aa-708e4ce976a4","hostname":"ozone-topology_datanode_5_1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":0,"stor...</msg>
<status status="PASS" starttime="20230912 10:09:55.369" endtime="20230912 10:09:55.422"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230912 10:09:55.423" level="INFO">{"totalCount":6,"datanodes":[{"uuid":"8e5991b2-7011-4881-89aa-708e4ce976a4","hostname":"ozone-topology_datanode_5_1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":0,"storageReport":{"capacity":89297309696,"used":14336,"remaining":14664683520},"pipelines":[{"pipelineID":"175c3262-61e4-4702-9696-66b818e4adc0","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_1_1.ozone-topology_net"},{"pipelineID":"e7c1d105-cf32-4e41-8786-39ae62d4275d","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_3_1.ozone-topology_net"},{"pipelineID":"fe59f6dd-b98c-4057-bbad-3f3da7778f0e","replicationType":"RATIS","replicationFactor":"ONE","leaderNode":"ozone-topology_datanode_5_1.ozone-topology_net"}],"containers":2,"openContainers":3,"leaderCount":1,"version":"1.4.0-SNAPSHOT","setupTime":1694513199501,"revision":"719500a659cc6ef00746f554bee3f3fbfd6558b2","buildDate":"2023-09-12T09:31Z","layoutVersion":7,"networkLocation":"/rack2"},{"uuid":"4a80216c-5b59-4ab1-a7f9-2ecaf765db10","hostname":"ozone-topology_datanode_1_1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":0,"storageReport":{"capacity":89297309696,"used":14336,"remaining":14664650752},"pipelines":[{"pipelineID":"175c3262-61e4-4702-9696-66b818e4adc0","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_1_1.ozone-topology_net"},{"pipelineID":"e7c1d105-cf32-4e41-8786-39ae62d4275d","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_3_1.ozone-topology_net"},{"pipelineID":"dbf41128-ae5f-46f1-ba58-3e5fd9ca8ac5","replicationType":"RATIS","replicationFactor":"ONE","leaderNode":"ozone-topology_datanode_1_1.ozone-topology_net"}],"containers":2,"openContainers":3,"leaderCount":2,"version":"1.4.0-SNAPSHOT","setupTime":1694513200878,"revision":"719500a659cc6ef00746f554bee3f3fbfd6558b2","buildDate":"2023-09-12T09:31Z","layoutVersion":7,"networkLocation":"/rack1"},{"uuid":"5a38f409-2833-4699-bb44-4b2fc609ba9b","hostname":"ozone-topology_datanode_4_1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":0,"storageReport":{"capacity":89297309696,"used":8192,"remaining":14664650752},"pipelines":[{"pipelineID":"c3e942fd-c280-4f10-ba04-d6fc09ebb616","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_4_1.ozone-topology_net"},{"pipelineID":"5147bfaf-0ed5-47d0-b908-fb21e84c902d","replicationType":"RATIS","replicationFactor":"ONE","leaderNode":"ozone-topology_datanode_4_1.ozone-topology_net"},{"pipelineID":"f493a702-c83b-480e-bbf0-76469e76e211","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_6_1.ozone-topology_net"}],"containers":2,"openContainers":2,"leaderCount":2,"version":"1.4.0-SNAPSHOT","setupTime":1694513201442,"revision":"719500a659cc6ef00746f554bee3f3fbfd6558b2","buildDate":"2023-09-12T09:31Z","layoutVersion":7,"networkLocation":"/rack2"},{"uuid":"3116221d-8e11-48a9-9930-43b57050a59e","hostname":"ozone-topology_datanode_3_1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":0,"storageReport":{"capacity":89297309696,"used":14336,"remaining":14812356608},"pipelines":[{"pipelineID":"175c3262-61e4-4702-9696-66b818e4adc0","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_1_1.ozone-topology_net"},{"pipelineID":"6f37a9a6-052d-4506-b374-909a444b2d8b","replicationType":"RATIS","replicationFactor":"ONE","leaderNode":"ozone-topology_datanode_3_1.ozone-topology_net"},{"pipelineID":"e7c1d105-cf32-4e41-8786-39ae62d4275d","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_3_1.ozone-topology_net"}],"containers":2,"openContainers":3,"leaderCount":2,"version":"1.4.0-SNAPSHOT","setupTime":1694513198832,"revision":"719500a659cc6ef00746f554bee3f3fbfd6558b2","buildDate":"2023-09-12T09:31Z","layoutVersion":7,"networkLocation":"/rack1"},{"uuid":"01c1ed80-cc1b-4c39-be30-fe6bd2b305d2","hostname":"ozone-topology_datanode_2_1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":0,"storageReport":{"capacity":89297309696,"used":4096,"remaining":14664650752},"pipelines":[{"pipelineID":"c3e942fd-c280-4f10-ba04-d6fc09ebb616","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_4_1.ozone-topology_net"},{"pipelineID":"72243634-b241-4d7c-866f-a3ba7aa28288","replicationType":"RATIS","replicationFactor":"ONE","leaderNode":"ozone-topology_datanode_2_1.ozone-topology_net"},{"pipelineID":"f493a702-c83b-480e-bbf0-76469e76e211","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_6_1.ozone-topology_net"}],"containers":2,"openContainers":2,"leaderCount":1,"version":"1.4.0-SNAPSHOT","setupTime":1694513200660,"revision":"719500a659cc6ef00746f554bee3f3fbfd6558b2","buildDate":"2023-09-12T09:31Z","layoutVersion":7,"networkLocation":"/rack1"},{"uuid":"700d4521-fb2f-446d-938b-2d25cc7095ad","hostname":"ozone-topology_datanode_6_1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":0,"storageReport":{"capacity":89297309696,"used":4096,"remaining":14664650752},"pipelines":[{"pipelineID":"c3e942fd-c280-4f10-ba04-d6fc09ebb616","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_4_1.ozone-topology_net"},{"pipelineID":"f493a702-c83b-480e-bbf0-76469e76e211","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_6_1.ozone-topology_net"},{"pipelineID":"61a58576-309a-4277-938c-bac56b484a08","replicationType":"RATIS","replicationFactor":"ONE","leaderNode":"ozone-topology_datanode_6_1.ozone-topology_net"}],"containers":2,"openContainers":2,"leaderCount":2,"version":"1.4.0-SNAPSHOT","setupTime":1694513201232,"revision":"719500a659cc6ef00746f554bee3f3fbfd6558b2","buildDate":"2023-09-12T09:31Z","layoutVersion":7,"networkLocation":"/rack2"}]}</msg>
<status status="PASS" starttime="20230912 10:09:55.422" endtime="20230912 10:09:55.424"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230912 10:09:55.425" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230912 10:09:55.425" endtime="20230912 10:09:55.425"/>
</kw>
<status status="PASS" starttime="20230912 10:09:55.369" endtime="20230912 10:09:55.425"/>
</kw>
<msg timestamp="20230912 10:09:55.426" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230912 10:09:55.368" endtime="20230912 10:09:55.426"/>
</kw>
<msg timestamp="20230912 10:09:55.426" level="INFO">${result} = {"totalCount":6,"datanodes":[{"uuid":"8e5991b2-7011-4881-89aa-708e4ce976a4","hostname":"ozone-topology_datanode_5_1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":0,"stor...</msg>
<status status="PASS" starttime="20230912 10:09:55.368" endtime="20230912 10:09:55.426"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>datanodes</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230912 10:09:55.426" endtime="20230912 10:09:55.427"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>datanode_1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230912 10:09:55.427" endtime="20230912 10:09:55.428"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>datanode_2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230912 10:09:55.428" endtime="20230912 10:09:55.428"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>datanode_3</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230912 10:09:55.428" endtime="20230912 10:09:55.429"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/pipelines</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230912 10:09:55.434" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/pipelines 2&gt;&amp;1'.</msg>
<msg timestamp="20230912 10:09:55.502" level="INFO">${rc} = 0</msg>
<msg timestamp="20230912 10:09:55.502" level="INFO">${output} = {"totalCount":10,"pipelines":[{"pipelineId":"c3e942fd-c280-4f10-ba04-d6fc09ebb616","status":"OPEN","leaderNode":"ozone-topology_datanode_4_1.ozone-topology_net","datanodes":[{"level":0,"parent":null,"...</msg>
<status status="PASS" starttime="20230912 10:09:55.431" endtime="20230912 10:09:55.502"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230912 10:09:55.504" level="INFO">{"totalCount":10,"pipelines":[{"pipelineId":"c3e942fd-c280-4f10-ba04-d6fc09ebb616","status":"OPEN","leaderNode":"ozone-topology_datanode_4_1.ozone-topology_net","datanodes":[{"level":0,"parent":null,"cost":0,"uuid":"5a38f409-2833-4699-bb44-4b2fc609ba9b","uuidString":"5a38f409-2833-4699-bb44-4b2fc609ba9b","ipAddress":"10.5.0.7","hostName":"ozone-topology_datanode_4_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":9864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":1123162263,"maintenance":false,"decommissioned":false,"networkName":"5a38f409-2833-4699-bb44-4b2fc609ba9b","networkLocation":"/rack2","networkFullPath":"/rack2/5a38f409-2833-4699-bb44-4b2fc609ba9b","numOfLeaves":1},{"level":0,"parent":null,"cost":0,"uuid":"01c1ed80-cc1b-4c39-be30-fe6bd2b305d2","uuidString":"01c1ed80-cc1b-4c39-be30-fe6bd2b305d2","ipAddress":"10.5.0.5","hostName":"ozone-topology_datanode_2_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":9864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":-758409764,"maintenance":false,"decommissioned":false,"networkName":"01c1ed80-cc1b-4c39-be30-fe6bd2b305d2","networkLocation":"/rack1","networkFullPath":"/rack1/01c1ed80-cc1b-4c39-be30-fe6bd2b305d2","numOfLeaves":1},{"level":0,"parent":null,"cost":0,"uuid":"700d4521-fb2f-446d-938b-2d25cc7095ad","uuidString":"700d4521-fb2f-446d-938b-2d25cc7095ad","ipAddress":"10.5.0.9","hostName":"ozone-topology_datanode_6_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":9864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":-382121155,"maintenance":false,"decommissioned":false,"networkName":"700d4521-fb2f-446d-938b-2d25cc7095ad","networkLocation":"/rack2","networkFullPath":"/rack2/700d4521-fb2f-446d-938b-2d25cc7095ad","numOfLeaves":1}],"lastLeaderElection":0,"duration":123467,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"THREE","containers":1},{"pipelineId":"72243634-b241-4d7c-866f-a3ba7aa28288","status":"OPEN","leaderNode":"ozone-topology_datanode_2_1.ozone-topology_net","datanodes":[{"level":0,"parent":null,"cost":0,"uuid":"01c1ed80-cc1b-4c39-be30-fe6bd2b305d2","uuidString":"01c1ed80-cc1b-4c39-be30-fe6bd2b305d2","ipAddress":"10.5.0.5","hostName":"ozone-topology_datanode_2_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":9864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":-758409764,"maintenance":false,"decommissioned":false,"networkName":"01c1ed80-cc1b-4c39-be30-fe6bd2b305d2","networkLocation":"/rack1","networkFullPath":"/rack1/01c1ed80-cc1b-4c39-be30-fe6bd2b305d2","numOfLeaves":1}],"lastLeaderElection":0,"duration":125381,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"ONE","containers":0},{"pipelineId":"175c3262-61e4-4702-9696-66b818e4adc0","status":"OPEN","leaderNode":"ozone-topology_datanode_1_1.ozone-topology_net","datanodes":[{"level":0,"parent":null,"cost":0,"uuid":"4a80216c-5b59-4ab1-a7f9-2ecaf765db10","uuidString":"4a80216c-5b59-4ab1-a7f9-2ecaf765db10","ipAddress":"10.5.0.4","hostName":"ozone-topology_datanode_1_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":9864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":-1168606463,"maintenance":false,"decommissioned":false,"networkName":"4a80216c-5b59-4ab1-a7f9-2ecaf765db10","networkLocation":"/rack1","networkFullPath":"/rack1/4a80216c-5b59-4ab1-a7f9-2ecaf765db10","numOfLeaves":1},{"level":0,"parent":null,"cost":0,"uuid":"8e5991b2-7011-4881-89aa-708e4ce976a4","uuidString":"8e5991b2-7011-4881-89aa-708e4ce976a4","ipAddress":"10.5.0.8","hostName":"ozone-topology_datanode_5_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":9864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":377235437,"maintenance":false,"decommissioned":false,"networkName":"8e5991b2-7011-4881-89aa-708e4ce976a4","networkLocation":"/rack2","networkFullPath":"/rack2/8e5991b2-7011-4881-89aa-708e4ce976a4","numOfLeaves":1},{"level":0,"parent":null,"cost":0,"uuid":"3116221d-8e11-48a9-9930-43b57050a59e","uuidString":"3116221d-8e11-48a9-9930-43b57050a59e","ipAddress":"10.5.0.6","hostName":"ozone-topology_datanode_3_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":9864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":917728674,"maintenance":false,"decommissioned":false,"networkName":"3116221d-8e11-48a9-9930-43b57050a59e","networkLocation":"/rack1","networkFullPath":"/rack1/3116221d-8e11-48a9-9930-43b57050a59e","numOfLeaves":1}],"lastLeaderElection":0,"duration":123555,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"THREE","containers":1},{"pipelineId":"6f37a9a6-052d-4506-b374-909a444b2d8b","status":"OPEN","leaderNode":"ozone-topology_datanode_3_1.ozone-topology_net","datanodes":[{"level":0,"parent":null,"cost":0,"uuid":"3116221d-8e11-48a9-9930-43b57050a59e","uuidString":"3116221d-8e11-48a9-9930-43b57050a59e","ipAddress":"10.5.0.6","hostName":"ozone-topology_datanode_3_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":9864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":917728674,"maintenance":false,"decommissioned":false,"networkName":"3116221d-8e11-48a9-9930-43b57050a59e","networkLocation":"/rack1","networkFullPath":"/rack1/3116221d-8e11-48a9-9930-43b57050a59e","numOfLeaves":1}],"lastLeaderElection":0,"duration":123214,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"ONE","containers":0},{"pipelineId":"5147bfaf-0ed5-47d0-b908-fb21e84c902d","status":"OPEN","leaderNode":"ozone-topology_datanode_4_1.ozone-topology_net","datanodes":[{"level":0,"parent":null,"cost":0,"uuid":"5a38f409-2833-4699-bb44-4b2fc609ba9b","uuidString":"5a38f409-2833-4699-bb44-4b2fc609ba9b","ipAddress":"10.5.0.7","hostName":"ozone-topology_datanode_4_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":9864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":1123162263,"maintenance":false,"decommissioned":false,"networkName":"5a38f409-2833-4699-bb44-4b2fc609ba9b","networkLocation":"/rack2","networkFullPath":"/rack2/5a38f409-2833-4699-bb44-4b2fc609ba9b","numOfLeaves":1}],"lastLeaderElection":0,"duration":123321,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"ONE","containers":0},{"pipelineId":"f493a702-c83b-480e-bbf0-76469e76e211","status":"OPEN","leaderNode":"ozone-topology_datanode_6_1.ozone-topology_net","datanodes":[{"level":0,"parent":null,"cost":0,"uuid":"5a38f409-2833-4699-bb44-4b2fc609ba9b","uuidString":"5a38f409-2833-4699-bb44-4b2fc609ba9b","ipAddress":"10.5.0.7","hostName":"ozone-topology_datanode_4_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":9864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":1123162263,"maintenance":false,"decommissioned":false,"networkName":"5a38f409-2833-4699-bb44-4b2fc609ba9b","networkLocation":"/rack2","networkFullPath":"/rack2/5a38f409-2833-4699-bb44-4b2fc609ba9b","numOfLeaves":1},{"level":0,"parent":null,"cost":0,"uuid":"01c1ed80-cc1b-4c39-be30-fe6bd2b305d2","uuidString":"01c1ed80-cc1b-4c39-be30-fe6bd2b305d2","ipAddress":"10.5.0.5","hostName":"ozone-topology_datanode_2_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":9864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":-758409764,"maintenance":false,"decommissioned":false,"networkName":"01c1ed80-cc1b-4c39-be30-fe6bd2b305d2","networkLocation":"/rack1","networkFullPath":"/rack1/01c1ed80-cc1b-4c39-be30-fe6bd2b305d2","numOfLeaves":1},{"level":0,"parent":null,"cost":0,"uuid":"700d4521-fb2f-446d-938b-2d25cc7095ad","uuidString":"700d4521-fb2f-446d-938b-2d25cc7095ad","ipAddress":"10.5.0.9","hostName":"ozone-topology_datanode_6_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":9864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":-382121155,"maintenance":false,"decommissioned":false,"networkName":"700d4521-fb2f-446d-938b-2d25cc7095ad","networkLocation":"/rack2","networkFullPath":"/rack2/700d4521-fb2f-446d-938b-2d25cc7095ad","numOfLeaves":1}],"lastLeaderElection":0,"duration":123261,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"THREE","containers":1},{"pipelineId":"e7c1d105-cf32-4e41-8786-39ae62d4275d","status":"OPEN","leaderNode":"ozone-topology_datanode_3_1.ozone-topology_net","datanodes":[{"level":0,"parent":null,"cost":0,"uuid":"4a80216c-5b59-4ab1-a7f9-2ecaf765db10","uuidString":"4a80216c-5b59-4ab1-a7f9-2ecaf765db10","ipAddress":"10.5.0.4","hostName":"ozone-topology_datanode_1_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":9864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":-1168606463,"maintenance":false,"decommissioned":false,"networkName":"4a80216c-5b59-4ab1-a7f9-2ecaf765db10","networkLocation":"/rack1","networkFullPath":"/rack1/4a80216c-5b59-4ab1-a7f9-2ecaf765db10","numOfLeaves":1},{"level":0,"parent":null,"cost":0,"uuid":"8e5991b2-7011-4881-89aa-708e4ce976a4","uuidString":"8e5991b2-7011-4881-89aa-708e4ce976a4","ipAddress":"10.5.0.8","hostName":"ozone-topology_datanode_5_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":9864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":377235437,"maintenance":false,"decommissioned":false,"networkName":"8e5991b2-7011-4881-89aa-708e4ce976a4","networkLocation":"/rack2","networkFullPath":"/rack2/8e5991b2-7011-4881-89aa-708e4ce976a4","numOfLeaves":1},{"level":0,"parent":null,"cost":0,"uuid":"3116221d-8e11-48a9-9930-43b57050a59e","uuidString":"3116221d-8e11-48a9-9930-43b57050a59e","ipAddress":"10.5.0.6","hostName":"ozone-topology_datanode_3_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":9864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":917728674,"maintenance":false,"decommissioned":false,"networkName":"3116221d-8e11-48a9-9930-43b57050a59e","networkLocation":"/rack1","networkFullPath":"/rack1/3116221d-8e11-48a9-9930-43b57050a59e","numOfLeaves":1}],"lastLeaderElection":0,"duration":123368,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"THREE","containers":1},{"pipelineId":"fe59f6dd-b98c-4057-bbad-3f3da7778f0e","status":"OPEN","leaderNode":"ozone-topology_datanode_5_1.ozone-topology_net","datanodes":[{"level":0,"parent":null,"cost":0,"uuid":"8e5991b2-7011-4881-89aa-708e4ce976a4","uuidString":"8e5991b2-7011-4881-89aa-708e4ce976a4","ipAddress":"10.5.0.8","hostName":"ozone-topology_datanode_5_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":9864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":377235437,"maintenance":false,"decommissioned":false,"networkName":"8e5991b2-7011-4881-89aa-708e4ce976a4","networkLocation":"/rack2","networkFullPath":"/rack2/8e5991b2-7011-4881-89aa-708e4ce976a4","numOfLeaves":1}],"lastLeaderElection":0,"duration":123424,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"ONE","containers":0},{"pipelineId":"61a58576-309a-4277-938c-bac56b484a08","status":"OPEN","leaderNode":"ozone-topology_datanode_6_1.ozone-topology_net","datanodes":[{"level":0,"parent":null,"cost":0,"uuid":"700d4521-fb2f-446d-938b-2d25cc7095ad","uuidString":"700d4521-fb2f-446d-938b-2d25cc7095ad","ipAddress":"10.5.0.9","hostName":"ozone-topology_datanode_6_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":9864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":-382121155,"maintenance":false,"decommissioned":false,"networkName":"700d4521-fb2f-446d-938b-2d25cc7095ad","networkLocation":"/rack2","networkFullPath":"/rack2/700d4521-fb2f-446d-938b-2d25cc7095ad","numOfLeaves":1}],"lastLeaderElection":0,"duration":123042,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"ONE","containers":0},{"pipelineId":"dbf41128-ae5f-46f1-ba58-3e5fd9ca8ac5","status":"OPEN","leaderNode":"ozone-topology_datanode_1_1.ozone-topology_net","datanodes":[{"level":0,"parent":null,"cost":0,"uuid":"4a80216c-5b59-4ab1-a7f9-2ecaf765db10","uuidString":"4a80216c-5b59-4ab1-a7f9-2ecaf765db10","ipAddress":"10.5.0.4","hostName":"ozone-topology_datanode_1_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":9864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":-1168606463,"maintenance":false,"decommissioned":false,"networkName":"4a80216c-5b59-4ab1-a7f9-2ecaf765db10","networkLocation":"/rack1","networkFullPath":"/rack1/4a80216c-5b59-4ab1-a7f9-2ecaf765db10","numOfLeaves":1}],"lastLeaderElection":0,"duration":123499,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"ONE","containers":0}]}</msg>
<status status="PASS" starttime="20230912 10:09:55.503" endtime="20230912 10:09:55.504"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230912 10:09:55.505" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230912 10:09:55.504" endtime="20230912 10:09:55.505"/>
</kw>
<status status="PASS" starttime="20230912 10:09:55.430" endtime="20230912 10:09:55.505"/>
</kw>
<msg timestamp="20230912 10:09:55.505" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230912 10:09:55.430" endtime="20230912 10:09:55.506"/>
</kw>
<msg timestamp="20230912 10:09:55.506" level="INFO">${result} = {"totalCount":10,"pipelines":[{"pipelineId":"c3e942fd-c280-4f10-ba04-d6fc09ebb616","status":"OPEN","leaderNode":"ozone-topology_datanode_4_1.ozone-topology_net","datanodes":[{"level":0,"parent":null,"...</msg>
<status status="PASS" starttime="20230912 10:09:55.429" endtime="20230912 10:09:55.506"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>pipelines</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230912 10:09:55.506" endtime="20230912 10:09:55.507"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230912 10:09:55.507" endtime="20230912 10:09:55.507"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>OPEN</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230912 10:09:55.507" endtime="20230912 10:09:55.508"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>datanode_1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230912 10:09:55.508" endtime="20230912 10:09:55.509"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>datanode_2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230912 10:09:55.509" endtime="20230912 10:09:55.509"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>datanode_3</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230912 10:09:55.510" endtime="20230912 10:09:55.510"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/clusterState</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230912 10:09:55.515" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/clusterState 2&gt;&amp;1'.</msg>
<msg timestamp="20230912 10:09:55.587" level="INFO">${rc} = 0</msg>
<msg timestamp="20230912 10:09:55.587" level="INFO">${output} = {"deletedDirs":0,"pipelines":10,"totalDatanodes":6,"healthyDatanodes":6,"storageReport":{"capacity":535783858176,"used":59392,"remaining":88135643136},"containers":4,"missingContainers":0,"openContain...</msg>
<status status="PASS" starttime="20230912 10:09:55.512" endtime="20230912 10:09:55.587"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230912 10:09:55.589" level="INFO">{"deletedDirs":0,"pipelines":10,"totalDatanodes":6,"healthyDatanodes":6,"storageReport":{"capacity":535783858176,"used":59392,"remaining":88135643136},"containers":4,"missingContainers":0,"openContainers":4,"deletedContainers":0,"volumes":3,"buckets":2,"keys":11,"keysPendingDeletion":0}</msg>
<status status="PASS" starttime="20230912 10:09:55.588" endtime="20230912 10:09:55.589"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230912 10:09:55.590" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230912 10:09:55.589" endtime="20230912 10:09:55.590"/>
</kw>
<status status="PASS" starttime="20230912 10:09:55.511" endtime="20230912 10:09:55.590"/>
</kw>
<msg timestamp="20230912 10:09:55.590" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230912 10:09:55.511" endtime="20230912 10:09:55.590"/>
</kw>
<msg timestamp="20230912 10:09:55.591" level="INFO">${result} = {"deletedDirs":0,"pipelines":10,"totalDatanodes":6,"healthyDatanodes":6,"storageReport":{"capacity":535783858176,"used":59392,"remaining":88135643136},"containers":4,"missingContainers":0,"openContain...</msg>
<status status="PASS" starttime="20230912 10:09:55.510" endtime="20230912 10:09:55.591"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"totalDatanodes\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230912 10:09:55.592" endtime="20230912 10:09:55.592"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"healthyDatanodes\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230912 10:09:55.593" endtime="20230912 10:09:55.593"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"pipelines\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230912 10:09:55.593" endtime="20230912 10:09:55.595"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/containers/1/replicaHistory</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230912 10:09:55.600" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/containers/1/replicaHistory 2&gt;&amp;1'.</msg>
<msg timestamp="20230912 10:09:55.626" level="INFO">${rc} = 0</msg>
<msg timestamp="20230912 10:09:55.627" level="INFO">${output} = [{"containerId":1,"datanodeUuid":"4a80216c-5b59-4ab1-a7f9-2ecaf765db10","datanodeHost":"ozone-topology_datanode_1_1.ozone-topology_net","firstSeenTime":1694513316358,"lastSeenTime":1694513316358,"stat...</msg>
<status status="PASS" starttime="20230912 10:09:55.597" endtime="20230912 10:09:55.627"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230912 10:09:55.629" level="INFO">[{"containerId":1,"datanodeUuid":"4a80216c-5b59-4ab1-a7f9-2ecaf765db10","datanodeHost":"ozone-topology_datanode_1_1.ozone-topology_net","firstSeenTime":1694513316358,"lastSeenTime":1694513316358,"state":"OPEN","lastBcsId":0},{"containerId":1,"datanodeUuid":"8e5991b2-7011-4881-89aa-708e4ce976a4","datanodeHost":"ozone-topology_datanode_5_1.ozone-topology_net","firstSeenTime":1694513316484,"lastSeenTime":1694513316484,"state":"OPEN","lastBcsId":0},{"containerId":1,"datanodeUuid":"3116221d-8e11-48a9-9930-43b57050a59e","datanodeHost":"ozone-topology_datanode_3_1.ozone-topology_net","firstSeenTime":1694513316162,"lastSeenTime":1694513316162,"state":"OPEN","lastBcsId":0}]</msg>
<status status="PASS" starttime="20230912 10:09:55.627" endtime="20230912 10:09:55.629"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230912 10:09:55.629" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230912 10:09:55.629" endtime="20230912 10:09:55.630"/>
</kw>
<status status="PASS" starttime="20230912 10:09:55.596" endtime="20230912 10:09:55.630"/>
</kw>
<msg timestamp="20230912 10:09:55.630" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230912 10:09:55.596" endtime="20230912 10:09:55.630"/>
</kw>
<msg timestamp="20230912 10:09:55.631" level="INFO">${result} = [{"containerId":1,"datanodeUuid":"4a80216c-5b59-4ab1-a7f9-2ecaf765db10","datanodeHost":"ozone-topology_datanode_1_1.ozone-topology_net","firstSeenTime":1694513316358,"lastSeenTime":1694513316358,"stat...</msg>
<status status="PASS" starttime="20230912 10:09:55.595" endtime="20230912 10:09:55.631"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"containerId\":1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230912 10:09:55.631" endtime="20230912 10:09:55.632"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230912 10:09:55.367" endtime="20230912 10:09:55.632"/>
</test>
<test id="s1-s3-s1-t3" name="Check if Recon Web UI is up" line="94">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230912 10:09:55.635" endtime="20230912 10:09:55.635"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${ENDPOINT_URL}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230912 10:09:55.640" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888 2&gt;&amp;1'.</msg>
<msg timestamp="20230912 10:09:55.663" level="INFO">${rc} = 0</msg>
<msg timestamp="20230912 10:09:55.663" level="INFO">${output} = &lt;!doctype html&gt;&lt;html lang="en"&gt;&lt;head&gt;&lt;meta charset="utf-8"/&gt;&lt;link rel="shortcut icon" href="/favicon.ico"/&gt;&lt;meta name="viewport" content="width=device-width,initial-scale=1"/&gt;&lt;meta name="theme-color" ...</msg>
<status status="PASS" starttime="20230912 10:09:55.637" endtime="20230912 10:09:55.664"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230912 10:09:55.665" level="INFO">&lt;!doctype html&gt;&lt;html lang="en"&gt;&lt;head&gt;&lt;meta charset="utf-8"/&gt;&lt;link rel="shortcut icon" href="/favicon.ico"/&gt;&lt;meta name="viewport" content="width=device-width,initial-scale=1"/&gt;&lt;meta name="theme-color" content="#000000"/&gt;&lt;link rel="manifest" href="/manifest.json"/&gt;&lt;title&gt;Ozone Recon&lt;/title&gt;&lt;link href="/static/css/2.58b4e004.chunk.css" rel="stylesheet"&gt;&lt;link href="/static/css/main.95934262.chunk.css" rel="stylesheet"&gt;&lt;/head&gt;&lt;body&gt;&lt;noscript&gt;You need to enable JavaScript to run this app.&lt;/noscript&gt;&lt;div id="root"&gt;&lt;/div&gt;&lt;script&gt;!function(e){function r(r){for(var n,l,f=r[0],i=r[1],a=r[2],p=0,s=[];p&lt;f.length;p++)l=f[p],Object.prototype.hasOwnProperty.call(o,l)&amp;&amp;o[l]&amp;&amp;s.push(o[l][0]),o[l]=0;for(n in i)Object.prototype.hasOwnProperty.call(i,n)&amp;&amp;(e[n]=i[n]);for(c&amp;&amp;c(r);s.length;)s.shift()();return u.push.apply(u,a||[]),t()}function t(){for(var e,r=0;r&lt;u.length;r++){for(var t=u[r],n=!0,f=1;f&lt;t.length;f++){var i=t[f];0!==o[i]&amp;&amp;(n=!1)}n&amp;&amp;(u.splice(r--,1),e=l(l.s=t[0]))}return e}var n={},o={1:0},u=[];function l(r){if(n[r])return n[r].exports;var t=n[r]={i:r,l:!1,exports:{}};return e[r].call(t.exports,t,t.exports,l),t.l=!0,t.exports}l.m=e,l.c=n,l.d=function(e,r,t){l.o(e,r)||Object.defineProperty(e,r,{enumerable:!0,get:t})},l.r=function(e){"undefined"!=typeof Symbol&amp;&amp;Symbol.toStringTag&amp;&amp;Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},l.t=function(e,r){if(1&amp;r&amp;&amp;(e=l(e)),8&amp;r)return e;if(4&amp;r&amp;&amp;"object"==typeof e&amp;&amp;e&amp;&amp;e.__esModule)return e;var t=Object.create(null);if(l.r(t),Object.defineProperty(t,"default",{enumerable:!0,value:e}),2&amp;r&amp;&amp;"string"!=typeof e)for(var n in e)l.d(t,n,function(r){return e[r]}.bind(null,n));return t},l.n=function(e){var r=e&amp;&amp;e.__esModule?function(){return e.default}:function(){return e};return l.d(r,"a",r),r},l.o=function(e,r){return Object.prototype.hasOwnProperty.call(e,r)},l.p="/";var f=this["webpackJsonpozone-recon"]=this["webpackJsonpozone-recon"]||[],i=f.push.bind(f);f.push=r,f=f.slice();for(var a=0;a&lt;f.length;a++)r(f[a]);var c=i;t()}([])&lt;/script&gt;&lt;script src="/static/js/2.60ad2f10.chunk.js"&gt;&lt;/script&gt;&lt;script src="/static/js/main.24b3bdf2.chunk.js"&gt;&lt;/script&gt;&lt;/body&gt;&lt;/html&gt;</msg>
<status status="PASS" starttime="20230912 10:09:55.664" endtime="20230912 10:09:55.665"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230912 10:09:55.666" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230912 10:09:55.665" endtime="20230912 10:09:55.666"/>
</kw>
<status status="PASS" starttime="20230912 10:09:55.636" endtime="20230912 10:09:55.666"/>
</kw>
<msg timestamp="20230912 10:09:55.666" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230912 10:09:55.636" endtime="20230912 10:09:55.666"/>
</kw>
<msg timestamp="20230912 10:09:55.667" level="INFO">${result} = &lt;!doctype html&gt;&lt;html lang="en"&gt;&lt;head&gt;&lt;meta charset="utf-8"/&gt;&lt;link rel="shortcut icon" href="/favicon.ico"/&gt;&lt;meta name="viewport" content="width=device-width,initial-scale=1"/&gt;&lt;meta name="theme-color" ...</msg>
<status status="PASS" starttime="20230912 10:09:55.635" endtime="20230912 10:09:55.667"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Ozone Recon</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230912 10:09:55.667" endtime="20230912 10:09:55.668"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230912 10:09:55.634" endtime="20230912 10:09:55.668"/>
</test>
<test id="s1-s3-s1-t4" name="Check web UI access" line="99">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230912 10:09:55.679" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20230912 10:09:55.693" level="INFO">${rc} = 0</msg>
<msg timestamp="20230912 10:09:55.693" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230912 10:09:55.676" endtime="20230912 10:09:55.694"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230912 10:09:55.695" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230912 10:09:55.694" endtime="20230912 10:09:55.695"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230912 10:09:55.696" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230912 10:09:55.695" endtime="20230912 10:09:55.696"/>
</kw>
<status status="PASS" starttime="20230912 10:09:55.676" endtime="20230912 10:09:55.696"/>
</kw>
<msg timestamp="20230912 10:09:55.696" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230912 10:09:55.675" endtime="20230912 10:09:55.696"/>
</kw>
<status status="PASS" starttime="20230912 10:09:55.675" endtime="20230912 10:09:55.696"/>
</kw>
<kw name="Check http return code">
<arg>${ENDPOINT_URL}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230912 10:09:55.702" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888 2&gt;&amp;1'.</msg>
<msg timestamp="20230912 10:09:55.717" level="INFO">${rc} = 0</msg>
<msg timestamp="20230912 10:09:55.717" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230912 10:09:55.699" endtime="20230912 10:09:55.717"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230912 10:09:55.718" level="INFO">200</msg>
<status status="PASS" starttime="20230912 10:09:55.718" endtime="20230912 10:09:55.719"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230912 10:09:55.719" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230912 10:09:55.719" endtime="20230912 10:09:55.719"/>
</kw>
<status status="PASS" starttime="20230912 10:09:55.699" endtime="20230912 10:09:55.720"/>
</kw>
<msg timestamp="20230912 10:09:55.720" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230912 10:09:55.698" endtime="20230912 10:09:55.720"/>
</kw>
<msg timestamp="20230912 10:09:55.720" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230912 10:09:55.698" endtime="20230912 10:09:55.720"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230912 10:09:55.721" endtime="20230912 10:09:55.721"/>
</kw>
<status status="NOT RUN" starttime="20230912 10:09:55.720" endtime="20230912 10:09:55.721"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230912 10:09:55.721" endtime="20230912 10:09:55.722"/>
</kw>
<status status="PASS" starttime="20230912 10:09:55.721" endtime="20230912 10:09:55.722"/>
</branch>
<status status="PASS" starttime="20230912 10:09:55.720" endtime="20230912 10:09:55.722"/>
</if>
<status status="PASS" starttime="20230912 10:09:55.697" endtime="20230912 10:09:55.722"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230912 10:09:55.723" endtime="20230912 10:09:55.723"/>
</kw>
<status status="PASS" starttime="20230912 10:09:55.723" endtime="20230912 10:09:55.724"/>
</kw>
<kw name="Check http return code">
<arg>${ENDPOINT_URL}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230912 10:09:55.728" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888 2&gt;&amp;1'.</msg>
<msg timestamp="20230912 10:09:55.743" level="INFO">${rc} = 0</msg>
<msg timestamp="20230912 10:09:55.743" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230912 10:09:55.726" endtime="20230912 10:09:55.743"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230912 10:09:55.744" level="INFO">200</msg>
<status status="PASS" starttime="20230912 10:09:55.744" endtime="20230912 10:09:55.744"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230912 10:09:55.745" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230912 10:09:55.745" endtime="20230912 10:09:55.745"/>
</kw>
<status status="PASS" starttime="20230912 10:09:55.725" endtime="20230912 10:09:55.746"/>
</kw>
<msg timestamp="20230912 10:09:55.746" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230912 10:09:55.725" endtime="20230912 10:09:55.746"/>
</kw>
<msg timestamp="20230912 10:09:55.747" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230912 10:09:55.724" endtime="20230912 10:09:55.747"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230912 10:09:55.748" endtime="20230912 10:09:55.748"/>
</kw>
<status status="NOT RUN" starttime="20230912 10:09:55.748" endtime="20230912 10:09:55.748"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230912 10:09:55.749" endtime="20230912 10:09:55.749"/>
</kw>
<status status="PASS" starttime="20230912 10:09:55.748" endtime="20230912 10:09:55.749"/>
</branch>
<status status="PASS" starttime="20230912 10:09:55.747" endtime="20230912 10:09:55.749"/>
</if>
<status status="PASS" starttime="20230912 10:09:55.724" endtime="20230912 10:09:55.749"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230912 10:09:55.673" endtime="20230912 10:09:55.750"/>
</test>
<test id="s1-s3-s1-t5" name="Check admin only api access" line="107">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230912 10:09:55.756" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20230912 10:09:55.760" level="INFO">${rc} = 0</msg>
<msg timestamp="20230912 10:09:55.760" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230912 10:09:55.754" endtime="20230912 10:09:55.761"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230912 10:09:55.762" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230912 10:09:55.761" endtime="20230912 10:09:55.762"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230912 10:09:55.763" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230912 10:09:55.762" endtime="20230912 10:09:55.763"/>
</kw>
<status status="PASS" starttime="20230912 10:09:55.753" endtime="20230912 10:09:55.763"/>
</kw>
<msg timestamp="20230912 10:09:55.763" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230912 10:09:55.753" endtime="20230912 10:09:55.763"/>
</kw>
<status status="PASS" starttime="20230912 10:09:55.752" endtime="20230912 10:09:55.763"/>
</kw>
<kw name="Check http return code">
<arg>${ADMIN_API_ENDPOINT_URL}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230912 10:09:55.768" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20230912 10:09:55.785" level="INFO">${rc} = 0</msg>
<msg timestamp="20230912 10:09:55.785" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230912 10:09:55.766" endtime="20230912 10:09:55.785"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230912 10:09:55.787" level="INFO">200</msg>
<status status="PASS" starttime="20230912 10:09:55.786" endtime="20230912 10:09:55.787"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230912 10:09:55.788" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230912 10:09:55.787" endtime="20230912 10:09:55.788"/>
</kw>
<status status="PASS" starttime="20230912 10:09:55.766" endtime="20230912 10:09:55.788"/>
</kw>
<msg timestamp="20230912 10:09:55.788" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230912 10:09:55.765" endtime="20230912 10:09:55.788"/>
</kw>
<msg timestamp="20230912 10:09:55.788" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230912 10:09:55.764" endtime="20230912 10:09:55.789"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230912 10:09:55.789" endtime="20230912 10:09:55.789"/>
</kw>
<status status="NOT RUN" starttime="20230912 10:09:55.789" endtime="20230912 10:09:55.789"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230912 10:09:55.790" endtime="20230912 10:09:55.790"/>
</kw>
<status status="PASS" starttime="20230912 10:09:55.789" endtime="20230912 10:09:55.790"/>
</branch>
<status status="PASS" starttime="20230912 10:09:55.789" endtime="20230912 10:09:55.790"/>
</if>
<status status="PASS" starttime="20230912 10:09:55.764" endtime="20230912 10:09:55.790"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230912 10:09:55.791" endtime="20230912 10:09:55.792"/>
</kw>
<status status="PASS" starttime="20230912 10:09:55.791" endtime="20230912 10:09:55.792"/>
</kw>
<kw name="Check http return code">
<arg>${ADMIN_API_ENDPOINT_URL}</arg>
<arg>403</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230912 10:09:55.797" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20230912 10:09:55.812" level="INFO">${rc} = 0</msg>
<msg timestamp="20230912 10:09:55.812" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230912 10:09:55.794" endtime="20230912 10:09:55.812"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230912 10:09:55.813" level="INFO">200</msg>
<status status="PASS" starttime="20230912 10:09:55.813" endtime="20230912 10:09:55.813"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230912 10:09:55.814" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230912 10:09:55.813" endtime="20230912 10:09:55.814"/>
</kw>
<status status="PASS" starttime="20230912 10:09:55.794" endtime="20230912 10:09:55.814"/>
</kw>
<msg timestamp="20230912 10:09:55.814" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230912 10:09:55.793" endtime="20230912 10:09:55.814"/>
</kw>
<msg timestamp="20230912 10:09:55.815" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230912 10:09:55.793" endtime="20230912 10:09:55.815"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230912 10:09:55.815" endtime="20230912 10:09:55.815"/>
</kw>
<status status="NOT RUN" starttime="20230912 10:09:55.815" endtime="20230912 10:09:55.815"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230912 10:09:55.816" endtime="20230912 10:09:55.816"/>
</kw>
<status status="PASS" starttime="20230912 10:09:55.815" endtime="20230912 10:09:55.816"/>
</branch>
<status status="PASS" starttime="20230912 10:09:55.815" endtime="20230912 10:09:55.816"/>
</if>
<status status="PASS" starttime="20230912 10:09:55.792" endtime="20230912 10:09:55.816"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230912 10:09:55.817" endtime="20230912 10:09:55.817"/>
</kw>
<status status="PASS" starttime="20230912 10:09:55.816" endtime="20230912 10:09:55.817"/>
</kw>
<kw name="Check http return code">
<arg>${ADMIN_API_ENDPOINT_URL}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230912 10:09:55.822" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20230912 10:09:55.836" level="INFO">${rc} = 0</msg>
<msg timestamp="20230912 10:09:55.836" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230912 10:09:55.819" endtime="20230912 10:09:55.836"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230912 10:09:55.837" level="INFO">200</msg>
<status status="PASS" starttime="20230912 10:09:55.837" endtime="20230912 10:09:55.838"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230912 10:09:55.838" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230912 10:09:55.838" endtime="20230912 10:09:55.838"/>
</kw>
<status status="PASS" starttime="20230912 10:09:55.819" endtime="20230912 10:09:55.839"/>
</kw>
<msg timestamp="20230912 10:09:55.839" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230912 10:09:55.818" endtime="20230912 10:09:55.839"/>
</kw>
<msg timestamp="20230912 10:09:55.839" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230912 10:09:55.818" endtime="20230912 10:09:55.839"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230912 10:09:55.840" endtime="20230912 10:09:55.840"/>
</kw>
<status status="NOT RUN" starttime="20230912 10:09:55.839" endtime="20230912 10:09:55.840"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230912 10:09:55.840" endtime="20230912 10:09:55.841"/>
</kw>
<status status="PASS" starttime="20230912 10:09:55.840" endtime="20230912 10:09:55.841"/>
</branch>
<status status="PASS" starttime="20230912 10:09:55.839" endtime="20230912 10:09:55.841"/>
</if>
<status status="PASS" starttime="20230912 10:09:55.817" endtime="20230912 10:09:55.841"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230912 10:09:55.842" endtime="20230912 10:09:55.842"/>
</kw>
<status status="PASS" starttime="20230912 10:09:55.841" endtime="20230912 10:09:55.842"/>
</kw>
<kw name="Check http return code">
<arg>${ADMIN_API_ENDPOINT_URL}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230912 10:09:55.847" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20230912 10:09:55.864" level="INFO">${rc} = 0</msg>
<msg timestamp="20230912 10:09:55.864" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230912 10:09:55.844" endtime="20230912 10:09:55.864"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230912 10:09:55.865" level="INFO">200</msg>
<status status="PASS" starttime="20230912 10:09:55.865" endtime="20230912 10:09:55.866"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230912 10:09:55.866" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230912 10:09:55.866" endtime="20230912 10:09:55.866"/>
</kw>
<status status="PASS" starttime="20230912 10:09:55.844" endtime="20230912 10:09:55.867"/>
</kw>
<msg timestamp="20230912 10:09:55.867" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230912 10:09:55.843" endtime="20230912 10:09:55.867"/>
</kw>
<msg timestamp="20230912 10:09:55.867" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230912 10:09:55.843" endtime="20230912 10:09:55.867"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230912 10:09:55.868" endtime="20230912 10:09:55.868"/>
</kw>
<status status="NOT RUN" starttime="20230912 10:09:55.867" endtime="20230912 10:09:55.868"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230912 10:09:55.868" endtime="20230912 10:09:55.868"/>
</kw>
<status status="PASS" starttime="20230912 10:09:55.868" endtime="20230912 10:09:55.869"/>
</branch>
<status status="PASS" starttime="20230912 10:09:55.867" endtime="20230912 10:09:55.869"/>
</if>
<status status="PASS" starttime="20230912 10:09:55.842" endtime="20230912 10:09:55.869"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230912 10:09:55.751" endtime="20230912 10:09:55.870"/>
</test>
<test id="s1-s3-s1-t6" name="Check unhealthy, (admin) api access" line="120">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230912 10:09:55.877" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20230912 10:09:55.880" level="INFO">${rc} = 0</msg>
<msg timestamp="20230912 10:09:55.880" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230912 10:09:55.874" endtime="20230912 10:09:55.880"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230912 10:09:55.881" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230912 10:09:55.880" endtime="20230912 10:09:55.881"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230912 10:09:55.882" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230912 10:09:55.882" endtime="20230912 10:09:55.882"/>
</kw>
<status status="PASS" starttime="20230912 10:09:55.873" endtime="20230912 10:09:55.882"/>
</kw>
<msg timestamp="20230912 10:09:55.882" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230912 10:09:55.873" endtime="20230912 10:09:55.883"/>
</kw>
<status status="PASS" starttime="20230912 10:09:55.872" endtime="20230912 10:09:55.883"/>
</kw>
<kw name="Check http return code">
<arg>${UNHEALTHY_ENDPOINT_URL}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230912 10:09:55.888" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers/unhealthy 2&gt;&amp;1'.</msg>
<msg timestamp="20230912 10:09:55.928" level="INFO">${rc} = 0</msg>
<msg timestamp="20230912 10:09:55.929" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230912 10:09:55.885" endtime="20230912 10:09:55.929"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230912 10:09:55.930" level="INFO">200</msg>
<status status="PASS" starttime="20230912 10:09:55.929" endtime="20230912 10:09:55.930"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230912 10:09:55.931" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230912 10:09:55.931" endtime="20230912 10:09:55.931"/>
</kw>
<status status="PASS" starttime="20230912 10:09:55.885" endtime="20230912 10:09:55.932"/>
</kw>
<msg timestamp="20230912 10:09:55.932" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230912 10:09:55.884" endtime="20230912 10:09:55.932"/>
</kw>
<msg timestamp="20230912 10:09:55.932" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230912 10:09:55.884" endtime="20230912 10:09:55.932"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230912 10:09:55.933" endtime="20230912 10:09:55.933"/>
</kw>
<status status="NOT RUN" starttime="20230912 10:09:55.933" endtime="20230912 10:09:55.933"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230912 10:09:55.934" endtime="20230912 10:09:55.934"/>
</kw>
<status status="PASS" starttime="20230912 10:09:55.934" endtime="20230912 10:09:55.934"/>
</branch>
<status status="PASS" starttime="20230912 10:09:55.933" endtime="20230912 10:09:55.934"/>
</if>
<status status="PASS" starttime="20230912 10:09:55.883" endtime="20230912 10:09:55.934"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230912 10:09:55.935" endtime="20230912 10:09:55.936"/>
</kw>
<status status="PASS" starttime="20230912 10:09:55.935" endtime="20230912 10:09:55.936"/>
</kw>
<kw name="Check http return code">
<arg>${UNHEALTHY_ENDPOINT_URL}</arg>
<arg>403</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230912 10:09:55.941" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers/unhealthy 2&gt;&amp;1'.</msg>
<msg timestamp="20230912 10:09:55.963" level="INFO">${rc} = 0</msg>
<msg timestamp="20230912 10:09:55.963" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230912 10:09:55.938" endtime="20230912 10:09:55.963"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230912 10:09:55.964" level="INFO">200</msg>
<status status="PASS" starttime="20230912 10:09:55.964" endtime="20230912 10:09:55.964"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230912 10:09:55.966" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230912 10:09:55.965" endtime="20230912 10:09:55.966"/>
</kw>
<status status="PASS" starttime="20230912 10:09:55.937" endtime="20230912 10:09:55.966"/>
</kw>
<msg timestamp="20230912 10:09:55.966" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230912 10:09:55.937" endtime="20230912 10:09:55.966"/>
</kw>
<msg timestamp="20230912 10:09:55.967" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230912 10:09:55.936" endtime="20230912 10:09:55.967"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230912 10:09:55.967" endtime="20230912 10:09:55.967"/>
</kw>
<status status="NOT RUN" starttime="20230912 10:09:55.967" endtime="20230912 10:09:55.967"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230912 10:09:55.968" endtime="20230912 10:09:55.968"/>
</kw>
<status status="PASS" starttime="20230912 10:09:55.968" endtime="20230912 10:09:55.968"/>
</branch>
<status status="PASS" starttime="20230912 10:09:55.967" endtime="20230912 10:09:55.968"/>
</if>
<status status="PASS" starttime="20230912 10:09:55.936" endtime="20230912 10:09:55.968"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230912 10:09:55.969" endtime="20230912 10:09:55.970"/>
</kw>
<status status="PASS" starttime="20230912 10:09:55.969" endtime="20230912 10:09:55.970"/>
</kw>
<kw name="Check http return code">
<arg>${UNHEALTHY_ENDPOINT_URL}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230912 10:09:55.975" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers/unhealthy 2&gt;&amp;1'.</msg>
<msg timestamp="20230912 10:09:55.996" level="INFO">${rc} = 0</msg>
<msg timestamp="20230912 10:09:55.996" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230912 10:09:55.972" endtime="20230912 10:09:55.996"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230912 10:09:55.997" level="INFO">200</msg>
<status status="PASS" starttime="20230912 10:09:55.997" endtime="20230912 10:09:55.997"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230912 10:09:55.998" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230912 10:09:55.998" endtime="20230912 10:09:55.998"/>
</kw>
<status status="PASS" starttime="20230912 10:09:55.971" endtime="20230912 10:09:55.998"/>
</kw>
<msg timestamp="20230912 10:09:55.998" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230912 10:09:55.971" endtime="20230912 10:09:55.998"/>
</kw>
<msg timestamp="20230912 10:09:55.999" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230912 10:09:55.970" endtime="20230912 10:09:55.999"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230912 10:09:55.999" endtime="20230912 10:09:55.999"/>
</kw>
<status status="NOT RUN" starttime="20230912 10:09:55.999" endtime="20230912 10:09:55.999"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230912 10:09:55.999" endtime="20230912 10:09:56.000"/>
</kw>
<status status="PASS" starttime="20230912 10:09:55.999" endtime="20230912 10:09:56.000"/>
</branch>
<status status="PASS" starttime="20230912 10:09:55.999" endtime="20230912 10:09:56.000"/>
</if>
<status status="PASS" starttime="20230912 10:09:55.970" endtime="20230912 10:09:56.000"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230912 10:09:56.001" endtime="20230912 10:09:56.001"/>
</kw>
<status status="PASS" starttime="20230912 10:09:56.001" endtime="20230912 10:09:56.002"/>
</kw>
<kw name="Check http return code">
<arg>${UNHEALTHY_ENDPOINT_URL}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230912 10:09:56.006" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers/unhealthy 2&gt;&amp;1'.</msg>
<msg timestamp="20230912 10:09:56.023" level="INFO">${rc} = 0</msg>
<msg timestamp="20230912 10:09:56.023" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230912 10:09:56.004" endtime="20230912 10:09:56.023"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230912 10:09:56.031" level="INFO">200</msg>
<status status="PASS" starttime="20230912 10:09:56.023" endtime="20230912 10:09:56.031"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230912 10:09:56.032" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230912 10:09:56.031" endtime="20230912 10:09:56.032"/>
</kw>
<status status="PASS" starttime="20230912 10:09:56.003" endtime="20230912 10:09:56.032"/>
</kw>
<msg timestamp="20230912 10:09:56.032" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230912 10:09:56.003" endtime="20230912 10:09:56.033"/>
</kw>
<msg timestamp="20230912 10:09:56.033" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230912 10:09:56.002" endtime="20230912 10:09:56.033"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230912 10:09:56.034" endtime="20230912 10:09:56.034"/>
</kw>
<status status="NOT RUN" starttime="20230912 10:09:56.033" endtime="20230912 10:09:56.034"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230912 10:09:56.034" endtime="20230912 10:09:56.035"/>
</kw>
<status status="PASS" starttime="20230912 10:09:56.034" endtime="20230912 10:09:56.035"/>
</branch>
<status status="PASS" starttime="20230912 10:09:56.033" endtime="20230912 10:09:56.035"/>
</if>
<status status="PASS" starttime="20230912 10:09:56.002" endtime="20230912 10:09:56.035"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230912 10:09:55.871" endtime="20230912 10:09:56.035"/>
</test>
<test id="s1-s3-s1-t7" name="Check normal api access" line="133">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230912 10:09:56.043" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20230912 10:09:56.047" level="INFO">${rc} = 0</msg>
<msg timestamp="20230912 10:09:56.047" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230912 10:09:56.040" endtime="20230912 10:09:56.047"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230912 10:09:56.049" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230912 10:09:56.048" endtime="20230912 10:09:56.049"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230912 10:09:56.050" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230912 10:09:56.049" endtime="20230912 10:09:56.050"/>
</kw>
<status status="PASS" starttime="20230912 10:09:56.039" endtime="20230912 10:09:56.050"/>
</kw>
<msg timestamp="20230912 10:09:56.050" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230912 10:09:56.039" endtime="20230912 10:09:56.050"/>
</kw>
<status status="PASS" starttime="20230912 10:09:56.038" endtime="20230912 10:09:56.050"/>
</kw>
<kw name="Check http return code">
<arg>${NON_ADMIN_API_ENDPOINT_URL}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230912 10:09:56.055" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/clusterState 2&gt;&amp;1'.</msg>
<msg timestamp="20230912 10:09:56.093" level="INFO">${rc} = 0</msg>
<msg timestamp="20230912 10:09:56.093" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230912 10:09:56.053" endtime="20230912 10:09:56.093"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230912 10:09:56.094" level="INFO">200</msg>
<status status="PASS" starttime="20230912 10:09:56.094" endtime="20230912 10:09:56.095"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230912 10:09:56.095" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230912 10:09:56.095" endtime="20230912 10:09:56.096"/>
</kw>
<status status="PASS" starttime="20230912 10:09:56.052" endtime="20230912 10:09:56.096"/>
</kw>
<msg timestamp="20230912 10:09:56.096" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230912 10:09:56.052" endtime="20230912 10:09:56.096"/>
</kw>
<msg timestamp="20230912 10:09:56.096" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230912 10:09:56.051" endtime="20230912 10:09:56.096"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230912 10:09:56.097" endtime="20230912 10:09:56.097"/>
</kw>
<status status="NOT RUN" starttime="20230912 10:09:56.097" endtime="20230912 10:09:56.097"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230912 10:09:56.097" endtime="20230912 10:09:56.098"/>
</kw>
<status status="PASS" starttime="20230912 10:09:56.097" endtime="20230912 10:09:56.098"/>
</branch>
<status status="PASS" starttime="20230912 10:09:56.096" endtime="20230912 10:09:56.099"/>
</if>
<status status="PASS" starttime="20230912 10:09:56.051" endtime="20230912 10:09:56.099"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230912 10:09:56.100" endtime="20230912 10:09:56.100"/>
</kw>
<status status="PASS" starttime="20230912 10:09:56.099" endtime="20230912 10:09:56.100"/>
</kw>
<kw name="Check http return code">
<arg>${NON_ADMIN_API_ENDPOINT_URL}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230912 10:09:56.105" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/clusterState 2&gt;&amp;1'.</msg>
<msg timestamp="20230912 10:09:56.134" level="INFO">${rc} = 0</msg>
<msg timestamp="20230912 10:09:56.134" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230912 10:09:56.103" endtime="20230912 10:09:56.134"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230912 10:09:56.136" level="INFO">200</msg>
<status status="PASS" starttime="20230912 10:09:56.135" endtime="20230912 10:09:56.136"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230912 10:09:56.136" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230912 10:09:56.136" endtime="20230912 10:09:56.137"/>
</kw>
<status status="PASS" starttime="20230912 10:09:56.102" endtime="20230912 10:09:56.137"/>
</kw>
<msg timestamp="20230912 10:09:56.137" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230912 10:09:56.102" endtime="20230912 10:09:56.137"/>
</kw>
<msg timestamp="20230912 10:09:56.137" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230912 10:09:56.101" endtime="20230912 10:09:56.137"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230912 10:09:56.139" endtime="20230912 10:09:56.139"/>
</kw>
<status status="NOT RUN" starttime="20230912 10:09:56.138" endtime="20230912 10:09:56.139"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230912 10:09:56.139" endtime="20230912 10:09:56.140"/>
</kw>
<status status="PASS" starttime="20230912 10:09:56.139" endtime="20230912 10:09:56.140"/>
</branch>
<status status="PASS" starttime="20230912 10:09:56.137" endtime="20230912 10:09:56.140"/>
</if>
<status status="PASS" starttime="20230912 10:09:56.100" endtime="20230912 10:09:56.140"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230912 10:09:56.037" endtime="20230912 10:09:56.140"/>
</test>
<doc>Smoke test to start cluster with docker-compose environments.</doc>
<status status="PASS" starttime="20230912 10:09:18.936" endtime="20230912 10:09:56.142"/>
</suite>
<suite id="s1-s3-s2" name="Recon-Nssummary" source="/opt/hadoop/smoketest/recon/recon-nssummary.robot">
<test id="s1-s3-s2-t1" name="Check volume creation" line="99">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230912 10:09:56.161" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20230912 10:09:56.165" level="INFO">${rc} = 0</msg>
<msg timestamp="20230912 10:09:56.165" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230912 10:09:56.157" endtime="20230912 10:09:56.165"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230912 10:09:56.167" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230912 10:09:56.166" endtime="20230912 10:09:56.167"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230912 10:09:56.167" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230912 10:09:56.167" endtime="20230912 10:09:56.167"/>
</kw>
<status status="PASS" starttime="20230912 10:09:56.157" endtime="20230912 10:09:56.168"/>
</kw>
<msg timestamp="20230912 10:09:56.168" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230912 10:09:56.157" endtime="20230912 10:09:56.168"/>
</kw>
<status status="PASS" starttime="20230912 10:09:56.156" endtime="20230912 10:09:56.168"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230912 10:09:56.169" endtime="20230912 10:09:56.169"/>
</kw>
<status status="PASS" starttime="20230912 10:09:56.168" endtime="20230912 10:09:56.169"/>
</kw>
<kw name="Create volume">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[LOWER]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230912 10:09:56.170" level="INFO">${random} = gzxwx</msg>
<status status="PASS" starttime="20230912 10:09:56.170" endtime="20230912 10:09:56.170"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${VOLUME}</arg>
<arg>vol-${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230912 10:09:56.171" level="INFO">${VOLUME} = vol-gzxwx</msg>
<status status="PASS" starttime="20230912 10:09:56.171" endtime="20230912 10:09:56.171"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create /${VOLUME}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230912 10:09:56.175" level="INFO">Running command 'ozone sh volume create /vol-gzxwx 2&gt;&amp;1'.</msg>
<msg timestamp="20230912 10:10:01.417" level="INFO">${rc} = 0</msg>
<msg timestamp="20230912 10:10:01.417" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230912 10:09:56.173" endtime="20230912 10:10:01.417"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230912 10:10:01.419" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230912 10:10:01.418" endtime="20230912 10:10:01.419"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230912 10:10:01.420" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230912 10:10:01.420" endtime="20230912 10:10:01.420"/>
</kw>
<status status="PASS" starttime="20230912 10:09:56.172" endtime="20230912 10:10:01.421"/>
</kw>
<msg timestamp="20230912 10:10:01.421" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230912 10:09:56.172" endtime="20230912 10:10:01.421"/>
</kw>
<msg timestamp="20230912 10:10:01.421" level="INFO">${result} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230912 10:09:56.171" endtime="20230912 10:10:01.421"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230912 10:10:01.422" endtime="20230912 10:10:01.422"/>
</kw>
<status status="PASS" starttime="20230912 10:09:56.169" endtime="20230912 10:10:01.422"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230912 10:09:56.155" endtime="20230912 10:10:01.423"/>
</test>
<test id="s1-s3-s2-t2" name="Check bucket creation" line="104">
<kw name="Create bucket">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[LOWER]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230912 10:10:01.426" level="INFO">${random} = fdxvq</msg>
<status status="PASS" starttime="20230912 10:10:01.426" endtime="20230912 10:10:01.426"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${BUCKET}</arg>
<arg>buc-${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230912 10:10:01.427" level="INFO">${BUCKET} = buc-fdxvq</msg>
<status status="PASS" starttime="20230912 10:10:01.427" endtime="20230912 10:10:01.427"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket create -l ${BUCKET_LAYOUT} /${VOLUME}/${BUCKET}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230912 10:10:01.433" level="INFO">Running command 'ozone sh bucket create -l FILE_SYSTEM_OPTIMIZED /vol-gzxwx/buc-fdxvq 2&gt;&amp;1'.</msg>
<msg timestamp="20230912 10:10:07.000" level="INFO">${rc} = 0</msg>
<msg timestamp="20230912 10:10:07.001" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230912 10:10:01.429" endtime="20230912 10:10:07.001"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230912 10:10:07.002" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230912 10:10:07.001" endtime="20230912 10:10:07.002"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230912 10:10:07.003" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230912 10:10:07.003" endtime="20230912 10:10:07.003"/>
</kw>
<status status="PASS" starttime="20230912 10:10:01.429" endtime="20230912 10:10:07.004"/>
</kw>
<msg timestamp="20230912 10:10:07.004" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230912 10:10:01.428" endtime="20230912 10:10:07.004"/>
</kw>
<msg timestamp="20230912 10:10:07.004" level="INFO">${result} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230912 10:10:01.427" endtime="20230912 10:10:07.004"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230912 10:10:07.004" endtime="20230912 10:10:07.005"/>
</kw>
<status status="PASS" starttime="20230912 10:10:01.425" endtime="20230912 10:10:07.005"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230912 10:10:01.424" endtime="20230912 10:10:07.005"/>
</test>
<test id="s1-s3-s2-t3" name="Check keys creation" line="107">
<kw name="Create keys">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key put /${VOLUME}/${BUCKET}/file1 README.md</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230912 10:10:07.013" level="INFO">Running command 'ozone sh key put /vol-gzxwx/buc-fdxvq/file1 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20230912 10:10:15.319" level="INFO">${rc} = 0</msg>
<msg timestamp="20230912 10:10:15.319" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230912 10:10:07.009" endtime="20230912 10:10:15.319"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230912 10:10:15.321" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230912 10:10:15.320" endtime="20230912 10:10:15.321"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230912 10:10:15.322" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230912 10:10:15.321" endtime="20230912 10:10:15.322"/>
</kw>
<status status="PASS" starttime="20230912 10:10:07.009" endtime="20230912 10:10:15.322"/>
</kw>
<msg timestamp="20230912 10:10:15.322" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230912 10:10:07.008" endtime="20230912 10:10:15.322"/>
</kw>
<msg timestamp="20230912 10:10:15.323" level="INFO">${result} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230912 10:10:07.008" endtime="20230912 10:10:15.323"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230912 10:10:15.332" endtime="20230912 10:10:15.332"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key put /${VOLUME}/${BUCKET}/dir1/dir2/file2 HISTORY.md</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230912 10:10:15.338" level="INFO">Running command 'ozone sh key put /vol-gzxwx/buc-fdxvq/dir1/dir2/file2 HISTORY.md 2&gt;&amp;1'.</msg>
<msg timestamp="20230912 10:10:23.424" level="INFO">${rc} = 0</msg>
<msg timestamp="20230912 10:10:23.424" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230912 10:10:15.334" endtime="20230912 10:10:23.425"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230912 10:10:23.426" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230912 10:10:23.425" endtime="20230912 10:10:23.426"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230912 10:10:23.428" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230912 10:10:23.427" endtime="20230912 10:10:23.428"/>
</kw>
<status status="PASS" starttime="20230912 10:10:15.334" endtime="20230912 10:10:23.428"/>
</kw>
<msg timestamp="20230912 10:10:23.428" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230912 10:10:15.333" endtime="20230912 10:10:23.428"/>
</kw>
<msg timestamp="20230912 10:10:23.428" level="INFO">${result} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230912 10:10:15.333" endtime="20230912 10:10:23.428"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230912 10:10:23.429" endtime="20230912 10:10:23.429"/>
</kw>
<status status="PASS" starttime="20230912 10:10:07.007" endtime="20230912 10:10:23.429"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230912 10:10:07.006" endtime="20230912 10:10:23.429"/>
</test>
<test id="s1-s3-s2-t4" name="Check Summary api access" line="110">
<kw name="Check Access">
<arg>${SUMMARY_URL}?path=/</arg>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230912 10:10:23.438" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20230912 10:10:23.442" level="INFO">${rc} = 0</msg>
<msg timestamp="20230912 10:10:23.442" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230912 10:10:23.434" endtime="20230912 10:10:23.442"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230912 10:10:23.444" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230912 10:10:23.443" endtime="20230912 10:10:23.444"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230912 10:10:23.444" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230912 10:10:23.444" endtime="20230912 10:10:23.444"/>
</kw>
<status status="PASS" starttime="20230912 10:10:23.434" endtime="20230912 10:10:23.445"/>
</kw>
<msg timestamp="20230912 10:10:23.445" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230912 10:10:23.433" endtime="20230912 10:10:23.445"/>
</kw>
<status status="PASS" starttime="20230912 10:10:23.433" endtime="20230912 10:10:23.445"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230912 10:10:23.450" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230912 10:10:23.505" level="INFO">${rc} = 0</msg>
<msg timestamp="20230912 10:10:23.505" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230912 10:10:23.448" endtime="20230912 10:10:23.505"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230912 10:10:23.506" level="INFO">200</msg>
<status status="PASS" starttime="20230912 10:10:23.505" endtime="20230912 10:10:23.507"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230912 10:10:23.509" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230912 10:10:23.508" endtime="20230912 10:10:23.509"/>
</kw>
<status status="PASS" starttime="20230912 10:10:23.447" endtime="20230912 10:10:23.509"/>
</kw>
<msg timestamp="20230912 10:10:23.509" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230912 10:10:23.447" endtime="20230912 10:10:23.509"/>
</kw>
<msg timestamp="20230912 10:10:23.509" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230912 10:10:23.446" endtime="20230912 10:10:23.510"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230912 10:10:23.510" endtime="20230912 10:10:23.510"/>
</kw>
<status status="NOT RUN" starttime="20230912 10:10:23.510" endtime="20230912 10:10:23.510"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230912 10:10:23.510" endtime="20230912 10:10:23.512"/>
</kw>
<status status="PASS" starttime="20230912 10:10:23.510" endtime="20230912 10:10:23.512"/>
</branch>
<status status="PASS" starttime="20230912 10:10:23.510" endtime="20230912 10:10:23.513"/>
</if>
<status status="PASS" starttime="20230912 10:10:23.445" endtime="20230912 10:10:23.513"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230912 10:10:23.513" endtime="20230912 10:10:23.514"/>
</kw>
<status status="PASS" starttime="20230912 10:10:23.513" endtime="20230912 10:10:23.514"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>403</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230912 10:10:23.519" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230912 10:10:23.536" level="INFO">${rc} = 0</msg>
<msg timestamp="20230912 10:10:23.536" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230912 10:10:23.516" endtime="20230912 10:10:23.536"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230912 10:10:23.538" level="INFO">200</msg>
<status status="PASS" starttime="20230912 10:10:23.537" endtime="20230912 10:10:23.538"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230912 10:10:23.539" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230912 10:10:23.538" endtime="20230912 10:10:23.539"/>
</kw>
<status status="PASS" starttime="20230912 10:10:23.515" endtime="20230912 10:10:23.539"/>
</kw>
<msg timestamp="20230912 10:10:23.539" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230912 10:10:23.515" endtime="20230912 10:10:23.539"/>
</kw>
<msg timestamp="20230912 10:10:23.539" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230912 10:10:23.515" endtime="20230912 10:10:23.540"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230912 10:10:23.540" endtime="20230912 10:10:23.540"/>
</kw>
<status status="NOT RUN" starttime="20230912 10:10:23.540" endtime="20230912 10:10:23.540"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230912 10:10:23.541" endtime="20230912 10:10:23.541"/>
</kw>
<status status="PASS" starttime="20230912 10:10:23.540" endtime="20230912 10:10:23.541"/>
</branch>
<status status="PASS" starttime="20230912 10:10:23.540" endtime="20230912 10:10:23.541"/>
</if>
<status status="PASS" starttime="20230912 10:10:23.514" endtime="20230912 10:10:23.541"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230912 10:10:23.542" endtime="20230912 10:10:23.542"/>
</kw>
<status status="PASS" starttime="20230912 10:10:23.541" endtime="20230912 10:10:23.542"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230912 10:10:23.547" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230912 10:10:23.566" level="INFO">${rc} = 0</msg>
<msg timestamp="20230912 10:10:23.566" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230912 10:10:23.544" endtime="20230912 10:10:23.566"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230912 10:10:23.568" level="INFO">200</msg>
<status status="PASS" starttime="20230912 10:10:23.567" endtime="20230912 10:10:23.568"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230912 10:10:23.569" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230912 10:10:23.568" endtime="20230912 10:10:23.569"/>
</kw>
<status status="PASS" starttime="20230912 10:10:23.544" endtime="20230912 10:10:23.569"/>
</kw>
<msg timestamp="20230912 10:10:23.570" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230912 10:10:23.543" endtime="20230912 10:10:23.570"/>
</kw>
<msg timestamp="20230912 10:10:23.570" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230912 10:10:23.543" endtime="20230912 10:10:23.570"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230912 10:10:23.571" endtime="20230912 10:10:23.571"/>
</kw>
<status status="NOT RUN" starttime="20230912 10:10:23.570" endtime="20230912 10:10:23.571"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230912 10:10:23.571" endtime="20230912 10:10:23.571"/>
</kw>
<status status="PASS" starttime="20230912 10:10:23.571" endtime="20230912 10:10:23.572"/>
</branch>
<status status="PASS" starttime="20230912 10:10:23.570" endtime="20230912 10:10:23.572"/>
</if>
<status status="PASS" starttime="20230912 10:10:23.542" endtime="20230912 10:10:23.572"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230912 10:10:23.573" endtime="20230912 10:10:23.573"/>
</kw>
<status status="PASS" starttime="20230912 10:10:23.572" endtime="20230912 10:10:23.573"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230912 10:10:23.606" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230912 10:10:23.626" level="INFO">${rc} = 0</msg>
<msg timestamp="20230912 10:10:23.626" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230912 10:10:23.585" endtime="20230912 10:10:23.626"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230912 10:10:23.627" level="INFO">200</msg>
<status status="PASS" starttime="20230912 10:10:23.626" endtime="20230912 10:10:23.627"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230912 10:10:23.628" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230912 10:10:23.627" endtime="20230912 10:10:23.628"/>
</kw>
<status status="PASS" starttime="20230912 10:10:23.579" endtime="20230912 10:10:23.629"/>
</kw>
<msg timestamp="20230912 10:10:23.629" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230912 10:10:23.578" endtime="20230912 10:10:23.629"/>
</kw>
<msg timestamp="20230912 10:10:23.629" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230912 10:10:23.574" endtime="20230912 10:10:23.629"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230912 10:10:23.630" endtime="20230912 10:10:23.630"/>
</kw>
<status status="NOT RUN" starttime="20230912 10:10:23.629" endtime="20230912 10:10:23.630"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230912 10:10:23.630" endtime="20230912 10:10:23.631"/>
</kw>
<status status="PASS" starttime="20230912 10:10:23.630" endtime="20230912 10:10:23.631"/>
</branch>
<status status="PASS" starttime="20230912 10:10:23.629" endtime="20230912 10:10:23.631"/>
</if>
<status status="PASS" starttime="20230912 10:10:23.573" endtime="20230912 10:10:23.631"/>
</kw>
<status status="PASS" starttime="20230912 10:10:23.432" endtime="20230912 10:10:23.631"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230912 10:10:23.431" endtime="20230912 10:10:23.631"/>
</test>
<test id="s1-s3-s2-t5" name="Check Disk Usage api access" line="113">
<kw name="Check Access">
<arg>${DISK_USAGE_URL}?path=/</arg>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230912 10:10:23.638" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20230912 10:10:23.642" level="INFO">${rc} = 0</msg>
<msg timestamp="20230912 10:10:23.642" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230912 10:10:23.635" endtime="20230912 10:10:23.642"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230912 10:10:23.643" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230912 10:10:23.643" endtime="20230912 10:10:23.644"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230912 10:10:23.644" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230912 10:10:23.644" endtime="20230912 10:10:23.644"/>
</kw>
<status status="PASS" starttime="20230912 10:10:23.635" endtime="20230912 10:10:23.645"/>
</kw>
<msg timestamp="20230912 10:10:23.645" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230912 10:10:23.634" endtime="20230912 10:10:23.645"/>
</kw>
<status status="PASS" starttime="20230912 10:10:23.634" endtime="20230912 10:10:23.645"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230912 10:10:23.650" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/du?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230912 10:10:23.675" level="INFO">${rc} = 0</msg>
<msg timestamp="20230912 10:10:23.675" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230912 10:10:23.647" endtime="20230912 10:10:23.675"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230912 10:10:23.676" level="INFO">200</msg>
<status status="PASS" starttime="20230912 10:10:23.675" endtime="20230912 10:10:23.676"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230912 10:10:23.677" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230912 10:10:23.676" endtime="20230912 10:10:23.677"/>
</kw>
<status status="PASS" starttime="20230912 10:10:23.647" endtime="20230912 10:10:23.677"/>
</kw>
<msg timestamp="20230912 10:10:23.677" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230912 10:10:23.646" endtime="20230912 10:10:23.677"/>
</kw>
<msg timestamp="20230912 10:10:23.678" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230912 10:10:23.646" endtime="20230912 10:10:23.678"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230912 10:10:23.678" endtime="20230912 10:10:23.679"/>
</kw>
<status status="NOT RUN" starttime="20230912 10:10:23.678" endtime="20230912 10:10:23.679"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230912 10:10:23.679" endtime="20230912 10:10:23.680"/>
</kw>
<status status="PASS" starttime="20230912 10:10:23.679" endtime="20230912 10:10:23.680"/>
</branch>
<status status="PASS" starttime="20230912 10:10:23.678" endtime="20230912 10:10:23.680"/>
</if>
<status status="PASS" starttime="20230912 10:10:23.645" endtime="20230912 10:10:23.680"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230912 10:10:23.681" endtime="20230912 10:10:23.681"/>
</kw>
<status status="PASS" starttime="20230912 10:10:23.680" endtime="20230912 10:10:23.681"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>403</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230912 10:10:23.686" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/du?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230912 10:10:23.705" level="INFO">${rc} = 0</msg>
<msg timestamp="20230912 10:10:23.705" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230912 10:10:23.684" endtime="20230912 10:10:23.705"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230912 10:10:23.706" level="INFO">200</msg>
<status status="PASS" starttime="20230912 10:10:23.706" endtime="20230912 10:10:23.707"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230912 10:10:23.707" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230912 10:10:23.707" endtime="20230912 10:10:23.708"/>
</kw>
<status status="PASS" starttime="20230912 10:10:23.683" endtime="20230912 10:10:23.708"/>
</kw>
<msg timestamp="20230912 10:10:23.708" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230912 10:10:23.683" endtime="20230912 10:10:23.708"/>
</kw>
<msg timestamp="20230912 10:10:23.708" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230912 10:10:23.682" endtime="20230912 10:10:23.708"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230912 10:10:23.709" endtime="20230912 10:10:23.709"/>
</kw>
<status status="NOT RUN" starttime="20230912 10:10:23.709" endtime="20230912 10:10:23.709"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230912 10:10:23.709" endtime="20230912 10:10:23.710"/>
</kw>
<status status="PASS" starttime="20230912 10:10:23.709" endtime="20230912 10:10:23.710"/>
</branch>
<status status="PASS" starttime="20230912 10:10:23.708" endtime="20230912 10:10:23.710"/>
</if>
<status status="PASS" starttime="20230912 10:10:23.681" endtime="20230912 10:10:23.710"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230912 10:10:23.711" endtime="20230912 10:10:23.711"/>
</kw>
<status status="PASS" starttime="20230912 10:10:23.710" endtime="20230912 10:10:23.712"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230912 10:10:23.717" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/du?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230912 10:10:23.736" level="INFO">${rc} = 0</msg>
<msg timestamp="20230912 10:10:23.736" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230912 10:10:23.714" endtime="20230912 10:10:23.736"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230912 10:10:23.738" level="INFO">200</msg>
<status status="PASS" starttime="20230912 10:10:23.737" endtime="20230912 10:10:23.738"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230912 10:10:23.738" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230912 10:10:23.738" endtime="20230912 10:10:23.738"/>
</kw>
<status status="PASS" starttime="20230912 10:10:23.713" endtime="20230912 10:10:23.739"/>
</kw>
<msg timestamp="20230912 10:10:23.739" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230912 10:10:23.713" endtime="20230912 10:10:23.739"/>
</kw>
<msg timestamp="20230912 10:10:23.739" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230912 10:10:23.712" endtime="20230912 10:10:23.739"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230912 10:10:23.740" endtime="20230912 10:10:23.740"/>
</kw>
<status status="NOT RUN" starttime="20230912 10:10:23.740" endtime="20230912 10:10:23.740"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230912 10:10:23.741" endtime="20230912 10:10:23.742"/>
</kw>
<status status="PASS" starttime="20230912 10:10:23.740" endtime="20230912 10:10:23.742"/>
</branch>
<status status="PASS" starttime="20230912 10:10:23.740" endtime="20230912 10:10:23.742"/>
</if>
<status status="PASS" starttime="20230912 10:10:23.712" endtime="20230912 10:10:23.742"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230912 10:10:23.743" endtime="20230912 10:10:23.743"/>
</kw>
<status status="PASS" starttime="20230912 10:10:23.742" endtime="20230912 10:10:23.743"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230912 10:10:23.749" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/du?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230912 10:10:23.768" level="INFO">${rc} = 0</msg>
<msg timestamp="20230912 10:10:23.768" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230912 10:10:23.747" endtime="20230912 10:10:23.768"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230912 10:10:23.770" level="INFO">200</msg>
<status status="PASS" starttime="20230912 10:10:23.769" endtime="20230912 10:10:23.770"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230912 10:10:23.771" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230912 10:10:23.770" endtime="20230912 10:10:23.771"/>
</kw>
<status status="PASS" starttime="20230912 10:10:23.746" endtime="20230912 10:10:23.771"/>
</kw>
<msg timestamp="20230912 10:10:23.773" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230912 10:10:23.745" endtime="20230912 10:10:23.773"/>
</kw>
<msg timestamp="20230912 10:10:23.773" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230912 10:10:23.744" endtime="20230912 10:10:23.773"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230912 10:10:23.774" endtime="20230912 10:10:23.774"/>
</kw>
<status status="NOT RUN" starttime="20230912 10:10:23.773" endtime="20230912 10:10:23.774"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230912 10:10:23.774" endtime="20230912 10:10:23.775"/>
</kw>
<status status="PASS" starttime="20230912 10:10:23.774" endtime="20230912 10:10:23.775"/>
</branch>
<status status="PASS" starttime="20230912 10:10:23.773" endtime="20230912 10:10:23.775"/>
</if>
<status status="PASS" starttime="20230912 10:10:23.743" endtime="20230912 10:10:23.775"/>
</kw>
<status status="PASS" starttime="20230912 10:10:23.633" endtime="20230912 10:10:23.775"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230912 10:10:23.632" endtime="20230912 10:10:23.775"/>
</test>
<test id="s1-s3-s2-t6" name="Check Quota Usage api access" line="116">
<kw name="Check Access">
<arg>${QUOTA_USAGE_URL}?path=/</arg>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230912 10:10:23.783" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20230912 10:10:23.788" level="INFO">${rc} = 0</msg>
<msg timestamp="20230912 10:10:23.788" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230912 10:10:23.780" endtime="20230912 10:10:23.788"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230912 10:10:23.789" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230912 10:10:23.788" endtime="20230912 10:10:23.789"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230912 10:10:23.790" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230912 10:10:23.789" endtime="20230912 10:10:23.790"/>
</kw>
<status status="PASS" starttime="20230912 10:10:23.780" endtime="20230912 10:10:23.790"/>
</kw>
<msg timestamp="20230912 10:10:23.790" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230912 10:10:23.779" endtime="20230912 10:10:23.790"/>
</kw>
<status status="PASS" starttime="20230912 10:10:23.778" endtime="20230912 10:10:23.791"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230912 10:10:23.796" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/quota?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230912 10:10:23.828" level="INFO">${rc} = 0</msg>
<msg timestamp="20230912 10:10:23.828" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230912 10:10:23.793" endtime="20230912 10:10:23.828"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230912 10:10:23.830" level="INFO">200</msg>
<status status="PASS" starttime="20230912 10:10:23.829" endtime="20230912 10:10:23.830"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230912 10:10:23.831" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230912 10:10:23.830" endtime="20230912 10:10:23.831"/>
</kw>
<status status="PASS" starttime="20230912 10:10:23.793" endtime="20230912 10:10:23.831"/>
</kw>
<msg timestamp="20230912 10:10:23.831" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230912 10:10:23.792" endtime="20230912 10:10:23.831"/>
</kw>
<msg timestamp="20230912 10:10:23.832" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230912 10:10:23.792" endtime="20230912 10:10:23.832"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230912 10:10:23.832" endtime="20230912 10:10:23.832"/>
</kw>
<status status="NOT RUN" starttime="20230912 10:10:23.832" endtime="20230912 10:10:23.832"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230912 10:10:23.833" endtime="20230912 10:10:23.833"/>
</kw>
<status status="PASS" starttime="20230912 10:10:23.833" endtime="20230912 10:10:23.833"/>
</branch>
<status status="PASS" starttime="20230912 10:10:23.832" endtime="20230912 10:10:23.833"/>
</if>
<status status="PASS" starttime="20230912 10:10:23.791" endtime="20230912 10:10:23.834"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230912 10:10:23.834" endtime="20230912 10:10:23.835"/>
</kw>
<status status="PASS" starttime="20230912 10:10:23.834" endtime="20230912 10:10:23.835"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>403</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230912 10:10:23.841" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/quota?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230912 10:10:23.861" level="INFO">${rc} = 0</msg>
<msg timestamp="20230912 10:10:23.861" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230912 10:10:23.838" endtime="20230912 10:10:23.861"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230912 10:10:23.863" level="INFO">200</msg>
<status status="PASS" starttime="20230912 10:10:23.862" endtime="20230912 10:10:23.863"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230912 10:10:23.864" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230912 10:10:23.863" endtime="20230912 10:10:23.864"/>
</kw>
<status status="PASS" starttime="20230912 10:10:23.837" endtime="20230912 10:10:23.864"/>
</kw>
<msg timestamp="20230912 10:10:23.864" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230912 10:10:23.836" endtime="20230912 10:10:23.864"/>
</kw>
<msg timestamp="20230912 10:10:23.864" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230912 10:10:23.836" endtime="20230912 10:10:23.864"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230912 10:10:23.865" endtime="20230912 10:10:23.865"/>
</kw>
<status status="NOT RUN" starttime="20230912 10:10:23.865" endtime="20230912 10:10:23.865"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230912 10:10:23.865" endtime="20230912 10:10:23.866"/>
</kw>
<status status="PASS" starttime="20230912 10:10:23.865" endtime="20230912 10:10:23.866"/>
</branch>
<status status="PASS" starttime="20230912 10:10:23.865" endtime="20230912 10:10:23.866"/>
</if>
<status status="PASS" starttime="20230912 10:10:23.835" endtime="20230912 10:10:23.866"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230912 10:10:23.867" endtime="20230912 10:10:23.867"/>
</kw>
<status status="PASS" starttime="20230912 10:10:23.866" endtime="20230912 10:10:23.867"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230912 10:10:23.872" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/quota?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230912 10:10:23.897" level="INFO">${rc} = 0</msg>
<msg timestamp="20230912 10:10:23.897" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230912 10:10:23.869" endtime="20230912 10:10:23.897"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230912 10:10:23.898" level="INFO">200</msg>
<status status="PASS" starttime="20230912 10:10:23.897" endtime="20230912 10:10:23.898"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230912 10:10:23.899" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230912 10:10:23.898" endtime="20230912 10:10:23.899"/>
</kw>
<status status="PASS" starttime="20230912 10:10:23.869" endtime="20230912 10:10:23.899"/>
</kw>
<msg timestamp="20230912 10:10:23.899" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230912 10:10:23.869" endtime="20230912 10:10:23.900"/>
</kw>
<msg timestamp="20230912 10:10:23.900" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230912 10:10:23.868" endtime="20230912 10:10:23.900"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230912 10:10:23.901" endtime="20230912 10:10:23.901"/>
</kw>
<status status="NOT RUN" starttime="20230912 10:10:23.901" endtime="20230912 10:10:23.901"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230912 10:10:23.901" endtime="20230912 10:10:23.902"/>
</kw>
<status status="PASS" starttime="20230912 10:10:23.901" endtime="20230912 10:10:23.902"/>
</branch>
<status status="PASS" starttime="20230912 10:10:23.901" endtime="20230912 10:10:23.902"/>
</if>
<status status="PASS" starttime="20230912 10:10:23.867" endtime="20230912 10:10:23.902"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230912 10:10:23.903" endtime="20230912 10:10:23.903"/>
</kw>
<status status="PASS" starttime="20230912 10:10:23.902" endtime="20230912 10:10:23.903"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230912 10:10:23.910" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/quota?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230912 10:10:23.933" level="INFO">${rc} = 0</msg>
<msg timestamp="20230912 10:10:23.933" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230912 10:10:23.905" endtime="20230912 10:10:23.933"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230912 10:10:23.934" level="INFO">200</msg>
<status status="PASS" starttime="20230912 10:10:23.933" endtime="20230912 10:10:23.934"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230912 10:10:23.935" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230912 10:10:23.934" endtime="20230912 10:10:23.935"/>
</kw>
<status status="PASS" starttime="20230912 10:10:23.905" endtime="20230912 10:10:23.935"/>
</kw>
<msg timestamp="20230912 10:10:23.935" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230912 10:10:23.904" endtime="20230912 10:10:23.935"/>
</kw>
<msg timestamp="20230912 10:10:23.936" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230912 10:10:23.904" endtime="20230912 10:10:23.936"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230912 10:10:23.936" endtime="20230912 10:10:23.936"/>
</kw>
<status status="NOT RUN" starttime="20230912 10:10:23.936" endtime="20230912 10:10:23.936"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230912 10:10:23.937" endtime="20230912 10:10:23.937"/>
</kw>
<status status="PASS" starttime="20230912 10:10:23.936" endtime="20230912 10:10:23.937"/>
</branch>
<status status="PASS" starttime="20230912 10:10:23.936" endtime="20230912 10:10:23.937"/>
</if>
<status status="PASS" starttime="20230912 10:10:23.903" endtime="20230912 10:10:23.937"/>
</kw>
<status status="PASS" starttime="20230912 10:10:23.778" endtime="20230912 10:10:23.937"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230912 10:10:23.777" endtime="20230912 10:10:23.938"/>
</test>
<test id="s1-s3-s2-t7" name="Check File Size Distribution api access" line="119">
<kw name="Check Access">
<arg>${FILE_SIZE_DIST_URL}?path=/</arg>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230912 10:10:23.945" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20230912 10:10:23.950" level="INFO">${rc} = 0</msg>
<msg timestamp="20230912 10:10:23.950" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230912 10:10:23.942" endtime="20230912 10:10:23.950"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230912 10:10:23.951" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230912 10:10:23.950" endtime="20230912 10:10:23.951"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230912 10:10:23.952" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230912 10:10:23.952" endtime="20230912 10:10:23.952"/>
</kw>
<status status="PASS" starttime="20230912 10:10:23.942" endtime="20230912 10:10:23.953"/>
</kw>
<msg timestamp="20230912 10:10:23.953" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230912 10:10:23.941" endtime="20230912 10:10:23.953"/>
</kw>
<status status="PASS" starttime="20230912 10:10:23.941" endtime="20230912 10:10:23.953"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230912 10:10:23.958" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/dist?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230912 10:10:23.989" level="INFO">${rc} = 0</msg>
<msg timestamp="20230912 10:10:23.989" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230912 10:10:23.956" endtime="20230912 10:10:23.989"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230912 10:10:23.991" level="INFO">200</msg>
<status status="PASS" starttime="20230912 10:10:23.990" endtime="20230912 10:10:23.991"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230912 10:10:23.991" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230912 10:10:23.991" endtime="20230912 10:10:23.992"/>
</kw>
<status status="PASS" starttime="20230912 10:10:23.955" endtime="20230912 10:10:23.992"/>
</kw>
<msg timestamp="20230912 10:10:23.992" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230912 10:10:23.955" endtime="20230912 10:10:23.992"/>
</kw>
<msg timestamp="20230912 10:10:23.992" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230912 10:10:23.954" endtime="20230912 10:10:23.992"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230912 10:10:23.993" endtime="20230912 10:10:23.993"/>
</kw>
<status status="NOT RUN" starttime="20230912 10:10:23.993" endtime="20230912 10:10:23.993"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230912 10:10:23.994" endtime="20230912 10:10:23.994"/>
</kw>
<status status="PASS" starttime="20230912 10:10:23.993" endtime="20230912 10:10:23.994"/>
</branch>
<status status="PASS" starttime="20230912 10:10:23.992" endtime="20230912 10:10:23.994"/>
</if>
<status status="PASS" starttime="20230912 10:10:23.953" endtime="20230912 10:10:23.994"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230912 10:10:23.995" endtime="20230912 10:10:23.996"/>
</kw>
<status status="PASS" starttime="20230912 10:10:23.995" endtime="20230912 10:10:23.996"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>403</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230912 10:10:24.001" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/dist?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230912 10:10:24.018" level="INFO">${rc} = 0</msg>
<msg timestamp="20230912 10:10:24.018" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230912 10:10:23.998" endtime="20230912 10:10:24.018"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230912 10:10:24.020" level="INFO">200</msg>
<status status="PASS" starttime="20230912 10:10:24.019" endtime="20230912 10:10:24.020"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230912 10:10:24.021" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230912 10:10:24.020" endtime="20230912 10:10:24.021"/>
</kw>
<status status="PASS" starttime="20230912 10:10:23.997" endtime="20230912 10:10:24.021"/>
</kw>
<msg timestamp="20230912 10:10:24.021" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230912 10:10:23.997" endtime="20230912 10:10:24.021"/>
</kw>
<msg timestamp="20230912 10:10:24.022" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230912 10:10:23.996" endtime="20230912 10:10:24.022"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230912 10:10:24.022" endtime="20230912 10:10:24.022"/>
</kw>
<status status="NOT RUN" starttime="20230912 10:10:24.022" endtime="20230912 10:10:24.023"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230912 10:10:24.023" endtime="20230912 10:10:24.023"/>
</kw>
<status status="PASS" starttime="20230912 10:10:24.023" endtime="20230912 10:10:24.023"/>
</branch>
<status status="PASS" starttime="20230912 10:10:24.022" endtime="20230912 10:10:24.023"/>
</if>
<status status="PASS" starttime="20230912 10:10:23.996" endtime="20230912 10:10:24.023"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230912 10:10:24.024" endtime="20230912 10:10:24.025"/>
</kw>
<status status="PASS" starttime="20230912 10:10:24.024" endtime="20230912 10:10:24.025"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230912 10:10:24.030" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/dist?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230912 10:10:24.047" level="INFO">${rc} = 0</msg>
<msg timestamp="20230912 10:10:24.047" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230912 10:10:24.027" endtime="20230912 10:10:24.047"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230912 10:10:24.048" level="INFO">200</msg>
<status status="PASS" starttime="20230912 10:10:24.047" endtime="20230912 10:10:24.048"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230912 10:10:24.049" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230912 10:10:24.049" endtime="20230912 10:10:24.049"/>
</kw>
<status status="PASS" starttime="20230912 10:10:24.027" endtime="20230912 10:10:24.049"/>
</kw>
<msg timestamp="20230912 10:10:24.050" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230912 10:10:24.026" endtime="20230912 10:10:24.050"/>
</kw>
<msg timestamp="20230912 10:10:24.050" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230912 10:10:24.025" endtime="20230912 10:10:24.050"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230912 10:10:24.050" endtime="20230912 10:10:24.051"/>
</kw>
<status status="NOT RUN" starttime="20230912 10:10:24.050" endtime="20230912 10:10:24.051"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230912 10:10:24.051" endtime="20230912 10:10:24.051"/>
</kw>
<status status="PASS" starttime="20230912 10:10:24.051" endtime="20230912 10:10:24.051"/>
</branch>
<status status="PASS" starttime="20230912 10:10:24.050" endtime="20230912 10:10:24.051"/>
</if>
<status status="PASS" starttime="20230912 10:10:24.025" endtime="20230912 10:10:24.051"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230912 10:10:24.052" endtime="20230912 10:10:24.053"/>
</kw>
<status status="PASS" starttime="20230912 10:10:24.052" endtime="20230912 10:10:24.053"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230912 10:10:24.058" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/dist?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230912 10:10:24.075" level="INFO">${rc} = 0</msg>
<msg timestamp="20230912 10:10:24.075" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230912 10:10:24.055" endtime="20230912 10:10:24.075"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230912 10:10:24.076" level="INFO">200</msg>
<status status="PASS" starttime="20230912 10:10:24.076" endtime="20230912 10:10:24.076"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230912 10:10:24.077" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230912 10:10:24.077" endtime="20230912 10:10:24.077"/>
</kw>
<status status="PASS" starttime="20230912 10:10:24.054" endtime="20230912 10:10:24.077"/>
</kw>
<msg timestamp="20230912 10:10:24.077" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230912 10:10:24.054" endtime="20230912 10:10:24.078"/>
</kw>
<msg timestamp="20230912 10:10:24.078" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230912 10:10:24.053" endtime="20230912 10:10:24.078"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230912 10:10:24.078" endtime="20230912 10:10:24.078"/>
</kw>
<status status="NOT RUN" starttime="20230912 10:10:24.078" endtime="20230912 10:10:24.078"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230912 10:10:24.079" endtime="20230912 10:10:24.079"/>
</kw>
<status status="PASS" starttime="20230912 10:10:24.078" endtime="20230912 10:10:24.079"/>
</branch>
<status status="PASS" starttime="20230912 10:10:24.078" endtime="20230912 10:10:24.079"/>
</if>
<status status="PASS" starttime="20230912 10:10:24.053" endtime="20230912 10:10:24.079"/>
</kw>
<status status="PASS" starttime="20230912 10:10:23.940" endtime="20230912 10:10:24.079"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230912 10:10:23.939" endtime="20230912 10:10:24.080"/>
</test>
<test id="s1-s3-s2-t8" name="Check Recon Namespace Summary Root" line="122">
<kw name="Wait For Summary">
<arg>${SUMMARY_URL}?path=/</arg>
<arg>ROOT</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230912 10:10:24.088" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230912 10:10:24.104" level="INFO">${rc} = 0</msg>
<msg timestamp="20230912 10:10:24.104" level="INFO">${output} = {"path":"","type":"ROOT","countStats":{"numVolume":3,"numBucket":2,"numDir":1,"numKey":1},"objectInfo":{"metadata":null,"name":null,"quotaInBytes":0,"quotaInNamespace":0,"usedNamespace":0,"creationTim...</msg>
<status status="PASS" starttime="20230912 10:10:24.085" endtime="20230912 10:10:24.104"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230912 10:10:24.106" level="INFO">{"path":"","type":"ROOT","countStats":{"numVolume":3,"numBucket":2,"numDir":1,"numKey":1},"objectInfo":{"metadata":null,"name":null,"quotaInBytes":0,"quotaInNamespace":0,"usedNamespace":0,"creationTime":0,"modificationTime":0,"acls":null},"status":"OK"}</msg>
<status status="PASS" starttime="20230912 10:10:24.105" endtime="20230912 10:10:24.106"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230912 10:10:24.107" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230912 10:10:24.106" endtime="20230912 10:10:24.107"/>
</kw>
<status status="PASS" starttime="20230912 10:10:24.084" endtime="20230912 10:10:24.107"/>
</kw>
<msg timestamp="20230912 10:10:24.107" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230912 10:10:24.084" endtime="20230912 10:10:24.107"/>
</kw>
<msg timestamp="20230912 10:10:24.107" level="INFO">${result} = {"path":"","type":"ROOT","countStats":{"numVolume":3,"numBucket":2,"numDir":1,"numKey":1},"objectInfo":{"metadata":null,"name":null,"quotaInBytes":0,"quotaInNamespace":0,"usedNamespace":0,"creationTim...</msg>
<status status="PASS" starttime="20230912 10:10:24.083" endtime="20230912 10:10:24.107"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230912 10:10:24.108" endtime="20230912 10:10:24.108"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230912 10:10:24.108" endtime="20230912 10:10:24.109"/>
</kw>
<status status="PASS" starttime="20230912 10:10:24.083" endtime="20230912 10:10:24.109"/>
</kw>
<status status="PASS" starttime="20230912 10:10:24.082" endtime="20230912 10:10:24.109"/>
</kw>
<status status="PASS" starttime="20230912 10:10:24.081" endtime="20230912 10:10:24.109"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230912 10:10:24.081" endtime="20230912 10:10:24.110"/>
</test>
<test id="s1-s3-s2-t9" name="Check Recon Namespace Summary Volume" line="125">
<kw name="Wait For Summary">
<arg>${SUMMARY_URL}?path=/${VOLUME}</arg>
<arg>VOLUME</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230912 10:10:24.118" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-gzxwx 2&gt;&amp;1'.</msg>
<msg timestamp="20230912 10:10:24.133" level="INFO">${rc} = 0</msg>
<msg timestamp="20230912 10:10:24.134" level="INFO">${output} = {"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20230912 10:10:24.115" endtime="20230912 10:10:24.134"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230912 10:10:24.135" level="INFO">{"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20230912 10:10:24.134" endtime="20230912 10:10:24.135"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230912 10:10:24.136" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230912 10:10:24.136" endtime="20230912 10:10:24.136"/>
</kw>
<status status="PASS" starttime="20230912 10:10:24.114" endtime="20230912 10:10:24.137"/>
</kw>
<msg timestamp="20230912 10:10:24.137" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230912 10:10:24.114" endtime="20230912 10:10:24.137"/>
</kw>
<msg timestamp="20230912 10:10:24.137" level="INFO">${result} = {"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20230912 10:10:24.113" endtime="20230912 10:10:24.137"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20230912 10:10:24.138" level="FAIL">'{"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}' does not contain '"status":"OK"'</msg>
<status status="FAIL" starttime="20230912 10:10:24.137" endtime="20230912 10:10:24.138"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230912 10:10:24.138" endtime="20230912 10:10:24.138"/>
</kw>
<status status="FAIL" starttime="20230912 10:10:24.113" endtime="20230912 10:10:24.138"/>
</kw>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230912 10:10:34.145" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-gzxwx 2&gt;&amp;1'.</msg>
<msg timestamp="20230912 10:10:34.165" level="INFO">${rc} = 0</msg>
<msg timestamp="20230912 10:10:34.165" level="INFO">${output} = {"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20230912 10:10:34.142" endtime="20230912 10:10:34.165"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230912 10:10:34.167" level="INFO">{"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20230912 10:10:34.166" endtime="20230912 10:10:34.167"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230912 10:10:34.168" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230912 10:10:34.167" endtime="20230912 10:10:34.168"/>
</kw>
<status status="PASS" starttime="20230912 10:10:34.141" endtime="20230912 10:10:34.168"/>
</kw>
<msg timestamp="20230912 10:10:34.168" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230912 10:10:34.141" endtime="20230912 10:10:34.169"/>
</kw>
<msg timestamp="20230912 10:10:34.169" level="INFO">${result} = {"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20230912 10:10:34.140" endtime="20230912 10:10:34.169"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20230912 10:10:34.170" level="FAIL">'{"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}' does not contain '"status":"OK"'</msg>
<status status="FAIL" starttime="20230912 10:10:34.169" endtime="20230912 10:10:34.170"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230912 10:10:34.170" endtime="20230912 10:10:34.171"/>
</kw>
<status status="FAIL" starttime="20230912 10:10:34.139" endtime="20230912 10:10:34.171"/>
</kw>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230912 10:10:44.177" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-gzxwx 2&gt;&amp;1'.</msg>
<msg timestamp="20230912 10:10:44.196" level="INFO">${rc} = 0</msg>
<msg timestamp="20230912 10:10:44.196" level="INFO">${output} = {"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20230912 10:10:44.174" endtime="20230912 10:10:44.196"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230912 10:10:44.198" level="INFO">{"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20230912 10:10:44.197" endtime="20230912 10:10:44.198"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230912 10:10:44.199" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230912 10:10:44.198" endtime="20230912 10:10:44.199"/>
</kw>
<status status="PASS" starttime="20230912 10:10:44.173" endtime="20230912 10:10:44.199"/>
</kw>
<msg timestamp="20230912 10:10:44.199" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230912 10:10:44.173" endtime="20230912 10:10:44.200"/>
</kw>
<msg timestamp="20230912 10:10:44.200" level="INFO">${result} = {"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20230912 10:10:44.172" endtime="20230912 10:10:44.200"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20230912 10:10:44.201" level="FAIL">'{"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}' does not contain '"status":"OK"'</msg>
<status status="FAIL" starttime="20230912 10:10:44.200" endtime="20230912 10:10:44.201"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230912 10:10:44.201" endtime="20230912 10:10:44.201"/>
</kw>
<status status="FAIL" starttime="20230912 10:10:44.171" endtime="20230912 10:10:44.201"/>
</kw>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230912 10:10:54.208" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-gzxwx 2&gt;&amp;1'.</msg>
<msg timestamp="20230912 10:10:54.242" level="INFO">${rc} = 0</msg>
<msg timestamp="20230912 10:10:54.242" level="INFO">${output} = {"path":"","type":"VOLUME","countStats":{"numVolume":-1,"numBucket":1,"numDir":2,"numKey":2},"objectInfo":{"metadata":{},"name":"vol-gzxwx","quotaInBytes":-1,"quotaInNamespace":-1,"usedNamespace":1,"c...</msg>
<status status="PASS" starttime="20230912 10:10:54.205" endtime="20230912 10:10:54.242"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230912 10:10:54.244" level="INFO">{"path":"","type":"VOLUME","countStats":{"numVolume":-1,"numBucket":1,"numDir":2,"numKey":2},"objectInfo":{"metadata":{},"name":"vol-gzxwx","quotaInBytes":-1,"quotaInNamespace":-1,"usedNamespace":1,"creationTime":1694513401170,"modificationTime":1694513401170,"acls":[{"type":"USER","name":"hadoop","aclScope":"ACCESS","aclList":["ALL"]},{"type":"GROUP","name":"hadoop","aclScope":"ACCESS","aclList":["ALL"]}],"admin":"hadoop","owner":"hadoop","volume":"vol-gzxwx"},"status":"OK"}</msg>
<status status="PASS" starttime="20230912 10:10:54.243" endtime="20230912 10:10:54.244"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230912 10:10:54.245" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230912 10:10:54.245" endtime="20230912 10:10:54.245"/>
</kw>
<status status="PASS" starttime="20230912 10:10:54.204" endtime="20230912 10:10:54.246"/>
</kw>
<msg timestamp="20230912 10:10:54.246" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230912 10:10:54.204" endtime="20230912 10:10:54.246"/>
</kw>
<msg timestamp="20230912 10:10:54.247" level="INFO">${result} = {"path":"","type":"VOLUME","countStats":{"numVolume":-1,"numBucket":1,"numDir":2,"numKey":2},"objectInfo":{"metadata":{},"name":"vol-gzxwx","quotaInBytes":-1,"quotaInNamespace":-1,"usedNamespace":1,"c...</msg>
<status status="PASS" starttime="20230912 10:10:54.203" endtime="20230912 10:10:54.247"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230912 10:10:54.247" endtime="20230912 10:10:54.247"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230912 10:10:54.247" endtime="20230912 10:10:54.248"/>
</kw>
<status status="PASS" starttime="20230912 10:10:54.202" endtime="20230912 10:10:54.248"/>
</kw>
<status status="PASS" starttime="20230912 10:10:24.112" endtime="20230912 10:10:54.248"/>
</kw>
<status status="PASS" starttime="20230912 10:10:24.111" endtime="20230912 10:10:54.248"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230912 10:10:24.110" endtime="20230912 10:10:54.248"/>
</test>
<test id="s1-s3-s2-t10" name="Check Recon Namespace Summary Bucket" line="128">
<kw name="Wait For Summary">
<arg>${SUMMARY_URL}?path=/${VOLUME}/${BUCKET}</arg>
<arg>BUCKET</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230912 10:10:54.257" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-gzxwx/buc-fdxvq 2&gt;&amp;1'.</msg>
<msg timestamp="20230912 10:10:54.285" level="INFO">${rc} = 0</msg>
<msg timestamp="20230912 10:10:54.285" level="INFO">${output} = {"path":"","type":"BUCKET","countStats":{"numVolume":-1,"numBucket":-1,"numDir":2,"numKey":2},"objectInfo":{"versioningEnabled":false,"metadata":{},"name":"buc-fdxvq","quotaInBytes":-1,"quotaInNamespa...</msg>
<status status="PASS" starttime="20230912 10:10:54.255" endtime="20230912 10:10:54.285"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230912 10:10:54.286" level="INFO">{"path":"","type":"BUCKET","countStats":{"numVolume":-1,"numBucket":-1,"numDir":2,"numKey":2},"objectInfo":{"versioningEnabled":false,"metadata":{},"name":"buc-fdxvq","quotaInBytes":-1,"quotaInNamespace":-1,"usedNamespace":4,"creationTime":1694513406739,"modificationTime":1694513406739,"acls":[{"type":"USER","name":"hadoop","aclScope":"ACCESS","aclList":["ALL"]},{"type":"GROUP","name":"hadoop","aclScope":"ACCESS","aclList":["ALL"]}],"volumeName":"vol-gzxwx","storageType":"DISK","versioning":false,"usedBytes":null,"encryptionInfo":null,"replicationConfigInfo":null,"sourceVolume":null,"sourceBucket":null,"bucketLayout":"FILE_SYSTEM_OPTIMIZED","owner":"hadoop"},"status":"OK"}</msg>
<status status="PASS" starttime="20230912 10:10:54.285" endtime="20230912 10:10:54.286"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230912 10:10:54.287" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230912 10:10:54.287" endtime="20230912 10:10:54.287"/>
</kw>
<status status="PASS" starttime="20230912 10:10:54.254" endtime="20230912 10:10:54.287"/>
</kw>
<msg timestamp="20230912 10:10:54.287" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230912 10:10:54.254" endtime="20230912 10:10:54.288"/>
</kw>
<msg timestamp="20230912 10:10:54.288" level="INFO">${result} = {"path":"","type":"BUCKET","countStats":{"numVolume":-1,"numBucket":-1,"numDir":2,"numKey":2},"objectInfo":{"versioningEnabled":false,"metadata":{},"name":"buc-fdxvq","quotaInBytes":-1,"quotaInNamespa...</msg>
<status status="PASS" starttime="20230912 10:10:54.253" endtime="20230912 10:10:54.288"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230912 10:10:54.288" endtime="20230912 10:10:54.289"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230912 10:10:54.289" endtime="20230912 10:10:54.289"/>
</kw>
<status status="PASS" starttime="20230912 10:10:54.252" endtime="20230912 10:10:54.289"/>
</kw>
<status status="PASS" starttime="20230912 10:10:54.252" endtime="20230912 10:10:54.290"/>
</kw>
<status status="PASS" starttime="20230912 10:10:54.251" endtime="20230912 10:10:54.290"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230912 10:10:54.250" endtime="20230912 10:10:54.290"/>
</test>
<test id="s1-s3-s2-t11" name="Check Recon Namespace Summary Key" line="131">
<kw name="Wait For Summary">
<arg>${SUMMARY_URL}?path=/${VOLUME}/${BUCKET}/file1</arg>
<arg>KEY</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230912 10:10:54.298" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-gzxwx/buc-fdxvq/file1 2&gt;&amp;1'.</msg>
<msg timestamp="20230912 10:10:54.346" level="INFO">${rc} = 0</msg>
<msg timestamp="20230912 10:10:54.346" level="INFO">${output} = {"path":"","type":"KEY","countStats":{"numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0},"objectInfo":{"fileName":"file1","file":true,"metadata":{},"name":"file1","quotaInBytes":0,"quotaInNamespace...</msg>
<status status="PASS" starttime="20230912 10:10:54.295" endtime="20230912 10:10:54.346"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230912 10:10:54.348" level="INFO">{"path":"","type":"KEY","countStats":{"numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0},"objectInfo":{"fileName":"file1","file":true,"metadata":{},"name":"file1","quotaInBytes":0,"quotaInNamespace":0,"usedNamespace":0,"creationTime":1694513411986,"modificationTime":1694513414550,"acls":[{"type":"USER","name":"hadoop","aclScope":"ACCESS","aclList":["ALL"]},{"type":"GROUP","name":"hadoop","aclScope":"ACCESS","aclList":["ALL"]}],"volumeName":"vol-gzxwx","bucketName":"buc-fdxvq","keyName":"file1","dataSize":4068,"keyLocationVersions":[{"version":0,"locationVersionMap":{"0":[{"blockID":{"containerBlockID":{"containerID":2,"localID":111677748019200012},"blockCommitSequenceId":14,"containerID":2,"localID":111677748019200012},"length":4068,"offset":0,"token":null,"createVersion":0,"pipeline":null,"partNumber":0,"containerID":2,"localID":111677748019200012,"blockCommitSequenceId":14}]},"locationList":[{"blockID":{"containerBlockID":{"containerID":2,"localID":111677748019200012},"blockCommitSequenceId":14,"containerID":2,"localID":111677748019200012},"length":4068,"offset":0,"token":null,"createVersion":0,"pipeline":null,"partNumber":0,"containerID":2,"localID":111677748019200012,"blockCommitSequenceId":14}],"multipartKey":false,"blocksLatestVersionOnly":[{"blockID":{"containerBlockID":{"containerID":2,"localID":111677748019200012},"blockCommitSequenceId":14,"containerID":2,"localID":111677748019200012},"length":4068,"offset":0,"token":null,"createVersion":0,"pipeline":null,"partNumber":0,"containerID":2,"localID":111677748019200012,"blockCommitSequenceId":14}],"locationLists":[[{"blockID":{"containerBlockID":{"containerID":2,"localID":111677748019200012},"blockCommitSequenceId":14,"containerID":2,"localID":111677748019200012},"length":4068,"offset":0,"token":null,"createVersion":0,"pipeline":null,"partNumber":0,"containerID":2,"localID":111677748019200012,"blockCommitSequenceId":14}]],"locationListCount":1}],"replicationConfig":{"replicationFactor":"THREE","requiredNodes":3,"replicationType":"RATIS"},"encInfo":null},"status":"OK"}</msg>
<status status="PASS" starttime="20230912 10:10:54.347" endtime="20230912 10:10:54.348"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230912 10:10:54.349" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230912 10:10:54.348" endtime="20230912 10:10:54.349"/>
</kw>
<status status="PASS" starttime="20230912 10:10:54.295" endtime="20230912 10:10:54.349"/>
</kw>
<msg timestamp="20230912 10:10:54.349" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230912 10:10:54.294" endtime="20230912 10:10:54.350"/>
</kw>
<msg timestamp="20230912 10:10:54.350" level="INFO">${result} = {"path":"","type":"KEY","countStats":{"numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0},"objectInfo":{"fileName":"file1","file":true,"metadata":{},"name":"file1","quotaInBytes":0,"quotaInNamespace...</msg>
<status status="PASS" starttime="20230912 10:10:54.294" endtime="20230912 10:10:54.350"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230912 10:10:54.350" endtime="20230912 10:10:54.350"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230912 10:10:54.351" endtime="20230912 10:10:54.351"/>
</kw>
<status status="PASS" starttime="20230912 10:10:54.293" endtime="20230912 10:10:54.351"/>
</kw>
<status status="PASS" starttime="20230912 10:10:54.293" endtime="20230912 10:10:54.351"/>
</kw>
<status status="PASS" starttime="20230912 10:10:54.292" endtime="20230912 10:10:54.351"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230912 10:10:54.291" endtime="20230912 10:10:54.352"/>
</test>
<test id="s1-s3-s2-t12" name="Check Recon Namespace Summary Directory" line="134">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET_LAYOUT}' == 'LEGACY'</arg>
<arg>Wait For Summary</arg>
<arg>${SUMMARY_URL}?path=/${VOLUME}/${BUCKET}/dir1/dir2/</arg>
<arg>DIRECTORY</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230912 10:10:54.354" endtime="20230912 10:10:54.355"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET_LAYOUT}' == 'FILE_SYSTEM_OPTIMIZED'</arg>
<arg>Wait For Summary</arg>
<arg>${SUMMARY_URL}?path=/${VOLUME}/${BUCKET}/dir1/dir2</arg>
<arg>DIRECTORY</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Wait For Summary">
<arg>${SUMMARY_URL}?path=/${VOLUME}/${BUCKET}/dir1/dir2</arg>
<arg>DIRECTORY</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230912 10:10:54.363" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-gzxwx/buc-fdxvq/dir1/dir2 2&gt;&amp;1'.</msg>
<msg timestamp="20230912 10:10:54.390" level="INFO">${rc} = 0</msg>
<msg timestamp="20230912 10:10:54.390" level="INFO">${output} = {"path":"","type":"DIRECTORY","countStats":{"numVolume":-1,"numBucket":-1,"numDir":0,"numKey":1},"objectInfo":{"metadata":{},"name":"dir2","quotaInBytes":0,"quotaInNamespace":0,"usedNamespace":0,"crea...</msg>
<status status="PASS" starttime="20230912 10:10:54.359" endtime="20230912 10:10:54.390"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230912 10:10:54.392" level="INFO">{"path":"","type":"DIRECTORY","countStats":{"numVolume":-1,"numBucket":-1,"numDir":0,"numKey":1},"objectInfo":{"metadata":{},"name":"dir2","quotaInBytes":0,"quotaInNamespace":0,"usedNamespace":0,"creationTime":1694513420456,"modificationTime":1694513420456,"acls":[{"type":"USER","name":"hadoop","aclScope":"ACCESS","aclList":["ALL"]},{"type":"GROUP","name":"hadoop","aclScope":"ACCESS","aclList":["ALL"]}]},"status":"OK"}</msg>
<status status="PASS" starttime="20230912 10:10:54.391" endtime="20230912 10:10:54.392"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230912 10:10:54.393" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230912 10:10:54.392" endtime="20230912 10:10:54.393"/>
</kw>
<status status="PASS" starttime="20230912 10:10:54.359" endtime="20230912 10:10:54.393"/>
</kw>
<msg timestamp="20230912 10:10:54.393" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230912 10:10:54.358" endtime="20230912 10:10:54.393"/>
</kw>
<msg timestamp="20230912 10:10:54.393" level="INFO">${result} = {"path":"","type":"DIRECTORY","countStats":{"numVolume":-1,"numBucket":-1,"numDir":0,"numKey":1},"objectInfo":{"metadata":{},"name":"dir2","quotaInBytes":0,"quotaInNamespace":0,"usedNamespace":0,"crea...</msg>
<status status="PASS" starttime="20230912 10:10:54.358" endtime="20230912 10:10:54.394"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230912 10:10:54.394" endtime="20230912 10:10:54.394"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230912 10:10:54.394" endtime="20230912 10:10:54.395"/>
</kw>
<status status="PASS" starttime="20230912 10:10:54.357" endtime="20230912 10:10:54.395"/>
</kw>
<status status="PASS" starttime="20230912 10:10:54.356" endtime="20230912 10:10:54.395"/>
</kw>
<status status="PASS" starttime="20230912 10:10:54.356" endtime="20230912 10:10:54.395"/>
</kw>
<status status="PASS" starttime="20230912 10:10:54.355" endtime="20230912 10:10:54.395"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230912 10:10:54.353" endtime="20230912 10:10:54.396"/>
</test>
<test id="s1-s3-s2-t13" name="Check Recon Namespace Disk Usage" line="138">
<kw name="Wait For Summary">
<arg>${DISK_USAGE_URL}?path=/${VOLUME}/${BUCKET}&amp;files=true&amp;replica=true</arg>
<arg>\"sizeWithReplica\"</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230912 10:10:54.404" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/du?path=/vol-gzxwx/buc-fdxvq&amp;files=true&amp;replica=true 2&gt;&amp;1'.</msg>
<msg timestamp="20230912 10:10:54.429" level="INFO">${rc} = 0</msg>
<msg timestamp="20230912 10:10:54.429" level="INFO">${output} = {"status":"OK","path":"/vol-gzxwx/buc-fdxvq","size":10106,"sizeWithReplica":-1,"subPathCount":1,"subPaths":[{"key":false,"path":"/vol-gzxwx/buc-fdxvq/dir1","size":6038,"sizeWithReplica":-1,"isKey":fal...</msg>
<status status="PASS" starttime="20230912 10:10:54.401" endtime="20230912 10:10:54.429"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230912 10:10:54.430" level="INFO">{"status":"OK","path":"/vol-gzxwx/buc-fdxvq","size":10106,"sizeWithReplica":-1,"subPathCount":1,"subPaths":[{"key":false,"path":"/vol-gzxwx/buc-fdxvq/dir1","size":6038,"sizeWithReplica":-1,"isKey":false}],"sizeDirectKey":4068}</msg>
<status status="PASS" starttime="20230912 10:10:54.429" endtime="20230912 10:10:54.430"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230912 10:10:54.431" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230912 10:10:54.430" endtime="20230912 10:10:54.431"/>
</kw>
<status status="PASS" starttime="20230912 10:10:54.401" endtime="20230912 10:10:54.431"/>
</kw>
<msg timestamp="20230912 10:10:54.431" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230912 10:10:54.400" endtime="20230912 10:10:54.431"/>
</kw>
<msg timestamp="20230912 10:10:54.431" level="INFO">${result} = {"status":"OK","path":"/vol-gzxwx/buc-fdxvq","size":10106,"sizeWithReplica":-1,"subPathCount":1,"subPaths":[{"key":false,"path":"/vol-gzxwx/buc-fdxvq/dir1","size":6038,"sizeWithReplica":-1,"isKey":fal...</msg>
<status status="PASS" starttime="20230912 10:10:54.400" endtime="20230912 10:10:54.432"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230912 10:10:54.432" endtime="20230912 10:10:54.432"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230912 10:10:54.433" endtime="20230912 10:10:54.433"/>
</kw>
<status status="PASS" starttime="20230912 10:10:54.399" endtime="20230912 10:10:54.433"/>
</kw>
<status status="PASS" starttime="20230912 10:10:54.399" endtime="20230912 10:10:54.433"/>
</kw>
<status status="PASS" starttime="20230912 10:10:54.398" endtime="20230912 10:10:54.433"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230912 10:10:54.397" endtime="20230912 10:10:54.434"/>
</test>
<test id="s1-s3-s2-t14" name="Check Recon Namespace Volume Quota Usage" line="141">
<kw name="Wait For Summary">
<arg>${QUOTA_USAGE_URL}?path=/${VOLUME}</arg>
<arg>\"used\"</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230912 10:10:54.451" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/quota?path=/vol-gzxwx 2&gt;&amp;1'.</msg>
<msg timestamp="20230912 10:10:54.467" level="INFO">${rc} = 0</msg>
<msg timestamp="20230912 10:10:54.467" level="INFO">${output} = {"allowed":-1,"used":10106,"status":"OK"}</msg>
<status status="PASS" starttime="20230912 10:10:54.441" endtime="20230912 10:10:54.467"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230912 10:10:54.469" level="INFO">{"allowed":-1,"used":10106,"status":"OK"}</msg>
<status status="PASS" starttime="20230912 10:10:54.469" endtime="20230912 10:10:54.470"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230912 10:10:54.470" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230912 10:10:54.470" endtime="20230912 10:10:54.470"/>
</kw>
<status status="PASS" starttime="20230912 10:10:54.440" endtime="20230912 10:10:54.471"/>
</kw>
<msg timestamp="20230912 10:10:54.471" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230912 10:10:54.440" endtime="20230912 10:10:54.471"/>
</kw>
<msg timestamp="20230912 10:10:54.471" level="INFO">${result} = {"allowed":-1,"used":10106,"status":"OK"}</msg>
<status status="PASS" starttime="20230912 10:10:54.439" endtime="20230912 10:10:54.471"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230912 10:10:54.472" endtime="20230912 10:10:54.472"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230912 10:10:54.473" endtime="20230912 10:10:54.473"/>
</kw>
<status status="PASS" starttime="20230912 10:10:54.438" endtime="20230912 10:10:54.473"/>
</kw>
<status status="PASS" starttime="20230912 10:10:54.438" endtime="20230912 10:10:54.473"/>
</kw>
<status status="PASS" starttime="20230912 10:10:54.437" endtime="20230912 10:10:54.473"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230912 10:10:54.436" endtime="20230912 10:10:54.474"/>
</test>
<test id="s1-s3-s2-t15" name="Check Recon Namespace Bucket Quota Usage" line="144">
<kw name="Wait For Summary">
<arg>${QUOTA_USAGE_URL}?path=/${VOLUME}/${BUCKET}</arg>
<arg>\"used\"</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230912 10:10:54.483" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/quota?path=/vol-gzxwx/buc-fdxvq 2&gt;&amp;1'.</msg>
<msg timestamp="20230912 10:10:54.504" level="INFO">${rc} = 0</msg>
<msg timestamp="20230912 10:10:54.504" level="INFO">${output} = {"allowed":-1,"used":10106,"status":"OK"}</msg>
<status status="PASS" starttime="20230912 10:10:54.480" endtime="20230912 10:10:54.504"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230912 10:10:54.506" level="INFO">{"allowed":-1,"used":10106,"status":"OK"}</msg>
<status status="PASS" starttime="20230912 10:10:54.505" endtime="20230912 10:10:54.506"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230912 10:10:54.506" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230912 10:10:54.506" endtime="20230912 10:10:54.506"/>
</kw>
<status status="PASS" starttime="20230912 10:10:54.479" endtime="20230912 10:10:54.507"/>
</kw>
<msg timestamp="20230912 10:10:54.507" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230912 10:10:54.479" endtime="20230912 10:10:54.507"/>
</kw>
<msg timestamp="20230912 10:10:54.507" level="INFO">${result} = {"allowed":-1,"used":10106,"status":"OK"}</msg>
<status status="PASS" starttime="20230912 10:10:54.478" endtime="20230912 10:10:54.507"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230912 10:10:54.507" endtime="20230912 10:10:54.508"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230912 10:10:54.508" endtime="20230912 10:10:54.508"/>
</kw>
<status status="PASS" starttime="20230912 10:10:54.478" endtime="20230912 10:10:54.509"/>
</kw>
<status status="PASS" starttime="20230912 10:10:54.477" endtime="20230912 10:10:54.509"/>
</kw>
<status status="PASS" starttime="20230912 10:10:54.476" endtime="20230912 10:10:54.509"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230912 10:10:54.475" endtime="20230912 10:10:54.509"/>
</test>
<test id="s1-s3-s2-t16" name="Check Recon Namespace File Size Distribution Root" line="147">
<kw name="Wait For Summary">
<arg>${FILE_SIZE_DIST_URL}?path=/</arg>
<arg>\"dist\"</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230912 10:10:54.518" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/dist?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230912 10:10:54.535" level="INFO">${rc} = 0</msg>
<msg timestamp="20230912 10:10:54.535" level="INFO">${output} = {"dist":[0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"status":"OK"}</msg>
<status status="PASS" starttime="20230912 10:10:54.516" endtime="20230912 10:10:54.535"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230912 10:10:54.536" level="INFO">{"dist":[0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"status":"OK"}</msg>
<status status="PASS" starttime="20230912 10:10:54.535" endtime="20230912 10:10:54.536"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230912 10:10:54.537" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230912 10:10:54.536" endtime="20230912 10:10:54.537"/>
</kw>
<status status="PASS" starttime="20230912 10:10:54.515" endtime="20230912 10:10:54.537"/>
</kw>
<msg timestamp="20230912 10:10:54.537" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230912 10:10:54.514" endtime="20230912 10:10:54.537"/>
</kw>
<msg timestamp="20230912 10:10:54.538" level="INFO">${result} = {"dist":[0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"status":"OK"}</msg>
<status status="PASS" starttime="20230912 10:10:54.514" endtime="20230912 10:10:54.538"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230912 10:10:54.538" endtime="20230912 10:10:54.538"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230912 10:10:54.538" endtime="20230912 10:10:54.539"/>
</kw>
<status status="PASS" starttime="20230912 10:10:54.513" endtime="20230912 10:10:54.539"/>
</kw>
<status status="PASS" starttime="20230912 10:10:54.513" endtime="20230912 10:10:54.539"/>
</kw>
<status status="PASS" starttime="20230912 10:10:54.512" endtime="20230912 10:10:54.539"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230912 10:10:54.511" endtime="20230912 10:10:54.539"/>
</test>
<doc>Smoke test for Recon Namespace Summary Endpoint for FILE_SYSTEM_OPTIMIZED buckets.</doc>
<status status="PASS" starttime="20230912 10:09:56.145" endtime="20230912 10:10:54.541"/>
</suite>
<status status="PASS" starttime="20230912 10:09:18.907" endtime="20230912 10:10:54.545"/>
</suite>
<suite id="s1-s4" name="Loaddata" source="/opt/hadoop/smoketest/topology/loaddata.robot">
<test id="s1-s4-t1" name="Create a volume, bucket and key" line="27">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create topvol1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230912 10:10:57.830" level="INFO">Running command 'ozone sh volume create topvol1 2&gt;&amp;1'.</msg>
<msg timestamp="20230912 10:11:03.295" level="INFO">${rc} = 0</msg>
<msg timestamp="20230912 10:11:03.296" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230912 10:10:57.827" endtime="20230912 10:11:03.296"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230912 10:11:03.297" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230912 10:11:03.296" endtime="20230912 10:11:03.298"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230912 10:11:03.298" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230912 10:11:03.298" endtime="20230912 10:11:03.299"/>
</kw>
<status status="PASS" starttime="20230912 10:10:57.826" endtime="20230912 10:11:03.299"/>
</kw>
<msg timestamp="20230912 10:11:03.299" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230912 10:10:57.825" endtime="20230912 10:11:03.299"/>
</kw>
<msg timestamp="20230912 10:11:03.299" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230912 10:10:57.824" endtime="20230912 10:11:03.299"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230912 10:11:03.300" endtime="20230912 10:11:03.300"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /topvol1/bucket1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230912 10:11:03.305" level="INFO">Running command 'ozone sh bucket create /topvol1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20230912 10:11:08.359" level="INFO">${rc} = 0</msg>
<msg timestamp="20230912 10:11:08.359" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230912 10:11:03.302" endtime="20230912 10:11:08.359"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230912 10:11:08.360" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230912 10:11:08.359" endtime="20230912 10:11:08.360"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230912 10:11:08.361" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230912 10:11:08.361" endtime="20230912 10:11:08.361"/>
</kw>
<status status="PASS" starttime="20230912 10:11:03.301" endtime="20230912 10:11:08.361"/>
</kw>
<msg timestamp="20230912 10:11:08.361" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230912 10:11:03.301" endtime="20230912 10:11:08.362"/>
</kw>
<msg timestamp="20230912 10:11:08.362" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230912 10:11:03.300" endtime="20230912 10:11:08.362"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230912 10:11:08.362" endtime="20230912 10:11:08.362"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /topvol1/bucket1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230912 10:11:08.367" level="INFO">Running command 'ozone sh key put /topvol1/bucket1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230912 10:11:16.257" level="INFO">${rc} = 0</msg>
<msg timestamp="20230912 10:11:16.257" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230912 10:11:08.364" endtime="20230912 10:11:16.257"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230912 10:11:16.259" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230912 10:11:16.258" endtime="20230912 10:11:16.259"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230912 10:11:16.260" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230912 10:11:16.259" endtime="20230912 10:11:16.260"/>
</kw>
<status status="PASS" starttime="20230912 10:11:08.364" endtime="20230912 10:11:16.260"/>
</kw>
<msg timestamp="20230912 10:11:16.260" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230912 10:11:08.363" endtime="20230912 10:11:16.260"/>
</kw>
<msg timestamp="20230912 10:11:16.261" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230912 10:11:08.363" endtime="20230912 10:11:16.261"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230912 10:11:16.261" endtime="20230912 10:11:16.261"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230912 10:10:57.823" endtime="20230912 10:11:16.262"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20230912 10:10:57.754" endtime="20230912 10:11:16.263"/>
</suite>
<suite id="s1-s5" name="readdata-first-half" source="/opt/hadoop/smoketest/topology/readdata.robot">
<test id="s1-s5-t1" name="Read data from previously created key" line="27">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230912 10:11:24.861" level="INFO">${random} = 89450</msg>
<status status="PASS" starttime="20230912 10:11:24.860" endtime="20230912 10:11:24.861"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /topvol1/bucket1/key1 /tmp/key1-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230912 10:11:24.866" level="INFO">Running command 'ozone sh key get /topvol1/bucket1/key1 /tmp/key1-89450 2&gt;&amp;1'.</msg>
<msg timestamp="20230912 10:12:20.774" level="INFO">${rc} = 0</msg>
<msg timestamp="20230912 10:12:20.774" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230912 10:11:24.863" endtime="20230912 10:12:20.774"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230912 10:12:20.776" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230912 10:12:20.775" endtime="20230912 10:12:20.776"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230912 10:12:20.776" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230912 10:12:20.776" endtime="20230912 10:12:20.776"/>
</kw>
<status status="PASS" starttime="20230912 10:11:24.863" endtime="20230912 10:12:20.777"/>
</kw>
<msg timestamp="20230912 10:12:20.777" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230912 10:11:24.862" endtime="20230912 10:12:20.777"/>
</kw>
<msg timestamp="20230912 10:12:20.777" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230912 10:11:24.861" endtime="20230912 10:12:20.777"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230912 10:12:20.777" endtime="20230912 10:12:20.778"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230912 10:11:24.860" endtime="20230912 10:12:20.778"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20230912 10:11:24.797" endtime="20230912 10:12:20.779"/>
</suite>
<suite id="s1-s6" name="readdata-second-half" source="/opt/hadoop/smoketest/topology/readdata.robot">
<test id="s1-s6-t1" name="Read data from previously created key" line="27">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230912 10:13:14.197" level="INFO">${random} = 90425</msg>
<status status="PASS" starttime="20230912 10:13:14.196" endtime="20230912 10:13:14.197"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /topvol1/bucket1/key1 /tmp/key1-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230912 10:13:14.203" level="INFO">Running command 'ozone sh key get /topvol1/bucket1/key1 /tmp/key1-90425 2&gt;&amp;1'.</msg>
<msg timestamp="20230912 10:13:22.675" level="INFO">${rc} = 0</msg>
<msg timestamp="20230912 10:13:22.675" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230912 10:13:14.199" endtime="20230912 10:13:22.675"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230912 10:13:22.677" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230912 10:13:22.676" endtime="20230912 10:13:22.677"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230912 10:13:22.678" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230912 10:13:22.677" endtime="20230912 10:13:22.678"/>
</kw>
<status status="PASS" starttime="20230912 10:13:14.199" endtime="20230912 10:13:22.678"/>
</kw>
<msg timestamp="20230912 10:13:22.678" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230912 10:13:14.198" endtime="20230912 10:13:22.679"/>
</kw>
<msg timestamp="20230912 10:13:22.679" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230912 10:13:14.197" endtime="20230912 10:13:22.679"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230912 10:13:22.679" endtime="20230912 10:13:22.679"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230912 10:13:14.195" endtime="20230912 10:13:22.680"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20230912 10:13:14.139" endtime="20230912 10:13:22.681"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="242084"/>
</suite>
<statistics>
<total>
<stat pass="32" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="32" fail="0" skip="0" id="s1" name="ozone-topology">ozone-topology</stat>
<stat pass="2" fail="0" skip="0" id="s1-s1" name="Basic">ozone-topology.Basic</stat>
<stat pass="4" fail="0" skip="0" id="s1-s2" name="Cli">ozone-topology.Cli</stat>
<stat pass="23" fail="0" skip="0" id="s1-s3" name="Recon">ozone-topology.Recon</stat>
<stat pass="7" fail="0" skip="0" id="s1-s3-s1" name="Recon-Api">ozone-topology.Recon.Recon-Api</stat>
<stat pass="16" fail="0" skip="0" id="s1-s3-s2" name="Recon-Nssummary">ozone-topology.Recon.Recon-Nssummary</stat>
<stat pass="1" fail="0" skip="0" id="s1-s4" name="Loaddata">ozone-topology.Loaddata</stat>
<stat pass="1" fail="0" skip="0" id="s1-s5" name="readdata-first-half">ozone-topology.readdata-first-half</stat>
<stat pass="1" fail="0" skip="0" id="s1-s6" name="readdata-second-half">ozone-topology.readdata-second-half</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
