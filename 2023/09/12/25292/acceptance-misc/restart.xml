<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 6.1.1 (Python 3.8.10 on linux)" generated="20230912 10:29:07.642" rpa="false" schemaversion="4">
<suite id="s1" name="restart">
<suite id="s1-s1" name="Generate" source="/opt/hadoop/smoketest/freon/generate.robot">
<test id="s1-s1-t1" name="Ozone Client Key Generator" line="25">
<kw name="Freon OCKG" library="freon">
<arg>prefix=ockg${PREFIX}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230912 10:25:10.697" level="INFO">Running command 'ozone freon ockg  -t 1 -n1 -p ockgpre  2&gt;&amp;1'.</msg>
<msg timestamp="20230912 10:25:29.047" level="INFO">${rc} = 0</msg>
<msg timestamp="20230912 10:25:29.047" level="INFO">${output} = 2023-09-12 10:25:15,857 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-12 10:25:16,230 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230912 10:25:10.694" endtime="20230912 10:25:29.047"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230912 10:25:29.049" level="INFO">2023-09-12 10:25:15,857 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-12 10:25:16,230 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-09-12 10:25:16,230 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-09-12 10:25:16,421 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ockgpre and number-of-tests 1
2023-09-12 10:25:16,568 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-12 10:25:17,573 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-12 10:25:18,573 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-12 10:25:19,574 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-12 10:25:20,181 [main] INFO retry.RetryInvocationHandler: com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.ozone.om.exceptions.OMNotLeaderException): OM:om1 is not the leader. Could not determine the leader node.
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createNotLeaderException(OzoneManagerProtocolServerSideTranslatorPB.java:246)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createLeaderErrorException(OzoneManagerProtocolServerSideTranslatorPB.java:234)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitReadRequestToOM(OzoneManagerProtocolServerSideTranslatorPB.java:227)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.processRequest(OzoneManagerProtocolServerSideTranslatorPB.java:179)
	at org.apache.hadoop.hdds.server.OzoneProtocolMessageDispatcher.processRequest(OzoneProtocolMessageDispatcher.java:87)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitRequest(OzoneManagerProtocolServerSideTranslatorPB.java:148)
	at org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos$OzoneManagerService$2.callBlockingMethod(OzoneManagerProtocolProtos.java)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Server.processCall(ProtobufRpcEngine.java:484)
	at org.apache.hadoop.ipc.ProtobufRpcEngine2$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine2.java:595)
	at org.apache.hadoop.ipc.ProtobufRpcEngine2$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine2.java:573)
	at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:1227)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:1094)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:1017)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/javax.security.auth.Subject.doAs(Subject.java:423)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1899)
	at org.apache.hadoop.ipc.Server$Handler.run(Server.java:3048)
, while invoking $Proxy24.submitRequest over nodeId=null,nodeAddress=om:9862 after 1 failover attempts. Trying to failover after sleeping for 4000ms. Current retry count: 1.
2023-09-12 10:25:20,575 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-12 10:25:21,575 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-12 10:25:22,576 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-12 10:25:23,576 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-12 10:25:24,577 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-12 10:25:24,608 [main] INFO rpc.RpcClient: Creating Volume: vol1, with hadoop as owner and space quota set to -1 bytes, counts quota set to -1
2023-09-12 10:25:24,770 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Encryption set to false, Replication Type set to server-side default replication type, Namespace Quota set to -1, Space Quota set to -1 
2023-09-12 10:25:25,578 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-12 10:25:25,994 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2023-09-12 10:25:26,419 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2023-09-12 10:25:26,613 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-12 10:25:27,614 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-12 10:25:28,615 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2023-09-12 10:25:28,679 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=1, min=2784.95434, max=2784.95434, mean=2784.95434, stddev=0.0, median=2784.95434, p75=2784.95434, p95=2784.95434, p98=2784.95434, p99=2784.95434, p999=2784.95434, mean_rate=0.2588758570486182, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-09-12 10:25:28,680 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 12
2023-09-12 10:25:28,680 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-09-12 10:25:28,680 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20230912 10:25:29.048" endtime="20230912 10:25:29.050"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230912 10:25:29.050" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230912 10:25:29.050" endtime="20230912 10:25:29.051"/>
</kw>
<status status="PASS" starttime="20230912 10:25:10.693" endtime="20230912 10:25:29.051"/>
</kw>
<msg timestamp="20230912 10:25:29.051" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230912 10:25:10.693" endtime="20230912 10:25:29.051"/>
</kw>
<msg timestamp="20230912 10:25:29.052" level="INFO">${result} = 2023-09-12 10:25:15,857 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-12 10:25:16,230 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230912 10:25:10.692" endtime="20230912 10:25:29.052"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230912 10:25:29.052" endtime="20230912 10:25:29.052"/>
</kw>
<status status="PASS" starttime="20230912 10:25:10.690" endtime="20230912 10:25:29.053"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230912 10:25:10.688" endtime="20230912 10:25:29.053"/>
</test>
<test id="s1-s1-t2" name="OM Key Generator" line="28">
<kw name="Freon OMKG" library="freon">
<arg>prefix=omkg${PREFIX}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon omkg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230912 10:25:29.062" level="INFO">Running command 'ozone freon omkg  -t 1 -n1 -p omkgpre  2&gt;&amp;1'.</msg>
<msg timestamp="20230912 10:25:33.721" level="INFO">${rc} = 0</msg>
<msg timestamp="20230912 10:25:33.721" level="INFO">${output} = 2023-09-12 10:25:31,345 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-12 10:25:31,479 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230912 10:25:29.058" endtime="20230912 10:25:33.721"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230912 10:25:33.723" level="INFO">2023-09-12 10:25:31,345 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-12 10:25:31,479 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-09-12 10:25:31,480 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-09-12 10:25:31,578 [main] INFO freon.BaseFreonGenerator: Executing test with prefix omkgpre and number-of-tests 1
2023-09-12 10:25:31,644 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-12 10:25:32,649 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-12 10:25:33,650 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2023-09-12 10:25:33,665 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=1, min=121.679283, max=121.679283, mean=121.679283, stddev=0.0, median=121.679283, p75=121.679283, p95=121.679283, p98=121.679283, p99=121.679283, p999=121.679283, mean_rate=0.9115090256971995, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-09-12 10:25:33,665 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2023-09-12 10:25:33,666 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-09-12 10:25:33,666 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20230912 10:25:33.721" endtime="20230912 10:25:33.723"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230912 10:25:33.724" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230912 10:25:33.723" endtime="20230912 10:25:33.724"/>
</kw>
<status status="PASS" starttime="20230912 10:25:29.058" endtime="20230912 10:25:33.725"/>
</kw>
<msg timestamp="20230912 10:25:33.725" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230912 10:25:29.057" endtime="20230912 10:25:33.725"/>
</kw>
<msg timestamp="20230912 10:25:33.725" level="INFO">${result} = 2023-09-12 10:25:31,345 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-12 10:25:31,479 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230912 10:25:29.056" endtime="20230912 10:25:33.725"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230912 10:25:33.725" endtime="20230912 10:25:33.726"/>
</kw>
<status status="PASS" starttime="20230912 10:25:29.055" endtime="20230912 10:25:33.726"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230912 10:25:29.054" endtime="20230912 10:25:33.726"/>
</test>
<test id="s1-s1-t3" name="OM Bucket Generator" line="31">
<kw name="Freon OMBG" library="freon">
<arg>prefix=ombg${PREFIX}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ombg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230912 10:25:33.734" level="INFO">Running command 'ozone freon ombg  -t 1 -n1 -p ombgpre  2&gt;&amp;1'.</msg>
<msg timestamp="20230912 10:25:38.498" level="INFO">${rc} = 0</msg>
<msg timestamp="20230912 10:25:38.498" level="INFO">${output} = 2023-09-12 10:25:36,073 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-12 10:25:36,285 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230912 10:25:33.731" endtime="20230912 10:25:38.498"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230912 10:25:38.500" level="INFO">2023-09-12 10:25:36,073 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-12 10:25:36,285 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-09-12 10:25:36,285 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-09-12 10:25:36,411 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ombgpre and number-of-tests 1
2023-09-12 10:25:36,517 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-12 10:25:37,524 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2023-09-12 10:25:38,424 [shutdown-hook-0] INFO metrics: type=TIMER, name=bucket-create, count=1, min=23.860876, max=23.860876, mean=23.860876, stddev=0.0, median=23.860876, p75=23.860876, p95=23.860876, p98=23.860876, p99=23.860876, p999=23.860876, mean_rate=0.9704309316653504, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-09-12 10:25:38,425 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2023-09-12 10:25:38,425 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-09-12 10:25:38,425 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20230912 10:25:38.499" endtime="20230912 10:25:38.500"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230912 10:25:38.501" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230912 10:25:38.500" endtime="20230912 10:25:38.501"/>
</kw>
<status status="PASS" starttime="20230912 10:25:33.731" endtime="20230912 10:25:38.501"/>
</kw>
<msg timestamp="20230912 10:25:38.501" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230912 10:25:33.730" endtime="20230912 10:25:38.501"/>
</kw>
<msg timestamp="20230912 10:25:38.502" level="INFO">${result} = 2023-09-12 10:25:36,073 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-12 10:25:36,285 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230912 10:25:33.730" endtime="20230912 10:25:38.502"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230912 10:25:38.502" endtime="20230912 10:25:38.502"/>
</kw>
<status status="PASS" starttime="20230912 10:25:33.728" endtime="20230912 10:25:38.502"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230912 10:25:33.727" endtime="20230912 10:25:38.503"/>
</test>
<doc>Test freon data generation commands</doc>
<status status="PASS" starttime="20230912 10:25:10.619" endtime="20230912 10:25:38.504"/>
</suite>
<suite id="s1-s2" name="Validate-Chunk" source="/opt/hadoop/smoketest/freon/validate-chunk.robot">
<test id="s1-s2-t1" name="DN Chunk Validator" line="25">
<kw name="Freon DCV" library="freon">
<arg>prefix=dcg${PREFIX}</arg>
<arg>n=100</arg>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20230912 10:28:46.134" endtime="20230912 10:28:46.135"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon dcv -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230912 10:28:46.139" level="INFO">Running command 'ozone freon dcv -t 1 -n100 -p dcgpost  2&gt;&amp;1'.</msg>
<msg timestamp="20230912 10:28:52.369" level="INFO">${rc} = 0</msg>
<msg timestamp="20230912 10:28:52.369" level="INFO">${output} = 2023-09-12 10:28:48,373 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-12 10:28:48,495 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230912 10:28:46.136" endtime="20230912 10:28:52.369"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230912 10:28:52.371" level="INFO">2023-09-12 10:28:48,373 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-12 10:28:48,495 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-09-12 10:28:48,495 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-09-12 10:28:48,572 [main] INFO freon.BaseFreonGenerator: Executing test with prefix dcgpost and number-of-tests 100
2023-09-12 10:28:48,617 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2023-09-12 10:28:49,173 [main] INFO freon.DatanodeChunkValidator: Using pipeline PipelineID=6d26054b-25b7-4ea9-9ded-9d1d16acfaa9
2023-09-12 10:28:49,619 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2023-09-12 10:28:49,802 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2023-09-12 10:28:50,109 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2023-09-12 10:28:50,620 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2023-09-12 10:28:51,620 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (100 out of 100)
2023-09-12 10:28:52,011 [shutdown-hook-0] INFO metrics: type=TIMER, name=chunk-validate, count=100, min=2.075793, max=19.081355, mean=4.050419888428934, stddev=2.7217501583836734, median=2.790425, p75=4.440199, p95=9.563128, p98=10.327663, p99=12.423057, p999=19.081355, mean_rate=94.13126122991241, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-09-12 10:28:52,011 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2023-09-12 10:28:52,012 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-09-12 10:28:52,012 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 100</msg>
<status status="PASS" starttime="20230912 10:28:52.370" endtime="20230912 10:28:52.371"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230912 10:28:52.371" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230912 10:28:52.371" endtime="20230912 10:28:52.372"/>
</kw>
<status status="PASS" starttime="20230912 10:28:46.136" endtime="20230912 10:28:52.372"/>
</kw>
<msg timestamp="20230912 10:28:52.372" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230912 10:28:46.135" endtime="20230912 10:28:52.372"/>
</kw>
<msg timestamp="20230912 10:28:52.373" level="INFO">${result} = 2023-09-12 10:28:48,373 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-12 10:28:48,495 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230912 10:28:46.135" endtime="20230912 10:28:52.373"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230912 10:28:52.373" endtime="20230912 10:28:52.373"/>
</kw>
<status status="PASS" starttime="20230912 10:28:46.133" endtime="20230912 10:28:52.374"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230912 10:28:46.132" endtime="20230912 10:28:52.374"/>
</test>
<doc>Test freon chunk validation commands</doc>
<status status="PASS" starttime="20230912 10:28:46.080" endtime="20230912 10:28:52.376"/>
</suite>
<suite id="s1-s3" name="Validate" source="/opt/hadoop/smoketest/freon/validate.robot">
<test id="s1-s3-t1" name="Ozone Client Key Validator" line="25">
<kw name="Freon OCKV" library="freon">
<arg>prefix=ockg${PREFIX}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockv ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230912 10:25:41.614" level="INFO">Running command 'ozone freon ockv  -t 1 -n1 -p ockgpre  2&gt;&amp;1'.</msg>
<msg timestamp="20230912 10:25:48.438" level="INFO">${rc} = 0</msg>
<msg timestamp="20230912 10:25:48.438" level="INFO">${output} = 2023-09-12 10:25:43,757 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-12 10:25:43,883 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230912 10:25:41.611" endtime="20230912 10:25:48.438"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230912 10:25:48.440" level="INFO">2023-09-12 10:25:43,757 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-12 10:25:43,883 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-09-12 10:25:43,883 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-09-12 10:25:43,978 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ockgpre and number-of-tests 1
2023-09-12 10:25:44,040 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-12 10:25:45,052 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-12 10:25:45,939 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2023-09-12 10:25:46,052 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-12 10:25:47,053 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-12 10:25:48,053 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2023-09-12 10:25:48,083 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-validate, count=1, min=58.912457, max=58.912457, mean=58.912457, stddev=0.0, median=58.912457, p75=58.912457, p95=58.912457, p98=58.912457, p99=58.912457, p999=58.912457, mean_rate=0.9096438129280277, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-09-12 10:25:48,084 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 4
2023-09-12 10:25:48,084 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-09-12 10:25:48,084 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20230912 10:25:48.439" endtime="20230912 10:25:48.440"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230912 10:25:48.441" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230912 10:25:48.440" endtime="20230912 10:25:48.441"/>
</kw>
<status status="PASS" starttime="20230912 10:25:41.610" endtime="20230912 10:25:48.441"/>
</kw>
<msg timestamp="20230912 10:25:48.441" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230912 10:25:41.610" endtime="20230912 10:25:48.441"/>
</kw>
<msg timestamp="20230912 10:25:48.441" level="INFO">${result} = 2023-09-12 10:25:43,757 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-12 10:25:43,883 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230912 10:25:41.609" endtime="20230912 10:25:48.442"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230912 10:25:48.442" endtime="20230912 10:25:48.442"/>
</kw>
<status status="PASS" starttime="20230912 10:25:41.607" endtime="20230912 10:25:48.442"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230912 10:25:41.607" endtime="20230912 10:25:48.443"/>
</test>
<doc>Test freon data validation commands</doc>
<status status="PASS" starttime="20230912 10:25:41.554" endtime="20230912 10:25:48.444"/>
</suite>
<suite id="s1-s4" name="Generate-Chunk" source="/opt/hadoop/smoketest/freon/generate-chunk.robot">
<test id="s1-s4-t1" name="DN Chunk Generator" line="25">
<kw name="Freon DCG" library="freon">
<arg>prefix=dcg${PREFIX}</arg>
<arg>n=100</arg>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20230912 10:25:51.743" endtime="20230912 10:25:51.743"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon dcg -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230912 10:25:51.748" level="INFO">Running command 'ozone freon dcg -t 1 -n100 -p dcgpre  2&gt;&amp;1'.</msg>
<msg timestamp="20230912 10:26:03.913" level="INFO">${rc} = 0</msg>
<msg timestamp="20230912 10:26:03.913" level="INFO">${output} = 2023-09-12 10:25:55,228 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-12 10:25:55,431 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230912 10:25:51.745" endtime="20230912 10:26:03.913"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230912 10:26:03.915" level="INFO">2023-09-12 10:25:55,228 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-12 10:25:55,431 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-09-12 10:25:55,431 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-09-12 10:25:56,365 [main] INFO freon.BaseFreonGenerator: Executing test with prefix dcgpre and number-of-tests 100
2023-09-12 10:25:56,418 [Thread-4] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2023-09-12 10:25:57,077 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2023-09-12 10:25:57,422 [Thread-4] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2023-09-12 10:25:57,552 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2023-09-12 10:25:58,423 [Thread-4] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2023-09-12 10:25:59,426 [Thread-4] INFO freon.ProgressBar: Progress: 6.00 % (6 out of 100)
2023-09-12 10:26:00,427 [Thread-4] INFO freon.ProgressBar: Progress: 26.00 % (26 out of 100)
2023-09-12 10:26:01,427 [Thread-4] INFO freon.ProgressBar: Progress: 56.00 % (56 out of 100)
2023-09-12 10:26:02,428 [Thread-4] INFO freon.ProgressBar: Progress: 92.00 % (92 out of 100)
2023-09-12 10:26:03,428 [Thread-4] INFO freon.ProgressBar: Progress: 100.00 % (100 out of 100)
2023-09-12 10:26:03,545 [shutdown-hook-0] INFO metrics: type=TIMER, name=chunk-write, count=100, min=18.104617, max=1712.629692, mean=51.20590002040437, stddev=165.5870975732279, median=30.935297, p75=39.617288, p95=59.587889, p98=93.758831, p99=122.397224, p999=1712.629692, mean_rate=16.075246521131227, m1=17.4, m5=17.4, m15=17.4, rate_unit=events/second, duration_unit=milliseconds
2023-09-12 10:26:03,545 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 7
2023-09-12 10:26:03,545 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-09-12 10:26:03,545 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 100</msg>
<status status="PASS" starttime="20230912 10:26:03.914" endtime="20230912 10:26:03.915"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230912 10:26:03.915" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230912 10:26:03.915" endtime="20230912 10:26:03.916"/>
</kw>
<status status="PASS" starttime="20230912 10:25:51.745" endtime="20230912 10:26:03.916"/>
</kw>
<msg timestamp="20230912 10:26:03.916" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230912 10:25:51.744" endtime="20230912 10:26:03.916"/>
</kw>
<msg timestamp="20230912 10:26:03.917" level="INFO">${result} = 2023-09-12 10:25:55,228 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-12 10:25:55,431 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230912 10:25:51.744" endtime="20230912 10:26:03.917"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230912 10:26:03.917" endtime="20230912 10:26:03.917"/>
</kw>
<status status="PASS" starttime="20230912 10:25:51.741" endtime="20230912 10:26:03.918"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230912 10:25:51.740" endtime="20230912 10:26:03.918"/>
</test>
<doc>Test freon chunk generation commands</doc>
<status status="PASS" starttime="20230912 10:25:51.670" endtime="20230912 10:26:03.920"/>
</suite>
<suite id="s1-s5" name="Validate-Chunk" source="/opt/hadoop/smoketest/freon/validate-chunk.robot">
<test id="s1-s5-t1" name="DN Chunk Validator" line="25">
<kw name="Freon DCV" library="freon">
<arg>prefix=dcg${PREFIX}</arg>
<arg>n=100</arg>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20230912 10:26:07.140" endtime="20230912 10:26:07.141"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon dcv -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230912 10:26:07.145" level="INFO">Running command 'ozone freon dcv -t 1 -n100 -p dcgpre  2&gt;&amp;1'.</msg>
<msg timestamp="20230912 10:26:14.250" level="INFO">${rc} = 0</msg>
<msg timestamp="20230912 10:26:14.250" level="INFO">${output} = 2023-09-12 10:26:09,499 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-12 10:26:09,630 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230912 10:26:07.142" endtime="20230912 10:26:14.250"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230912 10:26:14.251" level="INFO">2023-09-12 10:26:09,499 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-12 10:26:09,630 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-09-12 10:26:09,630 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-09-12 10:26:09,719 [main] INFO freon.BaseFreonGenerator: Executing test with prefix dcgpre and number-of-tests 100
2023-09-12 10:26:09,818 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2023-09-12 10:26:10,484 [main] INFO freon.DatanodeChunkValidator: Using pipeline PipelineID=6d26054b-25b7-4ea9-9ded-9d1d16acfaa9
2023-09-12 10:26:10,827 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2023-09-12 10:26:11,109 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2023-09-12 10:26:11,519 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2023-09-12 10:26:11,827 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2023-09-12 10:26:12,828 [Thread-3] INFO freon.ProgressBar: Progress: 95.00 % (95 out of 100)
2023-09-12 10:26:13,828 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (100 out of 100)
2023-09-12 10:26:13,887 [shutdown-hook-0] INFO metrics: type=TIMER, name=chunk-validate, count=100, min=2.379107, max=16.569845, mean=4.388355449999997, stddev=2.2530318593495804, median=3.696167, p75=4.684411, p95=8.691391, p98=9.78394, p99=11.701226, p999=16.569845, mean_rate=66.7798646364531, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-09-12 10:26:13,888 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 4
2023-09-12 10:26:13,888 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-09-12 10:26:13,888 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 100</msg>
<status status="PASS" starttime="20230912 10:26:14.251" endtime="20230912 10:26:14.252"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230912 10:26:14.252" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230912 10:26:14.252" endtime="20230912 10:26:14.252"/>
</kw>
<status status="PASS" starttime="20230912 10:26:07.142" endtime="20230912 10:26:14.253"/>
</kw>
<msg timestamp="20230912 10:26:14.253" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230912 10:26:07.141" endtime="20230912 10:26:14.253"/>
</kw>
<msg timestamp="20230912 10:26:14.253" level="INFO">${result} = 2023-09-12 10:26:09,499 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-12 10:26:09,630 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230912 10:26:07.141" endtime="20230912 10:26:14.253"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230912 10:26:14.253" endtime="20230912 10:26:14.254"/>
</kw>
<status status="PASS" starttime="20230912 10:26:07.138" endtime="20230912 10:26:14.256"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230912 10:26:07.138" endtime="20230912 10:26:14.256"/>
</test>
<doc>Test freon chunk validation commands</doc>
<status status="PASS" starttime="20230912 10:26:07.084" endtime="20230912 10:26:14.258"/>
</suite>
<suite id="s1-s6" name="Validate" source="/opt/hadoop/smoketest/freon/validate.robot">
<test id="s1-s6-t1" name="Ozone Client Key Validator" line="25">
<kw name="Freon OCKV" library="freon">
<arg>prefix=ockg${PREFIX}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockv ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230912 10:27:38.591" level="INFO">Running command 'ozone freon ockv  -t 1 -n1 -p ockgpre  2&gt;&amp;1'.</msg>
<msg timestamp="20230912 10:27:49.373" level="INFO">${rc} = 0</msg>
<msg timestamp="20230912 10:27:49.373" level="INFO">${output} = 2023-09-12 10:27:42,006 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-12 10:27:42,139 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230912 10:27:38.584" endtime="20230912 10:27:49.373"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230912 10:27:49.374" level="INFO">2023-09-12 10:27:42,006 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-12 10:27:42,139 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-09-12 10:27:42,139 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-09-12 10:27:42,233 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ockgpre and number-of-tests 1
2023-09-12 10:27:42,291 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-12 10:27:43,293 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-12 10:27:44,294 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-12 10:27:45,294 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-12 10:27:46,300 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-12 10:27:46,687 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2023-09-12 10:27:47,300 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-12 10:27:48,301 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2023-09-12 10:27:48,998 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-validate, count=1, min=54.861367, max=54.861367, mean=54.861367, stddev=0.0, median=54.861367, p75=54.861367, p95=54.861367, p98=54.861367, p99=54.861367, p999=54.861367, mean_rate=0.9563250993971794, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-09-12 10:27:48,999 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 7
2023-09-12 10:27:49,000 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-09-12 10:27:49,000 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20230912 10:27:49.373" endtime="20230912 10:27:49.375"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230912 10:27:49.375" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230912 10:27:49.375" endtime="20230912 10:27:49.375"/>
</kw>
<status status="PASS" starttime="20230912 10:27:38.583" endtime="20230912 10:27:49.376"/>
</kw>
<msg timestamp="20230912 10:27:49.376" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230912 10:27:38.581" endtime="20230912 10:27:49.376"/>
</kw>
<msg timestamp="20230912 10:27:49.376" level="INFO">${result} = 2023-09-12 10:27:42,006 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-12 10:27:42,139 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230912 10:27:38.579" endtime="20230912 10:27:49.376"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230912 10:27:49.377" endtime="20230912 10:27:49.377"/>
</kw>
<status status="PASS" starttime="20230912 10:27:38.575" endtime="20230912 10:27:49.377"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230912 10:27:38.573" endtime="20230912 10:27:49.378"/>
</test>
<doc>Test freon data validation commands</doc>
<status status="PASS" starttime="20230912 10:27:38.386" endtime="20230912 10:27:49.379"/>
</suite>
<suite id="s1-s7" name="Validate-Chunk" source="/opt/hadoop/smoketest/freon/validate-chunk.robot">
<test id="s1-s7-t1" name="DN Chunk Validator" line="25">
<kw name="Freon DCV" library="freon">
<arg>prefix=dcg${PREFIX}</arg>
<arg>n=100</arg>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20230912 10:27:52.408" endtime="20230912 10:27:52.408"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon dcv -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230912 10:27:52.413" level="INFO">Running command 'ozone freon dcv -t 1 -n100 -p dcgpre  2&gt;&amp;1'.</msg>
<msg timestamp="20230912 10:27:59.577" level="INFO">${rc} = 0</msg>
<msg timestamp="20230912 10:27:59.577" level="INFO">${output} = 2023-09-12 10:27:54,721 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-12 10:27:54,926 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230912 10:27:52.410" endtime="20230912 10:27:59.577"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230912 10:27:59.579" level="INFO">2023-09-12 10:27:54,721 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-12 10:27:54,926 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-09-12 10:27:54,926 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-09-12 10:27:55,054 [main] INFO freon.BaseFreonGenerator: Executing test with prefix dcgpre and number-of-tests 100
2023-09-12 10:27:55,125 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2023-09-12 10:27:55,843 [main] INFO freon.DatanodeChunkValidator: Using pipeline PipelineID=6d26054b-25b7-4ea9-9ded-9d1d16acfaa9
2023-09-12 10:27:56,126 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2023-09-12 10:27:56,495 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2023-09-12 10:27:56,895 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2023-09-12 10:27:57,126 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2023-09-12 10:27:58,127 [Thread-3] INFO freon.ProgressBar: Progress: 10.00 % (10 out of 100)
2023-09-12 10:27:59,127 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (100 out of 100)
2023-09-12 10:27:59,198 [shutdown-hook-0] INFO metrics: type=TIMER, name=chunk-validate, count=100, min=2.633318, max=28.68269, mean=5.997890570000001, stddev=3.7617101512378626, median=4.920922, p75=6.982014, p95=11.084098, p98=16.521642, p99=18.654938, p999=28.68269, mean_rate=85.44159033457389, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-09-12 10:27:59,200 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 4
2023-09-12 10:27:59,201 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-09-12 10:27:59,201 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 100</msg>
<status status="PASS" starttime="20230912 10:27:59.578" endtime="20230912 10:27:59.579"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230912 10:27:59.579" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230912 10:27:59.579" endtime="20230912 10:27:59.580"/>
</kw>
<status status="PASS" starttime="20230912 10:27:52.409" endtime="20230912 10:27:59.580"/>
</kw>
<msg timestamp="20230912 10:27:59.580" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230912 10:27:52.409" endtime="20230912 10:27:59.580"/>
</kw>
<msg timestamp="20230912 10:27:59.580" level="INFO">${result} = 2023-09-12 10:27:54,721 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-12 10:27:54,926 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230912 10:27:52.409" endtime="20230912 10:27:59.580"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230912 10:27:59.581" endtime="20230912 10:27:59.581"/>
</kw>
<status status="PASS" starttime="20230912 10:27:52.406" endtime="20230912 10:27:59.581"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230912 10:27:52.405" endtime="20230912 10:27:59.582"/>
</test>
<doc>Test freon chunk validation commands</doc>
<status status="PASS" starttime="20230912 10:27:52.350" endtime="20230912 10:27:59.583"/>
</suite>
<suite id="s1-s8" name="Generate" source="/opt/hadoop/smoketest/freon/generate.robot">
<test id="s1-s8-t1" name="Ozone Client Key Generator" line="25">
<kw name="Freon OCKG" library="freon">
<arg>prefix=ockg${PREFIX}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230912 10:28:02.724" level="INFO">Running command 'ozone freon ockg  -t 1 -n1 -p ockgpost  2&gt;&amp;1'.</msg>
<msg timestamp="20230912 10:28:10.632" level="INFO">${rc} = 0</msg>
<msg timestamp="20230912 10:28:10.632" level="INFO">${output} = 2023-09-12 10:28:04,845 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-12 10:28:05,050 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230912 10:28:02.721" endtime="20230912 10:28:10.632"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230912 10:28:10.633" level="INFO">2023-09-12 10:28:04,845 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-12 10:28:05,050 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-09-12 10:28:05,050 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-09-12 10:28:05,146 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ockgpost and number-of-tests 1
2023-09-12 10:28:05,208 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-12 10:28:06,215 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-12 10:28:07,215 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-12 10:28:07,459 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2023-09-12 10:28:07,775 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2023-09-12 10:28:08,217 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-12 10:28:09,217 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-12 10:28:10,218 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2023-09-12 10:28:10,274 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=1, min=3121.956089, max=3121.956089, mean=3121.956089, stddev=0.0, median=3121.956089, p75=3121.956089, p95=3121.956089, p98=3121.956089, p99=3121.956089, p999=3121.956089, mean_rate=0.24337360746717443, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-09-12 10:28:10,274 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 5
2023-09-12 10:28:10,274 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-09-12 10:28:10,274 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20230912 10:28:10.632" endtime="20230912 10:28:10.633"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230912 10:28:10.634" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230912 10:28:10.634" endtime="20230912 10:28:10.634"/>
</kw>
<status status="PASS" starttime="20230912 10:28:02.721" endtime="20230912 10:28:10.634"/>
</kw>
<msg timestamp="20230912 10:28:10.635" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230912 10:28:02.720" endtime="20230912 10:28:10.635"/>
</kw>
<msg timestamp="20230912 10:28:10.635" level="INFO">${result} = 2023-09-12 10:28:04,845 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-12 10:28:05,050 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230912 10:28:02.720" endtime="20230912 10:28:10.635"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230912 10:28:10.635" endtime="20230912 10:28:10.636"/>
</kw>
<status status="PASS" starttime="20230912 10:28:02.718" endtime="20230912 10:28:10.636"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230912 10:28:02.718" endtime="20230912 10:28:10.636"/>
</test>
<test id="s1-s8-t2" name="OM Key Generator" line="28">
<kw name="Freon OMKG" library="freon">
<arg>prefix=omkg${PREFIX}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon omkg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230912 10:28:10.643" level="INFO">Running command 'ozone freon omkg  -t 1 -n1 -p omkgpost  2&gt;&amp;1'.</msg>
<msg timestamp="20230912 10:28:15.688" level="INFO">${rc} = 0</msg>
<msg timestamp="20230912 10:28:15.688" level="INFO">${output} = 2023-09-12 10:28:13,156 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-12 10:28:13,431 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230912 10:28:10.641" endtime="20230912 10:28:15.688"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230912 10:28:15.689" level="INFO">2023-09-12 10:28:13,156 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-12 10:28:13,431 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-09-12 10:28:13,431 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-09-12 10:28:13,537 [main] INFO freon.BaseFreonGenerator: Executing test with prefix omkgpost and number-of-tests 1
2023-09-12 10:28:13,592 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-12 10:28:14,594 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-12 10:28:15,597 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2023-09-12 10:28:15,616 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=1, min=101.533057, max=101.533057, mean=101.533057, stddev=0.0, median=101.533057, p75=101.533057, p95=101.533057, p98=101.533057, p99=101.533057, p999=101.533057, mean_rate=0.8759743507597186, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-09-12 10:28:15,624 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2023-09-12 10:28:15,625 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-09-12 10:28:15,625 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20230912 10:28:15.689" endtime="20230912 10:28:15.690"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230912 10:28:15.690" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230912 10:28:15.690" endtime="20230912 10:28:15.690"/>
</kw>
<status status="PASS" starttime="20230912 10:28:10.640" endtime="20230912 10:28:15.691"/>
</kw>
<msg timestamp="20230912 10:28:15.691" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230912 10:28:10.640" endtime="20230912 10:28:15.691"/>
</kw>
<msg timestamp="20230912 10:28:15.691" level="INFO">${result} = 2023-09-12 10:28:13,156 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-12 10:28:13,431 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230912 10:28:10.639" endtime="20230912 10:28:15.691"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230912 10:28:15.691" endtime="20230912 10:28:15.692"/>
</kw>
<status status="PASS" starttime="20230912 10:28:10.638" endtime="20230912 10:28:15.692"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230912 10:28:10.637" endtime="20230912 10:28:15.692"/>
</test>
<test id="s1-s8-t3" name="OM Bucket Generator" line="31">
<kw name="Freon OMBG" library="freon">
<arg>prefix=ombg${PREFIX}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ombg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230912 10:28:15.700" level="INFO">Running command 'ozone freon ombg  -t 1 -n1 -p ombgpost  2&gt;&amp;1'.</msg>
<msg timestamp="20230912 10:28:20.489" level="INFO">${rc} = 0</msg>
<msg timestamp="20230912 10:28:20.489" level="INFO">${output} = 2023-09-12 10:28:18,095 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-12 10:28:18,295 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230912 10:28:15.697" endtime="20230912 10:28:20.489"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230912 10:28:20.490" level="INFO">2023-09-12 10:28:18,095 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-12 10:28:18,295 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-09-12 10:28:18,295 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-09-12 10:28:18,414 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ombgpost and number-of-tests 1
2023-09-12 10:28:18,477 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-12 10:28:19,485 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2023-09-12 10:28:20,392 [shutdown-hook-0] INFO metrics: type=TIMER, name=bucket-create, count=1, min=31.608518, max=31.608518, mean=31.608518, stddev=0.0, median=31.608518, p75=31.608518, p95=31.608518, p98=31.608518, p99=31.608518, p999=31.608518, mean_rate=0.972612775557673, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-09-12 10:28:20,393 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2023-09-12 10:28:20,393 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-09-12 10:28:20,393 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20230912 10:28:20.489" endtime="20230912 10:28:20.490"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230912 10:28:20.491" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230912 10:28:20.490" endtime="20230912 10:28:20.491"/>
</kw>
<status status="PASS" starttime="20230912 10:28:15.697" endtime="20230912 10:28:20.491"/>
</kw>
<msg timestamp="20230912 10:28:20.491" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230912 10:28:15.696" endtime="20230912 10:28:20.491"/>
</kw>
<msg timestamp="20230912 10:28:20.492" level="INFO">${result} = 2023-09-12 10:28:18,095 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-12 10:28:18,295 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230912 10:28:15.696" endtime="20230912 10:28:20.492"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230912 10:28:20.492" endtime="20230912 10:28:20.492"/>
</kw>
<status status="PASS" starttime="20230912 10:28:15.694" endtime="20230912 10:28:20.493"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230912 10:28:15.693" endtime="20230912 10:28:20.493"/>
</test>
<doc>Test freon data generation commands</doc>
<status status="PASS" starttime="20230912 10:28:02.666" endtime="20230912 10:28:20.499"/>
</suite>
<suite id="s1-s9" name="Validate" source="/opt/hadoop/smoketest/freon/validate.robot">
<test id="s1-s9-t1" name="Ozone Client Key Validator" line="25">
<kw name="Freon OCKV" library="freon">
<arg>prefix=ockg${PREFIX}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockv ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230912 10:28:23.518" level="INFO">Running command 'ozone freon ockv  -t 1 -n1 -p ockgpost  2&gt;&amp;1'.</msg>
<msg timestamp="20230912 10:28:30.579" level="INFO">${rc} = 0</msg>
<msg timestamp="20230912 10:28:30.579" level="INFO">${output} = 2023-09-12 10:28:25,614 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-12 10:28:25,752 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230912 10:28:23.515" endtime="20230912 10:28:30.579"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230912 10:28:30.580" level="INFO">2023-09-12 10:28:25,614 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-12 10:28:25,752 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-09-12 10:28:25,752 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-09-12 10:28:25,832 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ockgpost and number-of-tests 1
2023-09-12 10:28:25,897 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-12 10:28:26,906 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-12 10:28:27,908 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-12 10:28:27,972 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2023-09-12 10:28:28,908 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-12 10:28:29,910 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2023-09-12 10:28:30,211 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-validate, count=1, min=65.386637, max=65.386637, mean=65.386637, stddev=0.0, median=65.386637, p75=65.386637, p95=65.386637, p98=65.386637, p99=65.386637, p999=65.386637, mean_rate=0.9672924331300464, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-09-12 10:28:30,212 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 4
2023-09-12 10:28:30,212 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-09-12 10:28:30,212 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20230912 10:28:30.579" endtime="20230912 10:28:30.580"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230912 10:28:30.581" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230912 10:28:30.581" endtime="20230912 10:28:30.581"/>
</kw>
<status status="PASS" starttime="20230912 10:28:23.515" endtime="20230912 10:28:30.581"/>
</kw>
<msg timestamp="20230912 10:28:30.582" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230912 10:28:23.514" endtime="20230912 10:28:30.582"/>
</kw>
<msg timestamp="20230912 10:28:30.582" level="INFO">${result} = 2023-09-12 10:28:25,614 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-12 10:28:25,752 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230912 10:28:23.514" endtime="20230912 10:28:30.582"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230912 10:28:30.582" endtime="20230912 10:28:30.583"/>
</kw>
<status status="PASS" starttime="20230912 10:28:23.512" endtime="20230912 10:28:30.583"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230912 10:28:23.511" endtime="20230912 10:28:30.583"/>
</test>
<doc>Test freon data validation commands</doc>
<status status="PASS" starttime="20230912 10:28:23.456" endtime="20230912 10:28:30.584"/>
</suite>
<suite id="s1-s10" name="Generate-Chunk" source="/opt/hadoop/smoketest/freon/generate-chunk.robot">
<test id="s1-s10-t1" name="DN Chunk Generator" line="25">
<kw name="Freon DCG" library="freon">
<arg>prefix=dcg${PREFIX}</arg>
<arg>n=100</arg>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20230912 10:28:33.601" endtime="20230912 10:28:33.601"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon dcg -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230912 10:28:33.606" level="INFO">Running command 'ozone freon dcg -t 1 -n100 -p dcgpost  2&gt;&amp;1'.</msg>
<msg timestamp="20230912 10:28:43.091" level="INFO">${rc} = 0</msg>
<msg timestamp="20230912 10:28:43.091" level="INFO">${output} = 2023-09-12 10:28:35,783 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-12 10:28:35,915 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230912 10:28:33.603" endtime="20230912 10:28:43.091"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230912 10:28:43.093" level="INFO">2023-09-12 10:28:35,783 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-12 10:28:35,915 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-09-12 10:28:35,916 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-09-12 10:28:36,807 [main] INFO freon.BaseFreonGenerator: Executing test with prefix dcgpost and number-of-tests 100
2023-09-12 10:28:36,856 [Thread-4] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2023-09-12 10:28:37,420 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2023-09-12 10:28:37,834 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2023-09-12 10:28:37,862 [Thread-4] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2023-09-12 10:28:38,864 [Thread-4] INFO freon.ProgressBar: Progress: 2.00 % (2 out of 100)
2023-09-12 10:28:39,864 [Thread-4] INFO freon.ProgressBar: Progress: 24.00 % (24 out of 100)
2023-09-12 10:28:40,865 [Thread-4] INFO freon.ProgressBar: Progress: 63.00 % (63 out of 100)
2023-09-12 10:28:41,865 [Thread-4] INFO freon.ProgressBar: Progress: 100.00 % (100 out of 100)
2023-09-12 10:28:42,734 [shutdown-hook-0] INFO metrics: type=TIMER, name=chunk-write, count=100, min=15.343789, max=1040.972543, mean=39.11540962883715, stddev=99.96689927812575, median=24.629306, p75=33.104487, p95=49.029601, p98=90.40466, p99=92.605358, p999=1040.972543, mean_rate=19.670480972189146, m1=20.0, m5=20.0, m15=20.0, rate_unit=events/second, duration_unit=milliseconds
2023-09-12 10:28:42,735 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 6
2023-09-12 10:28:42,735 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-09-12 10:28:42,735 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 100</msg>
<status status="PASS" starttime="20230912 10:28:43.092" endtime="20230912 10:28:43.093"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230912 10:28:43.094" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230912 10:28:43.093" endtime="20230912 10:28:43.094"/>
</kw>
<status status="PASS" starttime="20230912 10:28:33.603" endtime="20230912 10:28:43.094"/>
</kw>
<msg timestamp="20230912 10:28:43.094" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230912 10:28:33.602" endtime="20230912 10:28:43.094"/>
</kw>
<msg timestamp="20230912 10:28:43.095" level="INFO">${result} = 2023-09-12 10:28:35,783 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-12 10:28:35,915 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230912 10:28:33.602" endtime="20230912 10:28:43.095"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230912 10:28:43.095" endtime="20230912 10:28:43.095"/>
</kw>
<status status="PASS" starttime="20230912 10:28:33.599" endtime="20230912 10:28:43.095"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230912 10:28:33.599" endtime="20230912 10:28:43.096"/>
</test>
<doc>Test freon chunk generation commands</doc>
<status status="PASS" starttime="20230912 10:28:33.546" endtime="20230912 10:28:43.098"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="113234"/>
</suite>
<statistics>
<total>
<stat pass="14" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="14" fail="0" skip="0" id="s1" name="restart">restart</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1" name="Generate">restart.Generate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2" name="Validate-Chunk">restart.Validate-Chunk</stat>
<stat pass="1" fail="0" skip="0" id="s1-s3" name="Validate">restart.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s4" name="Generate-Chunk">restart.Generate-Chunk</stat>
<stat pass="1" fail="0" skip="0" id="s1-s5" name="Validate-Chunk">restart.Validate-Chunk</stat>
<stat pass="1" fail="0" skip="0" id="s1-s6" name="Validate">restart.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s7" name="Validate-Chunk">restart.Validate-Chunk</stat>
<stat pass="3" fail="0" skip="0" id="s1-s8" name="Generate">restart.Generate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s9" name="Validate">restart.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s10" name="Generate-Chunk">restart.Generate-Chunk</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
