<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 6.1.1 (Python 3.8.10 on linux)" generated="20230912 15:12:46.786" rpa="false" schemaversion="4">
<suite id="s1" name="ozonesecure-root-ca-rotation">
<suite id="s1-s1" name="Kinit" source="/opt/hadoop/smoketest/kinit.robot">
<test id="s1-s1-t1" name="Kinit" line="27">
<kw name="Kinit test user" library="commonlib">
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230912 15:09:58.435" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230912 15:09:58.450" level="INFO">${rc} = 0</msg>
<msg timestamp="20230912 15:09:58.450" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230912 15:09:58.419" endtime="20230912 15:09:58.450"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230912 15:09:58.457" level="INFO">scm</msg>
<status status="PASS" starttime="20230912 15:09:58.451" endtime="20230912 15:09:58.461"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230912 15:09:58.467" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230912 15:09:58.461" endtime="20230912 15:09:58.468"/>
</kw>
<status status="PASS" starttime="20230912 15:09:58.417" endtime="20230912 15:09:58.468"/>
</kw>
<msg timestamp="20230912 15:09:58.468" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230912 15:09:58.413" endtime="20230912 15:09:58.474"/>
</kw>
<msg timestamp="20230912 15:09:58.474" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230912 15:09:58.413" endtime="20230912 15:09:58.474"/>
</kw>
<msg timestamp="20230912 15:09:58.474" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230912 15:09:58.409" endtime="20230912 15:09:58.474"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230912 15:09:58.484" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230912 15:09:58.475" endtime="20230912 15:09:58.485"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230912 15:09:58.529" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20230912 15:09:58.597" level="INFO">${rc} = 0</msg>
<msg timestamp="20230912 15:09:58.597" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230912 15:09:58.507" endtime="20230912 15:09:58.597"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230912 15:09:58.599" level="INFO"/>
<status status="PASS" starttime="20230912 15:09:58.598" endtime="20230912 15:09:58.599"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230912 15:09:58.600" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230912 15:09:58.599" endtime="20230912 15:09:58.600"/>
</kw>
<status status="PASS" starttime="20230912 15:09:58.502" endtime="20230912 15:09:58.601"/>
</kw>
<msg timestamp="20230912 15:09:58.601" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230912 15:09:58.502" endtime="20230912 15:09:58.601"/>
</kw>
<status status="PASS" starttime="20230912 15:09:58.492" endtime="20230912 15:09:58.601"/>
</kw>
<status status="PASS" starttime="20230912 15:09:58.485" endtime="20230912 15:09:58.601"/>
</kw>
<status status="PASS" starttime="20230912 15:09:58.404" endtime="20230912 15:09:58.601"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20230912 15:09:58.400" endtime="20230912 15:09:58.602"/>
</test>
<doc>Kinit test user</doc>
<status status="PASS" starttime="20230912 15:09:57.683" endtime="20230912 15:09:58.606"/>
</suite>
<suite id="s1-s2" name="Root-Ca-Rotation-Client-Checks" source="/opt/hadoop/smoketest/certrotation/root-ca-rotation-client-checks.robot">
<test id="s1-s2-t1" name="Create a volume and bucket" line="27">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230912 15:10:16.853" level="INFO">Running command 'ozone sh volume create rootca-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20230912 15:10:25.984" level="INFO">${rc} = 0</msg>
<msg timestamp="20230912 15:10:25.984" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230912 15:10:16.849" endtime="20230912 15:10:25.984"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230912 15:10:25.986" level="INFO"/>
<status status="PASS" starttime="20230912 15:10:25.985" endtime="20230912 15:10:25.986"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230912 15:10:25.987" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230912 15:10:25.987" endtime="20230912 15:10:25.987"/>
</kw>
<status status="PASS" starttime="20230912 15:10:16.849" endtime="20230912 15:10:25.988"/>
</kw>
<msg timestamp="20230912 15:10:25.988" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230912 15:10:16.848" endtime="20230912 15:10:25.988"/>
</kw>
<msg timestamp="20230912 15:10:25.988" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230912 15:10:16.847" endtime="20230912 15:10:25.989"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230912 15:10:25.989" endtime="20230912 15:10:25.989"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230912 15:10:25.997" level="INFO">Running command 'ozone sh bucket create /rootca-volume/rootca-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230912 15:10:35.254" level="INFO">${rc} = 0</msg>
<msg timestamp="20230912 15:10:35.254" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230912 15:10:25.992" endtime="20230912 15:10:35.254"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230912 15:10:35.256" level="INFO"/>
<status status="PASS" starttime="20230912 15:10:35.255" endtime="20230912 15:10:35.256"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230912 15:10:35.257" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230912 15:10:35.256" endtime="20230912 15:10:35.257"/>
</kw>
<status status="PASS" starttime="20230912 15:10:25.991" endtime="20230912 15:10:35.257"/>
</kw>
<msg timestamp="20230912 15:10:35.257" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230912 15:10:25.991" endtime="20230912 15:10:35.258"/>
</kw>
<msg timestamp="20230912 15:10:35.258" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230912 15:10:25.990" endtime="20230912 15:10:35.258"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230912 15:10:35.258" endtime="20230912 15:10:35.259"/>
</kw>
<tag>create-volume-and-bucket</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230912 15:10:16.846" endtime="20230912 15:10:35.259"/>
</test>
<test id="s1-s2-t2" name="Create key" line="34">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230912 15:10:35.269" level="INFO">Running command 'echo "rootca: key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20230912 15:10:35.272" level="INFO">${rc} = 0</msg>
<msg timestamp="20230912 15:10:35.272" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230912 15:10:35.264" endtime="20230912 15:10:35.272"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230912 15:10:35.274" level="INFO"/>
<status status="PASS" starttime="20230912 15:10:35.273" endtime="20230912 15:10:35.274"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230912 15:10:35.275" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230912 15:10:35.275" endtime="20230912 15:10:35.275"/>
</kw>
<status status="PASS" starttime="20230912 15:10:35.263" endtime="20230912 15:10:35.276"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230912 15:10:35.281" level="INFO">Running command 'ozone sh key put /rootca-volume/rootca-bucket/rootca-key /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230912 15:10:49.170" level="INFO">${rc} = 0</msg>
<msg timestamp="20230912 15:10:49.170" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230912 15:10:35.278" endtime="20230912 15:10:49.170"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230912 15:10:49.177" level="INFO"/>
<status status="PASS" starttime="20230912 15:10:49.176" endtime="20230912 15:10:49.181"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230912 15:10:49.184" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230912 15:10:49.181" endtime="20230912 15:10:49.184"/>
</kw>
<status status="PASS" starttime="20230912 15:10:35.277" endtime="20230912 15:10:49.184"/>
</kw>
<msg timestamp="20230912 15:10:49.184" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230912 15:10:35.277" endtime="20230912 15:10:49.185"/>
</kw>
<msg timestamp="20230912 15:10:49.186" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230912 15:10:35.276" endtime="20230912 15:10:49.187"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230912 15:10:49.187" endtime="20230912 15:10:49.188"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230912 15:10:49.204" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230912 15:10:49.220" level="INFO">${rc} = 0</msg>
<msg timestamp="20230912 15:10:49.220" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230912 15:10:49.193" endtime="20230912 15:10:49.220"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230912 15:10:49.222" level="INFO"/>
<status status="PASS" starttime="20230912 15:10:49.221" endtime="20230912 15:10:49.222"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230912 15:10:49.223" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230912 15:10:49.222" endtime="20230912 15:10:49.223"/>
</kw>
<status status="PASS" starttime="20230912 15:10:49.189" endtime="20230912 15:10:49.224"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230912 15:10:35.262" endtime="20230912 15:10:49.224"/>
</test>
<test id="s1-s2-t3" name="Read data from previously created key" line="40">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230912 15:10:49.227" level="INFO">${random} = 26755</msg>
<status status="PASS" starttime="20230912 15:10:49.226" endtime="20230912 15:10:49.227"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230912 15:10:49.232" level="INFO">Running command 'ozone sh key get /rootca-volume/rootca-bucket/rootca-key /tmp/key-26755 2&gt;&amp;1'.</msg>
<msg timestamp="20230912 15:11:00.454" level="INFO">${rc} = 0</msg>
<msg timestamp="20230912 15:11:00.455" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230912 15:10:49.229" endtime="20230912 15:11:00.455"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230912 15:11:00.456" level="INFO"/>
<status status="PASS" starttime="20230912 15:11:00.455" endtime="20230912 15:11:00.456"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230912 15:11:00.457" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230912 15:11:00.456" endtime="20230912 15:11:00.457"/>
</kw>
<status status="PASS" starttime="20230912 15:10:49.228" endtime="20230912 15:11:00.458"/>
</kw>
<msg timestamp="20230912 15:11:00.458" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230912 15:10:49.228" endtime="20230912 15:11:00.458"/>
</kw>
<msg timestamp="20230912 15:11:00.458" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230912 15:10:49.227" endtime="20230912 15:11:00.458"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230912 15:11:00.458" endtime="20230912 15:11:00.459"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230912 15:11:00.463" level="INFO">Running command 'cat /tmp/key-26755 2&gt;&amp;1'.</msg>
<msg timestamp="20230912 15:11:00.467" level="INFO">${rc} = 0</msg>
<msg timestamp="20230912 15:11:00.467" level="INFO">${output} = rootca: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230912 15:11:00.460" endtime="20230912 15:11:00.467"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230912 15:11:00.468" level="INFO">rootca: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230912 15:11:00.468" endtime="20230912 15:11:00.469"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230912 15:11:00.469" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230912 15:11:00.469" endtime="20230912 15:11:00.469"/>
</kw>
<msg timestamp="20230912 15:11:00.470" level="INFO">${output} = rootca: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230912 15:11:00.459" endtime="20230912 15:11:00.470"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230912 15:11:00.470" endtime="20230912 15:11:00.470"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230912 15:11:00.474" level="INFO">Running command 'rm /tmp/key-26755 2&gt;&amp;1'.</msg>
<msg timestamp="20230912 15:11:00.480" level="INFO">${rc} = 0</msg>
<msg timestamp="20230912 15:11:00.480" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230912 15:11:00.471" endtime="20230912 15:11:00.480"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230912 15:11:00.481" level="INFO"/>
<status status="PASS" starttime="20230912 15:11:00.481" endtime="20230912 15:11:00.482"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230912 15:11:00.483" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230912 15:11:00.482" endtime="20230912 15:11:00.483"/>
</kw>
<status status="PASS" starttime="20230912 15:11:00.471" endtime="20230912 15:11:00.483"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230912 15:10:49.225" endtime="20230912 15:11:00.484"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20230912 15:10:16.742" endtime="20230912 15:11:00.485"/>
</suite>
<suite id="s1-s3" name="Root-Ca-Rotation-Client-Checks" source="/opt/hadoop/smoketest/certrotation/root-ca-rotation-client-checks.robot">
<test id="s1-s3-t1" name="Create a volume and bucket" line="27">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230912 15:11:40.465" level="INFO">Running command 'ozone sh volume create rootca2-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20230912 15:11:49.258" level="INFO">${rc} = 0</msg>
<msg timestamp="20230912 15:11:49.258" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230912 15:11:40.461" endtime="20230912 15:11:49.258"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230912 15:11:49.260" level="INFO"/>
<status status="PASS" starttime="20230912 15:11:49.259" endtime="20230912 15:11:49.260"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230912 15:11:49.261" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230912 15:11:49.260" endtime="20230912 15:11:49.261"/>
</kw>
<status status="PASS" starttime="20230912 15:11:40.461" endtime="20230912 15:11:49.261"/>
</kw>
<msg timestamp="20230912 15:11:49.261" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230912 15:11:40.460" endtime="20230912 15:11:49.262"/>
</kw>
<msg timestamp="20230912 15:11:49.262" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230912 15:11:40.459" endtime="20230912 15:11:49.262"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230912 15:11:49.262" endtime="20230912 15:11:49.263"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230912 15:11:49.268" level="INFO">Running command 'ozone sh bucket create /rootca2-volume/rootca2-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230912 15:11:56.692" level="INFO">${rc} = 0</msg>
<msg timestamp="20230912 15:11:56.692" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230912 15:11:49.265" endtime="20230912 15:11:56.692"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230912 15:11:56.694" level="INFO"/>
<status status="PASS" starttime="20230912 15:11:56.693" endtime="20230912 15:11:56.694"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230912 15:11:56.695" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230912 15:11:56.695" endtime="20230912 15:11:56.695"/>
</kw>
<status status="PASS" starttime="20230912 15:11:49.264" endtime="20230912 15:11:56.696"/>
</kw>
<msg timestamp="20230912 15:11:56.696" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230912 15:11:49.264" endtime="20230912 15:11:56.696"/>
</kw>
<msg timestamp="20230912 15:11:56.696" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230912 15:11:49.263" endtime="20230912 15:11:56.696"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230912 15:11:56.697" endtime="20230912 15:11:56.697"/>
</kw>
<tag>create-volume-and-bucket</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230912 15:11:40.458" endtime="20230912 15:11:56.697"/>
</test>
<test id="s1-s3-t2" name="Create key" line="34">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230912 15:11:56.704" level="INFO">Running command 'echo "rootca2: key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20230912 15:11:56.707" level="INFO">${rc} = 0</msg>
<msg timestamp="20230912 15:11:56.707" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230912 15:11:56.701" endtime="20230912 15:11:56.707"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230912 15:11:56.708" level="INFO"/>
<status status="PASS" starttime="20230912 15:11:56.707" endtime="20230912 15:11:56.708"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230912 15:11:56.709" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230912 15:11:56.708" endtime="20230912 15:11:56.709"/>
</kw>
<status status="PASS" starttime="20230912 15:11:56.700" endtime="20230912 15:11:56.709"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230912 15:11:56.715" level="INFO">Running command 'ozone sh key put /rootca2-volume/rootca2-bucket/rootca2-key /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230912 15:12:07.865" level="INFO">${rc} = 0</msg>
<msg timestamp="20230912 15:12:07.865" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230912 15:11:56.712" endtime="20230912 15:12:07.865"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230912 15:12:07.867" level="INFO"/>
<status status="PASS" starttime="20230912 15:12:07.866" endtime="20230912 15:12:07.867"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230912 15:12:07.868" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230912 15:12:07.867" endtime="20230912 15:12:07.868"/>
</kw>
<status status="PASS" starttime="20230912 15:11:56.711" endtime="20230912 15:12:07.869"/>
</kw>
<msg timestamp="20230912 15:12:07.869" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230912 15:11:56.710" endtime="20230912 15:12:07.869"/>
</kw>
<msg timestamp="20230912 15:12:07.870" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230912 15:11:56.710" endtime="20230912 15:12:07.870"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230912 15:12:07.870" endtime="20230912 15:12:07.871"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230912 15:12:07.875" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230912 15:12:07.879" level="INFO">${rc} = 0</msg>
<msg timestamp="20230912 15:12:07.879" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230912 15:12:07.872" endtime="20230912 15:12:07.879"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230912 15:12:07.880" level="INFO"/>
<status status="PASS" starttime="20230912 15:12:07.879" endtime="20230912 15:12:07.880"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230912 15:12:07.881" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230912 15:12:07.881" endtime="20230912 15:12:07.881"/>
</kw>
<status status="PASS" starttime="20230912 15:12:07.871" endtime="20230912 15:12:07.882"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230912 15:11:56.699" endtime="20230912 15:12:07.882"/>
</test>
<test id="s1-s3-t3" name="Read data from previously created key" line="40">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230912 15:12:07.884" level="INFO">${random} = 41180</msg>
<status status="PASS" starttime="20230912 15:12:07.884" endtime="20230912 15:12:07.884"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230912 15:12:07.889" level="INFO">Running command 'ozone sh key get /rootca2-volume/rootca2-bucket/rootca2-key /tmp/key-41180 2&gt;&amp;1'.</msg>
<msg timestamp="20230912 15:12:20.140" level="INFO">${rc} = 0</msg>
<msg timestamp="20230912 15:12:20.140" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230912 15:12:07.886" endtime="20230912 15:12:20.140"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230912 15:12:20.141" level="INFO"/>
<status status="PASS" starttime="20230912 15:12:20.141" endtime="20230912 15:12:20.142"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230912 15:12:20.142" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230912 15:12:20.142" endtime="20230912 15:12:20.142"/>
</kw>
<status status="PASS" starttime="20230912 15:12:07.886" endtime="20230912 15:12:20.143"/>
</kw>
<msg timestamp="20230912 15:12:20.143" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230912 15:12:07.885" endtime="20230912 15:12:20.143"/>
</kw>
<msg timestamp="20230912 15:12:20.143" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230912 15:12:07.885" endtime="20230912 15:12:20.143"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230912 15:12:20.144" endtime="20230912 15:12:20.144"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230912 15:12:20.148" level="INFO">Running command 'cat /tmp/key-41180 2&gt;&amp;1'.</msg>
<msg timestamp="20230912 15:12:20.152" level="INFO">${rc} = 0</msg>
<msg timestamp="20230912 15:12:20.152" level="INFO">${output} = rootca2: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230912 15:12:20.145" endtime="20230912 15:12:20.152"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230912 15:12:20.154" level="INFO">rootca2: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230912 15:12:20.153" endtime="20230912 15:12:20.154"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230912 15:12:20.155" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230912 15:12:20.154" endtime="20230912 15:12:20.155"/>
</kw>
<msg timestamp="20230912 15:12:20.155" level="INFO">${output} = rootca2: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230912 15:12:20.144" endtime="20230912 15:12:20.155"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230912 15:12:20.155" endtime="20230912 15:12:20.156"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230912 15:12:20.160" level="INFO">Running command 'rm /tmp/key-41180 2&gt;&amp;1'.</msg>
<msg timestamp="20230912 15:12:20.164" level="INFO">${rc} = 0</msg>
<msg timestamp="20230912 15:12:20.164" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230912 15:12:20.157" endtime="20230912 15:12:20.165"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230912 15:12:20.166" level="INFO"/>
<status status="PASS" starttime="20230912 15:12:20.165" endtime="20230912 15:12:20.166"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230912 15:12:20.167" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230912 15:12:20.166" endtime="20230912 15:12:20.167"/>
</kw>
<status status="PASS" starttime="20230912 15:12:20.156" endtime="20230912 15:12:20.167"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230912 15:12:07.883" endtime="20230912 15:12:20.167"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20230912 15:11:40.387" endtime="20230912 15:12:20.169"/>
</suite>
<suite id="s1-s4" name="Root-Ca-Rotation" source="/opt/hadoop/smoketest/scmha/root-ca-rotation.robot">
<test id="s1-s4-t1" name="Verify root CA rotation metrics" line="26">
<kw name="Execute" library="os">
<var>${successRotationLine}</var>
<arg>curl -sS 'http://localhost:9876/jmx' | grep NumSuccessRotation</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230912 15:12:24.446" level="INFO">Running command 'curl -sS 'http://localhost:9876/jmx' | grep NumSuccessRotation 2&gt;&amp;1'.</msg>
<msg timestamp="20230912 15:12:25.216" level="INFO">${rc} = 0</msg>
<msg timestamp="20230912 15:12:25.216" level="INFO">${output} =     "NumSuccessRotation" : 2,</msg>
<status status="PASS" starttime="20230912 15:12:24.443" endtime="20230912 15:12:25.216"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230912 15:12:25.218" level="INFO">    "NumSuccessRotation" : 2,</msg>
<status status="PASS" starttime="20230912 15:12:25.217" endtime="20230912 15:12:25.218"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230912 15:12:25.219" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230912 15:12:25.218" endtime="20230912 15:12:25.219"/>
</kw>
<status status="PASS" starttime="20230912 15:12:24.442" endtime="20230912 15:12:25.219"/>
</kw>
<msg timestamp="20230912 15:12:25.219" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230912 15:12:24.441" endtime="20230912 15:12:25.219"/>
</kw>
<msg timestamp="20230912 15:12:25.220" level="INFO">${successRotationLine} =     "NumSuccessRotation" : 2,</msg>
<status status="PASS" starttime="20230912 15:12:24.441" endtime="20230912 15:12:25.220"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${successRotationLine}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230912 15:12:25.220" level="INFO">    "NumSuccessRotation" : 2,</msg>
<status status="PASS" starttime="20230912 15:12:25.220" endtime="20230912 15:12:25.221"/>
</kw>
<kw name="Split String" library="String">
<var>${temp_1}</var>
<arg>${successRotationLine}</arg>
<arg>:</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20230912 15:12:25.222" level="INFO">${temp_1} = ['    "NumSuccessRotation" ', ' 2,']</msg>
<status status="PASS" starttime="20230912 15:12:25.221" endtime="20230912 15:12:25.222"/>
</kw>
<kw name="Strip String" library="String">
<var>${temp_2}</var>
<arg>${temp_1[1]}</arg>
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<msg timestamp="20230912 15:12:25.226" level="INFO">${temp_2} = 2,</msg>
<status status="PASS" starttime="20230912 15:12:25.222" endtime="20230912 15:12:25.226"/>
</kw>
<kw name="Split String" library="String">
<var>${temp_3}</var>
<arg>${temp_2}</arg>
<arg>,</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20230912 15:12:25.227" level="INFO">${temp_3} = ['2', '']</msg>
<status status="PASS" starttime="20230912 15:12:25.227" endtime="20230912 15:12:25.227"/>
</kw>
<kw name="Strip String" library="String">
<var>${successRotation}</var>
<arg>${temp_3[0]}</arg>
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<msg timestamp="20230912 15:12:25.229" level="INFO">${successRotation} = 2</msg>
<status status="PASS" starttime="20230912 15:12:25.227" endtime="20230912 15:12:25.229"/>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<var>${successRotation}</var>
<arg>${successRotation}</arg>
<doc>Converts the given item to a floating point number.</doc>
<msg timestamp="20230912 15:12:25.229" level="INFO">${successRotation} = 2.0</msg>
<status status="PASS" starttime="20230912 15:12:25.229" endtime="20230912 15:12:25.229"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${successRotation} &gt;= 1</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230912 15:12:25.230" endtime="20230912 15:12:25.230"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230912 15:12:24.440" endtime="20230912 15:12:25.231"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20230912 15:12:24.359" endtime="20230912 15:12:25.234"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="85323"/>
</suite>
<statistics>
<total>
<stat pass="8" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="2" fail="0" skip="0">create-volume-and-bucket</stat>
</tag>
<suite>
<stat pass="8" fail="0" skip="0" id="s1" name="ozonesecure-root-ca-rotation">ozonesecure-root-ca-rotation</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1" name="Kinit">ozonesecure-root-ca-rotation.Kinit</stat>
<stat pass="3" fail="0" skip="0" id="s1-s2" name="Root-Ca-Rotation-Client-Checks">ozonesecure-root-ca-rotation.Root-Ca-Rotation-Client-Checks</stat>
<stat pass="3" fail="0" skip="0" id="s1-s3" name="Root-Ca-Rotation-Client-Checks">ozonesecure-root-ca-rotation.Root-Ca-Rotation-Client-Checks</stat>
<stat pass="1" fail="0" skip="0" id="s1-s4" name="Root-Ca-Rotation">ozonesecure-root-ca-rotation.Root-Ca-Rotation</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
