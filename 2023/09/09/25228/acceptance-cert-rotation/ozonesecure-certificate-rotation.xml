<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 6.1.1 (Python 3.8.10 on linux)" generated="20230909 17:16:51.987" rpa="false" schemaversion="4">
<suite id="s1" name="ozonesecure-certificate-rotation" source="/opt/hadoop/smoketest/certrotation">
<suite id="s1-s1" name="Cert-Rotation" source="/opt/hadoop/smoketest/certrotation/cert-rotation.robot">
<kw name="Setup Test" type="SETUP">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230909 17:14:42.933" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230909 17:14:42.940" level="INFO">${rc} = 0</msg>
<msg timestamp="20230909 17:14:42.940" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230909 17:14:42.930" endtime="20230909 17:14:42.940"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230909 17:14:42.941" level="INFO">scm</msg>
<status status="PASS" starttime="20230909 17:14:42.940" endtime="20230909 17:14:42.941"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230909 17:14:42.942" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230909 17:14:42.941" endtime="20230909 17:14:42.942"/>
</kw>
<status status="PASS" starttime="20230909 17:14:42.929" endtime="20230909 17:14:42.942"/>
</kw>
<msg timestamp="20230909 17:14:42.942" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230909 17:14:42.929" endtime="20230909 17:14:42.943"/>
</kw>
<msg timestamp="20230909 17:14:42.943" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230909 17:14:42.928" endtime="20230909 17:14:42.943"/>
</kw>
<msg timestamp="20230909 17:14:42.943" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230909 17:14:42.928" endtime="20230909 17:14:42.943"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230909 17:14:42.944" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230909 17:14:42.943" endtime="20230909 17:14:42.944"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230909 17:14:42.950" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20230909 17:14:43.010" level="INFO">${rc} = 0</msg>
<msg timestamp="20230909 17:14:43.010" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230909 17:14:42.947" endtime="20230909 17:14:43.010"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230909 17:14:43.012" level="INFO"/>
<status status="PASS" starttime="20230909 17:14:43.011" endtime="20230909 17:14:43.012"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230909 17:14:43.012" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230909 17:14:43.012" endtime="20230909 17:14:43.013"/>
</kw>
<status status="PASS" starttime="20230909 17:14:42.946" endtime="20230909 17:14:43.013"/>
</kw>
<msg timestamp="20230909 17:14:43.013" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230909 17:14:42.946" endtime="20230909 17:14:43.013"/>
</kw>
<status status="PASS" starttime="20230909 17:14:42.945" endtime="20230909 17:14:43.013"/>
</kw>
<status status="PASS" starttime="20230909 17:14:42.944" endtime="20230909 17:14:43.013"/>
</kw>
<status status="PASS" starttime="20230909 17:14:42.927" endtime="20230909 17:14:43.014"/>
</kw>
<status status="PASS" starttime="20230909 17:14:42.926" endtime="20230909 17:14:43.014"/>
</kw>
<status status="PASS" starttime="20230909 17:14:42.926" endtime="20230909 17:14:43.014"/>
</kw>
<test id="s1-s1-t1" name="Test datanode functions before and after certificate rotation" line="55">
<kw name="Basic key generation and validation">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>10</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230909 17:14:43.017" level="INFO">${random} = W8FTNLDS7S</msg>
<status status="PASS" starttime="20230909 17:14:43.016" endtime="20230909 17:14:43.017"/>
</kw>
<kw name="Freon OCKG" library="freon">
<arg>prefix=${random}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230909 17:14:43.024" level="INFO">Running command 'ozone freon ockg  -t 1 -n1 -p W8FTNLDS7S  2&gt;&amp;1'.</msg>
<msg timestamp="20230909 17:15:03.003" level="INFO">${rc} = 0</msg>
<msg timestamp="20230909 17:15:03.003" level="INFO">${output} = 2023-09-09 17:14:49,330 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-09 17:14:49,688 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230909 17:14:43.021" endtime="20230909 17:15:03.003"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230909 17:15:03.005" level="INFO">2023-09-09 17:14:49,330 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-09 17:14:49,688 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-09-09 17:14:49,688 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-09-09 17:14:49,846 [main] INFO freon.BaseFreonGenerator: Executing test with prefix W8FTNLDS7S and number-of-tests 1
2023-09-09 17:14:49,972 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-09 17:14:50,981 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-09 17:14:51,981 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-09 17:14:52,982 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-09 17:14:53,924 [main] INFO rpc.RpcClient: Creating Volume: vol1, with testuser as owner and space quota set to -1 bytes, counts quota set to -1
2023-09-09 17:14:53,992 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-09 17:14:54,287 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with server-side default bucket layout, testuser as owner, Versioning false, Storage Type set to DISK and Encryption set to false, Replication Type set to server-side default replication type, Namespace Quota set to -1, Space Quota set to -1 
2023-09-09 17:14:54,993 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-09 17:14:55,735 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2023-09-09 17:14:55,837 [pool-2-thread-1] INFO netty.NettyConfigKeys$DataStream: setTlsConf GrpcTlsConfig0-
2023-09-09 17:14:55,993 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-09 17:14:56,666 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2023-09-09 17:14:56,994 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-09 17:14:57,994 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-09 17:14:58,995 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-09 17:14:59,996 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-09 17:15:00,996 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-09 17:15:01,997 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2023-09-09 17:15:02,640 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=1, min=7403.168799, max=7403.168799, mean=7403.168799, stddev=0.0, median=7403.168799, p75=7403.168799, p95=7403.168799, p98=7403.168799, p99=7403.168799, p999=7403.168799, mean_rate=0.12214471580852805, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-09-09 17:15:02,641 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 13
2023-09-09 17:15:02,641 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-09-09 17:15:02,641 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20230909 17:15:03.004" endtime="20230909 17:15:03.005"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230909 17:15:03.006" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230909 17:15:03.005" endtime="20230909 17:15:03.006"/>
</kw>
<status status="PASS" starttime="20230909 17:14:43.020" endtime="20230909 17:15:03.006"/>
</kw>
<msg timestamp="20230909 17:15:03.006" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230909 17:14:43.020" endtime="20230909 17:15:03.006"/>
</kw>
<msg timestamp="20230909 17:15:03.007" level="INFO">${result} = 2023-09-09 17:14:49,330 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-09 17:14:49,688 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230909 17:14:43.019" endtime="20230909 17:15:03.007"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230909 17:15:03.007" endtime="20230909 17:15:03.008"/>
</kw>
<status status="PASS" starttime="20230909 17:14:43.017" endtime="20230909 17:15:03.008"/>
</kw>
<kw name="Freon OCKV" library="freon">
<arg>prefix=${random}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockv ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230909 17:15:03.015" level="INFO">Running command 'ozone freon ockv  -t 1 -n1 -p W8FTNLDS7S  2&gt;&amp;1'.</msg>
<msg timestamp="20230909 17:15:16.815" level="INFO">${rc} = 0</msg>
<msg timestamp="20230909 17:15:16.815" level="INFO">${output} = 2023-09-09 17:15:07,906 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-09 17:15:08,741 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230909 17:15:03.012" endtime="20230909 17:15:16.815"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230909 17:15:16.817" level="INFO">2023-09-09 17:15:07,906 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-09 17:15:08,741 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-09-09 17:15:08,742 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-09-09 17:15:08,891 [main] INFO freon.BaseFreonGenerator: Executing test with prefix W8FTNLDS7S and number-of-tests 1
2023-09-09 17:15:08,972 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-09 17:15:09,981 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-09 17:15:10,982 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-09 17:15:11,983 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-09 17:15:12,984 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-09 17:15:13,185 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2023-09-09 17:15:13,985 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-09 17:15:14,986 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-09 17:15:15,986 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2023-09-09 17:15:16,438 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-validate, count=1, min=82.101155, max=82.101155, mean=82.101155, stddev=0.0, median=82.101155, p75=82.101155, p95=82.101155, p98=82.101155, p99=82.101155, p999=82.101155, mean_rate=0.9020606396319134, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-09-09 17:15:16,439 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 7
2023-09-09 17:15:16,439 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-09-09 17:15:16,439 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20230909 17:15:16.816" endtime="20230909 17:15:16.817"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230909 17:15:16.818" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230909 17:15:16.817" endtime="20230909 17:15:16.818"/>
</kw>
<status status="PASS" starttime="20230909 17:15:03.012" endtime="20230909 17:15:16.818"/>
</kw>
<msg timestamp="20230909 17:15:16.818" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230909 17:15:03.011" endtime="20230909 17:15:16.819"/>
</kw>
<msg timestamp="20230909 17:15:16.819" level="INFO">${result} = 2023-09-09 17:15:07,906 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-09 17:15:08,741 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230909 17:15:03.011" endtime="20230909 17:15:16.819"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230909 17:15:16.819" endtime="20230909 17:15:16.820"/>
</kw>
<status status="PASS" starttime="20230909 17:15:03.009" endtime="20230909 17:15:16.820"/>
</kw>
<status status="PASS" starttime="20230909 17:14:43.015" endtime="20230909 17:15:16.820"/>
</kw>
<kw name="Find certificate duration">
<var>${certDuration}</var>
<kw name="Execute" library="os">
<var>${waitTime}</var>
<arg>ozone getconf confKey hdds.x509.default.duration | sed 's/PT//'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230909 17:15:16.828" level="INFO">Running command 'ozone getconf confKey hdds.x509.default.duration | sed 's/PT//' 2&gt;&amp;1'.</msg>
<msg timestamp="20230909 17:15:20.042" level="INFO">${rc} = 0</msg>
<msg timestamp="20230909 17:15:20.042" level="INFO">${output} = 40s</msg>
<status status="PASS" starttime="20230909 17:15:16.823" endtime="20230909 17:15:20.042"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230909 17:15:20.044" level="INFO">40s</msg>
<status status="PASS" starttime="20230909 17:15:20.043" endtime="20230909 17:15:20.044"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230909 17:15:20.045" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230909 17:15:20.045" endtime="20230909 17:15:20.046"/>
</kw>
<status status="PASS" starttime="20230909 17:15:16.823" endtime="20230909 17:15:20.046"/>
</kw>
<msg timestamp="20230909 17:15:20.046" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230909 17:15:16.822" endtime="20230909 17:15:20.046"/>
</kw>
<msg timestamp="20230909 17:15:20.047" level="INFO">${waitTime} = 40s</msg>
<status status="PASS" starttime="20230909 17:15:16.821" endtime="20230909 17:15:20.047"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>"${waitTime}" != "${EMPTY}"</arg>
<arg>${waitTime}</arg>
<arg>0s</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230909 17:15:20.048" level="INFO">${result} = 40s</msg>
<status status="PASS" starttime="20230909 17:15:20.047" endtime="20230909 17:15:20.048"/>
</kw>
<msg timestamp="20230909 17:15:20.049" level="INFO">${certDuration} = 40s</msg>
<status status="PASS" starttime="20230909 17:15:16.821" endtime="20230909 17:15:20.049"/>
</kw>
<kw name="Double duration">
<var>${doubleDuration}</var>
<arg>${certDuration}</arg>
<kw name="Add Time To Time" library="DateTime">
<var>${doubleDuration}</var>
<arg>${duration}</arg>
<arg>${duration}</arg>
<doc>Adds time to another time and returns the resulting time.</doc>
<msg timestamp="20230909 17:15:20.051" level="INFO">${doubleDuration} = 80.0</msg>
<status status="PASS" starttime="20230909 17:15:20.050" endtime="20230909 17:15:20.051"/>
</kw>
<msg timestamp="20230909 17:15:20.051" level="INFO">${doubleDuration} = 80.0</msg>
<status status="PASS" starttime="20230909 17:15:20.049" endtime="20230909 17:15:20.051"/>
</kw>
<kw name="Get datanode cert serial">
<var>${certId1}</var>
<kw name="Execute" library="os">
<var>${certSerial}</var>
<arg>openssl s_client -connect "${datanode}":"${port}" -showcerts | openssl x509 -noout -serial | grep serial | sed 's/serial=//'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230909 17:15:20.057" level="INFO">Running command 'openssl s_client -connect "datanode":"9859" -showcerts | openssl x509 -noout -serial | grep serial | sed 's/serial=//' 2&gt;&amp;1'.</msg>
<msg timestamp="20230909 17:15:20.277" level="INFO">${rc} = 0</msg>
<msg timestamp="20230909 17:15:20.277" level="INFO">${output} = 012233BC1776</msg>
<status status="PASS" starttime="20230909 17:15:20.054" endtime="20230909 17:15:20.277"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230909 17:15:20.279" level="INFO">012233BC1776</msg>
<status status="PASS" starttime="20230909 17:15:20.278" endtime="20230909 17:15:20.280"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230909 17:15:20.280" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230909 17:15:20.280" endtime="20230909 17:15:20.281"/>
</kw>
<status status="PASS" starttime="20230909 17:15:20.054" endtime="20230909 17:15:20.281"/>
</kw>
<msg timestamp="20230909 17:15:20.281" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230909 17:15:20.053" endtime="20230909 17:15:20.281"/>
</kw>
<msg timestamp="20230909 17:15:20.282" level="INFO">${certSerial} = 012233BC1776</msg>
<status status="PASS" starttime="20230909 17:15:20.052" endtime="20230909 17:15:20.282"/>
</kw>
<msg timestamp="20230909 17:15:20.282" level="INFO">${certId1} = 012233BC1776</msg>
<status status="PASS" starttime="20230909 17:15:20.052" endtime="20230909 17:15:20.282"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${doubleDuration}</arg>
<arg>5sec</arg>
<arg>Datanode has new certificate</arg>
<arg>${certId1}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Datanode has new certificate">
<arg>${certId1}</arg>
<kw name="Get datanode cert serial">
<var>${newCertId}</var>
<kw name="Execute" library="os">
<var>${certSerial}</var>
<arg>openssl s_client -connect "${datanode}":"${port}" -showcerts | openssl x509 -noout -serial | grep serial | sed 's/serial=//'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230909 17:15:20.293" level="INFO">Running command 'openssl s_client -connect "datanode":"9859" -showcerts | openssl x509 -noout -serial | grep serial | sed 's/serial=//' 2&gt;&amp;1'.</msg>
<msg timestamp="20230909 17:15:20.387" level="INFO">${rc} = 0</msg>
<msg timestamp="20230909 17:15:20.387" level="INFO">${output} = 012233BC1776</msg>
<status status="PASS" starttime="20230909 17:15:20.286" endtime="20230909 17:15:20.387"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230909 17:15:20.390" level="INFO">012233BC1776</msg>
<status status="PASS" starttime="20230909 17:15:20.389" endtime="20230909 17:15:20.390"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230909 17:15:20.391" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230909 17:15:20.390" endtime="20230909 17:15:20.391"/>
</kw>
<status status="PASS" starttime="20230909 17:15:20.286" endtime="20230909 17:15:20.392"/>
</kw>
<msg timestamp="20230909 17:15:20.392" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230909 17:15:20.285" endtime="20230909 17:15:20.392"/>
</kw>
<msg timestamp="20230909 17:15:20.392" level="INFO">${certSerial} = 012233BC1776</msg>
<status status="PASS" starttime="20230909 17:15:20.284" endtime="20230909 17:15:20.392"/>
</kw>
<msg timestamp="20230909 17:15:20.392" level="INFO">${newCertId} = 012233BC1776</msg>
<status status="PASS" starttime="20230909 17:15:20.284" endtime="20230909 17:15:20.392"/>
</kw>
<kw name="Should Not Be Equal" library="BuiltIn">
<arg>${certId}</arg>
<arg>${newCertId}</arg>
<doc>Fails if the given objects are equal.</doc>
<msg timestamp="20230909 17:15:20.394" level="FAIL">012233BC1776 == 012233BC1776</msg>
<status status="FAIL" starttime="20230909 17:15:20.393" endtime="20230909 17:15:20.394"/>
</kw>
<status status="FAIL" starttime="20230909 17:15:20.283" endtime="20230909 17:15:20.394"/>
</kw>
<kw name="Datanode has new certificate">
<arg>${certId1}</arg>
<kw name="Get datanode cert serial">
<var>${newCertId}</var>
<kw name="Execute" library="os">
<var>${certSerial}</var>
<arg>openssl s_client -connect "${datanode}":"${port}" -showcerts | openssl x509 -noout -serial | grep serial | sed 's/serial=//'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230909 17:15:25.405" level="INFO">Running command 'openssl s_client -connect "datanode":"9859" -showcerts | openssl x509 -noout -serial | grep serial | sed 's/serial=//' 2&gt;&amp;1'.</msg>
<msg timestamp="20230909 17:15:25.510" level="INFO">${rc} = 0</msg>
<msg timestamp="20230909 17:15:25.510" level="INFO">${output} = 012571488FBB</msg>
<status status="PASS" starttime="20230909 17:15:25.401" endtime="20230909 17:15:25.510"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230909 17:15:25.512" level="INFO">012571488FBB</msg>
<status status="PASS" starttime="20230909 17:15:25.510" endtime="20230909 17:15:25.512"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230909 17:15:25.513" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230909 17:15:25.512" endtime="20230909 17:15:25.513"/>
</kw>
<status status="PASS" starttime="20230909 17:15:25.399" endtime="20230909 17:15:25.513"/>
</kw>
<msg timestamp="20230909 17:15:25.513" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230909 17:15:25.399" endtime="20230909 17:15:25.514"/>
</kw>
<msg timestamp="20230909 17:15:25.514" level="INFO">${certSerial} = 012571488FBB</msg>
<status status="PASS" starttime="20230909 17:15:25.397" endtime="20230909 17:15:25.514"/>
</kw>
<msg timestamp="20230909 17:15:25.514" level="INFO">${newCertId} = 012571488FBB</msg>
<status status="PASS" starttime="20230909 17:15:25.396" endtime="20230909 17:15:25.514"/>
</kw>
<kw name="Should Not Be Equal" library="BuiltIn">
<arg>${certId}</arg>
<arg>${newCertId}</arg>
<doc>Fails if the given objects are equal.</doc>
<status status="PASS" starttime="20230909 17:15:25.515" endtime="20230909 17:15:25.515"/>
</kw>
<status status="PASS" starttime="20230909 17:15:25.395" endtime="20230909 17:15:25.516"/>
</kw>
<status status="PASS" starttime="20230909 17:15:20.282" endtime="20230909 17:15:25.516"/>
</kw>
<kw name="Basic key generation and validation">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>10</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230909 17:15:25.517" level="INFO">${random} = 7cjCTHeJSe</msg>
<status status="PASS" starttime="20230909 17:15:25.517" endtime="20230909 17:15:25.517"/>
</kw>
<kw name="Freon OCKG" library="freon">
<arg>prefix=${random}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230909 17:15:25.527" level="INFO">Running command 'ozone freon ockg  -t 1 -n1 -p 7cjCTHeJSe  2&gt;&amp;1'.</msg>
<msg timestamp="20230909 17:15:37.984" level="INFO">${rc} = 0</msg>
<msg timestamp="20230909 17:15:37.984" level="INFO">${output} = 2023-09-09 17:15:29,516 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-09 17:15:29,787 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230909 17:15:25.522" endtime="20230909 17:15:37.984"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230909 17:15:37.985" level="INFO">2023-09-09 17:15:29,516 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-09 17:15:29,787 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-09-09 17:15:29,787 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-09-09 17:15:29,917 [main] INFO freon.BaseFreonGenerator: Executing test with prefix 7cjCTHeJSe and number-of-tests 1
2023-09-09 17:15:30,023 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-09 17:15:31,025 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-09 17:15:32,025 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-09 17:15:33,026 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-09 17:15:33,848 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2023-09-09 17:15:33,935 [pool-2-thread-1] INFO netty.NettyConfigKeys$DataStream: setTlsConf GrpcTlsConfig0-
2023-09-09 17:15:34,027 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-09 17:15:34,608 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2023-09-09 17:15:35,028 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-09 17:15:36,029 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-09 17:15:37,030 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2023-09-09 17:15:37,601 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=1, min=3013.28217, max=3013.28217, mean=3013.28217, stddev=0.0, median=3013.28217, p75=3013.28217, p95=3013.28217, p98=3013.28217, p99=3013.28217, p999=3013.28217, mean_rate=0.24009145056461767, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-09-09 17:15:37,601 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 8
2023-09-09 17:15:37,602 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-09-09 17:15:37,602 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20230909 17:15:37.984" endtime="20230909 17:15:37.986"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230909 17:15:37.986" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230909 17:15:37.986" endtime="20230909 17:15:37.986"/>
</kw>
<status status="PASS" starttime="20230909 17:15:25.521" endtime="20230909 17:15:37.987"/>
</kw>
<msg timestamp="20230909 17:15:37.987" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230909 17:15:25.520" endtime="20230909 17:15:37.987"/>
</kw>
<msg timestamp="20230909 17:15:37.987" level="INFO">${result} = 2023-09-09 17:15:29,516 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-09 17:15:29,787 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230909 17:15:25.519" endtime="20230909 17:15:37.987"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230909 17:15:37.988" endtime="20230909 17:15:37.988"/>
</kw>
<status status="PASS" starttime="20230909 17:15:25.518" endtime="20230909 17:15:37.988"/>
</kw>
<kw name="Freon OCKV" library="freon">
<arg>prefix=${random}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockv ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230909 17:15:37.996" level="INFO">Running command 'ozone freon ockv  -t 1 -n1 -p 7cjCTHeJSe  2&gt;&amp;1'.</msg>
<msg timestamp="20230909 17:15:50.627" level="INFO">${rc} = 0</msg>
<msg timestamp="20230909 17:15:50.628" level="INFO">${output} = 2023-09-09 17:15:43,175 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-09 17:15:43,421 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230909 17:15:37.993" endtime="20230909 17:15:50.628"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230909 17:15:50.629" level="INFO">2023-09-09 17:15:43,175 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-09 17:15:43,421 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-09-09 17:15:43,421 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-09-09 17:15:43,563 [main] INFO freon.BaseFreonGenerator: Executing test with prefix 7cjCTHeJSe and number-of-tests 1
2023-09-09 17:15:43,646 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-09 17:15:44,647 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-09 17:15:45,648 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-09 17:15:46,648 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-09 17:15:47,188 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2023-09-09 17:15:47,649 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-09 17:15:48,650 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-09 17:15:49,654 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2023-09-09 17:15:50,259 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-validate, count=1, min=64.65427, max=64.65427, mean=64.65427, stddev=0.0, median=64.65427, p75=64.65427, p95=64.65427, p98=64.65427, p99=64.65427, p999=64.65427, mean_rate=0.7963726569751826, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-09-09 17:15:50,260 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 7
2023-09-09 17:15:50,261 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-09-09 17:15:50,261 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20230909 17:15:50.628" endtime="20230909 17:15:50.630"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230909 17:15:50.630" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230909 17:15:50.630" endtime="20230909 17:15:50.631"/>
</kw>
<status status="PASS" starttime="20230909 17:15:37.992" endtime="20230909 17:15:50.631"/>
</kw>
<msg timestamp="20230909 17:15:50.631" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230909 17:15:37.991" endtime="20230909 17:15:50.631"/>
</kw>
<msg timestamp="20230909 17:15:50.631" level="INFO">${result} = 2023-09-09 17:15:43,175 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-09 17:15:43,421 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230909 17:15:37.991" endtime="20230909 17:15:50.632"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230909 17:15:50.632" endtime="20230909 17:15:50.632"/>
</kw>
<status status="PASS" starttime="20230909 17:15:37.989" endtime="20230909 17:15:50.632"/>
</kw>
<status status="PASS" starttime="20230909 17:15:25.516" endtime="20230909 17:15:50.632"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230909 17:14:43.014" endtime="20230909 17:15:50.633"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20230909 17:14:42.868" endtime="20230909 17:15:50.635"/>
</suite>
<suite id="s1-s2" name="Root-Ca-Rotation-Client-Checks" source="/opt/hadoop/smoketest/certrotation/root-ca-rotation-client-checks.robot">
<test id="s1-s2-t1" name="Create a volume and bucket" line="27">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230909 17:15:50.655" level="INFO">Running command 'ozone sh volume create rootca-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20230909 17:16:00.307" level="INFO">${rc} = 0</msg>
<msg timestamp="20230909 17:16:00.307" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230909 17:15:50.652" endtime="20230909 17:16:00.307"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230909 17:16:00.309" level="INFO"/>
<status status="PASS" starttime="20230909 17:16:00.308" endtime="20230909 17:16:00.309"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230909 17:16:00.310" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230909 17:16:00.309" endtime="20230909 17:16:00.310"/>
</kw>
<status status="PASS" starttime="20230909 17:15:50.651" endtime="20230909 17:16:00.311"/>
</kw>
<msg timestamp="20230909 17:16:00.311" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230909 17:15:50.650" endtime="20230909 17:16:00.311"/>
</kw>
<msg timestamp="20230909 17:16:00.311" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230909 17:15:50.650" endtime="20230909 17:16:00.311"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230909 17:16:00.311" endtime="20230909 17:16:00.312"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230909 17:16:00.317" level="INFO">Running command 'ozone sh bucket create /rootca-volume/rootca-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230909 17:16:08.317" level="INFO">${rc} = 0</msg>
<msg timestamp="20230909 17:16:08.317" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230909 17:16:00.314" endtime="20230909 17:16:08.318"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230909 17:16:08.319" level="INFO"/>
<status status="PASS" starttime="20230909 17:16:08.318" endtime="20230909 17:16:08.319"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230909 17:16:08.320" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230909 17:16:08.320" endtime="20230909 17:16:08.320"/>
</kw>
<status status="PASS" starttime="20230909 17:16:00.313" endtime="20230909 17:16:08.320"/>
</kw>
<msg timestamp="20230909 17:16:08.321" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230909 17:16:00.313" endtime="20230909 17:16:08.321"/>
</kw>
<msg timestamp="20230909 17:16:08.321" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230909 17:16:00.312" endtime="20230909 17:16:08.321"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230909 17:16:08.321" endtime="20230909 17:16:08.322"/>
</kw>
<tag>create-volume-and-bucket</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230909 17:15:50.649" endtime="20230909 17:16:08.322"/>
</test>
<test id="s1-s2-t2" name="Create key" line="34">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230909 17:16:08.328" level="INFO">Running command 'echo "rootca: key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20230909 17:16:08.331" level="INFO">${rc} = 0</msg>
<msg timestamp="20230909 17:16:08.331" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230909 17:16:08.325" endtime="20230909 17:16:08.331"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230909 17:16:08.332" level="INFO"/>
<status status="PASS" starttime="20230909 17:16:08.331" endtime="20230909 17:16:08.332"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230909 17:16:08.333" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230909 17:16:08.333" endtime="20230909 17:16:08.333"/>
</kw>
<status status="PASS" starttime="20230909 17:16:08.324" endtime="20230909 17:16:08.334"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230909 17:16:08.344" level="INFO">Running command 'ozone sh key put /rootca-volume/rootca-bucket/rootca-key /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230909 17:16:20.957" level="INFO">${rc} = 0</msg>
<msg timestamp="20230909 17:16:20.957" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230909 17:16:08.341" endtime="20230909 17:16:20.957"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230909 17:16:20.959" level="INFO"/>
<status status="PASS" starttime="20230909 17:16:20.958" endtime="20230909 17:16:20.959"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230909 17:16:20.960" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230909 17:16:20.959" endtime="20230909 17:16:20.960"/>
</kw>
<status status="PASS" starttime="20230909 17:16:08.335" endtime="20230909 17:16:20.961"/>
</kw>
<msg timestamp="20230909 17:16:20.961" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230909 17:16:08.335" endtime="20230909 17:16:20.961"/>
</kw>
<msg timestamp="20230909 17:16:20.961" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230909 17:16:08.334" endtime="20230909 17:16:20.961"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230909 17:16:20.961" endtime="20230909 17:16:20.962"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230909 17:16:20.967" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230909 17:16:20.971" level="INFO">${rc} = 0</msg>
<msg timestamp="20230909 17:16:20.971" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230909 17:16:20.963" endtime="20230909 17:16:20.971"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230909 17:16:20.973" level="INFO"/>
<status status="PASS" starttime="20230909 17:16:20.972" endtime="20230909 17:16:20.973"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230909 17:16:20.974" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230909 17:16:20.973" endtime="20230909 17:16:20.974"/>
</kw>
<status status="PASS" starttime="20230909 17:16:20.962" endtime="20230909 17:16:20.975"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230909 17:16:08.323" endtime="20230909 17:16:20.975"/>
</test>
<test id="s1-s2-t3" name="Read data from previously created key" line="40">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230909 17:16:20.978" level="INFO">${random} = 47335</msg>
<status status="PASS" starttime="20230909 17:16:20.978" endtime="20230909 17:16:20.978"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230909 17:16:20.984" level="INFO">Running command 'ozone sh key get /rootca-volume/rootca-bucket/rootca-key /tmp/key-47335 2&gt;&amp;1'.</msg>
<msg timestamp="20230909 17:16:32.607" level="INFO">${rc} = 0</msg>
<msg timestamp="20230909 17:16:32.607" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230909 17:16:20.981" endtime="20230909 17:16:32.607"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230909 17:16:32.609" level="INFO"/>
<status status="PASS" starttime="20230909 17:16:32.608" endtime="20230909 17:16:32.609"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230909 17:16:32.610" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230909 17:16:32.609" endtime="20230909 17:16:32.610"/>
</kw>
<status status="PASS" starttime="20230909 17:16:20.980" endtime="20230909 17:16:32.610"/>
</kw>
<msg timestamp="20230909 17:16:32.610" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230909 17:16:20.980" endtime="20230909 17:16:32.610"/>
</kw>
<msg timestamp="20230909 17:16:32.611" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230909 17:16:20.979" endtime="20230909 17:16:32.611"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230909 17:16:32.611" endtime="20230909 17:16:32.611"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230909 17:16:32.615" level="INFO">Running command 'cat /tmp/key-47335 2&gt;&amp;1'.</msg>
<msg timestamp="20230909 17:16:32.619" level="INFO">${rc} = 0</msg>
<msg timestamp="20230909 17:16:32.619" level="INFO">${output} = rootca: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230909 17:16:32.612" endtime="20230909 17:16:32.619"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230909 17:16:32.620" level="INFO">rootca: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230909 17:16:32.619" endtime="20230909 17:16:32.620"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230909 17:16:32.621" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230909 17:16:32.620" endtime="20230909 17:16:32.622"/>
</kw>
<msg timestamp="20230909 17:16:32.622" level="INFO">${output} = rootca: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230909 17:16:32.612" endtime="20230909 17:16:32.622"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230909 17:16:32.622" endtime="20230909 17:16:32.623"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230909 17:16:32.626" level="INFO">Running command 'rm /tmp/key-47335 2&gt;&amp;1'.</msg>
<msg timestamp="20230909 17:16:32.630" level="INFO">${rc} = 0</msg>
<msg timestamp="20230909 17:16:32.630" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230909 17:16:32.623" endtime="20230909 17:16:32.630"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230909 17:16:32.632" level="INFO"/>
<status status="PASS" starttime="20230909 17:16:32.631" endtime="20230909 17:16:32.632"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230909 17:16:32.632" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230909 17:16:32.632" endtime="20230909 17:16:32.633"/>
</kw>
<status status="PASS" starttime="20230909 17:16:32.623" endtime="20230909 17:16:32.633"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230909 17:16:20.977" endtime="20230909 17:16:32.633"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20230909 17:15:50.638" endtime="20230909 17:16:32.634"/>
</suite>
<status status="PASS" starttime="20230909 17:14:42.812" endtime="20230909 17:16:32.638"/>
</suite>
<statistics>
<total>
<stat pass="4" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="1" fail="0" skip="0">create-volume-and-bucket</stat>
</tag>
<suite>
<stat pass="4" fail="0" skip="0" id="s1" name="ozonesecure-certificate-rotation">ozonesecure-certificate-rotation</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1" name="Cert-Rotation">ozonesecure-certificate-rotation.Cert-Rotation</stat>
<stat pass="3" fail="0" skip="0" id="s1-s2" name="Root-Ca-Rotation-Client-Checks">ozonesecure-certificate-rotation.Root-Ca-Rotation-Client-Checks</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
