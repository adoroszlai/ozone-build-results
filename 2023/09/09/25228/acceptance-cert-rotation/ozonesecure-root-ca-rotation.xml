<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 6.1.1 (Python 3.8.10 on linux)" generated="20230909 17:22:41.458" rpa="false" schemaversion="4">
<suite id="s1" name="ozonesecure-root-ca-rotation">
<suite id="s1-s1" name="Kinit" source="/opt/hadoop/smoketest/kinit.robot">
<test id="s1-s1-t1" name="Kinit" line="27">
<kw name="Kinit test user" library="commonlib">
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230909 17:19:43.316" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230909 17:19:43.323" level="INFO">${rc} = 0</msg>
<msg timestamp="20230909 17:19:43.323" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230909 17:19:43.313" endtime="20230909 17:19:43.324"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230909 17:19:43.325" level="INFO">scm</msg>
<status status="PASS" starttime="20230909 17:19:43.324" endtime="20230909 17:19:43.325"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230909 17:19:43.326" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230909 17:19:43.326" endtime="20230909 17:19:43.327"/>
</kw>
<status status="PASS" starttime="20230909 17:19:43.312" endtime="20230909 17:19:43.327"/>
</kw>
<msg timestamp="20230909 17:19:43.327" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230909 17:19:43.311" endtime="20230909 17:19:43.328"/>
</kw>
<msg timestamp="20230909 17:19:43.328" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230909 17:19:43.310" endtime="20230909 17:19:43.328"/>
</kw>
<msg timestamp="20230909 17:19:43.328" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230909 17:19:43.309" endtime="20230909 17:19:43.328"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230909 17:19:43.329" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230909 17:19:43.329" endtime="20230909 17:19:43.329"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230909 17:19:43.338" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20230909 17:19:43.383" level="INFO">${rc} = 0</msg>
<msg timestamp="20230909 17:19:43.384" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230909 17:19:43.335" endtime="20230909 17:19:43.384"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230909 17:19:43.386" level="INFO"/>
<status status="PASS" starttime="20230909 17:19:43.384" endtime="20230909 17:19:43.386"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230909 17:19:43.387" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230909 17:19:43.386" endtime="20230909 17:19:43.387"/>
</kw>
<status status="PASS" starttime="20230909 17:19:43.334" endtime="20230909 17:19:43.387"/>
</kw>
<msg timestamp="20230909 17:19:43.387" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230909 17:19:43.332" endtime="20230909 17:19:43.387"/>
</kw>
<status status="PASS" starttime="20230909 17:19:43.331" endtime="20230909 17:19:43.388"/>
</kw>
<status status="PASS" starttime="20230909 17:19:43.330" endtime="20230909 17:19:43.388"/>
</kw>
<status status="PASS" starttime="20230909 17:19:43.307" endtime="20230909 17:19:43.388"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20230909 17:19:43.306" endtime="20230909 17:19:43.388"/>
</test>
<doc>Kinit test user</doc>
<status status="PASS" starttime="20230909 17:19:43.196" endtime="20230909 17:19:43.395"/>
</suite>
<suite id="s1-s2" name="Root-Ca-Rotation-Client-Checks" source="/opt/hadoop/smoketest/certrotation/root-ca-rotation-client-checks.robot">
<test id="s1-s2-t1" name="Create a volume and bucket" line="27">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230909 17:20:02.209" level="INFO">Running command 'ozone sh volume create rootca-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20230909 17:20:10.367" level="INFO">${rc} = 0</msg>
<msg timestamp="20230909 17:20:10.368" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230909 17:20:02.206" endtime="20230909 17:20:10.368"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230909 17:20:10.369" level="INFO"/>
<status status="PASS" starttime="20230909 17:20:10.368" endtime="20230909 17:20:10.369"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230909 17:20:10.370" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230909 17:20:10.369" endtime="20230909 17:20:10.370"/>
</kw>
<status status="PASS" starttime="20230909 17:20:02.205" endtime="20230909 17:20:10.370"/>
</kw>
<msg timestamp="20230909 17:20:10.370" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230909 17:20:02.205" endtime="20230909 17:20:10.371"/>
</kw>
<msg timestamp="20230909 17:20:10.371" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230909 17:20:02.203" endtime="20230909 17:20:10.371"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230909 17:20:10.371" endtime="20230909 17:20:10.372"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230909 17:20:10.377" level="INFO">Running command 'ozone sh bucket create /rootca-volume/rootca-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230909 17:20:20.300" level="INFO">${rc} = 0</msg>
<msg timestamp="20230909 17:20:20.300" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230909 17:20:10.374" endtime="20230909 17:20:20.300"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230909 17:20:20.302" level="INFO"/>
<status status="PASS" starttime="20230909 17:20:20.301" endtime="20230909 17:20:20.302"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230909 17:20:20.303" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230909 17:20:20.302" endtime="20230909 17:20:20.303"/>
</kw>
<status status="PASS" starttime="20230909 17:20:10.373" endtime="20230909 17:20:20.303"/>
</kw>
<msg timestamp="20230909 17:20:20.304" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230909 17:20:10.373" endtime="20230909 17:20:20.304"/>
</kw>
<msg timestamp="20230909 17:20:20.304" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230909 17:20:10.372" endtime="20230909 17:20:20.304"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230909 17:20:20.304" endtime="20230909 17:20:20.305"/>
</kw>
<tag>create-volume-and-bucket</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230909 17:20:02.202" endtime="20230909 17:20:20.305"/>
</test>
<test id="s1-s2-t2" name="Create key" line="34">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230909 17:20:20.314" level="INFO">Running command 'echo "rootca: key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20230909 17:20:20.317" level="INFO">${rc} = 0</msg>
<msg timestamp="20230909 17:20:20.317" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230909 17:20:20.310" endtime="20230909 17:20:20.317"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230909 17:20:20.318" level="INFO"/>
<status status="PASS" starttime="20230909 17:20:20.318" endtime="20230909 17:20:20.319"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230909 17:20:20.319" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230909 17:20:20.319" endtime="20230909 17:20:20.320"/>
</kw>
<status status="PASS" starttime="20230909 17:20:20.309" endtime="20230909 17:20:20.320"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230909 17:20:20.326" level="INFO">Running command 'ozone sh key put /rootca-volume/rootca-bucket/rootca-key /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230909 17:20:35.144" level="INFO">${rc} = 0</msg>
<msg timestamp="20230909 17:20:35.144" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230909 17:20:20.323" endtime="20230909 17:20:35.144"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230909 17:20:35.146" level="INFO"/>
<status status="PASS" starttime="20230909 17:20:35.145" endtime="20230909 17:20:35.147"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230909 17:20:35.148" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230909 17:20:35.147" endtime="20230909 17:20:35.148"/>
</kw>
<status status="PASS" starttime="20230909 17:20:20.322" endtime="20230909 17:20:35.149"/>
</kw>
<msg timestamp="20230909 17:20:35.149" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230909 17:20:20.321" endtime="20230909 17:20:35.149"/>
</kw>
<msg timestamp="20230909 17:20:35.150" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230909 17:20:20.320" endtime="20230909 17:20:35.150"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230909 17:20:35.150" endtime="20230909 17:20:35.151"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230909 17:20:35.157" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230909 17:20:35.164" level="INFO">${rc} = 0</msg>
<msg timestamp="20230909 17:20:35.164" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230909 17:20:35.153" endtime="20230909 17:20:35.164"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230909 17:20:35.166" level="INFO"/>
<status status="PASS" starttime="20230909 17:20:35.165" endtime="20230909 17:20:35.167"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230909 17:20:35.168" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230909 17:20:35.167" endtime="20230909 17:20:35.168"/>
</kw>
<status status="PASS" starttime="20230909 17:20:35.152" endtime="20230909 17:20:35.168"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230909 17:20:20.308" endtime="20230909 17:20:35.169"/>
</test>
<test id="s1-s2-t3" name="Read data from previously created key" line="40">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230909 17:20:35.175" level="INFO">${random} = 45338</msg>
<status status="PASS" starttime="20230909 17:20:35.174" endtime="20230909 17:20:35.175"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230909 17:20:35.183" level="INFO">Running command 'ozone sh key get /rootca-volume/rootca-bucket/rootca-key /tmp/key-45338 2&gt;&amp;1'.</msg>
<msg timestamp="20230909 17:20:48.002" level="INFO">${rc} = 0</msg>
<msg timestamp="20230909 17:20:48.002" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230909 17:20:35.179" endtime="20230909 17:20:48.002"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230909 17:20:48.004" level="INFO"/>
<status status="PASS" starttime="20230909 17:20:48.002" endtime="20230909 17:20:48.004"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230909 17:20:48.005" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230909 17:20:48.004" endtime="20230909 17:20:48.005"/>
</kw>
<status status="PASS" starttime="20230909 17:20:35.177" endtime="20230909 17:20:48.005"/>
</kw>
<msg timestamp="20230909 17:20:48.005" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230909 17:20:35.177" endtime="20230909 17:20:48.005"/>
</kw>
<msg timestamp="20230909 17:20:48.006" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230909 17:20:35.175" endtime="20230909 17:20:48.006"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230909 17:20:48.006" endtime="20230909 17:20:48.007"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230909 17:20:48.011" level="INFO">Running command 'cat /tmp/key-45338 2&gt;&amp;1'.</msg>
<msg timestamp="20230909 17:20:48.015" level="INFO">${rc} = 0</msg>
<msg timestamp="20230909 17:20:48.015" level="INFO">${output} = rootca: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230909 17:20:48.008" endtime="20230909 17:20:48.015"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230909 17:20:48.017" level="INFO">rootca: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230909 17:20:48.016" endtime="20230909 17:20:48.017"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230909 17:20:48.018" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230909 17:20:48.017" endtime="20230909 17:20:48.018"/>
</kw>
<msg timestamp="20230909 17:20:48.018" level="INFO">${output} = rootca: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230909 17:20:48.007" endtime="20230909 17:20:48.019"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230909 17:20:48.019" endtime="20230909 17:20:48.019"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230909 17:20:48.023" level="INFO">Running command 'rm /tmp/key-45338 2&gt;&amp;1'.</msg>
<msg timestamp="20230909 17:20:48.027" level="INFO">${rc} = 0</msg>
<msg timestamp="20230909 17:20:48.027" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230909 17:20:48.020" endtime="20230909 17:20:48.027"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230909 17:20:48.028" level="INFO"/>
<status status="PASS" starttime="20230909 17:20:48.027" endtime="20230909 17:20:48.028"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230909 17:20:48.030" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230909 17:20:48.029" endtime="20230909 17:20:48.030"/>
</kw>
<status status="PASS" starttime="20230909 17:20:48.020" endtime="20230909 17:20:48.030"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230909 17:20:35.172" endtime="20230909 17:20:48.031"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20230909 17:20:02.119" endtime="20230909 17:20:48.033"/>
</suite>
<suite id="s1-s3" name="Root-Ca-Rotation-Client-Checks" source="/opt/hadoop/smoketest/certrotation/root-ca-rotation-client-checks.robot">
<test id="s1-s3-t1" name="Create a volume and bucket" line="27">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230909 17:21:31.080" level="INFO">Running command 'ozone sh volume create rootca2-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20230909 17:21:39.780" level="INFO">${rc} = 0</msg>
<msg timestamp="20230909 17:21:39.781" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230909 17:21:31.075" endtime="20230909 17:21:39.781"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230909 17:21:39.783" level="INFO"/>
<status status="PASS" starttime="20230909 17:21:39.782" endtime="20230909 17:21:39.783"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230909 17:21:39.784" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230909 17:21:39.783" endtime="20230909 17:21:39.784"/>
</kw>
<status status="PASS" starttime="20230909 17:21:31.071" endtime="20230909 17:21:39.784"/>
</kw>
<msg timestamp="20230909 17:21:39.784" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230909 17:21:31.070" endtime="20230909 17:21:39.785"/>
</kw>
<msg timestamp="20230909 17:21:39.785" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230909 17:21:31.069" endtime="20230909 17:21:39.785"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230909 17:21:39.785" endtime="20230909 17:21:39.786"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230909 17:21:39.793" level="INFO">Running command 'ozone sh bucket create /rootca2-volume/rootca2-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230909 17:21:49.723" level="INFO">${rc} = 0</msg>
<msg timestamp="20230909 17:21:49.723" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230909 17:21:39.788" endtime="20230909 17:21:49.723"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230909 17:21:49.725" level="INFO"/>
<status status="PASS" starttime="20230909 17:21:49.724" endtime="20230909 17:21:49.725"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230909 17:21:49.726" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230909 17:21:49.725" endtime="20230909 17:21:49.726"/>
</kw>
<status status="PASS" starttime="20230909 17:21:39.787" endtime="20230909 17:21:49.727"/>
</kw>
<msg timestamp="20230909 17:21:49.727" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230909 17:21:39.787" endtime="20230909 17:21:49.727"/>
</kw>
<msg timestamp="20230909 17:21:49.727" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230909 17:21:39.786" endtime="20230909 17:21:49.727"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230909 17:21:49.728" endtime="20230909 17:21:49.728"/>
</kw>
<tag>create-volume-and-bucket</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230909 17:21:31.068" endtime="20230909 17:21:49.729"/>
</test>
<test id="s1-s3-t2" name="Create key" line="34">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230909 17:21:49.736" level="INFO">Running command 'echo "rootca2: key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20230909 17:21:49.739" level="INFO">${rc} = 0</msg>
<msg timestamp="20230909 17:21:49.739" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230909 17:21:49.732" endtime="20230909 17:21:49.739"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230909 17:21:49.741" level="INFO"/>
<status status="PASS" starttime="20230909 17:21:49.740" endtime="20230909 17:21:49.741"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230909 17:21:49.742" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230909 17:21:49.741" endtime="20230909 17:21:49.742"/>
</kw>
<status status="PASS" starttime="20230909 17:21:49.731" endtime="20230909 17:21:49.742"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230909 17:21:49.748" level="INFO">Running command 'ozone sh key put /rootca2-volume/rootca2-bucket/rootca2-key /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230909 17:22:02.054" level="INFO">${rc} = 0</msg>
<msg timestamp="20230909 17:22:02.054" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230909 17:21:49.745" endtime="20230909 17:22:02.054"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230909 17:22:02.056" level="INFO"/>
<status status="PASS" starttime="20230909 17:22:02.055" endtime="20230909 17:22:02.056"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230909 17:22:02.057" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230909 17:22:02.056" endtime="20230909 17:22:02.057"/>
</kw>
<status status="PASS" starttime="20230909 17:21:49.744" endtime="20230909 17:22:02.057"/>
</kw>
<msg timestamp="20230909 17:22:02.057" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230909 17:21:49.743" endtime="20230909 17:22:02.057"/>
</kw>
<msg timestamp="20230909 17:22:02.058" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230909 17:21:49.743" endtime="20230909 17:22:02.058"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230909 17:22:02.058" endtime="20230909 17:22:02.059"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230909 17:22:02.062" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230909 17:22:02.066" level="INFO">${rc} = 0</msg>
<msg timestamp="20230909 17:22:02.066" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230909 17:22:02.059" endtime="20230909 17:22:02.066"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230909 17:22:02.067" level="INFO"/>
<status status="PASS" starttime="20230909 17:22:02.067" endtime="20230909 17:22:02.067"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230909 17:22:02.068" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230909 17:22:02.068" endtime="20230909 17:22:02.068"/>
</kw>
<status status="PASS" starttime="20230909 17:22:02.059" endtime="20230909 17:22:02.068"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230909 17:21:49.730" endtime="20230909 17:22:02.069"/>
</test>
<test id="s1-s3-t3" name="Read data from previously created key" line="40">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230909 17:22:02.072" level="INFO">${random} = 32464</msg>
<status status="PASS" starttime="20230909 17:22:02.071" endtime="20230909 17:22:02.072"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230909 17:22:02.076" level="INFO">Running command 'ozone sh key get /rootca2-volume/rootca2-bucket/rootca2-key /tmp/key-32464 2&gt;&amp;1'.</msg>
<msg timestamp="20230909 17:22:13.614" level="INFO">${rc} = 0</msg>
<msg timestamp="20230909 17:22:13.615" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230909 17:22:02.074" endtime="20230909 17:22:13.615"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230909 17:22:13.616" level="INFO"/>
<status status="PASS" starttime="20230909 17:22:13.615" endtime="20230909 17:22:13.616"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230909 17:22:13.617" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230909 17:22:13.617" endtime="20230909 17:22:13.618"/>
</kw>
<status status="PASS" starttime="20230909 17:22:02.073" endtime="20230909 17:22:13.618"/>
</kw>
<msg timestamp="20230909 17:22:13.618" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230909 17:22:02.073" endtime="20230909 17:22:13.618"/>
</kw>
<msg timestamp="20230909 17:22:13.619" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230909 17:22:02.072" endtime="20230909 17:22:13.619"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230909 17:22:13.619" endtime="20230909 17:22:13.620"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230909 17:22:13.625" level="INFO">Running command 'cat /tmp/key-32464 2&gt;&amp;1'.</msg>
<msg timestamp="20230909 17:22:13.629" level="INFO">${rc} = 0</msg>
<msg timestamp="20230909 17:22:13.630" level="INFO">${output} = rootca2: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230909 17:22:13.621" endtime="20230909 17:22:13.630"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230909 17:22:13.631" level="INFO">rootca2: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230909 17:22:13.630" endtime="20230909 17:22:13.631"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230909 17:22:13.632" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230909 17:22:13.631" endtime="20230909 17:22:13.632"/>
</kw>
<msg timestamp="20230909 17:22:13.632" level="INFO">${output} = rootca2: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230909 17:22:13.620" endtime="20230909 17:22:13.632"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230909 17:22:13.632" endtime="20230909 17:22:13.633"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230909 17:22:13.637" level="INFO">Running command 'rm /tmp/key-32464 2&gt;&amp;1'.</msg>
<msg timestamp="20230909 17:22:13.640" level="INFO">${rc} = 0</msg>
<msg timestamp="20230909 17:22:13.641" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230909 17:22:13.634" endtime="20230909 17:22:13.641"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230909 17:22:13.642" level="INFO"/>
<status status="PASS" starttime="20230909 17:22:13.642" endtime="20230909 17:22:13.643"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230909 17:22:13.644" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230909 17:22:13.643" endtime="20230909 17:22:13.644"/>
</kw>
<status status="PASS" starttime="20230909 17:22:13.633" endtime="20230909 17:22:13.644"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230909 17:22:02.070" endtime="20230909 17:22:13.645"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20230909 17:21:30.989" endtime="20230909 17:22:13.646"/>
</suite>
<suite id="s1-s4" name="Root-Ca-Rotation" source="/opt/hadoop/smoketest/scmha/root-ca-rotation.robot">
<test id="s1-s4-t1" name="Verify root CA rotation metrics" line="26">
<kw name="Execute" library="os">
<var>${successRotationLine}</var>
<arg>curl -sS 'http://localhost:9876/jmx' | grep NumSuccessRotation</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230909 17:22:18.268" level="INFO">Running command 'curl -sS 'http://localhost:9876/jmx' | grep NumSuccessRotation 2&gt;&amp;1'.</msg>
<msg timestamp="20230909 17:22:19.048" level="INFO">${rc} = 0</msg>
<msg timestamp="20230909 17:22:19.048" level="INFO">${output} =     "NumSuccessRotation" : 2,</msg>
<status status="PASS" starttime="20230909 17:22:18.265" endtime="20230909 17:22:19.048"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230909 17:22:19.050" level="INFO">    "NumSuccessRotation" : 2,</msg>
<status status="PASS" starttime="20230909 17:22:19.049" endtime="20230909 17:22:19.050"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230909 17:22:19.051" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230909 17:22:19.050" endtime="20230909 17:22:19.051"/>
</kw>
<status status="PASS" starttime="20230909 17:22:18.264" endtime="20230909 17:22:19.052"/>
</kw>
<msg timestamp="20230909 17:22:19.052" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230909 17:22:18.264" endtime="20230909 17:22:19.052"/>
</kw>
<msg timestamp="20230909 17:22:19.053" level="INFO">${successRotationLine} =     "NumSuccessRotation" : 2,</msg>
<status status="PASS" starttime="20230909 17:22:18.263" endtime="20230909 17:22:19.054"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${successRotationLine}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230909 17:22:19.055" level="INFO">    "NumSuccessRotation" : 2,</msg>
<status status="PASS" starttime="20230909 17:22:19.054" endtime="20230909 17:22:19.057"/>
</kw>
<kw name="Split String" library="String">
<var>${temp_1}</var>
<arg>${successRotationLine}</arg>
<arg>:</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20230909 17:22:19.059" level="INFO">${temp_1} = ['    "NumSuccessRotation" ', ' 2,']</msg>
<status status="PASS" starttime="20230909 17:22:19.057" endtime="20230909 17:22:19.059"/>
</kw>
<kw name="Strip String" library="String">
<var>${temp_2}</var>
<arg>${temp_1[1]}</arg>
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<msg timestamp="20230909 17:22:19.062" level="INFO">${temp_2} = 2,</msg>
<status status="PASS" starttime="20230909 17:22:19.059" endtime="20230909 17:22:19.063"/>
</kw>
<kw name="Split String" library="String">
<var>${temp_3}</var>
<arg>${temp_2}</arg>
<arg>,</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20230909 17:22:19.064" level="INFO">${temp_3} = ['2', '']</msg>
<status status="PASS" starttime="20230909 17:22:19.063" endtime="20230909 17:22:19.064"/>
</kw>
<kw name="Strip String" library="String">
<var>${successRotation}</var>
<arg>${temp_3[0]}</arg>
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<msg timestamp="20230909 17:22:19.066" level="INFO">${successRotation} = 2</msg>
<status status="PASS" starttime="20230909 17:22:19.064" endtime="20230909 17:22:19.066"/>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<var>${successRotation}</var>
<arg>${successRotation}</arg>
<doc>Converts the given item to a floating point number.</doc>
<msg timestamp="20230909 17:22:19.067" level="INFO">${successRotation} = 2.0</msg>
<status status="PASS" starttime="20230909 17:22:19.066" endtime="20230909 17:22:19.067"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${successRotation} &gt;= 1</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230909 17:22:19.067" endtime="20230909 17:22:19.068"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230909 17:22:18.262" endtime="20230909 17:22:19.069"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20230909 17:22:18.189" endtime="20230909 17:22:19.071"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="89652"/>
</suite>
<statistics>
<total>
<stat pass="8" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="2" fail="0" skip="0">create-volume-and-bucket</stat>
</tag>
<suite>
<stat pass="8" fail="0" skip="0" id="s1" name="ozonesecure-root-ca-rotation">ozonesecure-root-ca-rotation</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1" name="Kinit">ozonesecure-root-ca-rotation.Kinit</stat>
<stat pass="3" fail="0" skip="0" id="s1-s2" name="Root-Ca-Rotation-Client-Checks">ozonesecure-root-ca-rotation.Root-Ca-Rotation-Client-Checks</stat>
<stat pass="3" fail="0" skip="0" id="s1-s3" name="Root-Ca-Rotation-Client-Checks">ozonesecure-root-ca-rotation.Root-Ca-Rotation-Client-Checks</stat>
<stat pass="1" fail="0" skip="0" id="s1-s4" name="Root-Ca-Rotation">ozonesecure-root-ca-rotation.Root-Ca-Rotation</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
