<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 6.1.1 (Python 3.8.10 on linux)" generated="20230906 00:11:10.970" rpa="false" schemaversion="4">
<suite id="s1" name="ozonesecure-ha">
<suite id="s1-s1" name="Kinit" source="/opt/hadoop/smoketest/kinit.robot">
<test id="s1-s1-t1" name="Kinit" line="27">
<kw name="Kinit test user" library="commonlib">
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230906 00:01:29.450" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230906 00:01:29.453" level="INFO">${rc} = 0</msg>
<msg timestamp="20230906 00:01:29.453" level="INFO">${output} = s3g</msg>
<status status="PASS" starttime="20230906 00:01:29.448" endtime="20230906 00:01:29.453"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230906 00:01:29.454" level="INFO">s3g</msg>
<status status="PASS" starttime="20230906 00:01:29.453" endtime="20230906 00:01:29.454"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230906 00:01:29.455" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230906 00:01:29.455" endtime="20230906 00:01:29.456"/>
</kw>
<status status="PASS" starttime="20230906 00:01:29.447" endtime="20230906 00:01:29.456"/>
</kw>
<msg timestamp="20230906 00:01:29.456" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230906 00:01:29.447" endtime="20230906 00:01:29.456"/>
</kw>
<msg timestamp="20230906 00:01:29.456" level="INFO">${instance} = s3g</msg>
<status status="PASS" starttime="20230906 00:01:29.446" endtime="20230906 00:01:29.456"/>
</kw>
<msg timestamp="20230906 00:01:29.457" level="INFO">${TEST_USER} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230906 00:01:29.446" endtime="20230906 00:01:29.457"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230906 00:01:29.457" level="INFO">${TEST_USER} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230906 00:01:29.457" endtime="20230906 00:01:29.457"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230906 00:01:29.461" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/s3g@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20230906 00:01:29.506" level="INFO">${rc} = 0</msg>
<msg timestamp="20230906 00:01:29.506" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230906 00:01:29.459" endtime="20230906 00:01:29.506"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230906 00:01:29.507" level="INFO"/>
<status status="PASS" starttime="20230906 00:01:29.506" endtime="20230906 00:01:29.507"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230906 00:01:29.508" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230906 00:01:29.507" endtime="20230906 00:01:29.508"/>
</kw>
<status status="PASS" starttime="20230906 00:01:29.459" endtime="20230906 00:01:29.508"/>
</kw>
<msg timestamp="20230906 00:01:29.508" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230906 00:01:29.459" endtime="20230906 00:01:29.508"/>
</kw>
<status status="PASS" starttime="20230906 00:01:29.458" endtime="20230906 00:01:29.508"/>
</kw>
<status status="PASS" starttime="20230906 00:01:29.458" endtime="20230906 00:01:29.508"/>
</kw>
<status status="PASS" starttime="20230906 00:01:29.445" endtime="20230906 00:01:29.509"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20230906 00:01:29.444" endtime="20230906 00:01:29.509"/>
</test>
<doc>Kinit test user</doc>
<status status="PASS" starttime="20230906 00:01:29.393" endtime="20230906 00:01:29.510"/>
</suite>
<suite id="s1-s2" name="Freon" source="/opt/hadoop/smoketest/freon">
<suite id="s1-s2-s1" name="echoRPCLoad" source="/opt/hadoop/smoketest/freon/echoRPCLoad.robot">
<test id="s1-s2-s1-t1" name="[Read] Ozone Echo RPC Load Generator with request payload and response payload" line="26">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ome -t=1 -n=${n} --payload-req=1 --payload-resp=1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230906 00:01:33.700" level="INFO">Running command 'ozone freon ome -t=1 -n=1 --payload-req=1 --payload-resp=1 2&gt;&amp;1'.</msg>
<msg timestamp="20230906 00:01:38.860" level="INFO">${rc} = 0</msg>
<msg timestamp="20230906 00:01:38.860" level="INFO">${output} = 2023-09-06 00:01:36,425 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-06 00:01:36,619 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230906 00:01:33.697" endtime="20230906 00:01:38.860"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230906 00:01:38.862" level="INFO">2023-09-06 00:01:36,425 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-06 00:01:36,619 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-09-06 00:01:36,619 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-09-06 00:01:37,553 [main] INFO freon.BaseFreonGenerator: Executing test with prefix pa9xkqn8hc and number-of-tests 1
2023-09-06 00:01:37,595 [Thread-6] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-06 00:01:38,604 [Thread-6] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2023-09-06 00:01:38,744 [shutdown-hook-0] INFO metrics: type=TIMER, name=rpc-payload, count=1, min=820.212935, max=820.212935, mean=820.212935, stddev=0.0, median=820.212935, p75=820.212935, p95=820.212935, p98=820.212935, p99=820.212935, p999=820.212935, mean_rate=0.8693530181470436, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-09-06 00:01:38,744 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 1
2023-09-06 00:01:38,745 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-09-06 00:01:38,745 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20230906 00:01:38.861" endtime="20230906 00:01:38.862"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230906 00:01:38.862" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230906 00:01:38.862" endtime="20230906 00:01:38.863"/>
</kw>
<status status="PASS" starttime="20230906 00:01:33.697" endtime="20230906 00:01:38.863"/>
</kw>
<msg timestamp="20230906 00:01:38.863" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230906 00:01:33.696" endtime="20230906 00:01:38.863"/>
</kw>
<msg timestamp="20230906 00:01:38.863" level="INFO">${result} = 2023-09-06 00:01:36,425 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-06 00:01:36,619 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230906 00:01:33.693" endtime="20230906 00:01:38.863"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230906 00:01:38.864" endtime="20230906 00:01:38.864"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230906 00:01:33.691" endtime="20230906 00:01:38.864"/>
</test>
<test id="s1-s2-s1-t2" name="[Read] Ozone Echo RPC Load Generator with request payload and empty response payload" line="30">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ome -t=1 -n=${n} --payload-req=1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230906 00:01:38.871" level="INFO">Running command 'ozone freon ome -t=1 -n=1 --payload-req=1 2&gt;&amp;1'.</msg>
<msg timestamp="20230906 00:01:44.299" level="INFO">${rc} = 0</msg>
<msg timestamp="20230906 00:01:44.299" level="INFO">${output} = 2023-09-06 00:01:41,794 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-06 00:01:41,999 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230906 00:01:38.868" endtime="20230906 00:01:44.299"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230906 00:01:44.301" level="INFO">2023-09-06 00:01:41,794 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-06 00:01:41,999 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-09-06 00:01:41,999 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-09-06 00:01:43,082 [main] INFO freon.BaseFreonGenerator: Executing test with prefix rvkwcma9wj and number-of-tests 1
2023-09-06 00:01:43,150 [Thread-6] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-06 00:01:44,151 [Thread-6] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2023-09-06 00:01:44,230 [shutdown-hook-0] INFO metrics: type=TIMER, name=rpc-payload, count=1, min=568.282464, max=568.282464, mean=568.282464, stddev=0.0, median=568.282464, p75=568.282464, p95=568.282464, p98=568.282464, p99=568.282464, p999=568.282464, mean_rate=0.9273767192175627, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-09-06 00:01:44,230 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 1
2023-09-06 00:01:44,231 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-09-06 00:01:44,231 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20230906 00:01:44.300" endtime="20230906 00:01:44.301"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230906 00:01:44.302" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230906 00:01:44.301" endtime="20230906 00:01:44.302"/>
</kw>
<status status="PASS" starttime="20230906 00:01:38.868" endtime="20230906 00:01:44.302"/>
</kw>
<msg timestamp="20230906 00:01:44.302" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230906 00:01:38.867" endtime="20230906 00:01:44.302"/>
</kw>
<msg timestamp="20230906 00:01:44.302" level="INFO">${result} = 2023-09-06 00:01:41,794 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-06 00:01:41,999 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230906 00:01:38.867" endtime="20230906 00:01:44.303"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230906 00:01:44.303" endtime="20230906 00:01:44.303"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230906 00:01:38.866" endtime="20230906 00:01:44.303"/>
</test>
<test id="s1-s2-s1-t3" name="[Read] Ozone Echo RPC Load Generator with empty request payload and response payload" line="34">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ome -t=1 -n=${n} --payload-resp=1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230906 00:01:44.309" level="INFO">Running command 'ozone freon ome -t=1 -n=1 --payload-resp=1 2&gt;&amp;1'.</msg>
<msg timestamp="20230906 00:01:49.594" level="INFO">${rc} = 0</msg>
<msg timestamp="20230906 00:01:49.594" level="INFO">${output} = 2023-09-06 00:01:47,058 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-06 00:01:47,239 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230906 00:01:44.306" endtime="20230906 00:01:49.594"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230906 00:01:49.596" level="INFO">2023-09-06 00:01:47,058 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-06 00:01:47,239 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-09-06 00:01:47,239 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-09-06 00:01:48,413 [main] INFO freon.BaseFreonGenerator: Executing test with prefix av0ms9qloi and number-of-tests 1
2023-09-06 00:01:48,470 [Thread-6] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-06 00:01:49,472 [Thread-6] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2023-09-06 00:01:49,540 [shutdown-hook-0] INFO metrics: type=TIMER, name=rpc-payload, count=1, min=685.727657, max=685.727657, mean=685.727657, stddev=0.0, median=685.727657, p75=685.727657, p95=685.727657, p98=685.727657, p99=685.727657, p999=685.727657, mean_rate=0.9331404921366719, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-09-06 00:01:49,541 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 1
2023-09-06 00:01:49,541 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-09-06 00:01:49,541 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20230906 00:01:49.595" endtime="20230906 00:01:49.596"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230906 00:01:49.596" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230906 00:01:49.596" endtime="20230906 00:01:49.596"/>
</kw>
<status status="PASS" starttime="20230906 00:01:44.306" endtime="20230906 00:01:49.597"/>
</kw>
<msg timestamp="20230906 00:01:49.597" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230906 00:01:44.306" endtime="20230906 00:01:49.597"/>
</kw>
<msg timestamp="20230906 00:01:49.597" level="INFO">${result} = 2023-09-06 00:01:47,058 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-06 00:01:47,239 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230906 00:01:44.305" endtime="20230906 00:01:49.597"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230906 00:01:49.597" endtime="20230906 00:01:49.598"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230906 00:01:44.304" endtime="20230906 00:01:49.598"/>
</test>
<test id="s1-s2-s1-t4" name="[Read] Ozone Echo RPC Load Generator with empty request payload and empty response payload" line="38">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ome -t=1 -n=${n}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230906 00:01:49.604" level="INFO">Running command 'ozone freon ome -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20230906 00:01:55.279" level="INFO">${rc} = 0</msg>
<msg timestamp="20230906 00:01:55.280" level="INFO">${output} = 2023-09-06 00:01:52,541 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-06 00:01:52,714 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230906 00:01:49.601" endtime="20230906 00:01:55.280"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230906 00:01:55.281" level="INFO">2023-09-06 00:01:52,541 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-06 00:01:52,714 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-09-06 00:01:52,714 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-09-06 00:01:53,856 [main] INFO freon.BaseFreonGenerator: Executing test with prefix sqos6kn4vu and number-of-tests 1
2023-09-06 00:01:53,905 [Thread-6] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-06 00:01:54,911 [Thread-6] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2023-09-06 00:01:55,143 [shutdown-hook-0] INFO metrics: type=TIMER, name=rpc-payload, count=1, min=573.583609, max=573.583609, mean=573.583609, stddev=0.0, median=573.583609, p75=573.583609, p95=573.583609, p98=573.583609, p99=573.583609, p999=573.583609, mean_rate=0.8067454263344911, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-09-06 00:01:55,145 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 1
2023-09-06 00:01:55,148 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-09-06 00:01:55,148 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20230906 00:01:55.280" endtime="20230906 00:01:55.281"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230906 00:01:55.282" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230906 00:01:55.281" endtime="20230906 00:01:55.282"/>
</kw>
<status status="PASS" starttime="20230906 00:01:49.601" endtime="20230906 00:01:55.282"/>
</kw>
<msg timestamp="20230906 00:01:55.282" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230906 00:01:49.601" endtime="20230906 00:01:55.282"/>
</kw>
<msg timestamp="20230906 00:01:55.283" level="INFO">${result} = 2023-09-06 00:01:52,541 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-06 00:01:52,714 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230906 00:01:49.600" endtime="20230906 00:01:55.283"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230906 00:01:55.283" endtime="20230906 00:01:55.284"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230906 00:01:49.599" endtime="20230906 00:01:55.284"/>
</test>
<test id="s1-s2-s1-t5" name="[Write] Ozone Echo RPC Load Generator with request payload and response payload" line="42">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ome -t=1 -n=${n} --payload-req=1 --payload-resp=1 --ratis</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230906 00:01:55.291" level="INFO">Running command 'ozone freon ome -t=1 -n=1 --payload-req=1 --payload-resp=1 --ratis 2&gt;&amp;1'.</msg>
<msg timestamp="20230906 00:02:01.595" level="INFO">${rc} = 0</msg>
<msg timestamp="20230906 00:02:01.595" level="INFO">${output} = 2023-09-06 00:01:58,077 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-06 00:01:58,267 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230906 00:01:55.288" endtime="20230906 00:02:01.595"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230906 00:02:01.596" level="INFO">2023-09-06 00:01:58,077 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-06 00:01:58,267 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-09-06 00:01:58,267 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-09-06 00:01:59,412 [main] INFO freon.BaseFreonGenerator: Executing test with prefix hbqyh3imjq and number-of-tests 1
2023-09-06 00:01:59,454 [Thread-6] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-06 00:02:00,456 [Thread-6] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-06 00:02:01,457 [Thread-6] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2023-09-06 00:02:01,529 [shutdown-hook-0] INFO metrics: type=TIMER, name=rpc-payload, count=1, min=1008.867919, max=1008.867919, mean=1008.867919, stddev=0.0, median=1008.867919, p75=1008.867919, p95=1008.867919, p98=1008.867919, p99=1008.867919, p999=1008.867919, mean_rate=0.48152082342699537, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-09-06 00:02:01,532 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2023-09-06 00:02:01,532 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-09-06 00:02:01,532 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20230906 00:02:01.595" endtime="20230906 00:02:01.596"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230906 00:02:01.597" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230906 00:02:01.597" endtime="20230906 00:02:01.597"/>
</kw>
<status status="PASS" starttime="20230906 00:01:55.287" endtime="20230906 00:02:01.597"/>
</kw>
<msg timestamp="20230906 00:02:01.598" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230906 00:01:55.287" endtime="20230906 00:02:01.598"/>
</kw>
<msg timestamp="20230906 00:02:01.598" level="INFO">${result} = 2023-09-06 00:01:58,077 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-06 00:01:58,267 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230906 00:01:55.286" endtime="20230906 00:02:01.598"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230906 00:02:01.598" endtime="20230906 00:02:01.599"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230906 00:01:55.285" endtime="20230906 00:02:01.599"/>
</test>
<test id="s1-s2-s1-t6" name="[Write] Ozone Echo RPC Load Generator with request payload and empty response payload" line="46">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ome -t=1 -n=${n} --payload-req=1 --ratis</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230906 00:02:01.605" level="INFO">Running command 'ozone freon ome -t=1 -n=1 --payload-req=1 --ratis 2&gt;&amp;1'.</msg>
<msg timestamp="20230906 00:02:06.707" level="INFO">${rc} = 0</msg>
<msg timestamp="20230906 00:02:06.707" level="INFO">${output} = 2023-09-06 00:02:04,289 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-06 00:02:04,458 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230906 00:02:01.602" endtime="20230906 00:02:06.707"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230906 00:02:06.708" level="INFO">2023-09-06 00:02:04,289 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-06 00:02:04,458 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-09-06 00:02:04,458 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-09-06 00:02:05,527 [main] INFO freon.BaseFreonGenerator: Executing test with prefix oq9idra3ek and number-of-tests 1
2023-09-06 00:02:05,570 [Thread-6] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-06 00:02:06,572 [Thread-6] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2023-09-06 00:02:06,659 [shutdown-hook-0] INFO metrics: type=TIMER, name=rpc-payload, count=1, min=593.348225, max=593.348225, mean=593.348225, stddev=0.0, median=593.348225, p75=593.348225, p95=593.348225, p98=593.348225, p99=593.348225, p999=593.348225, mean_rate=0.9174076885072392, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-09-06 00:02:06,659 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 1
2023-09-06 00:02:06,659 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-09-06 00:02:06,659 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20230906 00:02:06.708" endtime="20230906 00:02:06.708"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230906 00:02:06.709" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230906 00:02:06.709" endtime="20230906 00:02:06.709"/>
</kw>
<status status="PASS" starttime="20230906 00:02:01.601" endtime="20230906 00:02:06.709"/>
</kw>
<msg timestamp="20230906 00:02:06.710" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230906 00:02:01.601" endtime="20230906 00:02:06.710"/>
</kw>
<msg timestamp="20230906 00:02:06.710" level="INFO">${result} = 2023-09-06 00:02:04,289 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-06 00:02:04,458 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230906 00:02:01.601" endtime="20230906 00:02:06.710"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230906 00:02:06.710" endtime="20230906 00:02:06.710"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230906 00:02:01.600" endtime="20230906 00:02:06.711"/>
</test>
<test id="s1-s2-s1-t7" name="[Write] Ozone Echo RPC Load Generator with empty request payload and response payload" line="50">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ome -t=1 -n=${n} --payload-resp=1 --ratis</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230906 00:02:06.717" level="INFO">Running command 'ozone freon ome -t=1 -n=1 --payload-resp=1 --ratis 2&gt;&amp;1'.</msg>
<msg timestamp="20230906 00:02:12.321" level="INFO">${rc} = 0</msg>
<msg timestamp="20230906 00:02:12.321" level="INFO">${output} = 2023-09-06 00:02:09,637 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-06 00:02:09,825 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230906 00:02:06.714" endtime="20230906 00:02:12.321"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230906 00:02:12.322" level="INFO">2023-09-06 00:02:09,637 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-06 00:02:09,825 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-09-06 00:02:09,825 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-09-06 00:02:10,924 [main] INFO freon.BaseFreonGenerator: Executing test with prefix gwwzthtv1d and number-of-tests 1
2023-09-06 00:02:11,004 [Thread-6] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-06 00:02:12,015 [Thread-6] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2023-09-06 00:02:12,265 [shutdown-hook-0] INFO metrics: type=TIMER, name=rpc-payload, count=1, min=923.694183, max=923.694183, mean=923.694183, stddev=0.0, median=923.694183, p75=923.694183, p95=923.694183, p98=923.694183, p99=923.694183, p999=923.694183, mean_rate=0.7921097190460493, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-09-06 00:02:12,266 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 1
2023-09-06 00:02:12,266 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-09-06 00:02:12,266 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20230906 00:02:12.322" endtime="20230906 00:02:12.322"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230906 00:02:12.323" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230906 00:02:12.323" endtime="20230906 00:02:12.323"/>
</kw>
<status status="PASS" starttime="20230906 00:02:06.714" endtime="20230906 00:02:12.323"/>
</kw>
<msg timestamp="20230906 00:02:12.323" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230906 00:02:06.713" endtime="20230906 00:02:12.323"/>
</kw>
<msg timestamp="20230906 00:02:12.324" level="INFO">${result} = 2023-09-06 00:02:09,637 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-06 00:02:09,825 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230906 00:02:06.713" endtime="20230906 00:02:12.324"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230906 00:02:12.324" endtime="20230906 00:02:12.324"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230906 00:02:06.712" endtime="20230906 00:02:12.324"/>
</test>
<test id="s1-s2-s1-t8" name="[Write] Ozone Echo RPC Load Generator with empty request payload and empty response payload" line="54">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ome -t=1 -n=${n} --ratis</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230906 00:02:12.331" level="INFO">Running command 'ozone freon ome -t=1 -n=1 --ratis 2&gt;&amp;1'.</msg>
<msg timestamp="20230906 00:02:17.634" level="INFO">${rc} = 0</msg>
<msg timestamp="20230906 00:02:17.634" level="INFO">${output} = 2023-09-06 00:02:15,057 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-06 00:02:15,247 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230906 00:02:12.328" endtime="20230906 00:02:17.634"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230906 00:02:17.636" level="INFO">2023-09-06 00:02:15,057 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-06 00:02:15,247 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-09-06 00:02:15,247 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-09-06 00:02:16,257 [main] INFO freon.BaseFreonGenerator: Executing test with prefix buffpijolm and number-of-tests 1
2023-09-06 00:02:16,305 [Thread-6] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-06 00:02:17,307 [Thread-6] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2023-09-06 00:02:17,562 [shutdown-hook-0] INFO metrics: type=TIMER, name=rpc-payload, count=1, min=700.131209, max=700.131209, mean=700.131209, stddev=0.0, median=700.131209, p75=700.131209, p95=700.131209, p98=700.131209, p99=700.131209, p999=700.131209, mean_rate=0.7992850363378556, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-09-06 00:02:17,563 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 1
2023-09-06 00:02:17,563 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-09-06 00:02:17,563 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20230906 00:02:17.635" endtime="20230906 00:02:17.636"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230906 00:02:17.637" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230906 00:02:17.636" endtime="20230906 00:02:17.637"/>
</kw>
<status status="PASS" starttime="20230906 00:02:12.328" endtime="20230906 00:02:17.637"/>
</kw>
<msg timestamp="20230906 00:02:17.637" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230906 00:02:12.327" endtime="20230906 00:02:17.637"/>
</kw>
<msg timestamp="20230906 00:02:17.638" level="INFO">${result} = 2023-09-06 00:02:15,057 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-06 00:02:15,247 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230906 00:02:12.327" endtime="20230906 00:02:17.638"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230906 00:02:17.638" endtime="20230906 00:02:17.638"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230906 00:02:12.326" endtime="20230906 00:02:17.639"/>
</test>
<doc>Test freon echo RPC commands</doc>
<status status="PASS" starttime="20230906 00:01:33.665" endtime="20230906 00:02:17.641"/>
</suite>
<suite id="s1-s2-s2" name="Generate-Chunk" source="/opt/hadoop/smoketest/freon/generate-chunk.robot">
<test id="s1-s2-s2-t1" name="DN Chunk Generator" line="25">
<kw name="Freon DCG" library="freon">
<arg>prefix=dcg${PREFIX}</arg>
<arg>n=100</arg>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20230906 00:02:17.656" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230906 00:02:17.655" endtime="20230906 00:02:17.657"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon dcg -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<status status="NOT RUN" starttime="20230906 00:02:17.657" endtime="20230906 00:02:17.657"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230906 00:02:17.657" endtime="20230906 00:02:17.657"/>
</kw>
<status status="PASS" starttime="20230906 00:02:17.654" endtime="20230906 00:02:17.658"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230906 00:02:17.653" endtime="20230906 00:02:17.658"/>
</test>
<doc>Test freon chunk generation commands</doc>
<status status="PASS" starttime="20230906 00:02:17.645" endtime="20230906 00:02:17.659"/>
</suite>
<suite id="s1-s2-s3" name="Generate" source="/opt/hadoop/smoketest/freon/generate.robot">
<test id="s1-s2-s3-t1" name="Ozone Client Key Generator" line="25">
<kw name="Freon OCKG" library="freon">
<arg>prefix=ockg${PREFIX}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230906 00:02:17.674" level="INFO">Running command 'ozone freon ockg --om-service-id=omservice -t 1 -n1 -p ockg  2&gt;&amp;1'.</msg>
<msg timestamp="20230906 00:02:33.582" level="INFO">${rc} = 0</msg>
<msg timestamp="20230906 00:02:33.582" level="INFO">${output} = 2023-09-06 00:02:20,366 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-06 00:02:20,547 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230906 00:02:17.671" endtime="20230906 00:02:33.582"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230906 00:02:33.584" level="INFO">2023-09-06 00:02:20,366 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-06 00:02:20,547 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-09-06 00:02:20,547 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-09-06 00:02:20,686 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ockg and number-of-tests 1
2023-09-06 00:02:20,795 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-06 00:02:21,802 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-06 00:02:22,808 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-06 00:02:23,465 [main] INFO rpc.RpcClient: Creating Volume: vol1, with testuser as owner and space quota set to -1 bytes, counts quota set to -1
2023-09-06 00:02:23,638 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with server-side default bucket layout, testuser as owner, Versioning false, Storage Type set to DISK and Encryption set to false, Replication Type set to server-side default replication type, Namespace Quota set to -1, Space Quota set to -1 
2023-09-06 00:02:23,810 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-06 00:02:24,810 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-06 00:02:25,811 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-06 00:02:25,822 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2023-09-06 00:02:25,883 [pool-2-thread-1] INFO netty.NettyConfigKeys$DataStream: setTlsConf GrpcTlsConfig0-
2023-09-06 00:02:26,184 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2023-09-06 00:02:26,816 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-06 00:02:27,823 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-06 00:02:28,824 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-06 00:02:29,824 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-06 00:02:30,825 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-06 00:02:31,825 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-06 00:02:32,825 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2023-09-06 00:02:33,210 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=1, min=8729.859179, max=8729.859179, mean=8729.859179, stddev=0.0, median=8729.859179, p75=8729.859179, p95=8729.859179, p98=8729.859179, p99=8729.859179, p999=8729.859179, mean_rate=0.10639192239058567, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-09-06 00:02:33,211 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 12
2023-09-06 00:02:33,211 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-09-06 00:02:33,211 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20230906 00:02:33.583" endtime="20230906 00:02:33.584"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230906 00:02:33.586" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230906 00:02:33.584" endtime="20230906 00:02:33.586"/>
</kw>
<status status="PASS" starttime="20230906 00:02:17.670" endtime="20230906 00:02:33.586"/>
</kw>
<msg timestamp="20230906 00:02:33.586" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230906 00:02:17.670" endtime="20230906 00:02:33.586"/>
</kw>
<msg timestamp="20230906 00:02:33.587" level="INFO">${result} = 2023-09-06 00:02:20,366 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-06 00:02:20,547 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230906 00:02:17.669" endtime="20230906 00:02:33.587"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230906 00:02:33.587" endtime="20230906 00:02:33.587"/>
</kw>
<status status="PASS" starttime="20230906 00:02:17.668" endtime="20230906 00:02:33.587"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230906 00:02:17.668" endtime="20230906 00:02:33.588"/>
</test>
<test id="s1-s2-s3-t2" name="OM Key Generator" line="28">
<kw name="Freon OMKG" library="freon">
<arg>prefix=omkg${PREFIX}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon omkg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230906 00:02:33.598" level="INFO">Running command 'ozone freon omkg --om-service-id=omservice -t 1 -n1 -p omkg  2&gt;&amp;1'.</msg>
<msg timestamp="20230906 00:02:41.017" level="INFO">${rc} = 0</msg>
<msg timestamp="20230906 00:02:41.018" level="INFO">${output} = 2023-09-06 00:02:36,536 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-06 00:02:36,711 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230906 00:02:33.594" endtime="20230906 00:02:41.018"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230906 00:02:41.019" level="INFO">2023-09-06 00:02:36,536 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-06 00:02:36,711 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-09-06 00:02:36,711 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-09-06 00:02:36,792 [main] INFO freon.BaseFreonGenerator: Executing test with prefix omkg and number-of-tests 1
2023-09-06 00:02:36,867 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-06 00:02:37,868 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-06 00:02:38,869 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-06 00:02:39,880 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-06 00:02:40,880 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2023-09-06 00:02:40,936 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=1, min=354.69459, max=354.69459, mean=354.69459, stddev=0.0, median=354.69459, p75=354.69459, p95=354.69459, p98=354.69459, p99=354.69459, p999=354.69459, mean_rate=0.6783098995034774, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-09-06 00:02:40,938 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 4
2023-09-06 00:02:40,939 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-09-06 00:02:40,939 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20230906 00:02:41.018" endtime="20230906 00:02:41.019"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230906 00:02:41.020" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230906 00:02:41.019" endtime="20230906 00:02:41.020"/>
</kw>
<status status="PASS" starttime="20230906 00:02:33.593" endtime="20230906 00:02:41.020"/>
</kw>
<msg timestamp="20230906 00:02:41.020" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230906 00:02:33.593" endtime="20230906 00:02:41.020"/>
</kw>
<msg timestamp="20230906 00:02:41.020" level="INFO">${result} = 2023-09-06 00:02:36,536 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-06 00:02:36,711 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230906 00:02:33.592" endtime="20230906 00:02:41.020"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230906 00:02:41.020" endtime="20230906 00:02:41.021"/>
</kw>
<status status="PASS" starttime="20230906 00:02:33.590" endtime="20230906 00:02:41.021"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230906 00:02:33.589" endtime="20230906 00:02:41.021"/>
</test>
<test id="s1-s2-s3-t3" name="OM Bucket Generator" line="31">
<kw name="Freon OMBG" library="freon">
<arg>prefix=ombg${PREFIX}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ombg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230906 00:02:41.028" level="INFO">Running command 'ozone freon ombg --om-service-id=omservice -t 1 -n1 -p ombg  2&gt;&amp;1'.</msg>
<msg timestamp="20230906 00:02:48.043" level="INFO">${rc} = 0</msg>
<msg timestamp="20230906 00:02:48.043" level="INFO">${output} = 2023-09-06 00:02:44,103 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-06 00:02:44,296 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230906 00:02:41.025" endtime="20230906 00:02:48.043"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230906 00:02:48.044" level="INFO">2023-09-06 00:02:44,103 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-06 00:02:44,296 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-09-06 00:02:44,296 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-09-06 00:02:44,405 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ombg and number-of-tests 1
2023-09-06 00:02:44,473 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-06 00:02:45,476 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-06 00:02:46,476 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-06 00:02:47,477 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2023-09-06 00:02:47,996 [shutdown-hook-0] INFO metrics: type=TIMER, name=bucket-create, count=1, min=89.551429, max=89.551429, mean=89.551429, stddev=0.0, median=89.551429, p75=89.551429, p95=89.551429, p98=89.551429, p99=89.551429, p999=89.551429, mean_rate=0.8741546509302046, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-09-06 00:02:47,996 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 4
2023-09-06 00:02:47,996 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-09-06 00:02:47,997 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20230906 00:02:48.043" endtime="20230906 00:02:48.044"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230906 00:02:48.045" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230906 00:02:48.045" endtime="20230906 00:02:48.045"/>
</kw>
<status status="PASS" starttime="20230906 00:02:41.025" endtime="20230906 00:02:48.045"/>
</kw>
<msg timestamp="20230906 00:02:48.045" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230906 00:02:41.025" endtime="20230906 00:02:48.046"/>
</kw>
<msg timestamp="20230906 00:02:48.046" level="INFO">${result} = 2023-09-06 00:02:44,103 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-06 00:02:44,296 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230906 00:02:41.024" endtime="20230906 00:02:48.046"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230906 00:02:48.046" endtime="20230906 00:02:48.047"/>
</kw>
<status status="PASS" starttime="20230906 00:02:41.023" endtime="20230906 00:02:48.047"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230906 00:02:41.022" endtime="20230906 00:02:48.047"/>
</test>
<doc>Test freon data generation commands</doc>
<status status="PASS" starttime="20230906 00:02:17.661" endtime="20230906 00:02:48.048"/>
</suite>
<suite id="s1-s2-s4" name="Read-Write-Key" source="/opt/hadoop/smoketest/freon/read-write-key.robot">
<test id="s1-s2-s4-t1" name="Pre-generate 100 keys of size 1 byte each to Ozone" line="26">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ork -n 1 -t 10 -r 100 --size 1 -v voltest -b buckettest -p performanceTest</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230906 00:02:48.062" level="INFO">Running command 'ozone freon ork -n 1 -t 10 -r 100 --size 1 -v voltest -b buckettest -p performanceTest 2&gt;&amp;1'.</msg>
<msg timestamp="20230906 00:03:13.678" level="INFO">${rc} = 0</msg>
<msg timestamp="20230906 00:03:13.679" level="INFO">${output} = 2023-09-06 00:02:50,855 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-06 00:02:50,984 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230906 00:02:48.060" endtime="20230906 00:03:13.679"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230906 00:03:13.680" level="INFO">2023-09-06 00:02:50,855 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-06 00:02:50,984 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-09-06 00:02:50,984 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-09-06 00:02:51,060 [main] INFO freon.BaseFreonGenerator: Executing test with prefix performanceTest and number-of-tests 1
2023-09-06 00:02:51,108 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-06 00:02:52,113 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-06 00:02:53,113 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-06 00:02:53,948 [main] INFO rpc.RpcClient: Creating Volume: voltest, with testuser as owner and space quota set to -1 bytes, counts quota set to -1
2023-09-06 00:02:54,032 [main] INFO rpc.RpcClient: Creating Bucket: voltest/buckettest, with server-side default bucket layout, testuser as owner, Versioning false, Storage Type set to DISK and Encryption set to false, Replication Type set to server-side default replication type, Namespace Quota set to -1, Space Quota set to -1 
2023-09-06 00:02:54,120 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-06 00:02:54,541 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2023-09-06 00:02:54,595 [pool-2-thread-1] INFO netty.NettyConfigKeys$DataStream: setTlsConf GrpcTlsConfig0-
2023-09-06 00:02:54,931 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2023-09-06 00:02:57,122 [pool-2-thread-1] INFO netty.NettyConfigKeys$DataStream: setTlsConf GrpcTlsConfig1-
2023-09-06 00:03:13,320 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-read-write, count=1, min=19022.013281, max=19022.013281, mean=19022.013281, stddev=0.0, median=19022.013281, p75=19022.013281, p95=19022.013281, p98=19022.013281, p99=19022.013281, p999=19022.013281, mean_rate=0.05199009843106022, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-09-06 00:03:13,323 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 22
2023-09-06 00:03:13,323 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-09-06 00:03:13,323 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20230906 00:03:13.679" endtime="20230906 00:03:13.680"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230906 00:03:13.680" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230906 00:03:13.680" endtime="20230906 00:03:13.680"/>
</kw>
<status status="PASS" starttime="20230906 00:02:48.059" endtime="20230906 00:03:13.681"/>
</kw>
<msg timestamp="20230906 00:03:13.681" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230906 00:02:48.059" endtime="20230906 00:03:13.681"/>
</kw>
<msg timestamp="20230906 00:03:13.681" level="INFO">${result} = 2023-09-06 00:02:50,855 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-06 00:02:50,984 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230906 00:02:48.059" endtime="20230906 00:03:13.681"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230906 00:02:48.058" endtime="20230906 00:03:13.681"/>
</test>
<test id="s1-s2-s4-t2" name="Read 10 keys from pre-generated keys" line="29">
<kw name="Set Variable" library="BuiltIn">
<var>${keysCount}</var>
<arg>10</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230906 00:03:13.684" level="INFO">${keysCount} = 10</msg>
<status status="PASS" starttime="20230906 00:03:13.683" endtime="20230906 00:03:13.684"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockrw -n ${keysCount} -t 10 -r 100 -v voltest -b buckettest -p performanceTest --percentage-read 100 --percentage-list 0</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230906 00:03:13.689" level="INFO">Running command 'ozone freon ockrw -n 10 -t 10 -r 100 -v voltest -b buckettest -p performanceTest --percentage-read 100 --percentage-list 0 2&gt;&amp;1'.</msg>
<msg timestamp="20230906 00:03:23.395" level="INFO">${rc} = 0</msg>
<msg timestamp="20230906 00:03:23.396" level="INFO">${output} = 2023-09-06 00:03:16,538 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-06 00:03:16,738 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230906 00:03:13.685" endtime="20230906 00:03:23.396"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230906 00:03:23.399" level="INFO">2023-09-06 00:03:16,538 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-06 00:03:16,738 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-09-06 00:03:16,739 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-09-06 00:03:16,815 [main] INFO freon.BaseFreonGenerator: Executing test with prefix performanceTest and number-of-tests 10
2023-09-06 00:03:16,873 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2023-09-06 00:03:17,876 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2023-09-06 00:03:18,876 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2023-09-06 00:03:19,877 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2023-09-06 00:03:20,164 [pool-2-thread-10] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2023-09-06 00:03:20,877 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2023-09-06 00:03:21,878 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2023-09-06 00:03:22,878 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (10 out of 10)
2023-09-06 00:03:22,999 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-read-write-list, count=10, min=2693.884106, max=2707.867387, mean=2701.348145199999, stddev=3.708187150120657, median=2702.265349, p75=2704.192263, p95=2707.867387, p98=2707.867387, p99=2707.867387, p999=2707.867387, mean_rate=2.9086525965099903, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-09-06 00:03:23,001 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 6
2023-09-06 00:03:23,002 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-09-06 00:03:23,003 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 10</msg>
<status status="PASS" starttime="20230906 00:03:23.397" endtime="20230906 00:03:23.399"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230906 00:03:23.400" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230906 00:03:23.399" endtime="20230906 00:03:23.400"/>
</kw>
<status status="PASS" starttime="20230906 00:03:13.685" endtime="20230906 00:03:23.401"/>
</kw>
<msg timestamp="20230906 00:03:23.401" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230906 00:03:13.685" endtime="20230906 00:03:23.401"/>
</kw>
<msg timestamp="20230906 00:03:23.402" level="INFO">${result} = 2023-09-06 00:03:16,538 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-06 00:03:16,738 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230906 00:03:13.684" endtime="20230906 00:03:23.402"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${keysCount}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230906 00:03:23.402" endtime="20230906 00:03:23.403"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230906 00:03:13.682" endtime="20230906 00:03:23.404"/>
</test>
<test id="s1-s2-s4-t3" name="Read 10 keys' metadata from pre-generated keys" line="34">
<kw name="Set Variable" library="BuiltIn">
<var>${keysCount}</var>
<arg>10</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230906 00:03:23.408" level="INFO">${keysCount} = 10</msg>
<status status="PASS" starttime="20230906 00:03:23.407" endtime="20230906 00:03:23.408"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockrw -n ${keysCount} -t 10 -m -r 100 -v voltest -b buckettest -p performanceTest --percentage-read 100 --percentage-list 0</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230906 00:03:23.412" level="INFO">Running command 'ozone freon ockrw -n 10 -t 10 -m -r 100 -v voltest -b buckettest -p performanceTest --percentage-read 100 --percentage-list 0 2&gt;&amp;1'.</msg>
<msg timestamp="20230906 00:03:30.901" level="INFO">${rc} = 0</msg>
<msg timestamp="20230906 00:03:30.901" level="INFO">${output} = 2023-09-06 00:03:26,183 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-06 00:03:26,411 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230906 00:03:23.410" endtime="20230906 00:03:30.901"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230906 00:03:30.903" level="INFO">2023-09-06 00:03:26,183 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-06 00:03:26,411 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-09-06 00:03:26,411 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-09-06 00:03:26,536 [main] INFO freon.BaseFreonGenerator: Executing test with prefix performanceTest and number-of-tests 10
2023-09-06 00:03:26,601 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2023-09-06 00:03:27,603 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2023-09-06 00:03:28,604 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2023-09-06 00:03:29,604 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2023-09-06 00:03:30,605 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (10 out of 10)
2023-09-06 00:03:30,816 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-read-write-list, count=10, min=105.229092, max=134.464284, mean=129.80973290000003, stddev=8.257303973983197, median=132.670772, p75=133.043174, p95=134.464284, p98=134.464284, p99=134.464284, p999=134.464284, mean_rate=7.682004629063831, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-09-06 00:03:30,816 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 4
2023-09-06 00:03:30,817 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-09-06 00:03:30,817 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 10</msg>
<status status="PASS" starttime="20230906 00:03:30.902" endtime="20230906 00:03:30.903"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230906 00:03:30.903" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230906 00:03:30.903" endtime="20230906 00:03:30.904"/>
</kw>
<status status="PASS" starttime="20230906 00:03:23.409" endtime="20230906 00:03:30.904"/>
</kw>
<msg timestamp="20230906 00:03:30.904" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230906 00:03:23.409" endtime="20230906 00:03:30.904"/>
</kw>
<msg timestamp="20230906 00:03:30.904" level="INFO">${result} = 2023-09-06 00:03:26,183 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-06 00:03:26,411 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230906 00:03:23.408" endtime="20230906 00:03:30.904"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${keysCount}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230906 00:03:30.904" endtime="20230906 00:03:30.905"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230906 00:03:23.405" endtime="20230906 00:03:30.905"/>
</test>
<test id="s1-s2-s4-t4" name="Write 10 keys of size 1 byte each from key index 0 to 99" line="39">
<kw name="Set Variable" library="BuiltIn">
<var>${keysCount}</var>
<arg>10</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230906 00:03:30.908" level="INFO">${keysCount} = 10</msg>
<status status="PASS" starttime="20230906 00:03:30.907" endtime="20230906 00:03:30.908"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${size}</var>
<arg>1</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230906 00:03:30.908" level="INFO">${size} = 1</msg>
<status status="PASS" starttime="20230906 00:03:30.908" endtime="20230906 00:03:30.908"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockrw -n ${keysCount} -t 10 --percentage-read 0 --percentage-list 0 --size ${size} -r 100 -v voltest -b buckettest -p performanceTest</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230906 00:03:30.912" level="INFO">Running command 'ozone freon ockrw -n 10 -t 10 --percentage-read 0 --percentage-list 0 --size 1 -r 100 -v voltest -b buckettest -p performanceTest 2&gt;&amp;1'.</msg>
<msg timestamp="20230906 00:03:40.837" level="INFO">${rc} = 0</msg>
<msg timestamp="20230906 00:03:40.838" level="INFO">${output} = 2023-09-06 00:03:33,408 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-06 00:03:33,530 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230906 00:03:30.910" endtime="20230906 00:03:40.838"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230906 00:03:40.839" level="INFO">2023-09-06 00:03:33,408 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-06 00:03:33,530 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-09-06 00:03:33,530 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-09-06 00:03:33,623 [main] INFO freon.BaseFreonGenerator: Executing test with prefix performanceTest and number-of-tests 10
2023-09-06 00:03:33,685 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2023-09-06 00:03:34,686 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2023-09-06 00:03:35,688 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2023-09-06 00:03:36,716 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2023-09-06 00:03:36,821 [pool-2-thread-2] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2023-09-06 00:03:36,905 [pool-2-thread-7] INFO netty.NettyConfigKeys$DataStream: setTlsConf GrpcTlsConfig2-
2023-09-06 00:03:36,913 [pool-2-thread-4] INFO netty.NettyConfigKeys$DataStream: setTlsConf GrpcTlsConfig5-
2023-09-06 00:03:36,913 [pool-2-thread-10] INFO netty.NettyConfigKeys$DataStream: setTlsConf GrpcTlsConfig6-
2023-09-06 00:03:36,913 [pool-2-thread-5] INFO netty.NettyConfigKeys$DataStream: setTlsConf GrpcTlsConfig3-
2023-09-06 00:03:36,913 [pool-2-thread-9] INFO netty.NettyConfigKeys$DataStream: setTlsConf GrpcTlsConfig9-
2023-09-06 00:03:36,913 [pool-2-thread-3] INFO netty.NettyConfigKeys$DataStream: setTlsConf GrpcTlsConfig7-
2023-09-06 00:03:36,913 [pool-2-thread-6] INFO netty.NettyConfigKeys$DataStream: setTlsConf GrpcTlsConfig8-
2023-09-06 00:03:36,913 [pool-2-thread-8] INFO netty.NettyConfigKeys$DataStream: setTlsConf GrpcTlsConfig4-
2023-09-06 00:03:36,913 [pool-2-thread-2] INFO netty.NettyConfigKeys$DataStream: setTlsConf GrpcTlsConfig0-
2023-09-06 00:03:36,912 [pool-2-thread-1] INFO netty.NettyConfigKeys$DataStream: setTlsConf GrpcTlsConfig1-
2023-09-06 00:03:37,249 [pool-2-thread-7] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2023-09-06 00:03:37,717 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2023-09-06 00:03:38,717 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2023-09-06 00:03:39,718 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (10 out of 10)
2023-09-06 00:03:40,442 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-read-write-list, count=10, min=3175.467784, max=3326.025479, mean=3272.1756529, stddev=53.59063302990721, median=3314.009899, p75=3322.113453, p95=3326.025479, p98=3326.025479, p99=3326.025479, p999=3326.025479, mean_rate=2.347341660873404, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-09-06 00:03:40,443 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 7
2023-09-06 00:03:40,444 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-09-06 00:03:40,444 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 10</msg>
<status status="PASS" starttime="20230906 00:03:40.838" endtime="20230906 00:03:40.839"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230906 00:03:40.840" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230906 00:03:40.840" endtime="20230906 00:03:40.840"/>
</kw>
<status status="PASS" starttime="20230906 00:03:30.909" endtime="20230906 00:03:40.841"/>
</kw>
<msg timestamp="20230906 00:03:40.841" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230906 00:03:30.909" endtime="20230906 00:03:40.841"/>
</kw>
<msg timestamp="20230906 00:03:40.841" level="INFO">${result} = 2023-09-06 00:03:33,408 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-06 00:03:33,530 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230906 00:03:30.908" endtime="20230906 00:03:40.841"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${keysCount}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230906 00:03:40.841" endtime="20230906 00:03:40.842"/>
</kw>
<kw name="Execute" library="os">
<var>${keyName}</var>
<arg>echo -n '1' | md5sum | head -c 7</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230906 00:03:40.846" level="INFO">Running command 'echo -n '1' | md5sum | head -c 7 2&gt;&amp;1'.</msg>
<msg timestamp="20230906 00:03:40.855" level="INFO">${rc} = 0</msg>
<msg timestamp="20230906 00:03:40.855" level="INFO">${output} = c4ca423</msg>
<status status="PASS" starttime="20230906 00:03:40.843" endtime="20230906 00:03:40.855"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230906 00:03:40.856" level="INFO">c4ca423</msg>
<status status="PASS" starttime="20230906 00:03:40.856" endtime="20230906 00:03:40.856"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230906 00:03:40.857" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230906 00:03:40.857" endtime="20230906 00:03:40.857"/>
</kw>
<status status="PASS" starttime="20230906 00:03:40.843" endtime="20230906 00:03:40.857"/>
</kw>
<msg timestamp="20230906 00:03:40.857" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230906 00:03:40.843" endtime="20230906 00:03:40.858"/>
</kw>
<msg timestamp="20230906 00:03:40.858" level="INFO">${keyName} = c4ca423</msg>
<status status="PASS" starttime="20230906 00:03:40.842" endtime="20230906 00:03:40.858"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info /voltest/buckettest/performanceTest/${keyName}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230906 00:03:40.862" level="INFO">Running command 'ozone sh key info /voltest/buckettest/performanceTest/c4ca423 2&gt;&amp;1'.</msg>
<msg timestamp="20230906 00:03:47.009" level="INFO">${rc} = 0</msg>
<msg timestamp="20230906 00:03:47.009" level="INFO">${output} = {
  "volumeName" : "voltest",
  "bucketName" : "buckettest",
  "name" : "performanceTest/c4ca423",
  "dataSize" : 1,
  "creationTime" : "2023-09-06T00:02:56.399Z",
  "modificationTime" : "2023-09-06T0...</msg>
<status status="PASS" starttime="20230906 00:03:40.860" endtime="20230906 00:03:47.009"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230906 00:03:47.010" level="INFO">{
  "volumeName" : "voltest",
  "bucketName" : "buckettest",
  "name" : "performanceTest/c4ca423",
  "dataSize" : 1,
  "creationTime" : "2023-09-06T00:02:56.399Z",
  "modificationTime" : "2023-09-06T00:02:56.556Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "ozoneKeyLocations" : [ {
    "containerID" : 1,
    "localID" : 111677748019200004,
    "length" : 1,
    "offset" : 0,
    "keyOffset" : 0
  } ],
  "file" : true
}</msg>
<status status="PASS" starttime="20230906 00:03:47.009" endtime="20230906 00:03:47.010"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230906 00:03:47.011" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230906 00:03:47.010" endtime="20230906 00:03:47.011"/>
</kw>
<status status="PASS" starttime="20230906 00:03:40.859" endtime="20230906 00:03:47.011"/>
</kw>
<msg timestamp="20230906 00:03:47.011" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230906 00:03:40.859" endtime="20230906 00:03:47.011"/>
</kw>
<msg timestamp="20230906 00:03:47.012" level="INFO">${result} = {
  "volumeName" : "voltest",
  "bucketName" : "buckettest",
  "name" : "performanceTest/c4ca423",
  "dataSize" : 1,
  "creationTime" : "2023-09-06T00:02:56.399Z",
  "modificationTime" : "2023-09-06T0...</msg>
<status status="PASS" starttime="20230906 00:03:40.858" endtime="20230906 00:03:47.012"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"dataSize\" : 1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230906 00:03:47.012" endtime="20230906 00:03:47.012"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230906 00:03:30.906" endtime="20230906 00:03:47.013"/>
</test>
<test id="s1-s2-s4-t5" name="Run 90 % of read-key tasks and 10 % of write-key tasks for 10 keys from pre-generated keys" line="49">
<kw name="Set Variable" library="BuiltIn">
<var>${keysCount}</var>
<arg>10</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230906 00:03:47.015" level="INFO">${keysCount} = 10</msg>
<status status="PASS" starttime="20230906 00:03:47.015" endtime="20230906 00:03:47.015"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockrw -n ${keysCount} -t 10 --percentage-read 90 --percentage-list 0 -r 100 -v voltest -b buckettest -p performanceTest</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230906 00:03:47.020" level="INFO">Running command 'ozone freon ockrw -n 10 -t 10 --percentage-read 90 --percentage-list 0 -r 100 -v voltest -b buckettest -p performanceTest 2&gt;&amp;1'.</msg>
<msg timestamp="20230906 00:03:55.968" level="INFO">${rc} = 0</msg>
<msg timestamp="20230906 00:03:55.968" level="INFO">${output} = 2023-09-06 00:03:49,630 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-06 00:03:49,755 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230906 00:03:47.017" endtime="20230906 00:03:55.968"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230906 00:03:55.969" level="INFO">2023-09-06 00:03:49,630 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-06 00:03:49,755 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-09-06 00:03:49,755 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-09-06 00:03:49,873 [main] INFO freon.BaseFreonGenerator: Executing test with prefix performanceTest and number-of-tests 10
2023-09-06 00:03:49,950 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2023-09-06 00:03:50,952 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2023-09-06 00:03:51,952 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2023-09-06 00:03:52,741 [pool-2-thread-5] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2023-09-06 00:03:52,952 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2023-09-06 00:03:53,953 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2023-09-06 00:03:54,953 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (10 out of 10)
2023-09-06 00:03:55,591 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-read-write-list, count=10, min=1977.332375, max=1989.729155, mean=1981.7217133000001, stddev=3.657496473441309, median=1981.488902, p75=1984.27082, p95=1989.729155, p98=1989.729155, p99=1989.729155, p999=1989.729155, mean_rate=3.1899292036395237, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-09-06 00:03:55,592 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 6
2023-09-06 00:03:55,593 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-09-06 00:03:55,594 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 10</msg>
<status status="PASS" starttime="20230906 00:03:55.968" endtime="20230906 00:03:55.970"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230906 00:03:55.972" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230906 00:03:55.971" endtime="20230906 00:03:55.972"/>
</kw>
<status status="PASS" starttime="20230906 00:03:47.016" endtime="20230906 00:03:55.973"/>
</kw>
<msg timestamp="20230906 00:03:55.973" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230906 00:03:47.016" endtime="20230906 00:03:55.973"/>
</kw>
<msg timestamp="20230906 00:03:55.974" level="INFO">${result} = 2023-09-06 00:03:49,630 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-06 00:03:49,755 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230906 00:03:47.016" endtime="20230906 00:03:55.974"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${keysCount}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230906 00:03:55.975" endtime="20230906 00:03:55.975"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230906 00:03:47.013" endtime="20230906 00:03:55.977"/>
</test>
<test id="s1-s2-s4-t6" name="Run 50 % of read-key tasks, 40 % list-key tasks and 10 % of write-key tasks for 10 keys from pre-generated keys" line="54">
<kw name="Set Variable" library="BuiltIn">
<var>${keysCount}</var>
<arg>10</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230906 00:03:55.980" level="INFO">${keysCount} = 10</msg>
<status status="PASS" starttime="20230906 00:03:55.980" endtime="20230906 00:03:55.981"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockrw -n ${keysCount} -t 10 --percentage-read 50 --percentage-list 40 -r 100 -v voltest -b buckettest -p performanceTest</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230906 00:03:55.988" level="INFO">Running command 'ozone freon ockrw -n 10 -t 10 --percentage-read 50 --percentage-list 40 -r 100 -v voltest -b buckettest -p performanceTest 2&gt;&amp;1'.</msg>
<msg timestamp="20230906 00:04:04.037" level="INFO">${rc} = 0</msg>
<msg timestamp="20230906 00:04:04.037" level="INFO">${output} = 2023-09-06 00:03:59,013 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-06 00:03:59,231 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230906 00:03:55.985" endtime="20230906 00:04:04.037"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230906 00:04:04.038" level="INFO">2023-09-06 00:03:59,013 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-06 00:03:59,231 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-09-06 00:03:59,231 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-09-06 00:03:59,325 [main] INFO freon.BaseFreonGenerator: Executing test with prefix performanceTest and number-of-tests 10
2023-09-06 00:03:59,413 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2023-09-06 00:04:00,414 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2023-09-06 00:04:01,415 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2023-09-06 00:04:02,231 [pool-2-thread-6] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2023-09-06 00:04:02,415 [Thread-5] INFO freon.ProgressBar: Progress: 70.00 % (7 out of 10)
2023-09-06 00:04:03,416 [Thread-5] INFO freon.ProgressBar: Progress: 70.00 % (7 out of 10)
2023-09-06 00:04:03,673 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-read-write-list, count=10, min=24.355657, max=1566.311985, mean=495.14049542350995, stddev=704.2808168964128, median=34.313721, p75=1557.180126, p95=1566.311985, p98=1566.311985, p99=1566.311985, p999=1566.311985, mean_rate=5.9133839906566115, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-09-06 00:04:03,675 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 4
2023-09-06 00:04:03,675 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-09-06 00:04:03,675 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 10</msg>
<status status="PASS" starttime="20230906 00:04:04.037" endtime="20230906 00:04:04.038"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230906 00:04:04.039" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230906 00:04:04.038" endtime="20230906 00:04:04.039"/>
</kw>
<status status="PASS" starttime="20230906 00:03:55.984" endtime="20230906 00:04:04.039"/>
</kw>
<msg timestamp="20230906 00:04:04.039" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230906 00:03:55.982" endtime="20230906 00:04:04.039"/>
</kw>
<msg timestamp="20230906 00:04:04.040" level="INFO">${result} = 2023-09-06 00:03:59,013 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-06 00:03:59,231 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230906 00:03:55.981" endtime="20230906 00:04:04.040"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${keysCount}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230906 00:04:04.040" endtime="20230906 00:04:04.040"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230906 00:03:55.978" endtime="20230906 00:04:04.041"/>
</test>
<doc>Test freon read/write key commands</doc>
<status status="PASS" starttime="20230906 00:02:48.051" endtime="20230906 00:04:04.042"/>
</suite>
<suite id="s1-s2-s5" name="Remove" source="/opt/hadoop/smoketest/freon/remove.robot">
<test id="s1-s2-s5-t1" name="Ozone Client Key Remover" line="26">
<kw name="Freon OCKG" library="freon" type="SETUP">
<arg>prefix=${OCKR_PREFIX}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230906 00:04:04.058" level="INFO">Running command 'ozone freon ockg --om-service-id=omservice -t 1 -n1 -p ockr  2&gt;&amp;1'.</msg>
<msg timestamp="20230906 00:04:12.541" level="INFO">${rc} = 0</msg>
<msg timestamp="20230906 00:04:12.541" level="INFO">${output} = 2023-09-06 00:04:06,677 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-06 00:04:06,797 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230906 00:04:04.055" endtime="20230906 00:04:12.541"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230906 00:04:12.543" level="INFO">2023-09-06 00:04:06,677 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-06 00:04:06,797 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-09-06 00:04:06,797 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-09-06 00:04:06,885 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ockr and number-of-tests 1
2023-09-06 00:04:06,951 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-06 00:04:07,969 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-06 00:04:08,970 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-06 00:04:09,485 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2023-09-06 00:04:09,575 [pool-2-thread-1] INFO netty.NettyConfigKeys$DataStream: setTlsConf GrpcTlsConfig0-
2023-09-06 00:04:09,858 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2023-09-06 00:04:09,970 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-06 00:04:10,971 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-06 00:04:11,972 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2023-09-06 00:04:12,173 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=1, min=1919.075228, max=1919.075228, mean=1919.075228, stddev=0.0, median=1919.075228, p75=1919.075228, p95=1919.075228, p98=1919.075228, p99=1919.075228, p999=1919.075228, mean_rate=0.33552961963043687, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-09-06 00:04:12,174 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 5
2023-09-06 00:04:12,174 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-09-06 00:04:12,174 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20230906 00:04:12.542" endtime="20230906 00:04:12.543"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230906 00:04:12.544" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230906 00:04:12.543" endtime="20230906 00:04:12.544"/>
</kw>
<status status="PASS" starttime="20230906 00:04:04.054" endtime="20230906 00:04:12.544"/>
</kw>
<msg timestamp="20230906 00:04:12.544" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230906 00:04:04.054" endtime="20230906 00:04:12.544"/>
</kw>
<msg timestamp="20230906 00:04:12.545" level="INFO">${result} = 2023-09-06 00:04:06,677 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-06 00:04:06,797 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230906 00:04:04.053" endtime="20230906 00:04:12.545"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230906 00:04:12.545" endtime="20230906 00:04:12.545"/>
</kw>
<status status="PASS" starttime="20230906 00:04:04.052" endtime="20230906 00:04:12.545"/>
</kw>
<kw name="Freon OCKR" library="freon">
<arg>prefix=${OCKR_PREFIX}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockr ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230906 00:04:12.551" level="INFO">Running command 'ozone freon ockr --om-service-id=omservice -t 1 -n1 -p ockr  2&gt;&amp;1'.</msg>
<msg timestamp="20230906 00:04:19.187" level="INFO">${rc} = 0</msg>
<msg timestamp="20230906 00:04:19.187" level="INFO">${output} = 2023-09-06 00:04:15,455 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-06 00:04:15,668 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230906 00:04:12.548" endtime="20230906 00:04:19.187"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230906 00:04:19.188" level="INFO">2023-09-06 00:04:15,455 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-06 00:04:15,668 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-09-06 00:04:15,668 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-09-06 00:04:15,774 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ockr and number-of-tests 1
2023-09-06 00:04:15,851 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-06 00:04:16,853 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-06 00:04:17,853 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-06 00:04:18,854 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2023-09-06 00:04:19,116 [shutdown-hook-0] INFO metrics: type=TIMER, name=remove, count=1, min=42.827875, max=42.827875, mean=42.827875, stddev=0.0, median=42.827875, p75=42.827875, p95=42.827875, p98=42.827875, p99=42.827875, p999=42.827875, mean_rate=0.9428244780835292, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-09-06 00:04:19,117 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2023-09-06 00:04:19,118 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-09-06 00:04:19,118 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20230906 00:04:19.187" endtime="20230906 00:04:19.188"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230906 00:04:19.189" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230906 00:04:19.189" endtime="20230906 00:04:19.189"/>
</kw>
<status status="PASS" starttime="20230906 00:04:12.548" endtime="20230906 00:04:19.189"/>
</kw>
<msg timestamp="20230906 00:04:19.189" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230906 00:04:12.548" endtime="20230906 00:04:19.189"/>
</kw>
<msg timestamp="20230906 00:04:19.190" level="INFO">${result} = 2023-09-06 00:04:15,455 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-06 00:04:15,668 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230906 00:04:12.547" endtime="20230906 00:04:19.190"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230906 00:04:19.190" endtime="20230906 00:04:19.190"/>
</kw>
<status status="PASS" starttime="20230906 00:04:12.546" endtime="20230906 00:04:19.190"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230906 00:04:04.051" endtime="20230906 00:04:19.191"/>
</test>
<test id="s1-s2-s5-t2" name="OM Bucket Remover" line="30">
<kw name="Freon OMBG" library="freon" type="SETUP">
<arg>prefix=${OMBR_PREFIX}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ombg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230906 00:04:19.198" level="INFO">Running command 'ozone freon ombg --om-service-id=omservice -t 1 -n1 -p ombr  2&gt;&amp;1'.</msg>
<msg timestamp="20230906 00:04:25.508" level="INFO">${rc} = 0</msg>
<msg timestamp="20230906 00:04:25.508" level="INFO">${output} = 2023-09-06 00:04:21,637 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-06 00:04:21,826 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230906 00:04:19.196" endtime="20230906 00:04:25.508"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230906 00:04:25.510" level="INFO">2023-09-06 00:04:21,637 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-06 00:04:21,826 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-09-06 00:04:21,826 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-09-06 00:04:21,928 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ombr and number-of-tests 1
2023-09-06 00:04:22,007 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-06 00:04:23,010 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-06 00:04:24,010 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-06 00:04:25,011 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2023-09-06 00:04:25,438 [shutdown-hook-0] INFO metrics: type=TIMER, name=bucket-create, count=1, min=46.299488, max=46.299488, mean=46.299488, stddev=0.0, median=46.299488, p75=46.299488, p95=46.299488, p98=46.299488, p99=46.299488, p999=46.299488, mean_rate=0.8240186478254627, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-09-06 00:04:25,438 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2023-09-06 00:04:25,439 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-09-06 00:04:25,439 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20230906 00:04:25.509" endtime="20230906 00:04:25.510"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230906 00:04:25.510" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230906 00:04:25.510" endtime="20230906 00:04:25.510"/>
</kw>
<status status="PASS" starttime="20230906 00:04:19.195" endtime="20230906 00:04:25.511"/>
</kw>
<msg timestamp="20230906 00:04:25.511" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230906 00:04:19.195" endtime="20230906 00:04:25.511"/>
</kw>
<msg timestamp="20230906 00:04:25.511" level="INFO">${result} = 2023-09-06 00:04:21,637 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-06 00:04:21,826 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230906 00:04:19.194" endtime="20230906 00:04:25.511"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230906 00:04:25.511" endtime="20230906 00:04:25.512"/>
</kw>
<status status="PASS" starttime="20230906 00:04:19.193" endtime="20230906 00:04:25.512"/>
</kw>
<kw name="Freon OMBR" library="freon">
<arg>prefix=${OMBR_PREFIX}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ombr ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230906 00:04:25.517" level="INFO">Running command 'ozone freon ombr --om-service-id=omservice -t 1 -n1 -p ombr  2&gt;&amp;1'.</msg>
<msg timestamp="20230906 00:04:30.818" level="INFO">${rc} = 0</msg>
<msg timestamp="20230906 00:04:30.818" level="INFO">${output} = 2023-09-06 00:04:28,257 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-06 00:04:28,544 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230906 00:04:25.515" endtime="20230906 00:04:30.818"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230906 00:04:30.819" level="INFO">2023-09-06 00:04:28,257 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-06 00:04:28,544 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-09-06 00:04:28,544 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-09-06 00:04:28,624 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ombr and number-of-tests 1
2023-09-06 00:04:28,679 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-06 00:04:29,683 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-06 00:04:30,684 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2023-09-06 00:04:30,758 [shutdown-hook-0] INFO metrics: type=TIMER, name=bucket-remove, count=1, min=624.001027, max=624.001027, mean=624.001027, stddev=0.0, median=624.001027, p75=624.001027, p95=624.001027, p98=624.001027, p99=624.001027, p999=624.001027, mean_rate=0.794921459200184, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-09-06 00:04:30,759 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2023-09-06 00:04:30,760 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-09-06 00:04:30,760 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20230906 00:04:30.819" endtime="20230906 00:04:30.820"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230906 00:04:30.820" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230906 00:04:30.820" endtime="20230906 00:04:30.820"/>
</kw>
<status status="PASS" starttime="20230906 00:04:25.514" endtime="20230906 00:04:30.820"/>
</kw>
<msg timestamp="20230906 00:04:30.820" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230906 00:04:25.514" endtime="20230906 00:04:30.821"/>
</kw>
<msg timestamp="20230906 00:04:30.821" level="INFO">${result} = 2023-09-06 00:04:28,257 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-06 00:04:28,544 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230906 00:04:25.513" endtime="20230906 00:04:30.821"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230906 00:04:30.821" endtime="20230906 00:04:30.821"/>
</kw>
<status status="PASS" starttime="20230906 00:04:25.512" endtime="20230906 00:04:30.822"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230906 00:04:19.192" endtime="20230906 00:04:30.822"/>
</test>
<doc>Test freon data remove commands</doc>
<status status="PASS" starttime="20230906 00:04:04.044" endtime="20230906 00:04:30.823"/>
</suite>
<suite id="s1-s2-s6" name="Validate-Chunk" source="/opt/hadoop/smoketest/freon/validate-chunk.robot">
<test id="s1-s2-s6-t1" name="DN Chunk Validator" line="25">
<kw name="Freon DCV" library="freon">
<arg>prefix=dcg${PREFIX}</arg>
<arg>n=100</arg>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20230906 00:04:30.833" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230906 00:04:30.832" endtime="20230906 00:04:30.833"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon dcv -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<status status="NOT RUN" starttime="20230906 00:04:30.833" endtime="20230906 00:04:30.833"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230906 00:04:30.833" endtime="20230906 00:04:30.833"/>
</kw>
<status status="PASS" starttime="20230906 00:04:30.831" endtime="20230906 00:04:30.833"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230906 00:04:30.831" endtime="20230906 00:04:30.833"/>
</test>
<doc>Test freon chunk validation commands</doc>
<status status="PASS" starttime="20230906 00:04:30.824" endtime="20230906 00:04:30.834"/>
</suite>
<suite id="s1-s2-s7" name="Validate" source="/opt/hadoop/smoketest/freon/validate.robot">
<test id="s1-s2-s7-t1" name="Ozone Client Key Validator" line="25">
<kw name="Freon OCKV" library="freon">
<arg>prefix=ockg${PREFIX}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockv ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230906 00:04:30.846" level="INFO">Running command 'ozone freon ockv --om-service-id=omservice -t 1 -n1 -p ockg  2&gt;&amp;1'.</msg>
<msg timestamp="20230906 00:04:39.575" level="INFO">${rc} = 0</msg>
<msg timestamp="20230906 00:04:39.576" level="INFO">${output} = 2023-09-06 00:04:33,475 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-06 00:04:33,675 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230906 00:04:30.843" endtime="20230906 00:04:39.576"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230906 00:04:39.577" level="INFO">2023-09-06 00:04:33,475 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-06 00:04:33,675 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-09-06 00:04:33,675 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-09-06 00:04:33,778 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ockg and number-of-tests 1
2023-09-06 00:04:33,841 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-06 00:04:34,846 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-06 00:04:35,847 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-06 00:04:36,515 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2023-09-06 00:04:36,847 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-06 00:04:37,848 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-06 00:04:38,848 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2023-09-06 00:04:39,195 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-validate, count=1, min=57.034562, max=57.034562, mean=57.034562, stddev=0.0, median=57.034562, p75=57.034562, p95=57.034562, p98=57.034562, p99=57.034562, p999=57.034562, mean_rate=0.8669156081877051, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-09-06 00:04:39,197 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 5
2023-09-06 00:04:39,198 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-09-06 00:04:39,198 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20230906 00:04:39.576" endtime="20230906 00:04:39.577"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230906 00:04:39.578" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230906 00:04:39.577" endtime="20230906 00:04:39.578"/>
</kw>
<status status="PASS" starttime="20230906 00:04:30.843" endtime="20230906 00:04:39.578"/>
</kw>
<msg timestamp="20230906 00:04:39.578" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230906 00:04:30.843" endtime="20230906 00:04:39.578"/>
</kw>
<msg timestamp="20230906 00:04:39.578" level="INFO">${result} = 2023-09-06 00:04:33,475 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-06 00:04:33,675 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230906 00:04:30.842" endtime="20230906 00:04:39.578"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230906 00:04:39.579" endtime="20230906 00:04:39.579"/>
</kw>
<status status="PASS" starttime="20230906 00:04:30.841" endtime="20230906 00:04:39.579"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230906 00:04:30.840" endtime="20230906 00:04:39.579"/>
</test>
<doc>Test freon data validation commands</doc>
<status status="PASS" starttime="20230906 00:04:30.835" endtime="20230906 00:04:39.580"/>
</suite>
<status status="PASS" starttime="20230906 00:01:33.641" endtime="20230906 00:04:39.583"/>
</suite>
<suite id="s1-s3" name="ozonefs-o3fs-link" source="/opt/hadoop/smoketest/ozonefs/ozonefs.robot">
<kw name="Setup for FS test" library="setup" type="SETUP">
<kw name="Assign suite vars for FS test" library="setup">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230906 00:04:44.006" level="INFO">${random} = 78809</msg>
<status status="PASS" starttime="20230906 00:04:44.006" endtime="20230906 00:04:44.006"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${BUCKET}</arg>
<arg>${random}-${BUCKET_TYPE}1-${SCHEME}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230906 00:04:44.007" level="INFO">${BUCKET} = 78809-link1-o3fs</msg>
<status status="PASS" starttime="20230906 00:04:44.006" endtime="20230906 00:04:44.007"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${BUCKET2}</arg>
<arg>${random}-${BUCKET_TYPE}2-${SCHEME}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230906 00:04:44.007" level="INFO">${BUCKET2} = 78809-link2-o3fs</msg>
<status status="PASS" starttime="20230906 00:04:44.007" endtime="20230906 00:04:44.007"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${BUCKET_IN_VOL2}</arg>
<arg>${random}-${BUCKET_TYPE}3-${SCHEME}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230906 00:04:44.008" level="INFO">${BUCKET_IN_VOL2} = 78809-link3-o3fs</msg>
<status status="PASS" starttime="20230906 00:04:44.007" endtime="20230906 00:04:44.008"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${BASE_URL}</var>
<arg>${SCHEME}</arg>
<arg>${VOLUME}</arg>
<arg>${BUCKET}</arg>
<arg>/</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20230906 00:04:44.011" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20230906 00:04:44.011" endtime="20230906 00:04:44.011"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230906 00:04:44.012" level="INFO">${result} = .omservice</msg>
<status status="PASS" starttime="20230906 00:04:44.011" endtime="20230906 00:04:44.012"/>
</kw>
<status status="PASS" starttime="20230906 00:04:44.010" endtime="20230906 00:04:44.012"/>
</kw>
<msg timestamp="20230906 00:04:44.012" level="INFO">${om_with_leading} = .omservice</msg>
<status status="PASS" starttime="20230906 00:04:44.010" endtime="20230906 00:04:44.012"/>
</kw>
<status status="PASS" starttime="20230906 00:04:44.009" endtime="20230906 00:04:44.012"/>
</kw>
<msg timestamp="20230906 00:04:44.012" level="INFO">${url} = o3fs://78809-link1-o3fs.fstest1.omservice//</msg>
<status status="PASS" starttime="20230906 00:04:44.009" endtime="20230906 00:04:44.012"/>
</kw>
<msg timestamp="20230906 00:04:44.012" level="INFO">${BASE_URL} = o3fs://78809-link1-o3fs.fstest1.omservice//</msg>
<status status="PASS" starttime="20230906 00:04:44.008" endtime="20230906 00:04:44.012"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${BASE_URL}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230906 00:04:44.013" level="INFO">${BASE_URL} = o3fs://78809-link1-o3fs.fstest1.omservice//</msg>
<status status="PASS" starttime="20230906 00:04:44.013" endtime="20230906 00:04:44.013"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${DEEP_URL}</arg>
<arg>${BASE_URL}${DEEP_DIR}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230906 00:04:44.015" level="INFO">${DEEP_URL} = o3fs://78809-link1-o3fs.fstest1.omservice//test/o3fs/dir</msg>
<status status="PASS" starttime="20230906 00:04:44.013" endtime="20230906 00:04:44.015"/>
</kw>
<status status="PASS" starttime="20230906 00:04:44.005" endtime="20230906 00:04:44.015"/>
</kw>
<kw name="Create volumes for FS test" library="setup">
<kw name="Execute And Ignore Error" library="os">
<arg>ozone sh volume create ${VOLUME} --space-quota 100TB</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230906 00:04:44.018" level="INFO">Running command 'ozone sh volume create fstest1 --space-quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20230906 00:04:49.181" level="INFO">${rc} = 0</msg>
<msg timestamp="20230906 00:04:49.181" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230906 00:04:44.015" endtime="20230906 00:04:49.181"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230906 00:04:49.184" level="INFO"/>
<status status="PASS" starttime="20230906 00:04:49.183" endtime="20230906 00:04:49.184"/>
</kw>
<status status="PASS" starttime="20230906 00:04:44.015" endtime="20230906 00:04:49.184"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arg>ozone sh volume create ${VOL2} --space-quota 100TB</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230906 00:04:49.188" level="INFO">Running command 'ozone sh volume create fstest2 --space-quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20230906 00:04:54.863" level="INFO">${rc} = 0</msg>
<msg timestamp="20230906 00:04:54.863" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230906 00:04:49.185" endtime="20230906 00:04:54.863"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230906 00:04:54.865" level="INFO"/>
<status status="PASS" starttime="20230906 00:04:54.864" endtime="20230906 00:04:54.865"/>
</kw>
<status status="PASS" starttime="20230906 00:04:49.184" endtime="20230906 00:04:54.865"/>
</kw>
<status status="PASS" starttime="20230906 00:04:44.015" endtime="20230906 00:04:54.865"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Create ${BUCKET_TYPE}s for FS test</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Create links for FS test" library="setup">
<kw name="Execute And Ignore Error" library="os">
<arg>ozone sh volume create ${VOLUME}-src --space-quota 100TB</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230906 00:04:54.872" level="INFO">Running command 'ozone sh volume create fstest1-src --space-quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20230906 00:05:00.978" level="INFO">${rc} = 0</msg>
<msg timestamp="20230906 00:05:00.978" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230906 00:04:54.870" endtime="20230906 00:05:00.978"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230906 00:05:00.979" level="INFO"/>
<status status="PASS" starttime="20230906 00:05:00.979" endtime="20230906 00:05:00.980"/>
</kw>
<status status="PASS" starttime="20230906 00:04:54.869" endtime="20230906 00:05:00.980"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arg>ozone sh volume create ${VOL2}-src --space-quota 100TB</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230906 00:05:00.983" level="INFO">Running command 'ozone sh volume create fstest2-src --space-quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20230906 00:05:06.416" level="INFO">${rc} = 0</msg>
<msg timestamp="20230906 00:05:06.416" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230906 00:05:00.981" endtime="20230906 00:05:06.416"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230906 00:05:06.417" level="INFO"/>
<status status="PASS" starttime="20230906 00:05:06.417" endtime="20230906 00:05:06.417"/>
</kw>
<status status="PASS" starttime="20230906 00:05:00.980" endtime="20230906 00:05:06.418"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${VOLUME}-src/${BUCKET}-src --space-quota 1TB --layout FILE_SYSTEM_OPTIMIZED</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230906 00:05:06.422" level="INFO">Running command 'ozone sh bucket create fstest1-src/78809-link1-o3fs-src --space-quota 1TB --layout FILE_SYSTEM_OPTIMIZED 2&gt;&amp;1'.</msg>
<msg timestamp="20230906 00:05:11.727" level="INFO">${rc} = 0</msg>
<msg timestamp="20230906 00:05:11.727" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230906 00:05:06.419" endtime="20230906 00:05:11.727"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230906 00:05:11.728" level="INFO"/>
<status status="PASS" starttime="20230906 00:05:11.728" endtime="20230906 00:05:11.728"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230906 00:05:11.729" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230906 00:05:11.729" endtime="20230906 00:05:11.729"/>
</kw>
<status status="PASS" starttime="20230906 00:05:06.419" endtime="20230906 00:05:11.729"/>
</kw>
<msg timestamp="20230906 00:05:11.729" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230906 00:05:06.419" endtime="20230906 00:05:11.729"/>
</kw>
<status status="PASS" starttime="20230906 00:05:06.418" endtime="20230906 00:05:11.730"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${VOLUME}-src/${BUCKET2}-src --space-quota 1TB --layout FILE_SYSTEM_OPTIMIZED</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230906 00:05:11.734" level="INFO">Running command 'ozone sh bucket create fstest1-src/78809-link2-o3fs-src --space-quota 1TB --layout FILE_SYSTEM_OPTIMIZED 2&gt;&amp;1'.</msg>
<msg timestamp="20230906 00:05:17.763" level="INFO">${rc} = 0</msg>
<msg timestamp="20230906 00:05:17.763" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230906 00:05:11.731" endtime="20230906 00:05:17.763"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230906 00:05:17.765" level="INFO"/>
<status status="PASS" starttime="20230906 00:05:17.764" endtime="20230906 00:05:17.765"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230906 00:05:17.765" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230906 00:05:17.765" endtime="20230906 00:05:17.766"/>
</kw>
<status status="PASS" starttime="20230906 00:05:11.731" endtime="20230906 00:05:17.766"/>
</kw>
<msg timestamp="20230906 00:05:17.766" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230906 00:05:11.730" endtime="20230906 00:05:17.766"/>
</kw>
<status status="PASS" starttime="20230906 00:05:11.730" endtime="20230906 00:05:17.766"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${VOL2}-src/${BUCKET_IN_VOL2}-src --space-quota 1TB --layout FILE_SYSTEM_OPTIMIZED</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230906 00:05:17.771" level="INFO">Running command 'ozone sh bucket create fstest2-src/78809-link3-o3fs-src --space-quota 1TB --layout FILE_SYSTEM_OPTIMIZED 2&gt;&amp;1'.</msg>
<msg timestamp="20230906 00:05:23.559" level="INFO">${rc} = 0</msg>
<msg timestamp="20230906 00:05:23.559" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230906 00:05:17.769" endtime="20230906 00:05:23.560"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230906 00:05:23.561" level="INFO"/>
<status status="PASS" starttime="20230906 00:05:23.560" endtime="20230906 00:05:23.561"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230906 00:05:23.561" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230906 00:05:23.561" endtime="20230906 00:05:23.561"/>
</kw>
<status status="PASS" starttime="20230906 00:05:17.768" endtime="20230906 00:05:23.561"/>
</kw>
<msg timestamp="20230906 00:05:23.562" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230906 00:05:17.767" endtime="20230906 00:05:23.562"/>
</kw>
<status status="PASS" starttime="20230906 00:05:17.766" endtime="20230906 00:05:23.562"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${VOLUME}-src/${BUCKET}-src ${VOLUME}/${BUCKET}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230906 00:05:23.566" level="INFO">Running command 'ozone sh bucket link fstest1-src/78809-link1-o3fs-src fstest1/78809-link1-o3fs 2&gt;&amp;1'.</msg>
<msg timestamp="20230906 00:05:28.722" level="INFO">${rc} = 0</msg>
<msg timestamp="20230906 00:05:28.722" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230906 00:05:23.564" endtime="20230906 00:05:28.722"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230906 00:05:28.724" level="INFO"/>
<status status="PASS" starttime="20230906 00:05:28.723" endtime="20230906 00:05:28.724"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230906 00:05:28.724" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230906 00:05:28.724" endtime="20230906 00:05:28.724"/>
</kw>
<status status="PASS" starttime="20230906 00:05:23.563" endtime="20230906 00:05:28.725"/>
</kw>
<msg timestamp="20230906 00:05:28.725" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230906 00:05:23.563" endtime="20230906 00:05:28.725"/>
</kw>
<status status="PASS" starttime="20230906 00:05:23.562" endtime="20230906 00:05:28.725"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${VOLUME}-src/${BUCKET2}-src ${VOLUME}/${BUCKET2}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230906 00:05:28.729" level="INFO">Running command 'ozone sh bucket link fstest1-src/78809-link2-o3fs-src fstest1/78809-link2-o3fs 2&gt;&amp;1'.</msg>
<msg timestamp="20230906 00:05:34.106" level="INFO">${rc} = 0</msg>
<msg timestamp="20230906 00:05:34.106" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230906 00:05:28.726" endtime="20230906 00:05:34.106"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230906 00:05:34.107" level="INFO"/>
<status status="PASS" starttime="20230906 00:05:34.106" endtime="20230906 00:05:34.107"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230906 00:05:34.108" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230906 00:05:34.107" endtime="20230906 00:05:34.108"/>
</kw>
<status status="PASS" starttime="20230906 00:05:28.726" endtime="20230906 00:05:34.108"/>
</kw>
<msg timestamp="20230906 00:05:34.108" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230906 00:05:28.726" endtime="20230906 00:05:34.108"/>
</kw>
<status status="PASS" starttime="20230906 00:05:28.725" endtime="20230906 00:05:34.108"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${VOL2}-src/${BUCKET_IN_VOL2}-src ${VOL2}/${BUCKET_IN_VOL2}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230906 00:05:34.112" level="INFO">Running command 'ozone sh bucket link fstest2-src/78809-link3-o3fs-src fstest2/78809-link3-o3fs 2&gt;&amp;1'.</msg>
<msg timestamp="20230906 00:05:39.909" level="INFO">${rc} = 0</msg>
<msg timestamp="20230906 00:05:39.909" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230906 00:05:34.110" endtime="20230906 00:05:39.909"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230906 00:05:39.911" level="INFO"/>
<status status="PASS" starttime="20230906 00:05:39.910" endtime="20230906 00:05:39.911"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230906 00:05:39.911" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230906 00:05:39.911" endtime="20230906 00:05:39.911"/>
</kw>
<status status="PASS" starttime="20230906 00:05:34.109" endtime="20230906 00:05:39.912"/>
</kw>
<msg timestamp="20230906 00:05:39.912" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230906 00:05:34.109" endtime="20230906 00:05:39.912"/>
</kw>
<status status="PASS" starttime="20230906 00:05:34.108" endtime="20230906 00:05:39.912"/>
</kw>
<status status="PASS" starttime="20230906 00:04:54.869" endtime="20230906 00:05:39.912"/>
</kw>
<status status="PASS" starttime="20230906 00:04:54.865" endtime="20230906 00:05:39.912"/>
</kw>
<kw name="Sanity check for FS test" library="setup">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230906 00:05:39.917" level="INFO">Running command 'ozone sh volume list 2&gt;&amp;1'.</msg>
<msg timestamp="20230906 00:05:46.208" level="INFO">${rc} = 0</msg>
<msg timestamp="20230906 00:05:46.208" level="INFO">${output} = [ {
  "metadata" : { },
  "name" : "fstest1",
  "admin" : "testuser",
  "owner" : "testuser",
  "quotaInBytes" : 109951162777600,
  "quotaInNamespace" : -1,
  "usedNamespace" : 2,
  "creationTime" : "...</msg>
<status status="PASS" starttime="20230906 00:05:39.914" endtime="20230906 00:05:46.208"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230906 00:05:46.209" level="INFO">[ {
  "metadata" : { },
  "name" : "fstest1",
  "admin" : "testuser",
  "owner" : "testuser",
  "quotaInBytes" : 109951162777600,
  "quotaInNamespace" : -1,
  "usedNamespace" : 2,
  "creationTime" : "2023-09-06T00:04:49.093Z",
  "modificationTime" : "2023-09-06T00:04:49.093Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "testuser",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "testuser",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "fstest1-src",
  "admin" : "testuser",
  "owner" : "testuser",
  "quotaInBytes" : 109951162777600,
  "quotaInNamespace" : -1,
  "usedNamespace" : 2,
  "creationTime" : "2023-09-06T00:05:00.720Z",
  "modificationTime" : "2023-09-06T00:05:00.720Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "testuser",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "testuser",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "fstest2",
  "admin" : "testuser",
  "owner" : "testuser",
  "quotaInBytes" : 109951162777600,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2023-09-06T00:04:54.762Z",
  "modificationTime" : "2023-09-06T00:04:54.762Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "testuser",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "testuser",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "fstest2-src",
  "admin" : "testuser",
  "owner" : "testuser",
  "quotaInBytes" : 109951162777600,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2023-09-06T00:05:06.324Z",
  "modificationTime" : "2023-09-06T00:05:06.324Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "testuser",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "testuser",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "s3v",
  "admin" : "om",
  "owner" : "om",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 0,
  "creationTime" : "2023-09-06T00:00:43.781Z",
  "modificationTime" : "2023-09-06T00:00:43.781Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "om",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "om",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "vol1",
  "admin" : "testuser",
  "owner" : "testuser",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 2,
  "creationTime" : "2023-09-06T00:02:23.485Z",
  "modificationTime" : "2023-09-06T00:02:23.485Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "testuser",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "testuser",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "voltest",
  "admin" : "testuser",
  "owner" : "testuser",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2023-09-06T00:02:53.965Z",
  "modificationTime" : "2023-09-06T00:02:53.965Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "testuser",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "testuser",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "refCount" : 0
} ]</msg>
<status status="PASS" starttime="20230906 00:05:46.209" endtime="20230906 00:05:46.209"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230906 00:05:46.210" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230906 00:05:46.210" endtime="20230906 00:05:46.210"/>
</kw>
<status status="PASS" starttime="20230906 00:05:39.913" endtime="20230906 00:05:46.210"/>
</kw>
<msg timestamp="20230906 00:05:46.210" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230906 00:05:39.913" endtime="20230906 00:05:46.210"/>
</kw>
<msg timestamp="20230906 00:05:46.211" level="INFO">${result} = [ {
  "metadata" : { },
  "name" : "fstest1",
  "admin" : "testuser",
  "owner" : "testuser",
  "quotaInBytes" : 109951162777600,
  "quotaInNamespace" : -1,
  "usedNamespace" : 2,
  "creationTime" : "...</msg>
<status status="PASS" starttime="20230906 00:05:39.913" endtime="20230906 00:05:46.211"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${VOLUME}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230906 00:05:46.211" endtime="20230906 00:05:46.211"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${VOL2}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230906 00:05:46.211" endtime="20230906 00:05:46.212"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>"admin" : "(hadoop|testuser)"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20230906 00:05:46.212" endtime="20230906 00:05:46.212"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${VOLUME}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230906 00:05:46.216" level="INFO">Running command 'ozone sh bucket list fstest1 2&gt;&amp;1'.</msg>
<msg timestamp="20230906 00:05:52.020" level="INFO">${rc} = 0</msg>
<msg timestamp="20230906 00:05:52.020" level="INFO">${output} = [ {
  "volumeName" : "fstest1",
  "bucketName" : "78809-link1-o3fs",
  "sourceVolume" : "fstest1-src",
  "sourceBucket" : "78809-link1-o3fs-src",
  "creationTime" : "2023-09-06T00:05:28.505Z",
  "modi...</msg>
<status status="PASS" starttime="20230906 00:05:46.214" endtime="20230906 00:05:52.020"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230906 00:05:52.021" level="INFO">[ {
  "volumeName" : "fstest1",
  "bucketName" : "78809-link1-o3fs",
  "sourceVolume" : "fstest1-src",
  "sourceBucket" : "78809-link1-o3fs-src",
  "creationTime" : "2023-09-06T00:05:28.505Z",
  "modificationTime" : "2023-09-06T00:05:28.505Z",
  "owner" : "testuser",
  "link" : true
}, {
  "volumeName" : "fstest1",
  "bucketName" : "78809-link2-o3fs",
  "sourceVolume" : "fstest1-src",
  "sourceBucket" : "78809-link2-o3fs-src",
  "creationTime" : "2023-09-06T00:05:34.026Z",
  "modificationTime" : "2023-09-06T00:05:34.026Z",
  "owner" : "testuser",
  "link" : true
} ]</msg>
<status status="PASS" starttime="20230906 00:05:52.021" endtime="20230906 00:05:52.022"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230906 00:05:52.022" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230906 00:05:52.022" endtime="20230906 00:05:52.022"/>
</kw>
<status status="PASS" starttime="20230906 00:05:46.213" endtime="20230906 00:05:52.022"/>
</kw>
<msg timestamp="20230906 00:05:52.023" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230906 00:05:46.213" endtime="20230906 00:05:52.023"/>
</kw>
<msg timestamp="20230906 00:05:52.023" level="INFO">${result} = [ {
  "volumeName" : "fstest1",
  "bucketName" : "78809-link1-o3fs",
  "sourceVolume" : "fstest1-src",
  "sourceBucket" : "78809-link1-o3fs-src",
  "creationTime" : "2023-09-06T00:05:28.505Z",
  "modi...</msg>
<status status="PASS" starttime="20230906 00:05:46.213" endtime="20230906 00:05:52.023"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230906 00:05:52.023" endtime="20230906 00:05:52.023"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET2}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230906 00:05:52.023" endtime="20230906 00:05:52.024"/>
</kw>
<status status="PASS" starttime="20230906 00:05:39.912" endtime="20230906 00:05:52.024"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Completed setup for ${SCHEME} tests with ${BUCKET_TYPE}s in ${VOLUME}/${BUCKET} using FS base URL: ${BASE_URL}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230906 00:05:52.024" level="INFO">Completed setup for o3fs tests with links in fstest1/78809-link1-o3fs using FS base URL: o3fs://78809-link1-o3fs.fstest1.omservice//</msg>
<status status="PASS" starttime="20230906 00:05:52.024" endtime="20230906 00:05:52.024"/>
</kw>
<status status="PASS" starttime="20230906 00:04:44.005" endtime="20230906 00:05:52.024"/>
</kw>
<test id="s1-s3-t1" name="List root" line="26">
<kw name="Format FS URL" library="fs">
<var>${root}</var>
<arg>${SCHEME}</arg>
<arg>${VOLUME}</arg>
<arg>${BUCKET}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20230906 00:05:52.030" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20230906 00:05:52.030" endtime="20230906 00:05:52.030"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230906 00:05:52.031" level="INFO">${result} = .omservice</msg>
<status status="PASS" starttime="20230906 00:05:52.031" endtime="20230906 00:05:52.031"/>
</kw>
<status status="PASS" starttime="20230906 00:05:52.029" endtime="20230906 00:05:52.031"/>
</kw>
<msg timestamp="20230906 00:05:52.031" level="INFO">${om_with_leading} = .omservice</msg>
<status status="PASS" starttime="20230906 00:05:52.028" endtime="20230906 00:05:52.031"/>
</kw>
<status status="PASS" starttime="20230906 00:05:52.028" endtime="20230906 00:05:52.032"/>
</kw>
<msg timestamp="20230906 00:05:52.032" level="INFO">${url} = o3fs://78809-link1-o3fs.fstest1.omservice/</msg>
<status status="PASS" starttime="20230906 00:05:52.027" endtime="20230906 00:05:52.032"/>
</kw>
<msg timestamp="20230906 00:05:52.032" level="INFO">${root} = o3fs://78809-link1-o3fs.fstest1.omservice/</msg>
<status status="PASS" starttime="20230906 00:05:52.026" endtime="20230906 00:05:52.032"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -ls ${root}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230906 00:05:52.036" level="INFO">Running command 'ozone fs -ls o3fs://78809-link1-o3fs.fstest1.omservice/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230906 00:05:56.909" level="INFO">${rc} = 0</msg>
<msg timestamp="20230906 00:05:56.909" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230906 00:05:52.033" endtime="20230906 00:05:56.909"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230906 00:05:56.910" level="INFO"/>
<status status="PASS" starttime="20230906 00:05:56.910" endtime="20230906 00:05:56.910"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230906 00:05:56.911" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230906 00:05:56.911" endtime="20230906 00:05:56.911"/>
</kw>
<status status="PASS" starttime="20230906 00:05:52.033" endtime="20230906 00:05:56.911"/>
</kw>
<msg timestamp="20230906 00:05:56.911" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230906 00:05:52.033" endtime="20230906 00:05:56.912"/>
</kw>
<status status="PASS" starttime="20230906 00:05:52.032" endtime="20230906 00:05:56.912"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230906 00:05:52.025" endtime="20230906 00:05:56.912"/>
</test>
<test id="s1-s3-t2" name="List non-existent volume" line="30">
<kw name="Format FS URL" library="fs">
<var>${url}</var>
<arg>${SCHEME}</arg>
<arg>no-such-volume</arg>
<arg>${BUCKET}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20230906 00:05:56.918" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20230906 00:05:56.918" endtime="20230906 00:05:56.918"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230906 00:05:56.919" level="INFO">${result} = .omservice</msg>
<status status="PASS" starttime="20230906 00:05:56.919" endtime="20230906 00:05:56.919"/>
</kw>
<status status="PASS" starttime="20230906 00:05:56.917" endtime="20230906 00:05:56.919"/>
</kw>
<msg timestamp="20230906 00:05:56.919" level="INFO">${om_with_leading} = .omservice</msg>
<status status="PASS" starttime="20230906 00:05:56.916" endtime="20230906 00:05:56.919"/>
</kw>
<status status="PASS" starttime="20230906 00:05:56.916" endtime="20230906 00:05:56.920"/>
</kw>
<msg timestamp="20230906 00:05:56.920" level="INFO">${url} = o3fs://78809-link1-o3fs.no-such-volume.omservice/</msg>
<status status="PASS" starttime="20230906 00:05:56.915" endtime="20230906 00:05:56.920"/>
</kw>
<msg timestamp="20230906 00:05:56.920" level="INFO">${url} = o3fs://78809-link1-o3fs.no-such-volume.omservice/</msg>
<status status="PASS" starttime="20230906 00:05:56.914" endtime="20230906 00:05:56.920"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone fs -ls ${url}</arg>
<arg>1</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230906 00:05:56.923" level="INFO">Running command 'ozone fs -ls o3fs://78809-link1-o3fs.no-such-volume.omservice/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230906 00:06:01.726" level="INFO">${rc} = 1</msg>
<msg timestamp="20230906 00:06:01.726" level="INFO">${output} = ls: Volume no-such-volume is not found</msg>
<status status="PASS" starttime="20230906 00:05:56.921" endtime="20230906 00:06:01.726"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230906 00:06:01.728" level="INFO">ls: Volume no-such-volume is not found</msg>
<status status="PASS" starttime="20230906 00:06:01.727" endtime="20230906 00:06:01.728"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230906 00:06:01.728" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230906 00:06:01.728" endtime="20230906 00:06:01.729"/>
</kw>
<msg timestamp="20230906 00:06:01.729" level="INFO">${result} = ls: Volume no-such-volume is not found</msg>
<status status="PASS" starttime="20230906 00:05:56.920" endtime="20230906 00:06:01.729"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>(Check access operation failed)|(Volume no-such-volume is not found)|(No such file or directory)</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20230906 00:06:01.729" endtime="20230906 00:06:01.730"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230906 00:05:56.913" endtime="20230906 00:06:01.730"/>
</test>
<test id="s1-s3-t3" name="List non-existent bucket" line="35">
<kw name="Format FS URL" library="fs">
<var>${url}</var>
<arg>${SCHEME}</arg>
<arg>${VOLUME}</arg>
<arg>no-such-bucket</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20230906 00:06:01.738" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20230906 00:06:01.737" endtime="20230906 00:06:01.738"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230906 00:06:01.738" level="INFO">${result} = .omservice</msg>
<status status="PASS" starttime="20230906 00:06:01.738" endtime="20230906 00:06:01.738"/>
</kw>
<status status="PASS" starttime="20230906 00:06:01.737" endtime="20230906 00:06:01.738"/>
</kw>
<msg timestamp="20230906 00:06:01.739" level="INFO">${om_with_leading} = .omservice</msg>
<status status="PASS" starttime="20230906 00:06:01.736" endtime="20230906 00:06:01.739"/>
</kw>
<status status="PASS" starttime="20230906 00:06:01.735" endtime="20230906 00:06:01.739"/>
</kw>
<msg timestamp="20230906 00:06:01.739" level="INFO">${url} = o3fs://no-such-bucket.fstest1.omservice/</msg>
<status status="PASS" starttime="20230906 00:06:01.734" endtime="20230906 00:06:01.739"/>
</kw>
<msg timestamp="20230906 00:06:01.739" level="INFO">${url} = o3fs://no-such-bucket.fstest1.omservice/</msg>
<status status="PASS" starttime="20230906 00:06:01.733" endtime="20230906 00:06:01.739"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone fs -ls ${url}</arg>
<arg>1</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230906 00:06:01.742" level="INFO">Running command 'ozone fs -ls o3fs://no-such-bucket.fstest1.omservice/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230906 00:06:05.858" level="INFO">${rc} = 1</msg>
<msg timestamp="20230906 00:06:05.858" level="INFO">${output} = ls: Bucket not found</msg>
<status status="PASS" starttime="20230906 00:06:01.740" endtime="20230906 00:06:05.858"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230906 00:06:05.859" level="INFO">ls: Bucket not found</msg>
<status status="PASS" starttime="20230906 00:06:05.859" endtime="20230906 00:06:05.860"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230906 00:06:05.860" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230906 00:06:05.860" endtime="20230906 00:06:05.860"/>
</kw>
<msg timestamp="20230906 00:06:05.860" level="INFO">${result} = ls: Bucket not found</msg>
<status status="PASS" starttime="20230906 00:06:01.739" endtime="20230906 00:06:05.860"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>(Check access operation failed)|(Bucket not found)|(No such file or directory)</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20230906 00:06:05.861" endtime="20230906 00:06:05.861"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230906 00:06:01.732" endtime="20230906 00:06:05.862"/>
</test>
<test id="s1-s3-t4" name="Create dir with parents" line="40">
<kw name="Execute" library="os">
<arg>ozone fs -mkdir -p ${DEEP_URL}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230906 00:06:05.866" level="INFO">Running command 'ozone fs -mkdir -p o3fs://78809-link1-o3fs.fstest1.omservice//test/o3fs/dir 2&gt;&amp;1'.</msg>
<msg timestamp="20230906 00:06:10.809" level="INFO">${rc} = 0</msg>
<msg timestamp="20230906 00:06:10.809" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230906 00:06:05.864" endtime="20230906 00:06:10.809"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230906 00:06:10.810" level="INFO"/>
<status status="PASS" starttime="20230906 00:06:10.809" endtime="20230906 00:06:10.810"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230906 00:06:10.811" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230906 00:06:10.810" endtime="20230906 00:06:10.811"/>
</kw>
<status status="PASS" starttime="20230906 00:06:05.863" endtime="20230906 00:06:10.811"/>
</kw>
<msg timestamp="20230906 00:06:10.811" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230906 00:06:05.863" endtime="20230906 00:06:10.811"/>
</kw>
<status status="PASS" starttime="20230906 00:06:05.863" endtime="20230906 00:06:10.811"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230906 00:06:10.815" level="INFO">Running command 'ozone sh key list fstest1/78809-link1-o3fs | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20230906 00:06:16.738" level="INFO">${rc} = 0</msg>
<msg timestamp="20230906 00:06:16.738" level="INFO">${output} = test/
test/o3fs/
test/o3fs/dir/</msg>
<status status="PASS" starttime="20230906 00:06:10.813" endtime="20230906 00:06:16.738"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230906 00:06:16.740" level="INFO">test/
test/o3fs/
test/o3fs/dir/</msg>
<status status="PASS" starttime="20230906 00:06:16.739" endtime="20230906 00:06:16.740"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230906 00:06:16.741" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230906 00:06:16.740" endtime="20230906 00:06:16.741"/>
</kw>
<status status="PASS" starttime="20230906 00:06:10.813" endtime="20230906 00:06:16.741"/>
</kw>
<msg timestamp="20230906 00:06:16.741" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230906 00:06:10.812" endtime="20230906 00:06:16.741"/>
</kw>
<msg timestamp="20230906 00:06:16.741" level="INFO">${result} = test/
test/o3fs/
test/o3fs/dir/</msg>
<status status="PASS" starttime="20230906 00:06:10.812" endtime="20230906 00:06:16.741"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${DEEP_DIR}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230906 00:06:16.741" endtime="20230906 00:06:16.742"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230906 00:06:05.862" endtime="20230906 00:06:16.742"/>
</test>
<test id="s1-s3-t5" name="Copy from local" line="45">
<kw name="Execute" library="os">
<arg>ozone fs -copyFromLocal NOTICE.txt ${DEEP_URL}/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230906 00:06:16.752" level="INFO">Running command 'ozone fs -copyFromLocal NOTICE.txt o3fs://78809-link1-o3fs.fstest1.omservice//test/o3fs/dir/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230906 00:06:24.073" level="INFO">${rc} = 0</msg>
<msg timestamp="20230906 00:06:24.073" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230906 00:06:16.749" endtime="20230906 00:06:24.073"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230906 00:06:24.074" level="INFO"/>
<status status="PASS" starttime="20230906 00:06:24.074" endtime="20230906 00:06:24.074"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230906 00:06:24.075" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230906 00:06:24.075" endtime="20230906 00:06:24.075"/>
</kw>
<status status="PASS" starttime="20230906 00:06:16.749" endtime="20230906 00:06:24.076"/>
</kw>
<msg timestamp="20230906 00:06:24.076" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230906 00:06:16.748" endtime="20230906 00:06:24.076"/>
</kw>
<status status="PASS" starttime="20230906 00:06:16.748" endtime="20230906 00:06:24.076"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230906 00:06:24.080" level="INFO">Running command 'ozone sh key list fstest1/78809-link1-o3fs | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20230906 00:06:30.195" level="INFO">${rc} = 0</msg>
<msg timestamp="20230906 00:06:30.195" level="INFO">${output} = test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/NOTICE.txt</msg>
<status status="PASS" starttime="20230906 00:06:24.078" endtime="20230906 00:06:30.195"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230906 00:06:30.196" level="INFO">test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/NOTICE.txt</msg>
<status status="PASS" starttime="20230906 00:06:30.196" endtime="20230906 00:06:30.196"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230906 00:06:30.197" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230906 00:06:30.197" endtime="20230906 00:06:30.197"/>
</kw>
<status status="PASS" starttime="20230906 00:06:24.077" endtime="20230906 00:06:30.197"/>
</kw>
<msg timestamp="20230906 00:06:30.197" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230906 00:06:24.077" endtime="20230906 00:06:30.198"/>
</kw>
<msg timestamp="20230906 00:06:30.198" level="INFO">${result} = test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/NOTICE.txt</msg>
<status status="PASS" starttime="20230906 00:06:24.076" endtime="20230906 00:06:30.198"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230906 00:06:30.198" endtime="20230906 00:06:30.198"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${VOLUME}/${BUCKET}/${DEEP_DIR}/NOTICE.txt | jq -r '.replicationConfig.replicationFactor'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230906 00:06:30.202" level="INFO">Running command 'ozone sh key info fstest1/78809-link1-o3fs/test/o3fs/dir/NOTICE.txt | jq -r '.replicationConfig.replicationFactor' 2&gt;&amp;1'.</msg>
<msg timestamp="20230906 00:06:36.237" level="INFO">${rc} = 0</msg>
<msg timestamp="20230906 00:06:36.237" level="INFO">${output} = THREE</msg>
<status status="PASS" starttime="20230906 00:06:30.200" endtime="20230906 00:06:36.237"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230906 00:06:36.239" level="INFO">THREE</msg>
<status status="PASS" starttime="20230906 00:06:36.238" endtime="20230906 00:06:36.239"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230906 00:06:36.239" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230906 00:06:36.239" endtime="20230906 00:06:36.240"/>
</kw>
<status status="PASS" starttime="20230906 00:06:30.199" endtime="20230906 00:06:36.240"/>
</kw>
<msg timestamp="20230906 00:06:36.240" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230906 00:06:30.199" endtime="20230906 00:06:36.240"/>
</kw>
<msg timestamp="20230906 00:06:36.240" level="INFO">${result} = THREE</msg>
<status status="PASS" starttime="20230906 00:06:30.198" endtime="20230906 00:06:36.240"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>THREE</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230906 00:06:36.240" endtime="20230906 00:06:36.241"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230906 00:06:16.743" endtime="20230906 00:06:36.241"/>
</test>
<test id="s1-s3-t6" name="Put" line="52">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone fs -put NOTICE.txt ${DEEP_URL}/PUTFILE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230906 00:06:36.247" level="INFO">Running command 'ozone fs -put NOTICE.txt o3fs://78809-link1-o3fs.fstest1.omservice//test/o3fs/dir/PUTFILE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230906 00:06:43.696" level="INFO">${rc} = 0</msg>
<msg timestamp="20230906 00:06:43.696" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230906 00:06:36.244" endtime="20230906 00:06:43.696"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230906 00:06:43.698" level="INFO"/>
<status status="PASS" starttime="20230906 00:06:43.697" endtime="20230906 00:06:43.698"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230906 00:06:43.698" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230906 00:06:43.698" endtime="20230906 00:06:43.698"/>
</kw>
<status status="PASS" starttime="20230906 00:06:36.243" endtime="20230906 00:06:43.698"/>
</kw>
<msg timestamp="20230906 00:06:43.699" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230906 00:06:36.243" endtime="20230906 00:06:43.699"/>
</kw>
<msg timestamp="20230906 00:06:43.699" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230906 00:06:36.242" endtime="20230906 00:06:43.699"/>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<arg>${result}</arg>
<doc>Verifies that the given item is empty.</doc>
<msg timestamp="20230906 00:06:43.699" level="INFO">Length is 0</msg>
<status status="PASS" starttime="20230906 00:06:43.699" endtime="20230906 00:06:43.699"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230906 00:06:43.703" level="INFO">Running command 'ozone sh key list fstest1/78809-link1-o3fs | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20230906 00:06:49.790" level="INFO">${rc} = 0</msg>
<msg timestamp="20230906 00:06:49.790" level="INFO">${output} = test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/NOTICE.txt
test/o3fs/dir/PUTFILE.txt</msg>
<status status="PASS" starttime="20230906 00:06:43.701" endtime="20230906 00:06:49.790"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230906 00:06:49.791" level="INFO">test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/NOTICE.txt
test/o3fs/dir/PUTFILE.txt</msg>
<status status="PASS" starttime="20230906 00:06:49.790" endtime="20230906 00:06:49.791"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230906 00:06:49.792" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230906 00:06:49.792" endtime="20230906 00:06:49.792"/>
</kw>
<status status="PASS" starttime="20230906 00:06:43.700" endtime="20230906 00:06:49.793"/>
</kw>
<msg timestamp="20230906 00:06:49.793" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230906 00:06:43.700" endtime="20230906 00:06:49.793"/>
</kw>
<msg timestamp="20230906 00:06:49.793" level="INFO">${result} = test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/NOTICE.txt
test/o3fs/dir/PUTFILE.txt</msg>
<status status="PASS" starttime="20230906 00:06:43.699" endtime="20230906 00:06:49.793"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PUTFILE.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230906 00:06:49.793" endtime="20230906 00:06:49.794"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230906 00:06:36.242" endtime="20230906 00:06:49.794"/>
</test>
<test id="s1-s3-t7" name="Check disk usage after create a file which uses RATIS replication type" line="59">
<kw name="Generate Random String" library="String">
<var>${vol}</var>
<arg>8</arg>
<arg>[LOWER]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230906 00:06:49.797" level="INFO">${vol} = tlmpzlmw</msg>
<status status="PASS" starttime="20230906 00:06:49.797" endtime="20230906 00:06:49.797"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${bucket}</var>
<arg>8</arg>
<arg>[LOWER]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230906 00:06:49.798" level="INFO">${bucket} = irfxlizw</msg>
<status status="PASS" starttime="20230906 00:06:49.797" endtime="20230906 00:06:49.798"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create /${vol}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230906 00:06:49.802" level="INFO">Running command 'ozone sh volume create /tlmpzlmw 2&gt;&amp;1'.</msg>
<msg timestamp="20230906 00:06:54.916" level="INFO">${rc} = 0</msg>
<msg timestamp="20230906 00:06:54.916" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230906 00:06:49.799" endtime="20230906 00:06:54.916"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230906 00:06:54.918" level="INFO"/>
<status status="PASS" starttime="20230906 00:06:54.917" endtime="20230906 00:06:54.918"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230906 00:06:54.918" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230906 00:06:54.918" endtime="20230906 00:06:54.919"/>
</kw>
<status status="PASS" starttime="20230906 00:06:49.799" endtime="20230906 00:06:54.919"/>
</kw>
<msg timestamp="20230906 00:06:54.919" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230906 00:06:49.798" endtime="20230906 00:06:54.919"/>
</kw>
<status status="PASS" starttime="20230906 00:06:49.798" endtime="20230906 00:06:54.919"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create /${vol}/${bucket} --type RATIS --replication 3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230906 00:06:54.925" level="INFO">Running command 'ozone sh bucket create /tlmpzlmw/irfxlizw --type RATIS --replication 3 2&gt;&amp;1'.</msg>
<msg timestamp="20230906 00:07:00.705" level="INFO">${rc} = 0</msg>
<msg timestamp="20230906 00:07:00.705" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230906 00:06:54.921" endtime="20230906 00:07:00.705"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230906 00:07:00.707" level="INFO"/>
<status status="PASS" starttime="20230906 00:07:00.706" endtime="20230906 00:07:00.707"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230906 00:07:00.707" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230906 00:07:00.707" endtime="20230906 00:07:00.708"/>
</kw>
<status status="PASS" starttime="20230906 00:06:54.920" endtime="20230906 00:07:00.708"/>
</kw>
<msg timestamp="20230906 00:07:00.708" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230906 00:06:54.920" endtime="20230906 00:07:00.708"/>
</kw>
<status status="PASS" starttime="20230906 00:06:54.919" endtime="20230906 00:07:00.708"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -put NOTICE.txt /${vol}/${bucket}/PUTFILE1.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230906 00:07:00.714" level="INFO">Running command 'ozone fs -put NOTICE.txt /tlmpzlmw/irfxlizw/PUTFILE1.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230906 00:07:07.861" level="INFO">${rc} = 0</msg>
<msg timestamp="20230906 00:07:07.861" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230906 00:07:00.710" endtime="20230906 00:07:07.861"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230906 00:07:07.862" level="INFO"/>
<status status="PASS" starttime="20230906 00:07:07.861" endtime="20230906 00:07:07.862"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230906 00:07:07.862" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230906 00:07:07.862" endtime="20230906 00:07:07.863"/>
</kw>
<status status="PASS" starttime="20230906 00:07:00.710" endtime="20230906 00:07:07.863"/>
</kw>
<msg timestamp="20230906 00:07:07.863" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230906 00:07:00.709" endtime="20230906 00:07:07.863"/>
</kw>
<status status="PASS" starttime="20230906 00:07:00.708" endtime="20230906 00:07:07.863"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedFileLength}</var>
<arg>stat -c %s NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230906 00:07:07.867" level="INFO">Running command 'stat -c %s NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230906 00:07:07.871" level="INFO">${rc} = 0</msg>
<msg timestamp="20230906 00:07:07.871" level="INFO">${output} = 17289</msg>
<status status="PASS" starttime="20230906 00:07:07.865" endtime="20230906 00:07:07.871"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230906 00:07:07.873" level="INFO">17289</msg>
<status status="PASS" starttime="20230906 00:07:07.872" endtime="20230906 00:07:07.873"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230906 00:07:07.873" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230906 00:07:07.873" endtime="20230906 00:07:07.873"/>
</kw>
<status status="PASS" starttime="20230906 00:07:07.864" endtime="20230906 00:07:07.874"/>
</kw>
<msg timestamp="20230906 00:07:07.874" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230906 00:07:07.864" endtime="20230906 00:07:07.874"/>
</kw>
<msg timestamp="20230906 00:07:07.874" level="INFO">${expectedFileLength} = 17289</msg>
<status status="PASS" starttime="20230906 00:07:07.863" endtime="20230906 00:07:07.874"/>
</kw>
<kw name="Get Disk Usage of File with RATIS Replication">
<var>${expectedDiskUsage}</var>
<arg>${expectedFileLength}</arg>
<arg>3</arg>
<kw name="Evaluate" library="BuiltIn">
<var>${expectedDiskUsage}</var>
<arg>${fileLength} * ${replicationFactor}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230906 00:07:07.876" level="INFO">${expectedDiskUsage} = 51867</msg>
<status status="PASS" starttime="20230906 00:07:07.875" endtime="20230906 00:07:07.876"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${expectedDiskUsage}</var>
<arg>${expectedDiskUsage}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20230906 00:07:07.876" level="INFO">${expectedDiskUsage} = 51867</msg>
<status status="PASS" starttime="20230906 00:07:07.876" endtime="20230906 00:07:07.876"/>
</kw>
<msg timestamp="20230906 00:07:07.876" level="INFO">${expectedDiskUsage} = 51867</msg>
<status status="PASS" starttime="20230906 00:07:07.874" endtime="20230906 00:07:07.876"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone fs -du /${vol}/${bucket}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230906 00:07:07.880" level="INFO">Running command 'ozone fs -du /tlmpzlmw/irfxlizw 2&gt;&amp;1'.</msg>
<msg timestamp="20230906 00:07:12.327" level="INFO">${rc} = 0</msg>
<msg timestamp="20230906 00:07:12.327" level="INFO">${output} = 17289  51867  /tlmpzlmw/irfxlizw/PUTFILE1.txt</msg>
<status status="PASS" starttime="20230906 00:07:07.878" endtime="20230906 00:07:12.327"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230906 00:07:12.328" level="INFO">17289  51867  /tlmpzlmw/irfxlizw/PUTFILE1.txt</msg>
<status status="PASS" starttime="20230906 00:07:12.327" endtime="20230906 00:07:12.328"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230906 00:07:12.329" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230906 00:07:12.328" endtime="20230906 00:07:12.329"/>
</kw>
<status status="PASS" starttime="20230906 00:07:07.877" endtime="20230906 00:07:12.329"/>
</kw>
<msg timestamp="20230906 00:07:12.329" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230906 00:07:07.877" endtime="20230906 00:07:12.330"/>
</kw>
<msg timestamp="20230906 00:07:12.330" level="INFO">${result} = 17289  51867  /tlmpzlmw/irfxlizw/PUTFILE1.txt</msg>
<status status="PASS" starttime="20230906 00:07:07.877" endtime="20230906 00:07:12.330"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PUTFILE1.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230906 00:07:12.330" endtime="20230906 00:07:12.330"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expectedFileLength}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230906 00:07:12.330" endtime="20230906 00:07:12.331"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expectedDiskUsage}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230906 00:07:12.331" endtime="20230906 00:07:12.332"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230906 00:06:49.795" endtime="20230906 00:07:12.332"/>
</test>
<test id="s1-s3-t8" name="Put with Streaming" line="73">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone fs -D ozone.fs.datastream.enabled=true -put NOTICE.txt ${DEEP_URL}/STREAMING.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230906 00:07:12.337" level="INFO">Running command 'ozone fs -D ozone.fs.datastream.enabled=true -put NOTICE.txt o3fs://78809-link1-o3fs.fstest1.omservice//test/o3fs/dir/STREAMING.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230906 00:07:19.500" level="INFO">${rc} = 0</msg>
<msg timestamp="20230906 00:07:19.500" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230906 00:07:12.335" endtime="20230906 00:07:19.500"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230906 00:07:19.502" level="INFO"/>
<status status="PASS" starttime="20230906 00:07:19.501" endtime="20230906 00:07:19.502"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230906 00:07:19.502" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230906 00:07:19.502" endtime="20230906 00:07:19.502"/>
</kw>
<status status="PASS" starttime="20230906 00:07:12.334" endtime="20230906 00:07:19.503"/>
</kw>
<msg timestamp="20230906 00:07:19.503" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230906 00:07:12.334" endtime="20230906 00:07:19.503"/>
</kw>
<msg timestamp="20230906 00:07:19.503" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230906 00:07:12.333" endtime="20230906 00:07:19.503"/>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<arg>${result}</arg>
<doc>Verifies that the given item is empty.</doc>
<msg timestamp="20230906 00:07:19.503" level="INFO">Length is 0</msg>
<status status="PASS" starttime="20230906 00:07:19.503" endtime="20230906 00:07:19.504"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230906 00:07:19.508" level="INFO">Running command 'ozone sh key list fstest1/78809-link1-o3fs | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20230906 00:07:25.732" level="INFO">${rc} = 0</msg>
<msg timestamp="20230906 00:07:25.733" level="INFO">${output} = test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/NOTICE.txt
test/o3fs/dir/PUTFILE.txt
test/o3fs/dir/STREAMING.txt</msg>
<status status="PASS" starttime="20230906 00:07:19.505" endtime="20230906 00:07:25.733"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230906 00:07:25.734" level="INFO">test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/NOTICE.txt
test/o3fs/dir/PUTFILE.txt
test/o3fs/dir/STREAMING.txt</msg>
<status status="PASS" starttime="20230906 00:07:25.733" endtime="20230906 00:07:25.734"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230906 00:07:25.735" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230906 00:07:25.734" endtime="20230906 00:07:25.735"/>
</kw>
<status status="PASS" starttime="20230906 00:07:19.504" endtime="20230906 00:07:25.735"/>
</kw>
<msg timestamp="20230906 00:07:25.735" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230906 00:07:19.504" endtime="20230906 00:07:25.736"/>
</kw>
<msg timestamp="20230906 00:07:25.736" level="INFO">${result} = test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/NOTICE.txt
test/o3fs/dir/PUTFILE.txt
test/o3fs/dir/STREAMING.txt</msg>
<status status="PASS" starttime="20230906 00:07:19.504" endtime="20230906 00:07:25.736"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>STREAMING.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230906 00:07:25.736" endtime="20230906 00:07:25.736"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230906 00:07:12.333" endtime="20230906 00:07:25.737"/>
</test>
<test id="s1-s3-t9" name="List" line="80">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone fs -ls ${DEEP_URL}/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230906 00:07:25.742" level="INFO">Running command 'ozone fs -ls o3fs://78809-link1-o3fs.fstest1.omservice//test/o3fs/dir/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230906 00:07:30.289" level="INFO">${rc} = 0</msg>
<msg timestamp="20230906 00:07:30.289" level="INFO">${output} = Found 3 items
-rw-rw-rw-   3 testuser testuser      17289 2023-09-06 00:06 o3fs://78809-link1-o3fs.fstest1.omservice/test/o3fs/dir/NOTICE.txt
-rw-rw-rw-   3 testuser testuser      17289 2023-09-06 00:...</msg>
<status status="PASS" starttime="20230906 00:07:25.740" endtime="20230906 00:07:30.289"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230906 00:07:30.291" level="INFO">Found 3 items
-rw-rw-rw-   3 testuser testuser      17289 2023-09-06 00:06 o3fs://78809-link1-o3fs.fstest1.omservice/test/o3fs/dir/NOTICE.txt
-rw-rw-rw-   3 testuser testuser      17289 2023-09-06 00:06 o3fs://78809-link1-o3fs.fstest1.omservice/test/o3fs/dir/PUTFILE.txt
-rw-rw-rw-   3 testuser testuser      17289 2023-09-06 00:07 o3fs://78809-link1-o3fs.fstest1.omservice/test/o3fs/dir/STREAMING.txt</msg>
<status status="PASS" starttime="20230906 00:07:30.290" endtime="20230906 00:07:30.291"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230906 00:07:30.292" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230906 00:07:30.291" endtime="20230906 00:07:30.292"/>
</kw>
<status status="PASS" starttime="20230906 00:07:25.739" endtime="20230906 00:07:30.292"/>
</kw>
<msg timestamp="20230906 00:07:30.292" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230906 00:07:25.739" endtime="20230906 00:07:30.292"/>
</kw>
<msg timestamp="20230906 00:07:30.293" level="INFO">${result} = Found 3 items
-rw-rw-rw-   3 testuser testuser      17289 2023-09-06 00:06 o3fs://78809-link1-o3fs.fstest1.omservice/test/o3fs/dir/NOTICE.txt
-rw-rw-rw-   3 testuser testuser      17289 2023-09-06 00:...</msg>
<status status="PASS" starttime="20230906 00:07:25.738" endtime="20230906 00:07:30.293"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230906 00:07:30.293" endtime="20230906 00:07:30.293"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PUTFILE.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230906 00:07:30.293" endtime="20230906 00:07:30.294"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>STREAMING.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230906 00:07:30.294" endtime="20230906 00:07:30.294"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230906 00:07:25.737" endtime="20230906 00:07:30.294"/>
</test>
<test id="s1-s3-t10" name="Move" line="86">
<kw name="Execute" library="os">
<arg>ozone fs -mv ${DEEP_URL}/NOTICE.txt ${DEEP_URL}/MOVED.TXT</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230906 00:07:30.301" level="INFO">Running command 'ozone fs -mv o3fs://78809-link1-o3fs.fstest1.omservice//test/o3fs/dir/NOTICE.txt o3fs://78809-link1-o3fs.fstest1.omservice//test/o3fs/dir/MOVED.TXT 2&gt;&amp;1'.</msg>
<msg timestamp="20230906 00:07:35.443" level="INFO">${rc} = 0</msg>
<msg timestamp="20230906 00:07:35.443" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230906 00:07:30.298" endtime="20230906 00:07:35.443"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230906 00:07:35.445" level="INFO"/>
<status status="PASS" starttime="20230906 00:07:35.444" endtime="20230906 00:07:35.445"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230906 00:07:35.446" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230906 00:07:35.445" endtime="20230906 00:07:35.446"/>
</kw>
<status status="PASS" starttime="20230906 00:07:30.297" endtime="20230906 00:07:35.446"/>
</kw>
<msg timestamp="20230906 00:07:35.446" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230906 00:07:30.297" endtime="20230906 00:07:35.446"/>
</kw>
<status status="PASS" starttime="20230906 00:07:30.296" endtime="20230906 00:07:35.446"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230906 00:07:35.451" level="INFO">Running command 'ozone sh key list fstest1/78809-link1-o3fs | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20230906 00:07:41.732" level="INFO">${rc} = 0</msg>
<msg timestamp="20230906 00:07:41.733" level="INFO">${output} = test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/MOVED.TXT
test/o3fs/dir/PUTFILE.txt
test/o3fs/dir/STREAMING.txt</msg>
<status status="PASS" starttime="20230906 00:07:35.448" endtime="20230906 00:07:41.733"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230906 00:07:41.734" level="INFO">test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/MOVED.TXT
test/o3fs/dir/PUTFILE.txt
test/o3fs/dir/STREAMING.txt</msg>
<status status="PASS" starttime="20230906 00:07:41.733" endtime="20230906 00:07:41.734"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230906 00:07:41.735" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230906 00:07:41.734" endtime="20230906 00:07:41.735"/>
</kw>
<status status="PASS" starttime="20230906 00:07:35.448" endtime="20230906 00:07:41.735"/>
</kw>
<msg timestamp="20230906 00:07:41.735" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230906 00:07:35.447" endtime="20230906 00:07:41.735"/>
</kw>
<msg timestamp="20230906 00:07:41.735" level="INFO">${result} = test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/MOVED.TXT
test/o3fs/dir/PUTFILE.txt
test/o3fs/dir/STREAMING.txt</msg>
<status status="PASS" starttime="20230906 00:07:35.446" endtime="20230906 00:07:41.735"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>MOVED.TXT</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230906 00:07:41.736" endtime="20230906 00:07:41.736"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230906 00:07:41.736" endtime="20230906 00:07:41.736"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230906 00:07:30.295" endtime="20230906 00:07:41.737"/>
</test>
<test id="s1-s3-t11" name="Copy within FS" line="92">
<kw name="Execute" library="os" type="SETUP">
<arg>ozone fs -mkdir -p ${DEEP_URL}/subdir1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230906 00:07:41.742" level="INFO">Running command 'ozone fs -mkdir -p o3fs://78809-link1-o3fs.fstest1.omservice//test/o3fs/dir/subdir1 2&gt;&amp;1'.</msg>
<msg timestamp="20230906 00:07:46.509" level="INFO">${rc} = 0</msg>
<msg timestamp="20230906 00:07:46.509" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230906 00:07:41.740" endtime="20230906 00:07:46.509"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230906 00:07:46.510" level="INFO"/>
<status status="PASS" starttime="20230906 00:07:46.510" endtime="20230906 00:07:46.511"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230906 00:07:46.511" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230906 00:07:46.511" endtime="20230906 00:07:46.511"/>
</kw>
<status status="PASS" starttime="20230906 00:07:41.739" endtime="20230906 00:07:46.512"/>
</kw>
<msg timestamp="20230906 00:07:46.512" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230906 00:07:41.739" endtime="20230906 00:07:46.512"/>
</kw>
<status status="PASS" starttime="20230906 00:07:41.738" endtime="20230906 00:07:46.512"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -cp ${DEEP_URL}/MOVED.TXT ${DEEP_URL}/subdir1/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230906 00:07:46.516" level="INFO">Running command 'ozone fs -cp o3fs://78809-link1-o3fs.fstest1.omservice//test/o3fs/dir/MOVED.TXT o3fs://78809-link1-o3fs.fstest1.omservice//test/o3fs/dir/subdir1/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230906 00:07:54.418" level="INFO">${rc} = 0</msg>
<msg timestamp="20230906 00:07:54.418" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230906 00:07:46.514" endtime="20230906 00:07:54.418"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230906 00:07:54.419" level="INFO"/>
<status status="PASS" starttime="20230906 00:07:54.418" endtime="20230906 00:07:54.419"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230906 00:07:54.420" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230906 00:07:54.419" endtime="20230906 00:07:54.420"/>
</kw>
<status status="PASS" starttime="20230906 00:07:46.513" endtime="20230906 00:07:54.420"/>
</kw>
<msg timestamp="20230906 00:07:54.420" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230906 00:07:46.513" endtime="20230906 00:07:54.420"/>
</kw>
<status status="PASS" starttime="20230906 00:07:46.512" endtime="20230906 00:07:54.420"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230906 00:07:54.424" level="INFO">Running command 'ozone sh key list fstest1/78809-link1-o3fs | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20230906 00:08:00.325" level="INFO">${rc} = 0</msg>
<msg timestamp="20230906 00:08:00.325" level="INFO">${output} = test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/MOVED.TXT
test/o3fs/dir/PUTFILE.txt
test/o3fs/dir/STREAMING.txt
test/o3fs/dir/subdir1/
test/o3fs/dir/subdir1/NOTICE.txt</msg>
<status status="PASS" starttime="20230906 00:07:54.422" endtime="20230906 00:08:00.325"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230906 00:08:00.327" level="INFO">test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/MOVED.TXT
test/o3fs/dir/PUTFILE.txt
test/o3fs/dir/STREAMING.txt
test/o3fs/dir/subdir1/
test/o3fs/dir/subdir1/NOTICE.txt</msg>
<status status="PASS" starttime="20230906 00:08:00.326" endtime="20230906 00:08:00.327"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230906 00:08:00.328" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230906 00:08:00.327" endtime="20230906 00:08:00.328"/>
</kw>
<status status="PASS" starttime="20230906 00:07:54.421" endtime="20230906 00:08:00.328"/>
</kw>
<msg timestamp="20230906 00:08:00.328" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230906 00:07:54.421" endtime="20230906 00:08:00.328"/>
</kw>
<msg timestamp="20230906 00:08:00.328" level="INFO">${result} = test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/MOVED.TXT
test/o3fs/dir/PUTFILE.txt
test/o3fs/dir/STREAMING.txt
test/o3fs/dir/subdir1/
test/o3fs/dir/subdir1/NOTICE.txt</msg>
<status status="PASS" starttime="20230906 00:07:54.420" endtime="20230906 00:08:00.328"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>subdir1/NOTICE.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230906 00:08:00.329" endtime="20230906 00:08:00.329"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone fs -ls ${DEEP_URL}/subdir1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230906 00:08:00.333" level="INFO">Running command 'ozone fs -ls o3fs://78809-link1-o3fs.fstest1.omservice//test/o3fs/dir/subdir1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230906 00:08:05.233" level="INFO">${rc} = 0</msg>
<msg timestamp="20230906 00:08:05.233" level="INFO">${output} = Found 1 items
-rw-rw-rw-   3 testuser testuser      17289 2023-09-06 00:07 o3fs://78809-link1-o3fs.fstest1.omservice/test/o3fs/dir/subdir1/NOTICE.txt</msg>
<status status="PASS" starttime="20230906 00:08:00.331" endtime="20230906 00:08:05.233"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230906 00:08:05.234" level="INFO">Found 1 items
-rw-rw-rw-   3 testuser testuser      17289 2023-09-06 00:07 o3fs://78809-link1-o3fs.fstest1.omservice/test/o3fs/dir/subdir1/NOTICE.txt</msg>
<status status="PASS" starttime="20230906 00:08:05.233" endtime="20230906 00:08:05.234"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230906 00:08:05.235" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230906 00:08:05.235" endtime="20230906 00:08:05.235"/>
</kw>
<status status="PASS" starttime="20230906 00:08:00.330" endtime="20230906 00:08:05.236"/>
</kw>
<msg timestamp="20230906 00:08:05.236" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230906 00:08:00.330" endtime="20230906 00:08:05.236"/>
</kw>
<msg timestamp="20230906 00:08:05.236" level="INFO">${result} = Found 1 items
-rw-rw-rw-   3 testuser testuser      17289 2023-09-06 00:07 o3fs://78809-link1-o3fs.fstest1.omservice/test/o3fs/dir/subdir1/NOTICE.txt</msg>
<status status="PASS" starttime="20230906 00:08:00.329" endtime="20230906 00:08:05.236"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230906 00:08:05.236" endtime="20230906 00:08:05.237"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230906 00:08:05.237" endtime="20230906 00:08:05.237"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230906 00:07:41.737" endtime="20230906 00:08:05.237"/>
</test>
<test id="s1-s3-t12" name="Cat file" line="102">
<kw name="Execute" library="os">
<arg>ozone fs -cat ${DEEP_URL}/subdir1/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230906 00:08:05.244" level="INFO">Running command 'ozone fs -cat o3fs://78809-link1-o3fs.fstest1.omservice//test/o3fs/dir/subdir1/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230906 00:08:12.132" level="INFO">${rc} = 0</msg>
<msg timestamp="20230906 00:08:12.132" level="INFO">${output} = Apache Ozone
Copyright 2022 The Apache Software Foundation

This product includes software developed at
The Apache Software Foundation (http://www.apache.org/).

Export Control Notice
----------------...</msg>
<status status="PASS" starttime="20230906 00:08:05.241" endtime="20230906 00:08:12.132"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230906 00:08:12.134" level="INFO">Apache Ozone
Copyright 2022 The Apache Software Foundation

This product includes software developed at
The Apache Software Foundation (http://www.apache.org/).

Export Control Notice
---------------------

This distribution includes cryptographic software.  The country in
which you currently reside may have restrictions on the import,
possession, use, and/or re-export to another country, of
encryption software.  BEFORE using any encryption software, please
check your country's laws, regulations and policies concerning the
import, possession, or use, and re-export of encryption software, to
see if this is permitted.  See &lt;http://www.wassenaar.org/&gt; for more
information.

The U.S. Government Department of Commerce, Bureau of Industry and
Security (BIS), has classified this software as Export Commodity
Control Number (ECCN) 5D002.C.1, which includes information security
software using or performing cryptographic functions with asymmetric
algorithms.  The form and manner of this Apache Software Foundation
distribution makes it eligible for export under the License Exception
ENC Technology Software Unrestricted (TSU) exception (see the BIS
Export Administration Regulations, Section 740.13) for both object
code and source code.

This software uses the SSL libraries from the Jetty project written
by mortbay.org abd BouncyCastle Java cryptography APIs written by the
 Legion of the Bouncy Castle Inc.

**********************
THIRD PARTY COMPONENTS
**********************
This software includes third party software subject to the following copyrights:

io.netty:netty-all
====================


                            The Netty Project
                            =================

Please visit the Netty web site for more information:

  * https://netty.io/

Copyright 2014 The Netty Project

The Netty Project licenses this file to you under the Apache License,
version 2.0 (the "License"); you may not use this file except in compliance
with the License. You may obtain a copy of the License at:

  http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
License for the specific language governing permissions and limitations
under the License.

Also, please refer to each LICENSE.&lt;component&gt;.txt file, which is located in
the 'license' directory of the distribution file, for the license terms of the
components that this product depends on.

-------------------------------------------------------------------------------
This product contains the extensions to Java Collections Framework which has
been derived from the works by JSR-166 EG, Doug Lea, and Jason T. Greene:

  * LICENSE:
    * license/LICENSE.jsr166y.txt (Public Domain)
  * HOMEPAGE:
    * http://gee.cs.oswego.edu/cgi-bin/viewcvs.cgi/jsr166/
    * http://viewvc.jboss.org/cgi-bin/viewvc.cgi/jbosscache/experimental/jsr166/

This product contains a modified version of Robert Harder's Public Domain
Base64 Encoder and Decoder, which can be obtained at:

  * LICENSE:
    * license/LICENSE.base64.txt (Public Domain)
  * HOMEPAGE:
    * http://iharder.sourceforge.net/current/java/base64/

This product contains a modified portion of 'Webbit', an event based
WebSocket and HTTP server, which can be obtained at:

  * LICENSE:
    * license/LICENSE.webbit.txt (BSD License)
  * HOMEPAGE:
    * https://github.com/joewalnes/webbit

This product contains a modified portion of 'SLF4J', a simple logging
facade for Java, which can be obtained at:

  * LICENSE:
    * license/LICENSE.slf4j.txt (MIT License)
  * HOMEPAGE:
    * http://www.slf4j.org/

This product contains a modified portion of 'Apache Harmony', an open source
Java SE, which can be obtained at:

  * NOTICE:
    * license/NOTICE.harmony.txt
  * LICENSE:
    * license/LICENSE.harmony.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://archive.apache.org/dist/harmony/

This product contains a modified portion of 'jbzip2', a Java bzip2 compression
and decompression library written by Matthew J. Francis. It can be obtained at:

  * LICENSE:
    * license/LICENSE.jbzip2.txt (MIT License)
  * HOMEPAGE:
    * https://code.google.com/p/jbzip2/

This product contains a modified portion of 'libdivsufsort', a C API library to construct
the suffix array and the Burrows-Wheeler transformed string for any input string of
a constant-size alphabet written by Yuta Mori. It can be obtained at:

  * LICENSE:
    * license/LICENSE.libdivsufsort.txt (MIT License)
  * HOMEPAGE:
    * https://github.com/y-256/libdivsufsort

This product contains a modified portion of Nitsan Wakart's 'JCTools', Java Concurrency Tools for the JVM,
 which can be obtained at:

  * LICENSE:
    * license/LICENSE.jctools.txt (ASL2 License)
  * HOMEPAGE:
    * https://github.com/JCTools/JCTools

This product optionally depends on 'JZlib', a re-implementation of zlib in
pure Java, which can be obtained at:

  * LICENSE:
    * license/LICENSE.jzlib.txt (BSD style License)
  * HOMEPAGE:
    * http://www.jcraft.com/jzlib/

This product optionally depends on 'Compress-LZF', a Java library for encoding and
decoding data in LZF format, written by Tatu Saloranta. It can be obtained at:

  * LICENSE:
    * license/LICENSE.compress-lzf.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/ning/compress

This product optionally depends on 'lz4', a LZ4 Java compression
and decompression library written by Adrien Grand. It can be obtained at:

  * LICENSE:
    * license/LICENSE.lz4.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/jpountz/lz4-java

This product optionally depends on 'lzma-java', a LZMA Java compression
and decompression library, which can be obtained at:

  * LICENSE:
    * license/LICENSE.lzma-java.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/jponge/lzma-java

This product contains a modified portion of 'jfastlz', a Java port of FastLZ compression
and decompression library written by William Kinney. It can be obtained at:

  * LICENSE:
    * license/LICENSE.jfastlz.txt (MIT License)
  * HOMEPAGE:
    * https://code.google.com/p/jfastlz/

This product contains a modified portion of and optionally depends on 'Protocol Buffers', Google's data
interchange format, which can be obtained at:

  * LICENSE:
    * license/LICENSE.protobuf.txt (New BSD License)
  * HOMEPAGE:
    * https://github.com/google/protobuf

This product optionally depends on 'Bouncy Castle Crypto APIs' to generate
a temporary self-signed X.509 certificate when the JVM does not provide the
equivalent functionality.  It can be obtained at:

  * LICENSE:
    * license/LICENSE.bouncycastle.txt (MIT License)
  * HOMEPAGE:
    * http://www.bouncycastle.org/

This product optionally depends on 'Snappy', a compression library produced
by Google Inc, which can be obtained at:

  * LICENSE:
    * license/LICENSE.snappy.txt (New BSD License)
  * HOMEPAGE:
    * https://github.com/google/snappy

This product optionally depends on 'JBoss Marshalling', an alternative Java
serialization API, which can be obtained at:

  * LICENSE:
    * license/LICENSE.jboss-marshalling.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/jboss-remoting/jboss-marshalling

This product optionally depends on 'Caliper', Google's micro-
benchmarking framework, which can be obtained at:

  * LICENSE:
    * license/LICENSE.caliper.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/google/caliper

This product optionally depends on 'Apache Commons Logging', a logging
framework, which can be obtained at:

  * LICENSE:
    * license/LICENSE.commons-logging.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://commons.apache.org/logging/

This product optionally depends on 'Apache Log4J', a logging framework, which
can be obtained at:

  * LICENSE:
    * license/LICENSE.log4j.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://logging.apache.org/log4j/

This product optionally depends on 'Aalto XML', an ultra-high performance
non-blocking XML processor, which can be obtained at:

  * LICENSE:
    * license/LICENSE.aalto-xml.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://wiki.fasterxml.com/AaltoHome

This product contains a modified version of 'HPACK', a Java implementation of
the HTTP/2 HPACK algorithm written by Twitter. It can be obtained at:

  * LICENSE:
    * license/LICENSE.hpack.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/twitter/hpack

This product contains a modified version of 'HPACK', a Java implementation of
the HTTP/2 HPACK algorithm written by Cory Benfield. It can be obtained at:

  * LICENSE:
    * license/LICENSE.hyper-hpack.txt (MIT License)
  * HOMEPAGE:
    * https://github.com/python-hyper/hpack/

This product contains a modified version of 'HPACK', a Java implementation of
the HTTP/2 HPACK algorithm written by Tatsuhiro Tsujikawa. It can be obtained at:

  * LICENSE:
    * license/LICENSE.nghttp2-hpack.txt (MIT License)
  * HOMEPAGE:
    * https://github.com/nghttp2/nghttp2/

This product contains a modified portion of 'Apache Commons Lang', a Java library
provides utilities for the java.lang API, which can be obtained at:

  * LICENSE:
    * license/LICENSE.commons-lang.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://commons.apache.org/proper/commons-lang/


This product contains the Maven wrapper scripts from 'Maven Wrapper', that provides an easy way to ensure a user has everything necessary to run the Maven build.

  * LICENSE:
    * license/LICENSE.mvn-wrapper.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/takari/maven-wrapper


io.grpc:grpc-core
====================

Copyright 2014 The gRPC Authors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

-----------------------------------------------------------------------

This product contains a modified portion of 'OkHttp', an open source
HTTP &amp; SPDY client for Android and Java applications, which can be obtained
at:

  * LICENSE:
    * okhttp/third_party/okhttp/LICENSE (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/square/okhttp
  * LOCATION_IN_GRPC:
    * okhttp/third_party/okhttp

This product contains a modified portion of 'Envoy', an open source
cloud-native high-performance edge/middle/service proxy, which can be
obtained at:

  * LICENSE:
    * xds/third_party/envoy/LICENSE (Apache License 2.0)
  * NOTICE:
    * xds/third_party/envoy/NOTICE
  * HOMEPAGE:
    * https://www.envoyproxy.io
  * LOCATION_IN_GRPC:
    * xds/third_party/envoy

This product contains a modified portion of 'gogoprotobuf',
an open source Protocol Buffers support for Go with Gadgets,
which can be obtained at:

  * LICENSE:
    * xds/third_party/gogoproto/LICENSE
  * HOMEPAGE:
    * https://github.com/gogo/protobuf
  * LOCATION_IN_GRPC:
    * xds/third_party/gogoproto

This product contains a modified portion of 'protoc-gen-validate (PGV)',
an open source protoc plugin to generate polyglot message validators,
which can be obtained at:

  * LICENSE:
    * xds/third_party/protoc-gen-validate/LICENSE (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/lyft/protoc-gen-validate
  * LOCATION_IN_GRPC:
    * xds/third_party/protoc-gen-validate

This product contains a modified portion of 'udpa',
an open source universal data plane API, which can be obtained at:

  * LICENSE:
    * xds/third_party/udpa/LICENSE (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/cncf/udpa
  * LOCATION_IN_GRPC:
    * xds/third_party/udpa


com.fasterxml.jackson.dataformat:jackson-dataformat-xml
====================

# Jackson JSON processor

Jackson is a high-performance, Free/Open Source JSON processing library.
It was originally written by Tatu Saloranta (tatu.saloranta@iki.fi), and has
been in development since 2007.
It is currently developed by a community of developers, as well as supported
commercially by FasterXML.com.

## Licensing

Jackson core and extension components may licensed under different licenses.
To find the details that apply to this artifact see the accompanying LICENSE file.
For more information, including possible other licensing options, contact
FasterXML.com (http://fasterxml.com).

## Credits

A list of contributors may be found from CREDITS file, which is included
in some artifacts (usually source distributions); but is always available
from the source code management (SCM) system project uses.


com.jolbox:bonecp
====================

   =========================================================================
   ==  NOTICE file corresponding to the section 4 d of                    ==
   ==  the Apache License, Version 2.0,                                   ==
   ==  in this case for the BoneCP (Java connection pool).                ==
   =========================================================================

   BoneCP
   Copyright 2010 Wallace Wadge

   This product includes software developed by
   Wallace Wadge (http://jolbox.com/).

org.codehaus.jackson:jackson-mapper-asl
====================

This product currently only contains code developed by authors
of specific components, as identified by the source code files;
if such notes are missing files have been created by
Tatu Saloranta.

For additional credits (generally to people who reported problems)
see CREDITS file.


com.google.inject:guice
====================


Google Guice - Core Library
Copyright 2006-2015 Google, Inc.

This product includes software developed at
The Apache Software Foundation (http://www.apache.org/).




com.google.inject.extensions:guice-assistedinject
====================


Google Guice - Extensions - AssistedInject
Copyright 2006-2015 Google, Inc.

This product includes software developed at
The Apache Software Foundation (http://www.apache.org/).




org.codehaus.jackson:jackson-xc
====================

This product currently only contains code developed by authors
of specific components, as identified by the source code files;
if such notes are missing files have been created by
Tatu Saloranta.

For additional credits (generally to people who reported problems)
see CREDITS file.


org.codehaus.jackson:jackson-jaxrs
====================

This product currently only contains code developed by authors
of specific components, as identified by the source code files;
if such notes are missing files have been created by
Tatu Saloranta.

For additional credits (generally to people who reported problems)
see CREDITS file.


com.google.inject.extensions:guice-servlet
====================


Google Guice - Extensions - Servlet
Copyright 2006-2015 Google, Inc.

This product includes software developed at
The Apache Software Foundation (http://www.apache.org/).




org.codehaus.jackson:jackson-core-asl
====================

This product currently only contains code developed by authors
of specific components, as identified by the source code files;
if such notes are missing files have been created by
Tatu Saloranta.

For additional credits (generally to people who reported problems)
see CREDITS file.


org.bouncycastle:bcprov-jdk15on
====================

Copyright (c) 2000 - 2019 The Legion of the Bouncy Castle Inc. (https://www.bouncycastle.org)

Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

Source: https://bouncycastle.org/license.html

ch.qos.reload4j:reload4j
====================

Apache log4j
Copyright 2007 The Apache Software Foundation

This product includes software developed at
The Apache Software Foundation (http://www.apache.org/).


====================
ratis-thirdparty-misc is a shaded dependency which includes additional 3rd party dependencies in shaded form.
For the detailed list of the dependencies and the associated NOTICE file see licenses/NOTICE-ratis-thirdparty-misc.txt.</msg>
<status status="PASS" starttime="20230906 00:08:12.133" endtime="20230906 00:08:12.134"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230906 00:08:12.135" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230906 00:08:12.134" endtime="20230906 00:08:12.135"/>
</kw>
<status status="PASS" starttime="20230906 00:08:05.240" endtime="20230906 00:08:12.135"/>
</kw>
<msg timestamp="20230906 00:08:12.135" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230906 00:08:05.240" endtime="20230906 00:08:12.135"/>
</kw>
<status status="PASS" starttime="20230906 00:08:05.239" endtime="20230906 00:08:12.136"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230906 00:08:05.239" endtime="20230906 00:08:12.136"/>
</test>
<test id="s1-s3-t13" name="Delete file" line="105">
<kw name="Execute" library="os">
<arg>ozone fs -rm -skipTrash ${DEEP_URL}/subdir1/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230906 00:08:12.142" level="INFO">Running command 'ozone fs -rm -skipTrash o3fs://78809-link1-o3fs.fstest1.omservice//test/o3fs/dir/subdir1/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230906 00:08:16.830" level="INFO">${rc} = 0</msg>
<msg timestamp="20230906 00:08:16.830" level="INFO">${output} = Deleted o3fs://78809-link1-o3fs.fstest1.omservice/test/o3fs/dir/subdir1/NOTICE.txt</msg>
<status status="PASS" starttime="20230906 00:08:12.139" endtime="20230906 00:08:16.830"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230906 00:08:16.831" level="INFO">Deleted o3fs://78809-link1-o3fs.fstest1.omservice/test/o3fs/dir/subdir1/NOTICE.txt</msg>
<status status="PASS" starttime="20230906 00:08:16.831" endtime="20230906 00:08:16.832"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230906 00:08:16.832" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230906 00:08:16.832" endtime="20230906 00:08:16.832"/>
</kw>
<status status="PASS" starttime="20230906 00:08:12.139" endtime="20230906 00:08:16.832"/>
</kw>
<msg timestamp="20230906 00:08:16.832" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230906 00:08:12.139" endtime="20230906 00:08:16.833"/>
</kw>
<status status="PASS" starttime="20230906 00:08:12.138" endtime="20230906 00:08:16.833"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230906 00:08:16.837" level="INFO">Running command 'ozone sh key list fstest1/78809-link1-o3fs | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20230906 00:08:23.190" level="INFO">${rc} = 0</msg>
<msg timestamp="20230906 00:08:23.190" level="INFO">${output} = test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/MOVED.TXT
test/o3fs/dir/PUTFILE.txt
test/o3fs/dir/STREAMING.txt
test/o3fs/dir/subdir1/</msg>
<status status="PASS" starttime="20230906 00:08:16.834" endtime="20230906 00:08:23.190"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230906 00:08:23.191" level="INFO">test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/MOVED.TXT
test/o3fs/dir/PUTFILE.txt
test/o3fs/dir/STREAMING.txt
test/o3fs/dir/subdir1/</msg>
<status status="PASS" starttime="20230906 00:08:23.190" endtime="20230906 00:08:23.191"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230906 00:08:23.192" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230906 00:08:23.191" endtime="20230906 00:08:23.192"/>
</kw>
<status status="PASS" starttime="20230906 00:08:16.834" endtime="20230906 00:08:23.192"/>
</kw>
<msg timestamp="20230906 00:08:23.192" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230906 00:08:16.834" endtime="20230906 00:08:23.192"/>
</kw>
<msg timestamp="20230906 00:08:23.193" level="INFO">${result} = test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/MOVED.TXT
test/o3fs/dir/PUTFILE.txt
test/o3fs/dir/STREAMING.txt
test/o3fs/dir/subdir1/</msg>
<status status="PASS" starttime="20230906 00:08:16.833" endtime="20230906 00:08:23.193"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230906 00:08:23.193" endtime="20230906 00:08:23.193"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230906 00:08:12.137" endtime="20230906 00:08:23.193"/>
</test>
<test id="s1-s3-t14" name="Delete dir" line="110">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone fs -rmdir ${DEEP_URL}/subdir1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230906 00:08:23.199" level="INFO">Running command 'ozone fs -rmdir o3fs://78809-link1-o3fs.fstest1.omservice//test/o3fs/dir/subdir1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230906 00:08:28.287" level="INFO">${rc} = 0</msg>
<msg timestamp="20230906 00:08:28.287" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230906 00:08:23.197" endtime="20230906 00:08:28.287"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230906 00:08:28.289" level="INFO"/>
<status status="PASS" starttime="20230906 00:08:28.288" endtime="20230906 00:08:28.289"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230906 00:08:28.290" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230906 00:08:28.289" endtime="20230906 00:08:28.290"/>
</kw>
<status status="PASS" starttime="20230906 00:08:23.196" endtime="20230906 00:08:28.290"/>
</kw>
<msg timestamp="20230906 00:08:28.290" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230906 00:08:23.196" endtime="20230906 00:08:28.290"/>
</kw>
<msg timestamp="20230906 00:08:28.290" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230906 00:08:23.195" endtime="20230906 00:08:28.291"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230906 00:08:28.296" level="INFO">Running command 'ozone sh key list fstest1/78809-link1-o3fs | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20230906 00:08:34.060" level="INFO">${rc} = 0</msg>
<msg timestamp="20230906 00:08:34.060" level="INFO">${output} = test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/MOVED.TXT
test/o3fs/dir/PUTFILE.txt
test/o3fs/dir/STREAMING.txt</msg>
<status status="PASS" starttime="20230906 00:08:28.293" endtime="20230906 00:08:34.060"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230906 00:08:34.061" level="INFO">test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/MOVED.TXT
test/o3fs/dir/PUTFILE.txt
test/o3fs/dir/STREAMING.txt</msg>
<status status="PASS" starttime="20230906 00:08:34.060" endtime="20230906 00:08:34.061"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230906 00:08:34.062" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230906 00:08:34.061" endtime="20230906 00:08:34.062"/>
</kw>
<status status="PASS" starttime="20230906 00:08:28.292" endtime="20230906 00:08:34.062"/>
</kw>
<msg timestamp="20230906 00:08:34.062" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230906 00:08:28.291" endtime="20230906 00:08:34.062"/>
</kw>
<msg timestamp="20230906 00:08:34.062" level="INFO">${result} = test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/MOVED.TXT
test/o3fs/dir/PUTFILE.txt
test/o3fs/dir/STREAMING.txt</msg>
<status status="PASS" starttime="20230906 00:08:28.291" endtime="20230906 00:08:34.062"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>subdir1</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230906 00:08:34.063" endtime="20230906 00:08:34.063"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230906 00:08:23.194" endtime="20230906 00:08:34.063"/>
</test>
<test id="s1-s3-t15" name="Touch file" line="115">
<kw name="Execute" library="os">
<arg>ozone fs -touch ${DEEP_URL}/TOUCHFILE-${SCHEME}.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230906 00:08:34.069" level="INFO">Running command 'ozone fs -touch o3fs://78809-link1-o3fs.fstest1.omservice//test/o3fs/dir/TOUCHFILE-o3fs.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230906 00:08:39.465" level="INFO">${rc} = 0</msg>
<msg timestamp="20230906 00:08:39.465" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230906 00:08:34.066" endtime="20230906 00:08:39.465"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230906 00:08:39.466" level="INFO"/>
<status status="PASS" starttime="20230906 00:08:39.466" endtime="20230906 00:08:39.467"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230906 00:08:39.467" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230906 00:08:39.467" endtime="20230906 00:08:39.467"/>
</kw>
<status status="PASS" starttime="20230906 00:08:34.066" endtime="20230906 00:08:39.468"/>
</kw>
<msg timestamp="20230906 00:08:39.468" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230906 00:08:34.065" endtime="20230906 00:08:39.468"/>
</kw>
<status status="PASS" starttime="20230906 00:08:34.065" endtime="20230906 00:08:39.468"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230906 00:08:39.473" level="INFO">Running command 'ozone sh key list fstest1/78809-link1-o3fs | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20230906 00:08:45.451" level="INFO">${rc} = 0</msg>
<msg timestamp="20230906 00:08:45.451" level="INFO">${output} = test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/MOVED.TXT
test/o3fs/dir/PUTFILE.txt
test/o3fs/dir/STREAMING.txt
test/o3fs/dir/TOUCHFILE-o3fs.txt</msg>
<status status="PASS" starttime="20230906 00:08:39.470" endtime="20230906 00:08:45.451"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230906 00:08:45.453" level="INFO">test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/MOVED.TXT
test/o3fs/dir/PUTFILE.txt
test/o3fs/dir/STREAMING.txt
test/o3fs/dir/TOUCHFILE-o3fs.txt</msg>
<status status="PASS" starttime="20230906 00:08:45.452" endtime="20230906 00:08:45.453"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230906 00:08:45.454" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230906 00:08:45.453" endtime="20230906 00:08:45.454"/>
</kw>
<status status="PASS" starttime="20230906 00:08:39.469" endtime="20230906 00:08:45.454"/>
</kw>
<msg timestamp="20230906 00:08:45.454" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230906 00:08:39.469" endtime="20230906 00:08:45.454"/>
</kw>
<msg timestamp="20230906 00:08:45.455" level="INFO">${result} = test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/MOVED.TXT
test/o3fs/dir/PUTFILE.txt
test/o3fs/dir/STREAMING.txt
test/o3fs/dir/TOUCHFILE-o3fs.txt</msg>
<status status="PASS" starttime="20230906 00:08:39.468" endtime="20230906 00:08:45.455"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>TOUCHFILE-${SCHEME}.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230906 00:08:45.455" endtime="20230906 00:08:45.455"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230906 00:08:34.064" endtime="20230906 00:08:45.456"/>
</test>
<test id="s1-s3-t16" name="Delete file with Trash" line="120">
<kw name="Execute" library="os">
<arg>ozone fs -touch ${DEEP_URL}/testFile.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230906 00:08:45.461" level="INFO">Running command 'ozone fs -touch o3fs://78809-link1-o3fs.fstest1.omservice//test/o3fs/dir/testFile.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230906 00:08:50.204" level="INFO">${rc} = 0</msg>
<msg timestamp="20230906 00:08:50.205" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230906 00:08:45.458" endtime="20230906 00:08:50.205"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230906 00:08:50.206" level="INFO"/>
<status status="PASS" starttime="20230906 00:08:50.205" endtime="20230906 00:08:50.206"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230906 00:08:50.207" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230906 00:08:50.206" endtime="20230906 00:08:50.207"/>
</kw>
<status status="PASS" starttime="20230906 00:08:45.458" endtime="20230906 00:08:50.207"/>
</kw>
<msg timestamp="20230906 00:08:50.207" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230906 00:08:45.457" endtime="20230906 00:08:50.208"/>
</kw>
<status status="PASS" starttime="20230906 00:08:45.457" endtime="20230906 00:08:50.208"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -rm ${DEEP_URL}/testFile.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230906 00:08:50.213" level="INFO">Running command 'ozone fs -rm o3fs://78809-link1-o3fs.fstest1.omservice//test/o3fs/dir/testFile.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230906 00:08:55.151" level="INFO">${rc} = 0</msg>
<msg timestamp="20230906 00:08:55.151" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230906 00:08:50.210" endtime="20230906 00:08:55.151"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230906 00:08:55.153" level="INFO"/>
<status status="PASS" starttime="20230906 00:08:55.152" endtime="20230906 00:08:55.153"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230906 00:08:55.154" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230906 00:08:55.153" endtime="20230906 00:08:55.154"/>
</kw>
<status status="PASS" starttime="20230906 00:08:50.209" endtime="20230906 00:08:55.154"/>
</kw>
<msg timestamp="20230906 00:08:55.154" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230906 00:08:50.209" endtime="20230906 00:08:55.154"/>
</kw>
<status status="PASS" starttime="20230906 00:08:50.208" endtime="20230906 00:08:55.154"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone fs -ls -R ${BASE_URL}/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230906 00:08:55.159" level="INFO">Running command 'ozone fs -ls -R o3fs://78809-link1-o3fs.fstest1.omservice/// 2&gt;&amp;1'.</msg>
<msg timestamp="20230906 00:09:00.292" level="INFO">${rc} = 1</msg>
<msg timestamp="20230906 00:09:00.292" level="INFO">${output} = drwxrwxrwx   - testuser testuser          0 2023-09-06 00:08 o3fs://78809-link1-o3fs.fstest1.omservice/.Trash
drwxrwxrwx   - testuser testuser          0 2023-09-06 00:08 o3fs://78809-link1-o3fs.fstes...</msg>
<status status="PASS" starttime="20230906 00:08:55.156" endtime="20230906 00:09:00.292"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230906 00:09:00.293" level="INFO">drwxrwxrwx   - testuser testuser          0 2023-09-06 00:08 o3fs://78809-link1-o3fs.fstest1.omservice/.Trash
drwxrwxrwx   - testuser testuser          0 2023-09-06 00:08 o3fs://78809-link1-o3fs.fstest1.omservice/.Trash/testuser
drwxrwxrwx   - testuser testuser          0 2023-09-06 00:08 o3fs://78809-link1-o3fs.fstest1.omservice/.Trash/testuser/Current
drwxrwxrwx   - testuser testuser          0 2023-09-06 00:08 o3fs://78809-link1-o3fs.fstest1.omservice/.Trash/testuser/Current/test
drwxrwxrwx   - testuser testuser          0 2023-09-06 00:08 o3fs://78809-link1-o3fs.fstest1.omservice/.Trash/testuser/Current/test/o3fs
ls: Unable to get file status: volume: fstest1-src bucket: 78809-link1-o3fs-src key: .Trash/testuser/Current/test/o3fs
drwxrwxrwx   - testuser testuser          0 2023-09-06 00:06 o3fs://78809-link1-o3fs.fstest1.omservice/test
drwxrwxrwx   - testuser testuser          0 2023-09-06 00:06 o3fs://78809-link1-o3fs.fstest1.omservice/test/o3fs
drwxrwxrwx   - testuser testuser          0 2023-09-06 00:08 o3fs://78809-link1-o3fs.fstest1.omservice/test/o3fs/dir
-rw-rw-rw-   3 testuser testuser      17289 2023-09-06 00:06 o3fs://78809-link1-o3fs.fstest1.omservice/test/o3fs/dir/MOVED.TXT
-rw-rw-rw-   3 testuser testuser      17289 2023-09-06 00:06 o3fs://78809-link1-o3fs.fstest1.omservice/test/o3fs/dir/PUTFILE.txt
-rw-rw-rw-   3 testuser testuser      17289 2023-09-06 00:07 o3fs://78809-link1-o3fs.fstest1.omservice/test/o3fs/dir/STREAMING.txt
-rw-rw-rw-   3 testuser testuser          0 2023-09-06 00:08 o3fs://78809-link1-o3fs.fstest1.omservice/test/o3fs/dir/TOUCHFILE-o3fs.txt</msg>
<status status="PASS" starttime="20230906 00:09:00.292" endtime="20230906 00:09:00.293"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230906 00:09:00.294" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<msg timestamp="20230906 00:09:00.294" level="FAIL">1 != 0</msg>
<status status="FAIL" starttime="20230906 00:09:00.294" endtime="20230906 00:09:00.294"/>
</kw>
<status status="FAIL" starttime="20230906 00:08:55.155" endtime="20230906 00:09:00.295"/>
</kw>
<msg timestamp="20230906 00:09:00.295" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20230906 00:08:55.155" endtime="20230906 00:09:00.295"/>
</kw>
<status status="FAIL" starttime="20230906 00:08:55.154" endtime="20230906 00:09:00.295"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${DEEP_URL}/testFile.txt</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230906 00:09:00.295" endtime="20230906 00:09:00.295"/>
</kw>
<kw name="Should Contain Any" library="BuiltIn">
<arg>${result}</arg>
<arg>.Trash/hadoop</arg>
<arg>.Trash/testuser</arg>
<arg>.Trash/root</arg>
<doc>Fails if ``container`` does not contain any of the ``*items``.</doc>
<status status="NOT RUN" starttime="20230906 00:09:00.295" endtime="20230906 00:09:00.295"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${DEEP_DIR}/testFile.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230906 00:09:00.295" endtime="20230906 00:09:00.296"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20230906 00:08:45.456" endtime="20230906 00:09:00.296">1 != 0</status>
</test>
<test id="s1-s3-t17" name="Delete recursively" line="128">
<kw name="Execute" library="os">
<arg>ozone fs -mkdir -p ${DEEP_URL}/subdir2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230906 00:09:00.302" level="INFO">Running command 'ozone fs -mkdir -p o3fs://78809-link1-o3fs.fstest1.omservice//test/o3fs/dir/subdir2 2&gt;&amp;1'.</msg>
<msg timestamp="20230906 00:09:04.918" level="INFO">${rc} = 0</msg>
<msg timestamp="20230906 00:09:04.918" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230906 00:09:00.299" endtime="20230906 00:09:04.918"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230906 00:09:04.919" level="INFO"/>
<status status="PASS" starttime="20230906 00:09:04.918" endtime="20230906 00:09:04.919"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230906 00:09:04.920" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230906 00:09:04.919" endtime="20230906 00:09:04.920"/>
</kw>
<status status="PASS" starttime="20230906 00:09:00.299" endtime="20230906 00:09:04.920"/>
</kw>
<msg timestamp="20230906 00:09:04.920" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230906 00:09:00.299" endtime="20230906 00:09:04.920"/>
</kw>
<status status="PASS" starttime="20230906 00:09:00.297" endtime="20230906 00:09:04.920"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -rm -skipTrash -r ${DEEP_URL}/subdir2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230906 00:09:04.925" level="INFO">Running command 'ozone fs -rm -skipTrash -r o3fs://78809-link1-o3fs.fstest1.omservice//test/o3fs/dir/subdir2 2&gt;&amp;1'.</msg>
<msg timestamp="20230906 00:09:10.072" level="INFO">${rc} = 0</msg>
<msg timestamp="20230906 00:09:10.072" level="INFO">${output} = Deleted o3fs://78809-link1-o3fs.fstest1.omservice/test/o3fs/dir/subdir2</msg>
<status status="PASS" starttime="20230906 00:09:04.922" endtime="20230906 00:09:10.072"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230906 00:09:10.073" level="INFO">Deleted o3fs://78809-link1-o3fs.fstest1.omservice/test/o3fs/dir/subdir2</msg>
<status status="PASS" starttime="20230906 00:09:10.072" endtime="20230906 00:09:10.073"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230906 00:09:10.074" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230906 00:09:10.074" endtime="20230906 00:09:10.074"/>
</kw>
<status status="PASS" starttime="20230906 00:09:04.921" endtime="20230906 00:09:10.074"/>
</kw>
<msg timestamp="20230906 00:09:10.075" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230906 00:09:04.921" endtime="20230906 00:09:10.075"/>
</kw>
<status status="PASS" starttime="20230906 00:09:04.921" endtime="20230906 00:09:10.075"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230906 00:09:10.080" level="INFO">Running command 'ozone sh key list fstest1/78809-link1-o3fs | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20230906 00:09:16.612" level="INFO">${rc} = 0</msg>
<msg timestamp="20230906 00:09:16.612" level="INFO">${output} = .Trash/
.Trash/testuser/
.Trash/testuser/230906000900/
.Trash/testuser/230906000900/test/
.Trash/testuser/230906000900/test/o3fs/
.Trash/testuser/230906000900/test/o3fs/dir/
.Trash/testuser/2309060009...</msg>
<status status="PASS" starttime="20230906 00:09:10.077" endtime="20230906 00:09:16.612"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230906 00:09:16.613" level="INFO">.Trash/
.Trash/testuser/
.Trash/testuser/230906000900/
.Trash/testuser/230906000900/test/
.Trash/testuser/230906000900/test/o3fs/
.Trash/testuser/230906000900/test/o3fs/dir/
.Trash/testuser/230906000900/test/o3fs/dir/testFile.txt
test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/MOVED.TXT
test/o3fs/dir/PUTFILE.txt
test/o3fs/dir/STREAMING.txt
test/o3fs/dir/TOUCHFILE-o3fs.txt</msg>
<status status="PASS" starttime="20230906 00:09:16.613" endtime="20230906 00:09:16.614"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230906 00:09:16.614" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230906 00:09:16.614" endtime="20230906 00:09:16.614"/>
</kw>
<status status="PASS" starttime="20230906 00:09:10.076" endtime="20230906 00:09:16.614"/>
</kw>
<msg timestamp="20230906 00:09:16.615" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230906 00:09:10.076" endtime="20230906 00:09:16.615"/>
</kw>
<msg timestamp="20230906 00:09:16.615" level="INFO">${result} = .Trash/
.Trash/testuser/
.Trash/testuser/230906000900/
.Trash/testuser/230906000900/test/
.Trash/testuser/230906000900/test/o3fs/
.Trash/testuser/230906000900/test/o3fs/dir/
.Trash/testuser/2309060009...</msg>
<status status="PASS" starttime="20230906 00:09:10.075" endtime="20230906 00:09:16.615"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${DEEP_DIR}/subdir2</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230906 00:09:16.615" endtime="20230906 00:09:16.616"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230906 00:09:00.296" endtime="20230906 00:09:16.616"/>
</test>
<test id="s1-s3-t18" name="List recursively" line="134">
<kw name="Setup localdir1" type="SETUP">
<kw name="Execute" library="os">
<arg>rm -Rf /tmp/localdir1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230906 00:09:16.622" level="INFO">Running command 'rm -Rf /tmp/localdir1 2&gt;&amp;1'.</msg>
<msg timestamp="20230906 00:09:16.627" level="INFO">${rc} = 0</msg>
<msg timestamp="20230906 00:09:16.627" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230906 00:09:16.619" endtime="20230906 00:09:16.627"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230906 00:09:16.629" level="INFO"/>
<status status="PASS" starttime="20230906 00:09:16.628" endtime="20230906 00:09:16.629"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230906 00:09:16.629" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230906 00:09:16.629" endtime="20230906 00:09:16.629"/>
</kw>
<status status="PASS" starttime="20230906 00:09:16.619" endtime="20230906 00:09:16.629"/>
</kw>
<msg timestamp="20230906 00:09:16.630" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230906 00:09:16.619" endtime="20230906 00:09:16.630"/>
</kw>
<status status="PASS" starttime="20230906 00:09:16.618" endtime="20230906 00:09:16.630"/>
</kw>
<kw name="Execute" library="os">
<arg>mkdir /tmp/localdir1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230906 00:09:16.634" level="INFO">Running command 'mkdir /tmp/localdir1 2&gt;&amp;1'.</msg>
<msg timestamp="20230906 00:09:16.637" level="INFO">${rc} = 0</msg>
<msg timestamp="20230906 00:09:16.637" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230906 00:09:16.631" endtime="20230906 00:09:16.637"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230906 00:09:16.639" level="INFO"/>
<status status="PASS" starttime="20230906 00:09:16.638" endtime="20230906 00:09:16.639"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230906 00:09:16.640" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230906 00:09:16.639" endtime="20230906 00:09:16.640"/>
</kw>
<status status="PASS" starttime="20230906 00:09:16.631" endtime="20230906 00:09:16.640"/>
</kw>
<msg timestamp="20230906 00:09:16.640" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230906 00:09:16.630" endtime="20230906 00:09:16.640"/>
</kw>
<status status="PASS" starttime="20230906 00:09:16.630" endtime="20230906 00:09:16.640"/>
</kw>
<kw name="Execute" library="os">
<arg>cp NOTICE.txt /tmp/localdir1/LOCAL.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230906 00:09:16.646" level="INFO">Running command 'cp NOTICE.txt /tmp/localdir1/LOCAL.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230906 00:09:16.651" level="INFO">${rc} = 0</msg>
<msg timestamp="20230906 00:09:16.651" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230906 00:09:16.643" endtime="20230906 00:09:16.651"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230906 00:09:16.652" level="INFO"/>
<status status="PASS" starttime="20230906 00:09:16.651" endtime="20230906 00:09:16.652"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230906 00:09:16.653" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230906 00:09:16.652" endtime="20230906 00:09:16.653"/>
</kw>
<status status="PASS" starttime="20230906 00:09:16.641" endtime="20230906 00:09:16.653"/>
</kw>
<msg timestamp="20230906 00:09:16.653" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230906 00:09:16.641" endtime="20230906 00:09:16.654"/>
</kw>
<status status="PASS" starttime="20230906 00:09:16.641" endtime="20230906 00:09:16.654"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -mkdir -p ${BASE_URL}testdir1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230906 00:09:16.658" level="INFO">Running command 'ozone fs -mkdir -p o3fs://78809-link1-o3fs.fstest1.omservice//testdir1 2&gt;&amp;1'.</msg>
<msg timestamp="20230906 00:09:21.135" level="INFO">${rc} = 0</msg>
<msg timestamp="20230906 00:09:21.135" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230906 00:09:16.655" endtime="20230906 00:09:21.135"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230906 00:09:21.137" level="INFO"/>
<status status="PASS" starttime="20230906 00:09:21.136" endtime="20230906 00:09:21.137"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230906 00:09:21.137" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230906 00:09:21.137" endtime="20230906 00:09:21.138"/>
</kw>
<status status="PASS" starttime="20230906 00:09:16.655" endtime="20230906 00:09:21.138"/>
</kw>
<msg timestamp="20230906 00:09:21.138" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230906 00:09:16.654" endtime="20230906 00:09:21.138"/>
</kw>
<status status="PASS" starttime="20230906 00:09:16.654" endtime="20230906 00:09:21.138"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -copyFromLocal /tmp/localdir1 ${BASE_URL}testdir1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230906 00:09:21.143" level="INFO">Running command 'ozone fs -copyFromLocal /tmp/localdir1 o3fs://78809-link1-o3fs.fstest1.omservice//testdir1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230906 00:09:28.771" level="INFO">${rc} = 0</msg>
<msg timestamp="20230906 00:09:28.771" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230906 00:09:21.140" endtime="20230906 00:09:28.771"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230906 00:09:28.772" level="INFO"/>
<status status="PASS" starttime="20230906 00:09:28.771" endtime="20230906 00:09:28.772"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230906 00:09:28.773" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230906 00:09:28.772" endtime="20230906 00:09:28.773"/>
</kw>
<status status="PASS" starttime="20230906 00:09:21.139" endtime="20230906 00:09:28.773"/>
</kw>
<msg timestamp="20230906 00:09:28.773" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230906 00:09:21.139" endtime="20230906 00:09:28.773"/>
</kw>
<status status="PASS" starttime="20230906 00:09:21.138" endtime="20230906 00:09:28.773"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -put NOTICE.txt ${BASE_URL}testdir1/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230906 00:09:28.778" level="INFO">Running command 'ozone fs -put NOTICE.txt o3fs://78809-link1-o3fs.fstest1.omservice//testdir1/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230906 00:09:35.977" level="INFO">${rc} = 0</msg>
<msg timestamp="20230906 00:09:35.977" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230906 00:09:28.775" endtime="20230906 00:09:35.977"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230906 00:09:35.978" level="INFO"/>
<status status="PASS" starttime="20230906 00:09:35.977" endtime="20230906 00:09:35.978"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230906 00:09:35.979" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230906 00:09:35.978" endtime="20230906 00:09:35.979"/>
</kw>
<status status="PASS" starttime="20230906 00:09:28.774" endtime="20230906 00:09:35.979"/>
</kw>
<msg timestamp="20230906 00:09:35.979" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230906 00:09:28.774" endtime="20230906 00:09:35.979"/>
</kw>
<status status="PASS" starttime="20230906 00:09:28.774" endtime="20230906 00:09:35.979"/>
</kw>
<status status="PASS" starttime="20230906 00:09:16.618" endtime="20230906 00:09:35.980"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone fs -ls -R ${BASE_URL}testdir1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230906 00:09:35.984" level="INFO">Running command 'ozone fs -ls -R o3fs://78809-link1-o3fs.fstest1.omservice//testdir1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230906 00:09:40.443" level="INFO">${rc} = 0</msg>
<msg timestamp="20230906 00:09:40.443" level="INFO">${output} = -rw-rw-rw-   3 testuser testuser      17289 2023-09-06 00:09 o3fs://78809-link1-o3fs.fstest1.omservice/testdir1/NOTICE.txt
drwxrwxrwx   - testuser testuser          0 2023-09-06 00:09 o3fs://78809-lin...</msg>
<status status="PASS" starttime="20230906 00:09:35.981" endtime="20230906 00:09:40.443"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230906 00:09:40.445" level="INFO">-rw-rw-rw-   3 testuser testuser      17289 2023-09-06 00:09 o3fs://78809-link1-o3fs.fstest1.omservice/testdir1/NOTICE.txt
drwxrwxrwx   - testuser testuser          0 2023-09-06 00:09 o3fs://78809-link1-o3fs.fstest1.omservice/testdir1/localdir1
-rw-rw-rw-   3 testuser testuser      17289 2023-09-06 00:09 o3fs://78809-link1-o3fs.fstest1.omservice/testdir1/localdir1/LOCAL.txt</msg>
<status status="PASS" starttime="20230906 00:09:40.444" endtime="20230906 00:09:40.445"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230906 00:09:40.445" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230906 00:09:40.445" endtime="20230906 00:09:40.446"/>
</kw>
<status status="PASS" starttime="20230906 00:09:35.981" endtime="20230906 00:09:40.446"/>
</kw>
<msg timestamp="20230906 00:09:40.446" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230906 00:09:35.981" endtime="20230906 00:09:40.446"/>
</kw>
<msg timestamp="20230906 00:09:40.446" level="INFO">${result} = -rw-rw-rw-   3 testuser testuser      17289 2023-09-06 00:09 o3fs://78809-link1-o3fs.fstest1.omservice/testdir1/NOTICE.txt
drwxrwxrwx   - testuser testuser          0 2023-09-06 00:09 o3fs://78809-lin...</msg>
<status status="PASS" starttime="20230906 00:09:35.980" endtime="20230906 00:09:40.446"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>localdir1/LOCAL.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230906 00:09:40.447" endtime="20230906 00:09:40.447"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>testdir1/NOTICE.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230906 00:09:40.447" endtime="20230906 00:09:40.448"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230906 00:09:16.617" endtime="20230906 00:09:40.448"/>
</test>
<test id="s1-s3-t19" name="Copy to other bucket" line="140">
<kw name="Format FS URL" library="fs">
<var>${target}</var>
<arg>${SCHEME}</arg>
<arg>${VOLUME}</arg>
<arg>${BUCKET2}</arg>
<arg>testdir2</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20230906 00:09:40.466" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20230906 00:09:40.465" endtime="20230906 00:09:40.466"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230906 00:09:40.467" level="INFO">${result} = .omservice</msg>
<status status="PASS" starttime="20230906 00:09:40.466" endtime="20230906 00:09:40.467"/>
</kw>
<status status="PASS" starttime="20230906 00:09:40.465" endtime="20230906 00:09:40.467"/>
</kw>
<msg timestamp="20230906 00:09:40.467" level="INFO">${om_with_leading} = .omservice</msg>
<status status="PASS" starttime="20230906 00:09:40.464" endtime="20230906 00:09:40.467"/>
</kw>
<status status="PASS" starttime="20230906 00:09:40.463" endtime="20230906 00:09:40.467"/>
</kw>
<msg timestamp="20230906 00:09:40.467" level="INFO">${url} = o3fs://78809-link2-o3fs.fstest1.omservice/testdir2</msg>
<status status="PASS" starttime="20230906 00:09:40.450" endtime="20230906 00:09:40.467"/>
</kw>
<msg timestamp="20230906 00:09:40.467" level="INFO">${target} = o3fs://78809-link2-o3fs.fstest1.omservice/testdir2</msg>
<status status="PASS" starttime="20230906 00:09:40.449" endtime="20230906 00:09:40.467"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -mkdir -p ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230906 00:09:40.471" level="INFO">Running command 'ozone fs -mkdir -p o3fs://78809-link2-o3fs.fstest1.omservice/testdir2 2&gt;&amp;1'.</msg>
<msg timestamp="20230906 00:09:45.570" level="INFO">${rc} = 0</msg>
<msg timestamp="20230906 00:09:45.570" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230906 00:09:40.469" endtime="20230906 00:09:45.570"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230906 00:09:45.572" level="INFO"/>
<status status="PASS" starttime="20230906 00:09:45.571" endtime="20230906 00:09:45.572"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230906 00:09:45.572" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230906 00:09:45.572" endtime="20230906 00:09:45.572"/>
</kw>
<status status="PASS" starttime="20230906 00:09:40.468" endtime="20230906 00:09:45.573"/>
</kw>
<msg timestamp="20230906 00:09:45.573" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230906 00:09:40.468" endtime="20230906 00:09:45.573"/>
</kw>
<status status="PASS" starttime="20230906 00:09:40.468" endtime="20230906 00:09:45.573"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -cp ${BASE_URL}/testdir1/localdir1 ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230906 00:09:45.577" level="INFO">Running command 'ozone fs -cp o3fs://78809-link1-o3fs.fstest1.omservice///testdir1/localdir1 o3fs://78809-link2-o3fs.fstest1.omservice/testdir2 2&gt;&amp;1'.</msg>
<msg timestamp="20230906 00:09:53.155" level="INFO">${rc} = 0</msg>
<msg timestamp="20230906 00:09:53.155" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230906 00:09:45.575" endtime="20230906 00:09:53.155"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230906 00:09:53.156" level="INFO"/>
<status status="PASS" starttime="20230906 00:09:53.156" endtime="20230906 00:09:53.157"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230906 00:09:53.157" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230906 00:09:53.157" endtime="20230906 00:09:53.157"/>
</kw>
<status status="PASS" starttime="20230906 00:09:45.574" endtime="20230906 00:09:53.157"/>
</kw>
<msg timestamp="20230906 00:09:53.157" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230906 00:09:45.574" endtime="20230906 00:09:53.158"/>
</kw>
<status status="PASS" starttime="20230906 00:09:45.573" endtime="20230906 00:09:53.158"/>
</kw>
<kw name="Execute" library="os" type="TEARDOWN">
<arg>ozone fs -rm -r ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230906 00:09:53.162" level="INFO">Running command 'ozone fs -rm -r o3fs://78809-link2-o3fs.fstest1.omservice/testdir2 2&gt;&amp;1'.</msg>
<msg timestamp="20230906 00:09:58.014" level="INFO">${rc} = 0</msg>
<msg timestamp="20230906 00:09:58.014" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230906 00:09:53.160" endtime="20230906 00:09:58.014"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230906 00:09:58.015" level="INFO"/>
<status status="PASS" starttime="20230906 00:09:58.014" endtime="20230906 00:09:58.015"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230906 00:09:58.016" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230906 00:09:58.015" endtime="20230906 00:09:58.016"/>
</kw>
<status status="PASS" starttime="20230906 00:09:53.159" endtime="20230906 00:09:58.016"/>
</kw>
<msg timestamp="20230906 00:09:58.016" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230906 00:09:53.159" endtime="20230906 00:09:58.016"/>
</kw>
<status status="PASS" starttime="20230906 00:09:53.158" endtime="20230906 00:09:58.016"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230906 00:09:40.449" endtime="20230906 00:09:58.016"/>
</test>
<test id="s1-s3-t20" name="Copy to other volume" line="146">
<kw name="Format FS URL" library="fs">
<var>${target}</var>
<arg>${SCHEME}</arg>
<arg>${VOL2}</arg>
<arg>${BUCKET_IN_VOL2}</arg>
<arg>testdir3</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20230906 00:09:58.022" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20230906 00:09:58.022" endtime="20230906 00:09:58.022"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230906 00:09:58.023" level="INFO">${result} = .omservice</msg>
<status status="PASS" starttime="20230906 00:09:58.022" endtime="20230906 00:09:58.023"/>
</kw>
<status status="PASS" starttime="20230906 00:09:58.021" endtime="20230906 00:09:58.023"/>
</kw>
<msg timestamp="20230906 00:09:58.023" level="INFO">${om_with_leading} = .omservice</msg>
<status status="PASS" starttime="20230906 00:09:58.020" endtime="20230906 00:09:58.023"/>
</kw>
<status status="PASS" starttime="20230906 00:09:58.019" endtime="20230906 00:09:58.023"/>
</kw>
<msg timestamp="20230906 00:09:58.023" level="INFO">${url} = o3fs://78809-link3-o3fs.fstest2.omservice/testdir3</msg>
<status status="PASS" starttime="20230906 00:09:58.019" endtime="20230906 00:09:58.023"/>
</kw>
<msg timestamp="20230906 00:09:58.024" level="INFO">${target} = o3fs://78809-link3-o3fs.fstest2.omservice/testdir3</msg>
<status status="PASS" starttime="20230906 00:09:58.018" endtime="20230906 00:09:58.024"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -mkdir -p ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230906 00:09:58.028" level="INFO">Running command 'ozone fs -mkdir -p o3fs://78809-link3-o3fs.fstest2.omservice/testdir3 2&gt;&amp;1'.</msg>
<msg timestamp="20230906 00:10:02.610" level="INFO">${rc} = 0</msg>
<msg timestamp="20230906 00:10:02.610" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230906 00:09:58.025" endtime="20230906 00:10:02.610"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230906 00:10:02.612" level="INFO"/>
<status status="PASS" starttime="20230906 00:10:02.611" endtime="20230906 00:10:02.612"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230906 00:10:02.612" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230906 00:10:02.612" endtime="20230906 00:10:02.613"/>
</kw>
<status status="PASS" starttime="20230906 00:09:58.024" endtime="20230906 00:10:02.613"/>
</kw>
<msg timestamp="20230906 00:10:02.613" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230906 00:09:58.024" endtime="20230906 00:10:02.613"/>
</kw>
<status status="PASS" starttime="20230906 00:09:58.024" endtime="20230906 00:10:02.613"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -cp ${BASE_URL}/testdir1/localdir1 ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230906 00:10:02.617" level="INFO">Running command 'ozone fs -cp o3fs://78809-link1-o3fs.fstest1.omservice///testdir1/localdir1 o3fs://78809-link3-o3fs.fstest2.omservice/testdir3 2&gt;&amp;1'.</msg>
<msg timestamp="20230906 00:10:10.166" level="INFO">${rc} = 0</msg>
<msg timestamp="20230906 00:10:10.166" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230906 00:10:02.615" endtime="20230906 00:10:10.166"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230906 00:10:10.167" level="INFO"/>
<status status="PASS" starttime="20230906 00:10:10.166" endtime="20230906 00:10:10.167"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230906 00:10:10.168" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230906 00:10:10.167" endtime="20230906 00:10:10.168"/>
</kw>
<status status="PASS" starttime="20230906 00:10:02.614" endtime="20230906 00:10:10.168"/>
</kw>
<msg timestamp="20230906 00:10:10.168" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230906 00:10:02.614" endtime="20230906 00:10:10.168"/>
</kw>
<status status="PASS" starttime="20230906 00:10:02.613" endtime="20230906 00:10:10.168"/>
</kw>
<kw name="Execute" library="os" type="TEARDOWN">
<arg>ozone fs -rm -r ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230906 00:10:10.173" level="INFO">Running command 'ozone fs -rm -r o3fs://78809-link3-o3fs.fstest2.omservice/testdir3 2&gt;&amp;1'.</msg>
<msg timestamp="20230906 00:10:14.993" level="INFO">${rc} = 0</msg>
<msg timestamp="20230906 00:10:14.993" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230906 00:10:10.170" endtime="20230906 00:10:14.994"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230906 00:10:14.995" level="INFO"/>
<status status="PASS" starttime="20230906 00:10:14.994" endtime="20230906 00:10:14.995"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230906 00:10:14.996" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230906 00:10:14.995" endtime="20230906 00:10:14.996"/>
</kw>
<status status="PASS" starttime="20230906 00:10:10.169" endtime="20230906 00:10:14.996"/>
</kw>
<msg timestamp="20230906 00:10:14.996" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230906 00:10:10.169" endtime="20230906 00:10:14.997"/>
</kw>
<status status="PASS" starttime="20230906 00:10:10.169" endtime="20230906 00:10:14.997"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230906 00:09:58.017" endtime="20230906 00:10:14.997"/>
</test>
<test id="s1-s3-t21" name="List file created via shell" line="152">
<kw name="Execute" library="os" type="SETUP">
<arg>ozone sh key put ${VOLUME}/${BUCKET}/${SCHEME}.txt NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230906 00:10:15.004" level="INFO">Running command 'ozone sh key put fstest1/78809-link1-o3fs/o3fs.txt NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230906 00:10:23.310" level="INFO">${rc} = 0</msg>
<msg timestamp="20230906 00:10:23.310" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230906 00:10:15.001" endtime="20230906 00:10:23.310"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230906 00:10:23.311" level="INFO"/>
<status status="PASS" starttime="20230906 00:10:23.310" endtime="20230906 00:10:23.311"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230906 00:10:23.312" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230906 00:10:23.311" endtime="20230906 00:10:23.312"/>
</kw>
<status status="PASS" starttime="20230906 00:10:15.000" endtime="20230906 00:10:23.312"/>
</kw>
<msg timestamp="20230906 00:10:23.312" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230906 00:10:15.000" endtime="20230906 00:10:23.312"/>
</kw>
<status status="PASS" starttime="20230906 00:10:14.999" endtime="20230906 00:10:23.312"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone fs -ls ${BASE_URL}${SCHEME}.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230906 00:10:23.316" level="INFO">Running command 'ozone fs -ls o3fs://78809-link1-o3fs.fstest1.omservice//o3fs.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230906 00:10:28.371" level="INFO">${rc} = 0</msg>
<msg timestamp="20230906 00:10:28.371" level="INFO">${output} = -rw-rw-rw-   3 testuser testuser      17289 2023-09-06 00:10 o3fs://78809-link1-o3fs.fstest1.omservice/o3fs.txt</msg>
<status status="PASS" starttime="20230906 00:10:23.314" endtime="20230906 00:10:28.371"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230906 00:10:28.372" level="INFO">-rw-rw-rw-   3 testuser testuser      17289 2023-09-06 00:10 o3fs://78809-link1-o3fs.fstest1.omservice/o3fs.txt</msg>
<status status="PASS" starttime="20230906 00:10:28.371" endtime="20230906 00:10:28.372"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230906 00:10:28.373" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230906 00:10:28.373" endtime="20230906 00:10:28.373"/>
</kw>
<status status="PASS" starttime="20230906 00:10:23.313" endtime="20230906 00:10:28.373"/>
</kw>
<msg timestamp="20230906 00:10:28.374" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230906 00:10:23.313" endtime="20230906 00:10:28.374"/>
</kw>
<msg timestamp="20230906 00:10:28.374" level="INFO">${result} = -rw-rw-rw-   3 testuser testuser      17289 2023-09-06 00:10 o3fs://78809-link1-o3fs.fstest1.omservice/o3fs.txt</msg>
<status status="PASS" starttime="20230906 00:10:23.313" endtime="20230906 00:10:28.374"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${SCHEME}.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230906 00:10:28.374" endtime="20230906 00:10:28.374"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230906 00:10:14.998" endtime="20230906 00:10:28.375"/>
</test>
<test id="s1-s3-t22" name="Reject overwrite existing" line="157">
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone fs -copyFromLocal NOTICE.txt ${BASE_URL}${SCHEME}.txt</arg>
<arg>1</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230906 00:10:28.380" level="INFO">Running command 'ozone fs -copyFromLocal NOTICE.txt o3fs://78809-link1-o3fs.fstest1.omservice//o3fs.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230906 00:10:33.061" level="INFO">${rc} = 1</msg>
<msg timestamp="20230906 00:10:33.061" level="INFO">${output} = copyFromLocal: `o3fs://78809-link1-o3fs.fstest1.omservice/o3fs.txt': File exists</msg>
<status status="PASS" starttime="20230906 00:10:28.377" endtime="20230906 00:10:33.061"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230906 00:10:33.063" level="INFO">copyFromLocal: `o3fs://78809-link1-o3fs.fstest1.omservice/o3fs.txt': File exists</msg>
<status status="PASS" starttime="20230906 00:10:33.062" endtime="20230906 00:10:33.063"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230906 00:10:33.064" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230906 00:10:33.063" endtime="20230906 00:10:33.064"/>
</kw>
<msg timestamp="20230906 00:10:33.064" level="INFO">${result} = copyFromLocal: `o3fs://78809-link1-o3fs.fstest1.omservice/o3fs.txt': File exists</msg>
<status status="PASS" starttime="20230906 00:10:28.376" endtime="20230906 00:10:33.064"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>File exists</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230906 00:10:33.064" endtime="20230906 00:10:33.065"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230906 00:10:28.376" endtime="20230906 00:10:33.065"/>
</test>
<test id="s1-s3-t23" name="Get file" line="161">
<kw name="Execute" library="os" type="SETUP">
<arg>rm -Rf /tmp/GET.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230906 00:10:33.071" level="INFO">Running command 'rm -Rf /tmp/GET.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230906 00:10:33.074" level="INFO">${rc} = 0</msg>
<msg timestamp="20230906 00:10:33.074" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230906 00:10:33.068" endtime="20230906 00:10:33.074"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230906 00:10:33.076" level="INFO"/>
<status status="PASS" starttime="20230906 00:10:33.075" endtime="20230906 00:10:33.076"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230906 00:10:33.076" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230906 00:10:33.076" endtime="20230906 00:10:33.076"/>
</kw>
<status status="PASS" starttime="20230906 00:10:33.068" endtime="20230906 00:10:33.077"/>
</kw>
<msg timestamp="20230906 00:10:33.077" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230906 00:10:33.067" endtime="20230906 00:10:33.077"/>
</kw>
<status status="PASS" starttime="20230906 00:10:33.067" endtime="20230906 00:10:33.077"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -get ${BASE_URL}${SCHEME}.txt /tmp/GET.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230906 00:10:33.082" level="INFO">Running command 'ozone fs -get o3fs://78809-link1-o3fs.fstest1.omservice//o3fs.txt /tmp/GET.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230906 00:10:40.357" level="INFO">${rc} = 0</msg>
<msg timestamp="20230906 00:10:40.357" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230906 00:10:33.079" endtime="20230906 00:10:40.357"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230906 00:10:40.358" level="INFO"/>
<status status="PASS" starttime="20230906 00:10:40.358" endtime="20230906 00:10:40.359"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230906 00:10:40.359" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230906 00:10:40.359" endtime="20230906 00:10:40.359"/>
</kw>
<status status="PASS" starttime="20230906 00:10:33.078" endtime="20230906 00:10:40.360"/>
</kw>
<msg timestamp="20230906 00:10:40.360" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230906 00:10:33.078" endtime="20230906 00:10:40.360"/>
</kw>
<status status="PASS" starttime="20230906 00:10:33.077" endtime="20230906 00:10:40.360"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>/tmp/GET.txt</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20230906 00:10:40.360" level="INFO" html="true">File '&lt;a href="file:///tmp/GET.txt"&gt;/tmp/GET.txt&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230906 00:10:40.360" endtime="20230906 00:10:40.361"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230906 00:10:33.066" endtime="20230906 00:10:40.361"/>
</test>
<doc>Ozone FS tests</doc>
<status status="FAIL" starttime="20230906 00:04:43.939" endtime="20230906 00:10:40.363"/>
</suite>
<status status="FAIL" starttime="N/A" endtime="N/A" elapsedtime="542483"/>
</suite>
<statistics>
<total>
<stat pass="45" fail="1" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="45" fail="1" skip="0" id="s1" name="ozonesecure-ha">ozonesecure-ha</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1" name="Kinit">ozonesecure-ha.Kinit</stat>
<stat pass="22" fail="0" skip="0" id="s1-s2" name="Freon">ozonesecure-ha.Freon</stat>
<stat pass="8" fail="0" skip="0" id="s1-s2-s1" name="echoRPCLoad">ozonesecure-ha.Freon.echoRPCLoad</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s2" name="Generate-Chunk">ozonesecure-ha.Freon.Generate-Chunk</stat>
<stat pass="3" fail="0" skip="0" id="s1-s2-s3" name="Generate">ozonesecure-ha.Freon.Generate</stat>
<stat pass="6" fail="0" skip="0" id="s1-s2-s4" name="Read-Write-Key">ozonesecure-ha.Freon.Read-Write-Key</stat>
<stat pass="2" fail="0" skip="0" id="s1-s2-s5" name="Remove">ozonesecure-ha.Freon.Remove</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s6" name="Validate-Chunk">ozonesecure-ha.Freon.Validate-Chunk</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s7" name="Validate">ozonesecure-ha.Freon.Validate</stat>
<stat pass="22" fail="1" skip="0" id="s1-s3" name="ozonefs-o3fs-link">ozonesecure-ha.ozonefs-o3fs-link</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
