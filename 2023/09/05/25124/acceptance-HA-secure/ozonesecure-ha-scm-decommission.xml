<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 6.1.1 (Python 3.8.10 on linux)" generated="20230905 23:58:04.211" rpa="false" schemaversion="4">
<suite id="s1" name="ozonesecure-ha-scm-decommission">
<suite id="s1-s1" name="Kinit" source="/opt/hadoop/smoketest/kinit.robot">
<test id="s1-s1-t1" name="Kinit" line="27">
<kw name="Kinit test user" library="commonlib">
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230905 23:55:14.497" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230905 23:55:14.511" level="INFO">${rc} = 0</msg>
<msg timestamp="20230905 23:55:14.512" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230905 23:55:14.484" endtime="20230905 23:55:14.512"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230905 23:55:14.513" level="INFO">scm</msg>
<status status="PASS" starttime="20230905 23:55:14.512" endtime="20230905 23:55:14.513"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230905 23:55:14.514" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230905 23:55:14.514" endtime="20230905 23:55:14.514"/>
</kw>
<status status="PASS" starttime="20230905 23:55:14.484" endtime="20230905 23:55:14.515"/>
</kw>
<msg timestamp="20230905 23:55:14.515" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230905 23:55:14.483" endtime="20230905 23:55:14.515"/>
</kw>
<msg timestamp="20230905 23:55:14.515" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230905 23:55:14.483" endtime="20230905 23:55:14.515"/>
</kw>
<msg timestamp="20230905 23:55:14.515" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230905 23:55:14.482" endtime="20230905 23:55:14.515"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230905 23:55:14.516" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230905 23:55:14.516" endtime="20230905 23:55:14.516"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230905 23:55:14.521" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20230905 23:55:14.566" level="INFO">${rc} = 0</msg>
<msg timestamp="20230905 23:55:14.566" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230905 23:55:14.519" endtime="20230905 23:55:14.566"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230905 23:55:14.567" level="INFO"/>
<status status="PASS" starttime="20230905 23:55:14.566" endtime="20230905 23:55:14.567"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230905 23:55:14.568" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230905 23:55:14.568" endtime="20230905 23:55:14.568"/>
</kw>
<status status="PASS" starttime="20230905 23:55:14.518" endtime="20230905 23:55:14.569"/>
</kw>
<msg timestamp="20230905 23:55:14.569" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230905 23:55:14.518" endtime="20230905 23:55:14.569"/>
</kw>
<status status="PASS" starttime="20230905 23:55:14.517" endtime="20230905 23:55:14.569"/>
</kw>
<status status="PASS" starttime="20230905 23:55:14.516" endtime="20230905 23:55:14.570"/>
</kw>
<status status="PASS" starttime="20230905 23:55:14.481" endtime="20230905 23:55:14.570"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20230905 23:55:14.481" endtime="20230905 23:55:14.570"/>
</test>
<doc>Kinit test user</doc>
<status status="PASS" starttime="20230905 23:55:14.324" endtime="20230905 23:55:14.572"/>
</suite>
<suite id="s1-s2" name="Primordial-Scm" source="/opt/hadoop/smoketest/scmha/primordial-scm.robot">
<test id="s1-s2-t1" name="Verify SCM Count" line="33">
<kw name="Get SCM Node Count">
<var>${scm_count}</var>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin scm roles --service-id=scmservice</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230905 23:55:26.222" level="INFO">Running command 'ozone admin scm roles --service-id=scmservice 2&gt;&amp;1'.</msg>
<msg timestamp="20230905 23:55:31.412" level="INFO">${rc} = 0</msg>
<msg timestamp="20230905 23:55:31.412" level="INFO">${output} = scm1.org:9894:LEADER:fb57cc56-339c-4f46-95d0-ad60bf43af0e:172.25.0.116
scm4.org:9894:FOLLOWER:dc422d77-1d31-4343-b1df-7458db8980fc:172.25.0.120
scm2.org:9894:FOLLOWER:31cd6a0e-af2a-4d82-88c3-b2d97334b...</msg>
<status status="PASS" starttime="20230905 23:55:26.220" endtime="20230905 23:55:31.412"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230905 23:55:31.413" level="INFO">scm1.org:9894:LEADER:fb57cc56-339c-4f46-95d0-ad60bf43af0e:172.25.0.116
scm4.org:9894:FOLLOWER:dc422d77-1d31-4343-b1df-7458db8980fc:172.25.0.120
scm2.org:9894:FOLLOWER:31cd6a0e-af2a-4d82-88c3-b2d97334ba59:172.25.0.117
scm3.org:9894:FOLLOWER:d36146ea-a3c2-4a41-a87a-9bfe3f412e7d:172.25.0.118</msg>
<status status="PASS" starttime="20230905 23:55:31.412" endtime="20230905 23:55:31.413"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230905 23:55:31.414" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230905 23:55:31.414" endtime="20230905 23:55:31.414"/>
</kw>
<status status="PASS" starttime="20230905 23:55:26.219" endtime="20230905 23:55:31.414"/>
</kw>
<msg timestamp="20230905 23:55:31.415" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230905 23:55:26.219" endtime="20230905 23:55:31.415"/>
</kw>
<msg timestamp="20230905 23:55:31.415" level="INFO">${result} = scm1.org:9894:LEADER:fb57cc56-339c-4f46-95d0-ad60bf43af0e:172.25.0.116
scm4.org:9894:FOLLOWER:dc422d77-1d31-4343-b1df-7458db8980fc:172.25.0.120
scm2.org:9894:FOLLOWER:31cd6a0e-af2a-4d82-88c3-b2d97334b...</msg>
<status status="PASS" starttime="20230905 23:55:26.218" endtime="20230905 23:55:31.415"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230905 23:55:31.415" level="INFO">scm1.org:9894:LEADER:fb57cc56-339c-4f46-95d0-ad60bf43af0e:172.25.0.116
scm4.org:9894:FOLLOWER:dc422d77-1d31-4343-b1df-7458db8980fc:172.25.0.120
scm2.org:9894:FOLLOWER:31cd6a0e-af2a-4d82-88c3-b2d97334ba59:172.25.0.117
scm3.org:9894:FOLLOWER:d36146ea-a3c2-4a41-a87a-9bfe3f412e7d:172.25.0.118</msg>
<status status="PASS" starttime="20230905 23:55:31.415" endtime="20230905 23:55:31.416"/>
</kw>
<kw name="Get Line Count" library="String">
<var>${scm_count}</var>
<arg>${result}</arg>
<doc>Returns and logs the number of lines in the given string.</doc>
<msg timestamp="20230905 23:55:31.416" level="INFO">4 lines</msg>
<msg timestamp="20230905 23:55:31.416" level="INFO">${scm_count} = 4</msg>
<status status="PASS" starttime="20230905 23:55:31.416" endtime="20230905 23:55:31.416"/>
</kw>
<msg timestamp="20230905 23:55:31.416" level="INFO">${scm_count} = 4</msg>
<status status="PASS" starttime="20230905 23:55:26.218" endtime="20230905 23:55:31.416"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>SCM Instance Count: ${scm_count}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230905 23:55:31.417" level="INFO">SCM Instance Count: 4</msg>
<status status="PASS" starttime="20230905 23:55:31.416" endtime="20230905 23:55:31.417"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${scm_count}</var>
<arg>${scm_count}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20230905 23:55:31.417" level="INFO">${scm_count} = 4</msg>
<status status="PASS" starttime="20230905 23:55:31.417" endtime="20230905 23:55:31.417"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>4</arg>
<arg>${scm_count}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230905 23:55:31.418" endtime="20230905 23:55:31.418"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230905 23:55:26.217" endtime="20230905 23:55:31.418"/>
</test>
<test id="s1-s2-t2" name="Transfer Leader to SCM4" line="39">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin scm roles --service-id=scmservice</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230905 23:55:31.429" level="INFO">Running command 'ozone admin scm roles --service-id=scmservice 2&gt;&amp;1'.</msg>
<msg timestamp="20230905 23:55:36.963" level="INFO">${rc} = 0</msg>
<msg timestamp="20230905 23:55:36.963" level="INFO">${output} = scm1.org:9894:LEADER:fb57cc56-339c-4f46-95d0-ad60bf43af0e:172.25.0.116
scm4.org:9894:FOLLOWER:dc422d77-1d31-4343-b1df-7458db8980fc:172.25.0.120
scm2.org:9894:FOLLOWER:31cd6a0e-af2a-4d82-88c3-b2d97334b...</msg>
<status status="PASS" starttime="20230905 23:55:31.426" endtime="20230905 23:55:36.963"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230905 23:55:36.968" level="INFO">scm1.org:9894:LEADER:fb57cc56-339c-4f46-95d0-ad60bf43af0e:172.25.0.116
scm4.org:9894:FOLLOWER:dc422d77-1d31-4343-b1df-7458db8980fc:172.25.0.120
scm2.org:9894:FOLLOWER:31cd6a0e-af2a-4d82-88c3-b2d97334ba59:172.25.0.117
scm3.org:9894:FOLLOWER:d36146ea-a3c2-4a41-a87a-9bfe3f412e7d:172.25.0.118</msg>
<status status="PASS" starttime="20230905 23:55:36.963" endtime="20230905 23:55:36.968"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230905 23:55:36.972" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230905 23:55:36.968" endtime="20230905 23:55:36.972"/>
</kw>
<status status="PASS" starttime="20230905 23:55:31.426" endtime="20230905 23:55:36.972"/>
</kw>
<msg timestamp="20230905 23:55:36.972" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230905 23:55:31.425" endtime="20230905 23:55:36.972"/>
</kw>
<msg timestamp="20230905 23:55:36.972" level="INFO">${result} = scm1.org:9894:LEADER:fb57cc56-339c-4f46-95d0-ad60bf43af0e:172.25.0.116
scm4.org:9894:FOLLOWER:dc422d77-1d31-4343-b1df-7458db8980fc:172.25.0.120
scm2.org:9894:FOLLOWER:31cd6a0e-af2a-4d82-88c3-b2d97334b...</msg>
<status status="PASS" starttime="20230905 23:55:31.425" endtime="20230905 23:55:36.972"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230905 23:55:36.974" level="INFO">scm1.org:9894:LEADER:fb57cc56-339c-4f46-95d0-ad60bf43af0e:172.25.0.116
scm4.org:9894:FOLLOWER:dc422d77-1d31-4343-b1df-7458db8980fc:172.25.0.120
scm2.org:9894:FOLLOWER:31cd6a0e-af2a-4d82-88c3-b2d97334ba59:172.25.0.117
scm3.org:9894:FOLLOWER:d36146ea-a3c2-4a41-a87a-9bfe3f412e7d:172.25.0.118</msg>
<status status="PASS" starttime="20230905 23:55:36.972" endtime="20230905 23:55:36.974"/>
</kw>
<kw name="Get Lines Containing String" library="String">
<var>${scm4_line}</var>
<arg>${result}</arg>
<arg>scm4.org</arg>
<doc>Returns lines of the given ``string`` that contain the ``pattern``.</doc>
<msg timestamp="20230905 23:55:36.975" level="INFO">1 out of 4 lines matched</msg>
<msg timestamp="20230905 23:55:36.975" level="INFO">${scm4_line} = scm4.org:9894:FOLLOWER:dc422d77-1d31-4343-b1df-7458db8980fc:172.25.0.120</msg>
<status status="PASS" starttime="20230905 23:55:36.974" endtime="20230905 23:55:36.976"/>
</kw>
<kw name="Split String" library="String">
<var>${scm4_split}</var>
<arg>${scm4_line}</arg>
<arg>:</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20230905 23:55:36.976" level="INFO">${scm4_split} = ['scm4.org', '9894', 'FOLLOWER', 'dc422d77-1d31-4343-b1df-7458db8980fc', '172.25.0.120']</msg>
<status status="PASS" starttime="20230905 23:55:36.976" endtime="20230905 23:55:36.976"/>
</kw>
<kw name="Strip String" library="String">
<var>${scm4_uuid}</var>
<arg>${scm4_split[3]}</arg>
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<msg timestamp="20230905 23:55:36.978" level="INFO">${scm4_uuid} = dc422d77-1d31-4343-b1df-7458db8980fc</msg>
<status status="PASS" starttime="20230905 23:55:36.976" endtime="20230905 23:55:36.978"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin scm transfer --service-id=scmservice -n ${scm4_uuid}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230905 23:55:36.984" level="INFO">Running command 'ozone admin scm transfer --service-id=scmservice -n dc422d77-1d31-4343-b1df-7458db8980fc 2&gt;&amp;1'.</msg>
<msg timestamp="20230905 23:55:43.359" level="INFO">${rc} = 0</msg>
<msg timestamp="20230905 23:55:43.359" level="INFO">${output} = Transfer leadership successfully to dc422d77-1d31-4343-b1df-7458db8980fc.</msg>
<status status="PASS" starttime="20230905 23:55:36.980" endtime="20230905 23:55:43.359"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230905 23:55:43.361" level="INFO">Transfer leadership successfully to dc422d77-1d31-4343-b1df-7458db8980fc.</msg>
<status status="PASS" starttime="20230905 23:55:43.360" endtime="20230905 23:55:43.361"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230905 23:55:43.362" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230905 23:55:43.361" endtime="20230905 23:55:43.362"/>
</kw>
<status status="PASS" starttime="20230905 23:55:36.980" endtime="20230905 23:55:43.362"/>
</kw>
<msg timestamp="20230905 23:55:43.362" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230905 23:55:36.979" endtime="20230905 23:55:43.362"/>
</kw>
<msg timestamp="20230905 23:55:43.362" level="INFO">${result} = Transfer leadership successfully to dc422d77-1d31-4343-b1df-7458db8980fc.</msg>
<status status="PASS" starttime="20230905 23:55:36.978" endtime="20230905 23:55:43.362"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230905 23:55:43.363" level="INFO">Transfer leadership successfully to dc422d77-1d31-4343-b1df-7458db8980fc.</msg>
<status status="PASS" starttime="20230905 23:55:43.363" endtime="20230905 23:55:43.363"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Transfer leadership successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230905 23:55:43.363" endtime="20230905 23:55:43.363"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230905 23:55:31.423" endtime="20230905 23:55:43.364"/>
</test>
<test id="s1-s2-t3" name="Verify SCM4 Certificate" line="50">
<kw name="Execute" library="os">
<var>${root_ca_output}</var>
<arg>ozone admin cert list -c 1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230905 23:55:43.369" level="INFO">Running command 'ozone admin cert list -c 1 2&gt;&amp;1'.</msg>
<msg timestamp="20230905 23:55:51.262" level="INFO">${rc} = 0</msg>
<msg timestamp="20230905 23:55:51.262" level="INFO">${output} = The certificate list could be longer than the batch size: 1. Please use the "-c" option to see more certificates.
Certificate list:(Type=VALID, BatchSize=1, CertCount=1)
SerialNumber      Valid From  ...</msg>
<status status="PASS" starttime="20230905 23:55:43.367" endtime="20230905 23:55:51.262"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230905 23:55:51.263" level="INFO">The certificate list could be longer than the batch size: 1. Please use the "-c" option to see more certificates.
Certificate list:(Type=VALID, BatchSize=1, CertCount=1)
SerialNumber      Valid From                     Expiry                         Subject                                                                                                        Issuer                                                                                                        
1                 Tue Sep 05 23:51:57 UTC 2023   Fri Oct 13 23:51:57 UTC 2028   CN=scm-1@scm1.org,OU=fb57cc56-339c-4f46-95d0-ad60bf43af0e,O=CID-3707110c-056c-430c-b4f8-b0434bdbba87           CN=scm-1@scm1.org,OU=fb57cc56-339c-4f46-95d0-ad60bf43af0e,O=CID-3707110c-056c-430c-b4f8-b0434bdbba87          </msg>
<status status="PASS" starttime="20230905 23:55:51.262" endtime="20230905 23:55:51.263"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230905 23:55:51.264" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230905 23:55:51.264" endtime="20230905 23:55:51.264"/>
</kw>
<status status="PASS" starttime="20230905 23:55:43.366" endtime="20230905 23:55:51.265"/>
</kw>
<msg timestamp="20230905 23:55:51.265" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230905 23:55:43.366" endtime="20230905 23:55:51.265"/>
</kw>
<msg timestamp="20230905 23:55:51.265" level="INFO">${root_ca_output} = The certificate list could be longer than the batch size: 1. Please use the "-c" option to see more certificates.
Certificate list:(Type=VALID, BatchSize=1, CertCount=1)
SerialNumber      Valid From  ...</msg>
<status status="PASS" starttime="20230905 23:55:43.366" endtime="20230905 23:55:51.265"/>
</kw>
<kw name="Get Lines Containing String" library="String">
<var>${root_ca_cert}</var>
<arg>${root_ca_output}</arg>
<arg>scm1.org</arg>
<doc>Returns lines of the given ``string`` that contain the ``pattern``.</doc>
<msg timestamp="20230905 23:55:51.266" level="INFO">1 out of 4 lines matched</msg>
<msg timestamp="20230905 23:55:51.266" level="INFO">${root_ca_cert} = 1                 Tue Sep 05 23:51:57 UTC 2023   Fri Oct 13 23:51:57 UTC 2028   CN=scm-1@scm1.org,OU=fb57cc56-339c-4f46-95d0-ad60bf43af0e,O=CID-3707110c-056c-430c-b4f8-b0434bdbba87           CN=scm-1@...</msg>
<status status="PASS" starttime="20230905 23:55:51.265" endtime="20230905 23:55:51.266"/>
</kw>
<kw name="Split String" library="String">
<var>${root_ca_cert_split}</var>
<arg>${root_ca_cert}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20230905 23:55:51.267" level="INFO">${root_ca_cert_split} = ['1', 'Tue', 'Sep', '05', '23:51:57', 'UTC', '2023', 'Fri', 'Oct', '13', '23:51:57', 'UTC', '2028', 'CN=scm-1@scm1.org,OU=fb57cc56-339c-4f46-95d0-ad60bf43af0e,O=CID-3707110c-056c-430c-b4f8-b0434bdbba8...</msg>
<status status="PASS" starttime="20230905 23:55:51.266" endtime="20230905 23:55:51.267"/>
</kw>
<kw name="Strip String" library="String">
<var>${root_ca_cert_subject}</var>
<arg>${root_ca_cert_split[3]}</arg>
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<msg timestamp="20230905 23:55:51.268" level="INFO">${root_ca_cert_subject} = 05</msg>
<status status="PASS" starttime="20230905 23:55:51.267" endtime="20230905 23:55:51.268"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin cert list -c 1000000</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230905 23:55:51.272" level="INFO">Running command 'ozone admin cert list -c 1000000 2&gt;&amp;1'.</msg>
<msg timestamp="20230905 23:55:58.609" level="INFO">${rc} = 0</msg>
<msg timestamp="20230905 23:55:58.609" level="INFO">${output} = Certificate list:(Type=VALID, BatchSize=1000000, CertCount=12)
SerialNumber      Valid From                     Expiry                         Subject                                                  ...</msg>
<status status="PASS" starttime="20230905 23:55:51.270" endtime="20230905 23:55:58.609"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230905 23:55:58.611" level="INFO">Certificate list:(Type=VALID, BatchSize=1000000, CertCount=12)
SerialNumber      Valid From                     Expiry                         Subject                                                                                                        Issuer                                                                                                        
1                 Tue Sep 05 23:51:57 UTC 2023   Fri Oct 13 23:51:57 UTC 2028   CN=scm-1@scm1.org,OU=fb57cc56-339c-4f46-95d0-ad60bf43af0e,O=CID-3707110c-056c-430c-b4f8-b0434bdbba87           CN=scm-1@scm1.org,OU=fb57cc56-339c-4f46-95d0-ad60bf43af0e,O=CID-3707110c-056c-430c-b4f8-b0434bdbba87          
300118401662      Tue Sep 05 23:51:57 UTC 2023   Fri Oct 13 23:51:57 UTC 2028   CN=scm-sub-299977269104@scm1.org,OU=fb57cc56-339c-4f46-95d0-ad60bf43af0e,O=CID-3707110c-056c-430c-b4f8-b0434bdbba87 CN=scm-1@scm1.org,OU=fb57cc56-339c-4f46-95d0-ad60bf43af0e,O=CID-3707110c-056c-430c-b4f8-b0434bdbba87          
326447066317      Tue Sep 05 23:52:24 UTC 2023   Wed Sep 04 23:52:24 UTC 2024   CN=recon@recon,OU=fb57cc56-339c-4f46-95d0-ad60bf43af0e,O=CID-3707110c-056c-430c-b4f8-b0434bdbba87              CN=scm-sub-299977269104@scm1.org,OU=fb57cc56-339c-4f46-95d0-ad60bf43af0e,O=CID-3707110c-056c-430c-b4f8-b0434bdbba87
328158909128      Tue Sep 05 23:52:25 UTC 2023   Fri Oct 13 23:52:25 UTC 2028   CN=scm-sub-327207267308@scm2.org,OU=31cd6a0e-af2a-4d82-88c3-b2d97334ba59,O=CID-3707110c-056c-430c-b4f8-b0434bdbba87 CN=scm-1@scm1.org,OU=fb57cc56-339c-4f46-95d0-ad60bf43af0e,O=CID-3707110c-056c-430c-b4f8-b0434bdbba87          
347785608111      Tue Sep 05 23:52:45 UTC 2023   Fri Oct 13 23:52:45 UTC 2028   CN=scm-sub-347649306382@scm3.org,OU=d36146ea-a3c2-4a41-a87a-9bfe3f412e7d,O=CID-3707110c-056c-430c-b4f8-b0434bdbba87 CN=scm-1@scm1.org,OU=fb57cc56-339c-4f46-95d0-ad60bf43af0e,O=CID-3707110c-056c-430c-b4f8-b0434bdbba87          
386400912374      Tue Sep 05 23:53:24 UTC 2023   Wed Sep 04 23:53:24 UTC 2024   CN=dn@53850af76755,OU=fb57cc56-339c-4f46-95d0-ad60bf43af0e,O=CID-3707110c-056c-430c-b4f8-b0434bdbba87          CN=scm-sub-299977269104@scm1.org,OU=fb57cc56-339c-4f46-95d0-ad60bf43af0e,O=CID-3707110c-056c-430c-b4f8-b0434bdbba87
388157642686      Tue Sep 05 23:53:25 UTC 2023   Wed Sep 04 23:53:25 UTC 2024   CN=dn@55118c49c766,OU=fb57cc56-339c-4f46-95d0-ad60bf43af0e,O=CID-3707110c-056c-430c-b4f8-b0434bdbba87          CN=scm-sub-299977269104@scm1.org,OU=fb57cc56-339c-4f46-95d0-ad60bf43af0e,O=CID-3707110c-056c-430c-b4f8-b0434bdbba87
388942151700      Tue Sep 05 23:53:26 UTC 2023   Wed Sep 04 23:53:26 UTC 2024   CN=dn@8631ae183ef6,OU=fb57cc56-339c-4f46-95d0-ad60bf43af0e,O=CID-3707110c-056c-430c-b4f8-b0434bdbba87          CN=scm-sub-299977269104@scm1.org,OU=fb57cc56-339c-4f46-95d0-ad60bf43af0e,O=CID-3707110c-056c-430c-b4f8-b0434bdbba87
389760980185      Tue Sep 05 23:53:27 UTC 2023   Wed Sep 04 23:53:27 UTC 2024   CN=om2,OU=fb57cc56-339c-4f46-95d0-ad60bf43af0e,O=CID-3707110c-056c-430c-b4f8-b0434bdbba87                      CN=scm-sub-299977269104@scm1.org,OU=fb57cc56-339c-4f46-95d0-ad60bf43af0e,O=CID-3707110c-056c-430c-b4f8-b0434bdbba87
391363454981      Tue Sep 05 23:53:29 UTC 2023   Wed Sep 04 23:53:29 UTC 2024   CN=om3,OU=fb57cc56-339c-4f46-95d0-ad60bf43af0e,O=CID-3707110c-056c-430c-b4f8-b0434bdbba87                      CN=scm-sub-299977269104@scm1.org,OU=fb57cc56-339c-4f46-95d0-ad60bf43af0e,O=CID-3707110c-056c-430c-b4f8-b0434bdbba87
393740000238      Tue Sep 05 23:53:31 UTC 2023   Wed Sep 04 23:53:31 UTC 2024   CN=om1,OU=fb57cc56-339c-4f46-95d0-ad60bf43af0e,O=CID-3707110c-056c-430c-b4f8-b0434bdbba87                      CN=scm-sub-299977269104@scm1.org,OU=fb57cc56-339c-4f46-95d0-ad60bf43af0e,O=CID-3707110c-056c-430c-b4f8-b0434bdbba87
477846874102      Tue Sep 05 23:54:55 UTC 2023   Fri Oct 13 23:54:55 UTC 2028   CN=scm-sub-477594626665@scm4.org,OU=dc422d77-1d31-4343-b1df-7458db8980fc,O=CID-3707110c-056c-430c-b4f8-b0434bdbba87 CN=scm-1@scm1.org,OU=fb57cc56-339c-4f46-95d0-ad60bf43af0e,O=CID-3707110c-056c-430c-b4f8-b0434bdbba87          </msg>
<status status="PASS" starttime="20230905 23:55:58.610" endtime="20230905 23:55:58.611"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230905 23:55:58.611" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230905 23:55:58.611" endtime="20230905 23:55:58.612"/>
</kw>
<status status="PASS" starttime="20230905 23:55:51.269" endtime="20230905 23:55:58.612"/>
</kw>
<msg timestamp="20230905 23:55:58.612" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230905 23:55:51.269" endtime="20230905 23:55:58.612"/>
</kw>
<msg timestamp="20230905 23:55:58.612" level="INFO">${output} = Certificate list:(Type=VALID, BatchSize=1000000, CertCount=12)
SerialNumber      Valid From                     Expiry                         Subject                                                  ...</msg>
<status status="PASS" starttime="20230905 23:55:51.268" endtime="20230905 23:55:58.613"/>
</kw>
<kw name="Get Lines Containing String" library="String">
<var>${scm4_cert}</var>
<arg>${output}</arg>
<arg>scm4.org</arg>
<doc>Returns lines of the given ``string`` that contain the ``pattern``.</doc>
<msg timestamp="20230905 23:55:58.613" level="INFO">1 out of 14 lines matched</msg>
<msg timestamp="20230905 23:55:58.613" level="INFO">${scm4_cert} = 477846874102      Tue Sep 05 23:54:55 UTC 2023   Fri Oct 13 23:54:55 UTC 2028   CN=scm-sub-477594626665@scm4.org,OU=dc422d77-1d31-4343-b1df-7458db8980fc,O=CID-3707110c-056c-430c-b4f8-b0434bdbba87 CN=s...</msg>
<status status="PASS" starttime="20230905 23:55:58.613" endtime="20230905 23:55:58.613"/>
</kw>
<kw name="Split String" library="String">
<var>${scm4_cert_split}</var>
<arg>${scm4_cert}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20230905 23:55:58.614" level="INFO">${scm4_cert_split} = ['477846874102', 'Tue', 'Sep', '05', '23:54:55', 'UTC', '2023', 'Fri', 'Oct', '13', '23:54:55', 'UTC', '2028', 'CN=scm-sub-477594626665@scm4.org,OU=dc422d77-1d31-4343-b1df-7458db8980fc,O=CID-3707110c-...</msg>
<status status="PASS" starttime="20230905 23:55:58.613" endtime="20230905 23:55:58.614"/>
</kw>
<kw name="Strip String" library="String">
<var>${scm4_cert_issuer}</var>
<arg>${scm4_cert_split[4]}</arg>
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<msg timestamp="20230905 23:55:58.615" level="INFO">${scm4_cert_issuer} = 23:54:55</msg>
<status status="PASS" starttime="20230905 23:55:58.614" endtime="20230905 23:55:58.615"/>
</kw>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<arg>${scm4_cert_issuer}</arg>
<arg>${root_ca_cert_subject}</arg>
<doc>Fails if objects are equal after converting them to strings.</doc>
<status status="PASS" starttime="20230905 23:55:58.615" endtime="20230905 23:55:58.616"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230905 23:55:43.365" endtime="20230905 23:55:58.616"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20230905 23:55:26.166" endtime="20230905 23:55:58.619"/>
</suite>
<suite id="s1-s3" name="Kinit" source="/opt/hadoop/smoketest/kinit.robot">
<test id="s1-s3-t1" name="Kinit" line="27">
<kw name="Kinit test user" library="commonlib">
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230905 23:57:04.341" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230905 23:57:04.346" level="INFO">${rc} = 0</msg>
<msg timestamp="20230905 23:57:04.346" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230905 23:57:04.338" endtime="20230905 23:57:04.346"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230905 23:57:04.347" level="INFO">scm</msg>
<status status="PASS" starttime="20230905 23:57:04.347" endtime="20230905 23:57:04.348"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230905 23:57:04.348" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230905 23:57:04.348" endtime="20230905 23:57:04.348"/>
</kw>
<status status="PASS" starttime="20230905 23:57:04.337" endtime="20230905 23:57:04.348"/>
</kw>
<msg timestamp="20230905 23:57:04.349" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230905 23:57:04.337" endtime="20230905 23:57:04.349"/>
</kw>
<msg timestamp="20230905 23:57:04.349" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230905 23:57:04.337" endtime="20230905 23:57:04.349"/>
</kw>
<msg timestamp="20230905 23:57:04.349" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230905 23:57:04.336" endtime="20230905 23:57:04.349"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230905 23:57:04.350" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230905 23:57:04.349" endtime="20230905 23:57:04.350"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230905 23:57:04.354" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20230905 23:57:04.414" level="INFO">${rc} = 0</msg>
<msg timestamp="20230905 23:57:04.414" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230905 23:57:04.352" endtime="20230905 23:57:04.414"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230905 23:57:04.416" level="INFO"/>
<status status="PASS" starttime="20230905 23:57:04.415" endtime="20230905 23:57:04.416"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230905 23:57:04.417" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230905 23:57:04.416" endtime="20230905 23:57:04.417"/>
</kw>
<status status="PASS" starttime="20230905 23:57:04.351" endtime="20230905 23:57:04.417"/>
</kw>
<msg timestamp="20230905 23:57:04.417" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230905 23:57:04.351" endtime="20230905 23:57:04.417"/>
</kw>
<status status="PASS" starttime="20230905 23:57:04.350" endtime="20230905 23:57:04.417"/>
</kw>
<status status="PASS" starttime="20230905 23:57:04.350" endtime="20230905 23:57:04.417"/>
</kw>
<status status="PASS" starttime="20230905 23:57:04.335" endtime="20230905 23:57:04.417"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20230905 23:57:04.334" endtime="20230905 23:57:04.418"/>
</test>
<doc>Kinit test user</doc>
<status status="PASS" starttime="20230905 23:57:04.273" endtime="20230905 23:57:04.419"/>
</suite>
<suite id="s1-s4" name="Scm-Decommission" source="/opt/hadoop/smoketest/scmha/scm-decommission.robot">
<test id="s1-s4-t1" name="Transfer Leader to non-primordial node Follower" line="28">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin scm roles --service-id=scmservice</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230905 23:57:14.959" level="INFO">Running command 'ozone admin scm roles --service-id=scmservice 2&gt;&amp;1'.</msg>
<msg timestamp="20230905 23:57:19.622" level="INFO">${rc} = 0</msg>
<msg timestamp="20230905 23:57:19.622" level="INFO">${output} = scm1.org:9894:LEADER:fb57cc56-339c-4f46-95d0-ad60bf43af0e:172.25.0.116
scm2.org:9894:FOLLOWER:31cd6a0e-af2a-4d82-88c3-b2d97334ba59:172.25.0.117
scm3.org:9894:FOLLOWER:d36146ea-a3c2-4a41-a87a-9bfe3f412...</msg>
<status status="PASS" starttime="20230905 23:57:14.957" endtime="20230905 23:57:19.622"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230905 23:57:19.623" level="INFO">scm1.org:9894:LEADER:fb57cc56-339c-4f46-95d0-ad60bf43af0e:172.25.0.116
scm2.org:9894:FOLLOWER:31cd6a0e-af2a-4d82-88c3-b2d97334ba59:172.25.0.117
scm3.org:9894:FOLLOWER:d36146ea-a3c2-4a41-a87a-9bfe3f412e7d:172.25.0.118</msg>
<status status="PASS" starttime="20230905 23:57:19.622" endtime="20230905 23:57:19.623"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230905 23:57:19.624" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230905 23:57:19.623" endtime="20230905 23:57:19.624"/>
</kw>
<status status="PASS" starttime="20230905 23:57:14.956" endtime="20230905 23:57:19.624"/>
</kw>
<msg timestamp="20230905 23:57:19.624" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230905 23:57:14.956" endtime="20230905 23:57:19.624"/>
</kw>
<msg timestamp="20230905 23:57:19.624" level="INFO">${result} = scm1.org:9894:LEADER:fb57cc56-339c-4f46-95d0-ad60bf43af0e:172.25.0.116
scm2.org:9894:FOLLOWER:31cd6a0e-af2a-4d82-88c3-b2d97334ba59:172.25.0.117
scm3.org:9894:FOLLOWER:d36146ea-a3c2-4a41-a87a-9bfe3f412...</msg>
<status status="PASS" starttime="20230905 23:57:14.955" endtime="20230905 23:57:19.625"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230905 23:57:19.625" level="INFO">scm1.org:9894:LEADER:fb57cc56-339c-4f46-95d0-ad60bf43af0e:172.25.0.116
scm2.org:9894:FOLLOWER:31cd6a0e-af2a-4d82-88c3-b2d97334ba59:172.25.0.117
scm3.org:9894:FOLLOWER:d36146ea-a3c2-4a41-a87a-9bfe3f412e7d:172.25.0.118</msg>
<status status="PASS" starttime="20230905 23:57:19.625" endtime="20230905 23:57:19.625"/>
</kw>
<kw name="Get Lines Matching Pattern" library="String">
<var>${follower_nodes}</var>
<arg>${result}</arg>
<arg>scm[23].org:9894:FOLLOWER*</arg>
<doc>Returns lines of the given ``string`` that match the ``pattern``.</doc>
<msg timestamp="20230905 23:57:19.626" level="INFO">2 out of 3 lines matched</msg>
<msg timestamp="20230905 23:57:19.626" level="INFO">${follower_nodes} = scm2.org:9894:FOLLOWER:31cd6a0e-af2a-4d82-88c3-b2d97334ba59:172.25.0.117
scm3.org:9894:FOLLOWER:d36146ea-a3c2-4a41-a87a-9bfe3f412e7d:172.25.0.118</msg>
<status status="PASS" starttime="20230905 23:57:19.625" endtime="20230905 23:57:19.626"/>
</kw>
<kw name="Get Line" library="String">
<var>${follower_node}</var>
<arg>${follower_nodes}</arg>
<arg>0</arg>
<doc>Returns the specified line from the given ``string``.</doc>
<msg timestamp="20230905 23:57:19.627" level="INFO">${follower_node} = scm2.org:9894:FOLLOWER:31cd6a0e-af2a-4d82-88c3-b2d97334ba59:172.25.0.117</msg>
<status status="PASS" starttime="20230905 23:57:19.626" endtime="20230905 23:57:19.627"/>
</kw>
<kw name="Split String" library="String">
<var>${follower_split}</var>
<arg>${follower_node}</arg>
<arg>:</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20230905 23:57:19.627" level="INFO">${follower_split} = ['scm2.org', '9894', 'FOLLOWER', '31cd6a0e-af2a-4d82-88c3-b2d97334ba59', '172.25.0.117']</msg>
<status status="PASS" starttime="20230905 23:57:19.627" endtime="20230905 23:57:19.627"/>
</kw>
<kw name="Strip String" library="String">
<var>${follower_scmId}</var>
<arg>${follower_split[3]}</arg>
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<msg timestamp="20230905 23:57:19.629" level="INFO">${follower_scmId} = 31cd6a0e-af2a-4d82-88c3-b2d97334ba59</msg>
<status status="PASS" starttime="20230905 23:57:19.627" endtime="20230905 23:57:19.629"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin scm transfer --service-id=scmservice -n ${follower_scmId}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230905 23:57:19.633" level="INFO">Running command 'ozone admin scm transfer --service-id=scmservice -n 31cd6a0e-af2a-4d82-88c3-b2d97334ba59 2&gt;&amp;1'.</msg>
<msg timestamp="20230905 23:57:24.764" level="INFO">${rc} = 0</msg>
<msg timestamp="20230905 23:57:24.764" level="INFO">${output} = Transfer leadership successfully to 31cd6a0e-af2a-4d82-88c3-b2d97334ba59.</msg>
<status status="PASS" starttime="20230905 23:57:19.630" endtime="20230905 23:57:24.764"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230905 23:57:24.766" level="INFO">Transfer leadership successfully to 31cd6a0e-af2a-4d82-88c3-b2d97334ba59.</msg>
<status status="PASS" starttime="20230905 23:57:24.765" endtime="20230905 23:57:24.766"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230905 23:57:24.767" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230905 23:57:24.766" endtime="20230905 23:57:24.767"/>
</kw>
<status status="PASS" starttime="20230905 23:57:19.630" endtime="20230905 23:57:24.767"/>
</kw>
<msg timestamp="20230905 23:57:24.767" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230905 23:57:19.629" endtime="20230905 23:57:24.767"/>
</kw>
<msg timestamp="20230905 23:57:24.767" level="INFO">${result} = Transfer leadership successfully to 31cd6a0e-af2a-4d82-88c3-b2d97334ba59.</msg>
<status status="PASS" starttime="20230905 23:57:19.629" endtime="20230905 23:57:24.767"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230905 23:57:24.768" level="INFO">Transfer leadership successfully to 31cd6a0e-af2a-4d82-88c3-b2d97334ba59.</msg>
<status status="PASS" starttime="20230905 23:57:24.768" endtime="20230905 23:57:24.768"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Transfer leadership successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230905 23:57:24.768" endtime="20230905 23:57:24.769"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230905 23:57:14.955" endtime="20230905 23:57:24.769"/>
</test>
<test id="s1-s4-t2" name="Decommission SCM Primordial Node" line="40">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin scm roles --service-id=scmservice</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230905 23:57:24.774" level="INFO">Running command 'ozone admin scm roles --service-id=scmservice 2&gt;&amp;1'.</msg>
<msg timestamp="20230905 23:57:31.473" level="INFO">${rc} = 0</msg>
<msg timestamp="20230905 23:57:31.473" level="INFO">${output} = scm1.org:9894:FOLLOWER:fb57cc56-339c-4f46-95d0-ad60bf43af0e:172.25.0.116
scm2.org:9894:LEADER:31cd6a0e-af2a-4d82-88c3-b2d97334ba59:172.25.0.117
scm3.org:9894:FOLLOWER:d36146ea-a3c2-4a41-a87a-9bfe3f412...</msg>
<status status="PASS" starttime="20230905 23:57:24.772" endtime="20230905 23:57:31.473"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230905 23:57:31.475" level="INFO">scm1.org:9894:FOLLOWER:fb57cc56-339c-4f46-95d0-ad60bf43af0e:172.25.0.116
scm2.org:9894:LEADER:31cd6a0e-af2a-4d82-88c3-b2d97334ba59:172.25.0.117
scm3.org:9894:FOLLOWER:d36146ea-a3c2-4a41-a87a-9bfe3f412e7d:172.25.0.118</msg>
<status status="PASS" starttime="20230905 23:57:31.474" endtime="20230905 23:57:31.475"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230905 23:57:31.476" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230905 23:57:31.475" endtime="20230905 23:57:31.476"/>
</kw>
<status status="PASS" starttime="20230905 23:57:24.771" endtime="20230905 23:57:31.476"/>
</kw>
<msg timestamp="20230905 23:57:31.476" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230905 23:57:24.771" endtime="20230905 23:57:31.476"/>
</kw>
<msg timestamp="20230905 23:57:31.476" level="INFO">${result} = scm1.org:9894:FOLLOWER:fb57cc56-339c-4f46-95d0-ad60bf43af0e:172.25.0.116
scm2.org:9894:LEADER:31cd6a0e-af2a-4d82-88c3-b2d97334ba59:172.25.0.117
scm3.org:9894:FOLLOWER:d36146ea-a3c2-4a41-a87a-9bfe3f412...</msg>
<status status="PASS" starttime="20230905 23:57:24.770" endtime="20230905 23:57:31.476"/>
</kw>
<kw name="Get Lines Matching Pattern" library="String">
<var>${nodes_in_quorum}</var>
<arg>${result}</arg>
<arg>scm[1234].org:9894:*</arg>
<doc>Returns lines of the given ``string`` that match the ``pattern``.</doc>
<msg timestamp="20230905 23:57:31.477" level="INFO">3 out of 3 lines matched</msg>
<msg timestamp="20230905 23:57:31.477" level="INFO">${nodes_in_quorum} = scm1.org:9894:FOLLOWER:fb57cc56-339c-4f46-95d0-ad60bf43af0e:172.25.0.116
scm2.org:9894:LEADER:31cd6a0e-af2a-4d82-88c3-b2d97334ba59:172.25.0.117
scm3.org:9894:FOLLOWER:d36146ea-a3c2-4a41-a87a-9bfe3f412...</msg>
<status status="PASS" starttime="20230905 23:57:31.476" endtime="20230905 23:57:31.477"/>
</kw>
<kw name="Get Line Count" library="String">
<var>${node_count}</var>
<arg>${nodes_in_quorum}</arg>
<doc>Returns and logs the number of lines in the given string.</doc>
<msg timestamp="20230905 23:57:31.478" level="INFO">3 lines</msg>
<msg timestamp="20230905 23:57:31.478" level="INFO">${node_count} = 3</msg>
<status status="PASS" starttime="20230905 23:57:31.477" endtime="20230905 23:57:31.478"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${node_count_pre}</var>
<arg>${node_count}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20230905 23:57:31.478" level="INFO">${node_count_pre} = 3</msg>
<status status="PASS" starttime="20230905 23:57:31.478" endtime="20230905 23:57:31.478"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${n}</var>
<arg>${node_count}-1</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230905 23:57:31.479" level="INFO">${n} = 2</msg>
<status status="PASS" starttime="20230905 23:57:31.479" endtime="20230905 23:57:31.479"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${node_count_expect}</var>
<arg>${n}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20230905 23:57:31.480" level="INFO">${node_count_expect} = 2</msg>
<status status="PASS" starttime="20230905 23:57:31.479" endtime="20230905 23:57:31.480"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>SCM Instance Count before SCM Decommission: ${node_count_pre}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230905 23:57:31.480" level="INFO">SCM Instance Count before SCM Decommission: 3</msg>
<status status="PASS" starttime="20230905 23:57:31.480" endtime="20230905 23:57:31.480"/>
</kw>
<kw name="Get Lines Containing String" library="String">
<var>${primordial_node}</var>
<arg>${result}</arg>
<arg>scm1</arg>
<doc>Returns lines of the given ``string`` that contain the ``pattern``.</doc>
<msg timestamp="20230905 23:57:31.481" level="INFO">1 out of 3 lines matched</msg>
<msg timestamp="20230905 23:57:31.481" level="INFO">${primordial_node} = scm1.org:9894:FOLLOWER:fb57cc56-339c-4f46-95d0-ad60bf43af0e:172.25.0.116</msg>
<status status="PASS" starttime="20230905 23:57:31.480" endtime="20230905 23:57:31.481"/>
</kw>
<kw name="Split String" library="String">
<var>${primordial_split}</var>
<arg>${primordial_node}</arg>
<arg>:</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20230905 23:57:31.481" level="INFO">${primordial_split} = ['scm1.org', '9894', 'FOLLOWER', 'fb57cc56-339c-4f46-95d0-ad60bf43af0e', '172.25.0.116']</msg>
<status status="PASS" starttime="20230905 23:57:31.481" endtime="20230905 23:57:31.481"/>
</kw>
<kw name="Strip String" library="String">
<var>${primordial_scmId}</var>
<arg>${primordial_split[3]}</arg>
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<msg timestamp="20230905 23:57:31.482" level="INFO">${primordial_scmId} = fb57cc56-339c-4f46-95d0-ad60bf43af0e</msg>
<status status="PASS" starttime="20230905 23:57:31.481" endtime="20230905 23:57:31.482"/>
</kw>
<kw name="Execute" library="os">
<var>${decommission_res}</var>
<arg>ozone admin scm decommission --nodeid=${primordial_scmId}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230905 23:57:31.486" level="INFO">Running command 'ozone admin scm decommission --nodeid=fb57cc56-339c-4f46-95d0-ad60bf43af0e 2&gt;&amp;1'.</msg>
<msg timestamp="20230905 23:57:38.145" level="INFO">${rc} = 0</msg>
<msg timestamp="20230905 23:57:38.145" level="INFO">${output} = Decommissioned Scm fb57cc56-339c-4f46-95d0-ad60bf43af0e</msg>
<status status="PASS" starttime="20230905 23:57:31.484" endtime="20230905 23:57:38.145"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230905 23:57:38.146" level="INFO">Decommissioned Scm fb57cc56-339c-4f46-95d0-ad60bf43af0e</msg>
<status status="PASS" starttime="20230905 23:57:38.145" endtime="20230905 23:57:38.146"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230905 23:57:38.147" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230905 23:57:38.146" endtime="20230905 23:57:38.147"/>
</kw>
<status status="PASS" starttime="20230905 23:57:31.483" endtime="20230905 23:57:38.147"/>
</kw>
<msg timestamp="20230905 23:57:38.147" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230905 23:57:31.483" endtime="20230905 23:57:38.147"/>
</kw>
<msg timestamp="20230905 23:57:38.147" level="INFO">${decommission_res} = Decommissioned Scm fb57cc56-339c-4f46-95d0-ad60bf43af0e</msg>
<status status="PASS" starttime="20230905 23:57:31.483" endtime="20230905 23:57:38.147"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${decommission_res}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230905 23:57:38.148" level="INFO">Decommissioned Scm fb57cc56-339c-4f46-95d0-ad60bf43af0e</msg>
<status status="PASS" starttime="20230905 23:57:38.147" endtime="20230905 23:57:38.148"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${decommission_res}</arg>
<arg>Decommissioned</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230905 23:57:38.148" endtime="20230905 23:57:38.148"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin scm roles --service-id=scmservice</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230905 23:57:38.153" level="INFO">Running command 'ozone admin scm roles --service-id=scmservice 2&gt;&amp;1'.</msg>
<msg timestamp="20230905 23:57:45.506" level="INFO">${rc} = 0</msg>
<msg timestamp="20230905 23:57:45.506" level="INFO">${output} = scm2.org:9894:LEADER:31cd6a0e-af2a-4d82-88c3-b2d97334ba59:172.25.0.117
scm3.org:9894:FOLLOWER:d36146ea-a3c2-4a41-a87a-9bfe3f412e7d:172.25.0.118</msg>
<status status="PASS" starttime="20230905 23:57:38.150" endtime="20230905 23:57:45.506"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230905 23:57:45.508" level="INFO">scm2.org:9894:LEADER:31cd6a0e-af2a-4d82-88c3-b2d97334ba59:172.25.0.117
scm3.org:9894:FOLLOWER:d36146ea-a3c2-4a41-a87a-9bfe3f412e7d:172.25.0.118</msg>
<status status="PASS" starttime="20230905 23:57:45.507" endtime="20230905 23:57:45.508"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230905 23:57:45.509" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230905 23:57:45.508" endtime="20230905 23:57:45.509"/>
</kw>
<status status="PASS" starttime="20230905 23:57:38.150" endtime="20230905 23:57:45.509"/>
</kw>
<msg timestamp="20230905 23:57:45.509" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230905 23:57:38.149" endtime="20230905 23:57:45.509"/>
</kw>
<msg timestamp="20230905 23:57:45.510" level="INFO">${result} = scm2.org:9894:LEADER:31cd6a0e-af2a-4d82-88c3-b2d97334ba59:172.25.0.117
scm3.org:9894:FOLLOWER:d36146ea-a3c2-4a41-a87a-9bfe3f412e7d:172.25.0.118</msg>
<status status="PASS" starttime="20230905 23:57:38.148" endtime="20230905 23:57:45.510"/>
</kw>
<kw name="Get Lines Matching Pattern" library="String">
<var>${nodes_in_quorum}</var>
<arg>${result}</arg>
<arg>scm[1234].org:9894:*</arg>
<doc>Returns lines of the given ``string`` that match the ``pattern``.</doc>
<msg timestamp="20230905 23:57:45.510" level="INFO">2 out of 2 lines matched</msg>
<msg timestamp="20230905 23:57:45.510" level="INFO">${nodes_in_quorum} = scm2.org:9894:LEADER:31cd6a0e-af2a-4d82-88c3-b2d97334ba59:172.25.0.117
scm3.org:9894:FOLLOWER:d36146ea-a3c2-4a41-a87a-9bfe3f412e7d:172.25.0.118</msg>
<status status="PASS" starttime="20230905 23:57:45.510" endtime="20230905 23:57:45.510"/>
</kw>
<kw name="Get Line Count" library="String">
<var>${node_count}</var>
<arg>${nodes_in_quorum}</arg>
<doc>Returns and logs the number of lines in the given string.</doc>
<msg timestamp="20230905 23:57:45.511" level="INFO">2 lines</msg>
<msg timestamp="20230905 23:57:45.511" level="INFO">${node_count} = 2</msg>
<status status="PASS" starttime="20230905 23:57:45.511" endtime="20230905 23:57:45.511"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${node_count_post}</var>
<arg>${node_count}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20230905 23:57:45.512" level="INFO">${node_count_post} = 2</msg>
<status status="PASS" starttime="20230905 23:57:45.511" endtime="20230905 23:57:45.512"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>SCM Instance Count after SCM Decommission: ${node_count_post}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230905 23:57:45.512" level="INFO">SCM Instance Count after SCM Decommission: 2</msg>
<status status="PASS" starttime="20230905 23:57:45.512" endtime="20230905 23:57:45.512"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${node_count_expect}</arg>
<arg>${node_count_post}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230905 23:57:45.513" endtime="20230905 23:57:45.513"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230905 23:57:24.770" endtime="20230905 23:57:45.513"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20230905 23:57:14.905" endtime="20230905 23:57:45.515"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="63457"/>
</suite>
<statistics>
<total>
<stat pass="7" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="7" fail="0" skip="0" id="s1" name="ozonesecure-ha-scm-decommission">ozonesecure-ha-scm-decommission</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1" name="Kinit">ozonesecure-ha-scm-decommission.Kinit</stat>
<stat pass="3" fail="0" skip="0" id="s1-s2" name="Primordial-Scm">ozonesecure-ha-scm-decommission.Primordial-Scm</stat>
<stat pass="1" fail="0" skip="0" id="s1-s3" name="Kinit">ozonesecure-ha-scm-decommission.Kinit</stat>
<stat pass="2" fail="0" skip="0" id="s1-s4" name="Scm-Decommission">ozonesecure-ha-scm-decommission.Scm-Decommission</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
