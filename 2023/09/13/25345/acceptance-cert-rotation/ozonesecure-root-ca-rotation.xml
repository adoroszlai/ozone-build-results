<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 6.1.1 (Python 3.8.10 on linux)" generated="20230913 13:24:57.678" rpa="false" schemaversion="4">
<suite id="s1" name="ozonesecure-root-ca-rotation">
<suite id="s1-s1" name="Kinit" source="/opt/hadoop/smoketest/kinit.robot">
<test id="s1-s1-t1" name="Kinit" line="27">
<kw name="Kinit test user" library="commonlib">
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 13:22:07.341" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 13:22:07.345" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 13:22:07.345" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230913 13:22:07.338" endtime="20230913 13:22:07.345"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 13:22:07.346" level="INFO">scm</msg>
<status status="PASS" starttime="20230913 13:22:07.345" endtime="20230913 13:22:07.346"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 13:22:07.347" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 13:22:07.346" endtime="20230913 13:22:07.347"/>
</kw>
<status status="PASS" starttime="20230913 13:22:07.337" endtime="20230913 13:22:07.347"/>
</kw>
<msg timestamp="20230913 13:22:07.347" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 13:22:07.337" endtime="20230913 13:22:07.347"/>
</kw>
<msg timestamp="20230913 13:22:07.347" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230913 13:22:07.336" endtime="20230913 13:22:07.347"/>
</kw>
<msg timestamp="20230913 13:22:07.348" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230913 13:22:07.336" endtime="20230913 13:22:07.348"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230913 13:22:07.348" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230913 13:22:07.348" endtime="20230913 13:22:07.348"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 13:22:07.354" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 13:22:07.369" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 13:22:07.369" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230913 13:22:07.350" endtime="20230913 13:22:07.369"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 13:22:07.370" level="INFO"/>
<status status="PASS" starttime="20230913 13:22:07.370" endtime="20230913 13:22:07.370"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 13:22:07.371" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 13:22:07.371" endtime="20230913 13:22:07.371"/>
</kw>
<status status="PASS" starttime="20230913 13:22:07.350" endtime="20230913 13:22:07.371"/>
</kw>
<msg timestamp="20230913 13:22:07.371" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 13:22:07.350" endtime="20230913 13:22:07.371"/>
</kw>
<status status="PASS" starttime="20230913 13:22:07.349" endtime="20230913 13:22:07.372"/>
</kw>
<status status="PASS" starttime="20230913 13:22:07.348" endtime="20230913 13:22:07.372"/>
</kw>
<status status="PASS" starttime="20230913 13:22:07.335" endtime="20230913 13:22:07.372"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20230913 13:22:07.334" endtime="20230913 13:22:07.372"/>
</test>
<doc>Kinit test user</doc>
<status status="PASS" starttime="20230913 13:22:07.287" endtime="20230913 13:22:07.374"/>
</suite>
<suite id="s1-s2" name="Root-Ca-Rotation-Client-Checks" source="/opt/hadoop/smoketest/certrotation/root-ca-rotation-client-checks.robot">
<test id="s1-s2-t1" name="Create a volume and bucket" line="27">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 13:22:34.003" level="INFO">Running command 'ozone sh volume create rootca-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 13:22:39.391" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 13:22:39.391" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230913 13:22:34.000" endtime="20230913 13:22:39.391"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 13:22:39.393" level="INFO"/>
<status status="PASS" starttime="20230913 13:22:39.392" endtime="20230913 13:22:39.393"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 13:22:39.394" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 13:22:39.393" endtime="20230913 13:22:39.394"/>
</kw>
<status status="PASS" starttime="20230913 13:22:34.000" endtime="20230913 13:22:39.394"/>
</kw>
<msg timestamp="20230913 13:22:39.394" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 13:22:33.999" endtime="20230913 13:22:39.394"/>
</kw>
<msg timestamp="20230913 13:22:39.394" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230913 13:22:33.999" endtime="20230913 13:22:39.394"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230913 13:22:39.395" endtime="20230913 13:22:39.395"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 13:22:39.400" level="INFO">Running command 'ozone sh bucket create /rootca-volume/rootca-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 13:22:45.449" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 13:22:45.449" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230913 13:22:39.397" endtime="20230913 13:22:45.449"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 13:22:45.455" level="INFO"/>
<status status="PASS" starttime="20230913 13:22:45.454" endtime="20230913 13:22:45.455"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 13:22:45.456" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 13:22:45.455" endtime="20230913 13:22:45.456"/>
</kw>
<status status="PASS" starttime="20230913 13:22:39.396" endtime="20230913 13:22:45.456"/>
</kw>
<msg timestamp="20230913 13:22:45.456" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 13:22:39.396" endtime="20230913 13:22:45.456"/>
</kw>
<msg timestamp="20230913 13:22:45.457" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230913 13:22:39.395" endtime="20230913 13:22:45.457"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230913 13:22:45.457" endtime="20230913 13:22:45.457"/>
</kw>
<tag>create-volume-and-bucket</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230913 13:22:33.998" endtime="20230913 13:22:45.458"/>
</test>
<test id="s1-s2-t2" name="Create key" line="34">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 13:22:45.478" level="INFO">Running command 'echo "rootca: key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20230913 13:22:45.483" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 13:22:45.483" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230913 13:22:45.468" endtime="20230913 13:22:45.483"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 13:22:45.484" level="INFO"/>
<status status="PASS" starttime="20230913 13:22:45.484" endtime="20230913 13:22:45.484"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 13:22:45.486" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 13:22:45.485" endtime="20230913 13:22:45.486"/>
</kw>
<status status="PASS" starttime="20230913 13:22:45.467" endtime="20230913 13:22:45.486"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 13:22:45.496" level="INFO">Running command 'ozone sh key put /rootca-volume/rootca-bucket/rootca-key /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 13:22:56.269" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 13:22:56.269" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230913 13:22:45.488" endtime="20230913 13:22:56.269"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 13:22:56.270" level="INFO"/>
<status status="PASS" starttime="20230913 13:22:56.269" endtime="20230913 13:22:56.270"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 13:22:56.271" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 13:22:56.270" endtime="20230913 13:22:56.271"/>
</kw>
<status status="PASS" starttime="20230913 13:22:45.487" endtime="20230913 13:22:56.271"/>
</kw>
<msg timestamp="20230913 13:22:56.271" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 13:22:45.487" endtime="20230913 13:22:56.271"/>
</kw>
<msg timestamp="20230913 13:22:56.271" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230913 13:22:45.486" endtime="20230913 13:22:56.271"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230913 13:22:56.272" endtime="20230913 13:22:56.272"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 13:22:56.276" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 13:22:56.279" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 13:22:56.279" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230913 13:22:56.273" endtime="20230913 13:22:56.279"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 13:22:56.280" level="INFO"/>
<status status="PASS" starttime="20230913 13:22:56.279" endtime="20230913 13:22:56.280"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 13:22:56.280" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 13:22:56.280" endtime="20230913 13:22:56.281"/>
</kw>
<status status="PASS" starttime="20230913 13:22:56.272" endtime="20230913 13:22:56.281"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230913 13:22:45.464" endtime="20230913 13:22:56.281"/>
</test>
<test id="s1-s2-t3" name="Read data from previously created key" line="40">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230913 13:22:56.283" level="INFO">${random} = 25568</msg>
<status status="PASS" starttime="20230913 13:22:56.283" endtime="20230913 13:22:56.283"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 13:22:56.287" level="INFO">Running command 'ozone sh key get /rootca-volume/rootca-bucket/rootca-key /tmp/key-25568 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 13:23:04.925" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 13:23:04.925" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230913 13:22:56.285" endtime="20230913 13:23:04.925"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 13:23:04.927" level="INFO"/>
<status status="PASS" starttime="20230913 13:23:04.926" endtime="20230913 13:23:04.927"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 13:23:04.927" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 13:23:04.927" endtime="20230913 13:23:04.927"/>
</kw>
<status status="PASS" starttime="20230913 13:22:56.285" endtime="20230913 13:23:04.927"/>
</kw>
<msg timestamp="20230913 13:23:04.928" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 13:22:56.284" endtime="20230913 13:23:04.928"/>
</kw>
<msg timestamp="20230913 13:23:04.928" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230913 13:22:56.284" endtime="20230913 13:23:04.928"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230913 13:23:04.928" endtime="20230913 13:23:04.928"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 13:23:04.932" level="INFO">Running command 'cat /tmp/key-25568 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 13:23:04.934" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 13:23:04.934" level="INFO">${output} = rootca: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230913 13:23:04.929" endtime="20230913 13:23:04.934"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 13:23:04.936" level="INFO">rootca: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230913 13:23:04.935" endtime="20230913 13:23:04.936"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 13:23:04.936" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 13:23:04.936" endtime="20230913 13:23:04.936"/>
</kw>
<msg timestamp="20230913 13:23:04.937" level="INFO">${output} = rootca: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230913 13:23:04.929" endtime="20230913 13:23:04.937"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230913 13:23:04.937" endtime="20230913 13:23:04.937"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 13:23:04.940" level="INFO">Running command 'rm /tmp/key-25568 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 13:23:04.943" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 13:23:04.943" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230913 13:23:04.938" endtime="20230913 13:23:04.943"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 13:23:04.944" level="INFO"/>
<status status="PASS" starttime="20230913 13:23:04.943" endtime="20230913 13:23:04.944"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 13:23:04.945" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 13:23:04.944" endtime="20230913 13:23:04.945"/>
</kw>
<status status="PASS" starttime="20230913 13:23:04.938" endtime="20230913 13:23:04.945"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230913 13:22:56.282" endtime="20230913 13:23:04.945"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20230913 13:22:33.948" endtime="20230913 13:23:04.947"/>
</suite>
<suite id="s1-s3" name="Root-Ca-Rotation-Client-Checks" source="/opt/hadoop/smoketest/certrotation/root-ca-rotation-client-checks.robot">
<test id="s1-s3-t1" name="Create a volume and bucket" line="27">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 13:24:06.223" level="INFO">Running command 'ozone sh volume create rootca2-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 13:24:11.575" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 13:24:11.575" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230913 13:24:06.220" endtime="20230913 13:24:11.575"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 13:24:11.577" level="INFO"/>
<status status="PASS" starttime="20230913 13:24:11.576" endtime="20230913 13:24:11.577"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 13:24:11.577" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 13:24:11.577" endtime="20230913 13:24:11.578"/>
</kw>
<status status="PASS" starttime="20230913 13:24:06.220" endtime="20230913 13:24:11.578"/>
</kw>
<msg timestamp="20230913 13:24:11.578" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 13:24:06.220" endtime="20230913 13:24:11.578"/>
</kw>
<msg timestamp="20230913 13:24:11.578" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230913 13:24:06.219" endtime="20230913 13:24:11.578"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230913 13:24:11.578" endtime="20230913 13:24:11.579"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 13:24:11.583" level="INFO">Running command 'ozone sh bucket create /rootca2-volume/rootca2-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 13:24:18.170" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 13:24:18.170" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230913 13:24:11.580" endtime="20230913 13:24:18.170"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 13:24:18.171" level="INFO"/>
<status status="PASS" starttime="20230913 13:24:18.171" endtime="20230913 13:24:18.172"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 13:24:18.172" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 13:24:18.172" endtime="20230913 13:24:18.172"/>
</kw>
<status status="PASS" starttime="20230913 13:24:11.580" endtime="20230913 13:24:18.173"/>
</kw>
<msg timestamp="20230913 13:24:18.173" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 13:24:11.580" endtime="20230913 13:24:18.173"/>
</kw>
<msg timestamp="20230913 13:24:18.173" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230913 13:24:11.579" endtime="20230913 13:24:18.173"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230913 13:24:18.173" endtime="20230913 13:24:18.174"/>
</kw>
<tag>create-volume-and-bucket</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230913 13:24:06.212" endtime="20230913 13:24:18.174"/>
</test>
<test id="s1-s3-t2" name="Create key" line="34">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 13:24:18.180" level="INFO">Running command 'echo "rootca2: key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20230913 13:24:18.182" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 13:24:18.182" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230913 13:24:18.177" endtime="20230913 13:24:18.182"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 13:24:18.183" level="INFO"/>
<status status="PASS" starttime="20230913 13:24:18.183" endtime="20230913 13:24:18.184"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 13:24:18.184" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 13:24:18.184" endtime="20230913 13:24:18.184"/>
</kw>
<status status="PASS" starttime="20230913 13:24:18.177" endtime="20230913 13:24:18.184"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 13:24:18.189" level="INFO">Running command 'ozone sh key put /rootca2-volume/rootca2-bucket/rootca2-key /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 13:24:26.428" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 13:24:26.428" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230913 13:24:18.186" endtime="20230913 13:24:26.428"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 13:24:26.429" level="INFO"/>
<status status="PASS" starttime="20230913 13:24:26.428" endtime="20230913 13:24:26.429"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 13:24:26.430" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 13:24:26.429" endtime="20230913 13:24:26.430"/>
</kw>
<status status="PASS" starttime="20230913 13:24:18.186" endtime="20230913 13:24:26.430"/>
</kw>
<msg timestamp="20230913 13:24:26.430" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 13:24:18.185" endtime="20230913 13:24:26.430"/>
</kw>
<msg timestamp="20230913 13:24:26.431" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230913 13:24:18.185" endtime="20230913 13:24:26.431"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230913 13:24:26.431" endtime="20230913 13:24:26.431"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 13:24:26.434" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 13:24:26.437" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 13:24:26.438" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230913 13:24:26.432" endtime="20230913 13:24:26.438"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 13:24:26.439" level="INFO"/>
<status status="PASS" starttime="20230913 13:24:26.438" endtime="20230913 13:24:26.439"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 13:24:26.440" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 13:24:26.439" endtime="20230913 13:24:26.440"/>
</kw>
<status status="PASS" starttime="20230913 13:24:26.431" endtime="20230913 13:24:26.440"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230913 13:24:18.176" endtime="20230913 13:24:26.440"/>
</test>
<test id="s1-s3-t3" name="Read data from previously created key" line="40">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230913 13:24:26.443" level="INFO">${random} = 37317</msg>
<status status="PASS" starttime="20230913 13:24:26.442" endtime="20230913 13:24:26.443"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 13:24:26.448" level="INFO">Running command 'ozone sh key get /rootca2-volume/rootca2-bucket/rootca2-key /tmp/key-37317 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 13:24:34.373" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 13:24:34.374" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230913 13:24:26.445" endtime="20230913 13:24:34.374"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 13:24:34.375" level="INFO"/>
<status status="PASS" starttime="20230913 13:24:34.374" endtime="20230913 13:24:34.375"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 13:24:34.376" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 13:24:34.375" endtime="20230913 13:24:34.376"/>
</kw>
<status status="PASS" starttime="20230913 13:24:26.444" endtime="20230913 13:24:34.376"/>
</kw>
<msg timestamp="20230913 13:24:34.376" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 13:24:26.444" endtime="20230913 13:24:34.376"/>
</kw>
<msg timestamp="20230913 13:24:34.377" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230913 13:24:26.443" endtime="20230913 13:24:34.377"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230913 13:24:34.377" endtime="20230913 13:24:34.377"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 13:24:34.382" level="INFO">Running command 'cat /tmp/key-37317 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 13:24:34.384" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 13:24:34.384" level="INFO">${output} = rootca2: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230913 13:24:34.378" endtime="20230913 13:24:34.384"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 13:24:34.386" level="INFO">rootca2: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230913 13:24:34.385" endtime="20230913 13:24:34.386"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 13:24:34.386" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 13:24:34.386" endtime="20230913 13:24:34.386"/>
</kw>
<msg timestamp="20230913 13:24:34.387" level="INFO">${output} = rootca2: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230913 13:24:34.378" endtime="20230913 13:24:34.387"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230913 13:24:34.387" endtime="20230913 13:24:34.387"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 13:24:34.390" level="INFO">Running command 'rm /tmp/key-37317 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 13:24:34.393" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 13:24:34.393" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230913 13:24:34.388" endtime="20230913 13:24:34.393"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 13:24:34.394" level="INFO"/>
<status status="PASS" starttime="20230913 13:24:34.394" endtime="20230913 13:24:34.394"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 13:24:34.395" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 13:24:34.395" endtime="20230913 13:24:34.395"/>
</kw>
<status status="PASS" starttime="20230913 13:24:34.387" endtime="20230913 13:24:34.395"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230913 13:24:26.441" endtime="20230913 13:24:34.396"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20230913 13:24:06.156" endtime="20230913 13:24:34.397"/>
</suite>
<suite id="s1-s4" name="Root-Ca-Rotation" source="/opt/hadoop/smoketest/scmha/root-ca-rotation.robot">
<test id="s1-s4-t1" name="Verify root CA rotation metrics" line="26">
<kw name="Execute" library="os">
<var>${successRotationLine}</var>
<arg>curl -sS 'http://localhost:9876/jmx' | grep NumSuccessRotation</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 13:24:37.796" level="INFO">Running command 'curl -sS 'http://localhost:9876/jmx' | grep NumSuccessRotation 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 13:24:38.325" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 13:24:38.325" level="INFO">${output} =     "NumSuccessRotation" : 2,</msg>
<status status="PASS" starttime="20230913 13:24:37.793" endtime="20230913 13:24:38.325"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 13:24:38.327" level="INFO">    "NumSuccessRotation" : 2,</msg>
<status status="PASS" starttime="20230913 13:24:38.325" endtime="20230913 13:24:38.327"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 13:24:38.327" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 13:24:38.327" endtime="20230913 13:24:38.327"/>
</kw>
<status status="PASS" starttime="20230913 13:24:37.793" endtime="20230913 13:24:38.328"/>
</kw>
<msg timestamp="20230913 13:24:38.328" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 13:24:37.792" endtime="20230913 13:24:38.328"/>
</kw>
<msg timestamp="20230913 13:24:38.328" level="INFO">${successRotationLine} =     "NumSuccessRotation" : 2,</msg>
<status status="PASS" starttime="20230913 13:24:37.792" endtime="20230913 13:24:38.328"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${successRotationLine}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 13:24:38.329" level="INFO">    "NumSuccessRotation" : 2,</msg>
<status status="PASS" starttime="20230913 13:24:38.328" endtime="20230913 13:24:38.329"/>
</kw>
<kw name="Split String" library="String">
<var>${temp_1}</var>
<arg>${successRotationLine}</arg>
<arg>:</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20230913 13:24:38.330" level="INFO">${temp_1} = ['    "NumSuccessRotation" ', ' 2,']</msg>
<status status="PASS" starttime="20230913 13:24:38.329" endtime="20230913 13:24:38.330"/>
</kw>
<kw name="Strip String" library="String">
<var>${temp_2}</var>
<arg>${temp_1[1]}</arg>
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<msg timestamp="20230913 13:24:38.332" level="INFO">${temp_2} = 2,</msg>
<status status="PASS" starttime="20230913 13:24:38.330" endtime="20230913 13:24:38.332"/>
</kw>
<kw name="Split String" library="String">
<var>${temp_3}</var>
<arg>${temp_2}</arg>
<arg>,</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20230913 13:24:38.333" level="INFO">${temp_3} = ['2', '']</msg>
<status status="PASS" starttime="20230913 13:24:38.332" endtime="20230913 13:24:38.333"/>
</kw>
<kw name="Strip String" library="String">
<var>${successRotation}</var>
<arg>${temp_3[0]}</arg>
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<msg timestamp="20230913 13:24:38.334" level="INFO">${successRotation} = 2</msg>
<status status="PASS" starttime="20230913 13:24:38.333" endtime="20230913 13:24:38.334"/>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<var>${successRotation}</var>
<arg>${successRotation}</arg>
<doc>Converts the given item to a floating point number.</doc>
<msg timestamp="20230913 13:24:38.335" level="INFO">${successRotation} = 2.0</msg>
<status status="PASS" starttime="20230913 13:24:38.334" endtime="20230913 13:24:38.335"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${successRotation} &gt;= 1</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230913 13:24:38.335" endtime="20230913 13:24:38.336"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230913 13:24:37.791" endtime="20230913 13:24:38.336"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20230913 13:24:37.740" endtime="20230913 13:24:38.337"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="59924"/>
</suite>
<statistics>
<total>
<stat pass="8" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="2" fail="0" skip="0">create-volume-and-bucket</stat>
</tag>
<suite>
<stat pass="8" fail="0" skip="0" id="s1" name="ozonesecure-root-ca-rotation">ozonesecure-root-ca-rotation</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1" name="Kinit">ozonesecure-root-ca-rotation.Kinit</stat>
<stat pass="3" fail="0" skip="0" id="s1-s2" name="Root-Ca-Rotation-Client-Checks">ozonesecure-root-ca-rotation.Root-Ca-Rotation-Client-Checks</stat>
<stat pass="3" fail="0" skip="0" id="s1-s3" name="Root-Ca-Rotation-Client-Checks">ozonesecure-root-ca-rotation.Root-Ca-Rotation-Client-Checks</stat>
<stat pass="1" fail="0" skip="0" id="s1-s4" name="Root-Ca-Rotation">ozonesecure-root-ca-rotation.Root-Ca-Rotation</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
