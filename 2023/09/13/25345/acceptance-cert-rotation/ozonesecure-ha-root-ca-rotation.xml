<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 6.1.1 (Python 3.8.10 on linux)" generated="20230913 13:16:19.285" rpa="false" schemaversion="4">
<suite id="s1" name="ozonesecure-ha-root-ca-rotation">
<suite id="s1-s1" name="Kinit" source="/opt/hadoop/smoketest/kinit.robot">
<test id="s1-s1-t1" name="Kinit" line="27">
<kw name="Kinit test user" library="commonlib">
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 13:09:16.766" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 13:09:16.772" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 13:09:16.772" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230913 13:09:16.762" endtime="20230913 13:09:16.773"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 13:09:16.774" level="INFO">scm</msg>
<status status="PASS" starttime="20230913 13:09:16.773" endtime="20230913 13:09:16.774"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 13:09:16.775" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 13:09:16.775" endtime="20230913 13:09:16.775"/>
</kw>
<status status="PASS" starttime="20230913 13:09:16.761" endtime="20230913 13:09:16.775"/>
</kw>
<msg timestamp="20230913 13:09:16.775" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 13:09:16.761" endtime="20230913 13:09:16.776"/>
</kw>
<msg timestamp="20230913 13:09:16.776" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230913 13:09:16.761" endtime="20230913 13:09:16.776"/>
</kw>
<msg timestamp="20230913 13:09:16.776" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230913 13:09:16.760" endtime="20230913 13:09:16.776"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230913 13:09:16.777" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230913 13:09:16.776" endtime="20230913 13:09:16.777"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 13:09:16.782" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 13:09:16.867" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 13:09:16.867" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230913 13:09:16.779" endtime="20230913 13:09:16.867"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 13:09:16.868" level="INFO"/>
<status status="PASS" starttime="20230913 13:09:16.867" endtime="20230913 13:09:16.868"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 13:09:16.869" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 13:09:16.869" endtime="20230913 13:09:16.869"/>
</kw>
<status status="PASS" starttime="20230913 13:09:16.778" endtime="20230913 13:09:16.869"/>
</kw>
<msg timestamp="20230913 13:09:16.869" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 13:09:16.778" endtime="20230913 13:09:16.870"/>
</kw>
<status status="PASS" starttime="20230913 13:09:16.777" endtime="20230913 13:09:16.870"/>
</kw>
<status status="PASS" starttime="20230913 13:09:16.777" endtime="20230913 13:09:16.870"/>
</kw>
<status status="PASS" starttime="20230913 13:09:16.759" endtime="20230913 13:09:16.870"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20230913 13:09:16.756" endtime="20230913 13:09:16.870"/>
</test>
<doc>Kinit test user</doc>
<status status="PASS" starttime="20230913 13:09:16.694" endtime="20230913 13:09:16.871"/>
</suite>
<suite id="s1-s2" name="Scm-Leader-Transfer" source="/opt/hadoop/smoketest/scmha/scm-leader-transfer.robot">
<test id="s1-s2-t1" name="Transfer Leadership" line="47">
<kw name="Get SCM Leader Node">
<var>${leaderSCM}</var>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin scm roles --service-id=scmservice</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 13:09:32.092" level="INFO">Running command 'ozone admin scm roles --service-id=scmservice 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 13:09:39.210" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 13:09:39.210" level="INFO">${output} = scm3.org:9894:FOLLOWER:b83fa7a8-6c51-4c95-99cf-62efdfe8c904:172.25.0.118
scm1.org:9894:LEADER:0cc1d21c-2e60-43d4-a58e-73c906200f60:172.25.0.116
scm2.org:9894:FOLLOWER:4e0886df-1ef6-4479-a384-91ff74f0e...</msg>
<status status="PASS" starttime="20230913 13:09:32.088" endtime="20230913 13:09:39.210"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 13:09:39.212" level="INFO">scm3.org:9894:FOLLOWER:b83fa7a8-6c51-4c95-99cf-62efdfe8c904:172.25.0.118
scm1.org:9894:LEADER:0cc1d21c-2e60-43d4-a58e-73c906200f60:172.25.0.116
scm2.org:9894:FOLLOWER:4e0886df-1ef6-4479-a384-91ff74f0e91c:172.25.0.117</msg>
<status status="PASS" starttime="20230913 13:09:39.211" endtime="20230913 13:09:39.212"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 13:09:39.213" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 13:09:39.212" endtime="20230913 13:09:39.213"/>
</kw>
<status status="PASS" starttime="20230913 13:09:32.088" endtime="20230913 13:09:39.213"/>
</kw>
<msg timestamp="20230913 13:09:39.213" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 13:09:32.087" endtime="20230913 13:09:39.213"/>
</kw>
<msg timestamp="20230913 13:09:39.214" level="INFO">${result} = scm3.org:9894:FOLLOWER:b83fa7a8-6c51-4c95-99cf-62efdfe8c904:172.25.0.118
scm1.org:9894:LEADER:0cc1d21c-2e60-43d4-a58e-73c906200f60:172.25.0.116
scm2.org:9894:FOLLOWER:4e0886df-1ef6-4479-a384-91ff74f0e...</msg>
<status status="PASS" starttime="20230913 13:09:32.087" endtime="20230913 13:09:39.214"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 13:09:39.214" level="INFO">scm3.org:9894:FOLLOWER:b83fa7a8-6c51-4c95-99cf-62efdfe8c904:172.25.0.118
scm1.org:9894:LEADER:0cc1d21c-2e60-43d4-a58e-73c906200f60:172.25.0.116
scm2.org:9894:FOLLOWER:4e0886df-1ef6-4479-a384-91ff74f0e91c:172.25.0.117</msg>
<status status="PASS" starttime="20230913 13:09:39.214" endtime="20230913 13:09:39.214"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>LEADER</arg>
<arg>1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230913 13:09:39.214" endtime="20230913 13:09:39.215"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>FOLLOWER</arg>
<arg>2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230913 13:09:39.215" endtime="20230913 13:09:39.216"/>
</kw>
<kw name="Get Lines Containing String" library="String">
<var>${scmLine}</var>
<arg>${result}</arg>
<arg>LEADER</arg>
<doc>Returns lines of the given ``string`` that contain the ``pattern``.</doc>
<msg timestamp="20230913 13:09:39.216" level="INFO">1 out of 3 lines matched</msg>
<msg timestamp="20230913 13:09:39.216" level="INFO">${scmLine} = scm1.org:9894:LEADER:0cc1d21c-2e60-43d4-a58e-73c906200f60:172.25.0.116</msg>
<status status="PASS" starttime="20230913 13:09:39.216" endtime="20230913 13:09:39.216"/>
</kw>
<kw name="Split String" library="String">
<var>${splits}</var>
<arg>${scmLine}</arg>
<arg>:</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20230913 13:09:39.217" level="INFO">${splits} = ['scm1.org', '9894', 'LEADER', '0cc1d21c-2e60-43d4-a58e-73c906200f60', '172.25.0.116']</msg>
<status status="PASS" starttime="20230913 13:09:39.216" endtime="20230913 13:09:39.217"/>
</kw>
<kw name="Strip String" library="String">
<var>${leaderSCM}</var>
<arg>${splits[3]}</arg>
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<msg timestamp="20230913 13:09:39.219" level="INFO">${leaderSCM} = 0cc1d21c-2e60-43d4-a58e-73c906200f60</msg>
<status status="PASS" starttime="20230913 13:09:39.217" endtime="20230913 13:09:39.219"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Leader SCM: ${leaderSCM}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 13:09:39.220" level="INFO">Leader SCM: 0cc1d21c-2e60-43d4-a58e-73c906200f60</msg>
<status status="PASS" starttime="20230913 13:09:39.219" endtime="20230913 13:09:39.220"/>
</kw>
<msg timestamp="20230913 13:09:39.220" level="INFO">${leaderSCM} = 0cc1d21c-2e60-43d4-a58e-73c906200f60</msg>
<status status="PASS" starttime="20230913 13:09:32.086" endtime="20230913 13:09:39.220"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Leader SCM: ${leaderSCM}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 13:09:39.220" level="INFO">Leader SCM: 0cc1d21c-2e60-43d4-a58e-73c906200f60</msg>
<status status="PASS" starttime="20230913 13:09:39.220" endtime="20230913 13:09:39.220"/>
</kw>
<kw name="Get SCM UUID">
<var>${target_scm_uuid}</var>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin scm roles --service-id=scmservice</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 13:09:39.226" level="INFO">Running command 'ozone admin scm roles --service-id=scmservice 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 13:09:45.868" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 13:09:45.868" level="INFO">${output} = scm3.org:9894:FOLLOWER:b83fa7a8-6c51-4c95-99cf-62efdfe8c904:172.25.0.118
scm1.org:9894:LEADER:0cc1d21c-2e60-43d4-a58e-73c906200f60:172.25.0.116
scm2.org:9894:FOLLOWER:4e0886df-1ef6-4479-a384-91ff74f0e...</msg>
<status status="PASS" starttime="20230913 13:09:39.222" endtime="20230913 13:09:45.868"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 13:09:45.870" level="INFO">scm3.org:9894:FOLLOWER:b83fa7a8-6c51-4c95-99cf-62efdfe8c904:172.25.0.118
scm1.org:9894:LEADER:0cc1d21c-2e60-43d4-a58e-73c906200f60:172.25.0.116
scm2.org:9894:FOLLOWER:4e0886df-1ef6-4479-a384-91ff74f0e91c:172.25.0.117</msg>
<status status="PASS" starttime="20230913 13:09:45.869" endtime="20230913 13:09:45.870"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 13:09:45.871" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 13:09:45.870" endtime="20230913 13:09:45.871"/>
</kw>
<status status="PASS" starttime="20230913 13:09:39.222" endtime="20230913 13:09:45.871"/>
</kw>
<msg timestamp="20230913 13:09:45.871" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 13:09:39.221" endtime="20230913 13:09:45.871"/>
</kw>
<msg timestamp="20230913 13:09:45.872" level="INFO">${result} = scm3.org:9894:FOLLOWER:b83fa7a8-6c51-4c95-99cf-62efdfe8c904:172.25.0.118
scm1.org:9894:LEADER:0cc1d21c-2e60-43d4-a58e-73c906200f60:172.25.0.116
scm2.org:9894:FOLLOWER:4e0886df-1ef6-4479-a384-91ff74f0e...</msg>
<status status="PASS" starttime="20230913 13:09:39.221" endtime="20230913 13:09:45.872"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 13:09:45.872" level="INFO">scm3.org:9894:FOLLOWER:b83fa7a8-6c51-4c95-99cf-62efdfe8c904:172.25.0.118
scm1.org:9894:LEADER:0cc1d21c-2e60-43d4-a58e-73c906200f60:172.25.0.116
scm2.org:9894:FOLLOWER:4e0886df-1ef6-4479-a384-91ff74f0e91c:172.25.0.117</msg>
<status status="PASS" starttime="20230913 13:09:45.872" endtime="20230913 13:09:45.872"/>
</kw>
<kw name="Get Lines Containing String" library="String">
<var>${scm_line}</var>
<arg>${result}</arg>
<arg>${TARGET_SCM}</arg>
<doc>Returns lines of the given ``string`` that contain the ``pattern``.</doc>
<msg timestamp="20230913 13:09:45.873" level="INFO">1 out of 3 lines matched</msg>
<msg timestamp="20230913 13:09:45.873" level="INFO">${scm_line} = scm2.org:9894:FOLLOWER:4e0886df-1ef6-4479-a384-91ff74f0e91c:172.25.0.117</msg>
<status status="PASS" starttime="20230913 13:09:45.873" endtime="20230913 13:09:45.873"/>
</kw>
<kw name="Split String" library="String">
<var>${scm_split}</var>
<arg>${scm_line}</arg>
<arg>:</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20230913 13:09:45.874" level="INFO">${scm_split} = ['scm2.org', '9894', 'FOLLOWER', '4e0886df-1ef6-4479-a384-91ff74f0e91c', '172.25.0.117']</msg>
<status status="PASS" starttime="20230913 13:09:45.873" endtime="20230913 13:09:45.874"/>
</kw>
<kw name="Strip String" library="String">
<var>${scm_uuid}</var>
<arg>${scm_split[3]}</arg>
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<msg timestamp="20230913 13:09:45.875" level="INFO">${scm_uuid} = 4e0886df-1ef6-4479-a384-91ff74f0e91c</msg>
<status status="PASS" starttime="20230913 13:09:45.874" endtime="20230913 13:09:45.875"/>
</kw>
<msg timestamp="20230913 13:09:45.875" level="INFO">${target_scm_uuid} = 4e0886df-1ef6-4479-a384-91ff74f0e91c</msg>
<status status="PASS" starttime="20230913 13:09:39.221" endtime="20230913 13:09:45.875"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin scm transfer --service-id=scmservice -n ${target_scm_uuid}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 13:09:45.880" level="INFO">Running command 'ozone admin scm transfer --service-id=scmservice -n 4e0886df-1ef6-4479-a384-91ff74f0e91c 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 13:09:56.461" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 13:09:56.461" level="INFO">${output} = Transfer leadership successfully to 4e0886df-1ef6-4479-a384-91ff74f0e91c.</msg>
<status status="PASS" starttime="20230913 13:09:45.877" endtime="20230913 13:09:56.461"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 13:09:56.463" level="INFO">Transfer leadership successfully to 4e0886df-1ef6-4479-a384-91ff74f0e91c.</msg>
<status status="PASS" starttime="20230913 13:09:56.462" endtime="20230913 13:09:56.463"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 13:09:56.464" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 13:09:56.463" endtime="20230913 13:09:56.464"/>
</kw>
<status status="PASS" starttime="20230913 13:09:45.877" endtime="20230913 13:09:56.464"/>
</kw>
<msg timestamp="20230913 13:09:56.464" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 13:09:45.876" endtime="20230913 13:09:56.464"/>
</kw>
<msg timestamp="20230913 13:09:56.464" level="INFO">${result} = Transfer leadership successfully to 4e0886df-1ef6-4479-a384-91ff74f0e91c.</msg>
<status status="PASS" starttime="20230913 13:09:45.876" endtime="20230913 13:09:56.464"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 13:09:56.465" level="INFO">Transfer leadership successfully to 4e0886df-1ef6-4479-a384-91ff74f0e91c.</msg>
<status status="PASS" starttime="20230913 13:09:56.464" endtime="20230913 13:09:56.465"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Transfer leadership successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230913 13:09:56.465" endtime="20230913 13:09:56.465"/>
</kw>
<kw name="Get SCM Leader Node">
<var>${newLeaderSCM}</var>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin scm roles --service-id=scmservice</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 13:09:56.470" level="INFO">Running command 'ozone admin scm roles --service-id=scmservice 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 13:10:05.099" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 13:10:05.099" level="INFO">${output} = scm3.org:9894:FOLLOWER:b83fa7a8-6c51-4c95-99cf-62efdfe8c904:172.25.0.118
scm1.org:9894:FOLLOWER:0cc1d21c-2e60-43d4-a58e-73c906200f60:172.25.0.116
scm2.org:9894:LEADER:4e0886df-1ef6-4479-a384-91ff74f0e...</msg>
<status status="PASS" starttime="20230913 13:09:56.467" endtime="20230913 13:10:05.099"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 13:10:05.101" level="INFO">scm3.org:9894:FOLLOWER:b83fa7a8-6c51-4c95-99cf-62efdfe8c904:172.25.0.118
scm1.org:9894:FOLLOWER:0cc1d21c-2e60-43d4-a58e-73c906200f60:172.25.0.116
scm2.org:9894:LEADER:4e0886df-1ef6-4479-a384-91ff74f0e91c:172.25.0.117</msg>
<status status="PASS" starttime="20230913 13:10:05.100" endtime="20230913 13:10:05.101"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 13:10:05.102" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 13:10:05.101" endtime="20230913 13:10:05.102"/>
</kw>
<status status="PASS" starttime="20230913 13:09:56.467" endtime="20230913 13:10:05.102"/>
</kw>
<msg timestamp="20230913 13:10:05.102" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 13:09:56.466" endtime="20230913 13:10:05.102"/>
</kw>
<msg timestamp="20230913 13:10:05.103" level="INFO">${result} = scm3.org:9894:FOLLOWER:b83fa7a8-6c51-4c95-99cf-62efdfe8c904:172.25.0.118
scm1.org:9894:FOLLOWER:0cc1d21c-2e60-43d4-a58e-73c906200f60:172.25.0.116
scm2.org:9894:LEADER:4e0886df-1ef6-4479-a384-91ff74f0e...</msg>
<status status="PASS" starttime="20230913 13:09:56.466" endtime="20230913 13:10:05.103"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 13:10:05.103" level="INFO">scm3.org:9894:FOLLOWER:b83fa7a8-6c51-4c95-99cf-62efdfe8c904:172.25.0.118
scm1.org:9894:FOLLOWER:0cc1d21c-2e60-43d4-a58e-73c906200f60:172.25.0.116
scm2.org:9894:LEADER:4e0886df-1ef6-4479-a384-91ff74f0e91c:172.25.0.117</msg>
<status status="PASS" starttime="20230913 13:10:05.103" endtime="20230913 13:10:05.103"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>LEADER</arg>
<arg>1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230913 13:10:05.103" endtime="20230913 13:10:05.104"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>FOLLOWER</arg>
<arg>2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230913 13:10:05.104" endtime="20230913 13:10:05.104"/>
</kw>
<kw name="Get Lines Containing String" library="String">
<var>${scmLine}</var>
<arg>${result}</arg>
<arg>LEADER</arg>
<doc>Returns lines of the given ``string`` that contain the ``pattern``.</doc>
<msg timestamp="20230913 13:10:05.105" level="INFO">1 out of 3 lines matched</msg>
<msg timestamp="20230913 13:10:05.105" level="INFO">${scmLine} = scm2.org:9894:LEADER:4e0886df-1ef6-4479-a384-91ff74f0e91c:172.25.0.117</msg>
<status status="PASS" starttime="20230913 13:10:05.104" endtime="20230913 13:10:05.105"/>
</kw>
<kw name="Split String" library="String">
<var>${splits}</var>
<arg>${scmLine}</arg>
<arg>:</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20230913 13:10:05.105" level="INFO">${splits} = ['scm2.org', '9894', 'LEADER', '4e0886df-1ef6-4479-a384-91ff74f0e91c', '172.25.0.117']</msg>
<status status="PASS" starttime="20230913 13:10:05.105" endtime="20230913 13:10:05.106"/>
</kw>
<kw name="Strip String" library="String">
<var>${leaderSCM}</var>
<arg>${splits[3]}</arg>
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<msg timestamp="20230913 13:10:05.107" level="INFO">${leaderSCM} = 4e0886df-1ef6-4479-a384-91ff74f0e91c</msg>
<status status="PASS" starttime="20230913 13:10:05.106" endtime="20230913 13:10:05.107"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Leader SCM: ${leaderSCM}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 13:10:05.107" level="INFO">Leader SCM: 4e0886df-1ef6-4479-a384-91ff74f0e91c</msg>
<status status="PASS" starttime="20230913 13:10:05.107" endtime="20230913 13:10:05.108"/>
</kw>
<msg timestamp="20230913 13:10:05.108" level="INFO">${newLeaderSCM} = 4e0886df-1ef6-4479-a384-91ff74f0e91c</msg>
<status status="PASS" starttime="20230913 13:09:56.465" endtime="20230913 13:10:05.108"/>
</kw>
<kw name="Should Not Be Equal" library="BuiltIn">
<arg>${leaderSCM}</arg>
<arg>${newLeaderSCM}</arg>
<doc>Fails if the given objects are equal.</doc>
<status status="PASS" starttime="20230913 13:10:05.108" endtime="20230913 13:10:05.108"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230913 13:09:32.086" endtime="20230913 13:10:05.109"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20230913 13:09:32.027" endtime="20230913 13:10:05.110"/>
</suite>
<suite id="s1-s3" name="Root-Ca-Rotation-Client-Checks" source="/opt/hadoop/smoketest/certrotation/root-ca-rotation-client-checks.robot">
<test id="s1-s3-t1" name="Create a volume and bucket" line="27">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 13:10:12.712" level="INFO">Running command 'ozone sh volume create rootca-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 13:10:20.944" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 13:10:20.944" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230913 13:10:12.708" endtime="20230913 13:10:20.944"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 13:10:20.945" level="INFO"/>
<status status="PASS" starttime="20230913 13:10:20.944" endtime="20230913 13:10:20.945"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 13:10:20.953" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 13:10:20.945" endtime="20230913 13:10:20.953"/>
</kw>
<status status="PASS" starttime="20230913 13:10:12.708" endtime="20230913 13:10:20.953"/>
</kw>
<msg timestamp="20230913 13:10:20.954" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 13:10:12.707" endtime="20230913 13:10:20.954"/>
</kw>
<msg timestamp="20230913 13:10:20.954" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230913 13:10:12.706" endtime="20230913 13:10:20.954"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230913 13:10:20.954" endtime="20230913 13:10:20.955"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 13:10:20.962" level="INFO">Running command 'ozone sh bucket create /rootca-volume/rootca-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 13:10:29.123" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 13:10:29.123" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230913 13:10:20.957" endtime="20230913 13:10:29.123"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 13:10:29.125" level="INFO"/>
<status status="PASS" starttime="20230913 13:10:29.124" endtime="20230913 13:10:29.125"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 13:10:29.126" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 13:10:29.125" endtime="20230913 13:10:29.126"/>
</kw>
<status status="PASS" starttime="20230913 13:10:20.957" endtime="20230913 13:10:29.126"/>
</kw>
<msg timestamp="20230913 13:10:29.126" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 13:10:20.956" endtime="20230913 13:10:29.126"/>
</kw>
<msg timestamp="20230913 13:10:29.127" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230913 13:10:20.955" endtime="20230913 13:10:29.127"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230913 13:10:29.127" endtime="20230913 13:10:29.127"/>
</kw>
<tag>create-volume-and-bucket</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230913 13:10:12.705" endtime="20230913 13:10:29.128"/>
</test>
<test id="s1-s3-t2" name="Create key" line="34">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 13:10:29.134" level="INFO">Running command 'echo "rootca: key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20230913 13:10:29.136" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 13:10:29.136" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230913 13:10:29.131" endtime="20230913 13:10:29.136"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 13:10:29.138" level="INFO"/>
<status status="PASS" starttime="20230913 13:10:29.137" endtime="20230913 13:10:29.138"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 13:10:29.138" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 13:10:29.138" endtime="20230913 13:10:29.138"/>
</kw>
<status status="PASS" starttime="20230913 13:10:29.130" endtime="20230913 13:10:29.139"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 13:10:29.145" level="INFO">Running command 'ozone sh key put /rootca-volume/rootca-bucket/rootca-key /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 13:15:29.131" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20230913 13:10:29.141" endtime="20230913 13:15:29.131"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230913 13:15:29.132" endtime="20230913 13:15:29.132"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20230913 13:15:29.132" endtime="20230913 13:15:29.132"/>
</kw>
<status status="FAIL" starttime="20230913 13:10:29.140" endtime="20230913 13:15:29.132"/>
</kw>
<msg timestamp="20230913 13:15:29.133" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20230913 13:10:29.140" endtime="20230913 13:15:29.133"/>
</kw>
<status status="FAIL" starttime="20230913 13:10:29.139" endtime="20230913 13:15:29.133"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230913 13:15:29.133" endtime="20230913 13:15:29.133"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<status status="NOT RUN" starttime="20230913 13:15:29.133" endtime="20230913 13:15:29.134"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20230913 13:10:29.129" endtime="20230913 13:15:29.134">Test timeout 5 minutes exceeded.</status>
</test>
<test id="s1-s3-t3" name="Read data from previously created key" line="40">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230913 13:15:29.138" level="INFO">${random} = 12100</msg>
<status status="PASS" starttime="20230913 13:15:29.137" endtime="20230913 13:15:29.138"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 13:15:29.149" level="INFO">Running command 'ozone sh key get /rootca-volume/rootca-bucket/rootca-key /tmp/key-12100 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 13:15:40.679" level="INFO">${rc} = 255</msg>
<msg timestamp="20230913 13:15:40.679" level="INFO">${output} = KEY_NOT_FOUND Key:rootca-key not found</msg>
<status status="PASS" starttime="20230913 13:15:29.139" endtime="20230913 13:15:40.679"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 13:15:40.681" level="INFO">KEY_NOT_FOUND Key:rootca-key not found</msg>
<status status="PASS" starttime="20230913 13:15:40.680" endtime="20230913 13:15:40.681"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 13:15:40.682" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<msg timestamp="20230913 13:15:40.682" level="FAIL">255 != 0</msg>
<status status="FAIL" starttime="20230913 13:15:40.682" endtime="20230913 13:15:40.683"/>
</kw>
<status status="FAIL" starttime="20230913 13:15:29.139" endtime="20230913 13:15:40.683"/>
</kw>
<msg timestamp="20230913 13:15:40.683" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20230913 13:15:29.138" endtime="20230913 13:15:40.683"/>
</kw>
<status status="FAIL" starttime="20230913 13:15:29.138" endtime="20230913 13:15:40.683"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230913 13:15:40.683" endtime="20230913 13:15:40.683"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/key-${random}</arg>
<arg>0</arg>
<status status="NOT RUN" starttime="20230913 13:15:40.684" endtime="20230913 13:15:40.684"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230913 13:15:40.684" endtime="20230913 13:15:40.684"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/key-${random}</arg>
<arg>0</arg>
<status status="NOT RUN" starttime="20230913 13:15:40.684" endtime="20230913 13:15:40.684"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20230913 13:15:29.136" endtime="20230913 13:15:40.684">255 != 0</status>
</test>
<doc>Generate data</doc>
<status status="FAIL" starttime="20230913 13:10:12.639" endtime="20230913 13:15:40.686"/>
</suite>
<status status="FAIL" starttime="N/A" endtime="N/A" elapsedtime="361307"/>
</suite>
<statistics>
<total>
<stat pass="3" fail="2" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="1" fail="0" skip="0">create-volume-and-bucket</stat>
</tag>
<suite>
<stat pass="3" fail="2" skip="0" id="s1" name="ozonesecure-ha-root-ca-rotation">ozonesecure-ha-root-ca-rotation</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1" name="Kinit">ozonesecure-ha-root-ca-rotation.Kinit</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2" name="Scm-Leader-Transfer">ozonesecure-ha-root-ca-rotation.Scm-Leader-Transfer</stat>
<stat pass="1" fail="2" skip="0" id="s1-s3" name="Root-Ca-Rotation-Client-Checks">ozonesecure-ha-root-ca-rotation.Root-Ca-Rotation-Client-Checks</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
