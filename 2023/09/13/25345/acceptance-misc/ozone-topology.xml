<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 6.1.1 (Python 3.8.10 on linux)" generated="20230913 13:22:46.017" rpa="false" schemaversion="4">
<suite id="s1" name="ozone-topology">
<suite id="s1-s1" name="Basic" source="/opt/hadoop/smoketest/basic/basic.robot">
<test id="s1-s1-t1" name="Check webui static resources" line="29">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230913 13:17:02.188" endtime="20230913 13:17:02.189"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -s -I http://${SCM}:9876/static/bootstrap-3.4.1/js/bootstrap.min.js</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 13:17:02.201" level="INFO">Running command 'curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 13:17:02.385" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 13:17:02.385" level="INFO">${output} = HTTP/1.1 200 OK
Date: Wed, 13 Sep 2023 13:17:02 GMT
X-Content-Type-Options: nosniff
X-XSS-Protection: 1; mode=block
X-FRAME-OPTIONS: SAMEORIGIN
Last-Modified: Wed, 13 Sep 2023 12:34:36 GMT
Content-Typ...</msg>
<status status="PASS" starttime="20230913 13:17:02.197" endtime="20230913 13:17:02.385"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 13:17:02.393" level="INFO">HTTP/1.1 200 OK
Date: Wed, 13 Sep 2023 13:17:02 GMT
X-Content-Type-Options: nosniff
X-XSS-Protection: 1; mode=block
X-FRAME-OPTIONS: SAMEORIGIN
Last-Modified: Wed, 13 Sep 2023 12:34:36 GMT
Content-Type: application/javascript
Accept-Ranges: bytes
Content-Length: 39680
</msg>
<status status="PASS" starttime="20230913 13:17:02.386" endtime="20230913 13:17:02.393"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 13:17:02.394" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 13:17:02.394" endtime="20230913 13:17:02.394"/>
</kw>
<status status="PASS" starttime="20230913 13:17:02.196" endtime="20230913 13:17:02.396"/>
</kw>
<msg timestamp="20230913 13:17:02.396" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 13:17:02.195" endtime="20230913 13:17:02.396"/>
</kw>
<msg timestamp="20230913 13:17:02.396" level="INFO">${result} = HTTP/1.1 200 OK
Date: Wed, 13 Sep 2023 13:17:02 GMT
X-Content-Type-Options: nosniff
X-XSS-Protection: 1; mode=block
X-FRAME-OPTIONS: SAMEORIGIN
Last-Modified: Wed, 13 Sep 2023 12:34:36 GMT
Content-Typ...</msg>
<status status="PASS" starttime="20230913 13:17:02.189" endtime="20230913 13:17:02.396"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230913 13:17:02.396" endtime="20230913 13:17:02.403"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230913 13:17:02.187" endtime="20230913 13:17:02.404"/>
</test>
<test id="s1-s1-t2" name="Basic Freon smoketest" line="34">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230913 13:17:02.407" endtime="20230913 13:17:02.408"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>10</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230913 13:17:02.409" level="INFO">${random} = rc397srrfO</msg>
<status status="PASS" starttime="20230913 13:17:02.408" endtime="20230913 13:17:02.409"/>
</kw>
<kw name="Freon OCKG" library="freon">
<arg>prefix=${random}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 13:17:02.416" level="INFO">Running command 'ozone freon ockg  -t 1 -n1 -p rc397srrfO  2&gt;&amp;1'.</msg>
<msg timestamp="20230913 13:17:18.331" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 13:17:18.332" level="INFO">${output} = 2023-09-13 13:17:08,269 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-13 13:17:08,501 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230913 13:17:02.412" endtime="20230913 13:17:18.332"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 13:17:18.333" level="INFO">2023-09-13 13:17:08,269 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-13 13:17:08,501 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-09-13 13:17:08,501 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-09-13 13:17:08,609 [main] INFO freon.BaseFreonGenerator: Executing test with prefix rc397srrfO and number-of-tests 1
2023-09-13 13:17:08,689 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-13 13:17:09,697 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-13 13:17:10,697 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-13 13:17:11,281 [main] INFO rpc.RpcClient: Creating Volume: vol1, with hadoop as owner and space quota set to -1 bytes, counts quota set to -1
2023-09-13 13:17:11,558 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Encryption set to false, Replication Type set to server-side default replication type, Namespace Quota set to -1, Space Quota set to -1 
2023-09-13 13:17:11,699 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-13 13:17:12,700 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-13 13:17:13,704 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-13 13:17:14,140 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2023-09-13 13:17:14,558 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2023-09-13 13:17:14,704 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-13 13:17:15,705 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-13 13:17:16,705 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-13 13:17:17,706 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2023-09-13 13:17:17,923 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=1, min=5633.183327, max=5633.183327, mean=5633.183327, stddev=0.0, median=5633.183327, p75=5633.183327, p95=5633.183327, p98=5633.183327, p99=5633.183327, p999=5633.183327, mean_rate=0.16032961539702656, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-09-13 13:17:17,926 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 9
2023-09-13 13:17:17,929 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-09-13 13:17:17,929 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20230913 13:17:18.332" endtime="20230913 13:17:18.333"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 13:17:18.334" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 13:17:18.333" endtime="20230913 13:17:18.334"/>
</kw>
<status status="PASS" starttime="20230913 13:17:02.412" endtime="20230913 13:17:18.334"/>
</kw>
<msg timestamp="20230913 13:17:18.334" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 13:17:02.411" endtime="20230913 13:17:18.334"/>
</kw>
<msg timestamp="20230913 13:17:18.335" level="INFO">${result} = 2023-09-13 13:17:08,269 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-13 13:17:08,501 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230913 13:17:02.411" endtime="20230913 13:17:18.335"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230913 13:17:18.335" endtime="20230913 13:17:18.336"/>
</kw>
<status status="PASS" starttime="20230913 13:17:02.409" endtime="20230913 13:17:18.336"/>
</kw>
<kw name="Freon OCKV" library="freon">
<arg>prefix=${random}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockv ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 13:17:18.343" level="INFO">Running command 'ozone freon ockv  -t 1 -n1 -p rc397srrfO  2&gt;&amp;1'.</msg>
<msg timestamp="20230913 13:17:27.672" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 13:17:27.672" level="INFO">${output} = 2023-09-13 13:17:21,624 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-13 13:17:21,841 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230913 13:17:18.340" endtime="20230913 13:17:27.672"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 13:17:27.673" level="INFO">2023-09-13 13:17:21,624 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-13 13:17:21,841 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-09-13 13:17:21,841 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-09-13 13:17:21,964 [main] INFO freon.BaseFreonGenerator: Executing test with prefix rc397srrfO and number-of-tests 1
2023-09-13 13:17:22,029 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-13 13:17:23,047 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-13 13:17:24,047 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-13 13:17:24,730 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2023-09-13 13:17:25,048 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-13 13:17:26,048 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-13 13:17:27,049 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2023-09-13 13:17:27,287 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-validate, count=1, min=100.582759, max=100.582759, mean=100.582759, stddev=0.0, median=100.582759, p75=100.582759, p95=100.582759, p98=100.582759, p99=100.582759, p999=100.582759, mean_rate=0.9313740354286505, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-09-13 13:17:27,288 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 5
2023-09-13 13:17:27,288 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-09-13 13:17:27,288 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20230913 13:17:27.672" endtime="20230913 13:17:27.673"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 13:17:27.674" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 13:17:27.673" endtime="20230913 13:17:27.674"/>
</kw>
<status status="PASS" starttime="20230913 13:17:18.339" endtime="20230913 13:17:27.674"/>
</kw>
<msg timestamp="20230913 13:17:27.674" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 13:17:18.338" endtime="20230913 13:17:27.674"/>
</kw>
<msg timestamp="20230913 13:17:27.675" level="INFO">${result} = 2023-09-13 13:17:21,624 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-13 13:17:21,841 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230913 13:17:18.338" endtime="20230913 13:17:27.675"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230913 13:17:27.675" endtime="20230913 13:17:27.675"/>
</kw>
<status status="PASS" starttime="20230913 13:17:18.336" endtime="20230913 13:17:27.675"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230913 13:17:02.406" endtime="20230913 13:17:27.676"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20230913 13:17:01.999" endtime="20230913 13:17:27.678"/>
</suite>
<suite id="s1-s2" name="Cli" source="/opt/hadoop/smoketest/topology/cli.robot">
<test id="s1-s2-t1" name="Run printTopology" line="27">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin printTopology</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 13:17:31.100" level="INFO">Running command 'ozone admin printTopology 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 13:17:36.617" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 13:17:36.617" level="INFO">${output} = State = HEALTHY
 10.5.0.8(ozone-topology_datanode_5_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rac...</msg>
<status status="PASS" starttime="20230913 13:17:31.096" endtime="20230913 13:17:36.617"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 13:17:36.619" level="INFO">State = HEALTHY
 10.5.0.8(ozone-topology_datanode_5_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.9(ozone-topology_datanode_6_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1</msg>
<status status="PASS" starttime="20230913 13:17:36.618" endtime="20230913 13:17:36.619"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 13:17:36.620" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 13:17:36.619" endtime="20230913 13:17:36.620"/>
</kw>
<status status="PASS" starttime="20230913 13:17:31.096" endtime="20230913 13:17:36.620"/>
</kw>
<msg timestamp="20230913 13:17:36.620" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 13:17:31.095" endtime="20230913 13:17:36.620"/>
</kw>
<msg timestamp="20230913 13:17:36.621" level="INFO">${output} = State = HEALTHY
 10.5.0.8(ozone-topology_datanode_5_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rac...</msg>
<status status="PASS" starttime="20230913 13:17:31.095" endtime="20230913 13:17:36.621"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net)</arg>
<arg>IN_SERVICE</arg>
<arg>/rack2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230913 13:17:36.621" endtime="20230913 13:17:36.622"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230913 13:17:31.094" endtime="20230913 13:17:36.622"/>
</test>
<test id="s1-s2-t2" name="Run printTopology -o" line="30">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin printTopology -o</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 13:17:36.628" level="INFO">Running command 'ozone admin printTopology -o 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 13:17:41.802" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 13:17:41.802" level="INFO">${output} = State = HEALTHY
Location: /rack1
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net) IN_SERVICE
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net) IN_SERVICE
 10.5.0.6(ozone-topology_data...</msg>
<status status="PASS" starttime="20230913 13:17:36.625" endtime="20230913 13:17:41.802"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 13:17:41.804" level="INFO">State = HEALTHY
Location: /rack1
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net) IN_SERVICE
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net) IN_SERVICE
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net) IN_SERVICE
Location: /rack2
 10.5.0.8(ozone-topology_datanode_5_1.ozone-topology_net) IN_SERVICE
 10.5.0.9(ozone-topology_datanode_6_1.ozone-topology_net) IN_SERVICE
 10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net) IN_SERVICE</msg>
<status status="PASS" starttime="20230913 13:17:41.803" endtime="20230913 13:17:41.804"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 13:17:41.805" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 13:17:41.804" endtime="20230913 13:17:41.805"/>
</kw>
<status status="PASS" starttime="20230913 13:17:36.624" endtime="20230913 13:17:41.805"/>
</kw>
<msg timestamp="20230913 13:17:41.805" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 13:17:36.624" endtime="20230913 13:17:41.805"/>
</kw>
<msg timestamp="20230913 13:17:41.806" level="INFO">${output} = State = HEALTHY
Location: /rack1
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net) IN_SERVICE
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net) IN_SERVICE
 10.5.0.6(ozone-topology_data...</msg>
<status status="PASS" starttime="20230913 13:17:36.623" endtime="20230913 13:17:41.806"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Location: /rack2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230913 13:17:41.806" endtime="20230913 13:17:41.806"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net) IN_SERVICE</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230913 13:17:41.806" endtime="20230913 13:17:41.807"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230913 13:17:36.623" endtime="20230913 13:17:41.807"/>
</test>
<test id="s1-s2-t3" name="Run printTopology --operational-state IN_SERVICE" line="34">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin printTopology --operational-state IN_SERVICE</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 13:17:41.816" level="INFO">Running command 'ozone admin printTopology --operational-state IN_SERVICE 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 13:17:46.922" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 13:17:46.922" level="INFO">${output} = State = HEALTHY
 10.5.0.8(ozone-topology_datanode_5_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rac...</msg>
<status status="PASS" starttime="20230913 13:17:41.812" endtime="20230913 13:17:46.922"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 13:17:46.923" level="INFO">State = HEALTHY
 10.5.0.8(ozone-topology_datanode_5_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.9(ozone-topology_datanode_6_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1</msg>
<status status="PASS" starttime="20230913 13:17:46.922" endtime="20230913 13:17:46.923"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 13:17:46.924" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 13:17:46.924" endtime="20230913 13:17:46.924"/>
</kw>
<status status="PASS" starttime="20230913 13:17:41.810" endtime="20230913 13:17:46.924"/>
</kw>
<msg timestamp="20230913 13:17:46.925" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 13:17:41.810" endtime="20230913 13:17:46.925"/>
</kw>
<msg timestamp="20230913 13:17:46.925" level="INFO">${output} = State = HEALTHY
 10.5.0.8(ozone-topology_datanode_5_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rac...</msg>
<status status="PASS" starttime="20230913 13:17:41.809" endtime="20230913 13:17:46.925"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net)</arg>
<arg>IN_SERVICE</arg>
<arg>/rack2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230913 13:17:46.925" endtime="20230913 13:17:46.926"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230913 13:17:41.808" endtime="20230913 13:17:46.926"/>
</test>
<test id="s1-s2-t4" name="Run printTopology --node-state HEALTHY" line="37">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin printTopology --node-state HEALTHY</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 13:17:46.933" level="INFO">Running command 'ozone admin printTopology --node-state HEALTHY 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 13:17:51.728" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 13:17:51.728" level="INFO">${output} = State = HEALTHY
 10.5.0.8(ozone-topology_datanode_5_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rac...</msg>
<status status="PASS" starttime="20230913 13:17:46.929" endtime="20230913 13:17:51.729"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 13:17:51.730" level="INFO">State = HEALTHY
 10.5.0.8(ozone-topology_datanode_5_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.9(ozone-topology_datanode_6_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1</msg>
<status status="PASS" starttime="20230913 13:17:51.729" endtime="20230913 13:17:51.730"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 13:17:51.731" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 13:17:51.730" endtime="20230913 13:17:51.731"/>
</kw>
<status status="PASS" starttime="20230913 13:17:46.929" endtime="20230913 13:17:51.731"/>
</kw>
<msg timestamp="20230913 13:17:51.732" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 13:17:46.928" endtime="20230913 13:17:51.732"/>
</kw>
<msg timestamp="20230913 13:17:51.732" level="INFO">${output} = State = HEALTHY
 10.5.0.8(ozone-topology_datanode_5_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rac...</msg>
<status status="PASS" starttime="20230913 13:17:46.928" endtime="20230913 13:17:51.732"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net)</arg>
<arg>IN_SERVICE</arg>
<arg>/rack2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230913 13:17:51.732" endtime="20230913 13:17:51.733"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230913 13:17:46.927" endtime="20230913 13:17:51.733"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20230913 13:17:31.038" endtime="20230913 13:17:51.734"/>
</suite>
<suite id="s1-s3" name="Recon" source="/opt/hadoop/smoketest/recon">
<suite id="s1-s3-s1" name="Recon-Api" source="/opt/hadoop/smoketest/recon/recon-api.robot">
<test id="s1-s3-s1-t1" name="Check if Recon picks up OM data" line="61">
<kw name="Execute" library="os">
<arg>ozone sh volume create recon</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 13:17:55.168" level="INFO">Running command 'ozone sh volume create recon 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 13:18:00.658" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 13:18:00.659" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230913 13:17:55.162" endtime="20230913 13:18:00.659"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 13:18:00.660" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230913 13:18:00.659" endtime="20230913 13:18:00.661"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 13:18:00.661" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 13:18:00.661" endtime="20230913 13:18:00.661"/>
</kw>
<status status="PASS" starttime="20230913 13:17:55.162" endtime="20230913 13:18:00.662"/>
</kw>
<msg timestamp="20230913 13:18:00.662" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 13:17:55.161" endtime="20230913 13:18:00.662"/>
</kw>
<status status="PASS" starttime="20230913 13:17:55.161" endtime="20230913 13:18:00.662"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create recon/api --layout=LEGACY</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 13:18:00.668" level="INFO">Running command 'ozone sh bucket create recon/api --layout=LEGACY 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 13:18:06.275" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 13:18:06.275" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230913 13:18:00.665" endtime="20230913 13:18:06.275"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 13:18:06.276" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230913 13:18:06.275" endtime="20230913 13:18:06.276"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 13:18:06.277" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 13:18:06.276" endtime="20230913 13:18:06.277"/>
</kw>
<status status="PASS" starttime="20230913 13:18:00.663" endtime="20230913 13:18:06.277"/>
</kw>
<msg timestamp="20230913 13:18:06.277" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 13:18:00.663" endtime="20230913 13:18:06.277"/>
</kw>
<status status="PASS" starttime="20230913 13:18:00.662" endtime="20230913 13:18:06.278"/>
</kw>
<kw name="Freon OCKG" library="freon">
<arg>n=10</arg>
<arg>args=-s 1025 -v recon -b api</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 13:18:06.283" level="INFO">Running command 'ozone freon ockg  -t 1 -n10 -p ockg -s 1025 -v recon -b api 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 13:18:18.723" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 13:18:18.723" level="INFO">${output} = 2023-09-13 13:18:09,312 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-13 13:18:09,447 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230913 13:18:06.280" endtime="20230913 13:18:18.723"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 13:18:18.725" level="INFO">2023-09-13 13:18:09,312 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-13 13:18:09,447 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-09-13 13:18:09,447 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-09-13 13:18:09,546 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ockg and number-of-tests 10
2023-09-13 13:18:09,615 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2023-09-13 13:18:10,619 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2023-09-13 13:18:11,620 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2023-09-13 13:18:12,145 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2023-09-13 13:18:12,620 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2023-09-13 13:18:12,634 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2023-09-13 13:18:13,621 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2023-09-13 13:18:14,622 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2023-09-13 13:18:15,625 [Thread-5] INFO freon.ProgressBar: Progress: 10.00 % (1 out of 10)
2023-09-13 13:18:16,626 [Thread-5] INFO freon.ProgressBar: Progress: 40.00 % (4 out of 10)
2023-09-13 13:18:17,626 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (10 out of 10)
2023-09-13 13:18:18,340 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=10, min=141.210779, max=4462.386564, mean=638.0921677763787, stddev=1265.7352709386003, median=176.828653, p75=337.594636, p95=4462.386564, p98=4462.386564, p99=4462.386564, p999=4462.386564, mean_rate=1.389219750095304, m1=0.4, m5=0.4, m15=0.4, rate_unit=events/second, duration_unit=milliseconds
2023-09-13 13:18:18,340 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 9
2023-09-13 13:18:18,342 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-09-13 13:18:18,342 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 10</msg>
<status status="PASS" starttime="20230913 13:18:18.724" endtime="20230913 13:18:18.725"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 13:18:18.726" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 13:18:18.725" endtime="20230913 13:18:18.726"/>
</kw>
<status status="PASS" starttime="20230913 13:18:06.280" endtime="20230913 13:18:18.726"/>
</kw>
<msg timestamp="20230913 13:18:18.726" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 13:18:06.279" endtime="20230913 13:18:18.726"/>
</kw>
<msg timestamp="20230913 13:18:18.727" level="INFO">${result} = 2023-09-13 13:18:09,312 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-13 13:18:09,447 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230913 13:18:06.278" endtime="20230913 13:18:18.727"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230913 13:18:18.727" endtime="20230913 13:18:18.727"/>
</kw>
<status status="PASS" starttime="20230913 13:18:06.278" endtime="20230913 13:18:18.727"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Check if Recon picks up container from OM</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit as ozone admin</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230913 13:18:18.729" endtime="20230913 13:18:18.729"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/containers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 13:18:18.735" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 13:18:19.064" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 13:18:19.064" level="INFO">${output} = {"data":{"totalCount":4,"prevKey":4,"containers":[{"ContainerID":1,"NumberOfKeys":0,"pipelines":null},{"ContainerID":2,"NumberOfKeys":0,"pipelines":null},{"ContainerID":3,"NumberOfKeys":0,"pipelines":...</msg>
<status status="PASS" starttime="20230913 13:18:18.731" endtime="20230913 13:18:19.064"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 13:18:19.066" level="INFO">{"data":{"totalCount":4,"prevKey":4,"containers":[{"ContainerID":1,"NumberOfKeys":0,"pipelines":null},{"ContainerID":2,"NumberOfKeys":0,"pipelines":null},{"ContainerID":3,"NumberOfKeys":0,"pipelines":null},{"ContainerID":4,"NumberOfKeys":0,"pipelines":null}]}}</msg>
<status status="PASS" starttime="20230913 13:18:19.065" endtime="20230913 13:18:19.066"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 13:18:19.066" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 13:18:19.066" endtime="20230913 13:18:19.066"/>
</kw>
<status status="PASS" starttime="20230913 13:18:18.731" endtime="20230913 13:18:19.067"/>
</kw>
<msg timestamp="20230913 13:18:19.067" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 13:18:18.730" endtime="20230913 13:18:19.067"/>
</kw>
<msg timestamp="20230913 13:18:19.067" level="INFO">${result} = {"data":{"totalCount":4,"prevKey":4,"containers":[{"ContainerID":1,"NumberOfKeys":0,"pipelines":null},{"ContainerID":2,"NumberOfKeys":0,"pipelines":null},{"ContainerID":3,"NumberOfKeys":0,"pipelines":...</msg>
<status status="PASS" starttime="20230913 13:18:18.730" endtime="20230913 13:18:19.067"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"ContainerID\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230913 13:18:19.068" endtime="20230913 13:18:19.068"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/utilization/fileCount</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 13:18:19.080" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 13:18:19.125" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 13:18:19.125" level="INFO">${output} = [{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20230913 13:18:19.076" endtime="20230913 13:18:19.125"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 13:18:19.132" level="INFO">[{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20230913 13:18:19.125" endtime="20230913 13:18:19.132"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 13:18:19.136" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 13:18:19.133" endtime="20230913 13:18:19.136"/>
</kw>
<status status="PASS" starttime="20230913 13:18:19.075" endtime="20230913 13:18:19.136"/>
</kw>
<msg timestamp="20230913 13:18:19.136" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 13:18:19.069" endtime="20230913 13:18:19.136"/>
</kw>
<msg timestamp="20230913 13:18:19.137" level="INFO">${result} = [{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20230913 13:18:19.068" endtime="20230913 13:18:19.137"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20230913 13:18:19.137" level="FAIL">'[{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]' does not contain '"fileSize":2048,"count":10'</msg>
<status status="FAIL" starttime="20230913 13:18:19.137" endtime="20230913 13:18:19.138"/>
</kw>
<status status="FAIL" starttime="20230913 13:18:18.729" endtime="20230913 13:18:19.138"/>
</kw>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit as ozone admin</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230913 13:18:29.140" endtime="20230913 13:18:29.141"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/containers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 13:18:29.151" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 13:18:29.169" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 13:18:29.169" level="INFO">${output} = {"data":{"totalCount":4,"prevKey":4,"containers":[{"ContainerID":1,"NumberOfKeys":0,"pipelines":null},{"ContainerID":2,"NumberOfKeys":0,"pipelines":null},{"ContainerID":3,"NumberOfKeys":0,"pipelines":...</msg>
<status status="PASS" starttime="20230913 13:18:29.142" endtime="20230913 13:18:29.169"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 13:18:29.171" level="INFO">{"data":{"totalCount":4,"prevKey":4,"containers":[{"ContainerID":1,"NumberOfKeys":0,"pipelines":null},{"ContainerID":2,"NumberOfKeys":0,"pipelines":null},{"ContainerID":3,"NumberOfKeys":0,"pipelines":null},{"ContainerID":4,"NumberOfKeys":0,"pipelines":null}]}}</msg>
<status status="PASS" starttime="20230913 13:18:29.170" endtime="20230913 13:18:29.171"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 13:18:29.172" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 13:18:29.172" endtime="20230913 13:18:29.172"/>
</kw>
<status status="PASS" starttime="20230913 13:18:29.142" endtime="20230913 13:18:29.173"/>
</kw>
<msg timestamp="20230913 13:18:29.173" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 13:18:29.141" endtime="20230913 13:18:29.173"/>
</kw>
<msg timestamp="20230913 13:18:29.173" level="INFO">${result} = {"data":{"totalCount":4,"prevKey":4,"containers":[{"ContainerID":1,"NumberOfKeys":0,"pipelines":null},{"ContainerID":2,"NumberOfKeys":0,"pipelines":null},{"ContainerID":3,"NumberOfKeys":0,"pipelines":...</msg>
<status status="PASS" starttime="20230913 13:18:29.141" endtime="20230913 13:18:29.173"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"ContainerID\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230913 13:18:29.173" endtime="20230913 13:18:29.174"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/utilization/fileCount</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 13:18:29.179" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 13:18:29.197" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 13:18:29.197" level="INFO">${output} = [{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20230913 13:18:29.176" endtime="20230913 13:18:29.197"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 13:18:29.198" level="INFO">[{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20230913 13:18:29.198" endtime="20230913 13:18:29.198"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 13:18:29.199" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 13:18:29.199" endtime="20230913 13:18:29.199"/>
</kw>
<status status="PASS" starttime="20230913 13:18:29.176" endtime="20230913 13:18:29.200"/>
</kw>
<msg timestamp="20230913 13:18:29.200" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 13:18:29.175" endtime="20230913 13:18:29.200"/>
</kw>
<msg timestamp="20230913 13:18:29.200" level="INFO">${result} = [{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20230913 13:18:29.174" endtime="20230913 13:18:29.200"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20230913 13:18:29.201" level="FAIL">'[{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]' does not contain '"fileSize":2048,"count":10'</msg>
<status status="FAIL" starttime="20230913 13:18:29.200" endtime="20230913 13:18:29.201"/>
</kw>
<status status="FAIL" starttime="20230913 13:18:29.139" endtime="20230913 13:18:29.201"/>
</kw>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit as ozone admin</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230913 13:18:39.203" endtime="20230913 13:18:39.203"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/containers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 13:18:39.209" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 13:18:39.227" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 13:18:39.227" level="INFO">${output} = {"data":{"totalCount":4,"prevKey":4,"containers":[{"ContainerID":1,"NumberOfKeys":0,"pipelines":null},{"ContainerID":2,"NumberOfKeys":0,"pipelines":null},{"ContainerID":3,"NumberOfKeys":0,"pipelines":...</msg>
<status status="PASS" starttime="20230913 13:18:39.205" endtime="20230913 13:18:39.227"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 13:18:39.229" level="INFO">{"data":{"totalCount":4,"prevKey":4,"containers":[{"ContainerID":1,"NumberOfKeys":0,"pipelines":null},{"ContainerID":2,"NumberOfKeys":0,"pipelines":null},{"ContainerID":3,"NumberOfKeys":0,"pipelines":null},{"ContainerID":4,"NumberOfKeys":0,"pipelines":null}]}}</msg>
<status status="PASS" starttime="20230913 13:18:39.228" endtime="20230913 13:18:39.229"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 13:18:39.230" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 13:18:39.229" endtime="20230913 13:18:39.230"/>
</kw>
<status status="PASS" starttime="20230913 13:18:39.204" endtime="20230913 13:18:39.230"/>
</kw>
<msg timestamp="20230913 13:18:39.230" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 13:18:39.204" endtime="20230913 13:18:39.230"/>
</kw>
<msg timestamp="20230913 13:18:39.231" level="INFO">${result} = {"data":{"totalCount":4,"prevKey":4,"containers":[{"ContainerID":1,"NumberOfKeys":0,"pipelines":null},{"ContainerID":2,"NumberOfKeys":0,"pipelines":null},{"ContainerID":3,"NumberOfKeys":0,"pipelines":...</msg>
<status status="PASS" starttime="20230913 13:18:39.203" endtime="20230913 13:18:39.231"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"ContainerID\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230913 13:18:39.231" endtime="20230913 13:18:39.231"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/utilization/fileCount</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 13:18:39.237" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 13:18:39.255" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 13:18:39.255" level="INFO">${output} = [{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20230913 13:18:39.233" endtime="20230913 13:18:39.255"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 13:18:39.256" level="INFO">[{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20230913 13:18:39.256" endtime="20230913 13:18:39.256"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 13:18:39.257" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 13:18:39.257" endtime="20230913 13:18:39.257"/>
</kw>
<status status="PASS" starttime="20230913 13:18:39.233" endtime="20230913 13:18:39.257"/>
</kw>
<msg timestamp="20230913 13:18:39.258" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 13:18:39.232" endtime="20230913 13:18:39.258"/>
</kw>
<msg timestamp="20230913 13:18:39.258" level="INFO">${result} = [{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20230913 13:18:39.232" endtime="20230913 13:18:39.258"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20230913 13:18:39.259" level="FAIL">'[{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]' does not contain '"fileSize":2048,"count":10'</msg>
<status status="FAIL" starttime="20230913 13:18:39.258" endtime="20230913 13:18:39.259"/>
</kw>
<status status="FAIL" starttime="20230913 13:18:39.202" endtime="20230913 13:18:39.259"/>
</kw>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit as ozone admin</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230913 13:18:49.261" endtime="20230913 13:18:49.261"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/containers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 13:18:49.266" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 13:18:49.285" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 13:18:49.285" level="INFO">${output} = {"data":{"totalCount":4,"prevKey":4,"containers":[{"ContainerID":1,"NumberOfKeys":0,"pipelines":null},{"ContainerID":2,"NumberOfKeys":0,"pipelines":null},{"ContainerID":3,"NumberOfKeys":0,"pipelines":...</msg>
<status status="PASS" starttime="20230913 13:18:49.263" endtime="20230913 13:18:49.285"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 13:18:49.287" level="INFO">{"data":{"totalCount":4,"prevKey":4,"containers":[{"ContainerID":1,"NumberOfKeys":0,"pipelines":null},{"ContainerID":2,"NumberOfKeys":0,"pipelines":null},{"ContainerID":3,"NumberOfKeys":0,"pipelines":null},{"ContainerID":4,"NumberOfKeys":0,"pipelines":null}]}}</msg>
<status status="PASS" starttime="20230913 13:18:49.286" endtime="20230913 13:18:49.287"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 13:18:49.288" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 13:18:49.287" endtime="20230913 13:18:49.288"/>
</kw>
<status status="PASS" starttime="20230913 13:18:49.262" endtime="20230913 13:18:49.288"/>
</kw>
<msg timestamp="20230913 13:18:49.288" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 13:18:49.262" endtime="20230913 13:18:49.289"/>
</kw>
<msg timestamp="20230913 13:18:49.289" level="INFO">${result} = {"data":{"totalCount":4,"prevKey":4,"containers":[{"ContainerID":1,"NumberOfKeys":0,"pipelines":null},{"ContainerID":2,"NumberOfKeys":0,"pipelines":null},{"ContainerID":3,"NumberOfKeys":0,"pipelines":...</msg>
<status status="PASS" starttime="20230913 13:18:49.262" endtime="20230913 13:18:49.289"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"ContainerID\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230913 13:18:49.289" endtime="20230913 13:18:49.290"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/utilization/fileCount</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 13:18:49.295" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 13:18:49.315" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 13:18:49.315" level="INFO">${output} = [{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20230913 13:18:49.292" endtime="20230913 13:18:49.315"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 13:18:49.317" level="INFO">[{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20230913 13:18:49.315" endtime="20230913 13:18:49.317"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 13:18:49.318" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 13:18:49.317" endtime="20230913 13:18:49.318"/>
</kw>
<status status="PASS" starttime="20230913 13:18:49.291" endtime="20230913 13:18:49.318"/>
</kw>
<msg timestamp="20230913 13:18:49.318" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 13:18:49.291" endtime="20230913 13:18:49.318"/>
</kw>
<msg timestamp="20230913 13:18:49.319" level="INFO">${result} = [{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20230913 13:18:49.290" endtime="20230913 13:18:49.319"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20230913 13:18:49.319" level="FAIL">'[{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]' does not contain '"fileSize":2048,"count":10'</msg>
<status status="FAIL" starttime="20230913 13:18:49.319" endtime="20230913 13:18:49.320"/>
</kw>
<status status="FAIL" starttime="20230913 13:18:49.260" endtime="20230913 13:18:49.320"/>
</kw>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit as ozone admin</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230913 13:18:59.321" endtime="20230913 13:18:59.322"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/containers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 13:18:59.327" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 13:18:59.345" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 13:18:59.346" level="INFO">${output} = {"data":{"totalCount":4,"prevKey":4,"containers":[{"ContainerID":1,"NumberOfKeys":0,"pipelines":null},{"ContainerID":2,"NumberOfKeys":0,"pipelines":null},{"ContainerID":3,"NumberOfKeys":0,"pipelines":...</msg>
<status status="PASS" starttime="20230913 13:18:59.323" endtime="20230913 13:18:59.346"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 13:18:59.347" level="INFO">{"data":{"totalCount":4,"prevKey":4,"containers":[{"ContainerID":1,"NumberOfKeys":0,"pipelines":null},{"ContainerID":2,"NumberOfKeys":0,"pipelines":null},{"ContainerID":3,"NumberOfKeys":0,"pipelines":null},{"ContainerID":4,"NumberOfKeys":0,"pipelines":null}]}}</msg>
<status status="PASS" starttime="20230913 13:18:59.346" endtime="20230913 13:18:59.347"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 13:18:59.348" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 13:18:59.348" endtime="20230913 13:18:59.348"/>
</kw>
<status status="PASS" starttime="20230913 13:18:59.323" endtime="20230913 13:18:59.348"/>
</kw>
<msg timestamp="20230913 13:18:59.349" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 13:18:59.323" endtime="20230913 13:18:59.349"/>
</kw>
<msg timestamp="20230913 13:18:59.349" level="INFO">${result} = {"data":{"totalCount":4,"prevKey":4,"containers":[{"ContainerID":1,"NumberOfKeys":0,"pipelines":null},{"ContainerID":2,"NumberOfKeys":0,"pipelines":null},{"ContainerID":3,"NumberOfKeys":0,"pipelines":...</msg>
<status status="PASS" starttime="20230913 13:18:59.322" endtime="20230913 13:18:59.349"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"ContainerID\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230913 13:18:59.349" endtime="20230913 13:18:59.350"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/utilization/fileCount</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 13:18:59.355" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 13:18:59.373" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 13:18:59.373" level="INFO">${output} = [{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20230913 13:18:59.352" endtime="20230913 13:18:59.373"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 13:18:59.374" level="INFO">[{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20230913 13:18:59.373" endtime="20230913 13:18:59.375"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 13:18:59.375" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 13:18:59.375" endtime="20230913 13:18:59.376"/>
</kw>
<status status="PASS" starttime="20230913 13:18:59.351" endtime="20230913 13:18:59.376"/>
</kw>
<msg timestamp="20230913 13:18:59.376" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 13:18:59.351" endtime="20230913 13:18:59.376"/>
</kw>
<msg timestamp="20230913 13:18:59.376" level="INFO">${result} = [{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20230913 13:18:59.350" endtime="20230913 13:18:59.376"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20230913 13:18:59.377" level="FAIL">'[{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]' does not contain '"fileSize":2048,"count":10'</msg>
<status status="FAIL" starttime="20230913 13:18:59.377" endtime="20230913 13:18:59.377"/>
</kw>
<status status="FAIL" starttime="20230913 13:18:59.320" endtime="20230913 13:18:59.378"/>
</kw>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit as ozone admin</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230913 13:19:09.379" endtime="20230913 13:19:09.380"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/containers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 13:19:09.385" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 13:19:09.403" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 13:19:09.403" level="INFO">${output} = {"data":{"totalCount":4,"prevKey":4,"containers":[{"ContainerID":1,"NumberOfKeys":0,"pipelines":null},{"ContainerID":2,"NumberOfKeys":0,"pipelines":null},{"ContainerID":3,"NumberOfKeys":0,"pipelines":...</msg>
<status status="PASS" starttime="20230913 13:19:09.381" endtime="20230913 13:19:09.403"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 13:19:09.405" level="INFO">{"data":{"totalCount":4,"prevKey":4,"containers":[{"ContainerID":1,"NumberOfKeys":0,"pipelines":null},{"ContainerID":2,"NumberOfKeys":0,"pipelines":null},{"ContainerID":3,"NumberOfKeys":0,"pipelines":null},{"ContainerID":4,"NumberOfKeys":0,"pipelines":null}]}}</msg>
<status status="PASS" starttime="20230913 13:19:09.404" endtime="20230913 13:19:09.405"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 13:19:09.406" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 13:19:09.405" endtime="20230913 13:19:09.406"/>
</kw>
<status status="PASS" starttime="20230913 13:19:09.381" endtime="20230913 13:19:09.406"/>
</kw>
<msg timestamp="20230913 13:19:09.406" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 13:19:09.380" endtime="20230913 13:19:09.406"/>
</kw>
<msg timestamp="20230913 13:19:09.407" level="INFO">${result} = {"data":{"totalCount":4,"prevKey":4,"containers":[{"ContainerID":1,"NumberOfKeys":0,"pipelines":null},{"ContainerID":2,"NumberOfKeys":0,"pipelines":null},{"ContainerID":3,"NumberOfKeys":0,"pipelines":...</msg>
<status status="PASS" starttime="20230913 13:19:09.380" endtime="20230913 13:19:09.407"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"ContainerID\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230913 13:19:09.407" endtime="20230913 13:19:09.407"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/utilization/fileCount</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 13:19:09.412" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 13:19:09.431" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 13:19:09.431" level="INFO">${output} = [{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20230913 13:19:09.409" endtime="20230913 13:19:09.432"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 13:19:09.433" level="INFO">[{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20230913 13:19:09.432" endtime="20230913 13:19:09.433"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 13:19:09.434" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 13:19:09.434" endtime="20230913 13:19:09.434"/>
</kw>
<status status="PASS" starttime="20230913 13:19:09.408" endtime="20230913 13:19:09.434"/>
</kw>
<msg timestamp="20230913 13:19:09.435" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 13:19:09.408" endtime="20230913 13:19:09.435"/>
</kw>
<msg timestamp="20230913 13:19:09.435" level="INFO">${result} = [{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20230913 13:19:09.408" endtime="20230913 13:19:09.435"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20230913 13:19:09.436" level="FAIL">'[{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]' does not contain '"fileSize":2048,"count":10'</msg>
<status status="FAIL" starttime="20230913 13:19:09.435" endtime="20230913 13:19:09.436"/>
</kw>
<status status="FAIL" starttime="20230913 13:19:09.378" endtime="20230913 13:19:09.436"/>
</kw>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit as ozone admin</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230913 13:19:19.438" endtime="20230913 13:19:19.438"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/containers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 13:19:19.443" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 13:19:19.459" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 13:19:19.459" level="INFO">${output} = {"data":{"totalCount":4,"prevKey":4,"containers":[{"ContainerID":1,"NumberOfKeys":0,"pipelines":null},{"ContainerID":2,"NumberOfKeys":0,"pipelines":null},{"ContainerID":3,"NumberOfKeys":0,"pipelines":...</msg>
<status status="PASS" starttime="20230913 13:19:19.440" endtime="20230913 13:19:19.459"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 13:19:19.461" level="INFO">{"data":{"totalCount":4,"prevKey":4,"containers":[{"ContainerID":1,"NumberOfKeys":0,"pipelines":null},{"ContainerID":2,"NumberOfKeys":0,"pipelines":null},{"ContainerID":3,"NumberOfKeys":0,"pipelines":null},{"ContainerID":4,"NumberOfKeys":0,"pipelines":null}]}}</msg>
<status status="PASS" starttime="20230913 13:19:19.460" endtime="20230913 13:19:19.461"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 13:19:19.462" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 13:19:19.461" endtime="20230913 13:19:19.462"/>
</kw>
<status status="PASS" starttime="20230913 13:19:19.439" endtime="20230913 13:19:19.462"/>
</kw>
<msg timestamp="20230913 13:19:19.462" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 13:19:19.439" endtime="20230913 13:19:19.462"/>
</kw>
<msg timestamp="20230913 13:19:19.463" level="INFO">${result} = {"data":{"totalCount":4,"prevKey":4,"containers":[{"ContainerID":1,"NumberOfKeys":0,"pipelines":null},{"ContainerID":2,"NumberOfKeys":0,"pipelines":null},{"ContainerID":3,"NumberOfKeys":0,"pipelines":...</msg>
<status status="PASS" starttime="20230913 13:19:19.438" endtime="20230913 13:19:19.463"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"ContainerID\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230913 13:19:19.463" endtime="20230913 13:19:19.463"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/utilization/fileCount</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 13:19:19.468" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 13:19:19.484" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 13:19:19.484" level="INFO">${output} = [{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1},{"volume":"recon","bucket":"api","fileSize":2048,"count":10}]</msg>
<status status="PASS" starttime="20230913 13:19:19.465" endtime="20230913 13:19:19.484"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 13:19:19.486" level="INFO">[{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1},{"volume":"recon","bucket":"api","fileSize":2048,"count":10}]</msg>
<status status="PASS" starttime="20230913 13:19:19.485" endtime="20230913 13:19:19.486"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 13:19:19.486" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 13:19:19.486" endtime="20230913 13:19:19.487"/>
</kw>
<status status="PASS" starttime="20230913 13:19:19.465" endtime="20230913 13:19:19.487"/>
</kw>
<msg timestamp="20230913 13:19:19.487" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 13:19:19.464" endtime="20230913 13:19:19.487"/>
</kw>
<msg timestamp="20230913 13:19:19.487" level="INFO">${result} = [{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1},{"volume":"recon","bucket":"api","fileSize":2048,"count":10}]</msg>
<status status="PASS" starttime="20230913 13:19:19.464" endtime="20230913 13:19:19.487"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230913 13:19:19.488" endtime="20230913 13:19:19.488"/>
</kw>
<status status="PASS" starttime="20230913 13:19:19.437" endtime="20230913 13:19:19.488"/>
</kw>
<status status="PASS" starttime="20230913 13:18:18.728" endtime="20230913 13:19:19.488"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230913 13:17:55.160" endtime="20230913 13:19:19.488"/>
</test>
<test id="s1-s3-s1-t2" name="Check if Recon picks up DN heartbeats" line="71">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/datanodes</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 13:19:19.496" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/datanodes 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 13:19:19.543" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 13:19:19.543" level="INFO">${output} = {"totalCount":6,"datanodes":[{"uuid":"f5c348db-1fa4-458d-8af9-c2147dbc0f41","hostname":"ozone-topology_datanode_6_1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":0,"stor...</msg>
<status status="PASS" starttime="20230913 13:19:19.493" endtime="20230913 13:19:19.543"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 13:19:19.545" level="INFO">{"totalCount":6,"datanodes":[{"uuid":"f5c348db-1fa4-458d-8af9-c2147dbc0f41","hostname":"ozone-topology_datanode_6_1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":0,"storageReport":{"capacity":89297309696,"used":11271,"remaining":14071508992},"pipelines":[{"pipelineID":"40988189-5868-4f80-b9a3-6ba3e5377c5e","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_5_1.ozone-topology_net"},{"pipelineID":"b1d133cf-1855-4931-9fd3-d01069838f94","replicationType":"RATIS","replicationFactor":"ONE","leaderNode":"ozone-topology_datanode_6_1.ozone-topology_net"},{"pipelineID":"f914d471-53b1-4e1a-9696-5d2a66169d7a","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_6_1.ozone-topology_net"}],"containers":2,"openContainers":2,"leaderCount":2,"version":"1.4.0-SNAPSHOT","setupTime":1694610908194,"revision":"2652ec416c1610176428b323a878f13ab38c77e3","buildDate":"2023-09-13T12:34Z","layoutVersion":7,"networkLocation":"/rack2"},{"uuid":"8455a287-b332-4243-bc56-a22a4e0db383","hostname":"ozone-topology_datanode_5_1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":0,"storageReport":{"capacity":89297309696,"used":11271,"remaining":14071508992},"pipelines":[{"pipelineID":"40988189-5868-4f80-b9a3-6ba3e5377c5e","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_5_1.ozone-topology_net"},{"pipelineID":"9a84c227-5a9f-4731-b42f-48418707818f","replicationType":"RATIS","replicationFactor":"ONE","leaderNode":"ozone-topology_datanode_5_1.ozone-topology_net"},{"pipelineID":"f914d471-53b1-4e1a-9696-5d2a66169d7a","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_6_1.ozone-topology_net"}],"containers":2,"openContainers":2,"leaderCount":2,"version":"1.4.0-SNAPSHOT","setupTime":1694610904555,"revision":"2652ec416c1610176428b323a878f13ab38c77e3","buildDate":"2023-09-13T12:34Z","layoutVersion":7,"networkLocation":"/rack2"},{"uuid":"5de8ebfc-1048-487a-93ef-a34ef22813cd","hostname":"ozone-topology_datanode_2_1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":0,"storageReport":{"capacity":89297309696,"used":11271,"remaining":14071508992},"pipelines":[{"pipelineID":"40988189-5868-4f80-b9a3-6ba3e5377c5e","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_5_1.ozone-topology_net"},{"pipelineID":"f8cb90d9-1114-420d-8569-adac9ee81956","replicationType":"RATIS","replicationFactor":"ONE","leaderNode":"ozone-topology_datanode_2_1.ozone-topology_net"},{"pipelineID":"f914d471-53b1-4e1a-9696-5d2a66169d7a","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_6_1.ozone-topology_net"}],"containers":2,"openContainers":2,"leaderCount":1,"version":"1.4.0-SNAPSHOT","setupTime":1694610904415,"revision":"2652ec416c1610176428b323a878f13ab38c77e3","buildDate":"2023-09-13T12:34Z","layoutVersion":7,"networkLocation":"/rack1"},{"uuid":"75362ae3-1898-406f-a351-b6843dc3d301","hostname":"ozone-topology_datanode_3_1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":0,"storageReport":{"capacity":89297309696,"used":17411,"remaining":14071508992},"pipelines":[{"pipelineID":"4cba065c-b44c-41fd-b6e9-418692819a2c","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_3_1.ozone-topology_net"},{"pipelineID":"85209523-356b-461b-b9fe-f2f64b077f35","replicationType":"RATIS","replicationFactor":"ONE","leaderNode":"ozone-topology_datanode_3_1.ozone-topology_net"},{"pipelineID":"6d7c5447-4a95-42c2-ab9c-b9cfa12b3f0f","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_4_1.ozone-topology_net"}],"containers":2,"openContainers":2,"leaderCount":2,"version":"1.4.0-SNAPSHOT","setupTime":1694610907121,"revision":"2652ec416c1610176428b323a878f13ab38c77e3","buildDate":"2023-09-13T12:34Z","layoutVersion":7,"networkLocation":"/rack1"},{"uuid":"551c8c24-1b1c-4954-b7b6-53bc1a90a9b3","hostname":"ozone-topology_datanode_4_1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":0,"storageReport":{"capacity":89297309696,"used":17411,"remaining":14071508992},"pipelines":[{"pipelineID":"6757ee47-923f-4312-9025-61017732ee1f","replicationType":"RATIS","replicationFactor":"ONE","leaderNode":"ozone-topology_datanode_4_1.ozone-topology_net"},{"pipelineID":"4cba065c-b44c-41fd-b6e9-418692819a2c","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_3_1.ozone-topology_net"},{"pipelineID":"6d7c5447-4a95-42c2-ab9c-b9cfa12b3f0f","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_4_1.ozone-topology_net"}],"containers":2,"openContainers":2,"leaderCount":2,"version":"1.4.0-SNAPSHOT","setupTime":1694610904818,"revision":"2652ec416c1610176428b323a878f13ab38c77e3","buildDate":"2023-09-13T12:34Z","layoutVersion":7,"networkLocation":"/rack2"},{"uuid":"b0fc3838-a1ec-4576-9089-fd1e02f8ce3d","hostname":"ozone-topology_datanode_1_1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":0,"storageReport":{"capacity":89297309696,"used":21507,"remaining":14071508992},"pipelines":[{"pipelineID":"4cba065c-b44c-41fd-b6e9-418692819a2c","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_3_1.ozone-topology_net"},{"pipelineID":"6d7c5447-4a95-42c2-ab9c-b9cfa12b3f0f","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_4_1.ozone-topology_net"},{"pipelineID":"4d5dadb0-e81d-4e50-9e10-0cb49b29ed01","replicationType":"RATIS","replicationFactor":"ONE","leaderNode":"ozone-topology_datanode_1_1.ozone-topology_net"}],"containers":2,"openContainers":2,"leaderCount":1,"version":"1.4.0-SNAPSHOT","setupTime":1694610908275,"revision":"2652ec416c1610176428b323a878f13ab38c77e3","buildDate":"2023-09-13T12:34Z","layoutVersion":7,"networkLocation":"/rack1"}]}</msg>
<status status="PASS" starttime="20230913 13:19:19.544" endtime="20230913 13:19:19.545"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 13:19:19.546" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 13:19:19.545" endtime="20230913 13:19:19.546"/>
</kw>
<status status="PASS" starttime="20230913 13:19:19.493" endtime="20230913 13:19:19.546"/>
</kw>
<msg timestamp="20230913 13:19:19.547" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 13:19:19.492" endtime="20230913 13:19:19.547"/>
</kw>
<msg timestamp="20230913 13:19:19.547" level="INFO">${result} = {"totalCount":6,"datanodes":[{"uuid":"f5c348db-1fa4-458d-8af9-c2147dbc0f41","hostname":"ozone-topology_datanode_6_1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":0,"stor...</msg>
<status status="PASS" starttime="20230913 13:19:19.491" endtime="20230913 13:19:19.547"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>datanodes</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230913 13:19:19.547" endtime="20230913 13:19:19.548"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>datanode_1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230913 13:19:19.548" endtime="20230913 13:19:19.548"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>datanode_2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230913 13:19:19.549" endtime="20230913 13:19:19.549"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>datanode_3</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230913 13:19:19.549" endtime="20230913 13:19:19.550"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/pipelines</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 13:19:19.556" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/pipelines 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 13:19:19.613" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 13:19:19.613" level="INFO">${output} = {"totalCount":10,"pipelines":[{"pipelineId":"40988189-5868-4f80-b9a3-6ba3e5377c5e","status":"OPEN","leaderNode":"ozone-topology_datanode_5_1.ozone-topology_net","datanodes":[{"level":0,"parent":null,"...</msg>
<status status="PASS" starttime="20230913 13:19:19.553" endtime="20230913 13:19:19.613"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 13:19:19.615" level="INFO">{"totalCount":10,"pipelines":[{"pipelineId":"40988189-5868-4f80-b9a3-6ba3e5377c5e","status":"OPEN","leaderNode":"ozone-topology_datanode_5_1.ozone-topology_net","datanodes":[{"level":0,"parent":null,"cost":0,"uuid":"f5c348db-1fa4-458d-8af9-c2147dbc0f41","uuidString":"f5c348db-1fa4-458d-8af9-c2147dbc0f41","ipAddress":"10.5.0.9","hostName":"ozone-topology_datanode_6_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":9864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":-304651736,"decommissioned":false,"maintenance":false,"networkName":"f5c348db-1fa4-458d-8af9-c2147dbc0f41","networkLocation":"/rack2","networkFullPath":"/rack2/f5c348db-1fa4-458d-8af9-c2147dbc0f41","numOfLeaves":1},{"level":0,"parent":null,"cost":0,"uuid":"5de8ebfc-1048-487a-93ef-a34ef22813cd","uuidString":"5de8ebfc-1048-487a-93ef-a34ef22813cd","ipAddress":"10.5.0.5","hostName":"ozone-topology_datanode_2_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":9864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":1489960245,"decommissioned":false,"maintenance":false,"networkName":"5de8ebfc-1048-487a-93ef-a34ef22813cd","networkLocation":"/rack1","networkFullPath":"/rack1/5de8ebfc-1048-487a-93ef-a34ef22813cd","numOfLeaves":1},{"level":0,"parent":null,"cost":0,"uuid":"8455a287-b332-4243-bc56-a22a4e0db383","uuidString":"8455a287-b332-4243-bc56-a22a4e0db383","ipAddress":"10.5.0.8","hostName":"ozone-topology_datanode_5_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":9864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":1046443531,"decommissioned":false,"maintenance":false,"networkName":"8455a287-b332-4243-bc56-a22a4e0db383","networkLocation":"/rack2","networkFullPath":"/rack2/8455a287-b332-4243-bc56-a22a4e0db383","numOfLeaves":1}],"lastLeaderElection":0,"duration":180588,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"THREE","containers":1},{"pipelineId":"f8cb90d9-1114-420d-8569-adac9ee81956","status":"OPEN","leaderNode":"ozone-topology_datanode_2_1.ozone-topology_net","datanodes":[{"level":0,"parent":null,"cost":0,"uuid":"5de8ebfc-1048-487a-93ef-a34ef22813cd","uuidString":"5de8ebfc-1048-487a-93ef-a34ef22813cd","ipAddress":"10.5.0.5","hostName":"ozone-topology_datanode_2_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":9864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":1489960245,"decommissioned":false,"maintenance":false,"networkName":"5de8ebfc-1048-487a-93ef-a34ef22813cd","networkLocation":"/rack1","networkFullPath":"/rack1/5de8ebfc-1048-487a-93ef-a34ef22813cd","numOfLeaves":1}],"lastLeaderElection":0,"duration":180488,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"ONE","containers":0},{"pipelineId":"6757ee47-923f-4312-9025-61017732ee1f","status":"OPEN","leaderNode":"ozone-topology_datanode_4_1.ozone-topology_net","datanodes":[{"level":0,"parent":null,"cost":0,"uuid":"551c8c24-1b1c-4954-b7b6-53bc1a90a9b3","uuidString":"551c8c24-1b1c-4954-b7b6-53bc1a90a9b3","ipAddress":"10.5.0.7","hostName":"ozone-topology_datanode_4_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":9864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":1392055993,"decommissioned":false,"maintenance":false,"networkName":"551c8c24-1b1c-4954-b7b6-53bc1a90a9b3","networkLocation":"/rack2","networkFullPath":"/rack2/551c8c24-1b1c-4954-b7b6-53bc1a90a9b3","numOfLeaves":1}],"lastLeaderElection":0,"duration":180305,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"ONE","containers":0},{"pipelineId":"4cba065c-b44c-41fd-b6e9-418692819a2c","status":"OPEN","leaderNode":"ozone-topology_datanode_3_1.ozone-topology_net","datanodes":[{"level":0,"parent":null,"cost":0,"uuid":"75362ae3-1898-406f-a351-b6843dc3d301","uuidString":"75362ae3-1898-406f-a351-b6843dc3d301","ipAddress":"10.5.0.6","hostName":"ozone-topology_datanode_3_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":9864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":1710837122,"decommissioned":false,"maintenance":false,"networkName":"75362ae3-1898-406f-a351-b6843dc3d301","networkLocation":"/rack1","networkFullPath":"/rack1/75362ae3-1898-406f-a351-b6843dc3d301","numOfLeaves":1},{"level":0,"parent":null,"cost":0,"uuid":"551c8c24-1b1c-4954-b7b6-53bc1a90a9b3","uuidString":"551c8c24-1b1c-4954-b7b6-53bc1a90a9b3","ipAddress":"10.5.0.7","hostName":"ozone-topology_datanode_4_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":9864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":1392055993,"decommissioned":false,"maintenance":false,"networkName":"551c8c24-1b1c-4954-b7b6-53bc1a90a9b3","networkLocation":"/rack2","networkFullPath":"/rack2/551c8c24-1b1c-4954-b7b6-53bc1a90a9b3","numOfLeaves":1},{"level":0,"parent":null,"cost":0,"uuid":"b0fc3838-a1ec-4576-9089-fd1e02f8ce3d","uuidString":"b0fc3838-a1ec-4576-9089-fd1e02f8ce3d","ipAddress":"10.5.0.4","hostName":"ozone-topology_datanode_1_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":9864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":-74926477,"decommissioned":false,"maintenance":false,"networkName":"b0fc3838-a1ec-4576-9089-fd1e02f8ce3d","networkLocation":"/rack1","networkFullPath":"/rack1/b0fc3838-a1ec-4576-9089-fd1e02f8ce3d","numOfLeaves":1}],"lastLeaderElection":0,"duration":180500,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"THREE","containers":1},{"pipelineId":"85209523-356b-461b-b9fe-f2f64b077f35","status":"OPEN","leaderNode":"ozone-topology_datanode_3_1.ozone-topology_net","datanodes":[{"level":0,"parent":null,"cost":0,"uuid":"75362ae3-1898-406f-a351-b6843dc3d301","uuidString":"75362ae3-1898-406f-a351-b6843dc3d301","ipAddress":"10.5.0.6","hostName":"ozone-topology_datanode_3_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":9864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":1710837122,"decommissioned":false,"maintenance":false,"networkName":"75362ae3-1898-406f-a351-b6843dc3d301","networkLocation":"/rack1","networkFullPath":"/rack1/75362ae3-1898-406f-a351-b6843dc3d301","numOfLeaves":1}],"lastLeaderElection":0,"duration":180374,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"ONE","containers":0},{"pipelineId":"6d7c5447-4a95-42c2-ab9c-b9cfa12b3f0f","status":"OPEN","leaderNode":"ozone-topology_datanode_4_1.ozone-topology_net","datanodes":[{"level":0,"parent":null,"cost":0,"uuid":"75362ae3-1898-406f-a351-b6843dc3d301","uuidString":"75362ae3-1898-406f-a351-b6843dc3d301","ipAddress":"10.5.0.6","hostName":"ozone-topology_datanode_3_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":9864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":1710837122,"decommissioned":false,"maintenance":false,"networkName":"75362ae3-1898-406f-a351-b6843dc3d301","networkLocation":"/rack1","networkFullPath":"/rack1/75362ae3-1898-406f-a351-b6843dc3d301","numOfLeaves":1},{"level":0,"parent":null,"cost":0,"uuid":"551c8c24-1b1c-4954-b7b6-53bc1a90a9b3","uuidString":"551c8c24-1b1c-4954-b7b6-53bc1a90a9b3","ipAddress":"10.5.0.7","hostName":"ozone-topology_datanode_4_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":9864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":1392055993,"decommissioned":false,"maintenance":false,"networkName":"551c8c24-1b1c-4954-b7b6-53bc1a90a9b3","networkLocation":"/rack2","networkFullPath":"/rack2/551c8c24-1b1c-4954-b7b6-53bc1a90a9b3","numOfLeaves":1},{"level":0,"parent":null,"cost":0,"uuid":"b0fc3838-a1ec-4576-9089-fd1e02f8ce3d","uuidString":"b0fc3838-a1ec-4576-9089-fd1e02f8ce3d","ipAddress":"10.5.0.4","hostName":"ozone-topology_datanode_1_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":9864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":-74926477,"decommissioned":false,"maintenance":false,"networkName":"b0fc3838-a1ec-4576-9089-fd1e02f8ce3d","networkLocation":"/rack1","networkFullPath":"/rack1/b0fc3838-a1ec-4576-9089-fd1e02f8ce3d","numOfLeaves":1}],"lastLeaderElection":0,"duration":180315,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"THREE","containers":1},{"pipelineId":"9a84c227-5a9f-4731-b42f-48418707818f","status":"OPEN","leaderNode":"ozone-topology_datanode_5_1.ozone-topology_net","datanodes":[{"level":0,"parent":null,"cost":0,"uuid":"8455a287-b332-4243-bc56-a22a4e0db383","uuidString":"8455a287-b332-4243-bc56-a22a4e0db383","ipAddress":"10.5.0.8","hostName":"ozone-topology_datanode_5_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":9864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":1046443531,"decommissioned":false,"maintenance":false,"networkName":"8455a287-b332-4243-bc56-a22a4e0db383","networkLocation":"/rack2","networkFullPath":"/rack2/8455a287-b332-4243-bc56-a22a4e0db383","numOfLeaves":1}],"lastLeaderElection":0,"duration":180563,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"ONE","containers":0},{"pipelineId":"4d5dadb0-e81d-4e50-9e10-0cb49b29ed01","status":"OPEN","leaderNode":"ozone-topology_datanode_1_1.ozone-topology_net","datanodes":[{"level":0,"parent":null,"cost":0,"uuid":"b0fc3838-a1ec-4576-9089-fd1e02f8ce3d","uuidString":"b0fc3838-a1ec-4576-9089-fd1e02f8ce3d","ipAddress":"10.5.0.4","hostName":"ozone-topology_datanode_1_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":9864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":-74926477,"decommissioned":false,"maintenance":false,"networkName":"b0fc3838-a1ec-4576-9089-fd1e02f8ce3d","networkLocation":"/rack1","networkFullPath":"/rack1/b0fc3838-a1ec-4576-9089-fd1e02f8ce3d","numOfLeaves":1}],"lastLeaderElection":0,"duration":180258,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"ONE","containers":0},{"pipelineId":"b1d133cf-1855-4931-9fd3-d01069838f94","status":"OPEN","leaderNode":"ozone-topology_datanode_6_1.ozone-topology_net","datanodes":[{"level":0,"parent":null,"cost":0,"uuid":"f5c348db-1fa4-458d-8af9-c2147dbc0f41","uuidString":"f5c348db-1fa4-458d-8af9-c2147dbc0f41","ipAddress":"10.5.0.9","hostName":"ozone-topology_datanode_6_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":9864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":-304651736,"decommissioned":false,"maintenance":false,"networkName":"f5c348db-1fa4-458d-8af9-c2147dbc0f41","networkLocation":"/rack2","networkFullPath":"/rack2/f5c348db-1fa4-458d-8af9-c2147dbc0f41","numOfLeaves":1}],"lastLeaderElection":0,"duration":182784,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"ONE","containers":0},{"pipelineId":"f914d471-53b1-4e1a-9696-5d2a66169d7a","status":"OPEN","leaderNode":"ozone-topology_datanode_6_1.ozone-topology_net","datanodes":[{"level":0,"parent":null,"cost":0,"uuid":"f5c348db-1fa4-458d-8af9-c2147dbc0f41","uuidString":"f5c348db-1fa4-458d-8af9-c2147dbc0f41","ipAddress":"10.5.0.9","hostName":"ozone-topology_datanode_6_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":9864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":-304651736,"decommissioned":false,"maintenance":false,"networkName":"f5c348db-1fa4-458d-8af9-c2147dbc0f41","networkLocation":"/rack2","networkFullPath":"/rack2/f5c348db-1fa4-458d-8af9-c2147dbc0f41","numOfLeaves":1},{"level":0,"parent":null,"cost":0,"uuid":"5de8ebfc-1048-487a-93ef-a34ef22813cd","uuidString":"5de8ebfc-1048-487a-93ef-a34ef22813cd","ipAddress":"10.5.0.5","hostName":"ozone-topology_datanode_2_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":9864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":1489960245,"decommissioned":false,"maintenance":false,"networkName":"5de8ebfc-1048-487a-93ef-a34ef22813cd","networkLocation":"/rack1","networkFullPath":"/rack1/5de8ebfc-1048-487a-93ef-a34ef22813cd","numOfLeaves":1},{"level":0,"parent":null,"cost":0,"uuid":"8455a287-b332-4243-bc56-a22a4e0db383","uuidString":"8455a287-b332-4243-bc56-a22a4e0db383","ipAddress":"10.5.0.8","hostName":"ozone-topology_datanode_5_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":9864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":1046443531,"decommissioned":false,"maintenance":false,"networkName":"8455a287-b332-4243-bc56-a22a4e0db383","networkLocation":"/rack2","networkFullPath":"/rack2/8455a287-b332-4243-bc56-a22a4e0db383","numOfLeaves":1}],"lastLeaderElection":0,"duration":180412,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"THREE","containers":1}]}</msg>
<status status="PASS" starttime="20230913 13:19:19.614" endtime="20230913 13:19:19.616"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 13:19:19.616" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 13:19:19.616" endtime="20230913 13:19:19.617"/>
</kw>
<status status="PASS" starttime="20230913 13:19:19.552" endtime="20230913 13:19:19.617"/>
</kw>
<msg timestamp="20230913 13:19:19.617" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 13:19:19.551" endtime="20230913 13:19:19.617"/>
</kw>
<msg timestamp="20230913 13:19:19.618" level="INFO">${result} = {"totalCount":10,"pipelines":[{"pipelineId":"40988189-5868-4f80-b9a3-6ba3e5377c5e","status":"OPEN","leaderNode":"ozone-topology_datanode_5_1.ozone-topology_net","datanodes":[{"level":0,"parent":null,"...</msg>
<status status="PASS" starttime="20230913 13:19:19.550" endtime="20230913 13:19:19.618"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>pipelines</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230913 13:19:19.619" endtime="20230913 13:19:19.619"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230913 13:19:19.619" endtime="20230913 13:19:19.620"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>OPEN</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230913 13:19:19.620" endtime="20230913 13:19:19.620"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>datanode_1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230913 13:19:19.620" endtime="20230913 13:19:19.621"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>datanode_2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230913 13:19:19.621" endtime="20230913 13:19:19.622"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>datanode_3</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230913 13:19:19.622" endtime="20230913 13:19:19.622"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/clusterState</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 13:19:19.628" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/clusterState 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 13:19:19.683" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 13:19:19.684" level="INFO">${output} = {"deletedDirs":0,"pipelines":10,"totalDatanodes":6,"healthyDatanodes":6,"storageReport":{"capacity":535783858176,"used":90142,"remaining":84429053952},"containers":4,"missingContainers":0,"openContain...</msg>
<status status="PASS" starttime="20230913 13:19:19.624" endtime="20230913 13:19:19.684"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 13:19:19.686" level="INFO">{"deletedDirs":0,"pipelines":10,"totalDatanodes":6,"healthyDatanodes":6,"storageReport":{"capacity":535783858176,"used":90142,"remaining":84429053952},"containers":4,"missingContainers":0,"openContainers":4,"deletedContainers":0,"volumes":3,"buckets":2,"keys":11,"keysPendingDeletion":0}</msg>
<status status="PASS" starttime="20230913 13:19:19.685" endtime="20230913 13:19:19.686"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 13:19:19.687" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 13:19:19.686" endtime="20230913 13:19:19.687"/>
</kw>
<status status="PASS" starttime="20230913 13:19:19.624" endtime="20230913 13:19:19.687"/>
</kw>
<msg timestamp="20230913 13:19:19.687" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 13:19:19.623" endtime="20230913 13:19:19.687"/>
</kw>
<msg timestamp="20230913 13:19:19.688" level="INFO">${result} = {"deletedDirs":0,"pipelines":10,"totalDatanodes":6,"healthyDatanodes":6,"storageReport":{"capacity":535783858176,"used":90142,"remaining":84429053952},"containers":4,"missingContainers":0,"openContain...</msg>
<status status="PASS" starttime="20230913 13:19:19.623" endtime="20230913 13:19:19.688"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"totalDatanodes\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230913 13:19:19.688" endtime="20230913 13:19:19.688"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"healthyDatanodes\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230913 13:19:19.689" endtime="20230913 13:19:19.689"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"pipelines\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230913 13:19:19.690" endtime="20230913 13:19:19.690"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/containers/1/replicaHistory</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 13:19:19.696" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/containers/1/replicaHistory 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 13:19:19.720" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 13:19:19.720" level="INFO">${output} = [{"containerId":1,"datanodeUuid":"75362ae3-1898-406f-a351-b6843dc3d301","datanodeHost":"ozone-topology_datanode_3_1.ozone-topology_net","firstSeenTime":1694611036415,"lastSeenTime":1694611036415,"stat...</msg>
<status status="PASS" starttime="20230913 13:19:19.693" endtime="20230913 13:19:19.720"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 13:19:19.721" level="INFO">[{"containerId":1,"datanodeUuid":"75362ae3-1898-406f-a351-b6843dc3d301","datanodeHost":"ozone-topology_datanode_3_1.ozone-topology_net","firstSeenTime":1694611036415,"lastSeenTime":1694611036415,"state":"OPEN","lastBcsId":0},{"containerId":1,"datanodeUuid":"551c8c24-1b1c-4954-b7b6-53bc1a90a9b3","datanodeHost":"ozone-topology_datanode_4_1.ozone-topology_net","firstSeenTime":1694611036195,"lastSeenTime":1694611036195,"state":"OPEN","lastBcsId":0},{"containerId":1,"datanodeUuid":"b0fc3838-a1ec-4576-9089-fd1e02f8ce3d","datanodeHost":"ozone-topology_datanode_1_1.ozone-topology_net","firstSeenTime":1694611036538,"lastSeenTime":1694611036538,"state":"OPEN","lastBcsId":0}]</msg>
<status status="PASS" starttime="20230913 13:19:19.720" endtime="20230913 13:19:19.721"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 13:19:19.722" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 13:19:19.722" endtime="20230913 13:19:19.722"/>
</kw>
<status status="PASS" starttime="20230913 13:19:19.692" endtime="20230913 13:19:19.723"/>
</kw>
<msg timestamp="20230913 13:19:19.723" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 13:19:19.691" endtime="20230913 13:19:19.723"/>
</kw>
<msg timestamp="20230913 13:19:19.723" level="INFO">${result} = [{"containerId":1,"datanodeUuid":"75362ae3-1898-406f-a351-b6843dc3d301","datanodeHost":"ozone-topology_datanode_3_1.ozone-topology_net","firstSeenTime":1694611036415,"lastSeenTime":1694611036415,"stat...</msg>
<status status="PASS" starttime="20230913 13:19:19.690" endtime="20230913 13:19:19.723"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"containerId\":1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230913 13:19:19.723" endtime="20230913 13:19:19.724"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230913 13:19:19.490" endtime="20230913 13:19:19.724"/>
</test>
<test id="s1-s3-s1-t3" name="Check if Recon Web UI is up" line="94">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230913 13:19:19.728" endtime="20230913 13:19:19.728"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${ENDPOINT_URL}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 13:19:19.733" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 13:19:19.761" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 13:19:19.761" level="INFO">${output} = &lt;!doctype html&gt;&lt;html lang="en"&gt;&lt;head&gt;&lt;meta charset="utf-8"/&gt;&lt;link rel="shortcut icon" href="/favicon.ico"/&gt;&lt;meta name="viewport" content="width=device-width,initial-scale=1"/&gt;&lt;meta name="theme-color" ...</msg>
<status status="PASS" starttime="20230913 13:19:19.730" endtime="20230913 13:19:19.761"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 13:19:19.762" level="INFO">&lt;!doctype html&gt;&lt;html lang="en"&gt;&lt;head&gt;&lt;meta charset="utf-8"/&gt;&lt;link rel="shortcut icon" href="/favicon.ico"/&gt;&lt;meta name="viewport" content="width=device-width,initial-scale=1"/&gt;&lt;meta name="theme-color" content="#000000"/&gt;&lt;link rel="manifest" href="/manifest.json"/&gt;&lt;title&gt;Ozone Recon&lt;/title&gt;&lt;link href="/static/css/2.58b4e004.chunk.css" rel="stylesheet"&gt;&lt;link href="/static/css/main.95934262.chunk.css" rel="stylesheet"&gt;&lt;/head&gt;&lt;body&gt;&lt;noscript&gt;You need to enable JavaScript to run this app.&lt;/noscript&gt;&lt;div id="root"&gt;&lt;/div&gt;&lt;script&gt;!function(e){function r(r){for(var n,l,f=r[0],i=r[1],a=r[2],p=0,s=[];p&lt;f.length;p++)l=f[p],Object.prototype.hasOwnProperty.call(o,l)&amp;&amp;o[l]&amp;&amp;s.push(o[l][0]),o[l]=0;for(n in i)Object.prototype.hasOwnProperty.call(i,n)&amp;&amp;(e[n]=i[n]);for(c&amp;&amp;c(r);s.length;)s.shift()();return u.push.apply(u,a||[]),t()}function t(){for(var e,r=0;r&lt;u.length;r++){for(var t=u[r],n=!0,f=1;f&lt;t.length;f++){var i=t[f];0!==o[i]&amp;&amp;(n=!1)}n&amp;&amp;(u.splice(r--,1),e=l(l.s=t[0]))}return e}var n={},o={1:0},u=[];function l(r){if(n[r])return n[r].exports;var t=n[r]={i:r,l:!1,exports:{}};return e[r].call(t.exports,t,t.exports,l),t.l=!0,t.exports}l.m=e,l.c=n,l.d=function(e,r,t){l.o(e,r)||Object.defineProperty(e,r,{enumerable:!0,get:t})},l.r=function(e){"undefined"!=typeof Symbol&amp;&amp;Symbol.toStringTag&amp;&amp;Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},l.t=function(e,r){if(1&amp;r&amp;&amp;(e=l(e)),8&amp;r)return e;if(4&amp;r&amp;&amp;"object"==typeof e&amp;&amp;e&amp;&amp;e.__esModule)return e;var t=Object.create(null);if(l.r(t),Object.defineProperty(t,"default",{enumerable:!0,value:e}),2&amp;r&amp;&amp;"string"!=typeof e)for(var n in e)l.d(t,n,function(r){return e[r]}.bind(null,n));return t},l.n=function(e){var r=e&amp;&amp;e.__esModule?function(){return e.default}:function(){return e};return l.d(r,"a",r),r},l.o=function(e,r){return Object.prototype.hasOwnProperty.call(e,r)},l.p="/";var f=this["webpackJsonpozone-recon"]=this["webpackJsonpozone-recon"]||[],i=f.push.bind(f);f.push=r,f=f.slice();for(var a=0;a&lt;f.length;a++)r(f[a]);var c=i;t()}([])&lt;/script&gt;&lt;script src="/static/js/2.60ad2f10.chunk.js"&gt;&lt;/script&gt;&lt;script src="/static/js/main.8c26211b.chunk.js"&gt;&lt;/script&gt;&lt;/body&gt;&lt;/html&gt;</msg>
<status status="PASS" starttime="20230913 13:19:19.761" endtime="20230913 13:19:19.762"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 13:19:19.763" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 13:19:19.763" endtime="20230913 13:19:19.763"/>
</kw>
<status status="PASS" starttime="20230913 13:19:19.729" endtime="20230913 13:19:19.764"/>
</kw>
<msg timestamp="20230913 13:19:19.764" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 13:19:19.729" endtime="20230913 13:19:19.764"/>
</kw>
<msg timestamp="20230913 13:19:19.765" level="INFO">${result} = &lt;!doctype html&gt;&lt;html lang="en"&gt;&lt;head&gt;&lt;meta charset="utf-8"/&gt;&lt;link rel="shortcut icon" href="/favicon.ico"/&gt;&lt;meta name="viewport" content="width=device-width,initial-scale=1"/&gt;&lt;meta name="theme-color" ...</msg>
<status status="PASS" starttime="20230913 13:19:19.728" endtime="20230913 13:19:19.765"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Ozone Recon</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230913 13:19:19.765" endtime="20230913 13:19:19.766"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230913 13:19:19.727" endtime="20230913 13:19:19.766"/>
</test>
<test id="s1-s3-s1-t4" name="Check web UI access" line="99">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 13:19:19.774" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 13:19:19.783" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 13:19:19.783" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230913 13:19:19.770" endtime="20230913 13:19:19.783"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 13:19:19.785" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230913 13:19:19.784" endtime="20230913 13:19:19.785"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 13:19:19.786" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 13:19:19.785" endtime="20230913 13:19:19.786"/>
</kw>
<status status="PASS" starttime="20230913 13:19:19.770" endtime="20230913 13:19:19.786"/>
</kw>
<msg timestamp="20230913 13:19:19.786" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 13:19:19.769" endtime="20230913 13:19:19.786"/>
</kw>
<status status="PASS" starttime="20230913 13:19:19.769" endtime="20230913 13:19:19.787"/>
</kw>
<kw name="Check http return code">
<arg>${ENDPOINT_URL}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 13:19:19.793" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 13:19:19.813" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 13:19:19.813" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230913 13:19:19.789" endtime="20230913 13:19:19.813"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 13:19:19.814" level="INFO">200</msg>
<status status="PASS" starttime="20230913 13:19:19.813" endtime="20230913 13:19:19.814"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 13:19:19.816" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 13:19:19.814" endtime="20230913 13:19:19.816"/>
</kw>
<status status="PASS" starttime="20230913 13:19:19.789" endtime="20230913 13:19:19.818"/>
</kw>
<msg timestamp="20230913 13:19:19.818" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 13:19:19.788" endtime="20230913 13:19:19.818"/>
</kw>
<msg timestamp="20230913 13:19:19.819" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230913 13:19:19.788" endtime="20230913 13:19:19.819"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230913 13:19:19.820" endtime="20230913 13:19:19.820"/>
</kw>
<status status="NOT RUN" starttime="20230913 13:19:19.819" endtime="20230913 13:19:19.820"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230913 13:19:19.820" endtime="20230913 13:19:19.820"/>
</kw>
<status status="PASS" starttime="20230913 13:19:19.820" endtime="20230913 13:19:19.821"/>
</branch>
<status status="PASS" starttime="20230913 13:19:19.819" endtime="20230913 13:19:19.821"/>
</if>
<status status="PASS" starttime="20230913 13:19:19.787" endtime="20230913 13:19:19.821"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230913 13:19:19.822" endtime="20230913 13:19:19.822"/>
</kw>
<status status="PASS" starttime="20230913 13:19:19.821" endtime="20230913 13:19:19.822"/>
</kw>
<kw name="Check http return code">
<arg>${ENDPOINT_URL}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 13:19:19.829" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 13:19:19.849" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 13:19:19.849" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230913 13:19:19.825" endtime="20230913 13:19:19.849"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 13:19:19.851" level="INFO">200</msg>
<status status="PASS" starttime="20230913 13:19:19.850" endtime="20230913 13:19:19.851"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 13:19:19.852" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 13:19:19.851" endtime="20230913 13:19:19.852"/>
</kw>
<status status="PASS" starttime="20230913 13:19:19.824" endtime="20230913 13:19:19.852"/>
</kw>
<msg timestamp="20230913 13:19:19.852" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 13:19:19.824" endtime="20230913 13:19:19.853"/>
</kw>
<msg timestamp="20230913 13:19:19.853" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230913 13:19:19.823" endtime="20230913 13:19:19.853"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230913 13:19:19.854" endtime="20230913 13:19:19.854"/>
</kw>
<status status="NOT RUN" starttime="20230913 13:19:19.853" endtime="20230913 13:19:19.854"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230913 13:19:19.854" endtime="20230913 13:19:19.855"/>
</kw>
<status status="PASS" starttime="20230913 13:19:19.854" endtime="20230913 13:19:19.855"/>
</branch>
<status status="PASS" starttime="20230913 13:19:19.853" endtime="20230913 13:19:19.855"/>
</if>
<status status="PASS" starttime="20230913 13:19:19.822" endtime="20230913 13:19:19.855"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230913 13:19:19.768" endtime="20230913 13:19:19.855"/>
</test>
<test id="s1-s3-s1-t5" name="Check admin only api access" line="107">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 13:19:19.863" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 13:19:19.868" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 13:19:19.868" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230913 13:19:19.860" endtime="20230913 13:19:19.868"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 13:19:19.869" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230913 13:19:19.869" endtime="20230913 13:19:19.870"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 13:19:19.870" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 13:19:19.870" endtime="20230913 13:19:19.871"/>
</kw>
<status status="PASS" starttime="20230913 13:19:19.859" endtime="20230913 13:19:19.871"/>
</kw>
<msg timestamp="20230913 13:19:19.871" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 13:19:19.859" endtime="20230913 13:19:19.871"/>
</kw>
<status status="PASS" starttime="20230913 13:19:19.858" endtime="20230913 13:19:19.871"/>
</kw>
<kw name="Check http return code">
<arg>${ADMIN_API_ENDPOINT_URL}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 13:19:19.878" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 13:19:19.904" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 13:19:19.904" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230913 13:19:19.874" endtime="20230913 13:19:19.904"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 13:19:19.906" level="INFO">200</msg>
<status status="PASS" starttime="20230913 13:19:19.905" endtime="20230913 13:19:19.906"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 13:19:19.907" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 13:19:19.906" endtime="20230913 13:19:19.908"/>
</kw>
<status status="PASS" starttime="20230913 13:19:19.873" endtime="20230913 13:19:19.908"/>
</kw>
<msg timestamp="20230913 13:19:19.908" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 13:19:19.873" endtime="20230913 13:19:19.908"/>
</kw>
<msg timestamp="20230913 13:19:19.908" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230913 13:19:19.872" endtime="20230913 13:19:19.908"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230913 13:19:19.909" endtime="20230913 13:19:19.910"/>
</kw>
<status status="NOT RUN" starttime="20230913 13:19:19.909" endtime="20230913 13:19:19.910"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230913 13:19:19.910" endtime="20230913 13:19:19.910"/>
</kw>
<status status="PASS" starttime="20230913 13:19:19.910" endtime="20230913 13:19:19.910"/>
</branch>
<status status="PASS" starttime="20230913 13:19:19.909" endtime="20230913 13:19:19.911"/>
</if>
<status status="PASS" starttime="20230913 13:19:19.871" endtime="20230913 13:19:19.911"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230913 13:19:19.912" endtime="20230913 13:19:19.912"/>
</kw>
<status status="PASS" starttime="20230913 13:19:19.911" endtime="20230913 13:19:19.912"/>
</kw>
<kw name="Check http return code">
<arg>${ADMIN_API_ENDPOINT_URL}</arg>
<arg>403</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 13:19:19.919" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 13:19:19.946" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 13:19:19.946" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230913 13:19:19.915" endtime="20230913 13:19:19.951"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 13:19:19.953" level="INFO">200</msg>
<status status="PASS" starttime="20230913 13:19:19.952" endtime="20230913 13:19:19.953"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 13:19:19.954" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 13:19:19.954" endtime="20230913 13:19:19.954"/>
</kw>
<status status="PASS" starttime="20230913 13:19:19.914" endtime="20230913 13:19:19.955"/>
</kw>
<msg timestamp="20230913 13:19:19.955" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 13:19:19.914" endtime="20230913 13:19:19.955"/>
</kw>
<msg timestamp="20230913 13:19:19.955" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230913 13:19:19.913" endtime="20230913 13:19:19.955"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230913 13:19:19.956" endtime="20230913 13:19:19.956"/>
</kw>
<status status="NOT RUN" starttime="20230913 13:19:19.955" endtime="20230913 13:19:19.956"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230913 13:19:19.956" endtime="20230913 13:19:19.957"/>
</kw>
<status status="PASS" starttime="20230913 13:19:19.956" endtime="20230913 13:19:19.957"/>
</branch>
<status status="PASS" starttime="20230913 13:19:19.955" endtime="20230913 13:19:19.957"/>
</if>
<status status="PASS" starttime="20230913 13:19:19.913" endtime="20230913 13:19:19.957"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230913 13:19:19.958" endtime="20230913 13:19:19.958"/>
</kw>
<status status="PASS" starttime="20230913 13:19:19.957" endtime="20230913 13:19:19.958"/>
</kw>
<kw name="Check http return code">
<arg>${ADMIN_API_ENDPOINT_URL}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 13:19:19.964" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 13:19:19.983" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 13:19:19.983" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230913 13:19:19.960" endtime="20230913 13:19:19.983"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 13:19:19.985" level="INFO">200</msg>
<status status="PASS" starttime="20230913 13:19:19.984" endtime="20230913 13:19:19.985"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 13:19:19.986" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 13:19:19.985" endtime="20230913 13:19:19.986"/>
</kw>
<status status="PASS" starttime="20230913 13:19:19.960" endtime="20230913 13:19:19.986"/>
</kw>
<msg timestamp="20230913 13:19:19.986" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 13:19:19.960" endtime="20230913 13:19:19.986"/>
</kw>
<msg timestamp="20230913 13:19:19.987" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230913 13:19:19.959" endtime="20230913 13:19:19.987"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230913 13:19:19.987" endtime="20230913 13:19:19.987"/>
</kw>
<status status="NOT RUN" starttime="20230913 13:19:19.987" endtime="20230913 13:19:19.987"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230913 13:19:19.988" endtime="20230913 13:19:19.988"/>
</kw>
<status status="PASS" starttime="20230913 13:19:19.988" endtime="20230913 13:19:19.988"/>
</branch>
<status status="PASS" starttime="20230913 13:19:19.987" endtime="20230913 13:19:19.989"/>
</if>
<status status="PASS" starttime="20230913 13:19:19.958" endtime="20230913 13:19:19.989"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230913 13:19:19.990" endtime="20230913 13:19:19.990"/>
</kw>
<status status="PASS" starttime="20230913 13:19:19.989" endtime="20230913 13:19:19.990"/>
</kw>
<kw name="Check http return code">
<arg>${ADMIN_API_ENDPOINT_URL}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 13:19:19.997" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 13:19:20.013" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 13:19:20.013" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230913 13:19:19.993" endtime="20230913 13:19:20.013"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 13:19:20.015" level="INFO">200</msg>
<status status="PASS" starttime="20230913 13:19:20.014" endtime="20230913 13:19:20.015"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 13:19:20.016" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 13:19:20.015" endtime="20230913 13:19:20.016"/>
</kw>
<status status="PASS" starttime="20230913 13:19:19.992" endtime="20230913 13:19:20.016"/>
</kw>
<msg timestamp="20230913 13:19:20.016" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 13:19:19.992" endtime="20230913 13:19:20.017"/>
</kw>
<msg timestamp="20230913 13:19:20.017" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230913 13:19:19.991" endtime="20230913 13:19:20.017"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230913 13:19:20.017" endtime="20230913 13:19:20.018"/>
</kw>
<status status="NOT RUN" starttime="20230913 13:19:20.017" endtime="20230913 13:19:20.018"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230913 13:19:20.018" endtime="20230913 13:19:20.018"/>
</kw>
<status status="PASS" starttime="20230913 13:19:20.018" endtime="20230913 13:19:20.019"/>
</branch>
<status status="PASS" starttime="20230913 13:19:20.017" endtime="20230913 13:19:20.019"/>
</if>
<status status="PASS" starttime="20230913 13:19:19.990" endtime="20230913 13:19:20.019"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230913 13:19:19.857" endtime="20230913 13:19:20.019"/>
</test>
<test id="s1-s3-s1-t6" name="Check unhealthy, (admin) api access" line="120">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 13:19:20.031" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 13:19:20.037" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 13:19:20.037" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230913 13:19:20.023" endtime="20230913 13:19:20.037"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 13:19:20.039" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230913 13:19:20.038" endtime="20230913 13:19:20.039"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 13:19:20.040" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 13:19:20.039" endtime="20230913 13:19:20.040"/>
</kw>
<status status="PASS" starttime="20230913 13:19:20.022" endtime="20230913 13:19:20.040"/>
</kw>
<msg timestamp="20230913 13:19:20.040" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 13:19:20.022" endtime="20230913 13:19:20.040"/>
</kw>
<status status="PASS" starttime="20230913 13:19:20.021" endtime="20230913 13:19:20.041"/>
</kw>
<kw name="Check http return code">
<arg>${UNHEALTHY_ENDPOINT_URL}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 13:19:20.049" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers/unhealthy 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 13:19:20.111" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 13:19:20.111" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230913 13:19:20.044" endtime="20230913 13:19:20.112"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 13:19:20.113" level="INFO">200</msg>
<status status="PASS" starttime="20230913 13:19:20.112" endtime="20230913 13:19:20.113"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 13:19:20.114" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 13:19:20.113" endtime="20230913 13:19:20.114"/>
</kw>
<status status="PASS" starttime="20230913 13:19:20.043" endtime="20230913 13:19:20.115"/>
</kw>
<msg timestamp="20230913 13:19:20.115" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 13:19:20.042" endtime="20230913 13:19:20.115"/>
</kw>
<msg timestamp="20230913 13:19:20.118" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230913 13:19:20.042" endtime="20230913 13:19:20.118"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230913 13:19:20.119" endtime="20230913 13:19:20.119"/>
</kw>
<status status="NOT RUN" starttime="20230913 13:19:20.118" endtime="20230913 13:19:20.119"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230913 13:19:20.120" endtime="20230913 13:19:20.120"/>
</kw>
<status status="PASS" starttime="20230913 13:19:20.119" endtime="20230913 13:19:20.120"/>
</branch>
<status status="PASS" starttime="20230913 13:19:20.118" endtime="20230913 13:19:20.120"/>
</if>
<status status="PASS" starttime="20230913 13:19:20.041" endtime="20230913 13:19:20.120"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230913 13:19:20.121" endtime="20230913 13:19:20.122"/>
</kw>
<status status="PASS" starttime="20230913 13:19:20.121" endtime="20230913 13:19:20.122"/>
</kw>
<kw name="Check http return code">
<arg>${UNHEALTHY_ENDPOINT_URL}</arg>
<arg>403</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 13:19:20.140" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers/unhealthy 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 13:19:20.167" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 13:19:20.168" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230913 13:19:20.125" endtime="20230913 13:19:20.168"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 13:19:20.169" level="INFO">200</msg>
<status status="PASS" starttime="20230913 13:19:20.168" endtime="20230913 13:19:20.169"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 13:19:20.170" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 13:19:20.170" endtime="20230913 13:19:20.170"/>
</kw>
<status status="PASS" starttime="20230913 13:19:20.124" endtime="20230913 13:19:20.171"/>
</kw>
<msg timestamp="20230913 13:19:20.171" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 13:19:20.124" endtime="20230913 13:19:20.171"/>
</kw>
<msg timestamp="20230913 13:19:20.171" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230913 13:19:20.123" endtime="20230913 13:19:20.171"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230913 13:19:20.172" endtime="20230913 13:19:20.172"/>
</kw>
<status status="NOT RUN" starttime="20230913 13:19:20.171" endtime="20230913 13:19:20.172"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230913 13:19:20.172" endtime="20230913 13:19:20.173"/>
</kw>
<status status="PASS" starttime="20230913 13:19:20.172" endtime="20230913 13:19:20.173"/>
</branch>
<status status="PASS" starttime="20230913 13:19:20.171" endtime="20230913 13:19:20.173"/>
</if>
<status status="PASS" starttime="20230913 13:19:20.122" endtime="20230913 13:19:20.173"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230913 13:19:20.174" endtime="20230913 13:19:20.174"/>
</kw>
<status status="PASS" starttime="20230913 13:19:20.173" endtime="20230913 13:19:20.174"/>
</kw>
<kw name="Check http return code">
<arg>${UNHEALTHY_ENDPOINT_URL}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 13:19:20.180" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers/unhealthy 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 13:19:20.207" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 13:19:20.207" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230913 13:19:20.177" endtime="20230913 13:19:20.207"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 13:19:20.209" level="INFO">200</msg>
<status status="PASS" starttime="20230913 13:19:20.208" endtime="20230913 13:19:20.209"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 13:19:20.210" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 13:19:20.209" endtime="20230913 13:19:20.210"/>
</kw>
<status status="PASS" starttime="20230913 13:19:20.176" endtime="20230913 13:19:20.210"/>
</kw>
<msg timestamp="20230913 13:19:20.210" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 13:19:20.175" endtime="20230913 13:19:20.210"/>
</kw>
<msg timestamp="20230913 13:19:20.210" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230913 13:19:20.175" endtime="20230913 13:19:20.210"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230913 13:19:20.211" endtime="20230913 13:19:20.211"/>
</kw>
<status status="NOT RUN" starttime="20230913 13:19:20.211" endtime="20230913 13:19:20.211"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230913 13:19:20.212" endtime="20230913 13:19:20.212"/>
</kw>
<status status="PASS" starttime="20230913 13:19:20.211" endtime="20230913 13:19:20.212"/>
</branch>
<status status="PASS" starttime="20230913 13:19:20.211" endtime="20230913 13:19:20.212"/>
</if>
<status status="PASS" starttime="20230913 13:19:20.174" endtime="20230913 13:19:20.212"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230913 13:19:20.213" endtime="20230913 13:19:20.213"/>
</kw>
<status status="PASS" starttime="20230913 13:19:20.212" endtime="20230913 13:19:20.213"/>
</kw>
<kw name="Check http return code">
<arg>${UNHEALTHY_ENDPOINT_URL}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 13:19:20.219" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers/unhealthy 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 13:19:20.238" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 13:19:20.238" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230913 13:19:20.216" endtime="20230913 13:19:20.238"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 13:19:20.240" level="INFO">200</msg>
<status status="PASS" starttime="20230913 13:19:20.239" endtime="20230913 13:19:20.240"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 13:19:20.241" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 13:19:20.240" endtime="20230913 13:19:20.241"/>
</kw>
<status status="PASS" starttime="20230913 13:19:20.215" endtime="20230913 13:19:20.241"/>
</kw>
<msg timestamp="20230913 13:19:20.241" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 13:19:20.215" endtime="20230913 13:19:20.242"/>
</kw>
<msg timestamp="20230913 13:19:20.242" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230913 13:19:20.214" endtime="20230913 13:19:20.242"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230913 13:19:20.243" endtime="20230913 13:19:20.243"/>
</kw>
<status status="NOT RUN" starttime="20230913 13:19:20.242" endtime="20230913 13:19:20.243"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230913 13:19:20.243" endtime="20230913 13:19:20.244"/>
</kw>
<status status="PASS" starttime="20230913 13:19:20.243" endtime="20230913 13:19:20.244"/>
</branch>
<status status="PASS" starttime="20230913 13:19:20.242" endtime="20230913 13:19:20.244"/>
</if>
<status status="PASS" starttime="20230913 13:19:20.214" endtime="20230913 13:19:20.244"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230913 13:19:20.020" endtime="20230913 13:19:20.244"/>
</test>
<test id="s1-s3-s1-t7" name="Check normal api access" line="133">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 13:19:20.251" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 13:19:20.256" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 13:19:20.256" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230913 13:19:20.248" endtime="20230913 13:19:20.256"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 13:19:20.258" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230913 13:19:20.257" endtime="20230913 13:19:20.258"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 13:19:20.258" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 13:19:20.258" endtime="20230913 13:19:20.259"/>
</kw>
<status status="PASS" starttime="20230913 13:19:20.247" endtime="20230913 13:19:20.259"/>
</kw>
<msg timestamp="20230913 13:19:20.259" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 13:19:20.247" endtime="20230913 13:19:20.259"/>
</kw>
<status status="PASS" starttime="20230913 13:19:20.246" endtime="20230913 13:19:20.259"/>
</kw>
<kw name="Check http return code">
<arg>${NON_ADMIN_API_ENDPOINT_URL}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 13:19:20.264" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/clusterState 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 13:19:20.296" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 13:19:20.297" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230913 13:19:20.262" endtime="20230913 13:19:20.297"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 13:19:20.298" level="INFO">200</msg>
<status status="PASS" starttime="20230913 13:19:20.297" endtime="20230913 13:19:20.298"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 13:19:20.299" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 13:19:20.299" endtime="20230913 13:19:20.300"/>
</kw>
<status status="PASS" starttime="20230913 13:19:20.261" endtime="20230913 13:19:20.301"/>
</kw>
<msg timestamp="20230913 13:19:20.301" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 13:19:20.261" endtime="20230913 13:19:20.301"/>
</kw>
<msg timestamp="20230913 13:19:20.301" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230913 13:19:20.260" endtime="20230913 13:19:20.301"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230913 13:19:20.302" endtime="20230913 13:19:20.302"/>
</kw>
<status status="NOT RUN" starttime="20230913 13:19:20.301" endtime="20230913 13:19:20.302"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230913 13:19:20.302" endtime="20230913 13:19:20.303"/>
</kw>
<status status="PASS" starttime="20230913 13:19:20.302" endtime="20230913 13:19:20.303"/>
</branch>
<status status="PASS" starttime="20230913 13:19:20.301" endtime="20230913 13:19:20.303"/>
</if>
<status status="PASS" starttime="20230913 13:19:20.260" endtime="20230913 13:19:20.303"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230913 13:19:20.304" endtime="20230913 13:19:20.305"/>
</kw>
<status status="PASS" starttime="20230913 13:19:20.303" endtime="20230913 13:19:20.305"/>
</kw>
<kw name="Check http return code">
<arg>${NON_ADMIN_API_ENDPOINT_URL}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 13:19:20.311" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/clusterState 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 13:19:20.347" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 13:19:20.347" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230913 13:19:20.307" endtime="20230913 13:19:20.347"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 13:19:20.349" level="INFO">200</msg>
<status status="PASS" starttime="20230913 13:19:20.348" endtime="20230913 13:19:20.349"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 13:19:20.350" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 13:19:20.349" endtime="20230913 13:19:20.350"/>
</kw>
<status status="PASS" starttime="20230913 13:19:20.306" endtime="20230913 13:19:20.350"/>
</kw>
<msg timestamp="20230913 13:19:20.350" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 13:19:20.306" endtime="20230913 13:19:20.350"/>
</kw>
<msg timestamp="20230913 13:19:20.351" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230913 13:19:20.305" endtime="20230913 13:19:20.351"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230913 13:19:20.351" endtime="20230913 13:19:20.353"/>
</kw>
<status status="NOT RUN" starttime="20230913 13:19:20.351" endtime="20230913 13:19:20.353"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230913 13:19:20.353" endtime="20230913 13:19:20.354"/>
</kw>
<status status="PASS" starttime="20230913 13:19:20.353" endtime="20230913 13:19:20.354"/>
</branch>
<status status="PASS" starttime="20230913 13:19:20.351" endtime="20230913 13:19:20.354"/>
</if>
<status status="PASS" starttime="20230913 13:19:20.305" endtime="20230913 13:19:20.354"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230913 13:19:20.245" endtime="20230913 13:19:20.357"/>
</test>
<doc>Smoke test to start cluster with docker-compose environments.</doc>
<status status="PASS" starttime="20230913 13:17:55.119" endtime="20230913 13:19:20.359"/>
</suite>
<suite id="s1-s3-s2" name="Recon-Nssummary" source="/opt/hadoop/smoketest/recon/recon-nssummary.robot">
<test id="s1-s3-s2-t1" name="Check volume creation" line="99">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 13:19:20.380" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 13:19:20.384" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 13:19:20.384" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230913 13:19:20.376" endtime="20230913 13:19:20.384"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 13:19:20.385" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230913 13:19:20.385" endtime="20230913 13:19:20.385"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 13:19:20.386" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 13:19:20.386" endtime="20230913 13:19:20.386"/>
</kw>
<status status="PASS" starttime="20230913 13:19:20.376" endtime="20230913 13:19:20.386"/>
</kw>
<msg timestamp="20230913 13:19:20.386" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 13:19:20.376" endtime="20230913 13:19:20.387"/>
</kw>
<status status="PASS" starttime="20230913 13:19:20.375" endtime="20230913 13:19:20.387"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230913 13:19:20.388" endtime="20230913 13:19:20.388"/>
</kw>
<status status="PASS" starttime="20230913 13:19:20.387" endtime="20230913 13:19:20.388"/>
</kw>
<kw name="Create volume">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[LOWER]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230913 13:19:20.390" level="INFO">${random} = jidtr</msg>
<status status="PASS" starttime="20230913 13:19:20.389" endtime="20230913 13:19:20.390"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${VOLUME}</arg>
<arg>vol-${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230913 13:19:20.390" level="INFO">${VOLUME} = vol-jidtr</msg>
<status status="PASS" starttime="20230913 13:19:20.390" endtime="20230913 13:19:20.390"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create /${VOLUME}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 13:19:20.413" level="INFO">Running command 'ozone sh volume create /vol-jidtr 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 13:19:25.448" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 13:19:25.448" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230913 13:19:20.410" endtime="20230913 13:19:25.448"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 13:19:25.450" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230913 13:19:25.449" endtime="20230913 13:19:25.451"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 13:19:25.451" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 13:19:25.451" endtime="20230913 13:19:25.452"/>
</kw>
<status status="PASS" starttime="20230913 13:19:20.410" endtime="20230913 13:19:25.452"/>
</kw>
<msg timestamp="20230913 13:19:25.452" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 13:19:20.409" endtime="20230913 13:19:25.452"/>
</kw>
<msg timestamp="20230913 13:19:25.452" level="INFO">${result} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230913 13:19:20.391" endtime="20230913 13:19:25.452"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230913 13:19:25.453" endtime="20230913 13:19:25.453"/>
</kw>
<status status="PASS" starttime="20230913 13:19:20.388" endtime="20230913 13:19:25.453"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230913 13:19:20.374" endtime="20230913 13:19:25.454"/>
</test>
<test id="s1-s3-s2-t2" name="Check bucket creation" line="104">
<kw name="Create bucket">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[LOWER]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230913 13:19:25.457" level="INFO">${random} = corzq</msg>
<status status="PASS" starttime="20230913 13:19:25.456" endtime="20230913 13:19:25.457"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${BUCKET}</arg>
<arg>buc-${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230913 13:19:25.458" level="INFO">${BUCKET} = buc-corzq</msg>
<status status="PASS" starttime="20230913 13:19:25.457" endtime="20230913 13:19:25.458"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket create -l ${BUCKET_LAYOUT} /${VOLUME}/${BUCKET}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 13:19:25.463" level="INFO">Running command 'ozone sh bucket create -l FILE_SYSTEM_OPTIMIZED /vol-jidtr/buc-corzq 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 13:19:30.749" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 13:19:30.749" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230913 13:19:25.460" endtime="20230913 13:19:30.749"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 13:19:30.751" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230913 13:19:30.750" endtime="20230913 13:19:30.751"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 13:19:30.752" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 13:19:30.751" endtime="20230913 13:19:30.752"/>
</kw>
<status status="PASS" starttime="20230913 13:19:25.459" endtime="20230913 13:19:30.752"/>
</kw>
<msg timestamp="20230913 13:19:30.752" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 13:19:25.459" endtime="20230913 13:19:30.753"/>
</kw>
<msg timestamp="20230913 13:19:30.753" level="INFO">${result} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230913 13:19:25.458" endtime="20230913 13:19:30.753"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230913 13:19:30.753" endtime="20230913 13:19:30.754"/>
</kw>
<status status="PASS" starttime="20230913 13:19:25.456" endtime="20230913 13:19:30.754"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230913 13:19:25.455" endtime="20230913 13:19:30.754"/>
</test>
<test id="s1-s3-s2-t3" name="Check keys creation" line="107">
<kw name="Create keys">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key put /${VOLUME}/${BUCKET}/file1 README.md</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 13:19:30.762" level="INFO">Running command 'ozone sh key put /vol-jidtr/buc-corzq/file1 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 13:19:38.608" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 13:19:38.608" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230913 13:19:30.759" endtime="20230913 13:19:38.608"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 13:19:38.609" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230913 13:19:38.608" endtime="20230913 13:19:38.609"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 13:19:38.610" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 13:19:38.610" endtime="20230913 13:19:38.610"/>
</kw>
<status status="PASS" starttime="20230913 13:19:30.758" endtime="20230913 13:19:38.610"/>
</kw>
<msg timestamp="20230913 13:19:38.610" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 13:19:30.758" endtime="20230913 13:19:38.611"/>
</kw>
<msg timestamp="20230913 13:19:38.611" level="INFO">${result} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230913 13:19:30.757" endtime="20230913 13:19:38.611"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230913 13:19:38.611" endtime="20230913 13:19:38.611"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key put /${VOLUME}/${BUCKET}/dir1/dir2/file2 HISTORY.md</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 13:19:38.616" level="INFO">Running command 'ozone sh key put /vol-jidtr/buc-corzq/dir1/dir2/file2 HISTORY.md 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 13:19:46.467" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 13:19:46.467" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230913 13:19:38.613" endtime="20230913 13:19:46.467"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 13:19:46.468" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230913 13:19:46.467" endtime="20230913 13:19:46.469"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 13:19:46.469" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 13:19:46.469" endtime="20230913 13:19:46.470"/>
</kw>
<status status="PASS" starttime="20230913 13:19:38.613" endtime="20230913 13:19:46.470"/>
</kw>
<msg timestamp="20230913 13:19:46.470" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 13:19:38.612" endtime="20230913 13:19:46.470"/>
</kw>
<msg timestamp="20230913 13:19:46.471" level="INFO">${result} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230913 13:19:38.612" endtime="20230913 13:19:46.471"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230913 13:19:46.471" endtime="20230913 13:19:46.471"/>
</kw>
<status status="PASS" starttime="20230913 13:19:30.757" endtime="20230913 13:19:46.471"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230913 13:19:30.755" endtime="20230913 13:19:46.472"/>
</test>
<test id="s1-s3-s2-t4" name="Check Summary api access" line="110">
<kw name="Check Access">
<arg>${SUMMARY_URL}?path=/</arg>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 13:19:46.479" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 13:19:46.484" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 13:19:46.484" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230913 13:19:46.476" endtime="20230913 13:19:46.484"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 13:19:46.485" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230913 13:19:46.484" endtime="20230913 13:19:46.485"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 13:19:46.486" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 13:19:46.485" endtime="20230913 13:19:46.486"/>
</kw>
<status status="PASS" starttime="20230913 13:19:46.476" endtime="20230913 13:19:46.486"/>
</kw>
<msg timestamp="20230913 13:19:46.486" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 13:19:46.475" endtime="20230913 13:19:46.486"/>
</kw>
<status status="PASS" starttime="20230913 13:19:46.475" endtime="20230913 13:19:46.486"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 13:19:46.492" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 13:19:46.552" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 13:19:46.552" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230913 13:19:46.489" endtime="20230913 13:19:46.552"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 13:19:46.554" level="INFO">200</msg>
<status status="PASS" starttime="20230913 13:19:46.553" endtime="20230913 13:19:46.554"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 13:19:46.556" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 13:19:46.556" endtime="20230913 13:19:46.556"/>
</kw>
<status status="PASS" starttime="20230913 13:19:46.488" endtime="20230913 13:19:46.557"/>
</kw>
<msg timestamp="20230913 13:19:46.557" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 13:19:46.488" endtime="20230913 13:19:46.557"/>
</kw>
<msg timestamp="20230913 13:19:46.557" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230913 13:19:46.487" endtime="20230913 13:19:46.557"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230913 13:19:46.558" endtime="20230913 13:19:46.558"/>
</kw>
<status status="NOT RUN" starttime="20230913 13:19:46.557" endtime="20230913 13:19:46.558"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230913 13:19:46.558" endtime="20230913 13:19:46.558"/>
</kw>
<status status="PASS" starttime="20230913 13:19:46.558" endtime="20230913 13:19:46.559"/>
</branch>
<status status="PASS" starttime="20230913 13:19:46.557" endtime="20230913 13:19:46.559"/>
</if>
<status status="PASS" starttime="20230913 13:19:46.487" endtime="20230913 13:19:46.559"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230913 13:19:46.560" endtime="20230913 13:19:46.560"/>
</kw>
<status status="PASS" starttime="20230913 13:19:46.559" endtime="20230913 13:19:46.560"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>403</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 13:19:46.566" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 13:19:46.584" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 13:19:46.585" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230913 13:19:46.562" endtime="20230913 13:19:46.585"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 13:19:46.589" level="INFO">200</msg>
<status status="PASS" starttime="20230913 13:19:46.586" endtime="20230913 13:19:46.589"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 13:19:46.590" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 13:19:46.589" endtime="20230913 13:19:46.590"/>
</kw>
<status status="PASS" starttime="20230913 13:19:46.562" endtime="20230913 13:19:46.590"/>
</kw>
<msg timestamp="20230913 13:19:46.590" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 13:19:46.562" endtime="20230913 13:19:46.591"/>
</kw>
<msg timestamp="20230913 13:19:46.591" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230913 13:19:46.561" endtime="20230913 13:19:46.591"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230913 13:19:46.592" endtime="20230913 13:19:46.592"/>
</kw>
<status status="NOT RUN" starttime="20230913 13:19:46.591" endtime="20230913 13:19:46.592"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230913 13:19:46.592" endtime="20230913 13:19:46.593"/>
</kw>
<status status="PASS" starttime="20230913 13:19:46.592" endtime="20230913 13:19:46.593"/>
</branch>
<status status="PASS" starttime="20230913 13:19:46.591" endtime="20230913 13:19:46.593"/>
</if>
<status status="PASS" starttime="20230913 13:19:46.560" endtime="20230913 13:19:46.593"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230913 13:19:46.594" endtime="20230913 13:19:46.594"/>
</kw>
<status status="PASS" starttime="20230913 13:19:46.593" endtime="20230913 13:19:46.594"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 13:19:46.602" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 13:19:46.626" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 13:19:46.626" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230913 13:19:46.598" endtime="20230913 13:19:46.626"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 13:19:46.628" level="INFO">200</msg>
<status status="PASS" starttime="20230913 13:19:46.627" endtime="20230913 13:19:46.628"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 13:19:46.629" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 13:19:46.628" endtime="20230913 13:19:46.629"/>
</kw>
<status status="PASS" starttime="20230913 13:19:46.597" endtime="20230913 13:19:46.630"/>
</kw>
<msg timestamp="20230913 13:19:46.630" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 13:19:46.597" endtime="20230913 13:19:46.630"/>
</kw>
<msg timestamp="20230913 13:19:46.630" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230913 13:19:46.595" endtime="20230913 13:19:46.630"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230913 13:19:46.631" endtime="20230913 13:19:46.631"/>
</kw>
<status status="NOT RUN" starttime="20230913 13:19:46.630" endtime="20230913 13:19:46.631"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230913 13:19:46.631" endtime="20230913 13:19:46.632"/>
</kw>
<status status="PASS" starttime="20230913 13:19:46.631" endtime="20230913 13:19:46.632"/>
</branch>
<status status="PASS" starttime="20230913 13:19:46.630" endtime="20230913 13:19:46.632"/>
</if>
<status status="PASS" starttime="20230913 13:19:46.595" endtime="20230913 13:19:46.632"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230913 13:19:46.633" endtime="20230913 13:19:46.633"/>
</kw>
<status status="PASS" starttime="20230913 13:19:46.632" endtime="20230913 13:19:46.633"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 13:19:46.640" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 13:19:46.660" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 13:19:46.660" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230913 13:19:46.637" endtime="20230913 13:19:46.660"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 13:19:46.662" level="INFO">200</msg>
<status status="PASS" starttime="20230913 13:19:46.661" endtime="20230913 13:19:46.662"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 13:19:46.663" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 13:19:46.662" endtime="20230913 13:19:46.663"/>
</kw>
<status status="PASS" starttime="20230913 13:19:46.636" endtime="20230913 13:19:46.663"/>
</kw>
<msg timestamp="20230913 13:19:46.663" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 13:19:46.636" endtime="20230913 13:19:46.663"/>
</kw>
<msg timestamp="20230913 13:19:46.663" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230913 13:19:46.634" endtime="20230913 13:19:46.663"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230913 13:19:46.664" endtime="20230913 13:19:46.665"/>
</kw>
<status status="NOT RUN" starttime="20230913 13:19:46.664" endtime="20230913 13:19:46.665"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230913 13:19:46.665" endtime="20230913 13:19:46.665"/>
</kw>
<status status="PASS" starttime="20230913 13:19:46.665" endtime="20230913 13:19:46.665"/>
</branch>
<status status="PASS" starttime="20230913 13:19:46.664" endtime="20230913 13:19:46.666"/>
</if>
<status status="PASS" starttime="20230913 13:19:46.634" endtime="20230913 13:19:46.666"/>
</kw>
<status status="PASS" starttime="20230913 13:19:46.474" endtime="20230913 13:19:46.666"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230913 13:19:46.473" endtime="20230913 13:19:46.666"/>
</test>
<test id="s1-s3-s2-t5" name="Check Disk Usage api access" line="113">
<kw name="Check Access">
<arg>${DISK_USAGE_URL}?path=/</arg>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 13:19:46.674" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 13:19:46.680" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 13:19:46.680" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230913 13:19:46.671" endtime="20230913 13:19:46.680"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 13:19:46.681" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230913 13:19:46.680" endtime="20230913 13:19:46.681"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 13:19:46.682" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 13:19:46.681" endtime="20230913 13:19:46.682"/>
</kw>
<status status="PASS" starttime="20230913 13:19:46.670" endtime="20230913 13:19:46.682"/>
</kw>
<msg timestamp="20230913 13:19:46.682" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 13:19:46.670" endtime="20230913 13:19:46.683"/>
</kw>
<status status="PASS" starttime="20230913 13:19:46.669" endtime="20230913 13:19:46.683"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 13:19:46.689" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/du?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 13:19:46.713" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 13:19:46.713" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230913 13:19:46.686" endtime="20230913 13:19:46.713"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 13:19:46.714" level="INFO">200</msg>
<status status="PASS" starttime="20230913 13:19:46.714" endtime="20230913 13:19:46.715"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 13:19:46.715" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 13:19:46.715" endtime="20230913 13:19:46.715"/>
</kw>
<status status="PASS" starttime="20230913 13:19:46.685" endtime="20230913 13:19:46.716"/>
</kw>
<msg timestamp="20230913 13:19:46.716" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 13:19:46.685" endtime="20230913 13:19:46.716"/>
</kw>
<msg timestamp="20230913 13:19:46.716" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230913 13:19:46.684" endtime="20230913 13:19:46.716"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230913 13:19:46.717" endtime="20230913 13:19:46.717"/>
</kw>
<status status="NOT RUN" starttime="20230913 13:19:46.717" endtime="20230913 13:19:46.717"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230913 13:19:46.717" endtime="20230913 13:19:46.718"/>
</kw>
<status status="PASS" starttime="20230913 13:19:46.717" endtime="20230913 13:19:46.718"/>
</branch>
<status status="PASS" starttime="20230913 13:19:46.716" endtime="20230913 13:19:46.718"/>
</if>
<status status="PASS" starttime="20230913 13:19:46.683" endtime="20230913 13:19:46.718"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230913 13:19:46.719" endtime="20230913 13:19:46.720"/>
</kw>
<status status="PASS" starttime="20230913 13:19:46.718" endtime="20230913 13:19:46.720"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>403</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 13:19:46.726" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/du?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 13:19:46.745" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 13:19:46.746" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230913 13:19:46.723" endtime="20230913 13:19:46.746"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 13:19:46.747" level="INFO">200</msg>
<status status="PASS" starttime="20230913 13:19:46.746" endtime="20230913 13:19:46.747"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 13:19:46.748" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 13:19:46.748" endtime="20230913 13:19:46.748"/>
</kw>
<status status="PASS" starttime="20230913 13:19:46.722" endtime="20230913 13:19:46.748"/>
</kw>
<msg timestamp="20230913 13:19:46.749" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 13:19:46.722" endtime="20230913 13:19:46.749"/>
</kw>
<msg timestamp="20230913 13:19:46.749" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230913 13:19:46.721" endtime="20230913 13:19:46.749"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230913 13:19:46.750" endtime="20230913 13:19:46.750"/>
</kw>
<status status="NOT RUN" starttime="20230913 13:19:46.749" endtime="20230913 13:19:46.750"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230913 13:19:46.750" endtime="20230913 13:19:46.751"/>
</kw>
<status status="PASS" starttime="20230913 13:19:46.750" endtime="20230913 13:19:46.751"/>
</branch>
<status status="PASS" starttime="20230913 13:19:46.749" endtime="20230913 13:19:46.751"/>
</if>
<status status="PASS" starttime="20230913 13:19:46.720" endtime="20230913 13:19:46.751"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230913 13:19:46.752" endtime="20230913 13:19:46.752"/>
</kw>
<status status="PASS" starttime="20230913 13:19:46.751" endtime="20230913 13:19:46.752"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 13:19:46.758" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/du?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 13:19:46.781" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 13:19:46.781" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230913 13:19:46.754" endtime="20230913 13:19:46.781"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 13:19:46.783" level="INFO">200</msg>
<status status="PASS" starttime="20230913 13:19:46.782" endtime="20230913 13:19:46.783"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 13:19:46.784" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 13:19:46.783" endtime="20230913 13:19:46.784"/>
</kw>
<status status="PASS" starttime="20230913 13:19:46.754" endtime="20230913 13:19:46.784"/>
</kw>
<msg timestamp="20230913 13:19:46.784" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 13:19:46.753" endtime="20230913 13:19:46.785"/>
</kw>
<msg timestamp="20230913 13:19:46.785" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230913 13:19:46.753" endtime="20230913 13:19:46.785"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230913 13:19:46.786" endtime="20230913 13:19:46.786"/>
</kw>
<status status="NOT RUN" starttime="20230913 13:19:46.785" endtime="20230913 13:19:46.786"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230913 13:19:46.787" endtime="20230913 13:19:46.787"/>
</kw>
<status status="PASS" starttime="20230913 13:19:46.786" endtime="20230913 13:19:46.787"/>
</branch>
<status status="PASS" starttime="20230913 13:19:46.785" endtime="20230913 13:19:46.787"/>
</if>
<status status="PASS" starttime="20230913 13:19:46.752" endtime="20230913 13:19:46.787"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230913 13:19:46.788" endtime="20230913 13:19:46.788"/>
</kw>
<status status="PASS" starttime="20230913 13:19:46.788" endtime="20230913 13:19:46.789"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 13:19:46.794" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/du?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 13:19:46.817" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 13:19:46.818" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230913 13:19:46.791" endtime="20230913 13:19:46.818"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 13:19:46.822" level="INFO">200</msg>
<status status="PASS" starttime="20230913 13:19:46.818" endtime="20230913 13:19:46.823"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 13:19:46.824" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 13:19:46.823" endtime="20230913 13:19:46.824"/>
</kw>
<status status="PASS" starttime="20230913 13:19:46.790" endtime="20230913 13:19:46.824"/>
</kw>
<msg timestamp="20230913 13:19:46.824" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 13:19:46.790" endtime="20230913 13:19:46.824"/>
</kw>
<msg timestamp="20230913 13:19:46.824" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230913 13:19:46.789" endtime="20230913 13:19:46.824"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230913 13:19:46.828" endtime="20230913 13:19:46.828"/>
</kw>
<status status="NOT RUN" starttime="20230913 13:19:46.825" endtime="20230913 13:19:46.828"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230913 13:19:46.828" endtime="20230913 13:19:46.829"/>
</kw>
<status status="PASS" starttime="20230913 13:19:46.828" endtime="20230913 13:19:46.829"/>
</branch>
<status status="PASS" starttime="20230913 13:19:46.824" endtime="20230913 13:19:46.829"/>
</if>
<status status="PASS" starttime="20230913 13:19:46.789" endtime="20230913 13:19:46.829"/>
</kw>
<status status="PASS" starttime="20230913 13:19:46.669" endtime="20230913 13:19:46.829"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230913 13:19:46.668" endtime="20230913 13:19:46.829"/>
</test>
<test id="s1-s3-s2-t6" name="Check Quota Usage api access" line="116">
<kw name="Check Access">
<arg>${QUOTA_USAGE_URL}?path=/</arg>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 13:19:46.837" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 13:19:46.842" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 13:19:46.842" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230913 13:19:46.834" endtime="20230913 13:19:46.842"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 13:19:46.844" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230913 13:19:46.843" endtime="20230913 13:19:46.844"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 13:19:46.845" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 13:19:46.844" endtime="20230913 13:19:46.845"/>
</kw>
<status status="PASS" starttime="20230913 13:19:46.834" endtime="20230913 13:19:46.845"/>
</kw>
<msg timestamp="20230913 13:19:46.845" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 13:19:46.833" endtime="20230913 13:19:46.845"/>
</kw>
<status status="PASS" starttime="20230913 13:19:46.832" endtime="20230913 13:19:46.845"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 13:19:46.851" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/quota?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 13:19:46.880" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 13:19:46.880" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230913 13:19:46.848" endtime="20230913 13:19:46.880"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 13:19:46.881" level="INFO">200</msg>
<status status="PASS" starttime="20230913 13:19:46.881" endtime="20230913 13:19:46.881"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 13:19:46.882" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 13:19:46.882" endtime="20230913 13:19:46.882"/>
</kw>
<status status="PASS" starttime="20230913 13:19:46.847" endtime="20230913 13:19:46.882"/>
</kw>
<msg timestamp="20230913 13:19:46.882" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 13:19:46.847" endtime="20230913 13:19:46.883"/>
</kw>
<msg timestamp="20230913 13:19:46.883" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230913 13:19:46.846" endtime="20230913 13:19:46.884"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230913 13:19:46.884" endtime="20230913 13:19:46.884"/>
</kw>
<status status="NOT RUN" starttime="20230913 13:19:46.884" endtime="20230913 13:19:46.885"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230913 13:19:46.885" endtime="20230913 13:19:46.885"/>
</kw>
<status status="PASS" starttime="20230913 13:19:46.885" endtime="20230913 13:19:46.885"/>
</branch>
<status status="PASS" starttime="20230913 13:19:46.884" endtime="20230913 13:19:46.885"/>
</if>
<status status="PASS" starttime="20230913 13:19:46.845" endtime="20230913 13:19:46.885"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230913 13:19:46.886" endtime="20230913 13:19:46.887"/>
</kw>
<status status="PASS" starttime="20230913 13:19:46.886" endtime="20230913 13:19:46.887"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>403</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 13:19:46.892" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/quota?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 13:19:46.918" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 13:19:46.918" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230913 13:19:46.889" endtime="20230913 13:19:46.918"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 13:19:46.920" level="INFO">200</msg>
<status status="PASS" starttime="20230913 13:19:46.919" endtime="20230913 13:19:46.920"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 13:19:46.920" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 13:19:46.920" endtime="20230913 13:19:46.921"/>
</kw>
<status status="PASS" starttime="20230913 13:19:46.889" endtime="20230913 13:19:46.921"/>
</kw>
<msg timestamp="20230913 13:19:46.921" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 13:19:46.888" endtime="20230913 13:19:46.921"/>
</kw>
<msg timestamp="20230913 13:19:46.921" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230913 13:19:46.888" endtime="20230913 13:19:46.921"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230913 13:19:46.922" endtime="20230913 13:19:46.922"/>
</kw>
<status status="NOT RUN" starttime="20230913 13:19:46.921" endtime="20230913 13:19:46.922"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230913 13:19:46.922" endtime="20230913 13:19:46.922"/>
</kw>
<status status="PASS" starttime="20230913 13:19:46.922" endtime="20230913 13:19:46.923"/>
</branch>
<status status="PASS" starttime="20230913 13:19:46.921" endtime="20230913 13:19:46.923"/>
</if>
<status status="PASS" starttime="20230913 13:19:46.887" endtime="20230913 13:19:46.923"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230913 13:19:46.924" endtime="20230913 13:19:46.924"/>
</kw>
<status status="PASS" starttime="20230913 13:19:46.923" endtime="20230913 13:19:46.924"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 13:19:46.930" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/quota?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 13:19:46.953" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 13:19:46.953" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230913 13:19:46.926" endtime="20230913 13:19:46.953"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 13:19:46.955" level="INFO">200</msg>
<status status="PASS" starttime="20230913 13:19:46.954" endtime="20230913 13:19:46.955"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 13:19:46.955" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 13:19:46.955" endtime="20230913 13:19:46.955"/>
</kw>
<status status="PASS" starttime="20230913 13:19:46.926" endtime="20230913 13:19:46.956"/>
</kw>
<msg timestamp="20230913 13:19:46.956" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 13:19:46.926" endtime="20230913 13:19:46.956"/>
</kw>
<msg timestamp="20230913 13:19:46.956" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230913 13:19:46.925" endtime="20230913 13:19:46.956"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230913 13:19:46.957" endtime="20230913 13:19:46.957"/>
</kw>
<status status="NOT RUN" starttime="20230913 13:19:46.956" endtime="20230913 13:19:46.957"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230913 13:19:46.957" endtime="20230913 13:19:46.957"/>
</kw>
<status status="PASS" starttime="20230913 13:19:46.957" endtime="20230913 13:19:46.957"/>
</branch>
<status status="PASS" starttime="20230913 13:19:46.956" endtime="20230913 13:19:46.958"/>
</if>
<status status="PASS" starttime="20230913 13:19:46.924" endtime="20230913 13:19:46.958"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230913 13:19:46.958" endtime="20230913 13:19:46.959"/>
</kw>
<status status="PASS" starttime="20230913 13:19:46.958" endtime="20230913 13:19:46.959"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 13:19:46.964" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/quota?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 13:19:46.985" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 13:19:46.985" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230913 13:19:46.961" endtime="20230913 13:19:46.985"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 13:19:46.987" level="INFO">200</msg>
<status status="PASS" starttime="20230913 13:19:46.986" endtime="20230913 13:19:46.987"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 13:19:46.988" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 13:19:46.988" endtime="20230913 13:19:46.988"/>
</kw>
<status status="PASS" starttime="20230913 13:19:46.961" endtime="20230913 13:19:46.988"/>
</kw>
<msg timestamp="20230913 13:19:46.989" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 13:19:46.960" endtime="20230913 13:19:46.989"/>
</kw>
<msg timestamp="20230913 13:19:46.989" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230913 13:19:46.960" endtime="20230913 13:19:46.989"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230913 13:19:46.990" endtime="20230913 13:19:46.990"/>
</kw>
<status status="NOT RUN" starttime="20230913 13:19:46.989" endtime="20230913 13:19:46.990"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230913 13:19:46.990" endtime="20230913 13:19:46.991"/>
</kw>
<status status="PASS" starttime="20230913 13:19:46.990" endtime="20230913 13:19:46.991"/>
</branch>
<status status="PASS" starttime="20230913 13:19:46.989" endtime="20230913 13:19:46.991"/>
</if>
<status status="PASS" starttime="20230913 13:19:46.959" endtime="20230913 13:19:46.991"/>
</kw>
<status status="PASS" starttime="20230913 13:19:46.832" endtime="20230913 13:19:46.991"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230913 13:19:46.831" endtime="20230913 13:19:46.991"/>
</test>
<test id="s1-s3-s2-t7" name="Check File Size Distribution api access" line="119">
<kw name="Check Access">
<arg>${FILE_SIZE_DIST_URL}?path=/</arg>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 13:19:46.999" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 13:19:47.004" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 13:19:47.004" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230913 13:19:46.996" endtime="20230913 13:19:47.004"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 13:19:47.006" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230913 13:19:47.005" endtime="20230913 13:19:47.006"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 13:19:47.012" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 13:19:47.006" endtime="20230913 13:19:47.012"/>
</kw>
<status status="PASS" starttime="20230913 13:19:46.995" endtime="20230913 13:19:47.012"/>
</kw>
<msg timestamp="20230913 13:19:47.012" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 13:19:46.995" endtime="20230913 13:19:47.013"/>
</kw>
<status status="PASS" starttime="20230913 13:19:46.994" endtime="20230913 13:19:47.013"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 13:19:47.019" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/dist?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 13:19:47.050" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 13:19:47.050" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230913 13:19:47.016" endtime="20230913 13:19:47.050"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 13:19:47.052" level="INFO">200</msg>
<status status="PASS" starttime="20230913 13:19:47.051" endtime="20230913 13:19:47.052"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 13:19:47.053" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 13:19:47.052" endtime="20230913 13:19:47.053"/>
</kw>
<status status="PASS" starttime="20230913 13:19:47.015" endtime="20230913 13:19:47.053"/>
</kw>
<msg timestamp="20230913 13:19:47.053" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 13:19:47.015" endtime="20230913 13:19:47.053"/>
</kw>
<msg timestamp="20230913 13:19:47.054" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230913 13:19:47.014" endtime="20230913 13:19:47.054"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230913 13:19:47.054" endtime="20230913 13:19:47.055"/>
</kw>
<status status="NOT RUN" starttime="20230913 13:19:47.054" endtime="20230913 13:19:47.055"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230913 13:19:47.055" endtime="20230913 13:19:47.056"/>
</kw>
<status status="PASS" starttime="20230913 13:19:47.055" endtime="20230913 13:19:47.056"/>
</branch>
<status status="PASS" starttime="20230913 13:19:47.054" endtime="20230913 13:19:47.056"/>
</if>
<status status="PASS" starttime="20230913 13:19:47.013" endtime="20230913 13:19:47.056"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230913 13:19:47.057" endtime="20230913 13:19:47.057"/>
</kw>
<status status="PASS" starttime="20230913 13:19:47.056" endtime="20230913 13:19:47.057"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>403</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 13:19:47.064" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/dist?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 13:19:47.081" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 13:19:47.081" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230913 13:19:47.060" endtime="20230913 13:19:47.081"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 13:19:47.082" level="INFO">200</msg>
<status status="PASS" starttime="20230913 13:19:47.082" endtime="20230913 13:19:47.082"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 13:19:47.083" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 13:19:47.083" endtime="20230913 13:19:47.083"/>
</kw>
<status status="PASS" starttime="20230913 13:19:47.059" endtime="20230913 13:19:47.084"/>
</kw>
<msg timestamp="20230913 13:19:47.084" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 13:19:47.059" endtime="20230913 13:19:47.084"/>
</kw>
<msg timestamp="20230913 13:19:47.084" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230913 13:19:47.058" endtime="20230913 13:19:47.084"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230913 13:19:47.085" endtime="20230913 13:19:47.085"/>
</kw>
<status status="NOT RUN" starttime="20230913 13:19:47.085" endtime="20230913 13:19:47.085"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230913 13:19:47.085" endtime="20230913 13:19:47.086"/>
</kw>
<status status="PASS" starttime="20230913 13:19:47.085" endtime="20230913 13:19:47.086"/>
</branch>
<status status="PASS" starttime="20230913 13:19:47.084" endtime="20230913 13:19:47.086"/>
</if>
<status status="PASS" starttime="20230913 13:19:47.058" endtime="20230913 13:19:47.086"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230913 13:19:47.087" endtime="20230913 13:19:47.088"/>
</kw>
<status status="PASS" starttime="20230913 13:19:47.086" endtime="20230913 13:19:47.088"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 13:19:47.093" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/dist?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 13:19:47.109" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 13:19:47.109" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230913 13:19:47.090" endtime="20230913 13:19:47.109"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 13:19:47.110" level="INFO">200</msg>
<status status="PASS" starttime="20230913 13:19:47.109" endtime="20230913 13:19:47.110"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 13:19:47.111" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 13:19:47.111" endtime="20230913 13:19:47.111"/>
</kw>
<status status="PASS" starttime="20230913 13:19:47.089" endtime="20230913 13:19:47.112"/>
</kw>
<msg timestamp="20230913 13:19:47.112" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 13:19:47.089" endtime="20230913 13:19:47.112"/>
</kw>
<msg timestamp="20230913 13:19:47.112" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230913 13:19:47.088" endtime="20230913 13:19:47.112"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230913 13:19:47.113" endtime="20230913 13:19:47.113"/>
</kw>
<status status="NOT RUN" starttime="20230913 13:19:47.112" endtime="20230913 13:19:47.113"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230913 13:19:47.113" endtime="20230913 13:19:47.114"/>
</kw>
<status status="PASS" starttime="20230913 13:19:47.113" endtime="20230913 13:19:47.114"/>
</branch>
<status status="PASS" starttime="20230913 13:19:47.112" endtime="20230913 13:19:47.114"/>
</if>
<status status="PASS" starttime="20230913 13:19:47.088" endtime="20230913 13:19:47.114"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230913 13:19:47.115" endtime="20230913 13:19:47.116"/>
</kw>
<status status="PASS" starttime="20230913 13:19:47.115" endtime="20230913 13:19:47.116"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 13:19:47.121" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/dist?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 13:19:47.142" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 13:19:47.142" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230913 13:19:47.118" endtime="20230913 13:19:47.142"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 13:19:47.144" level="INFO">200</msg>
<status status="PASS" starttime="20230913 13:19:47.143" endtime="20230913 13:19:47.144"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 13:19:47.144" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 13:19:47.144" endtime="20230913 13:19:47.145"/>
</kw>
<status status="PASS" starttime="20230913 13:19:47.118" endtime="20230913 13:19:47.145"/>
</kw>
<msg timestamp="20230913 13:19:47.145" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 13:19:47.117" endtime="20230913 13:19:47.145"/>
</kw>
<msg timestamp="20230913 13:19:47.145" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230913 13:19:47.116" endtime="20230913 13:19:47.145"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230913 13:19:47.146" endtime="20230913 13:19:47.146"/>
</kw>
<status status="NOT RUN" starttime="20230913 13:19:47.146" endtime="20230913 13:19:47.146"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230913 13:19:47.146" endtime="20230913 13:19:47.147"/>
</kw>
<status status="PASS" starttime="20230913 13:19:47.146" endtime="20230913 13:19:47.147"/>
</branch>
<status status="PASS" starttime="20230913 13:19:47.145" endtime="20230913 13:19:47.147"/>
</if>
<status status="PASS" starttime="20230913 13:19:47.116" endtime="20230913 13:19:47.147"/>
</kw>
<status status="PASS" starttime="20230913 13:19:46.994" endtime="20230913 13:19:47.147"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230913 13:19:46.993" endtime="20230913 13:19:47.147"/>
</test>
<test id="s1-s3-s2-t8" name="Check Recon Namespace Summary Root" line="122">
<kw name="Wait For Summary">
<arg>${SUMMARY_URL}?path=/</arg>
<arg>ROOT</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 13:19:47.164" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 13:19:47.186" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 13:19:47.186" level="INFO">${output} = {"path":"","type":"ROOT","countStats":{"numVolume":3,"numBucket":2,"numDir":1,"numKey":1},"objectInfo":{"metadata":null,"name":null,"quotaInBytes":0,"quotaInNamespace":0,"usedNamespace":0,"creationTim...</msg>
<status status="PASS" starttime="20230913 13:19:47.158" endtime="20230913 13:19:47.186"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 13:19:47.189" level="INFO">{"path":"","type":"ROOT","countStats":{"numVolume":3,"numBucket":2,"numDir":1,"numKey":1},"objectInfo":{"metadata":null,"name":null,"quotaInBytes":0,"quotaInNamespace":0,"usedNamespace":0,"creationTime":0,"modificationTime":0,"acls":null},"status":"OK"}</msg>
<status status="PASS" starttime="20230913 13:19:47.186" endtime="20230913 13:19:47.189"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 13:19:47.190" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 13:19:47.190" endtime="20230913 13:19:47.191"/>
</kw>
<status status="PASS" starttime="20230913 13:19:47.158" endtime="20230913 13:19:47.191"/>
</kw>
<msg timestamp="20230913 13:19:47.191" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 13:19:47.157" endtime="20230913 13:19:47.191"/>
</kw>
<msg timestamp="20230913 13:19:47.192" level="INFO">${result} = {"path":"","type":"ROOT","countStats":{"numVolume":3,"numBucket":2,"numDir":1,"numKey":1},"objectInfo":{"metadata":null,"name":null,"quotaInBytes":0,"quotaInNamespace":0,"usedNamespace":0,"creationTim...</msg>
<status status="PASS" starttime="20230913 13:19:47.151" endtime="20230913 13:19:47.192"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230913 13:19:47.192" endtime="20230913 13:19:47.193"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230913 13:19:47.193" endtime="20230913 13:19:47.193"/>
</kw>
<status status="PASS" starttime="20230913 13:19:47.151" endtime="20230913 13:19:47.194"/>
</kw>
<status status="PASS" starttime="20230913 13:19:47.150" endtime="20230913 13:19:47.194"/>
</kw>
<status status="PASS" starttime="20230913 13:19:47.149" endtime="20230913 13:19:47.194"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230913 13:19:47.148" endtime="20230913 13:19:47.194"/>
</test>
<test id="s1-s3-s2-t9" name="Check Recon Namespace Summary Volume" line="125">
<kw name="Wait For Summary">
<arg>${SUMMARY_URL}?path=/${VOLUME}</arg>
<arg>VOLUME</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 13:19:47.204" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-jidtr 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 13:19:47.230" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 13:19:47.232" level="INFO">${output} = {"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20230913 13:19:47.201" endtime="20230913 13:19:47.233"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 13:19:47.234" level="INFO">{"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20230913 13:19:47.233" endtime="20230913 13:19:47.234"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 13:19:47.235" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 13:19:47.234" endtime="20230913 13:19:47.236"/>
</kw>
<status status="PASS" starttime="20230913 13:19:47.200" endtime="20230913 13:19:47.236"/>
</kw>
<msg timestamp="20230913 13:19:47.237" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 13:19:47.200" endtime="20230913 13:19:47.237"/>
</kw>
<msg timestamp="20230913 13:19:47.237" level="INFO">${result} = {"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20230913 13:19:47.199" endtime="20230913 13:19:47.237"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20230913 13:19:47.238" level="FAIL">'{"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}' does not contain '"status":"OK"'</msg>
<status status="FAIL" starttime="20230913 13:19:47.237" endtime="20230913 13:19:47.238"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230913 13:19:47.239" endtime="20230913 13:19:47.239"/>
</kw>
<status status="FAIL" starttime="20230913 13:19:47.198" endtime="20230913 13:19:47.239"/>
</kw>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 13:19:57.246" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-jidtr 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 13:19:57.264" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 13:19:57.264" level="INFO">${output} = {"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20230913 13:19:57.243" endtime="20230913 13:19:57.264"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 13:19:57.265" level="INFO">{"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20230913 13:19:57.264" endtime="20230913 13:19:57.265"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 13:19:57.266" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 13:19:57.266" endtime="20230913 13:19:57.266"/>
</kw>
<status status="PASS" starttime="20230913 13:19:57.242" endtime="20230913 13:19:57.267"/>
</kw>
<msg timestamp="20230913 13:19:57.267" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 13:19:57.242" endtime="20230913 13:19:57.267"/>
</kw>
<msg timestamp="20230913 13:19:57.267" level="INFO">${result} = {"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20230913 13:19:57.241" endtime="20230913 13:19:57.267"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20230913 13:19:57.268" level="FAIL">'{"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}' does not contain '"status":"OK"'</msg>
<status status="FAIL" starttime="20230913 13:19:57.267" endtime="20230913 13:19:57.268"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230913 13:19:57.268" endtime="20230913 13:19:57.268"/>
</kw>
<status status="FAIL" starttime="20230913 13:19:57.240" endtime="20230913 13:19:57.268"/>
</kw>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 13:20:07.276" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-jidtr 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 13:20:07.296" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 13:20:07.296" level="INFO">${output} = {"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20230913 13:20:07.272" endtime="20230913 13:20:07.296"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 13:20:07.298" level="INFO">{"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20230913 13:20:07.297" endtime="20230913 13:20:07.298"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 13:20:07.299" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 13:20:07.298" endtime="20230913 13:20:07.299"/>
</kw>
<status status="PASS" starttime="20230913 13:20:07.271" endtime="20230913 13:20:07.299"/>
</kw>
<msg timestamp="20230913 13:20:07.299" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 13:20:07.271" endtime="20230913 13:20:07.299"/>
</kw>
<msg timestamp="20230913 13:20:07.300" level="INFO">${result} = {"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20230913 13:20:07.270" endtime="20230913 13:20:07.300"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20230913 13:20:07.301" level="FAIL">'{"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}' does not contain '"status":"OK"'</msg>
<status status="FAIL" starttime="20230913 13:20:07.300" endtime="20230913 13:20:07.301"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230913 13:20:07.301" endtime="20230913 13:20:07.301"/>
</kw>
<status status="FAIL" starttime="20230913 13:20:07.269" endtime="20230913 13:20:07.301"/>
</kw>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 13:20:17.308" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-jidtr 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 13:20:17.338" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 13:20:17.339" level="INFO">${output} = {"path":"","type":"VOLUME","countStats":{"numVolume":-1,"numBucket":1,"numDir":2,"numKey":2},"objectInfo":{"metadata":{},"name":"vol-jidtr","quotaInBytes":-1,"quotaInNamespace":-1,"usedNamespace":1,"c...</msg>
<status status="PASS" starttime="20230913 13:20:17.304" endtime="20230913 13:20:17.339"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 13:20:17.340" level="INFO">{"path":"","type":"VOLUME","countStats":{"numVolume":-1,"numBucket":1,"numDir":2,"numKey":2},"objectInfo":{"metadata":{},"name":"vol-jidtr","quotaInBytes":-1,"quotaInNamespace":-1,"usedNamespace":1,"creationTime":1694611165354,"modificationTime":1694611165354,"acls":[{"type":"USER","name":"hadoop","aclScope":"ACCESS","aclList":["ALL"]},{"type":"GROUP","name":"hadoop","aclScope":"ACCESS","aclList":["ALL"]}],"admin":"hadoop","owner":"hadoop","volume":"vol-jidtr"},"status":"OK"}</msg>
<status status="PASS" starttime="20230913 13:20:17.339" endtime="20230913 13:20:17.340"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 13:20:17.341" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 13:20:17.340" endtime="20230913 13:20:17.341"/>
</kw>
<status status="PASS" starttime="20230913 13:20:17.304" endtime="20230913 13:20:17.341"/>
</kw>
<msg timestamp="20230913 13:20:17.342" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 13:20:17.304" endtime="20230913 13:20:17.342"/>
</kw>
<msg timestamp="20230913 13:20:17.342" level="INFO">${result} = {"path":"","type":"VOLUME","countStats":{"numVolume":-1,"numBucket":1,"numDir":2,"numKey":2},"objectInfo":{"metadata":{},"name":"vol-jidtr","quotaInBytes":-1,"quotaInNamespace":-1,"usedNamespace":1,"c...</msg>
<status status="PASS" starttime="20230913 13:20:17.303" endtime="20230913 13:20:17.342"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230913 13:20:17.342" endtime="20230913 13:20:17.343"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230913 13:20:17.343" endtime="20230913 13:20:17.343"/>
</kw>
<status status="PASS" starttime="20230913 13:20:17.302" endtime="20230913 13:20:17.344"/>
</kw>
<status status="PASS" starttime="20230913 13:19:47.197" endtime="20230913 13:20:17.344"/>
</kw>
<status status="PASS" starttime="20230913 13:19:47.196" endtime="20230913 13:20:17.344"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230913 13:19:47.195" endtime="20230913 13:20:17.344"/>
</test>
<test id="s1-s3-s2-t10" name="Check Recon Namespace Summary Bucket" line="128">
<kw name="Wait For Summary">
<arg>${SUMMARY_URL}?path=/${VOLUME}/${BUCKET}</arg>
<arg>BUCKET</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 13:20:17.354" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-jidtr/buc-corzq 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 13:20:17.380" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 13:20:17.380" level="INFO">${output} = {"path":"","type":"BUCKET","countStats":{"numVolume":-1,"numBucket":-1,"numDir":2,"numKey":2},"objectInfo":{"versioningEnabled":false,"metadata":{},"name":"buc-corzq","quotaInBytes":-1,"quotaInNamespa...</msg>
<status status="PASS" starttime="20230913 13:20:17.350" endtime="20230913 13:20:17.381"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 13:20:17.382" level="INFO">{"path":"","type":"BUCKET","countStats":{"numVolume":-1,"numBucket":-1,"numDir":2,"numKey":2},"objectInfo":{"versioningEnabled":false,"metadata":{},"name":"buc-corzq","quotaInBytes":-1,"quotaInNamespace":-1,"usedNamespace":4,"creationTime":1694611170669,"modificationTime":1694611170669,"acls":[{"type":"USER","name":"hadoop","aclScope":"ACCESS","aclList":["ALL"]},{"type":"GROUP","name":"hadoop","aclScope":"ACCESS","aclList":["ALL"]}],"volumeName":"vol-jidtr","storageType":"DISK","versioning":false,"usedBytes":null,"encryptionInfo":null,"replicationConfigInfo":null,"sourceVolume":null,"sourceBucket":null,"bucketLayout":"FILE_SYSTEM_OPTIMIZED","owner":"hadoop"},"status":"OK"}</msg>
<status status="PASS" starttime="20230913 13:20:17.381" endtime="20230913 13:20:17.382"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 13:20:17.383" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 13:20:17.382" endtime="20230913 13:20:17.383"/>
</kw>
<status status="PASS" starttime="20230913 13:20:17.350" endtime="20230913 13:20:17.384"/>
</kw>
<msg timestamp="20230913 13:20:17.384" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 13:20:17.350" endtime="20230913 13:20:17.384"/>
</kw>
<msg timestamp="20230913 13:20:17.384" level="INFO">${result} = {"path":"","type":"BUCKET","countStats":{"numVolume":-1,"numBucket":-1,"numDir":2,"numKey":2},"objectInfo":{"versioningEnabled":false,"metadata":{},"name":"buc-corzq","quotaInBytes":-1,"quotaInNamespa...</msg>
<status status="PASS" starttime="20230913 13:20:17.349" endtime="20230913 13:20:17.384"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230913 13:20:17.384" endtime="20230913 13:20:17.385"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230913 13:20:17.385" endtime="20230913 13:20:17.385"/>
</kw>
<status status="PASS" starttime="20230913 13:20:17.349" endtime="20230913 13:20:17.385"/>
</kw>
<status status="PASS" starttime="20230913 13:20:17.348" endtime="20230913 13:20:17.386"/>
</kw>
<status status="PASS" starttime="20230913 13:20:17.347" endtime="20230913 13:20:17.386"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230913 13:20:17.345" endtime="20230913 13:20:17.386"/>
</test>
<test id="s1-s3-s2-t11" name="Check Recon Namespace Summary Key" line="131">
<kw name="Wait For Summary">
<arg>${SUMMARY_URL}?path=/${VOLUME}/${BUCKET}/file1</arg>
<arg>KEY</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 13:20:17.396" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-jidtr/buc-corzq/file1 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 13:20:17.439" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 13:20:17.440" level="INFO">${output} = {"path":"","type":"KEY","countStats":{"numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0},"objectInfo":{"fileName":"file1","file":true,"metadata":{},"name":"file1","quotaInBytes":0,"quotaInNamespace...</msg>
<status status="PASS" starttime="20230913 13:20:17.393" endtime="20230913 13:20:17.440"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 13:20:17.441" level="INFO">{"path":"","type":"KEY","countStats":{"numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0},"objectInfo":{"fileName":"file1","file":true,"metadata":{},"name":"file1","quotaInBytes":0,"quotaInNamespace":0,"usedNamespace":0,"creationTime":1694611175757,"modificationTime":1694611178166,"acls":[{"type":"USER","name":"hadoop","aclScope":"ACCESS","aclList":["ALL"]},{"type":"GROUP","name":"hadoop","aclScope":"ACCESS","aclList":["ALL"]}],"volumeName":"vol-jidtr","bucketName":"buc-corzq","keyName":"file1","dataSize":4068,"keyLocationVersions":[{"version":0,"locationVersionMap":{"0":[{"blockID":{"containerBlockID":{"containerID":1,"localID":111677748019200012},"blockCommitSequenceId":15,"containerID":1,"localID":111677748019200012},"length":4068,"offset":0,"token":null,"createVersion":0,"pipeline":null,"partNumber":0,"containerID":1,"localID":111677748019200012,"blockCommitSequenceId":15}]},"locationList":[{"blockID":{"containerBlockID":{"containerID":1,"localID":111677748019200012},"blockCommitSequenceId":15,"containerID":1,"localID":111677748019200012},"length":4068,"offset":0,"token":null,"createVersion":0,"pipeline":null,"partNumber":0,"containerID":1,"localID":111677748019200012,"blockCommitSequenceId":15}],"multipartKey":false,"blocksLatestVersionOnly":[{"blockID":{"containerBlockID":{"containerID":1,"localID":111677748019200012},"blockCommitSequenceId":15,"containerID":1,"localID":111677748019200012},"length":4068,"offset":0,"token":null,"createVersion":0,"pipeline":null,"partNumber":0,"containerID":1,"localID":111677748019200012,"blockCommitSequenceId":15}],"locationLists":[[{"blockID":{"containerBlockID":{"containerID":1,"localID":111677748019200012},"blockCommitSequenceId":15,"containerID":1,"localID":111677748019200012},"length":4068,"offset":0,"token":null,"createVersion":0,"pipeline":null,"partNumber":0,"containerID":1,"localID":111677748019200012,"blockCommitSequenceId":15}]],"locationListCount":1}],"replicationConfig":{"replicationFactor":"THREE","requiredNodes":3,"replicationType":"RATIS"},"encInfo":null},"status":"OK"}</msg>
<status status="PASS" starttime="20230913 13:20:17.440" endtime="20230913 13:20:17.441"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 13:20:17.442" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 13:20:17.442" endtime="20230913 13:20:17.442"/>
</kw>
<status status="PASS" starttime="20230913 13:20:17.392" endtime="20230913 13:20:17.442"/>
</kw>
<msg timestamp="20230913 13:20:17.443" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 13:20:17.392" endtime="20230913 13:20:17.443"/>
</kw>
<msg timestamp="20230913 13:20:17.443" level="INFO">${result} = {"path":"","type":"KEY","countStats":{"numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0},"objectInfo":{"fileName":"file1","file":true,"metadata":{},"name":"file1","quotaInBytes":0,"quotaInNamespace...</msg>
<status status="PASS" starttime="20230913 13:20:17.391" endtime="20230913 13:20:17.443"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230913 13:20:17.443" endtime="20230913 13:20:17.444"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230913 13:20:17.444" endtime="20230913 13:20:17.444"/>
</kw>
<status status="PASS" starttime="20230913 13:20:17.390" endtime="20230913 13:20:17.445"/>
</kw>
<status status="PASS" starttime="20230913 13:20:17.389" endtime="20230913 13:20:17.445"/>
</kw>
<status status="PASS" starttime="20230913 13:20:17.389" endtime="20230913 13:20:17.446"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230913 13:20:17.388" endtime="20230913 13:20:17.446"/>
</test>
<test id="s1-s3-s2-t12" name="Check Recon Namespace Summary Directory" line="134">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET_LAYOUT}' == 'LEGACY'</arg>
<arg>Wait For Summary</arg>
<arg>${SUMMARY_URL}?path=/${VOLUME}/${BUCKET}/dir1/dir2/</arg>
<arg>DIRECTORY</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230913 13:20:17.448" endtime="20230913 13:20:17.449"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET_LAYOUT}' == 'FILE_SYSTEM_OPTIMIZED'</arg>
<arg>Wait For Summary</arg>
<arg>${SUMMARY_URL}?path=/${VOLUME}/${BUCKET}/dir1/dir2</arg>
<arg>DIRECTORY</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Wait For Summary">
<arg>${SUMMARY_URL}?path=/${VOLUME}/${BUCKET}/dir1/dir2</arg>
<arg>DIRECTORY</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 13:20:17.456" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-jidtr/buc-corzq/dir1/dir2 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 13:20:17.477" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 13:20:17.477" level="INFO">${output} = {"path":"","type":"DIRECTORY","countStats":{"numVolume":-1,"numBucket":-1,"numDir":0,"numKey":1},"objectInfo":{"metadata":{},"name":"dir2","quotaInBytes":0,"quotaInNamespace":0,"usedNamespace":0,"crea...</msg>
<status status="PASS" starttime="20230913 13:20:17.453" endtime="20230913 13:20:17.477"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 13:20:17.479" level="INFO">{"path":"","type":"DIRECTORY","countStats":{"numVolume":-1,"numBucket":-1,"numDir":0,"numKey":1},"objectInfo":{"metadata":{},"name":"dir2","quotaInBytes":0,"quotaInNamespace":0,"usedNamespace":0,"creationTime":1694611183266,"modificationTime":1694611183266,"acls":[{"type":"USER","name":"hadoop","aclScope":"ACCESS","aclList":["ALL"]},{"type":"GROUP","name":"hadoop","aclScope":"ACCESS","aclList":["ALL"]}]},"status":"OK"}</msg>
<status status="PASS" starttime="20230913 13:20:17.478" endtime="20230913 13:20:17.479"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 13:20:17.480" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 13:20:17.479" endtime="20230913 13:20:17.480"/>
</kw>
<status status="PASS" starttime="20230913 13:20:17.452" endtime="20230913 13:20:17.480"/>
</kw>
<msg timestamp="20230913 13:20:17.481" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 13:20:17.452" endtime="20230913 13:20:17.481"/>
</kw>
<msg timestamp="20230913 13:20:17.481" level="INFO">${result} = {"path":"","type":"DIRECTORY","countStats":{"numVolume":-1,"numBucket":-1,"numDir":0,"numKey":1},"objectInfo":{"metadata":{},"name":"dir2","quotaInBytes":0,"quotaInNamespace":0,"usedNamespace":0,"crea...</msg>
<status status="PASS" starttime="20230913 13:20:17.452" endtime="20230913 13:20:17.481"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230913 13:20:17.481" endtime="20230913 13:20:17.482"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230913 13:20:17.482" endtime="20230913 13:20:17.482"/>
</kw>
<status status="PASS" starttime="20230913 13:20:17.451" endtime="20230913 13:20:17.483"/>
</kw>
<status status="PASS" starttime="20230913 13:20:17.450" endtime="20230913 13:20:17.483"/>
</kw>
<status status="PASS" starttime="20230913 13:20:17.449" endtime="20230913 13:20:17.483"/>
</kw>
<status status="PASS" starttime="20230913 13:20:17.449" endtime="20230913 13:20:17.483"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230913 13:20:17.447" endtime="20230913 13:20:17.483"/>
</test>
<test id="s1-s3-s2-t13" name="Check Recon Namespace Disk Usage" line="138">
<kw name="Wait For Summary">
<arg>${DISK_USAGE_URL}?path=/${VOLUME}/${BUCKET}&amp;files=true&amp;replica=true</arg>
<arg>\"sizeWithReplica\"</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 13:20:17.493" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/du?path=/vol-jidtr/buc-corzq&amp;files=true&amp;replica=true 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 13:20:17.511" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 13:20:17.511" level="INFO">${output} = {"status":"OK","path":"/vol-jidtr/buc-corzq","size":10106,"sizeWithReplica":-1,"subPathCount":1,"subPaths":[{"key":false,"path":"/vol-jidtr/buc-corzq/dir1","size":6038,"sizeWithReplica":-1,"isKey":fal...</msg>
<status status="PASS" starttime="20230913 13:20:17.490" endtime="20230913 13:20:17.511"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 13:20:17.513" level="INFO">{"status":"OK","path":"/vol-jidtr/buc-corzq","size":10106,"sizeWithReplica":-1,"subPathCount":1,"subPaths":[{"key":false,"path":"/vol-jidtr/buc-corzq/dir1","size":6038,"sizeWithReplica":-1,"isKey":false}],"sizeDirectKey":4068}</msg>
<status status="PASS" starttime="20230913 13:20:17.512" endtime="20230913 13:20:17.513"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 13:20:17.519" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 13:20:17.513" endtime="20230913 13:20:17.519"/>
</kw>
<status status="PASS" starttime="20230913 13:20:17.490" endtime="20230913 13:20:17.520"/>
</kw>
<msg timestamp="20230913 13:20:17.520" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 13:20:17.489" endtime="20230913 13:20:17.520"/>
</kw>
<msg timestamp="20230913 13:20:17.520" level="INFO">${result} = {"status":"OK","path":"/vol-jidtr/buc-corzq","size":10106,"sizeWithReplica":-1,"subPathCount":1,"subPaths":[{"key":false,"path":"/vol-jidtr/buc-corzq/dir1","size":6038,"sizeWithReplica":-1,"isKey":fal...</msg>
<status status="PASS" starttime="20230913 13:20:17.489" endtime="20230913 13:20:17.520"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230913 13:20:17.520" endtime="20230913 13:20:17.521"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230913 13:20:17.521" endtime="20230913 13:20:17.522"/>
</kw>
<status status="PASS" starttime="20230913 13:20:17.487" endtime="20230913 13:20:17.522"/>
</kw>
<status status="PASS" starttime="20230913 13:20:17.486" endtime="20230913 13:20:17.522"/>
</kw>
<status status="PASS" starttime="20230913 13:20:17.485" endtime="20230913 13:20:17.522"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230913 13:20:17.484" endtime="20230913 13:20:17.522"/>
</test>
<test id="s1-s3-s2-t14" name="Check Recon Namespace Volume Quota Usage" line="141">
<kw name="Wait For Summary">
<arg>${QUOTA_USAGE_URL}?path=/${VOLUME}</arg>
<arg>\"used\"</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 13:20:17.531" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/quota?path=/vol-jidtr 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 13:20:17.550" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 13:20:17.550" level="INFO">${output} = {"allowed":-1,"used":10106,"status":"OK"}</msg>
<status status="PASS" starttime="20230913 13:20:17.529" endtime="20230913 13:20:17.550"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 13:20:17.552" level="INFO">{"allowed":-1,"used":10106,"status":"OK"}</msg>
<status status="PASS" starttime="20230913 13:20:17.551" endtime="20230913 13:20:17.552"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 13:20:17.553" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 13:20:17.552" endtime="20230913 13:20:17.553"/>
</kw>
<status status="PASS" starttime="20230913 13:20:17.528" endtime="20230913 13:20:17.553"/>
</kw>
<msg timestamp="20230913 13:20:17.553" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 13:20:17.527" endtime="20230913 13:20:17.554"/>
</kw>
<msg timestamp="20230913 13:20:17.554" level="INFO">${result} = {"allowed":-1,"used":10106,"status":"OK"}</msg>
<status status="PASS" starttime="20230913 13:20:17.527" endtime="20230913 13:20:17.554"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230913 13:20:17.554" endtime="20230913 13:20:17.555"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230913 13:20:17.555" endtime="20230913 13:20:17.555"/>
</kw>
<status status="PASS" starttime="20230913 13:20:17.526" endtime="20230913 13:20:17.555"/>
</kw>
<status status="PASS" starttime="20230913 13:20:17.526" endtime="20230913 13:20:17.556"/>
</kw>
<status status="PASS" starttime="20230913 13:20:17.525" endtime="20230913 13:20:17.556"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230913 13:20:17.524" endtime="20230913 13:20:17.556"/>
</test>
<test id="s1-s3-s2-t15" name="Check Recon Namespace Bucket Quota Usage" line="144">
<kw name="Wait For Summary">
<arg>${QUOTA_USAGE_URL}?path=/${VOLUME}/${BUCKET}</arg>
<arg>\"used\"</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 13:20:17.566" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/quota?path=/vol-jidtr/buc-corzq 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 13:20:17.584" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 13:20:17.584" level="INFO">${output} = {"allowed":-1,"used":10106,"status":"OK"}</msg>
<status status="PASS" starttime="20230913 13:20:17.563" endtime="20230913 13:20:17.584"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 13:20:17.586" level="INFO">{"allowed":-1,"used":10106,"status":"OK"}</msg>
<status status="PASS" starttime="20230913 13:20:17.585" endtime="20230913 13:20:17.586"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 13:20:17.586" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 13:20:17.586" endtime="20230913 13:20:17.587"/>
</kw>
<status status="PASS" starttime="20230913 13:20:17.562" endtime="20230913 13:20:17.587"/>
</kw>
<msg timestamp="20230913 13:20:17.587" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 13:20:17.561" endtime="20230913 13:20:17.587"/>
</kw>
<msg timestamp="20230913 13:20:17.587" level="INFO">${result} = {"allowed":-1,"used":10106,"status":"OK"}</msg>
<status status="PASS" starttime="20230913 13:20:17.560" endtime="20230913 13:20:17.587"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230913 13:20:17.587" endtime="20230913 13:20:17.588"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230913 13:20:17.588" endtime="20230913 13:20:17.589"/>
</kw>
<status status="PASS" starttime="20230913 13:20:17.560" endtime="20230913 13:20:17.589"/>
</kw>
<status status="PASS" starttime="20230913 13:20:17.559" endtime="20230913 13:20:17.589"/>
</kw>
<status status="PASS" starttime="20230913 13:20:17.558" endtime="20230913 13:20:17.589"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230913 13:20:17.557" endtime="20230913 13:20:17.589"/>
</test>
<test id="s1-s3-s2-t16" name="Check Recon Namespace File Size Distribution Root" line="147">
<kw name="Wait For Summary">
<arg>${FILE_SIZE_DIST_URL}?path=/</arg>
<arg>\"dist\"</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 13:20:17.598" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/dist?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 13:20:17.615" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 13:20:17.615" level="INFO">${output} = {"dist":[0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"status":"OK"}</msg>
<status status="PASS" starttime="20230913 13:20:17.594" endtime="20230913 13:20:17.615"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 13:20:17.616" level="INFO">{"dist":[0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"status":"OK"}</msg>
<status status="PASS" starttime="20230913 13:20:17.615" endtime="20230913 13:20:17.616"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 13:20:17.617" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 13:20:17.616" endtime="20230913 13:20:17.617"/>
</kw>
<status status="PASS" starttime="20230913 13:20:17.594" endtime="20230913 13:20:17.617"/>
</kw>
<msg timestamp="20230913 13:20:17.618" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 13:20:17.594" endtime="20230913 13:20:17.618"/>
</kw>
<msg timestamp="20230913 13:20:17.618" level="INFO">${result} = {"dist":[0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"status":"OK"}</msg>
<status status="PASS" starttime="20230913 13:20:17.593" endtime="20230913 13:20:17.618"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230913 13:20:17.618" endtime="20230913 13:20:17.619"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230913 13:20:17.619" endtime="20230913 13:20:17.619"/>
</kw>
<status status="PASS" starttime="20230913 13:20:17.593" endtime="20230913 13:20:17.619"/>
</kw>
<status status="PASS" starttime="20230913 13:20:17.592" endtime="20230913 13:20:17.620"/>
</kw>
<status status="PASS" starttime="20230913 13:20:17.591" endtime="20230913 13:20:17.620"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230913 13:20:17.590" endtime="20230913 13:20:17.620"/>
</test>
<doc>Smoke test for Recon Namespace Summary Endpoint for FILE_SYSTEM_OPTIMIZED buckets.</doc>
<status status="PASS" starttime="20230913 13:19:20.362" endtime="20230913 13:20:17.621"/>
</suite>
<status status="PASS" starttime="20230913 13:17:55.090" endtime="20230913 13:20:17.625"/>
</suite>
<suite id="s1-s4" name="Loaddata" source="/opt/hadoop/smoketest/topology/loaddata.robot">
<test id="s1-s4-t1" name="Create a volume, bucket and key" line="27">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create topvol1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 13:20:20.882" level="INFO">Running command 'ozone sh volume create topvol1 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 13:20:26.027" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 13:20:26.027" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230913 13:20:20.878" endtime="20230913 13:20:26.027"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 13:20:26.029" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230913 13:20:26.028" endtime="20230913 13:20:26.029"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 13:20:26.030" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 13:20:26.029" endtime="20230913 13:20:26.030"/>
</kw>
<status status="PASS" starttime="20230913 13:20:20.877" endtime="20230913 13:20:26.031"/>
</kw>
<msg timestamp="20230913 13:20:26.031" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 13:20:20.877" endtime="20230913 13:20:26.031"/>
</kw>
<msg timestamp="20230913 13:20:26.031" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230913 13:20:20.876" endtime="20230913 13:20:26.031"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230913 13:20:26.031" endtime="20230913 13:20:26.032"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /topvol1/bucket1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 13:20:26.037" level="INFO">Running command 'ozone sh bucket create /topvol1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 13:20:31.052" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 13:20:31.053" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230913 13:20:26.034" endtime="20230913 13:20:31.053"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 13:20:31.054" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230913 13:20:31.053" endtime="20230913 13:20:31.054"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 13:20:31.055" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 13:20:31.054" endtime="20230913 13:20:31.055"/>
</kw>
<status status="PASS" starttime="20230913 13:20:26.033" endtime="20230913 13:20:31.056"/>
</kw>
<msg timestamp="20230913 13:20:31.056" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 13:20:26.033" endtime="20230913 13:20:31.056"/>
</kw>
<msg timestamp="20230913 13:20:31.056" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230913 13:20:26.032" endtime="20230913 13:20:31.056"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230913 13:20:31.056" endtime="20230913 13:20:31.057"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /topvol1/bucket1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 13:20:31.061" level="INFO">Running command 'ozone sh key put /topvol1/bucket1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 13:20:39.228" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 13:20:39.229" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230913 13:20:31.058" endtime="20230913 13:20:39.229"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 13:20:39.230" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230913 13:20:39.229" endtime="20230913 13:20:39.230"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 13:20:39.231" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 13:20:39.230" endtime="20230913 13:20:39.231"/>
</kw>
<status status="PASS" starttime="20230913 13:20:31.058" endtime="20230913 13:20:39.231"/>
</kw>
<msg timestamp="20230913 13:20:39.231" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 13:20:31.057" endtime="20230913 13:20:39.231"/>
</kw>
<msg timestamp="20230913 13:20:39.231" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230913 13:20:31.057" endtime="20230913 13:20:39.232"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230913 13:20:39.232" endtime="20230913 13:20:39.232"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230913 13:20:20.876" endtime="20230913 13:20:39.232"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20230913 13:20:20.819" endtime="20230913 13:20:39.234"/>
</suite>
<suite id="s1-s5" name="readdata-first-half" source="/opt/hadoop/smoketest/topology/readdata.robot">
<test id="s1-s5-t1" name="Read data from previously created key" line="27">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230913 13:20:48.058" level="INFO">${random} = 41740</msg>
<status status="PASS" starttime="20230913 13:20:48.057" endtime="20230913 13:20:48.058"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /topvol1/bucket1/key1 /tmp/key1-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 13:20:48.063" level="INFO">Running command 'ozone sh key get /topvol1/bucket1/key1 /tmp/key1-41740 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 13:20:55.223" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 13:20:55.224" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230913 13:20:48.059" endtime="20230913 13:20:55.224"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 13:20:55.225" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230913 13:20:55.224" endtime="20230913 13:20:55.225"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 13:20:55.226" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 13:20:55.225" endtime="20230913 13:20:55.226"/>
</kw>
<status status="PASS" starttime="20230913 13:20:48.059" endtime="20230913 13:20:55.226"/>
</kw>
<msg timestamp="20230913 13:20:55.226" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 13:20:48.059" endtime="20230913 13:20:55.226"/>
</kw>
<msg timestamp="20230913 13:20:55.226" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230913 13:20:48.058" endtime="20230913 13:20:55.226"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230913 13:20:55.227" endtime="20230913 13:20:55.227"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230913 13:20:48.056" endtime="20230913 13:20:55.227"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20230913 13:20:47.999" endtime="20230913 13:20:55.229"/>
</suite>
<suite id="s1-s6" name="readdata-second-half" source="/opt/hadoop/smoketest/topology/readdata.robot">
<test id="s1-s6-t1" name="Read data from previously created key" line="27">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230913 13:21:50.258" level="INFO">${random} = 65308</msg>
<status status="PASS" starttime="20230913 13:21:50.258" endtime="20230913 13:21:50.258"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /topvol1/bucket1/key1 /tmp/key1-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 13:21:50.263" level="INFO">Running command 'ozone sh key get /topvol1/bucket1/key1 /tmp/key1-65308 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 13:22:30.242" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 13:22:30.242" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230913 13:21:50.260" endtime="20230913 13:22:30.242"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 13:22:30.243" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230913 13:22:30.243" endtime="20230913 13:22:30.244"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 13:22:30.244" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 13:22:30.244" endtime="20230913 13:22:30.244"/>
</kw>
<status status="PASS" starttime="20230913 13:21:50.260" endtime="20230913 13:22:30.244"/>
</kw>
<msg timestamp="20230913 13:22:30.245" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 13:21:50.259" endtime="20230913 13:22:30.245"/>
</kw>
<msg timestamp="20230913 13:22:30.245" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230913 13:21:50.258" endtime="20230913 13:22:30.245"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230913 13:22:30.245" endtime="20230913 13:22:30.246"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230913 13:21:50.257" endtime="20230913 13:22:30.246"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20230913 13:21:50.199" endtime="20230913 13:22:30.247"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="254603"/>
</suite>
<statistics>
<total>
<stat pass="32" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="32" fail="0" skip="0" id="s1" name="ozone-topology">ozone-topology</stat>
<stat pass="2" fail="0" skip="0" id="s1-s1" name="Basic">ozone-topology.Basic</stat>
<stat pass="4" fail="0" skip="0" id="s1-s2" name="Cli">ozone-topology.Cli</stat>
<stat pass="23" fail="0" skip="0" id="s1-s3" name="Recon">ozone-topology.Recon</stat>
<stat pass="7" fail="0" skip="0" id="s1-s3-s1" name="Recon-Api">ozone-topology.Recon.Recon-Api</stat>
<stat pass="16" fail="0" skip="0" id="s1-s3-s2" name="Recon-Nssummary">ozone-topology.Recon.Recon-Nssummary</stat>
<stat pass="1" fail="0" skip="0" id="s1-s4" name="Loaddata">ozone-topology.Loaddata</stat>
<stat pass="1" fail="0" skip="0" id="s1-s5" name="readdata-first-half">ozone-topology.readdata-first-half</stat>
<stat pass="1" fail="0" skip="0" id="s1-s6" name="readdata-second-half">ozone-topology.readdata-second-half</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
