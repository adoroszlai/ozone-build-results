<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 6.1.1 (Python 3.8.10 on linux)" generated="20230913 13:38:27.574" rpa="false" schemaversion="4">
<suite id="s1" name="restart">
<suite id="s1-s1" name="Generate" source="/opt/hadoop/smoketest/freon/generate.robot">
<test id="s1-s1-t1" name="Ozone Client Key Generator" line="25">
<kw name="Freon OCKG" library="freon">
<arg>prefix=ockg${PREFIX}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 13:34:31.492" level="INFO">Running command 'ozone freon ockg  -t 1 -n1 -p ockgpre  2&gt;&amp;1'.</msg>
<msg timestamp="20230913 13:34:49.239" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 13:34:49.239" level="INFO">${output} = 2023-09-13 13:34:36,195 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-13 13:34:36,678 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230913 13:34:31.488" endtime="20230913 13:34:49.239"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 13:34:49.241" level="INFO">2023-09-13 13:34:36,195 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-13 13:34:36,678 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-09-13 13:34:36,678 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-09-13 13:34:36,924 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ockgpre and number-of-tests 1
2023-09-13 13:34:37,044 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-13 13:34:38,049 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-13 13:34:39,050 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-13 13:34:40,050 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-13 13:34:40,292 [main] INFO retry.RetryInvocationHandler: com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.ozone.om.exceptions.OMNotLeaderException): OM:om1 is not the leader. Could not determine the leader node.
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createNotLeaderException(OzoneManagerProtocolServerSideTranslatorPB.java:246)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createLeaderErrorException(OzoneManagerProtocolServerSideTranslatorPB.java:234)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitReadRequestToOM(OzoneManagerProtocolServerSideTranslatorPB.java:227)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.processRequest(OzoneManagerProtocolServerSideTranslatorPB.java:179)
	at org.apache.hadoop.hdds.server.OzoneProtocolMessageDispatcher.processRequest(OzoneProtocolMessageDispatcher.java:87)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitRequest(OzoneManagerProtocolServerSideTranslatorPB.java:148)
	at org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos$OzoneManagerService$2.callBlockingMethod(OzoneManagerProtocolProtos.java)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Server.processCall(ProtobufRpcEngine.java:484)
	at org.apache.hadoop.ipc.ProtobufRpcEngine2$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine2.java:595)
	at org.apache.hadoop.ipc.ProtobufRpcEngine2$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine2.java:573)
	at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:1227)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:1094)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:1017)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/javax.security.auth.Subject.doAs(Subject.java:423)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1899)
	at org.apache.hadoop.ipc.Server$Handler.run(Server.java:3048)
, while invoking $Proxy24.submitRequest over nodeId=null,nodeAddress=om:9862 after 1 failover attempts. Trying to failover after sleeping for 4000ms. Current retry count: 1.
2023-09-13 13:34:41,051 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-13 13:34:42,052 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-13 13:34:43,052 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-13 13:34:44,053 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-13 13:34:44,580 [main] INFO rpc.RpcClient: Creating Volume: vol1, with hadoop as owner and space quota set to -1 bytes, counts quota set to -1
2023-09-13 13:34:44,768 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Encryption set to false, Replication Type set to server-side default replication type, Namespace Quota set to -1, Space Quota set to -1 
2023-09-13 13:34:45,053 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-13 13:34:46,005 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2023-09-13 13:34:46,053 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-13 13:34:46,447 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2023-09-13 13:34:47,054 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-13 13:34:48,054 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2023-09-13 13:34:48,878 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=1, min=3144.999315, max=3144.999315, mean=3144.999315, stddev=0.0, median=3144.999315, p75=3144.999315, p95=3144.999315, p98=3144.999315, p99=3144.999315, p999=3144.999315, mean_rate=0.24646619347369145, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-09-13 13:34:48,879 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 12
2023-09-13 13:34:48,879 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-09-13 13:34:48,879 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20230913 13:34:49.240" endtime="20230913 13:34:49.241"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 13:34:49.242" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 13:34:49.241" endtime="20230913 13:34:49.242"/>
</kw>
<status status="PASS" starttime="20230913 13:34:31.488" endtime="20230913 13:34:49.242"/>
</kw>
<msg timestamp="20230913 13:34:49.243" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 13:34:31.488" endtime="20230913 13:34:49.243"/>
</kw>
<msg timestamp="20230913 13:34:49.243" level="INFO">${result} = 2023-09-13 13:34:36,195 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-13 13:34:36,678 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230913 13:34:31.487" endtime="20230913 13:34:49.243"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230913 13:34:49.243" endtime="20230913 13:34:49.244"/>
</kw>
<status status="PASS" starttime="20230913 13:34:31.485" endtime="20230913 13:34:49.244"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230913 13:34:31.484" endtime="20230913 13:34:49.244"/>
</test>
<test id="s1-s1-t2" name="OM Key Generator" line="28">
<kw name="Freon OMKG" library="freon">
<arg>prefix=omkg${PREFIX}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon omkg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 13:34:49.252" level="INFO">Running command 'ozone freon omkg  -t 1 -n1 -p omkgpre  2&gt;&amp;1'.</msg>
<msg timestamp="20230913 13:34:54.136" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 13:34:54.136" level="INFO">${output} = 2023-09-13 13:34:51,684 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-13 13:34:51,871 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230913 13:34:49.249" endtime="20230913 13:34:54.136"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 13:34:54.137" level="INFO">2023-09-13 13:34:51,684 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-13 13:34:51,871 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-09-13 13:34:51,871 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-09-13 13:34:51,991 [main] INFO freon.BaseFreonGenerator: Executing test with prefix omkgpre and number-of-tests 1
2023-09-13 13:34:52,041 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-13 13:34:53,046 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-13 13:34:54,047 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2023-09-13 13:34:54,068 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=1, min=100.860268, max=100.860268, mean=100.860268, stddev=0.0, median=100.860268, p75=100.860268, p95=100.860268, p98=100.860268, p99=100.860268, p999=100.860268, mean_rate=0.8762887209081772, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-09-13 13:34:54,071 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2023-09-13 13:34:54,072 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-09-13 13:34:54,072 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20230913 13:34:54.137" endtime="20230913 13:34:54.138"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 13:34:54.138" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 13:34:54.138" endtime="20230913 13:34:54.138"/>
</kw>
<status status="PASS" starttime="20230913 13:34:49.249" endtime="20230913 13:34:54.138"/>
</kw>
<msg timestamp="20230913 13:34:54.139" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 13:34:49.249" endtime="20230913 13:34:54.139"/>
</kw>
<msg timestamp="20230913 13:34:54.139" level="INFO">${result} = 2023-09-13 13:34:51,684 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-13 13:34:51,871 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230913 13:34:49.248" endtime="20230913 13:34:54.139"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230913 13:34:54.139" endtime="20230913 13:34:54.140"/>
</kw>
<status status="PASS" starttime="20230913 13:34:49.246" endtime="20230913 13:34:54.140"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230913 13:34:49.245" endtime="20230913 13:34:54.140"/>
</test>
<test id="s1-s1-t3" name="OM Bucket Generator" line="31">
<kw name="Freon OMBG" library="freon">
<arg>prefix=ombg${PREFIX}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ombg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 13:34:54.157" level="INFO">Running command 'ozone freon ombg  -t 1 -n1 -p ombgpre  2&gt;&amp;1'.</msg>
<msg timestamp="20230913 13:34:59.049" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 13:34:59.049" level="INFO">${output} = 2023-09-13 13:34:56,607 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-13 13:34:56,754 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230913 13:34:54.145" endtime="20230913 13:34:59.049"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 13:34:59.050" level="INFO">2023-09-13 13:34:56,607 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-13 13:34:56,754 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-09-13 13:34:56,755 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-09-13 13:34:56,880 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ombgpre and number-of-tests 1
2023-09-13 13:34:56,956 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-13 13:34:57,961 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-13 13:34:58,962 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2023-09-13 13:34:58,989 [shutdown-hook-0] INFO metrics: type=TIMER, name=bucket-create, count=1, min=21.256022, max=21.256022, mean=21.256022, stddev=0.0, median=21.256022, p75=21.256022, p95=21.256022, p98=21.256022, p99=21.256022, p999=21.256022, mean_rate=0.9693621715076728, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-09-13 13:34:58,992 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2023-09-13 13:34:58,992 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-09-13 13:34:58,992 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20230913 13:34:59.049" endtime="20230913 13:34:59.050"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 13:34:59.051" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 13:34:59.051" endtime="20230913 13:34:59.051"/>
</kw>
<status status="PASS" starttime="20230913 13:34:54.145" endtime="20230913 13:34:59.051"/>
</kw>
<msg timestamp="20230913 13:34:59.052" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 13:34:54.144" endtime="20230913 13:34:59.052"/>
</kw>
<msg timestamp="20230913 13:34:59.052" level="INFO">${result} = 2023-09-13 13:34:56,607 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-13 13:34:56,754 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230913 13:34:54.144" endtime="20230913 13:34:59.052"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230913 13:34:59.052" endtime="20230913 13:34:59.053"/>
</kw>
<status status="PASS" starttime="20230913 13:34:54.142" endtime="20230913 13:34:59.053"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230913 13:34:54.141" endtime="20230913 13:34:59.053"/>
</test>
<doc>Test freon data generation commands</doc>
<status status="PASS" starttime="20230913 13:34:31.317" endtime="20230913 13:34:59.055"/>
</suite>
<suite id="s1-s2" name="Validate-Chunk" source="/opt/hadoop/smoketest/freon/validate-chunk.robot">
<test id="s1-s2-t1" name="DN Chunk Validator" line="25">
<kw name="Freon DCV" library="freon">
<arg>prefix=dcg${PREFIX}</arg>
<arg>n=100</arg>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20230913 13:38:05.831" endtime="20230913 13:38:05.832"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon dcv -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 13:38:05.836" level="INFO">Running command 'ozone freon dcv -t 1 -n100 -p dcgpost  2&gt;&amp;1'.</msg>
<msg timestamp="20230913 13:38:12.486" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 13:38:12.486" level="INFO">${output} = 2023-09-13 13:38:08,344 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-13 13:38:08,565 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230913 13:38:05.833" endtime="20230913 13:38:12.486"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 13:38:12.488" level="INFO">2023-09-13 13:38:08,344 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-13 13:38:08,565 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-09-13 13:38:08,565 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-09-13 13:38:08,671 [main] INFO freon.BaseFreonGenerator: Executing test with prefix dcgpost and number-of-tests 100
2023-09-13 13:38:08,733 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2023-09-13 13:38:09,364 [main] INFO freon.DatanodeChunkValidator: Using pipeline PipelineID=f8c8e8ae-52b4-4f99-ae10-dfce1971d892
2023-09-13 13:38:09,735 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2023-09-13 13:38:09,944 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2023-09-13 13:38:10,268 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2023-09-13 13:38:10,735 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2023-09-13 13:38:11,738 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (100 out of 100)
2023-09-13 13:38:12,130 [shutdown-hook-0] INFO metrics: type=TIMER, name=chunk-validate, count=100, min=2.312824, max=26.63648, mean=5.558985389999997, stddev=3.498794624403865, median=4.387746, p75=6.65427, p95=10.576711, p98=14.032947, p99=20.335914, p999=26.63648, mean_rate=94.3145008175294, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-09-13 13:38:12,131 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2023-09-13 13:38:12,131 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-09-13 13:38:12,131 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 100</msg>
<status status="PASS" starttime="20230913 13:38:12.487" endtime="20230913 13:38:12.488"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 13:38:12.489" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 13:38:12.488" endtime="20230913 13:38:12.489"/>
</kw>
<status status="PASS" starttime="20230913 13:38:05.833" endtime="20230913 13:38:12.489"/>
</kw>
<msg timestamp="20230913 13:38:12.489" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 13:38:05.832" endtime="20230913 13:38:12.490"/>
</kw>
<msg timestamp="20230913 13:38:12.490" level="INFO">${result} = 2023-09-13 13:38:08,344 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-13 13:38:08,565 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230913 13:38:05.832" endtime="20230913 13:38:12.490"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230913 13:38:12.490" endtime="20230913 13:38:12.490"/>
</kw>
<status status="PASS" starttime="20230913 13:38:05.829" endtime="20230913 13:38:12.491"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230913 13:38:05.829" endtime="20230913 13:38:12.491"/>
</test>
<doc>Test freon chunk validation commands</doc>
<status status="PASS" starttime="20230913 13:38:05.774" endtime="20230913 13:38:12.493"/>
</suite>
<suite id="s1-s3" name="Validate" source="/opt/hadoop/smoketest/freon/validate.robot">
<test id="s1-s3-t1" name="Ozone Client Key Validator" line="25">
<kw name="Freon OCKV" library="freon">
<arg>prefix=ockg${PREFIX}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockv ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 13:35:02.196" level="INFO">Running command 'ozone freon ockv  -t 1 -n1 -p ockgpre  2&gt;&amp;1'.</msg>
<msg timestamp="20230913 13:35:09.655" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 13:35:09.655" level="INFO">${output} = 2023-09-13 13:35:04,972 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-13 13:35:05,130 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230913 13:35:02.193" endtime="20230913 13:35:09.655"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 13:35:09.657" level="INFO">2023-09-13 13:35:04,972 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-13 13:35:05,130 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-09-13 13:35:05,134 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-09-13 13:35:05,235 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ockgpre and number-of-tests 1
2023-09-13 13:35:05,300 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-13 13:35:06,301 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-13 13:35:07,098 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2023-09-13 13:35:07,302 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-13 13:35:08,302 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2023-09-13 13:35:09,273 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-validate, count=1, min=63.246165, max=63.246165, mean=63.246165, stddev=0.0, median=63.246165, p75=63.246165, p95=63.246165, p98=63.246165, p99=63.246165, p999=63.246165, mean_rate=0.9540792962150875, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-09-13 13:35:09,274 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 4
2023-09-13 13:35:09,274 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-09-13 13:35:09,274 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20230913 13:35:09.656" endtime="20230913 13:35:09.657"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 13:35:09.657" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 13:35:09.657" endtime="20230913 13:35:09.657"/>
</kw>
<status status="PASS" starttime="20230913 13:35:02.192" endtime="20230913 13:35:09.658"/>
</kw>
<msg timestamp="20230913 13:35:09.658" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 13:35:02.192" endtime="20230913 13:35:09.658"/>
</kw>
<msg timestamp="20230913 13:35:09.658" level="INFO">${result} = 2023-09-13 13:35:04,972 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-13 13:35:05,130 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230913 13:35:02.191" endtime="20230913 13:35:09.658"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230913 13:35:09.658" endtime="20230913 13:35:09.659"/>
</kw>
<status status="PASS" starttime="20230913 13:35:02.190" endtime="20230913 13:35:09.659"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230913 13:35:02.189" endtime="20230913 13:35:09.659"/>
</test>
<doc>Test freon data validation commands</doc>
<status status="PASS" starttime="20230913 13:35:02.135" endtime="20230913 13:35:09.661"/>
</suite>
<suite id="s1-s4" name="Generate-Chunk" source="/opt/hadoop/smoketest/freon/generate-chunk.robot">
<test id="s1-s4-t1" name="DN Chunk Generator" line="25">
<kw name="Freon DCG" library="freon">
<arg>prefix=dcg${PREFIX}</arg>
<arg>n=100</arg>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20230913 13:35:13.059" endtime="20230913 13:35:13.059"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon dcg -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 13:35:13.064" level="INFO">Running command 'ozone freon dcg -t 1 -n100 -p dcgpre  2&gt;&amp;1'.</msg>
<msg timestamp="20230913 13:35:23.737" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 13:35:23.737" level="INFO">${output} = 2023-09-13 13:35:15,317 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-13 13:35:15,534 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230913 13:35:13.061" endtime="20230913 13:35:23.737"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 13:35:23.738" level="INFO">2023-09-13 13:35:15,317 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-13 13:35:15,534 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-09-13 13:35:15,534 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-09-13 13:35:16,427 [main] INFO freon.BaseFreonGenerator: Executing test with prefix dcgpre and number-of-tests 100
2023-09-13 13:35:16,493 [Thread-4] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2023-09-13 13:35:17,052 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2023-09-13 13:35:17,433 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2023-09-13 13:35:17,508 [Thread-4] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2023-09-13 13:35:18,510 [Thread-4] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2023-09-13 13:35:19,516 [Thread-4] INFO freon.ProgressBar: Progress: 7.00 % (7 out of 100)
2023-09-13 13:35:20,517 [Thread-4] INFO freon.ProgressBar: Progress: 32.00 % (32 out of 100)
2023-09-13 13:35:21,518 [Thread-4] INFO freon.ProgressBar: Progress: 67.00 % (67 out of 100)
2023-09-13 13:35:22,518 [Thread-4] INFO freon.ProgressBar: Progress: 100.00 % (100 out of 100)
2023-09-13 13:35:23,386 [shutdown-hook-0] INFO metrics: type=TIMER, name=chunk-write, count=100, min=17.02348, max=1849.148553, mean=49.866089220700474, stddev=179.16051623647647, median=28.606003, p75=35.890879, p95=53.277764, p98=83.342881, p99=85.623905, p999=1849.148553, mean_rate=16.389774913746923, m1=19.0, m5=19.0, m15=19.0, rate_unit=events/second, duration_unit=milliseconds
2023-09-13 13:35:23,386 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 7
2023-09-13 13:35:23,387 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-09-13 13:35:23,387 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 100</msg>
<status status="PASS" starttime="20230913 13:35:23.738" endtime="20230913 13:35:23.738"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 13:35:23.739" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 13:35:23.739" endtime="20230913 13:35:23.739"/>
</kw>
<status status="PASS" starttime="20230913 13:35:13.060" endtime="20230913 13:35:23.740"/>
</kw>
<msg timestamp="20230913 13:35:23.740" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 13:35:13.060" endtime="20230913 13:35:23.740"/>
</kw>
<msg timestamp="20230913 13:35:23.740" level="INFO">${result} = 2023-09-13 13:35:15,317 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-13 13:35:15,534 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230913 13:35:13.059" endtime="20230913 13:35:23.740"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230913 13:35:23.740" endtime="20230913 13:35:23.741"/>
</kw>
<status status="PASS" starttime="20230913 13:35:13.057" endtime="20230913 13:35:23.741"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230913 13:35:13.056" endtime="20230913 13:35:23.741"/>
</test>
<doc>Test freon chunk generation commands</doc>
<status status="PASS" starttime="20230913 13:35:13.002" endtime="20230913 13:35:23.743"/>
</suite>
<suite id="s1-s5" name="Validate-Chunk" source="/opt/hadoop/smoketest/freon/validate-chunk.robot">
<test id="s1-s5-t1" name="DN Chunk Validator" line="25">
<kw name="Freon DCV" library="freon">
<arg>prefix=dcg${PREFIX}</arg>
<arg>n=100</arg>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20230913 13:35:26.902" endtime="20230913 13:35:26.903"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon dcv -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 13:35:26.907" level="INFO">Running command 'ozone freon dcv -t 1 -n100 -p dcgpre  2&gt;&amp;1'.</msg>
<msg timestamp="20230913 13:35:33.720" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 13:35:33.720" level="INFO">${output} = 2023-09-13 13:35:29,548 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-13 13:35:29,711 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230913 13:35:26.904" endtime="20230913 13:35:33.720"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 13:35:33.722" level="INFO">2023-09-13 13:35:29,548 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-13 13:35:29,711 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-09-13 13:35:29,711 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-09-13 13:35:29,875 [main] INFO freon.BaseFreonGenerator: Executing test with prefix dcgpre and number-of-tests 100
2023-09-13 13:35:29,947 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2023-09-13 13:35:30,566 [main] INFO freon.DatanodeChunkValidator: Using pipeline PipelineID=f8c8e8ae-52b4-4f99-ae10-dfce1971d892
2023-09-13 13:35:30,951 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2023-09-13 13:35:31,106 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2023-09-13 13:35:31,457 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2023-09-13 13:35:31,951 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2023-09-13 13:35:32,951 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (100 out of 100)
2023-09-13 13:35:33,365 [shutdown-hook-0] INFO metrics: type=TIMER, name=chunk-validate, count=100, min=2.607327, max=58.766921, mean=5.671133959999997, stddev=5.86826461914734, median=4.242845, p75=6.60187, p95=10.367409, p98=13.266441, p99=15.254361, p999=58.766921, mean_rate=93.67194615306393, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-09-13 13:35:33,366 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2023-09-13 13:35:33,366 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-09-13 13:35:33,366 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 100</msg>
<status status="PASS" starttime="20230913 13:35:33.721" endtime="20230913 13:35:33.722"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 13:35:33.723" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 13:35:33.722" endtime="20230913 13:35:33.723"/>
</kw>
<status status="PASS" starttime="20230913 13:35:26.904" endtime="20230913 13:35:33.723"/>
</kw>
<msg timestamp="20230913 13:35:33.723" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 13:35:26.903" endtime="20230913 13:35:33.723"/>
</kw>
<msg timestamp="20230913 13:35:33.724" level="INFO">${result} = 2023-09-13 13:35:29,548 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-13 13:35:29,711 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230913 13:35:26.903" endtime="20230913 13:35:33.724"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230913 13:35:33.724" endtime="20230913 13:35:33.724"/>
</kw>
<status status="PASS" starttime="20230913 13:35:26.901" endtime="20230913 13:35:33.724"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230913 13:35:26.900" endtime="20230913 13:35:33.725"/>
</test>
<doc>Test freon chunk validation commands</doc>
<status status="PASS" starttime="20230913 13:35:26.847" endtime="20230913 13:35:33.727"/>
</suite>
<suite id="s1-s6" name="Validate" source="/opt/hadoop/smoketest/freon/validate.robot">
<test id="s1-s6-t1" name="Ozone Client Key Validator" line="25">
<kw name="Freon OCKV" library="freon">
<arg>prefix=ockg${PREFIX}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockv ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 13:37:00.647" level="INFO">Running command 'ozone freon ockv  -t 1 -n1 -p ockgpre  2&gt;&amp;1'.</msg>
<msg timestamp="20230913 13:37:08.590" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 13:37:08.590" level="INFO">${output} = 2023-09-13 13:37:03,100 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-13 13:37:03,392 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230913 13:37:00.644" endtime="20230913 13:37:08.590"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 13:37:08.591" level="INFO">2023-09-13 13:37:03,100 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-13 13:37:03,392 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-09-13 13:37:03,393 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-09-13 13:37:03,532 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ockgpre and number-of-tests 1
2023-09-13 13:37:03,655 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-13 13:37:04,670 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-13 13:37:05,671 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-13 13:37:05,880 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2023-09-13 13:37:06,671 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-13 13:37:07,672 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2023-09-13 13:37:08,223 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-validate, count=1, min=74.694884, max=74.694884, mean=74.694884, stddev=0.0, median=74.694884, p75=74.694884, p95=74.694884, p98=74.694884, p99=74.694884, p999=74.694884, mean_rate=0.9597898665243845, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-09-13 13:37:08,224 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 5
2023-09-13 13:37:08,224 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-09-13 13:37:08,224 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20230913 13:37:08.590" endtime="20230913 13:37:08.591"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 13:37:08.592" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 13:37:08.591" endtime="20230913 13:37:08.592"/>
</kw>
<status status="PASS" starttime="20230913 13:37:00.643" endtime="20230913 13:37:08.592"/>
</kw>
<msg timestamp="20230913 13:37:08.592" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 13:37:00.643" endtime="20230913 13:37:08.592"/>
</kw>
<msg timestamp="20230913 13:37:08.593" level="INFO">${result} = 2023-09-13 13:37:03,100 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-13 13:37:03,392 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230913 13:37:00.642" endtime="20230913 13:37:08.593"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230913 13:37:08.593" endtime="20230913 13:37:08.593"/>
</kw>
<status status="PASS" starttime="20230913 13:37:00.640" endtime="20230913 13:37:08.594"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230913 13:37:00.635" endtime="20230913 13:37:08.594"/>
</test>
<doc>Test freon data validation commands</doc>
<status status="PASS" starttime="20230913 13:37:00.549" endtime="20230913 13:37:08.596"/>
</suite>
<suite id="s1-s7" name="Validate-Chunk" source="/opt/hadoop/smoketest/freon/validate-chunk.robot">
<test id="s1-s7-t1" name="DN Chunk Validator" line="25">
<kw name="Freon DCV" library="freon">
<arg>prefix=dcg${PREFIX}</arg>
<arg>n=100</arg>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20230913 13:37:11.773" endtime="20230913 13:37:11.773"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon dcv -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 13:37:11.778" level="INFO">Running command 'ozone freon dcv -t 1 -n100 -p dcgpre  2&gt;&amp;1'.</msg>
<msg timestamp="20230913 13:37:18.997" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 13:37:18.997" level="INFO">${output} = 2023-09-13 13:37:14,173 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-13 13:37:14,350 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230913 13:37:11.775" endtime="20230913 13:37:18.997"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 13:37:18.998" level="INFO">2023-09-13 13:37:14,173 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-13 13:37:14,350 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-09-13 13:37:14,353 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-09-13 13:37:14,503 [main] INFO freon.BaseFreonGenerator: Executing test with prefix dcgpre and number-of-tests 100
2023-09-13 13:37:14,575 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2023-09-13 13:37:15,280 [main] INFO freon.DatanodeChunkValidator: Using pipeline PipelineID=f8c8e8ae-52b4-4f99-ae10-dfce1971d892
2023-09-13 13:37:15,580 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2023-09-13 13:37:16,005 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2023-09-13 13:37:16,432 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2023-09-13 13:37:16,580 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2023-09-13 13:37:17,580 [Thread-3] INFO freon.ProgressBar: Progress: 36.00 % (36 out of 100)
2023-09-13 13:37:18,581 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (100 out of 100)
2023-09-13 13:37:18,639 [shutdown-hook-0] INFO metrics: type=TIMER, name=chunk-validate, count=100, min=3.167633, max=56.016381, mean=6.792349523150478, stddev=5.818759964689675, median=5.378656, p75=7.67738, p95=14.308249, p98=17.929086, p99=18.073688, p999=56.016381, mean_rate=76.64881296597085, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-09-13 13:37:18,640 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 4
2023-09-13 13:37:18,640 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-09-13 13:37:18,640 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 100</msg>
<status status="PASS" starttime="20230913 13:37:18.997" endtime="20230913 13:37:18.998"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 13:37:18.999" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 13:37:18.999" endtime="20230913 13:37:19.000"/>
</kw>
<status status="PASS" starttime="20230913 13:37:11.774" endtime="20230913 13:37:19.000"/>
</kw>
<msg timestamp="20230913 13:37:19.000" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 13:37:11.774" endtime="20230913 13:37:19.000"/>
</kw>
<msg timestamp="20230913 13:37:19.000" level="INFO">${result} = 2023-09-13 13:37:14,173 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-13 13:37:14,350 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230913 13:37:11.774" endtime="20230913 13:37:19.000"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230913 13:37:19.001" endtime="20230913 13:37:19.001"/>
</kw>
<status status="PASS" starttime="20230913 13:37:11.771" endtime="20230913 13:37:19.001"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230913 13:37:11.771" endtime="20230913 13:37:19.001"/>
</test>
<doc>Test freon chunk validation commands</doc>
<status status="PASS" starttime="20230913 13:37:11.717" endtime="20230913 13:37:19.003"/>
</suite>
<suite id="s1-s8" name="Generate" source="/opt/hadoop/smoketest/freon/generate.robot">
<test id="s1-s8-t1" name="Ozone Client Key Generator" line="25">
<kw name="Freon OCKG" library="freon">
<arg>prefix=ockg${PREFIX}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 13:37:22.196" level="INFO">Running command 'ozone freon ockg  -t 1 -n1 -p ockgpost  2&gt;&amp;1'.</msg>
<msg timestamp="20230913 13:37:29.431" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 13:37:29.431" level="INFO">${output} = 2023-09-13 13:37:24,632 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-13 13:37:24,767 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230913 13:37:22.193" endtime="20230913 13:37:29.431"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 13:37:29.433" level="INFO">2023-09-13 13:37:24,632 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-13 13:37:24,767 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-09-13 13:37:24,767 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-09-13 13:37:24,868 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ockgpost and number-of-tests 1
2023-09-13 13:37:24,936 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-13 13:37:25,940 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-13 13:37:26,940 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-13 13:37:27,256 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2023-09-13 13:37:27,649 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2023-09-13 13:37:27,941 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-13 13:37:28,944 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2023-09-13 13:37:29,078 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=1, min=2734.749629, max=2734.749629, mean=2734.749629, stddev=0.0, median=2734.749629, p75=2734.749629, p95=2734.749629, p98=2734.749629, p99=2734.749629, p999=2734.749629, mean_rate=0.3278054788468244, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-09-13 13:37:29,079 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 4
2023-09-13 13:37:29,079 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-09-13 13:37:29,079 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20230913 13:37:29.432" endtime="20230913 13:37:29.433"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 13:37:29.433" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 13:37:29.433" endtime="20230913 13:37:29.434"/>
</kw>
<status status="PASS" starttime="20230913 13:37:22.193" endtime="20230913 13:37:29.434"/>
</kw>
<msg timestamp="20230913 13:37:29.434" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 13:37:22.192" endtime="20230913 13:37:29.434"/>
</kw>
<msg timestamp="20230913 13:37:29.434" level="INFO">${result} = 2023-09-13 13:37:24,632 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-13 13:37:24,767 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230913 13:37:22.192" endtime="20230913 13:37:29.434"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230913 13:37:29.435" endtime="20230913 13:37:29.435"/>
</kw>
<status status="PASS" starttime="20230913 13:37:22.190" endtime="20230913 13:37:29.435"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230913 13:37:22.189" endtime="20230913 13:37:29.436"/>
</test>
<test id="s1-s8-t2" name="OM Key Generator" line="28">
<kw name="Freon OMKG" library="freon">
<arg>prefix=omkg${PREFIX}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon omkg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 13:37:29.443" level="INFO">Running command 'ozone freon omkg  -t 1 -n1 -p omkgpost  2&gt;&amp;1'.</msg>
<msg timestamp="20230913 13:37:34.229" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 13:37:34.229" level="INFO">${output} = 2023-09-13 13:37:31,713 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-13 13:37:31,891 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230913 13:37:29.440" endtime="20230913 13:37:34.229"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 13:37:34.230" level="INFO">2023-09-13 13:37:31,713 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-13 13:37:31,891 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-09-13 13:37:31,891 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-09-13 13:37:32,009 [main] INFO freon.BaseFreonGenerator: Executing test with prefix omkgpost and number-of-tests 1
2023-09-13 13:37:32,080 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-13 13:37:33,085 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-13 13:37:34,086 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2023-09-13 13:37:34,185 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=1, min=118.185641, max=118.185641, mean=118.185641, stddev=0.0, median=118.185641, p75=118.185641, p95=118.185641, p98=118.185641, p99=118.185641, p999=118.185641, mean_rate=0.9632565731990398, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-09-13 13:37:34,189 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2023-09-13 13:37:34,189 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-09-13 13:37:34,189 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20230913 13:37:34.229" endtime="20230913 13:37:34.230"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 13:37:34.231" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 13:37:34.230" endtime="20230913 13:37:34.231"/>
</kw>
<status status="PASS" starttime="20230913 13:37:29.440" endtime="20230913 13:37:34.231"/>
</kw>
<msg timestamp="20230913 13:37:34.231" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 13:37:29.439" endtime="20230913 13:37:34.232"/>
</kw>
<msg timestamp="20230913 13:37:34.232" level="INFO">${result} = 2023-09-13 13:37:31,713 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-13 13:37:31,891 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230913 13:37:29.439" endtime="20230913 13:37:34.232"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230913 13:37:34.232" endtime="20230913 13:37:34.232"/>
</kw>
<status status="PASS" starttime="20230913 13:37:29.437" endtime="20230913 13:37:34.233"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230913 13:37:29.436" endtime="20230913 13:37:34.233"/>
</test>
<test id="s1-s8-t3" name="OM Bucket Generator" line="31">
<kw name="Freon OMBG" library="freon">
<arg>prefix=ombg${PREFIX}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ombg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 13:37:34.241" level="INFO">Running command 'ozone freon ombg  -t 1 -n1 -p ombgpost  2&gt;&amp;1'.</msg>
<msg timestamp="20230913 13:37:39.351" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 13:37:39.351" level="INFO">${output} = 2023-09-13 13:37:36,811 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-13 13:37:37,057 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230913 13:37:34.237" endtime="20230913 13:37:39.351"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 13:37:39.353" level="INFO">2023-09-13 13:37:36,811 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-13 13:37:37,057 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-09-13 13:37:37,057 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-09-13 13:37:37,177 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ombgpost and number-of-tests 1
2023-09-13 13:37:37,247 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-13 13:37:38,249 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-13 13:37:39,250 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2023-09-13 13:37:39,303 [shutdown-hook-0] INFO metrics: type=TIMER, name=bucket-create, count=1, min=24.928461, max=24.928461, mean=24.928461, stddev=0.0, median=24.928461, p75=24.928461, p95=24.928461, p98=24.928461, p99=24.928461, p999=24.928461, mean_rate=0.979770964780998, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-09-13 13:37:39,304 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2023-09-13 13:37:39,304 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-09-13 13:37:39,304 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20230913 13:37:39.352" endtime="20230913 13:37:39.353"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 13:37:39.354" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 13:37:39.353" endtime="20230913 13:37:39.354"/>
</kw>
<status status="PASS" starttime="20230913 13:37:34.237" endtime="20230913 13:37:39.354"/>
</kw>
<msg timestamp="20230913 13:37:39.354" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 13:37:34.236" endtime="20230913 13:37:39.354"/>
</kw>
<msg timestamp="20230913 13:37:39.355" level="INFO">${result} = 2023-09-13 13:37:36,811 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-13 13:37:37,057 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230913 13:37:34.236" endtime="20230913 13:37:39.355"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230913 13:37:39.355" endtime="20230913 13:37:39.355"/>
</kw>
<status status="PASS" starttime="20230913 13:37:34.234" endtime="20230913 13:37:39.355"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230913 13:37:34.233" endtime="20230913 13:37:39.356"/>
</test>
<doc>Test freon data generation commands</doc>
<status status="PASS" starttime="20230913 13:37:22.132" endtime="20230913 13:37:39.358"/>
</suite>
<suite id="s1-s9" name="Validate" source="/opt/hadoop/smoketest/freon/validate.robot">
<test id="s1-s9-t1" name="Ozone Client Key Validator" line="25">
<kw name="Freon OCKV" library="freon">
<arg>prefix=ockg${PREFIX}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockv ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 13:37:42.494" level="INFO">Running command 'ozone freon ockv  -t 1 -n1 -p ockgpost  2&gt;&amp;1'.</msg>
<msg timestamp="20230913 13:37:49.513" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 13:37:49.513" level="INFO">${output} = 2023-09-13 13:37:44,756 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-13 13:37:44,948 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230913 13:37:42.491" endtime="20230913 13:37:49.513"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 13:37:49.514" level="INFO">2023-09-13 13:37:44,756 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-13 13:37:44,948 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-09-13 13:37:44,952 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-09-13 13:37:45,044 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ockgpost and number-of-tests 1
2023-09-13 13:37:45,099 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-13 13:37:46,102 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-13 13:37:46,697 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2023-09-13 13:37:47,102 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-13 13:37:48,104 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-13 13:37:49,104 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2023-09-13 13:37:49,140 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-validate, count=1, min=72.877771, max=72.877771, mean=72.877771, stddev=0.0, median=72.877771, p75=72.877771, p95=72.877771, p98=72.877771, p99=72.877771, p999=72.877771, mean_rate=0.9474102337567061, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-09-13 13:37:49,141 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 4
2023-09-13 13:37:49,141 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-09-13 13:37:49,141 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20230913 13:37:49.513" endtime="20230913 13:37:49.514"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 13:37:49.515" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 13:37:49.514" endtime="20230913 13:37:49.515"/>
</kw>
<status status="PASS" starttime="20230913 13:37:42.491" endtime="20230913 13:37:49.515"/>
</kw>
<msg timestamp="20230913 13:37:49.515" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 13:37:42.491" endtime="20230913 13:37:49.516"/>
</kw>
<msg timestamp="20230913 13:37:49.516" level="INFO">${result} = 2023-09-13 13:37:44,756 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-13 13:37:44,948 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230913 13:37:42.490" endtime="20230913 13:37:49.516"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230913 13:37:49.516" endtime="20230913 13:37:49.516"/>
</kw>
<status status="PASS" starttime="20230913 13:37:42.488" endtime="20230913 13:37:49.517"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230913 13:37:42.487" endtime="20230913 13:37:49.517"/>
</test>
<doc>Test freon data validation commands</doc>
<status status="PASS" starttime="20230913 13:37:42.434" endtime="20230913 13:37:49.519"/>
</suite>
<suite id="s1-s10" name="Generate-Chunk" source="/opt/hadoop/smoketest/freon/generate-chunk.robot">
<test id="s1-s10-t1" name="DN Chunk Generator" line="25">
<kw name="Freon DCG" library="freon">
<arg>prefix=dcg${PREFIX}</arg>
<arg>n=100</arg>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20230913 13:37:52.778" endtime="20230913 13:37:52.778"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon dcg -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 13:37:52.783" level="INFO">Running command 'ozone freon dcg -t 1 -n100 -p dcgpost  2&gt;&amp;1'.</msg>
<msg timestamp="20230913 13:38:02.758" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 13:38:02.759" level="INFO">${output} = 2023-09-13 13:37:55,180 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-13 13:37:55,439 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230913 13:37:52.780" endtime="20230913 13:38:02.759"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 13:38:02.760" level="INFO">2023-09-13 13:37:55,180 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-13 13:37:55,439 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-09-13 13:37:55,439 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-09-13 13:37:56,275 [main] INFO freon.BaseFreonGenerator: Executing test with prefix dcgpost and number-of-tests 100
2023-09-13 13:37:56,354 [Thread-4] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2023-09-13 13:37:57,038 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2023-09-13 13:37:57,359 [Thread-4] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2023-09-13 13:37:57,410 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2023-09-13 13:37:58,360 [Thread-4] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2023-09-13 13:37:59,361 [Thread-4] INFO freon.ProgressBar: Progress: 26.00 % (26 out of 100)
2023-09-13 13:38:00,361 [Thread-4] INFO freon.ProgressBar: Progress: 59.00 % (59 out of 100)
2023-09-13 13:38:01,362 [Thread-4] INFO freon.ProgressBar: Progress: 95.00 % (95 out of 100)
2023-09-13 13:38:02,362 [Thread-4] INFO freon.ProgressBar: Progress: 100.00 % (100 out of 100)
2023-09-13 13:38:02,408 [shutdown-hook-0] INFO metrics: type=TIMER, name=chunk-write, count=100, min=13.585343, max=1155.885811, mean=40.8267515517455, stddev=111.08813406734046, median=28.486099, p75=32.821744, p95=48.339508, p98=61.569047, p99=74.778684, p999=1155.885811, mean_rate=19.429820915721443, m1=20.0, m5=20.0, m15=20.0, rate_unit=events/second, duration_unit=milliseconds
2023-09-13 13:38:02,410 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 6
2023-09-13 13:38:02,410 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-09-13 13:38:02,410 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 100</msg>
<status status="PASS" starttime="20230913 13:38:02.759" endtime="20230913 13:38:02.760"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 13:38:02.761" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 13:38:02.760" endtime="20230913 13:38:02.761"/>
</kw>
<status status="PASS" starttime="20230913 13:37:52.780" endtime="20230913 13:38:02.761"/>
</kw>
<msg timestamp="20230913 13:38:02.761" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 13:37:52.779" endtime="20230913 13:38:02.761"/>
</kw>
<msg timestamp="20230913 13:38:02.761" level="INFO">${result} = 2023-09-13 13:37:55,180 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-13 13:37:55,439 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230913 13:37:52.779" endtime="20230913 13:38:02.762"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230913 13:38:02.762" endtime="20230913 13:38:02.762"/>
</kw>
<status status="PASS" starttime="20230913 13:37:52.776" endtime="20230913 13:38:02.762"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230913 13:37:52.775" endtime="20230913 13:38:02.762"/>
</test>
<doc>Test freon chunk generation commands</doc>
<status status="PASS" starttime="20230913 13:37:52.713" endtime="20230913 13:38:02.764"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="109299"/>
</suite>
<statistics>
<total>
<stat pass="14" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="14" fail="0" skip="0" id="s1" name="restart">restart</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1" name="Generate">restart.Generate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2" name="Validate-Chunk">restart.Validate-Chunk</stat>
<stat pass="1" fail="0" skip="0" id="s1-s3" name="Validate">restart.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s4" name="Generate-Chunk">restart.Generate-Chunk</stat>
<stat pass="1" fail="0" skip="0" id="s1-s5" name="Validate-Chunk">restart.Validate-Chunk</stat>
<stat pass="1" fail="0" skip="0" id="s1-s6" name="Validate">restart.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s7" name="Validate-Chunk">restart.Validate-Chunk</stat>
<stat pass="3" fail="0" skip="0" id="s1-s8" name="Generate">restart.Generate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s9" name="Validate">restart.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s10" name="Generate-Chunk">restart.Generate-Chunk</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
