<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 6.1.1 (Python 3.8.10 on linux)" generated="20230913 13:14:39.580" rpa="false" schemaversion="4">
<suite id="s1" name="ozone-om-prepare">
<suite id="s1-s1" name="Om-Prepare" source="/opt/hadoop/smoketest/omha/om-prepare.robot">
<kw name="Create Specific OM data for prepare" type="SETUP">
<kw name="Freon OCKG" library="freon">
<arg>prefix=om-prepare</arg>
<arg>n=100</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 13:07:56.952" level="INFO">Running command 'ozone freon ockg --om-service-id=omservice -t 1 -n100 -p om-prepare  2&gt;&amp;1'.</msg>
<msg timestamp="20230913 13:08:16.640" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 13:08:16.641" level="INFO">${output} = 2023-09-13 13:07:59,758 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-13 13:08:00,004 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230913 13:07:56.949" endtime="20230913 13:08:16.641"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 13:08:16.642" level="INFO">2023-09-13 13:07:59,758 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-13 13:08:00,004 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-09-13 13:08:00,004 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-09-13 13:08:00,121 [main] INFO freon.BaseFreonGenerator: Executing test with prefix om-prepare and number-of-tests 100
2023-09-13 13:08:00,191 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2023-09-13 13:08:01,175 [main] INFO rpc.RpcClient: Creating Volume: vol1, with hadoop as owner and space quota set to -1 bytes, counts quota set to -1
2023-09-13 13:08:01,196 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2023-09-13 13:08:01,478 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Encryption set to false, Replication Type set to server-side default replication type, Namespace Quota set to -1, Space Quota set to -1 
2023-09-13 13:08:02,199 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2023-09-13 13:08:02,919 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2023-09-13 13:08:03,203 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2023-09-13 13:08:03,262 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2023-09-13 13:08:04,204 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2023-09-13 13:08:05,204 [Thread-3] INFO freon.ProgressBar: Progress: 1.00 % (1 out of 100)
2023-09-13 13:08:06,209 [Thread-3] INFO freon.ProgressBar: Progress: 5.00 % (5 out of 100)
2023-09-13 13:08:07,210 [Thread-3] INFO freon.ProgressBar: Progress: 9.00 % (9 out of 100)
2023-09-13 13:08:08,222 [Thread-3] INFO freon.ProgressBar: Progress: 17.00 % (17 out of 100)
2023-09-13 13:08:09,222 [Thread-3] INFO freon.ProgressBar: Progress: 26.00 % (26 out of 100)
2023-09-13 13:08:10,223 [Thread-3] INFO freon.ProgressBar: Progress: 34.00 % (34 out of 100)
2023-09-13 13:08:11,223 [Thread-3] INFO freon.ProgressBar: Progress: 46.00 % (46 out of 100)
2023-09-13 13:08:12,224 [Thread-3] INFO freon.ProgressBar: Progress: 58.00 % (58 out of 100)
2023-09-13 13:08:13,225 [Thread-3] INFO freon.ProgressBar: Progress: 70.00 % (70 out of 100)
2023-09-13 13:08:14,226 [Thread-3] INFO freon.ProgressBar: Progress: 83.00 % (83 out of 100)
2023-09-13 13:08:15,227 [Thread-3] INFO freon.ProgressBar: Progress: 96.00 % (96 out of 100)
2023-09-13 13:08:16,227 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (100 out of 100)
2023-09-13 13:08:16,278 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=100, min=57.194001, max=3452.264816, mean=133.90554008059985, stddev=327.2948392592722, median=85.704103, p75=112.881287, p95=162.335211, p98=548.668083, p99=635.971402, p999=3452.264816, mean_rate=6.815003157594051, m1=1.8236535658912785, m5=1.3289226601913835, m15=1.2432131855618054, rate_unit=events/second, duration_unit=milliseconds
2023-09-13 13:08:16,279 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 16
2023-09-13 13:08:16,279 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-09-13 13:08:16,279 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 100</msg>
<status status="PASS" starttime="20230913 13:08:16.641" endtime="20230913 13:08:16.642"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 13:08:16.642" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 13:08:16.642" endtime="20230913 13:08:16.643"/>
</kw>
<status status="PASS" starttime="20230913 13:07:56.949" endtime="20230913 13:08:16.643"/>
</kw>
<msg timestamp="20230913 13:08:16.643" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 13:07:56.948" endtime="20230913 13:08:16.643"/>
</kw>
<msg timestamp="20230913 13:08:16.643" level="INFO">${result} = 2023-09-13 13:07:59,758 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-13 13:08:00,004 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230913 13:07:56.947" endtime="20230913 13:08:16.643"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230913 13:08:16.644" endtime="20230913 13:08:16.644"/>
</kw>
<status status="PASS" starttime="20230913 13:07:56.946" endtime="20230913 13:08:16.644"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230913 13:08:16.645" level="INFO">${random} = 44513</msg>
<status status="PASS" starttime="20230913 13:08:16.644" endtime="20230913 13:08:16.645"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${volume_name}</arg>
<arg>${random}-volume-for-prepare</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230913 13:08:16.646" level="INFO">${volume_name} = 44513-volume-for-prepare</msg>
<status status="PASS" starttime="20230913 13:08:16.645" endtime="20230913 13:08:16.647"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${bucket_name}</arg>
<arg>${random}-bucket-for-prepare</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230913 13:08:16.648" level="INFO">${bucket_name} = 44513-bucket-for-prepare</msg>
<status status="PASS" starttime="20230913 13:08:16.647" endtime="20230913 13:08:16.648"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create /${volume_name}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 13:08:16.652" level="INFO">Running command 'ozone sh volume create /44513-volume-for-prepare 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 13:08:20.121" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 13:08:20.121" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230913 13:08:16.650" endtime="20230913 13:08:20.121"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 13:08:20.122" level="INFO"/>
<status status="PASS" starttime="20230913 13:08:20.122" endtime="20230913 13:08:20.122"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 13:08:20.123" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 13:08:20.123" endtime="20230913 13:08:20.123"/>
</kw>
<status status="PASS" starttime="20230913 13:08:16.649" endtime="20230913 13:08:20.123"/>
</kw>
<msg timestamp="20230913 13:08:20.123" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 13:08:16.649" endtime="20230913 13:08:20.124"/>
</kw>
<status status="PASS" starttime="20230913 13:08:16.648" endtime="20230913 13:08:20.124"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create /${volume_name}/${bucket_name}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 13:08:20.128" level="INFO">Running command 'ozone sh bucket create /44513-volume-for-prepare/44513-bucket-for-prepare 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 13:08:23.785" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 13:08:23.785" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230913 13:08:20.125" endtime="20230913 13:08:23.785"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 13:08:23.787" level="INFO"/>
<status status="PASS" starttime="20230913 13:08:23.786" endtime="20230913 13:08:23.787"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 13:08:23.787" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 13:08:23.787" endtime="20230913 13:08:23.787"/>
</kw>
<status status="PASS" starttime="20230913 13:08:20.125" endtime="20230913 13:08:23.788"/>
</kw>
<msg timestamp="20230913 13:08:23.788" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 13:08:20.124" endtime="20230913 13:08:23.788"/>
</kw>
<status status="PASS" starttime="20230913 13:08:20.124" endtime="20230913 13:08:23.788"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put /${volume_name}/${bucket_name}/prepare-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 13:08:23.792" level="INFO">Running command 'ozone sh key put /44513-volume-for-prepare/44513-bucket-for-prepare/prepare-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 13:08:29.958" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 13:08:29.958" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230913 13:08:23.790" endtime="20230913 13:08:29.958"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 13:08:29.959" level="INFO"/>
<status status="PASS" starttime="20230913 13:08:29.959" endtime="20230913 13:08:29.960"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 13:08:29.960" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 13:08:29.960" endtime="20230913 13:08:29.960"/>
</kw>
<status status="PASS" starttime="20230913 13:08:23.789" endtime="20230913 13:08:29.960"/>
</kw>
<msg timestamp="20230913 13:08:29.961" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 13:08:23.789" endtime="20230913 13:08:29.961"/>
</kw>
<status status="PASS" starttime="20230913 13:08:23.788" endtime="20230913 13:08:29.961"/>
</kw>
<status status="PASS" starttime="20230913 13:07:56.945" endtime="20230913 13:08:29.961"/>
</kw>
<test id="s1-s1-t1" name="Prepare Ozone Manager" line="39">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230913 13:08:29.962" endtime="20230913 13:08:29.963"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om prepare -id=omservice</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 13:08:29.967" level="INFO">Running command 'ozone admin om prepare -id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 13:08:38.811" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 13:08:38.811" level="INFO">${output} = Ozone Manager Prepare Request successfully returned with Transaction Id : [413].

Checking individual OM instances for prepare request completion...
OM : [om1], Prepare Status : [PREPARE_COMPLETED], C...</msg>
<status status="PASS" starttime="20230913 13:08:29.964" endtime="20230913 13:08:38.811"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 13:08:38.813" level="INFO">Ozone Manager Prepare Request successfully returned with Transaction Id : [413].

Checking individual OM instances for prepare request completion...
OM : [om1], Prepare Status : [PREPARE_COMPLETED], Current Transaction Id : [413]
OM : [om3], Prepare Status : [PREPARE_COMPLETED], Current Transaction Id : [413]
OM : [om2], Prepare Status : [PREPARE_COMPLETED], Current Transaction Id : [413]

OM Preparation successful! 
All OMs are prepared
No new write requests will be allowed until preparation is cancelled or upgrade/downgrade is done.</msg>
<status status="PASS" starttime="20230913 13:08:38.812" endtime="20230913 13:08:38.813"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 13:08:38.814" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 13:08:38.813" endtime="20230913 13:08:38.814"/>
</kw>
<status status="PASS" starttime="20230913 13:08:29.964" endtime="20230913 13:08:38.814"/>
</kw>
<msg timestamp="20230913 13:08:38.814" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 13:08:29.963" endtime="20230913 13:08:38.814"/>
</kw>
<msg timestamp="20230913 13:08:38.814" level="INFO">${result} = Ozone Manager Prepare Request successfully returned with Transaction Id : [413].

Checking individual OM instances for prepare request completion...
OM : [om1], Prepare Status : [PREPARE_COMPLETED], C...</msg>
<status status="PASS" starttime="20230913 13:08:29.963" endtime="20230913 13:08:38.814"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>OM Preparation successful!</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>OM Preparation successful!</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230913 13:08:38.815" endtime="20230913 13:08:38.816"/>
</kw>
<status status="PASS" starttime="20230913 13:08:38.815" endtime="20230913 13:08:38.816"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230913 13:08:29.961" endtime="20230913 13:08:38.816"/>
</test>
<test id="s1-s1-t2" name="Checks if the expected data is present in OM" line="43">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230913 13:08:38.818" endtime="20230913 13:08:38.818"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info /${volume_name}/${bucket_name}/prepare-key</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 13:08:38.822" level="INFO">Running command 'ozone sh key info /44513-volume-for-prepare/44513-bucket-for-prepare/prepare-key 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 13:08:42.676" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 13:08:42.676" level="INFO">${output} = {
  "volumeName" : "44513-volume-for-prepare",
  "bucketName" : "44513-bucket-for-prepare",
  "name" : "prepare-key",
  "dataSize" : 17289,
  "creationTime" : "2023-09-13T13:08:27.251Z",
  "modificati...</msg>
<status status="PASS" starttime="20230913 13:08:38.820" endtime="20230913 13:08:42.676"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 13:08:42.677" level="INFO">{
  "volumeName" : "44513-volume-for-prepare",
  "bucketName" : "44513-bucket-for-prepare",
  "name" : "prepare-key",
  "dataSize" : 17289,
  "creationTime" : "2023-09-13T13:08:27.251Z",
  "modificationTime" : "2023-09-13T13:08:29.547Z",
  "replicationConfig" : {
    "replicationFactor" : "ONE",
    "requiredNodes" : 1,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "ozoneKeyLocations" : [ {
    "containerID" : 2,
    "localID" : 111677748019200101,
    "length" : 17289,
    "offset" : 0,
    "keyOffset" : 0
  } ],
  "file" : true
}</msg>
<status status="PASS" starttime="20230913 13:08:42.676" endtime="20230913 13:08:42.677"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 13:08:42.678" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 13:08:42.678" endtime="20230913 13:08:42.678"/>
</kw>
<status status="PASS" starttime="20230913 13:08:38.819" endtime="20230913 13:08:42.678"/>
</kw>
<msg timestamp="20230913 13:08:42.678" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 13:08:38.819" endtime="20230913 13:08:42.679"/>
</kw>
<msg timestamp="20230913 13:08:42.679" level="INFO">${result} = {
  "volumeName" : "44513-volume-for-prepare",
  "bucketName" : "44513-bucket-for-prepare",
  "name" : "prepare-key",
  "dataSize" : 17289,
  "creationTime" : "2023-09-13T13:08:27.251Z",
  "modificati...</msg>
<status status="PASS" starttime="20230913 13:08:38.818" endtime="20230913 13:08:42.679"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"name\" : \"prepare-key\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230913 13:08:42.679" endtime="20230913 13:08:42.679"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230913 13:08:38.817" endtime="20230913 13:08:42.680"/>
</test>
<test id="s1-s1-t3" name="Test write operation fails" line="47">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230913 13:08:42.681" endtime="20230913 13:08:42.682"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh key put /${volume_name}/${bucket_name}/prepare-key2 /opt/hadoop/NOTICE.txt</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 13:08:42.685" level="INFO">Running command 'ozone sh key put /44513-volume-for-prepare/44513-bucket-for-prepare/prepare-key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 13:08:45.827" level="INFO">${rc} = 255</msg>
<msg timestamp="20230913 13:08:45.827" level="INFO">${output} = NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateKey when OM is in prepare mode.</msg>
<status status="PASS" starttime="20230913 13:08:42.683" endtime="20230913 13:08:45.827"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 13:08:45.828" level="INFO">NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateKey when OM is in prepare mode.</msg>
<status status="PASS" starttime="20230913 13:08:45.828" endtime="20230913 13:08:45.829"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 13:08:45.829" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 13:08:45.829" endtime="20230913 13:08:45.829"/>
</kw>
<msg timestamp="20230913 13:08:45.830" level="INFO">${result} = NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateKey when OM is in prepare mode.</msg>
<status status="PASS" starttime="20230913 13:08:42.682" endtime="20230913 13:08:45.830"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>OM is in prepare mode</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230913 13:08:45.830" endtime="20230913 13:08:45.830"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>ozone sh key info /${volume_name}/${bucket_name}/prepare-key2</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 13:08:45.837" level="INFO">Running command 'ozone sh key info /44513-volume-for-prepare/44513-bucket-for-prepare/prepare-key2 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 13:08:49.662" level="INFO">${rc} = 255</msg>
<msg timestamp="20230913 13:08:49.662" level="INFO">${output} = KEY_NOT_FOUND Key:prepare-key2 not found</msg>
<status status="PASS" starttime="20230913 13:08:45.831" endtime="20230913 13:08:49.662"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 13:08:49.664" level="INFO">KEY_NOT_FOUND Key:prepare-key2 not found</msg>
<status status="PASS" starttime="20230913 13:08:49.663" endtime="20230913 13:08:49.664"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 13:08:49.665" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 13:08:49.664" endtime="20230913 13:08:49.665"/>
</kw>
<status status="PASS" starttime="20230913 13:08:45.831" endtime="20230913 13:08:49.665"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230913 13:08:42.681" endtime="20230913 13:08:49.665"/>
</test>
<doc>Smoke test to test preparing OMs in an OM HA cluster.</doc>
<status status="PASS" starttime="20230913 13:07:56.876" endtime="20230913 13:08:49.667"/>
</suite>
<suite id="s1-s2" name="Om-Cancel-Prepare" source="/opt/hadoop/smoketest/omha/om-cancel-prepare.robot">
<kw name="Generate volume and bucket names" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230913 13:08:52.654" level="INFO">${random} = 20155</msg>
<status status="PASS" starttime="20230913 13:08:52.654" endtime="20230913 13:08:52.655"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${volume_name}</arg>
<arg>${random}-volume-for-cancel</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230913 13:08:52.656" level="INFO">${volume_name} = 20155-volume-for-cancel</msg>
<status status="PASS" starttime="20230913 13:08:52.655" endtime="20230913 13:08:52.657"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${bucket_name}</arg>
<arg>${random}-bucket-for-cancel</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230913 13:08:52.658" level="INFO">${bucket_name} = 20155-bucket-for-cancel</msg>
<status status="PASS" starttime="20230913 13:08:52.657" endtime="20230913 13:08:52.658"/>
</kw>
<status status="PASS" starttime="20230913 13:08:52.654" endtime="20230913 13:08:52.658"/>
</kw>
<test id="s1-s2-t1" name="Cancel Ozone Manager Prepare" line="33">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230913 13:08:52.659" endtime="20230913 13:08:52.659"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om cancelprepare -id=omservice</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 13:08:52.664" level="INFO">Running command 'ozone admin om cancelprepare -id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 13:08:56.473" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 13:08:56.473" level="INFO">${output} = Cancel prepare succeeded, cluster can now accept write requests.</msg>
<status status="PASS" starttime="20230913 13:08:52.661" endtime="20230913 13:08:56.473"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 13:08:56.474" level="INFO">Cancel prepare succeeded, cluster can now accept write requests.</msg>
<status status="PASS" starttime="20230913 13:08:56.473" endtime="20230913 13:08:56.474"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 13:08:56.475" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 13:08:56.474" endtime="20230913 13:08:56.475"/>
</kw>
<status status="PASS" starttime="20230913 13:08:52.660" endtime="20230913 13:08:56.475"/>
</kw>
<msg timestamp="20230913 13:08:56.475" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 13:08:52.660" endtime="20230913 13:08:56.475"/>
</kw>
<msg timestamp="20230913 13:08:56.476" level="INFO">${result} = Cancel prepare succeeded, cluster can now accept write requests.</msg>
<status status="PASS" starttime="20230913 13:08:52.660" endtime="20230913 13:08:56.476"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>5sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Cancel prepare succeeded</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Cancel prepare succeeded</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230913 13:08:56.477" endtime="20230913 13:08:56.477"/>
</kw>
<status status="PASS" starttime="20230913 13:08:56.476" endtime="20230913 13:08:56.477"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230913 13:08:52.658" endtime="20230913 13:08:56.477"/>
</test>
<test id="s1-s2-t2" name="Test write operations" line="37">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230913 13:08:56.479" endtime="20230913 13:08:56.479"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create /${volume_name}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 13:08:56.484" level="INFO">Running command 'ozone sh volume create /20155-volume-for-cancel 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 13:09:00.241" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 13:09:00.242" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230913 13:08:56.481" endtime="20230913 13:09:00.242"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 13:09:00.243" level="INFO"/>
<status status="PASS" starttime="20230913 13:09:00.242" endtime="20230913 13:09:00.243"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 13:09:00.244" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 13:09:00.243" endtime="20230913 13:09:00.244"/>
</kw>
<status status="PASS" starttime="20230913 13:08:56.480" endtime="20230913 13:09:00.244"/>
</kw>
<msg timestamp="20230913 13:09:00.244" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 13:08:56.480" endtime="20230913 13:09:00.244"/>
</kw>
<status status="PASS" starttime="20230913 13:08:56.480" endtime="20230913 13:09:00.245"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create /${volume_name}/${bucket_name}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 13:09:00.250" level="INFO">Running command 'ozone sh bucket create /20155-volume-for-cancel/20155-bucket-for-cancel 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 13:09:04.225" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 13:09:04.225" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230913 13:09:00.247" endtime="20230913 13:09:04.225"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 13:09:04.227" level="INFO"/>
<status status="PASS" starttime="20230913 13:09:04.226" endtime="20230913 13:09:04.227"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 13:09:04.227" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 13:09:04.227" endtime="20230913 13:09:04.228"/>
</kw>
<status status="PASS" starttime="20230913 13:09:00.246" endtime="20230913 13:09:04.228"/>
</kw>
<msg timestamp="20230913 13:09:04.228" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 13:09:00.246" endtime="20230913 13:09:04.228"/>
</kw>
<status status="PASS" starttime="20230913 13:09:00.245" endtime="20230913 13:09:04.228"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key put /${volume_name}/${bucket_name}/cancel-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 13:09:04.233" level="INFO">Running command 'ozone sh key put /20155-volume-for-cancel/20155-bucket-for-cancel/cancel-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 13:09:10.169" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 13:09:10.169" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230913 13:09:04.230" endtime="20230913 13:09:10.169"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 13:09:10.171" level="INFO"/>
<status status="PASS" starttime="20230913 13:09:10.170" endtime="20230913 13:09:10.171"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 13:09:10.172" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 13:09:10.171" endtime="20230913 13:09:10.172"/>
</kw>
<status status="PASS" starttime="20230913 13:09:04.229" endtime="20230913 13:09:10.172"/>
</kw>
<msg timestamp="20230913 13:09:10.172" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 13:09:04.229" endtime="20230913 13:09:10.172"/>
</kw>
<msg timestamp="20230913 13:09:10.172" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230913 13:09:04.228" endtime="20230913 13:09:10.172"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info /${volume_name}/${bucket_name}/cancel-key</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 13:09:10.177" level="INFO">Running command 'ozone sh key info /20155-volume-for-cancel/20155-bucket-for-cancel/cancel-key 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 13:09:13.827" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 13:09:13.827" level="INFO">${output} = {
  "volumeName" : "20155-volume-for-cancel",
  "bucketName" : "20155-bucket-for-cancel",
  "name" : "cancel-key",
  "dataSize" : 17289,
  "creationTime" : "2023-09-13T13:09:07.433Z",
  "modificationT...</msg>
<status status="PASS" starttime="20230913 13:09:10.174" endtime="20230913 13:09:13.828"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 13:09:13.829" level="INFO">{
  "volumeName" : "20155-volume-for-cancel",
  "bucketName" : "20155-bucket-for-cancel",
  "name" : "cancel-key",
  "dataSize" : 17289,
  "creationTime" : "2023-09-13T13:09:07.433Z",
  "modificationTime" : "2023-09-13T13:09:09.780Z",
  "replicationConfig" : {
    "replicationFactor" : "ONE",
    "requiredNodes" : 1,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "ozoneKeyLocations" : [ {
    "containerID" : 1,
    "localID" : 111677748019200103,
    "length" : 17289,
    "offset" : 0,
    "keyOffset" : 0
  } ],
  "file" : true
}</msg>
<status status="PASS" starttime="20230913 13:09:13.828" endtime="20230913 13:09:13.829"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 13:09:13.830" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 13:09:13.829" endtime="20230913 13:09:13.830"/>
</kw>
<status status="PASS" starttime="20230913 13:09:10.173" endtime="20230913 13:09:13.830"/>
</kw>
<msg timestamp="20230913 13:09:13.830" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 13:09:10.173" endtime="20230913 13:09:13.830"/>
</kw>
<msg timestamp="20230913 13:09:13.830" level="INFO">${result} = {
  "volumeName" : "20155-volume-for-cancel",
  "bucketName" : "20155-bucket-for-cancel",
  "name" : "cancel-key",
  "dataSize" : 17289,
  "creationTime" : "2023-09-13T13:09:07.433Z",
  "modificationT...</msg>
<status status="PASS" starttime="20230913 13:09:10.173" endtime="20230913 13:09:13.830"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"name\" : \"cancel-key\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230913 13:09:13.830" endtime="20230913 13:09:13.831"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230913 13:08:56.478" endtime="20230913 13:09:13.831"/>
</test>
<doc>Smoke test for ozone manager cancel prepare</doc>
<status status="PASS" starttime="20230913 13:08:52.596" endtime="20230913 13:09:13.833"/>
</suite>
<suite id="s1-s3" name="Om-Prepare" source="/opt/hadoop/smoketest/omha/om-prepare.robot">
<kw name="Create Specific OM data for prepare" type="SETUP">
<kw name="Freon OCKG" library="freon">
<arg>prefix=om-prepare</arg>
<arg>n=100</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 13:09:16.840" level="INFO">Running command 'ozone freon ockg --om-service-id=omservice -t 1 -n100 -p om-prepare  2&gt;&amp;1'.</msg>
<msg timestamp="20230913 13:09:30.747" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 13:09:30.747" level="INFO">${output} = 2023-09-13 13:09:19,007 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-13 13:09:19,129 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230913 13:09:16.837" endtime="20230913 13:09:30.747"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 13:09:30.748" level="INFO">2023-09-13 13:09:19,007 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-13 13:09:19,129 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-09-13 13:09:19,129 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-09-13 13:09:19,228 [main] INFO freon.BaseFreonGenerator: Executing test with prefix om-prepare and number-of-tests 100
2023-09-13 13:09:19,293 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2023-09-13 13:09:20,301 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2023-09-13 13:09:20,820 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2023-09-13 13:09:21,179 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2023-09-13 13:09:21,302 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2023-09-13 13:09:22,307 [Thread-3] INFO freon.ProgressBar: Progress: 3.00 % (3 out of 100)
2023-09-13 13:09:23,319 [Thread-3] INFO freon.ProgressBar: Progress: 16.00 % (16 out of 100)
2023-09-13 13:09:24,332 [Thread-3] INFO freon.ProgressBar: Progress: 28.00 % (28 out of 100)
2023-09-13 13:09:25,334 [Thread-3] INFO freon.ProgressBar: Progress: 42.00 % (42 out of 100)
2023-09-13 13:09:26,337 [Thread-3] INFO freon.ProgressBar: Progress: 55.00 % (55 out of 100)
2023-09-13 13:09:27,338 [Thread-3] INFO freon.ProgressBar: Progress: 70.00 % (70 out of 100)
2023-09-13 13:09:28,339 [Thread-3] INFO freon.ProgressBar: Progress: 80.00 % (80 out of 100)
2023-09-13 13:09:29,343 [Thread-3] INFO freon.ProgressBar: Progress: 93.00 % (93 out of 100)
2023-09-13 13:09:30,343 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (100 out of 100)
2023-09-13 13:09:30,391 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=100, min=50.815632, max=1907.566147, mean=94.53986236305484, stddev=178.84185245465346, median=73.65517, p75=85.10579, p95=113.669188, p98=159.994372, p99=208.610481, p999=1907.566147, mean_rate=9.779398468110802, m1=8.319822341482707, m5=8.06611418471353, m15=8.022160607980414, rate_unit=events/second, duration_unit=milliseconds
2023-09-13 13:09:30,391 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 11
2023-09-13 13:09:30,392 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-09-13 13:09:30,392 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 100</msg>
<status status="PASS" starttime="20230913 13:09:30.748" endtime="20230913 13:09:30.748"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 13:09:30.749" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 13:09:30.749" endtime="20230913 13:09:30.749"/>
</kw>
<status status="PASS" starttime="20230913 13:09:16.837" endtime="20230913 13:09:30.749"/>
</kw>
<msg timestamp="20230913 13:09:30.749" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 13:09:16.837" endtime="20230913 13:09:30.750"/>
</kw>
<msg timestamp="20230913 13:09:30.750" level="INFO">${result} = 2023-09-13 13:09:19,007 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-13 13:09:19,129 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230913 13:09:16.836" endtime="20230913 13:09:30.750"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230913 13:09:30.750" endtime="20230913 13:09:30.751"/>
</kw>
<status status="PASS" starttime="20230913 13:09:16.835" endtime="20230913 13:09:30.751"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230913 13:09:30.751" level="INFO">${random} = 26392</msg>
<status status="PASS" starttime="20230913 13:09:30.751" endtime="20230913 13:09:30.751"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${volume_name}</arg>
<arg>${random}-volume-for-prepare</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230913 13:09:30.753" level="INFO">${volume_name} = 26392-volume-for-prepare</msg>
<status status="PASS" starttime="20230913 13:09:30.751" endtime="20230913 13:09:30.753"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${bucket_name}</arg>
<arg>${random}-bucket-for-prepare</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230913 13:09:30.754" level="INFO">${bucket_name} = 26392-bucket-for-prepare</msg>
<status status="PASS" starttime="20230913 13:09:30.753" endtime="20230913 13:09:30.755"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create /${volume_name}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 13:09:30.759" level="INFO">Running command 'ozone sh volume create /26392-volume-for-prepare 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 13:09:34.230" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 13:09:34.230" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230913 13:09:30.756" endtime="20230913 13:09:34.230"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 13:09:34.232" level="INFO"/>
<status status="PASS" starttime="20230913 13:09:34.231" endtime="20230913 13:09:34.232"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 13:09:34.232" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 13:09:34.232" endtime="20230913 13:09:34.232"/>
</kw>
<status status="PASS" starttime="20230913 13:09:30.756" endtime="20230913 13:09:34.233"/>
</kw>
<msg timestamp="20230913 13:09:34.233" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 13:09:30.755" endtime="20230913 13:09:34.233"/>
</kw>
<status status="PASS" starttime="20230913 13:09:30.755" endtime="20230913 13:09:34.233"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create /${volume_name}/${bucket_name}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 13:09:34.237" level="INFO">Running command 'ozone sh bucket create /26392-volume-for-prepare/26392-bucket-for-prepare 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 13:09:37.576" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 13:09:37.577" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230913 13:09:34.235" endtime="20230913 13:09:37.577"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 13:09:37.578" level="INFO"/>
<status status="PASS" starttime="20230913 13:09:37.577" endtime="20230913 13:09:37.578"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 13:09:37.578" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 13:09:37.578" endtime="20230913 13:09:37.579"/>
</kw>
<status status="PASS" starttime="20230913 13:09:34.234" endtime="20230913 13:09:37.579"/>
</kw>
<msg timestamp="20230913 13:09:37.579" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 13:09:34.234" endtime="20230913 13:09:37.579"/>
</kw>
<status status="PASS" starttime="20230913 13:09:34.233" endtime="20230913 13:09:37.579"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put /${volume_name}/${bucket_name}/prepare-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 13:09:37.585" level="INFO">Running command 'ozone sh key put /26392-volume-for-prepare/26392-bucket-for-prepare/prepare-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 13:09:43.432" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 13:09:43.433" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230913 13:09:37.581" endtime="20230913 13:09:43.433"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 13:09:43.434" level="INFO"/>
<status status="PASS" starttime="20230913 13:09:43.433" endtime="20230913 13:09:43.434"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 13:09:43.434" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 13:09:43.434" endtime="20230913 13:09:43.435"/>
</kw>
<status status="PASS" starttime="20230913 13:09:37.581" endtime="20230913 13:09:43.435"/>
</kw>
<msg timestamp="20230913 13:09:43.435" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 13:09:37.580" endtime="20230913 13:09:43.435"/>
</kw>
<status status="PASS" starttime="20230913 13:09:37.579" endtime="20230913 13:09:43.435"/>
</kw>
<status status="PASS" starttime="20230913 13:09:16.834" endtime="20230913 13:09:43.435"/>
</kw>
<test id="s1-s3-t1" name="Prepare Ozone Manager" line="39">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230913 13:09:43.437" endtime="20230913 13:09:43.437"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om prepare -id=omservice</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 13:09:43.443" level="INFO">Running command 'ozone admin om prepare -id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 13:09:52.308" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 13:09:52.308" level="INFO">${output} = Ozone Manager Prepare Request successfully returned with Transaction Id : [835].

Checking individual OM instances for prepare request completion...
OM : [om1], Prepare Status : [PREPARE_COMPLETED], C...</msg>
<status status="PASS" starttime="20230913 13:09:43.440" endtime="20230913 13:09:52.308"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 13:09:52.310" level="INFO">Ozone Manager Prepare Request successfully returned with Transaction Id : [835].

Checking individual OM instances for prepare request completion...
OM : [om1], Prepare Status : [PREPARE_COMPLETED], Current Transaction Id : [835]
OM : [om3], Prepare Status : [PREPARE_COMPLETED], Current Transaction Id : [835]
OM : [om2], Prepare Status : [PREPARE_COMPLETED], Current Transaction Id : [835]

OM Preparation successful! 
All OMs are prepared
No new write requests will be allowed until preparation is cancelled or upgrade/downgrade is done.</msg>
<status status="PASS" starttime="20230913 13:09:52.309" endtime="20230913 13:09:52.310"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 13:09:52.310" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 13:09:52.310" endtime="20230913 13:09:52.311"/>
</kw>
<status status="PASS" starttime="20230913 13:09:43.439" endtime="20230913 13:09:52.311"/>
</kw>
<msg timestamp="20230913 13:09:52.311" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 13:09:43.439" endtime="20230913 13:09:52.311"/>
</kw>
<msg timestamp="20230913 13:09:52.311" level="INFO">${result} = Ozone Manager Prepare Request successfully returned with Transaction Id : [835].

Checking individual OM instances for prepare request completion...
OM : [om1], Prepare Status : [PREPARE_COMPLETED], C...</msg>
<status status="PASS" starttime="20230913 13:09:43.438" endtime="20230913 13:09:52.311"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>OM Preparation successful!</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>OM Preparation successful!</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230913 13:09:52.312" endtime="20230913 13:09:52.313"/>
</kw>
<status status="PASS" starttime="20230913 13:09:52.312" endtime="20230913 13:09:52.313"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230913 13:09:43.436" endtime="20230913 13:09:52.313"/>
</test>
<test id="s1-s3-t2" name="Checks if the expected data is present in OM" line="43">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230913 13:09:52.315" endtime="20230913 13:09:52.315"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info /${volume_name}/${bucket_name}/prepare-key</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 13:09:52.320" level="INFO">Running command 'ozone sh key info /26392-volume-for-prepare/26392-bucket-for-prepare/prepare-key 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 13:09:56.240" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 13:09:56.240" level="INFO">${output} = {
  "volumeName" : "26392-volume-for-prepare",
  "bucketName" : "26392-bucket-for-prepare",
  "name" : "prepare-key",
  "dataSize" : 17289,
  "creationTime" : "2023-09-13T13:09:41.064Z",
  "modificati...</msg>
<status status="PASS" starttime="20230913 13:09:52.317" endtime="20230913 13:09:56.240"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 13:09:56.241" level="INFO">{
  "volumeName" : "26392-volume-for-prepare",
  "bucketName" : "26392-bucket-for-prepare",
  "name" : "prepare-key",
  "dataSize" : 17289,
  "creationTime" : "2023-09-13T13:09:41.064Z",
  "modificationTime" : "2023-09-13T13:09:43.053Z",
  "replicationConfig" : {
    "replicationFactor" : "ONE",
    "requiredNodes" : 1,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "ozoneKeyLocations" : [ {
    "containerID" : 4,
    "localID" : 111677748019200204,
    "length" : 17289,
    "offset" : 0,
    "keyOffset" : 0
  } ],
  "file" : true
}</msg>
<status status="PASS" starttime="20230913 13:09:56.240" endtime="20230913 13:09:56.241"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 13:09:56.242" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 13:09:56.241" endtime="20230913 13:09:56.242"/>
</kw>
<status status="PASS" starttime="20230913 13:09:52.316" endtime="20230913 13:09:56.242"/>
</kw>
<msg timestamp="20230913 13:09:56.242" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 13:09:52.316" endtime="20230913 13:09:56.242"/>
</kw>
<msg timestamp="20230913 13:09:56.243" level="INFO">${result} = {
  "volumeName" : "26392-volume-for-prepare",
  "bucketName" : "26392-bucket-for-prepare",
  "name" : "prepare-key",
  "dataSize" : 17289,
  "creationTime" : "2023-09-13T13:09:41.064Z",
  "modificati...</msg>
<status status="PASS" starttime="20230913 13:09:52.316" endtime="20230913 13:09:56.243"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"name\" : \"prepare-key\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230913 13:09:56.243" endtime="20230913 13:09:56.243"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230913 13:09:52.314" endtime="20230913 13:09:56.244"/>
</test>
<test id="s1-s3-t3" name="Test write operation fails" line="47">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230913 13:09:56.246" endtime="20230913 13:09:56.246"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh key put /${volume_name}/${bucket_name}/prepare-key2 /opt/hadoop/NOTICE.txt</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 13:09:56.250" level="INFO">Running command 'ozone sh key put /26392-volume-for-prepare/26392-bucket-for-prepare/prepare-key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 13:10:00.069" level="INFO">${rc} = 255</msg>
<msg timestamp="20230913 13:10:00.069" level="INFO">${output} = NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateKey when OM is in prepare mode.</msg>
<status status="PASS" starttime="20230913 13:09:56.247" endtime="20230913 13:10:00.069"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 13:10:00.070" level="INFO">NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateKey when OM is in prepare mode.</msg>
<status status="PASS" starttime="20230913 13:10:00.070" endtime="20230913 13:10:00.070"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 13:10:00.071" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 13:10:00.071" endtime="20230913 13:10:00.071"/>
</kw>
<msg timestamp="20230913 13:10:00.072" level="INFO">${result} = NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateKey when OM is in prepare mode.</msg>
<status status="PASS" starttime="20230913 13:09:56.246" endtime="20230913 13:10:00.072"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>OM is in prepare mode</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230913 13:10:00.072" endtime="20230913 13:10:00.072"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>ozone sh key info /${volume_name}/${bucket_name}/prepare-key2</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 13:10:00.076" level="INFO">Running command 'ozone sh key info /26392-volume-for-prepare/26392-bucket-for-prepare/prepare-key2 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 13:10:03.752" level="INFO">${rc} = 255</msg>
<msg timestamp="20230913 13:10:03.752" level="INFO">${output} = KEY_NOT_FOUND Key:prepare-key2 not found</msg>
<status status="PASS" starttime="20230913 13:10:00.073" endtime="20230913 13:10:03.752"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 13:10:03.754" level="INFO">KEY_NOT_FOUND Key:prepare-key2 not found</msg>
<status status="PASS" starttime="20230913 13:10:03.753" endtime="20230913 13:10:03.754"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 13:10:03.754" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 13:10:03.754" endtime="20230913 13:10:03.754"/>
</kw>
<status status="PASS" starttime="20230913 13:10:00.072" endtime="20230913 13:10:03.755"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230913 13:09:56.245" endtime="20230913 13:10:03.755"/>
</test>
<doc>Smoke test to test preparing OMs in an OM HA cluster.</doc>
<status status="PASS" starttime="20230913 13:09:16.769" endtime="20230913 13:10:03.757"/>
</suite>
<suite id="s1-s4" name="Om-Prepared" source="/opt/hadoop/smoketest/omha/om-prepared.robot">
<test id="s1-s4-t1" name="Test create volume fails" line="26">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230913 13:10:06.789" endtime="20230913 13:10:06.790"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230913 13:10:06.790" level="INFO">${random} = 75777</msg>
<status status="PASS" starttime="20230913 13:10:06.790" endtime="20230913 13:10:06.790"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${volume_name}</arg>
<arg>${random}-volume-for-prepare</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230913 13:10:06.792" level="INFO">${volume_name} = 75777-volume-for-prepare</msg>
<status status="PASS" starttime="20230913 13:10:06.791" endtime="20230913 13:10:06.792"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh volume create /${volume_name}</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 13:10:06.796" level="INFO">Running command 'ozone sh volume create /75777-volume-for-prepare 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 13:10:10.219" level="INFO">${rc} = 255</msg>
<msg timestamp="20230913 13:10:10.219" level="INFO">${output} = NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateVolume when OM is in prepare mode.</msg>
<status status="PASS" starttime="20230913 13:10:06.793" endtime="20230913 13:10:10.219"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 13:10:10.221" level="INFO">NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateVolume when OM is in prepare mode.</msg>
<status status="PASS" starttime="20230913 13:10:10.220" endtime="20230913 13:10:10.221"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 13:10:10.221" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 13:10:10.221" endtime="20230913 13:10:10.221"/>
</kw>
<msg timestamp="20230913 13:10:10.222" level="INFO">${result} = NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateVolume when OM is in prepare mode.</msg>
<status status="PASS" starttime="20230913 13:10:06.792" endtime="20230913 13:10:10.222"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>OM is in prepare mode</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230913 13:10:10.222" endtime="20230913 13:10:10.222"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh volume info /${volume_name}</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 13:10:10.226" level="INFO">Running command 'ozone sh volume info /75777-volume-for-prepare 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 13:10:13.377" level="INFO">${rc} = 255</msg>
<msg timestamp="20230913 13:10:13.377" level="INFO">${output} = VOLUME_NOT_FOUND Volume 75777-volume-for-prepare is not found</msg>
<status status="PASS" starttime="20230913 13:10:10.223" endtime="20230913 13:10:13.377"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 13:10:13.378" level="INFO">VOLUME_NOT_FOUND Volume 75777-volume-for-prepare is not found</msg>
<status status="PASS" starttime="20230913 13:10:13.378" endtime="20230913 13:10:13.378"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 13:10:13.379" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 13:10:13.379" endtime="20230913 13:10:13.379"/>
</kw>
<msg timestamp="20230913 13:10:13.380" level="INFO">${result} = VOLUME_NOT_FOUND Volume 75777-volume-for-prepare is not found</msg>
<status status="PASS" starttime="20230913 13:10:10.223" endtime="20230913 13:10:13.380"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230913 13:10:13.380" endtime="20230913 13:10:13.380"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230913 13:10:06.788" endtime="20230913 13:10:13.381"/>
</test>
<test id="s1-s4-t2" name="Test list volumes succeeds" line="34">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230913 13:10:13.386" endtime="20230913 13:10:13.386"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 13:10:13.392" level="INFO">Running command 'ozone sh volume list 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 13:10:16.894" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 13:10:16.894" level="INFO">${output} = [ {
  "metadata" : { },
  "name" : "s3v",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 0,
  "creationTime" : "2023-09-13T13:07:28.4...</msg>
<status status="PASS" starttime="20230913 13:10:13.388" endtime="20230913 13:10:16.894"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 13:10:16.895" level="INFO">[ {
  "metadata" : { },
  "name" : "s3v",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 0,
  "creationTime" : "2023-09-13T13:07:28.453Z",
  "modificationTime" : "2023-09-13T13:07:28.453Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "26392-volume-for-prepare",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2023-09-13T13:09:34.197Z",
  "modificationTime" : "2023-09-13T13:09:34.197Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "vol1",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2023-09-13T13:08:01.186Z",
  "modificationTime" : "2023-09-13T13:08:01.186Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "20155-volume-for-cancel",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2023-09-13T13:09:00.196Z",
  "modificationTime" : "2023-09-13T13:09:00.196Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "44513-volume-for-prepare",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2023-09-13T13:08:20.068Z",
  "modificationTime" : "2023-09-13T13:08:20.068Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "refCount" : 0
} ]</msg>
<status status="PASS" starttime="20230913 13:10:16.895" endtime="20230913 13:10:16.896"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 13:10:16.896" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 13:10:16.896" endtime="20230913 13:10:16.896"/>
</kw>
<status status="PASS" starttime="20230913 13:10:13.387" endtime="20230913 13:10:16.897"/>
</kw>
<msg timestamp="20230913 13:10:16.897" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 13:10:13.387" endtime="20230913 13:10:16.897"/>
</kw>
<msg timestamp="20230913 13:10:16.897" level="INFO">${result} = [ {
  "metadata" : { },
  "name" : "s3v",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 0,
  "creationTime" : "2023-09-13T13:07:28.4...</msg>
<status status="PASS" starttime="20230913 13:10:13.387" endtime="20230913 13:10:16.897"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230913 13:10:13.385" endtime="20230913 13:10:16.897"/>
</test>
<doc>Smoke test to test that OMs are prepared in an OM HA cluster.</doc>
<status status="PASS" starttime="20230913 13:10:06.730" endtime="20230913 13:10:16.900"/>
</suite>
<suite id="s1-s5" name="Om-Prepared" source="/opt/hadoop/smoketest/omha/om-prepared.robot">
<test id="s1-s5-t1" name="Test create volume fails" line="26">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230913 13:12:08.830" endtime="20230913 13:12:08.831"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230913 13:12:08.832" level="INFO">${random} = 09614</msg>
<status status="PASS" starttime="20230913 13:12:08.831" endtime="20230913 13:12:08.832"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${volume_name}</arg>
<arg>${random}-volume-for-prepare</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230913 13:12:08.834" level="INFO">${volume_name} = 09614-volume-for-prepare</msg>
<status status="PASS" starttime="20230913 13:12:08.832" endtime="20230913 13:12:08.834"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh volume create /${volume_name}</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 13:12:08.837" level="INFO">Running command 'ozone sh volume create /09614-volume-for-prepare 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 13:12:12.523" level="INFO">${rc} = 255</msg>
<msg timestamp="20230913 13:12:12.523" level="INFO">${output} = NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateVolume when OM is in prepare mode.</msg>
<status status="PASS" starttime="20230913 13:12:08.835" endtime="20230913 13:12:12.523"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 13:12:12.525" level="INFO">NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateVolume when OM is in prepare mode.</msg>
<status status="PASS" starttime="20230913 13:12:12.524" endtime="20230913 13:12:12.525"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 13:12:12.525" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 13:12:12.525" endtime="20230913 13:12:12.526"/>
</kw>
<msg timestamp="20230913 13:12:12.526" level="INFO">${result} = NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateVolume when OM is in prepare mode.</msg>
<status status="PASS" starttime="20230913 13:12:08.834" endtime="20230913 13:12:12.526"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>OM is in prepare mode</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230913 13:12:12.526" endtime="20230913 13:12:12.526"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh volume info /${volume_name}</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 13:12:12.530" level="INFO">Running command 'ozone sh volume info /09614-volume-for-prepare 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 13:12:16.531" level="INFO">${rc} = 255</msg>
<msg timestamp="20230913 13:12:16.531" level="INFO">${output} = VOLUME_NOT_FOUND Volume 09614-volume-for-prepare is not found</msg>
<status status="PASS" starttime="20230913 13:12:12.527" endtime="20230913 13:12:16.531"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 13:12:16.532" level="INFO">VOLUME_NOT_FOUND Volume 09614-volume-for-prepare is not found</msg>
<status status="PASS" starttime="20230913 13:12:16.532" endtime="20230913 13:12:16.532"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 13:12:16.533" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 13:12:16.533" endtime="20230913 13:12:16.533"/>
</kw>
<msg timestamp="20230913 13:12:16.534" level="INFO">${result} = VOLUME_NOT_FOUND Volume 09614-volume-for-prepare is not found</msg>
<status status="PASS" starttime="20230913 13:12:12.527" endtime="20230913 13:12:16.534"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230913 13:12:16.534" endtime="20230913 13:12:16.534"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230913 13:12:08.829" endtime="20230913 13:12:16.534"/>
</test>
<test id="s1-s5-t2" name="Test list volumes succeeds" line="34">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230913 13:12:16.536" endtime="20230913 13:12:16.537"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 13:12:16.541" level="INFO">Running command 'ozone sh volume list 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 13:12:20.581" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 13:12:20.582" level="INFO">${output} = [ {
  "metadata" : { },
  "name" : "s3v",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 0,
  "creationTime" : "2023-09-13T13:07:30.1...</msg>
<status status="PASS" starttime="20230913 13:12:16.538" endtime="20230913 13:12:20.582"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 13:12:20.586" level="INFO">[ {
  "metadata" : { },
  "name" : "s3v",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 0,
  "creationTime" : "2023-09-13T13:07:30.105Z",
  "modificationTime" : "2023-09-13T13:07:30.105Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "26392-volume-for-prepare",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2023-09-13T13:09:34.197Z",
  "modificationTime" : "2023-09-13T13:09:34.197Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "vol1",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2023-09-13T13:08:01.186Z",
  "modificationTime" : "2023-09-13T13:08:01.186Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "20155-volume-for-cancel",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2023-09-13T13:09:00.196Z",
  "modificationTime" : "2023-09-13T13:09:00.196Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "44513-volume-for-prepare",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2023-09-13T13:08:20.068Z",
  "modificationTime" : "2023-09-13T13:08:20.068Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "refCount" : 0
} ]</msg>
<status status="PASS" starttime="20230913 13:12:20.582" endtime="20230913 13:12:20.587"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 13:12:20.589" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 13:12:20.588" endtime="20230913 13:12:20.589"/>
</kw>
<status status="PASS" starttime="20230913 13:12:16.538" endtime="20230913 13:12:20.589"/>
</kw>
<msg timestamp="20230913 13:12:20.589" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 13:12:16.537" endtime="20230913 13:12:20.590"/>
</kw>
<msg timestamp="20230913 13:12:20.592" level="INFO">${result} = [ {
  "metadata" : { },
  "name" : "s3v",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 0,
  "creationTime" : "2023-09-13T13:07:30.1...</msg>
<status status="PASS" starttime="20230913 13:12:16.537" endtime="20230913 13:12:20.593"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230913 13:12:16.535" endtime="20230913 13:12:20.593"/>
</test>
<doc>Smoke test to test that OMs are prepared in an OM HA cluster.</doc>
<status status="PASS" starttime="20230913 13:12:08.757" endtime="20230913 13:12:20.599"/>
</suite>
<suite id="s1-s6" name="Loaddata" source="/opt/hadoop/smoketest/topology/loaddata.robot">
<test id="s1-s6-t1" name="Create a volume, bucket and key" line="27">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create topvol1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 13:14:00.264" level="INFO">Running command 'ozone sh volume create topvol1 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 13:14:04.309" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 13:14:04.309" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230913 13:14:00.261" endtime="20230913 13:14:04.309"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 13:14:04.310" level="INFO"/>
<status status="PASS" starttime="20230913 13:14:04.309" endtime="20230913 13:14:04.310"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 13:14:04.322" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 13:14:04.310" endtime="20230913 13:14:04.323"/>
</kw>
<status status="PASS" starttime="20230913 13:14:00.260" endtime="20230913 13:14:04.323"/>
</kw>
<msg timestamp="20230913 13:14:04.323" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 13:14:00.260" endtime="20230913 13:14:04.323"/>
</kw>
<msg timestamp="20230913 13:14:04.323" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230913 13:14:00.259" endtime="20230913 13:14:04.323"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230913 13:14:04.324" endtime="20230913 13:14:04.324"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /topvol1/bucket1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 13:14:04.333" level="INFO">Running command 'ozone sh bucket create /topvol1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 13:14:08.008" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 13:14:08.008" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230913 13:14:04.330" endtime="20230913 13:14:08.008"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 13:14:08.009" level="INFO"/>
<status status="PASS" starttime="20230913 13:14:08.008" endtime="20230913 13:14:08.009"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 13:14:08.010" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 13:14:08.009" endtime="20230913 13:14:08.010"/>
</kw>
<status status="PASS" starttime="20230913 13:14:04.329" endtime="20230913 13:14:08.010"/>
</kw>
<msg timestamp="20230913 13:14:08.010" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 13:14:04.329" endtime="20230913 13:14:08.010"/>
</kw>
<msg timestamp="20230913 13:14:08.010" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230913 13:14:04.328" endtime="20230913 13:14:08.011"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230913 13:14:08.011" endtime="20230913 13:14:08.011"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /topvol1/bucket1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 13:14:08.016" level="INFO">Running command 'ozone sh key put /topvol1/bucket1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 13:14:14.965" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 13:14:14.965" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230913 13:14:08.013" endtime="20230913 13:14:14.965"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 13:14:14.966" level="INFO"/>
<status status="PASS" starttime="20230913 13:14:14.965" endtime="20230913 13:14:14.966"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 13:14:14.967" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 13:14:14.966" endtime="20230913 13:14:14.967"/>
</kw>
<status status="PASS" starttime="20230913 13:14:08.013" endtime="20230913 13:14:14.967"/>
</kw>
<msg timestamp="20230913 13:14:14.967" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 13:14:08.012" endtime="20230913 13:14:14.967"/>
</kw>
<msg timestamp="20230913 13:14:14.968" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230913 13:14:08.012" endtime="20230913 13:14:14.968"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230913 13:14:14.968" endtime="20230913 13:14:14.968"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230913 13:14:00.259" endtime="20230913 13:14:14.968"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20230913 13:14:00.204" endtime="20230913 13:14:14.970"/>
</suite>
<suite id="s1-s7" name="Readdata" source="/opt/hadoop/smoketest/topology/readdata.robot">
<test id="s1-s7-t1" name="Read data from previously created key" line="27">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230913 13:14:17.972" level="INFO">${random} = 49380</msg>
<status status="PASS" starttime="20230913 13:14:17.971" endtime="20230913 13:14:17.972"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /topvol1/bucket1/key1 /tmp/key1-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 13:14:17.977" level="INFO">Running command 'ozone sh key get /topvol1/bucket1/key1 /tmp/key1-49380 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 13:14:24.282" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 13:14:24.282" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230913 13:14:17.974" endtime="20230913 13:14:24.282"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 13:14:24.284" level="INFO"/>
<status status="PASS" starttime="20230913 13:14:24.283" endtime="20230913 13:14:24.284"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 13:14:24.284" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 13:14:24.284" endtime="20230913 13:14:24.284"/>
</kw>
<status status="PASS" starttime="20230913 13:14:17.973" endtime="20230913 13:14:24.285"/>
</kw>
<msg timestamp="20230913 13:14:24.285" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 13:14:17.973" endtime="20230913 13:14:24.285"/>
</kw>
<msg timestamp="20230913 13:14:24.285" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230913 13:14:17.972" endtime="20230913 13:14:24.285"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230913 13:14:24.285" endtime="20230913 13:14:24.286"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230913 13:14:17.971" endtime="20230913 13:14:24.286"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20230913 13:14:17.915" endtime="20230913 13:14:24.288"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="164167"/>
</suite>
<statistics>
<total>
<stat pass="14" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="14" fail="0" skip="0" id="s1" name="ozone-om-prepare">ozone-om-prepare</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1" name="Om-Prepare">ozone-om-prepare.Om-Prepare</stat>
<stat pass="2" fail="0" skip="0" id="s1-s2" name="Om-Cancel-Prepare">ozone-om-prepare.Om-Cancel-Prepare</stat>
<stat pass="3" fail="0" skip="0" id="s1-s3" name="Om-Prepare">ozone-om-prepare.Om-Prepare</stat>
<stat pass="2" fail="0" skip="0" id="s1-s4" name="Om-Prepared">ozone-om-prepare.Om-Prepared</stat>
<stat pass="2" fail="0" skip="0" id="s1-s5" name="Om-Prepared">ozone-om-prepare.Om-Prepared</stat>
<stat pass="1" fail="0" skip="0" id="s1-s6" name="Loaddata">ozone-om-prepare.Loaddata</stat>
<stat pass="1" fail="0" skip="0" id="s1-s7" name="Readdata">ozone-om-prepare.Readdata</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
