<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 6.1.1 (Python 3.8.10 on linux)" generated="20230913 07:16:34.977" rpa="false" schemaversion="4">
<suite id="s1" name="ozonesecure-root-ca-rotation">
<suite id="s1-s1" name="Kinit" source="/opt/hadoop/smoketest/kinit.robot">
<test id="s1-s1-t1" name="Kinit" line="27">
<kw name="Kinit test user" library="commonlib">
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 07:13:41.280" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 07:13:41.285" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 07:13:41.285" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230913 07:13:41.277" endtime="20230913 07:13:41.286"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 07:13:41.287" level="INFO">scm</msg>
<status status="PASS" starttime="20230913 07:13:41.286" endtime="20230913 07:13:41.287"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 07:13:41.287" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 07:13:41.287" endtime="20230913 07:13:41.287"/>
</kw>
<status status="PASS" starttime="20230913 07:13:41.276" endtime="20230913 07:13:41.288"/>
</kw>
<msg timestamp="20230913 07:13:41.288" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 07:13:41.276" endtime="20230913 07:13:41.288"/>
</kw>
<msg timestamp="20230913 07:13:41.288" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230913 07:13:41.275" endtime="20230913 07:13:41.288"/>
</kw>
<msg timestamp="20230913 07:13:41.288" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230913 07:13:41.275" endtime="20230913 07:13:41.288"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230913 07:13:41.289" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230913 07:13:41.289" endtime="20230913 07:13:41.289"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 07:13:41.294" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 07:13:41.344" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 07:13:41.344" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230913 07:13:41.292" endtime="20230913 07:13:41.345"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 07:13:41.346" level="INFO"/>
<status status="PASS" starttime="20230913 07:13:41.345" endtime="20230913 07:13:41.346"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 07:13:41.347" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 07:13:41.346" endtime="20230913 07:13:41.347"/>
</kw>
<status status="PASS" starttime="20230913 07:13:41.291" endtime="20230913 07:13:41.347"/>
</kw>
<msg timestamp="20230913 07:13:41.347" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 07:13:41.291" endtime="20230913 07:13:41.348"/>
</kw>
<status status="PASS" starttime="20230913 07:13:41.290" endtime="20230913 07:13:41.348"/>
</kw>
<status status="PASS" starttime="20230913 07:13:41.289" endtime="20230913 07:13:41.348"/>
</kw>
<status status="PASS" starttime="20230913 07:13:41.274" endtime="20230913 07:13:41.348"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20230913 07:13:41.273" endtime="20230913 07:13:41.348"/>
</test>
<doc>Kinit test user</doc>
<status status="PASS" starttime="20230913 07:13:41.049" endtime="20230913 07:13:41.350"/>
</suite>
<suite id="s1-s2" name="Root-Ca-Rotation-Client-Checks" source="/opt/hadoop/smoketest/certrotation/root-ca-rotation-client-checks.robot">
<test id="s1-s2-t1" name="Create a volume and bucket" line="27">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 07:14:10.870" level="INFO">Running command 'ozone sh volume create rootca-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 07:14:16.348" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 07:14:16.348" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230913 07:14:10.867" endtime="20230913 07:14:16.348"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 07:14:16.349" level="INFO"/>
<status status="PASS" starttime="20230913 07:14:16.348" endtime="20230913 07:14:16.349"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 07:14:16.350" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 07:14:16.349" endtime="20230913 07:14:16.350"/>
</kw>
<status status="PASS" starttime="20230913 07:14:10.866" endtime="20230913 07:14:16.350"/>
</kw>
<msg timestamp="20230913 07:14:16.350" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 07:14:10.866" endtime="20230913 07:14:16.350"/>
</kw>
<msg timestamp="20230913 07:14:16.350" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230913 07:14:10.865" endtime="20230913 07:14:16.350"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230913 07:14:16.350" endtime="20230913 07:14:16.351"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 07:14:16.355" level="INFO">Running command 'ozone sh bucket create /rootca-volume/rootca-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 07:14:22.110" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 07:14:22.110" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230913 07:14:16.352" endtime="20230913 07:14:22.110"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 07:14:22.122" level="INFO"/>
<status status="PASS" starttime="20230913 07:14:22.121" endtime="20230913 07:14:22.122"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 07:14:22.123" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 07:14:22.122" endtime="20230913 07:14:22.123"/>
</kw>
<status status="PASS" starttime="20230913 07:14:16.352" endtime="20230913 07:14:22.123"/>
</kw>
<msg timestamp="20230913 07:14:22.123" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 07:14:16.351" endtime="20230913 07:14:22.123"/>
</kw>
<msg timestamp="20230913 07:14:22.124" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230913 07:14:16.351" endtime="20230913 07:14:22.124"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230913 07:14:22.124" endtime="20230913 07:14:22.128"/>
</kw>
<tag>create-volume-and-bucket</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230913 07:14:10.865" endtime="20230913 07:14:22.129"/>
</test>
<test id="s1-s2-t2" name="Create key" line="34">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 07:14:22.138" level="INFO">Running command 'echo "rootca: key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20230913 07:14:22.140" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 07:14:22.140" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230913 07:14:22.131" endtime="20230913 07:14:22.141"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 07:14:22.142" level="INFO"/>
<status status="PASS" starttime="20230913 07:14:22.141" endtime="20230913 07:14:22.142"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 07:14:22.142" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 07:14:22.142" endtime="20230913 07:14:22.143"/>
</kw>
<status status="PASS" starttime="20230913 07:14:22.131" endtime="20230913 07:14:22.143"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 07:14:22.153" level="INFO">Running command 'ozone sh key put /rootca-volume/rootca-bucket/rootca-key /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 07:14:32.930" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 07:14:32.930" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230913 07:14:22.145" endtime="20230913 07:14:32.930"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 07:14:32.931" level="INFO"/>
<status status="PASS" starttime="20230913 07:14:32.931" endtime="20230913 07:14:32.932"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 07:14:32.932" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 07:14:32.932" endtime="20230913 07:14:32.932"/>
</kw>
<status status="PASS" starttime="20230913 07:14:22.144" endtime="20230913 07:14:32.933"/>
</kw>
<msg timestamp="20230913 07:14:32.933" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 07:14:22.144" endtime="20230913 07:14:32.933"/>
</kw>
<msg timestamp="20230913 07:14:32.933" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230913 07:14:22.143" endtime="20230913 07:14:32.933"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230913 07:14:32.933" endtime="20230913 07:14:32.934"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 07:14:32.938" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 07:14:32.941" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 07:14:32.941" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230913 07:14:32.935" endtime="20230913 07:14:32.941"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 07:14:32.942" level="INFO"/>
<status status="PASS" starttime="20230913 07:14:32.941" endtime="20230913 07:14:32.942"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 07:14:32.942" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 07:14:32.942" endtime="20230913 07:14:32.942"/>
</kw>
<status status="PASS" starttime="20230913 07:14:32.934" endtime="20230913 07:14:32.943"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230913 07:14:22.130" endtime="20230913 07:14:32.943"/>
</test>
<test id="s1-s2-t3" name="Read data from previously created key" line="40">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230913 07:14:32.945" level="INFO">${random} = 52839</msg>
<status status="PASS" starttime="20230913 07:14:32.944" endtime="20230913 07:14:32.945"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 07:14:32.949" level="INFO">Running command 'ozone sh key get /rootca-volume/rootca-bucket/rootca-key /tmp/key-52839 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 07:14:41.881" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 07:14:41.881" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230913 07:14:32.947" endtime="20230913 07:14:41.881"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 07:14:41.882" level="INFO"/>
<status status="PASS" starttime="20230913 07:14:41.882" endtime="20230913 07:14:41.883"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 07:14:41.883" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 07:14:41.883" endtime="20230913 07:14:41.883"/>
</kw>
<status status="PASS" starttime="20230913 07:14:32.946" endtime="20230913 07:14:41.884"/>
</kw>
<msg timestamp="20230913 07:14:41.884" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 07:14:32.946" endtime="20230913 07:14:41.884"/>
</kw>
<msg timestamp="20230913 07:14:41.884" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230913 07:14:32.945" endtime="20230913 07:14:41.884"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230913 07:14:41.884" endtime="20230913 07:14:41.885"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 07:14:41.888" level="INFO">Running command 'cat /tmp/key-52839 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 07:14:41.891" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 07:14:41.891" level="INFO">${output} = rootca: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230913 07:14:41.885" endtime="20230913 07:14:41.891"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 07:14:41.893" level="INFO">rootca: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230913 07:14:41.892" endtime="20230913 07:14:41.893"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 07:14:41.893" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 07:14:41.893" endtime="20230913 07:14:41.893"/>
</kw>
<msg timestamp="20230913 07:14:41.894" level="INFO">${output} = rootca: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230913 07:14:41.885" endtime="20230913 07:14:41.894"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230913 07:14:41.894" endtime="20230913 07:14:41.894"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 07:14:41.897" level="INFO">Running command 'rm /tmp/key-52839 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 07:14:41.900" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 07:14:41.900" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230913 07:14:41.895" endtime="20230913 07:14:41.900"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 07:14:41.901" level="INFO"/>
<status status="PASS" starttime="20230913 07:14:41.901" endtime="20230913 07:14:41.901"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 07:14:41.902" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 07:14:41.902" endtime="20230913 07:14:41.902"/>
</kw>
<status status="PASS" starttime="20230913 07:14:41.894" endtime="20230913 07:14:41.902"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230913 07:14:32.944" endtime="20230913 07:14:41.903"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20230913 07:14:10.813" endtime="20230913 07:14:41.905"/>
</suite>
<suite id="s1-s3" name="Root-Ca-Rotation-Client-Checks" source="/opt/hadoop/smoketest/certrotation/root-ca-rotation-client-checks.robot">
<test id="s1-s3-t1" name="Create a volume and bucket" line="27">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 07:15:44.450" level="INFO">Running command 'ozone sh volume create rootca2-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 07:15:49.712" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 07:15:49.712" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230913 07:15:44.447" endtime="20230913 07:15:49.712"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 07:15:49.714" level="INFO"/>
<status status="PASS" starttime="20230913 07:15:49.713" endtime="20230913 07:15:49.714"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 07:15:49.715" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 07:15:49.714" endtime="20230913 07:15:49.715"/>
</kw>
<status status="PASS" starttime="20230913 07:15:44.447" endtime="20230913 07:15:49.715"/>
</kw>
<msg timestamp="20230913 07:15:49.715" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 07:15:44.446" endtime="20230913 07:15:49.715"/>
</kw>
<msg timestamp="20230913 07:15:49.715" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230913 07:15:44.446" endtime="20230913 07:15:49.715"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230913 07:15:49.715" endtime="20230913 07:15:49.716"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 07:15:49.721" level="INFO">Running command 'ozone sh bucket create /rootca2-volume/rootca2-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 07:15:56.183" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 07:15:56.183" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230913 07:15:49.718" endtime="20230913 07:15:56.183"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 07:15:56.185" level="INFO"/>
<status status="PASS" starttime="20230913 07:15:56.184" endtime="20230913 07:15:56.185"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 07:15:56.185" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 07:15:56.185" endtime="20230913 07:15:56.185"/>
</kw>
<status status="PASS" starttime="20230913 07:15:49.717" endtime="20230913 07:15:56.186"/>
</kw>
<msg timestamp="20230913 07:15:56.186" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 07:15:49.717" endtime="20230913 07:15:56.186"/>
</kw>
<msg timestamp="20230913 07:15:56.186" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230913 07:15:49.716" endtime="20230913 07:15:56.186"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230913 07:15:56.186" endtime="20230913 07:15:56.187"/>
</kw>
<tag>create-volume-and-bucket</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230913 07:15:44.445" endtime="20230913 07:15:56.187"/>
</test>
<test id="s1-s3-t2" name="Create key" line="34">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 07:15:56.193" level="INFO">Running command 'echo "rootca2: key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20230913 07:15:56.195" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 07:15:56.195" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230913 07:15:56.190" endtime="20230913 07:15:56.195"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 07:15:56.196" level="INFO"/>
<status status="PASS" starttime="20230913 07:15:56.195" endtime="20230913 07:15:56.196"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 07:15:56.197" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 07:15:56.196" endtime="20230913 07:15:56.197"/>
</kw>
<status status="PASS" starttime="20230913 07:15:56.189" endtime="20230913 07:15:56.197"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 07:15:56.201" level="INFO">Running command 'ozone sh key put /rootca2-volume/rootca2-bucket/rootca2-key /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 07:16:03.633" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 07:16:03.633" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230913 07:15:56.199" endtime="20230913 07:16:03.633"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 07:16:03.634" level="INFO"/>
<status status="PASS" starttime="20230913 07:16:03.633" endtime="20230913 07:16:03.634"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 07:16:03.635" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 07:16:03.635" endtime="20230913 07:16:03.635"/>
</kw>
<status status="PASS" starttime="20230913 07:15:56.198" endtime="20230913 07:16:03.635"/>
</kw>
<msg timestamp="20230913 07:16:03.635" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 07:15:56.198" endtime="20230913 07:16:03.636"/>
</kw>
<msg timestamp="20230913 07:16:03.636" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230913 07:15:56.197" endtime="20230913 07:16:03.636"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230913 07:16:03.636" endtime="20230913 07:16:03.636"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 07:16:03.640" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 07:16:03.643" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 07:16:03.643" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230913 07:16:03.637" endtime="20230913 07:16:03.643"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 07:16:03.644" level="INFO"/>
<status status="PASS" starttime="20230913 07:16:03.643" endtime="20230913 07:16:03.644"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 07:16:03.645" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 07:16:03.644" endtime="20230913 07:16:03.645"/>
</kw>
<status status="PASS" starttime="20230913 07:16:03.636" endtime="20230913 07:16:03.645"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230913 07:15:56.188" endtime="20230913 07:16:03.645"/>
</test>
<test id="s1-s3-t3" name="Read data from previously created key" line="40">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230913 07:16:03.648" level="INFO">${random} = 60481</msg>
<status status="PASS" starttime="20230913 07:16:03.647" endtime="20230913 07:16:03.648"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 07:16:03.652" level="INFO">Running command 'ozone sh key get /rootca2-volume/rootca2-bucket/rootca2-key /tmp/key-60481 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 07:16:11.645" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 07:16:11.645" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230913 07:16:03.650" endtime="20230913 07:16:11.645"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 07:16:11.646" level="INFO"/>
<status status="PASS" starttime="20230913 07:16:11.645" endtime="20230913 07:16:11.646"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 07:16:11.647" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 07:16:11.646" endtime="20230913 07:16:11.647"/>
</kw>
<status status="PASS" starttime="20230913 07:16:03.649" endtime="20230913 07:16:11.647"/>
</kw>
<msg timestamp="20230913 07:16:11.647" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 07:16:03.649" endtime="20230913 07:16:11.647"/>
</kw>
<msg timestamp="20230913 07:16:11.647" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230913 07:16:03.648" endtime="20230913 07:16:11.648"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230913 07:16:11.648" endtime="20230913 07:16:11.648"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 07:16:11.652" level="INFO">Running command 'cat /tmp/key-60481 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 07:16:11.655" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 07:16:11.655" level="INFO">${output} = rootca2: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230913 07:16:11.649" endtime="20230913 07:16:11.655"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 07:16:11.656" level="INFO">rootca2: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230913 07:16:11.655" endtime="20230913 07:16:11.656"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 07:16:11.657" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 07:16:11.656" endtime="20230913 07:16:11.657"/>
</kw>
<msg timestamp="20230913 07:16:11.657" level="INFO">${output} = rootca2: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230913 07:16:11.648" endtime="20230913 07:16:11.657"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230913 07:16:11.658" endtime="20230913 07:16:11.658"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 07:16:11.665" level="INFO">Running command 'rm /tmp/key-60481 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 07:16:11.668" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 07:16:11.668" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230913 07:16:11.661" endtime="20230913 07:16:11.668"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 07:16:11.669" level="INFO"/>
<status status="PASS" starttime="20230913 07:16:11.669" endtime="20230913 07:16:11.669"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 07:16:11.670" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 07:16:11.669" endtime="20230913 07:16:11.670"/>
</kw>
<status status="PASS" starttime="20230913 07:16:11.659" endtime="20230913 07:16:11.670"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230913 07:16:03.647" endtime="20230913 07:16:11.670"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20230913 07:15:44.391" endtime="20230913 07:16:11.672"/>
</suite>
<suite id="s1-s4" name="Root-Ca-Rotation" source="/opt/hadoop/smoketest/scmha/root-ca-rotation.robot">
<test id="s1-s4-t1" name="Verify root CA rotation metrics" line="26">
<kw name="Execute" library="os">
<var>${successRotationLine}</var>
<arg>curl -sS 'http://localhost:9876/jmx' | grep NumSuccessRotation</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 07:16:15.056" level="INFO">Running command 'curl -sS 'http://localhost:9876/jmx' | grep NumSuccessRotation 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 07:16:15.502" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 07:16:15.502" level="INFO">${output} =     "NumSuccessRotation" : 2,</msg>
<status status="PASS" starttime="20230913 07:16:15.053" endtime="20230913 07:16:15.502"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 07:16:15.504" level="INFO">    "NumSuccessRotation" : 2,</msg>
<status status="PASS" starttime="20230913 07:16:15.503" endtime="20230913 07:16:15.504"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 07:16:15.504" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 07:16:15.504" endtime="20230913 07:16:15.505"/>
</kw>
<status status="PASS" starttime="20230913 07:16:15.052" endtime="20230913 07:16:15.505"/>
</kw>
<msg timestamp="20230913 07:16:15.505" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 07:16:15.052" endtime="20230913 07:16:15.505"/>
</kw>
<msg timestamp="20230913 07:16:15.505" level="INFO">${successRotationLine} =     "NumSuccessRotation" : 2,</msg>
<status status="PASS" starttime="20230913 07:16:15.051" endtime="20230913 07:16:15.505"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${successRotationLine}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 07:16:15.506" level="INFO">    "NumSuccessRotation" : 2,</msg>
<status status="PASS" starttime="20230913 07:16:15.505" endtime="20230913 07:16:15.506"/>
</kw>
<kw name="Split String" library="String">
<var>${temp_1}</var>
<arg>${successRotationLine}</arg>
<arg>:</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20230913 07:16:15.506" level="INFO">${temp_1} = ['    "NumSuccessRotation" ', ' 2,']</msg>
<status status="PASS" starttime="20230913 07:16:15.506" endtime="20230913 07:16:15.506"/>
</kw>
<kw name="Strip String" library="String">
<var>${temp_2}</var>
<arg>${temp_1[1]}</arg>
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<msg timestamp="20230913 07:16:15.509" level="INFO">${temp_2} = 2,</msg>
<status status="PASS" starttime="20230913 07:16:15.507" endtime="20230913 07:16:15.509"/>
</kw>
<kw name="Split String" library="String">
<var>${temp_3}</var>
<arg>${temp_2}</arg>
<arg>,</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20230913 07:16:15.510" level="INFO">${temp_3} = ['2', '']</msg>
<status status="PASS" starttime="20230913 07:16:15.509" endtime="20230913 07:16:15.510"/>
</kw>
<kw name="Strip String" library="String">
<var>${successRotation}</var>
<arg>${temp_3[0]}</arg>
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<msg timestamp="20230913 07:16:15.512" level="INFO">${successRotation} = 2</msg>
<status status="PASS" starttime="20230913 07:16:15.511" endtime="20230913 07:16:15.512"/>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<var>${successRotation}</var>
<arg>${successRotation}</arg>
<doc>Converts the given item to a floating point number.</doc>
<msg timestamp="20230913 07:16:15.514" level="INFO">${successRotation} = 2.0</msg>
<status status="PASS" starttime="20230913 07:16:15.513" endtime="20230913 07:16:15.514"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${successRotation} &gt;= 1</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230913 07:16:15.515" endtime="20230913 07:16:15.516"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230913 07:16:15.051" endtime="20230913 07:16:15.517"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20230913 07:16:15.000" endtime="20230913 07:16:15.518"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="59192"/>
</suite>
<statistics>
<total>
<stat pass="8" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="2" fail="0" skip="0">create-volume-and-bucket</stat>
</tag>
<suite>
<stat pass="8" fail="0" skip="0" id="s1" name="ozonesecure-root-ca-rotation">ozonesecure-root-ca-rotation</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1" name="Kinit">ozonesecure-root-ca-rotation.Kinit</stat>
<stat pass="3" fail="0" skip="0" id="s1-s2" name="Root-Ca-Rotation-Client-Checks">ozonesecure-root-ca-rotation.Root-Ca-Rotation-Client-Checks</stat>
<stat pass="3" fail="0" skip="0" id="s1-s3" name="Root-Ca-Rotation-Client-Checks">ozonesecure-root-ca-rotation.Root-Ca-Rotation-Client-Checks</stat>
<stat pass="1" fail="0" skip="0" id="s1-s4" name="Root-Ca-Rotation">ozonesecure-root-ca-rotation.Root-Ca-Rotation</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
