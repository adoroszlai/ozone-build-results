<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 6.1.1 (Python 3.8.10 on linux)" generated="20230913 09:14:25.321" rpa="false" schemaversion="4">
<suite id="s1" name="ozone-topology">
<suite id="s1-s1" name="Basic" source="/opt/hadoop/smoketest/basic/basic.robot">
<test id="s1-s1-t1" name="Check webui static resources" line="29">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230913 09:09:13.032" endtime="20230913 09:09:13.034"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -s -I http://${SCM}:9876/static/bootstrap-3.4.1/js/bootstrap.min.js</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 09:09:13.045" level="INFO">Running command 'curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 09:09:13.640" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 09:09:13.640" level="INFO">${output} = HTTP/1.1 200 OK
Date: Wed, 13 Sep 2023 09:09:13 GMT
X-Content-Type-Options: nosniff
X-XSS-Protection: 1; mode=block
X-FRAME-OPTIONS: SAMEORIGIN
Last-Modified: Wed, 13 Sep 2023 08:23:58 GMT
Content-Typ...</msg>
<status status="PASS" starttime="20230913 09:09:13.039" endtime="20230913 09:09:13.640"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 09:09:13.646" level="INFO">HTTP/1.1 200 OK
Date: Wed, 13 Sep 2023 09:09:13 GMT
X-Content-Type-Options: nosniff
X-XSS-Protection: 1; mode=block
X-FRAME-OPTIONS: SAMEORIGIN
Last-Modified: Wed, 13 Sep 2023 08:23:58 GMT
Content-Type: application/javascript
Accept-Ranges: bytes
Content-Length: 39680
</msg>
<status status="PASS" starttime="20230913 09:09:13.642" endtime="20230913 09:09:13.646"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 09:09:13.649" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 09:09:13.646" endtime="20230913 09:09:13.650"/>
</kw>
<status status="PASS" starttime="20230913 09:09:13.037" endtime="20230913 09:09:13.650"/>
</kw>
<msg timestamp="20230913 09:09:13.650" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 09:09:13.036" endtime="20230913 09:09:13.650"/>
</kw>
<msg timestamp="20230913 09:09:13.650" level="INFO">${result} = HTTP/1.1 200 OK
Date: Wed, 13 Sep 2023 09:09:13 GMT
X-Content-Type-Options: nosniff
X-XSS-Protection: 1; mode=block
X-FRAME-OPTIONS: SAMEORIGIN
Last-Modified: Wed, 13 Sep 2023 08:23:58 GMT
Content-Typ...</msg>
<status status="PASS" starttime="20230913 09:09:13.034" endtime="20230913 09:09:13.650"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230913 09:09:13.653" endtime="20230913 09:09:13.655"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230913 09:09:13.029" endtime="20230913 09:09:13.655"/>
</test>
<test id="s1-s1-t2" name="Basic Freon smoketest" line="34">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230913 09:09:13.663" endtime="20230913 09:09:13.669"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>10</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230913 09:09:13.671" level="INFO">${random} = gCIjpdkkmA</msg>
<status status="PASS" starttime="20230913 09:09:13.671" endtime="20230913 09:09:13.671"/>
</kw>
<kw name="Freon OCKG" library="freon">
<arg>prefix=${random}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 09:09:13.692" level="INFO">Running command 'ozone freon ockg  -t 1 -n1 -p gCIjpdkkmA  2&gt;&amp;1'.</msg>
<msg timestamp="20230913 09:09:37.600" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 09:09:37.600" level="INFO">${output} = 2023-09-13 09:09:20,344 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-13 09:09:20,732 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230913 09:09:13.689" endtime="20230913 09:09:37.600"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 09:09:37.610" level="INFO">2023-09-13 09:09:20,344 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-13 09:09:20,732 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-09-13 09:09:20,732 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-09-13 09:09:20,939 [main] INFO freon.BaseFreonGenerator: Executing test with prefix gCIjpdkkmA and number-of-tests 1
2023-09-13 09:09:21,030 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-13 09:09:22,041 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-13 09:09:23,042 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-13 09:09:24,042 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-13 09:09:25,033 [main] INFO retry.RetryInvocationHandler: com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.ozone.om.exceptions.OMNotLeaderException): OM:om1 is not the leader. Could not determine the leader node.
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createNotLeaderException(OzoneManagerProtocolServerSideTranslatorPB.java:246)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createLeaderErrorException(OzoneManagerProtocolServerSideTranslatorPB.java:234)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitReadRequestToOM(OzoneManagerProtocolServerSideTranslatorPB.java:227)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.processRequest(OzoneManagerProtocolServerSideTranslatorPB.java:179)
	at org.apache.hadoop.hdds.server.OzoneProtocolMessageDispatcher.processRequest(OzoneProtocolMessageDispatcher.java:87)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitRequest(OzoneManagerProtocolServerSideTranslatorPB.java:148)
	at org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos$OzoneManagerService$2.callBlockingMethod(OzoneManagerProtocolProtos.java)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Server.processCall(ProtobufRpcEngine.java:484)
	at org.apache.hadoop.ipc.ProtobufRpcEngine2$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine2.java:595)
	at org.apache.hadoop.ipc.ProtobufRpcEngine2$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine2.java:573)
	at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:1227)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:1094)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:1017)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/javax.security.auth.Subject.doAs(Subject.java:423)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1899)
	at org.apache.hadoop.ipc.Server$Handler.run(Server.java:3048)
, while invoking $Proxy25.submitRequest over nodeId=null,nodeAddress=om:9862 after 1 failover attempts. Trying to failover after sleeping for 4000ms. Current retry count: 1.
2023-09-13 09:09:25,043 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-13 09:09:26,043 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-13 09:09:27,044 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-13 09:09:28,044 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-13 09:09:29,045 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-13 09:09:30,045 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-13 09:09:30,219 [main] INFO rpc.RpcClient: Creating Volume: vol1, with hadoop as owner and space quota set to -1 bytes, counts quota set to -1
2023-09-13 09:09:30,405 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Encryption set to false, Replication Type set to server-side default replication type, Namespace Quota set to -1, Space Quota set to -1 
2023-09-13 09:09:31,046 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-13 09:09:32,047 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-13 09:09:32,422 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2023-09-13 09:09:33,047 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-13 09:09:33,114 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2023-09-13 09:09:34,048 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-13 09:09:35,048 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-13 09:09:36,049 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-13 09:09:37,049 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2023-09-13 09:09:37,172 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=1, min=5607.966103, max=5607.966103, mean=5607.966103, stddev=0.0, median=5607.966103, p75=5607.966103, p95=5607.966103, p98=5607.966103, p99=5607.966103, p999=5607.966103, mean_rate=0.14991442484358414, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-09-13 09:09:37,173 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 16
2023-09-13 09:09:37,174 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-09-13 09:09:37,175 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20230913 09:09:37.601" endtime="20230913 09:09:37.610"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 09:09:37.612" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 09:09:37.611" endtime="20230913 09:09:37.612"/>
</kw>
<status status="PASS" starttime="20230913 09:09:13.688" endtime="20230913 09:09:37.613"/>
</kw>
<msg timestamp="20230913 09:09:37.613" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 09:09:13.688" endtime="20230913 09:09:37.613"/>
</kw>
<msg timestamp="20230913 09:09:37.613" level="INFO">${result} = 2023-09-13 09:09:20,344 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-13 09:09:20,732 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230913 09:09:13.684" endtime="20230913 09:09:37.613"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230913 09:09:37.614" endtime="20230913 09:09:37.615"/>
</kw>
<status status="PASS" starttime="20230913 09:09:13.678" endtime="20230913 09:09:37.615"/>
</kw>
<kw name="Freon OCKV" library="freon">
<arg>prefix=${random}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockv ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 09:09:37.648" level="INFO">Running command 'ozone freon ockv  -t 1 -n1 -p gCIjpdkkmA  2&gt;&amp;1'.</msg>
<msg timestamp="20230913 09:09:46.065" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 09:09:46.065" level="INFO">${output} = 2023-09-13 09:09:40,717 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-13 09:09:40,947 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230913 09:09:37.635" endtime="20230913 09:09:46.066"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 09:09:46.067" level="INFO">2023-09-13 09:09:40,717 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-13 09:09:40,947 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-09-13 09:09:40,948 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-09-13 09:09:41,039 [main] INFO freon.BaseFreonGenerator: Executing test with prefix gCIjpdkkmA and number-of-tests 1
2023-09-13 09:09:41,106 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-13 09:09:42,143 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-13 09:09:43,144 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-13 09:09:43,357 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2023-09-13 09:09:44,144 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-13 09:09:45,145 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2023-09-13 09:09:45,599 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-validate, count=1, min=88.659527, max=88.659527, mean=88.659527, stddev=0.0, median=88.659527, p75=88.659527, p95=88.659527, p98=88.659527, p99=88.659527, p999=88.659527, mean_rate=0.9273236456530656, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-09-13 09:09:45,603 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 5
2023-09-13 09:09:45,604 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-09-13 09:09:45,604 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20230913 09:09:46.066" endtime="20230913 09:09:46.067"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 09:09:46.068" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 09:09:46.067" endtime="20230913 09:09:46.068"/>
</kw>
<status status="PASS" starttime="20230913 09:09:37.635" endtime="20230913 09:09:46.068"/>
</kw>
<msg timestamp="20230913 09:09:46.068" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 09:09:37.631" endtime="20230913 09:09:46.068"/>
</kw>
<msg timestamp="20230913 09:09:46.069" level="INFO">${result} = 2023-09-13 09:09:40,717 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-13 09:09:40,947 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230913 09:09:37.626" endtime="20230913 09:09:46.069"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230913 09:09:46.069" endtime="20230913 09:09:46.069"/>
</kw>
<status status="PASS" starttime="20230913 09:09:37.616" endtime="20230913 09:09:46.069"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230913 09:09:13.658" endtime="20230913 09:09:46.069"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20230913 09:09:12.820" endtime="20230913 09:09:46.071"/>
</suite>
<suite id="s1-s2" name="Cli" source="/opt/hadoop/smoketest/topology/cli.robot">
<test id="s1-s2-t1" name="Run printTopology" line="27">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin printTopology</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 09:09:49.308" level="INFO">Running command 'ozone admin printTopology 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 09:09:53.929" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 09:09:53.929" level="INFO">${output} = State = HEALTHY
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rac...</msg>
<status status="PASS" starttime="20230913 09:09:49.305" endtime="20230913 09:09:53.929"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 09:09:53.930" level="INFO">State = HEALTHY
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.8(ozone-topology_datanode_5_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.9(ozone-topology_datanode_6_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2</msg>
<status status="PASS" starttime="20230913 09:09:53.929" endtime="20230913 09:09:53.930"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 09:09:53.931" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 09:09:53.931" endtime="20230913 09:09:53.931"/>
</kw>
<status status="PASS" starttime="20230913 09:09:49.304" endtime="20230913 09:09:53.931"/>
</kw>
<msg timestamp="20230913 09:09:53.931" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 09:09:49.304" endtime="20230913 09:09:53.932"/>
</kw>
<msg timestamp="20230913 09:09:53.932" level="INFO">${output} = State = HEALTHY
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rac...</msg>
<status status="PASS" starttime="20230913 09:09:49.304" endtime="20230913 09:09:53.932"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net)</arg>
<arg>IN_SERVICE</arg>
<arg>/rack2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230913 09:09:53.932" endtime="20230913 09:09:53.933"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230913 09:09:49.303" endtime="20230913 09:09:53.933"/>
</test>
<test id="s1-s2-t2" name="Run printTopology -o" line="30">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin printTopology -o</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 09:09:53.939" level="INFO">Running command 'ozone admin printTopology -o 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 09:09:58.501" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 09:09:58.501" level="INFO">${output} = State = HEALTHY
Location: /rack1
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net) IN_SERVICE
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net) IN_SERVICE
 10.5.0.6(ozone-topology_data...</msg>
<status status="PASS" starttime="20230913 09:09:53.936" endtime="20230913 09:09:58.501"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 09:09:58.503" level="INFO">State = HEALTHY
Location: /rack1
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net) IN_SERVICE
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net) IN_SERVICE
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net) IN_SERVICE
Location: /rack2
 10.5.0.8(ozone-topology_datanode_5_1.ozone-topology_net) IN_SERVICE
 10.5.0.9(ozone-topology_datanode_6_1.ozone-topology_net) IN_SERVICE
 10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net) IN_SERVICE</msg>
<status status="PASS" starttime="20230913 09:09:58.502" endtime="20230913 09:09:58.503"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 09:09:58.504" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 09:09:58.503" endtime="20230913 09:09:58.504"/>
</kw>
<status status="PASS" starttime="20230913 09:09:53.936" endtime="20230913 09:09:58.504"/>
</kw>
<msg timestamp="20230913 09:09:58.504" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 09:09:53.935" endtime="20230913 09:09:58.504"/>
</kw>
<msg timestamp="20230913 09:09:58.505" level="INFO">${output} = State = HEALTHY
Location: /rack1
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net) IN_SERVICE
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net) IN_SERVICE
 10.5.0.6(ozone-topology_data...</msg>
<status status="PASS" starttime="20230913 09:09:53.935" endtime="20230913 09:09:58.505"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Location: /rack2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230913 09:09:58.505" endtime="20230913 09:09:58.505"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net) IN_SERVICE</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230913 09:09:58.505" endtime="20230913 09:09:58.506"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230913 09:09:53.934" endtime="20230913 09:09:58.506"/>
</test>
<test id="s1-s2-t3" name="Run printTopology --operational-state IN_SERVICE" line="34">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin printTopology --operational-state IN_SERVICE</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 09:09:58.513" level="INFO">Running command 'ozone admin printTopology --operational-state IN_SERVICE 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 09:10:02.772" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 09:10:02.772" level="INFO">${output} = State = HEALTHY
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rac...</msg>
<status status="PASS" starttime="20230913 09:09:58.510" endtime="20230913 09:10:02.772"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 09:10:02.773" level="INFO">State = HEALTHY
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.8(ozone-topology_datanode_5_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.9(ozone-topology_datanode_6_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2</msg>
<status status="PASS" starttime="20230913 09:10:02.772" endtime="20230913 09:10:02.773"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 09:10:02.774" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 09:10:02.774" endtime="20230913 09:10:02.774"/>
</kw>
<status status="PASS" starttime="20230913 09:09:58.509" endtime="20230913 09:10:02.774"/>
</kw>
<msg timestamp="20230913 09:10:02.774" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 09:09:58.509" endtime="20230913 09:10:02.775"/>
</kw>
<msg timestamp="20230913 09:10:02.775" level="INFO">${output} = State = HEALTHY
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rac...</msg>
<status status="PASS" starttime="20230913 09:09:58.508" endtime="20230913 09:10:02.775"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net)</arg>
<arg>IN_SERVICE</arg>
<arg>/rack2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230913 09:10:02.775" endtime="20230913 09:10:02.776"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230913 09:09:58.507" endtime="20230913 09:10:02.776"/>
</test>
<test id="s1-s2-t4" name="Run printTopology --node-state HEALTHY" line="37">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin printTopology --node-state HEALTHY</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 09:10:02.782" level="INFO">Running command 'ozone admin printTopology --node-state HEALTHY 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 09:10:06.792" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 09:10:06.792" level="INFO">${output} = State = HEALTHY
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rac...</msg>
<status status="PASS" starttime="20230913 09:10:02.779" endtime="20230913 09:10:06.792"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 09:10:06.793" level="INFO">State = HEALTHY
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.8(ozone-topology_datanode_5_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.9(ozone-topology_datanode_6_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2</msg>
<status status="PASS" starttime="20230913 09:10:06.793" endtime="20230913 09:10:06.794"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 09:10:06.794" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 09:10:06.794" endtime="20230913 09:10:06.794"/>
</kw>
<status status="PASS" starttime="20230913 09:10:02.779" endtime="20230913 09:10:06.795"/>
</kw>
<msg timestamp="20230913 09:10:06.795" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 09:10:02.779" endtime="20230913 09:10:06.795"/>
</kw>
<msg timestamp="20230913 09:10:06.795" level="INFO">${output} = State = HEALTHY
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rac...</msg>
<status status="PASS" starttime="20230913 09:10:02.778" endtime="20230913 09:10:06.795"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net)</arg>
<arg>IN_SERVICE</arg>
<arg>/rack2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230913 09:10:06.795" endtime="20230913 09:10:06.796"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230913 09:10:02.777" endtime="20230913 09:10:06.796"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20230913 09:09:49.249" endtime="20230913 09:10:06.798"/>
</suite>
<suite id="s1-s3" name="Recon" source="/opt/hadoop/smoketest/recon">
<suite id="s1-s3-s1" name="Recon-Api" source="/opt/hadoop/smoketest/recon/recon-api.robot">
<test id="s1-s3-s1-t1" name="Check if Recon picks up OM data" line="61">
<kw name="Execute" library="os">
<arg>ozone sh volume create recon</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 09:10:09.795" level="INFO">Running command 'ozone sh volume create recon 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 09:10:13.928" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 09:10:13.928" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230913 09:10:09.792" endtime="20230913 09:10:13.928"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 09:10:13.930" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230913 09:10:13.929" endtime="20230913 09:10:13.930"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 09:10:13.931" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 09:10:13.930" endtime="20230913 09:10:13.931"/>
</kw>
<status status="PASS" starttime="20230913 09:10:09.792" endtime="20230913 09:10:13.931"/>
</kw>
<msg timestamp="20230913 09:10:13.931" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 09:10:09.791" endtime="20230913 09:10:13.931"/>
</kw>
<status status="PASS" starttime="20230913 09:10:09.791" endtime="20230913 09:10:13.931"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create recon/api --layout=LEGACY</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 09:10:13.937" level="INFO">Running command 'ozone sh bucket create recon/api --layout=LEGACY 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 09:10:18.194" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 09:10:18.194" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230913 09:10:13.934" endtime="20230913 09:10:18.194"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 09:10:18.196" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230913 09:10:18.195" endtime="20230913 09:10:18.196"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 09:10:18.196" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 09:10:18.196" endtime="20230913 09:10:18.196"/>
</kw>
<status status="PASS" starttime="20230913 09:10:13.932" endtime="20230913 09:10:18.197"/>
</kw>
<msg timestamp="20230913 09:10:18.197" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 09:10:13.932" endtime="20230913 09:10:18.197"/>
</kw>
<status status="PASS" starttime="20230913 09:10:13.931" endtime="20230913 09:10:18.197"/>
</kw>
<kw name="Freon OCKG" library="freon">
<arg>n=10</arg>
<arg>args=-s 1025 -v recon -b api</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 09:10:18.202" level="INFO">Running command 'ozone freon ockg  -t 1 -n10 -p ockg -s 1025 -v recon -b api 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 09:10:28.904" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 09:10:28.904" level="INFO">${output} = 2023-09-13 09:10:20,611 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-13 09:10:20,713 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230913 09:10:18.199" endtime="20230913 09:10:28.905"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 09:10:28.907" level="INFO">2023-09-13 09:10:20,611 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-13 09:10:20,713 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-09-13 09:10:20,713 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-09-13 09:10:20,781 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ockg and number-of-tests 10
2023-09-13 09:10:20,836 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2023-09-13 09:10:21,838 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2023-09-13 09:10:22,838 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2023-09-13 09:10:22,999 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2023-09-13 09:10:23,454 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2023-09-13 09:10:23,839 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2023-09-13 09:10:24,840 [Thread-5] INFO freon.ProgressBar: Progress: 10.00 % (1 out of 10)
2023-09-13 09:10:25,841 [Thread-5] INFO freon.ProgressBar: Progress: 10.00 % (1 out of 10)
2023-09-13 09:10:26,841 [Thread-5] INFO freon.ProgressBar: Progress: 60.00 % (6 out of 10)
2023-09-13 09:10:27,842 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (10 out of 10)
2023-09-13 09:10:28,527 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=10, min=103.875938, max=2398.374698, mean=509.9054670868498, stddev=715.558752499817, median=149.060751, p75=403.610888, p95=2398.374698, p98=2398.374698, p99=2398.374698, p999=2398.374698, mean_rate=1.5938376849204672, m1=1.6, m5=1.6, m15=1.6, rate_unit=events/second, duration_unit=milliseconds
2023-09-13 09:10:28,528 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 8
2023-09-13 09:10:28,528 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-09-13 09:10:28,530 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 10</msg>
<status status="PASS" starttime="20230913 09:10:28.905" endtime="20230913 09:10:28.907"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 09:10:28.909" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 09:10:28.909" endtime="20230913 09:10:28.909"/>
</kw>
<status status="PASS" starttime="20230913 09:10:18.199" endtime="20230913 09:10:28.909"/>
</kw>
<msg timestamp="20230913 09:10:28.912" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 09:10:18.199" endtime="20230913 09:10:28.912"/>
</kw>
<msg timestamp="20230913 09:10:28.913" level="INFO">${result} = 2023-09-13 09:10:20,611 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-13 09:10:20,713 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230913 09:10:18.198" endtime="20230913 09:10:28.913"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230913 09:10:28.913" endtime="20230913 09:10:28.913"/>
</kw>
<status status="PASS" starttime="20230913 09:10:18.197" endtime="20230913 09:10:28.913"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Check if Recon picks up container from OM</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit as ozone admin</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230913 09:10:28.915" endtime="20230913 09:10:28.915"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/containers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 09:10:28.920" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 09:10:29.173" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 09:10:29.173" level="INFO">${output} = {"data":{"totalCount":4,"prevKey":4,"containers":[{"ContainerID":1,"NumberOfKeys":0,"pipelines":null},{"ContainerID":2,"NumberOfKeys":0,"pipelines":null},{"ContainerID":3,"NumberOfKeys":0,"pipelines":...</msg>
<status status="PASS" starttime="20230913 09:10:28.917" endtime="20230913 09:10:29.173"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 09:10:29.174" level="INFO">{"data":{"totalCount":4,"prevKey":4,"containers":[{"ContainerID":1,"NumberOfKeys":0,"pipelines":null},{"ContainerID":2,"NumberOfKeys":0,"pipelines":null},{"ContainerID":3,"NumberOfKeys":0,"pipelines":null},{"ContainerID":4,"NumberOfKeys":0,"pipelines":null}]}}</msg>
<status status="PASS" starttime="20230913 09:10:29.174" endtime="20230913 09:10:29.174"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 09:10:29.175" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 09:10:29.175" endtime="20230913 09:10:29.175"/>
</kw>
<status status="PASS" starttime="20230913 09:10:28.917" endtime="20230913 09:10:29.175"/>
</kw>
<msg timestamp="20230913 09:10:29.175" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 09:10:28.916" endtime="20230913 09:10:29.176"/>
</kw>
<msg timestamp="20230913 09:10:29.176" level="INFO">${result} = {"data":{"totalCount":4,"prevKey":4,"containers":[{"ContainerID":1,"NumberOfKeys":0,"pipelines":null},{"ContainerID":2,"NumberOfKeys":0,"pipelines":null},{"ContainerID":3,"NumberOfKeys":0,"pipelines":...</msg>
<status status="PASS" starttime="20230913 09:10:28.916" endtime="20230913 09:10:29.176"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"ContainerID\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230913 09:10:29.176" endtime="20230913 09:10:29.177"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/utilization/fileCount</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 09:10:29.184" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 09:10:29.219" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 09:10:29.219" level="INFO">${output} = [{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20230913 09:10:29.180" endtime="20230913 09:10:29.219"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 09:10:29.220" level="INFO">[{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20230913 09:10:29.219" endtime="20230913 09:10:29.220"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 09:10:29.221" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 09:10:29.221" endtime="20230913 09:10:29.222"/>
</kw>
<status status="PASS" starttime="20230913 09:10:29.180" endtime="20230913 09:10:29.222"/>
</kw>
<msg timestamp="20230913 09:10:29.222" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 09:10:29.179" endtime="20230913 09:10:29.223"/>
</kw>
<msg timestamp="20230913 09:10:29.223" level="INFO">${result} = [{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20230913 09:10:29.177" endtime="20230913 09:10:29.223"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20230913 09:10:29.224" level="FAIL">'[{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]' does not contain '"fileSize":2048,"count":10'</msg>
<status status="FAIL" starttime="20230913 09:10:29.223" endtime="20230913 09:10:29.224"/>
</kw>
<status status="FAIL" starttime="20230913 09:10:28.914" endtime="20230913 09:10:29.224"/>
</kw>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit as ozone admin</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230913 09:10:39.225" endtime="20230913 09:10:39.226"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/containers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 09:10:39.230" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 09:10:39.246" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 09:10:39.246" level="INFO">${output} = {"data":{"totalCount":4,"prevKey":4,"containers":[{"ContainerID":1,"NumberOfKeys":0,"pipelines":null},{"ContainerID":2,"NumberOfKeys":0,"pipelines":null},{"ContainerID":3,"NumberOfKeys":0,"pipelines":...</msg>
<status status="PASS" starttime="20230913 09:10:39.227" endtime="20230913 09:10:39.246"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 09:10:39.247" level="INFO">{"data":{"totalCount":4,"prevKey":4,"containers":[{"ContainerID":1,"NumberOfKeys":0,"pipelines":null},{"ContainerID":2,"NumberOfKeys":0,"pipelines":null},{"ContainerID":3,"NumberOfKeys":0,"pipelines":null},{"ContainerID":4,"NumberOfKeys":0,"pipelines":null}]}}</msg>
<status status="PASS" starttime="20230913 09:10:39.247" endtime="20230913 09:10:39.247"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 09:10:39.248" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 09:10:39.248" endtime="20230913 09:10:39.248"/>
</kw>
<status status="PASS" starttime="20230913 09:10:39.227" endtime="20230913 09:10:39.248"/>
</kw>
<msg timestamp="20230913 09:10:39.249" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 09:10:39.227" endtime="20230913 09:10:39.249"/>
</kw>
<msg timestamp="20230913 09:10:39.249" level="INFO">${result} = {"data":{"totalCount":4,"prevKey":4,"containers":[{"ContainerID":1,"NumberOfKeys":0,"pipelines":null},{"ContainerID":2,"NumberOfKeys":0,"pipelines":null},{"ContainerID":3,"NumberOfKeys":0,"pipelines":...</msg>
<status status="PASS" starttime="20230913 09:10:39.226" endtime="20230913 09:10:39.249"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"ContainerID\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230913 09:10:39.249" endtime="20230913 09:10:39.250"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/utilization/fileCount</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 09:10:39.254" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 09:10:39.270" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 09:10:39.270" level="INFO">${output} = [{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20230913 09:10:39.251" endtime="20230913 09:10:39.270"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 09:10:39.271" level="INFO">[{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20230913 09:10:39.271" endtime="20230913 09:10:39.271"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 09:10:39.272" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 09:10:39.272" endtime="20230913 09:10:39.272"/>
</kw>
<status status="PASS" starttime="20230913 09:10:39.251" endtime="20230913 09:10:39.272"/>
</kw>
<msg timestamp="20230913 09:10:39.273" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 09:10:39.250" endtime="20230913 09:10:39.273"/>
</kw>
<msg timestamp="20230913 09:10:39.273" level="INFO">${result} = [{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20230913 09:10:39.250" endtime="20230913 09:10:39.273"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20230913 09:10:39.274" level="FAIL">'[{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]' does not contain '"fileSize":2048,"count":10'</msg>
<status status="FAIL" starttime="20230913 09:10:39.273" endtime="20230913 09:10:39.274"/>
</kw>
<status status="FAIL" starttime="20230913 09:10:39.224" endtime="20230913 09:10:39.274"/>
</kw>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit as ozone admin</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230913 09:10:49.275" endtime="20230913 09:10:49.276"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/containers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 09:10:49.281" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 09:10:49.295" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 09:10:49.295" level="INFO">${output} = {"data":{"totalCount":4,"prevKey":4,"containers":[{"ContainerID":1,"NumberOfKeys":0,"pipelines":null},{"ContainerID":2,"NumberOfKeys":0,"pipelines":null},{"ContainerID":3,"NumberOfKeys":0,"pipelines":...</msg>
<status status="PASS" starttime="20230913 09:10:49.278" endtime="20230913 09:10:49.295"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 09:10:49.297" level="INFO">{"data":{"totalCount":4,"prevKey":4,"containers":[{"ContainerID":1,"NumberOfKeys":0,"pipelines":null},{"ContainerID":2,"NumberOfKeys":0,"pipelines":null},{"ContainerID":3,"NumberOfKeys":0,"pipelines":null},{"ContainerID":4,"NumberOfKeys":0,"pipelines":null}]}}</msg>
<status status="PASS" starttime="20230913 09:10:49.296" endtime="20230913 09:10:49.297"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 09:10:49.297" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 09:10:49.297" endtime="20230913 09:10:49.298"/>
</kw>
<status status="PASS" starttime="20230913 09:10:49.277" endtime="20230913 09:10:49.298"/>
</kw>
<msg timestamp="20230913 09:10:49.298" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 09:10:49.277" endtime="20230913 09:10:49.298"/>
</kw>
<msg timestamp="20230913 09:10:49.298" level="INFO">${result} = {"data":{"totalCount":4,"prevKey":4,"containers":[{"ContainerID":1,"NumberOfKeys":0,"pipelines":null},{"ContainerID":2,"NumberOfKeys":0,"pipelines":null},{"ContainerID":3,"NumberOfKeys":0,"pipelines":...</msg>
<status status="PASS" starttime="20230913 09:10:49.276" endtime="20230913 09:10:49.298"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"ContainerID\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230913 09:10:49.298" endtime="20230913 09:10:49.299"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/utilization/fileCount</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 09:10:49.304" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 09:10:49.324" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 09:10:49.324" level="INFO">${output} = [{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1},{"volume":"recon","bucket":"api","fileSize":2048,"count":10}]</msg>
<status status="PASS" starttime="20230913 09:10:49.301" endtime="20230913 09:10:49.324"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 09:10:49.326" level="INFO">[{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1},{"volume":"recon","bucket":"api","fileSize":2048,"count":10}]</msg>
<status status="PASS" starttime="20230913 09:10:49.325" endtime="20230913 09:10:49.326"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 09:10:49.327" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 09:10:49.326" endtime="20230913 09:10:49.327"/>
</kw>
<status status="PASS" starttime="20230913 09:10:49.300" endtime="20230913 09:10:49.327"/>
</kw>
<msg timestamp="20230913 09:10:49.327" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 09:10:49.300" endtime="20230913 09:10:49.327"/>
</kw>
<msg timestamp="20230913 09:10:49.327" level="INFO">${result} = [{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1},{"volume":"recon","bucket":"api","fileSize":2048,"count":10}]</msg>
<status status="PASS" starttime="20230913 09:10:49.299" endtime="20230913 09:10:49.327"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230913 09:10:49.328" endtime="20230913 09:10:49.328"/>
</kw>
<status status="PASS" starttime="20230913 09:10:49.275" endtime="20230913 09:10:49.328"/>
</kw>
<status status="PASS" starttime="20230913 09:10:28.914" endtime="20230913 09:10:49.328"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230913 09:10:09.790" endtime="20230913 09:10:49.328"/>
</test>
<test id="s1-s3-s1-t2" name="Check if Recon picks up DN heartbeats" line="71">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/datanodes</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 09:10:49.335" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/datanodes 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 09:10:49.372" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 09:10:49.372" level="INFO">${output} = {"totalCount":6,"datanodes":[{"uuid":"7b06696f-4ab9-4171-a611-4708d871733a","hostname":"ozone-topology_datanode_4_1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":0,"stor...</msg>
<status status="PASS" starttime="20230913 09:10:49.332" endtime="20230913 09:10:49.373"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 09:10:49.375" level="INFO">{"totalCount":6,"datanodes":[{"uuid":"7b06696f-4ab9-4171-a611-4708d871733a","hostname":"ozone-topology_datanode_4_1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":0,"storageReport":{"capacity":89297309696,"used":4096,"remaining":15258681344},"pipelines":[{"pipelineID":"2d949b71-2258-4e82-aa16-5c1082044b0d","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_5_1.ozone-topology_net"},{"pipelineID":"301dc9c8-b363-49f4-af53-618fe91a07a6","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_4_1.ozone-topology_net"},{"pipelineID":"0c5d7ce0-38ca-4f98-90f8-ceae5c291ab4","replicationType":"RATIS","replicationFactor":"ONE","leaderNode":"ozone-topology_datanode_4_1.ozone-topology_net"}],"containers":2,"openContainers":3,"leaderCount":2,"version":"1.4.0-SNAPSHOT","setupTime":1694596067520,"revision":"5eea5eccb03d806e0bc8ed17da8dc0e5907f23ee","buildDate":"2023-09-13T08:23Z","layoutVersion":7,"networkLocation":"/rack2"},{"uuid":"1639ba2a-71e0-4802-94ea-195307088fa5","hostname":"ozone-topology_datanode_6_1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":0,"storageReport":{"capacity":89297309696,"used":4096,"remaining":15258595328},"pipelines":[{"pipelineID":"301dc9c8-b363-49f4-af53-618fe91a07a6","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_4_1.ozone-topology_net"},{"pipelineID":"61620240-07f9-42b9-8826-aea8deac113b","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_1_1.ozone-topology_net"},{"pipelineID":"17cb31d7-91cb-4e57-81f9-23eca3aaf171","replicationType":"RATIS","replicationFactor":"ONE","leaderNode":"ozone-topology_datanode_6_1.ozone-topology_net"}],"containers":2,"openContainers":2,"leaderCount":1,"version":"1.4.0-SNAPSHOT","setupTime":1694596068641,"revision":"5eea5eccb03d806e0bc8ed17da8dc0e5907f23ee","buildDate":"2023-09-13T08:23Z","layoutVersion":7,"networkLocation":"/rack2"},{"uuid":"a214195e-be19-497a-9d57-4218b0657b84","hostname":"ozone-topology_datanode_1_1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":0,"storageReport":{"capacity":89297309696,"used":8192,"remaining":15258595328},"pipelines":[{"pipelineID":"301dc9c8-b363-49f4-af53-618fe91a07a6","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_4_1.ozone-topology_net"},{"pipelineID":"0692b172-16ce-41f9-a361-fca3d452c26f","replicationType":"RATIS","replicationFactor":"ONE","leaderNode":"ozone-topology_datanode_1_1.ozone-topology_net"},{"pipelineID":"61620240-07f9-42b9-8826-aea8deac113b","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_1_1.ozone-topology_net"}],"containers":2,"openContainers":2,"leaderCount":2,"version":"1.4.0-SNAPSHOT","setupTime":1694596068315,"revision":"5eea5eccb03d806e0bc8ed17da8dc0e5907f23ee","buildDate":"2023-09-13T08:23Z","layoutVersion":7,"networkLocation":"/rack1"},{"uuid":"fe2e6557-2e4a-4415-bd73-70c6ed1b52d2","hostname":"ozone-topology_datanode_5_1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":0,"storageReport":{"capacity":89297309696,"used":4096,"remaining":15258595328},"pipelines":[{"pipelineID":"2d949b71-2258-4e82-aa16-5c1082044b0d","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_5_1.ozone-topology_net"},{"pipelineID":"9a2f10e6-be9c-4ec0-ab1a-42571cade8f7","replicationType":"RATIS","replicationFactor":"ONE","leaderNode":"ozone-topology_datanode_5_1.ozone-topology_net"},{"pipelineID":"916f9b15-fae5-43d5-b3ae-0782b0fbcc55","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_3_1.ozone-topology_net"}],"containers":2,"openContainers":3,"leaderCount":2,"version":"1.4.0-SNAPSHOT","setupTime":1694596068492,"revision":"5eea5eccb03d806e0bc8ed17da8dc0e5907f23ee","buildDate":"2023-09-13T08:23Z","layoutVersion":7,"networkLocation":"/rack2"},{"uuid":"d1c6ce0f-0323-4eb3-ad1d-e505e6a4b548","hostname":"ozone-topology_datanode_2_1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":0,"storageReport":{"capacity":89297309696,"used":4096,"remaining":15258595328},"pipelines":[{"pipelineID":"2d949b71-2258-4e82-aa16-5c1082044b0d","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_5_1.ozone-topology_net"},{"pipelineID":"916f9b15-fae5-43d5-b3ae-0782b0fbcc55","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_3_1.ozone-topology_net"},{"pipelineID":"579615c3-c036-481f-ac2a-9888080079a4","replicationType":"RATIS","replicationFactor":"ONE","leaderNode":"ozone-topology_datanode_2_1.ozone-topology_net"}],"containers":2,"openContainers":3,"leaderCount":1,"version":"1.4.0-SNAPSHOT","setupTime":1694596068657,"revision":"5eea5eccb03d806e0bc8ed17da8dc0e5907f23ee","buildDate":"2023-09-13T08:23Z","layoutVersion":7,"networkLocation":"/rack1"},{"uuid":"dc020d36-aaee-4b27-9542-dd6d88f6f4fb","hostname":"ozone-topology_datanode_3_1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":0,"storageReport":{"capacity":89297309696,"used":4096,"remaining":15258595328},"pipelines":[{"pipelineID":"916f9b15-fae5-43d5-b3ae-0782b0fbcc55","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_3_1.ozone-topology_net"},{"pipelineID":"61620240-07f9-42b9-8826-aea8deac113b","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_1_1.ozone-topology_net"},{"pipelineID":"0e637c0a-0a94-4bf3-8190-0afeb5ede963","replicationType":"RATIS","replicationFactor":"ONE","leaderNode":"ozone-topology_datanode_3_1.ozone-topology_net"}],"containers":2,"openContainers":2,"leaderCount":2,"version":"1.4.0-SNAPSHOT","setupTime":1694596068612,"revision":"5eea5eccb03d806e0bc8ed17da8dc0e5907f23ee","buildDate":"2023-09-13T08:23Z","layoutVersion":7,"networkLocation":"/rack1"}]}</msg>
<status status="PASS" starttime="20230913 09:10:49.373" endtime="20230913 09:10:49.376"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 09:10:49.377" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 09:10:49.376" endtime="20230913 09:10:49.377"/>
</kw>
<status status="PASS" starttime="20230913 09:10:49.331" endtime="20230913 09:10:49.377"/>
</kw>
<msg timestamp="20230913 09:10:49.377" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 09:10:49.331" endtime="20230913 09:10:49.377"/>
</kw>
<msg timestamp="20230913 09:10:49.377" level="INFO">${result} = {"totalCount":6,"datanodes":[{"uuid":"7b06696f-4ab9-4171-a611-4708d871733a","hostname":"ozone-topology_datanode_4_1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":0,"stor...</msg>
<status status="PASS" starttime="20230913 09:10:49.330" endtime="20230913 09:10:49.377"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>datanodes</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230913 09:10:49.378" endtime="20230913 09:10:49.378"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>datanode_1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230913 09:10:49.378" endtime="20230913 09:10:49.378"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>datanode_2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230913 09:10:49.378" endtime="20230913 09:10:49.379"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>datanode_3</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230913 09:10:49.379" endtime="20230913 09:10:49.380"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/pipelines</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 09:10:49.384" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/pipelines 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 09:10:49.454" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 09:10:49.454" level="INFO">${output} = {"totalCount":10,"pipelines":[{"pipelineId":"2d949b71-2258-4e82-aa16-5c1082044b0d","status":"OPEN","leaderNode":"ozone-topology_datanode_5_1.ozone-topology_net","datanodes":[{"level":0,"parent":null,"...</msg>
<status status="PASS" starttime="20230913 09:10:49.381" endtime="20230913 09:10:49.454"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 09:10:49.455" level="INFO">{"totalCount":10,"pipelines":[{"pipelineId":"2d949b71-2258-4e82-aa16-5c1082044b0d","status":"OPEN","leaderNode":"ozone-topology_datanode_5_1.ozone-topology_net","datanodes":[{"level":0,"parent":null,"cost":0,"uuid":"fe2e6557-2e4a-4415-bd73-70c6ed1b52d2","uuidString":"fe2e6557-2e4a-4415-bd73-70c6ed1b52d2","ipAddress":"10.5.0.8","hostName":"ozone-topology_datanode_5_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":9864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":894289427,"decommissioned":false,"maintenance":false,"networkName":"fe2e6557-2e4a-4415-bd73-70c6ed1b52d2","networkLocation":"/rack2","networkFullPath":"/rack2/fe2e6557-2e4a-4415-bd73-70c6ed1b52d2","numOfLeaves":1},{"level":0,"parent":null,"cost":0,"uuid":"d1c6ce0f-0323-4eb3-ad1d-e505e6a4b548","uuidString":"d1c6ce0f-0323-4eb3-ad1d-e505e6a4b548","ipAddress":"10.5.0.5","hostName":"ozone-topology_datanode_2_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":9864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":788724110,"decommissioned":false,"maintenance":false,"networkName":"d1c6ce0f-0323-4eb3-ad1d-e505e6a4b548","networkLocation":"/rack1","networkFullPath":"/rack1/d1c6ce0f-0323-4eb3-ad1d-e505e6a4b548","numOfLeaves":1},{"level":0,"parent":null,"cost":0,"uuid":"7b06696f-4ab9-4171-a611-4708d871733a","uuidString":"7b06696f-4ab9-4171-a611-4708d871733a","ipAddress":"10.5.0.7","hostName":"ozone-topology_datanode_4_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":9864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":1865765028,"decommissioned":false,"maintenance":false,"networkName":"7b06696f-4ab9-4171-a611-4708d871733a","networkLocation":"/rack2","networkFullPath":"/rack2/7b06696f-4ab9-4171-a611-4708d871733a","numOfLeaves":1}],"lastLeaderElection":0,"duration":116230,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"THREE","containers":1},{"pipelineId":"301dc9c8-b363-49f4-af53-618fe91a07a6","status":"OPEN","leaderNode":"ozone-topology_datanode_4_1.ozone-topology_net","datanodes":[{"level":0,"parent":null,"cost":0,"uuid":"7b06696f-4ab9-4171-a611-4708d871733a","uuidString":"7b06696f-4ab9-4171-a611-4708d871733a","ipAddress":"10.5.0.7","hostName":"ozone-topology_datanode_4_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":9864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":1865765028,"decommissioned":false,"maintenance":false,"networkName":"7b06696f-4ab9-4171-a611-4708d871733a","networkLocation":"/rack2","networkFullPath":"/rack2/7b06696f-4ab9-4171-a611-4708d871733a","numOfLeaves":1},{"level":0,"parent":null,"cost":0,"uuid":"a214195e-be19-497a-9d57-4218b0657b84","uuidString":"a214195e-be19-497a-9d57-4218b0657b84","ipAddress":"10.5.0.4","hostName":"ozone-topology_datanode_1_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":9864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":655861077,"decommissioned":false,"maintenance":false,"networkName":"a214195e-be19-497a-9d57-4218b0657b84","networkLocation":"/rack1","networkFullPath":"/rack1/a214195e-be19-497a-9d57-4218b0657b84","numOfLeaves":1},{"level":0,"parent":null,"cost":0,"uuid":"1639ba2a-71e0-4802-94ea-195307088fa5","uuidString":"1639ba2a-71e0-4802-94ea-195307088fa5","ipAddress":"10.5.0.9","hostName":"ozone-topology_datanode_6_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":9864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":-1907064413,"decommissioned":false,"maintenance":false,"networkName":"1639ba2a-71e0-4802-94ea-195307088fa5","networkLocation":"/rack2","networkFullPath":"/rack2/1639ba2a-71e0-4802-94ea-195307088fa5","numOfLeaves":1}],"lastLeaderElection":0,"duration":116356,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"THREE","containers":1},{"pipelineId":"9a2f10e6-be9c-4ec0-ab1a-42571cade8f7","status":"OPEN","leaderNode":"ozone-topology_datanode_5_1.ozone-topology_net","datanodes":[{"level":0,"parent":null,"cost":0,"uuid":"fe2e6557-2e4a-4415-bd73-70c6ed1b52d2","uuidString":"fe2e6557-2e4a-4415-bd73-70c6ed1b52d2","ipAddress":"10.5.0.8","hostName":"ozone-topology_datanode_5_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":9864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":894289427,"decommissioned":false,"maintenance":false,"networkName":"fe2e6557-2e4a-4415-bd73-70c6ed1b52d2","networkLocation":"/rack2","networkFullPath":"/rack2/fe2e6557-2e4a-4415-bd73-70c6ed1b52d2","numOfLeaves":1}],"lastLeaderElection":0,"duration":115949,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"ONE","containers":0},{"pipelineId":"0c5d7ce0-38ca-4f98-90f8-ceae5c291ab4","status":"OPEN","leaderNode":"ozone-topology_datanode_4_1.ozone-topology_net","datanodes":[{"level":0,"parent":null,"cost":0,"uuid":"7b06696f-4ab9-4171-a611-4708d871733a","uuidString":"7b06696f-4ab9-4171-a611-4708d871733a","ipAddress":"10.5.0.7","hostName":"ozone-topology_datanode_4_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":9864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":1865765028,"decommissioned":false,"maintenance":false,"networkName":"7b06696f-4ab9-4171-a611-4708d871733a","networkLocation":"/rack2","networkFullPath":"/rack2/7b06696f-4ab9-4171-a611-4708d871733a","numOfLeaves":1}],"lastLeaderElection":0,"duration":116295,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"ONE","containers":0},{"pipelineId":"916f9b15-fae5-43d5-b3ae-0782b0fbcc55","status":"OPEN","leaderNode":"ozone-topology_datanode_3_1.ozone-topology_net","datanodes":[{"level":0,"parent":null,"cost":0,"uuid":"fe2e6557-2e4a-4415-bd73-70c6ed1b52d2","uuidString":"fe2e6557-2e4a-4415-bd73-70c6ed1b52d2","ipAddress":"10.5.0.8","hostName":"ozone-topology_datanode_5_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":9864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":894289427,"decommissioned":false,"maintenance":false,"networkName":"fe2e6557-2e4a-4415-bd73-70c6ed1b52d2","networkLocation":"/rack2","networkFullPath":"/rack2/fe2e6557-2e4a-4415-bd73-70c6ed1b52d2","numOfLeaves":1},{"level":0,"parent":null,"cost":0,"uuid":"d1c6ce0f-0323-4eb3-ad1d-e505e6a4b548","uuidString":"d1c6ce0f-0323-4eb3-ad1d-e505e6a4b548","ipAddress":"10.5.0.5","hostName":"ozone-topology_datanode_2_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":9864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":788724110,"decommissioned":false,"maintenance":false,"networkName":"d1c6ce0f-0323-4eb3-ad1d-e505e6a4b548","networkLocation":"/rack1","networkFullPath":"/rack1/d1c6ce0f-0323-4eb3-ad1d-e505e6a4b548","numOfLeaves":1},{"level":0,"parent":null,"cost":0,"uuid":"dc020d36-aaee-4b27-9542-dd6d88f6f4fb","uuidString":"dc020d36-aaee-4b27-9542-dd6d88f6f4fb","ipAddress":"10.5.0.6","hostName":"ozone-topology_datanode_3_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":9864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":682694687,"decommissioned":false,"maintenance":false,"networkName":"dc020d36-aaee-4b27-9542-dd6d88f6f4fb","networkLocation":"/rack1","networkFullPath":"/rack1/dc020d36-aaee-4b27-9542-dd6d88f6f4fb","numOfLeaves":1}],"lastLeaderElection":0,"duration":116059,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"THREE","containers":1},{"pipelineId":"0692b172-16ce-41f9-a361-fca3d452c26f","status":"OPEN","leaderNode":"ozone-topology_datanode_1_1.ozone-topology_net","datanodes":[{"level":0,"parent":null,"cost":0,"uuid":"a214195e-be19-497a-9d57-4218b0657b84","uuidString":"a214195e-be19-497a-9d57-4218b0657b84","ipAddress":"10.5.0.4","hostName":"ozone-topology_datanode_1_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":9864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":655861077,"decommissioned":false,"maintenance":false,"networkName":"a214195e-be19-497a-9d57-4218b0657b84","networkLocation":"/rack1","networkFullPath":"/rack1/a214195e-be19-497a-9d57-4218b0657b84","numOfLeaves":1}],"lastLeaderElection":0,"duration":116124,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"ONE","containers":0},{"pipelineId":"579615c3-c036-481f-ac2a-9888080079a4","status":"OPEN","leaderNode":"ozone-topology_datanode_2_1.ozone-topology_net","datanodes":[{"level":0,"parent":null,"cost":0,"uuid":"d1c6ce0f-0323-4eb3-ad1d-e505e6a4b548","uuidString":"d1c6ce0f-0323-4eb3-ad1d-e505e6a4b548","ipAddress":"10.5.0.5","hostName":"ozone-topology_datanode_2_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":9864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":788724110,"decommissioned":false,"maintenance":false,"networkName":"d1c6ce0f-0323-4eb3-ad1d-e505e6a4b548","networkLocation":"/rack1","networkFullPath":"/rack1/d1c6ce0f-0323-4eb3-ad1d-e505e6a4b548","numOfLeaves":1}],"lastLeaderElection":0,"duration":118155,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"ONE","containers":0},{"pipelineId":"61620240-07f9-42b9-8826-aea8deac113b","status":"OPEN","leaderNode":"ozone-topology_datanode_1_1.ozone-topology_net","datanodes":[{"level":0,"parent":null,"cost":0,"uuid":"dc020d36-aaee-4b27-9542-dd6d88f6f4fb","uuidString":"dc020d36-aaee-4b27-9542-dd6d88f6f4fb","ipAddress":"10.5.0.6","hostName":"ozone-topology_datanode_3_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":9864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":682694687,"decommissioned":false,"maintenance":false,"networkName":"dc020d36-aaee-4b27-9542-dd6d88f6f4fb","networkLocation":"/rack1","networkFullPath":"/rack1/dc020d36-aaee-4b27-9542-dd6d88f6f4fb","numOfLeaves":1},{"level":0,"parent":null,"cost":0,"uuid":"1639ba2a-71e0-4802-94ea-195307088fa5","uuidString":"1639ba2a-71e0-4802-94ea-195307088fa5","ipAddress":"10.5.0.9","hostName":"ozone-topology_datanode_6_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":9864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":-1907064413,"decommissioned":false,"maintenance":false,"networkName":"1639ba2a-71e0-4802-94ea-195307088fa5","networkLocation":"/rack2","networkFullPath":"/rack2/1639ba2a-71e0-4802-94ea-195307088fa5","numOfLeaves":1},{"level":0,"parent":null,"cost":0,"uuid":"a214195e-be19-497a-9d57-4218b0657b84","uuidString":"a214195e-be19-497a-9d57-4218b0657b84","ipAddress":"10.5.0.4","hostName":"ozone-topology_datanode_1_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":9864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":655861077,"decommissioned":false,"maintenance":false,"networkName":"a214195e-be19-497a-9d57-4218b0657b84","networkLocation":"/rack1","networkFullPath":"/rack1/a214195e-be19-497a-9d57-4218b0657b84","numOfLeaves":1}],"lastLeaderElection":0,"duration":116167,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"THREE","containers":1},{"pipelineId":"0e637c0a-0a94-4bf3-8190-0afeb5ede963","status":"OPEN","leaderNode":"ozone-topology_datanode_3_1.ozone-topology_net","datanodes":[{"level":0,"parent":null,"cost":0,"uuid":"dc020d36-aaee-4b27-9542-dd6d88f6f4fb","uuidString":"dc020d36-aaee-4b27-9542-dd6d88f6f4fb","ipAddress":"10.5.0.6","hostName":"ozone-topology_datanode_3_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":9864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":682694687,"decommissioned":false,"maintenance":false,"networkName":"dc020d36-aaee-4b27-9542-dd6d88f6f4fb","networkLocation":"/rack1","networkFullPath":"/rack1/dc020d36-aaee-4b27-9542-dd6d88f6f4fb","numOfLeaves":1}],"lastLeaderElection":0,"duration":115685,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"ONE","containers":0},{"pipelineId":"17cb31d7-91cb-4e57-81f9-23eca3aaf171","status":"OPEN","leaderNode":"ozone-topology_datanode_6_1.ozone-topology_net","datanodes":[{"level":0,"parent":null,"cost":0,"uuid":"1639ba2a-71e0-4802-94ea-195307088fa5","uuidString":"1639ba2a-71e0-4802-94ea-195307088fa5","ipAddress":"10.5.0.9","hostName":"ozone-topology_datanode_6_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":9864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":-1907064413,"decommissioned":false,"maintenance":false,"networkName":"1639ba2a-71e0-4802-94ea-195307088fa5","networkLocation":"/rack2","networkFullPath":"/rack2/1639ba2a-71e0-4802-94ea-195307088fa5","numOfLeaves":1}],"lastLeaderElection":0,"duration":116215,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"ONE","containers":0}]}</msg>
<status status="PASS" starttime="20230913 09:10:49.454" endtime="20230913 09:10:49.456"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 09:10:49.456" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 09:10:49.456" endtime="20230913 09:10:49.457"/>
</kw>
<status status="PASS" starttime="20230913 09:10:49.381" endtime="20230913 09:10:49.457"/>
</kw>
<msg timestamp="20230913 09:10:49.457" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 09:10:49.381" endtime="20230913 09:10:49.457"/>
</kw>
<msg timestamp="20230913 09:10:49.457" level="INFO">${result} = {"totalCount":10,"pipelines":[{"pipelineId":"2d949b71-2258-4e82-aa16-5c1082044b0d","status":"OPEN","leaderNode":"ozone-topology_datanode_5_1.ozone-topology_net","datanodes":[{"level":0,"parent":null,"...</msg>
<status status="PASS" starttime="20230913 09:10:49.380" endtime="20230913 09:10:49.457"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>pipelines</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230913 09:10:49.458" endtime="20230913 09:10:49.458"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230913 09:10:49.458" endtime="20230913 09:10:49.459"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>OPEN</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230913 09:10:49.459" endtime="20230913 09:10:49.460"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>datanode_1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230913 09:10:49.460" endtime="20230913 09:10:49.462"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>datanode_2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230913 09:10:49.462" endtime="20230913 09:10:49.462"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>datanode_3</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230913 09:10:49.463" endtime="20230913 09:10:49.463"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/clusterState</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 09:10:49.469" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/clusterState 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 09:10:49.547" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 09:10:49.547" level="INFO">${output} = {"deletedDirs":0,"pipelines":10,"totalDatanodes":6,"healthyDatanodes":6,"storageReport":{"capacity":535783858176,"used":28672,"remaining":91551657984},"containers":4,"missingContainers":0,"openContain...</msg>
<status status="PASS" starttime="20230913 09:10:49.466" endtime="20230913 09:10:49.547"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 09:10:49.548" level="INFO">{"deletedDirs":0,"pipelines":10,"totalDatanodes":6,"healthyDatanodes":6,"storageReport":{"capacity":535783858176,"used":28672,"remaining":91551657984},"containers":4,"missingContainers":0,"openContainers":4,"deletedContainers":0,"volumes":3,"buckets":2,"keys":11,"keysPendingDeletion":0}</msg>
<status status="PASS" starttime="20230913 09:10:49.548" endtime="20230913 09:10:49.549"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 09:10:49.549" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 09:10:49.549" endtime="20230913 09:10:49.549"/>
</kw>
<status status="PASS" starttime="20230913 09:10:49.465" endtime="20230913 09:10:49.549"/>
</kw>
<msg timestamp="20230913 09:10:49.549" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 09:10:49.465" endtime="20230913 09:10:49.550"/>
</kw>
<msg timestamp="20230913 09:10:49.550" level="INFO">${result} = {"deletedDirs":0,"pipelines":10,"totalDatanodes":6,"healthyDatanodes":6,"storageReport":{"capacity":535783858176,"used":28672,"remaining":91551657984},"containers":4,"missingContainers":0,"openContain...</msg>
<status status="PASS" starttime="20230913 09:10:49.463" endtime="20230913 09:10:49.550"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"totalDatanodes\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230913 09:10:49.550" endtime="20230913 09:10:49.550"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"healthyDatanodes\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230913 09:10:49.550" endtime="20230913 09:10:49.551"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"pipelines\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230913 09:10:49.551" endtime="20230913 09:10:49.551"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/containers/1/replicaHistory</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 09:10:49.556" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/containers/1/replicaHistory 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 09:10:49.579" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 09:10:49.579" level="INFO">${output} = [{"containerId":1,"datanodeUuid":"7b06696f-4ab9-4171-a611-4708d871733a","datanodeHost":"ozone-topology_datanode_4_1.ozone-topology_net","firstSeenTime":1694596174897,"lastSeenTime":1694596174897,"stat...</msg>
<status status="PASS" starttime="20230913 09:10:49.553" endtime="20230913 09:10:49.579"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 09:10:49.581" level="INFO">[{"containerId":1,"datanodeUuid":"7b06696f-4ab9-4171-a611-4708d871733a","datanodeHost":"ozone-topology_datanode_4_1.ozone-topology_net","firstSeenTime":1694596174897,"lastSeenTime":1694596174897,"state":"OPEN","lastBcsId":0},{"containerId":1,"datanodeUuid":"fe2e6557-2e4a-4415-bd73-70c6ed1b52d2","datanodeHost":"ozone-topology_datanode_5_1.ozone-topology_net","firstSeenTime":1694596174913,"lastSeenTime":1694596174913,"state":"OPEN","lastBcsId":0},{"containerId":1,"datanodeUuid":"d1c6ce0f-0323-4eb3-ad1d-e505e6a4b548","datanodeHost":"ozone-topology_datanode_2_1.ozone-topology_net","firstSeenTime":1694596174784,"lastSeenTime":1694596174784,"state":"OPEN","lastBcsId":0}]</msg>
<status status="PASS" starttime="20230913 09:10:49.580" endtime="20230913 09:10:49.581"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 09:10:49.582" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 09:10:49.581" endtime="20230913 09:10:49.582"/>
</kw>
<status status="PASS" starttime="20230913 09:10:49.553" endtime="20230913 09:10:49.582"/>
</kw>
<msg timestamp="20230913 09:10:49.582" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 09:10:49.552" endtime="20230913 09:10:49.582"/>
</kw>
<msg timestamp="20230913 09:10:49.582" level="INFO">${result} = [{"containerId":1,"datanodeUuid":"7b06696f-4ab9-4171-a611-4708d871733a","datanodeHost":"ozone-topology_datanode_4_1.ozone-topology_net","firstSeenTime":1694596174897,"lastSeenTime":1694596174897,"stat...</msg>
<status status="PASS" starttime="20230913 09:10:49.552" endtime="20230913 09:10:49.582"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"containerId\":1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230913 09:10:49.583" endtime="20230913 09:10:49.583"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230913 09:10:49.329" endtime="20230913 09:10:49.583"/>
</test>
<test id="s1-s3-s1-t3" name="Check if Recon Web UI is up" line="94">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230913 09:10:49.586" endtime="20230913 09:10:49.586"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${ENDPOINT_URL}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 09:10:49.591" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 09:10:49.615" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 09:10:49.615" level="INFO">${output} = &lt;!doctype html&gt;&lt;html lang="en"&gt;&lt;head&gt;&lt;meta charset="utf-8"/&gt;&lt;link rel="shortcut icon" href="/favicon.ico"/&gt;&lt;meta name="viewport" content="width=device-width,initial-scale=1"/&gt;&lt;meta name="theme-color" ...</msg>
<status status="PASS" starttime="20230913 09:10:49.588" endtime="20230913 09:10:49.615"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 09:10:49.616" level="INFO">&lt;!doctype html&gt;&lt;html lang="en"&gt;&lt;head&gt;&lt;meta charset="utf-8"/&gt;&lt;link rel="shortcut icon" href="/favicon.ico"/&gt;&lt;meta name="viewport" content="width=device-width,initial-scale=1"/&gt;&lt;meta name="theme-color" content="#000000"/&gt;&lt;link rel="manifest" href="/manifest.json"/&gt;&lt;title&gt;Ozone Recon&lt;/title&gt;&lt;link href="/static/css/2.58b4e004.chunk.css" rel="stylesheet"&gt;&lt;link href="/static/css/main.95934262.chunk.css" rel="stylesheet"&gt;&lt;/head&gt;&lt;body&gt;&lt;noscript&gt;You need to enable JavaScript to run this app.&lt;/noscript&gt;&lt;div id="root"&gt;&lt;/div&gt;&lt;script&gt;!function(e){function r(r){for(var n,l,f=r[0],i=r[1],a=r[2],p=0,s=[];p&lt;f.length;p++)l=f[p],Object.prototype.hasOwnProperty.call(o,l)&amp;&amp;o[l]&amp;&amp;s.push(o[l][0]),o[l]=0;for(n in i)Object.prototype.hasOwnProperty.call(i,n)&amp;&amp;(e[n]=i[n]);for(c&amp;&amp;c(r);s.length;)s.shift()();return u.push.apply(u,a||[]),t()}function t(){for(var e,r=0;r&lt;u.length;r++){for(var t=u[r],n=!0,f=1;f&lt;t.length;f++){var i=t[f];0!==o[i]&amp;&amp;(n=!1)}n&amp;&amp;(u.splice(r--,1),e=l(l.s=t[0]))}return e}var n={},o={1:0},u=[];function l(r){if(n[r])return n[r].exports;var t=n[r]={i:r,l:!1,exports:{}};return e[r].call(t.exports,t,t.exports,l),t.l=!0,t.exports}l.m=e,l.c=n,l.d=function(e,r,t){l.o(e,r)||Object.defineProperty(e,r,{enumerable:!0,get:t})},l.r=function(e){"undefined"!=typeof Symbol&amp;&amp;Symbol.toStringTag&amp;&amp;Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},l.t=function(e,r){if(1&amp;r&amp;&amp;(e=l(e)),8&amp;r)return e;if(4&amp;r&amp;&amp;"object"==typeof e&amp;&amp;e&amp;&amp;e.__esModule)return e;var t=Object.create(null);if(l.r(t),Object.defineProperty(t,"default",{enumerable:!0,value:e}),2&amp;r&amp;&amp;"string"!=typeof e)for(var n in e)l.d(t,n,function(r){return e[r]}.bind(null,n));return t},l.n=function(e){var r=e&amp;&amp;e.__esModule?function(){return e.default}:function(){return e};return l.d(r,"a",r),r},l.o=function(e,r){return Object.prototype.hasOwnProperty.call(e,r)},l.p="/";var f=this["webpackJsonpozone-recon"]=this["webpackJsonpozone-recon"]||[],i=f.push.bind(f);f.push=r,f=f.slice();for(var a=0;a&lt;f.length;a++)r(f[a]);var c=i;t()}([])&lt;/script&gt;&lt;script src="/static/js/2.60ad2f10.chunk.js"&gt;&lt;/script&gt;&lt;script src="/static/js/main.24b3bdf2.chunk.js"&gt;&lt;/script&gt;&lt;/body&gt;&lt;/html&gt;</msg>
<status status="PASS" starttime="20230913 09:10:49.616" endtime="20230913 09:10:49.616"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 09:10:49.617" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 09:10:49.617" endtime="20230913 09:10:49.619"/>
</kw>
<status status="PASS" starttime="20230913 09:10:49.588" endtime="20230913 09:10:49.619"/>
</kw>
<msg timestamp="20230913 09:10:49.620" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 09:10:49.587" endtime="20230913 09:10:49.620"/>
</kw>
<msg timestamp="20230913 09:10:49.620" level="INFO">${result} = &lt;!doctype html&gt;&lt;html lang="en"&gt;&lt;head&gt;&lt;meta charset="utf-8"/&gt;&lt;link rel="shortcut icon" href="/favicon.ico"/&gt;&lt;meta name="viewport" content="width=device-width,initial-scale=1"/&gt;&lt;meta name="theme-color" ...</msg>
<status status="PASS" starttime="20230913 09:10:49.587" endtime="20230913 09:10:49.620"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Ozone Recon</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230913 09:10:49.620" endtime="20230913 09:10:49.622"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230913 09:10:49.585" endtime="20230913 09:10:49.622"/>
</test>
<test id="s1-s3-s1-t4" name="Check web UI access" line="99">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 09:10:49.632" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 09:10:49.641" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 09:10:49.642" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230913 09:10:49.629" endtime="20230913 09:10:49.642"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 09:10:49.644" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230913 09:10:49.643" endtime="20230913 09:10:49.644"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 09:10:49.650" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 09:10:49.650" endtime="20230913 09:10:49.651"/>
</kw>
<status status="PASS" starttime="20230913 09:10:49.628" endtime="20230913 09:10:49.651"/>
</kw>
<msg timestamp="20230913 09:10:49.651" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 09:10:49.628" endtime="20230913 09:10:49.655"/>
</kw>
<status status="PASS" starttime="20230913 09:10:49.623" endtime="20230913 09:10:49.656"/>
</kw>
<kw name="Check http return code">
<arg>${ENDPOINT_URL}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 09:10:49.666" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 09:10:49.687" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 09:10:49.687" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230913 09:10:49.663" endtime="20230913 09:10:49.687"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 09:10:49.693" level="INFO">200</msg>
<status status="PASS" starttime="20230913 09:10:49.692" endtime="20230913 09:10:49.693"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 09:10:49.694" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 09:10:49.693" endtime="20230913 09:10:49.694"/>
</kw>
<status status="PASS" starttime="20230913 09:10:49.662" endtime="20230913 09:10:49.694"/>
</kw>
<msg timestamp="20230913 09:10:49.694" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 09:10:49.657" endtime="20230913 09:10:49.694"/>
</kw>
<msg timestamp="20230913 09:10:49.694" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230913 09:10:49.657" endtime="20230913 09:10:49.694"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230913 09:10:49.695" endtime="20230913 09:10:49.695"/>
</kw>
<status status="NOT RUN" starttime="20230913 09:10:49.695" endtime="20230913 09:10:49.695"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230913 09:10:49.695" endtime="20230913 09:10:49.698"/>
</kw>
<status status="PASS" starttime="20230913 09:10:49.695" endtime="20230913 09:10:49.698"/>
</branch>
<status status="PASS" starttime="20230913 09:10:49.695" endtime="20230913 09:10:49.698"/>
</if>
<status status="PASS" starttime="20230913 09:10:49.656" endtime="20230913 09:10:49.699"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230913 09:10:49.699" endtime="20230913 09:10:49.700"/>
</kw>
<status status="PASS" starttime="20230913 09:10:49.699" endtime="20230913 09:10:49.700"/>
</kw>
<kw name="Check http return code">
<arg>${ENDPOINT_URL}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 09:10:49.711" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 09:10:49.731" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 09:10:49.731" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230913 09:10:49.706" endtime="20230913 09:10:49.731"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 09:10:49.733" level="INFO">200</msg>
<status status="PASS" starttime="20230913 09:10:49.732" endtime="20230913 09:10:49.733"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 09:10:49.734" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 09:10:49.734" endtime="20230913 09:10:49.734"/>
</kw>
<status status="PASS" starttime="20230913 09:10:49.704" endtime="20230913 09:10:49.734"/>
</kw>
<msg timestamp="20230913 09:10:49.734" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 09:10:49.702" endtime="20230913 09:10:49.736"/>
</kw>
<msg timestamp="20230913 09:10:49.736" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230913 09:10:49.702" endtime="20230913 09:10:49.736"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230913 09:10:49.737" endtime="20230913 09:10:49.737"/>
</kw>
<status status="NOT RUN" starttime="20230913 09:10:49.736" endtime="20230913 09:10:49.737"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230913 09:10:49.737" endtime="20230913 09:10:49.738"/>
</kw>
<status status="PASS" starttime="20230913 09:10:49.737" endtime="20230913 09:10:49.738"/>
</branch>
<status status="PASS" starttime="20230913 09:10:49.736" endtime="20230913 09:10:49.738"/>
</if>
<status status="PASS" starttime="20230913 09:10:49.700" endtime="20230913 09:10:49.738"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230913 09:10:49.623" endtime="20230913 09:10:49.738"/>
</test>
<test id="s1-s3-s1-t5" name="Check admin only api access" line="107">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 09:10:49.748" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 09:10:49.753" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 09:10:49.753" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230913 09:10:49.744" endtime="20230913 09:10:49.753"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 09:10:49.754" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230913 09:10:49.754" endtime="20230913 09:10:49.755"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 09:10:49.755" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 09:10:49.755" endtime="20230913 09:10:49.755"/>
</kw>
<status status="PASS" starttime="20230913 09:10:49.743" endtime="20230913 09:10:49.755"/>
</kw>
<msg timestamp="20230913 09:10:49.756" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 09:10:49.742" endtime="20230913 09:10:49.756"/>
</kw>
<status status="PASS" starttime="20230913 09:10:49.742" endtime="20230913 09:10:49.756"/>
</kw>
<kw name="Check http return code">
<arg>${ADMIN_API_ENDPOINT_URL}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 09:10:49.763" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 09:10:49.787" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 09:10:49.788" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230913 09:10:49.758" endtime="20230913 09:10:49.788"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 09:10:49.790" level="INFO">200</msg>
<status status="PASS" starttime="20230913 09:10:49.788" endtime="20230913 09:10:49.790"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 09:10:49.790" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 09:10:49.790" endtime="20230913 09:10:49.790"/>
</kw>
<status status="PASS" starttime="20230913 09:10:49.758" endtime="20230913 09:10:49.791"/>
</kw>
<msg timestamp="20230913 09:10:49.791" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 09:10:49.757" endtime="20230913 09:10:49.791"/>
</kw>
<msg timestamp="20230913 09:10:49.791" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230913 09:10:49.757" endtime="20230913 09:10:49.791"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230913 09:10:49.792" endtime="20230913 09:10:49.792"/>
</kw>
<status status="NOT RUN" starttime="20230913 09:10:49.791" endtime="20230913 09:10:49.792"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230913 09:10:49.792" endtime="20230913 09:10:49.792"/>
</kw>
<status status="PASS" starttime="20230913 09:10:49.792" endtime="20230913 09:10:49.792"/>
</branch>
<status status="PASS" starttime="20230913 09:10:49.791" endtime="20230913 09:10:49.792"/>
</if>
<status status="PASS" starttime="20230913 09:10:49.756" endtime="20230913 09:10:49.793"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230913 09:10:49.794" endtime="20230913 09:10:49.794"/>
</kw>
<status status="PASS" starttime="20230913 09:10:49.793" endtime="20230913 09:10:49.794"/>
</kw>
<kw name="Check http return code">
<arg>${ADMIN_API_ENDPOINT_URL}</arg>
<arg>403</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 09:10:49.799" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 09:10:49.816" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 09:10:49.816" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230913 09:10:49.796" endtime="20230913 09:10:49.816"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 09:10:49.818" level="INFO">200</msg>
<status status="PASS" starttime="20230913 09:10:49.817" endtime="20230913 09:10:49.818"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 09:10:49.819" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 09:10:49.818" endtime="20230913 09:10:49.819"/>
</kw>
<status status="PASS" starttime="20230913 09:10:49.796" endtime="20230913 09:10:49.819"/>
</kw>
<msg timestamp="20230913 09:10:49.819" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 09:10:49.795" endtime="20230913 09:10:49.820"/>
</kw>
<msg timestamp="20230913 09:10:49.820" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230913 09:10:49.795" endtime="20230913 09:10:49.820"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230913 09:10:49.821" endtime="20230913 09:10:49.821"/>
</kw>
<status status="NOT RUN" starttime="20230913 09:10:49.821" endtime="20230913 09:10:49.821"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230913 09:10:49.821" endtime="20230913 09:10:49.822"/>
</kw>
<status status="PASS" starttime="20230913 09:10:49.821" endtime="20230913 09:10:49.822"/>
</branch>
<status status="PASS" starttime="20230913 09:10:49.820" endtime="20230913 09:10:49.822"/>
</if>
<status status="PASS" starttime="20230913 09:10:49.794" endtime="20230913 09:10:49.822"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230913 09:10:49.823" endtime="20230913 09:10:49.823"/>
</kw>
<status status="PASS" starttime="20230913 09:10:49.822" endtime="20230913 09:10:49.823"/>
</kw>
<kw name="Check http return code">
<arg>${ADMIN_API_ENDPOINT_URL}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 09:10:49.829" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 09:10:49.846" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 09:10:49.846" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230913 09:10:49.826" endtime="20230913 09:10:49.847"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 09:10:49.848" level="INFO">200</msg>
<status status="PASS" starttime="20230913 09:10:49.847" endtime="20230913 09:10:49.848"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 09:10:49.849" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 09:10:49.848" endtime="20230913 09:10:49.849"/>
</kw>
<status status="PASS" starttime="20230913 09:10:49.825" endtime="20230913 09:10:49.849"/>
</kw>
<msg timestamp="20230913 09:10:49.849" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 09:10:49.825" endtime="20230913 09:10:49.849"/>
</kw>
<msg timestamp="20230913 09:10:49.850" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230913 09:10:49.824" endtime="20230913 09:10:49.850"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230913 09:10:49.851" endtime="20230913 09:10:49.851"/>
</kw>
<status status="NOT RUN" starttime="20230913 09:10:49.850" endtime="20230913 09:10:49.851"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230913 09:10:49.851" endtime="20230913 09:10:49.851"/>
</kw>
<status status="PASS" starttime="20230913 09:10:49.851" endtime="20230913 09:10:49.852"/>
</branch>
<status status="PASS" starttime="20230913 09:10:49.850" endtime="20230913 09:10:49.852"/>
</if>
<status status="PASS" starttime="20230913 09:10:49.824" endtime="20230913 09:10:49.852"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230913 09:10:49.853" endtime="20230913 09:10:49.853"/>
</kw>
<status status="PASS" starttime="20230913 09:10:49.852" endtime="20230913 09:10:49.853"/>
</kw>
<kw name="Check http return code">
<arg>${ADMIN_API_ENDPOINT_URL}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 09:10:49.859" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 09:10:49.876" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 09:10:49.877" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230913 09:10:49.856" endtime="20230913 09:10:49.877"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 09:10:49.878" level="INFO">200</msg>
<status status="PASS" starttime="20230913 09:10:49.877" endtime="20230913 09:10:49.878"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 09:10:49.879" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 09:10:49.878" endtime="20230913 09:10:49.879"/>
</kw>
<status status="PASS" starttime="20230913 09:10:49.856" endtime="20230913 09:10:49.879"/>
</kw>
<msg timestamp="20230913 09:10:49.879" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 09:10:49.854" endtime="20230913 09:10:49.879"/>
</kw>
<msg timestamp="20230913 09:10:49.880" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230913 09:10:49.854" endtime="20230913 09:10:49.880"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230913 09:10:49.881" endtime="20230913 09:10:49.881"/>
</kw>
<status status="NOT RUN" starttime="20230913 09:10:49.880" endtime="20230913 09:10:49.881"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230913 09:10:49.881" endtime="20230913 09:10:49.882"/>
</kw>
<status status="PASS" starttime="20230913 09:10:49.881" endtime="20230913 09:10:49.882"/>
</branch>
<status status="PASS" starttime="20230913 09:10:49.880" endtime="20230913 09:10:49.882"/>
</if>
<status status="PASS" starttime="20230913 09:10:49.853" endtime="20230913 09:10:49.882"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230913 09:10:49.741" endtime="20230913 09:10:49.882"/>
</test>
<test id="s1-s3-s1-t6" name="Check unhealthy, (admin) api access" line="120">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 09:10:49.890" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 09:10:49.894" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 09:10:49.894" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230913 09:10:49.887" endtime="20230913 09:10:49.894"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 09:10:49.895" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230913 09:10:49.895" endtime="20230913 09:10:49.895"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 09:10:49.896" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 09:10:49.896" endtime="20230913 09:10:49.896"/>
</kw>
<status status="PASS" starttime="20230913 09:10:49.886" endtime="20230913 09:10:49.896"/>
</kw>
<msg timestamp="20230913 09:10:49.897" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 09:10:49.886" endtime="20230913 09:10:49.897"/>
</kw>
<status status="PASS" starttime="20230913 09:10:49.885" endtime="20230913 09:10:49.897"/>
</kw>
<kw name="Check http return code">
<arg>${UNHEALTHY_ENDPOINT_URL}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 09:10:49.903" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers/unhealthy 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 09:10:49.965" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 09:10:49.965" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230913 09:10:49.900" endtime="20230913 09:10:49.965"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 09:10:49.967" level="INFO">200</msg>
<status status="PASS" starttime="20230913 09:10:49.965" endtime="20230913 09:10:49.967"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 09:10:49.968" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 09:10:49.967" endtime="20230913 09:10:49.968"/>
</kw>
<status status="PASS" starttime="20230913 09:10:49.899" endtime="20230913 09:10:49.968"/>
</kw>
<msg timestamp="20230913 09:10:49.968" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 09:10:49.899" endtime="20230913 09:10:49.968"/>
</kw>
<msg timestamp="20230913 09:10:49.968" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230913 09:10:49.898" endtime="20230913 09:10:49.968"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230913 09:10:49.969" endtime="20230913 09:10:49.973"/>
</kw>
<status status="NOT RUN" starttime="20230913 09:10:49.969" endtime="20230913 09:10:49.973"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230913 09:10:49.973" endtime="20230913 09:10:49.974"/>
</kw>
<status status="PASS" starttime="20230913 09:10:49.973" endtime="20230913 09:10:49.974"/>
</branch>
<status status="PASS" starttime="20230913 09:10:49.969" endtime="20230913 09:10:49.974"/>
</if>
<status status="PASS" starttime="20230913 09:10:49.897" endtime="20230913 09:10:49.974"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230913 09:10:49.974" endtime="20230913 09:10:49.975"/>
</kw>
<status status="PASS" starttime="20230913 09:10:49.974" endtime="20230913 09:10:49.975"/>
</kw>
<kw name="Check http return code">
<arg>${UNHEALTHY_ENDPOINT_URL}</arg>
<arg>403</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 09:10:49.981" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers/unhealthy 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 09:10:49.999" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 09:10:49.999" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230913 09:10:49.977" endtime="20230913 09:10:49.999"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 09:10:50.000" level="INFO">200</msg>
<status status="PASS" starttime="20230913 09:10:50.000" endtime="20230913 09:10:50.001"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 09:10:50.001" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 09:10:50.001" endtime="20230913 09:10:50.001"/>
</kw>
<status status="PASS" starttime="20230913 09:10:49.977" endtime="20230913 09:10:50.002"/>
</kw>
<msg timestamp="20230913 09:10:50.003" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 09:10:49.977" endtime="20230913 09:10:50.003"/>
</kw>
<msg timestamp="20230913 09:10:50.003" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230913 09:10:49.976" endtime="20230913 09:10:50.003"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230913 09:10:50.004" endtime="20230913 09:10:50.004"/>
</kw>
<status status="NOT RUN" starttime="20230913 09:10:50.003" endtime="20230913 09:10:50.004"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230913 09:10:50.004" endtime="20230913 09:10:50.004"/>
</kw>
<status status="PASS" starttime="20230913 09:10:50.004" endtime="20230913 09:10:50.004"/>
</branch>
<status status="PASS" starttime="20230913 09:10:50.003" endtime="20230913 09:10:50.004"/>
</if>
<status status="PASS" starttime="20230913 09:10:49.975" endtime="20230913 09:10:50.005"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230913 09:10:50.005" endtime="20230913 09:10:50.006"/>
</kw>
<status status="PASS" starttime="20230913 09:10:50.005" endtime="20230913 09:10:50.006"/>
</kw>
<kw name="Check http return code">
<arg>${UNHEALTHY_ENDPOINT_URL}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 09:10:50.011" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers/unhealthy 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 09:10:50.028" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 09:10:50.028" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230913 09:10:50.008" endtime="20230913 09:10:50.028"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 09:10:50.029" level="INFO">200</msg>
<status status="PASS" starttime="20230913 09:10:50.028" endtime="20230913 09:10:50.029"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 09:10:50.030" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 09:10:50.029" endtime="20230913 09:10:50.030"/>
</kw>
<status status="PASS" starttime="20230913 09:10:50.008" endtime="20230913 09:10:50.030"/>
</kw>
<msg timestamp="20230913 09:10:50.030" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 09:10:50.007" endtime="20230913 09:10:50.030"/>
</kw>
<msg timestamp="20230913 09:10:50.031" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230913 09:10:50.007" endtime="20230913 09:10:50.031"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230913 09:10:50.031" endtime="20230913 09:10:50.031"/>
</kw>
<status status="NOT RUN" starttime="20230913 09:10:50.031" endtime="20230913 09:10:50.031"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230913 09:10:50.031" endtime="20230913 09:10:50.032"/>
</kw>
<status status="PASS" starttime="20230913 09:10:50.031" endtime="20230913 09:10:50.032"/>
</branch>
<status status="PASS" starttime="20230913 09:10:50.031" endtime="20230913 09:10:50.032"/>
</if>
<status status="PASS" starttime="20230913 09:10:50.006" endtime="20230913 09:10:50.032"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230913 09:10:50.033" endtime="20230913 09:10:50.034"/>
</kw>
<status status="PASS" starttime="20230913 09:10:50.032" endtime="20230913 09:10:50.034"/>
</kw>
<kw name="Check http return code">
<arg>${UNHEALTHY_ENDPOINT_URL}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 09:10:50.040" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers/unhealthy 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 09:10:50.057" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 09:10:50.057" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230913 09:10:50.037" endtime="20230913 09:10:50.057"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 09:10:50.058" level="INFO">200</msg>
<status status="PASS" starttime="20230913 09:10:50.058" endtime="20230913 09:10:50.058"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 09:10:50.059" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 09:10:50.059" endtime="20230913 09:10:50.059"/>
</kw>
<status status="PASS" starttime="20230913 09:10:50.036" endtime="20230913 09:10:50.059"/>
</kw>
<msg timestamp="20230913 09:10:50.060" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 09:10:50.035" endtime="20230913 09:10:50.060"/>
</kw>
<msg timestamp="20230913 09:10:50.060" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230913 09:10:50.035" endtime="20230913 09:10:50.060"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230913 09:10:50.062" endtime="20230913 09:10:50.062"/>
</kw>
<status status="NOT RUN" starttime="20230913 09:10:50.060" endtime="20230913 09:10:50.062"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230913 09:10:50.062" endtime="20230913 09:10:50.063"/>
</kw>
<status status="PASS" starttime="20230913 09:10:50.062" endtime="20230913 09:10:50.063"/>
</branch>
<status status="PASS" starttime="20230913 09:10:50.060" endtime="20230913 09:10:50.063"/>
</if>
<status status="PASS" starttime="20230913 09:10:50.034" endtime="20230913 09:10:50.063"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230913 09:10:49.884" endtime="20230913 09:10:50.063"/>
</test>
<test id="s1-s3-s1-t7" name="Check normal api access" line="133">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 09:10:50.070" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 09:10:50.075" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 09:10:50.075" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230913 09:10:50.066" endtime="20230913 09:10:50.075"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 09:10:50.076" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230913 09:10:50.076" endtime="20230913 09:10:50.080"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 09:10:50.080" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 09:10:50.080" endtime="20230913 09:10:50.081"/>
</kw>
<status status="PASS" starttime="20230913 09:10:50.066" endtime="20230913 09:10:50.081"/>
</kw>
<msg timestamp="20230913 09:10:50.081" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 09:10:50.065" endtime="20230913 09:10:50.081"/>
</kw>
<status status="PASS" starttime="20230913 09:10:50.065" endtime="20230913 09:10:50.081"/>
</kw>
<kw name="Check http return code">
<arg>${NON_ADMIN_API_ENDPOINT_URL}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 09:10:50.086" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/clusterState 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 09:10:50.117" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 09:10:50.117" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230913 09:10:50.084" endtime="20230913 09:10:50.117"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 09:10:50.118" level="INFO">200</msg>
<status status="PASS" starttime="20230913 09:10:50.117" endtime="20230913 09:10:50.118"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 09:10:50.119" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 09:10:50.118" endtime="20230913 09:10:50.119"/>
</kw>
<status status="PASS" starttime="20230913 09:10:50.083" endtime="20230913 09:10:50.119"/>
</kw>
<msg timestamp="20230913 09:10:50.119" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 09:10:50.083" endtime="20230913 09:10:50.119"/>
</kw>
<msg timestamp="20230913 09:10:50.119" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230913 09:10:50.082" endtime="20230913 09:10:50.119"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230913 09:10:50.121" endtime="20230913 09:10:50.121"/>
</kw>
<status status="NOT RUN" starttime="20230913 09:10:50.120" endtime="20230913 09:10:50.121"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230913 09:10:50.122" endtime="20230913 09:10:50.122"/>
</kw>
<status status="PASS" starttime="20230913 09:10:50.121" endtime="20230913 09:10:50.122"/>
</branch>
<status status="PASS" starttime="20230913 09:10:50.119" endtime="20230913 09:10:50.122"/>
</if>
<status status="PASS" starttime="20230913 09:10:50.081" endtime="20230913 09:10:50.122"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230913 09:10:50.123" endtime="20230913 09:10:50.123"/>
</kw>
<status status="PASS" starttime="20230913 09:10:50.122" endtime="20230913 09:10:50.123"/>
</kw>
<kw name="Check http return code">
<arg>${NON_ADMIN_API_ENDPOINT_URL}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 09:10:50.129" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/clusterState 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 09:10:50.161" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 09:10:50.161" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230913 09:10:50.126" endtime="20230913 09:10:50.161"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 09:10:50.162" level="INFO">200</msg>
<status status="PASS" starttime="20230913 09:10:50.162" endtime="20230913 09:10:50.162"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 09:10:50.174" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 09:10:50.163" endtime="20230913 09:10:50.174"/>
</kw>
<status status="PASS" starttime="20230913 09:10:50.125" endtime="20230913 09:10:50.174"/>
</kw>
<msg timestamp="20230913 09:10:50.174" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 09:10:50.125" endtime="20230913 09:10:50.174"/>
</kw>
<msg timestamp="20230913 09:10:50.174" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230913 09:10:50.124" endtime="20230913 09:10:50.174"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230913 09:10:50.175" endtime="20230913 09:10:50.175"/>
</kw>
<status status="NOT RUN" starttime="20230913 09:10:50.175" endtime="20230913 09:10:50.176"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230913 09:10:50.176" endtime="20230913 09:10:50.177"/>
</kw>
<status status="PASS" starttime="20230913 09:10:50.176" endtime="20230913 09:10:50.177"/>
</branch>
<status status="PASS" starttime="20230913 09:10:50.175" endtime="20230913 09:10:50.177"/>
</if>
<status status="PASS" starttime="20230913 09:10:50.124" endtime="20230913 09:10:50.179"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230913 09:10:50.064" endtime="20230913 09:10:50.180"/>
</test>
<doc>Smoke test to start cluster with docker-compose environments.</doc>
<status status="PASS" starttime="20230913 09:10:09.752" endtime="20230913 09:10:50.182"/>
</suite>
<suite id="s1-s3-s2" name="Recon-Nssummary" source="/opt/hadoop/smoketest/recon/recon-nssummary.robot">
<test id="s1-s3-s2-t1" name="Check volume creation" line="99">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 09:10:50.199" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 09:10:50.203" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 09:10:50.203" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230913 09:10:50.196" endtime="20230913 09:10:50.203"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 09:10:50.205" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230913 09:10:50.204" endtime="20230913 09:10:50.205"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 09:10:50.205" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 09:10:50.205" endtime="20230913 09:10:50.206"/>
</kw>
<status status="PASS" starttime="20230913 09:10:50.196" endtime="20230913 09:10:50.206"/>
</kw>
<msg timestamp="20230913 09:10:50.206" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 09:10:50.195" endtime="20230913 09:10:50.206"/>
</kw>
<status status="PASS" starttime="20230913 09:10:50.195" endtime="20230913 09:10:50.206"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230913 09:10:50.207" endtime="20230913 09:10:50.207"/>
</kw>
<status status="PASS" starttime="20230913 09:10:50.206" endtime="20230913 09:10:50.207"/>
</kw>
<kw name="Create volume">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[LOWER]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230913 09:10:50.209" level="INFO">${random} = xctqo</msg>
<status status="PASS" starttime="20230913 09:10:50.208" endtime="20230913 09:10:50.209"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${VOLUME}</arg>
<arg>vol-${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230913 09:10:50.209" level="INFO">${VOLUME} = vol-xctqo</msg>
<status status="PASS" starttime="20230913 09:10:50.209" endtime="20230913 09:10:50.209"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create /${VOLUME}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 09:10:50.214" level="INFO">Running command 'ozone sh volume create /vol-xctqo 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 09:10:54.880" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 09:10:54.880" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230913 09:10:50.211" endtime="20230913 09:10:54.880"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 09:10:54.883" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230913 09:10:54.881" endtime="20230913 09:10:54.883"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 09:10:54.883" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 09:10:54.883" endtime="20230913 09:10:54.883"/>
</kw>
<status status="PASS" starttime="20230913 09:10:50.210" endtime="20230913 09:10:54.884"/>
</kw>
<msg timestamp="20230913 09:10:54.884" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 09:10:50.210" endtime="20230913 09:10:54.884"/>
</kw>
<msg timestamp="20230913 09:10:54.884" level="INFO">${result} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230913 09:10:50.209" endtime="20230913 09:10:54.884"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230913 09:10:54.884" endtime="20230913 09:10:54.885"/>
</kw>
<status status="PASS" starttime="20230913 09:10:50.208" endtime="20230913 09:10:54.885"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230913 09:10:50.194" endtime="20230913 09:10:54.885"/>
</test>
<test id="s1-s3-s2-t2" name="Check bucket creation" line="104">
<kw name="Create bucket">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[LOWER]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230913 09:10:54.887" level="INFO">${random} = yxlma</msg>
<status status="PASS" starttime="20230913 09:10:54.887" endtime="20230913 09:10:54.887"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${BUCKET}</arg>
<arg>buc-${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230913 09:10:54.888" level="INFO">${BUCKET} = buc-yxlma</msg>
<status status="PASS" starttime="20230913 09:10:54.887" endtime="20230913 09:10:54.888"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket create -l ${BUCKET_LAYOUT} /${VOLUME}/${BUCKET}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 09:10:54.892" level="INFO">Running command 'ozone sh bucket create -l FILE_SYSTEM_OPTIMIZED /vol-xctqo/buc-yxlma 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 09:10:59.472" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 09:10:59.472" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230913 09:10:54.889" endtime="20230913 09:10:59.472"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 09:10:59.474" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230913 09:10:59.473" endtime="20230913 09:10:59.474"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 09:10:59.475" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 09:10:59.474" endtime="20230913 09:10:59.475"/>
</kw>
<status status="PASS" starttime="20230913 09:10:54.889" endtime="20230913 09:10:59.475"/>
</kw>
<msg timestamp="20230913 09:10:59.475" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 09:10:54.889" endtime="20230913 09:10:59.476"/>
</kw>
<msg timestamp="20230913 09:10:59.476" level="INFO">${result} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230913 09:10:54.888" endtime="20230913 09:10:59.476"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230913 09:10:59.476" endtime="20230913 09:10:59.477"/>
</kw>
<status status="PASS" starttime="20230913 09:10:54.886" endtime="20230913 09:10:59.477"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230913 09:10:54.886" endtime="20230913 09:10:59.477"/>
</test>
<test id="s1-s3-s2-t3" name="Check keys creation" line="107">
<kw name="Create keys">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key put /${VOLUME}/${BUCKET}/file1 README.md</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 09:10:59.484" level="INFO">Running command 'ozone sh key put /vol-xctqo/buc-yxlma/file1 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 09:11:06.236" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 09:11:06.236" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230913 09:10:59.481" endtime="20230913 09:11:06.236"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 09:11:06.238" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230913 09:11:06.237" endtime="20230913 09:11:06.238"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 09:11:06.238" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 09:11:06.238" endtime="20230913 09:11:06.238"/>
</kw>
<status status="PASS" starttime="20230913 09:10:59.481" endtime="20230913 09:11:06.239"/>
</kw>
<msg timestamp="20230913 09:11:06.239" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 09:10:59.480" endtime="20230913 09:11:06.239"/>
</kw>
<msg timestamp="20230913 09:11:06.239" level="INFO">${result} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230913 09:10:59.480" endtime="20230913 09:11:06.239"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230913 09:11:06.239" endtime="20230913 09:11:06.239"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key put /${VOLUME}/${BUCKET}/dir1/dir2/file2 HISTORY.md</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 09:11:06.244" level="INFO">Running command 'ozone sh key put /vol-xctqo/buc-yxlma/dir1/dir2/file2 HISTORY.md 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 09:11:13.593" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 09:11:13.593" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230913 09:11:06.241" endtime="20230913 09:11:13.593"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 09:11:13.595" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230913 09:11:13.594" endtime="20230913 09:11:13.595"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 09:11:13.595" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 09:11:13.595" endtime="20230913 09:11:13.596"/>
</kw>
<status status="PASS" starttime="20230913 09:11:06.241" endtime="20230913 09:11:13.596"/>
</kw>
<msg timestamp="20230913 09:11:13.596" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 09:11:06.240" endtime="20230913 09:11:13.596"/>
</kw>
<msg timestamp="20230913 09:11:13.596" level="INFO">${result} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230913 09:11:06.240" endtime="20230913 09:11:13.596"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230913 09:11:13.596" endtime="20230913 09:11:13.597"/>
</kw>
<status status="PASS" starttime="20230913 09:10:59.479" endtime="20230913 09:11:13.597"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230913 09:10:59.478" endtime="20230913 09:11:13.597"/>
</test>
<test id="s1-s3-s2-t4" name="Check Summary api access" line="110">
<kw name="Check Access">
<arg>${SUMMARY_URL}?path=/</arg>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 09:11:13.604" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 09:11:13.607" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 09:11:13.607" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230913 09:11:13.601" endtime="20230913 09:11:13.608"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 09:11:13.609" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230913 09:11:13.608" endtime="20230913 09:11:13.609"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 09:11:13.611" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 09:11:13.609" endtime="20230913 09:11:13.611"/>
</kw>
<status status="PASS" starttime="20230913 09:11:13.600" endtime="20230913 09:11:13.611"/>
</kw>
<msg timestamp="20230913 09:11:13.611" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 09:11:13.600" endtime="20230913 09:11:13.611"/>
</kw>
<status status="PASS" starttime="20230913 09:11:13.600" endtime="20230913 09:11:13.611"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 09:11:13.615" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 09:11:13.671" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 09:11:13.671" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230913 09:11:13.613" endtime="20230913 09:11:13.671"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 09:11:13.672" level="INFO">200</msg>
<status status="PASS" starttime="20230913 09:11:13.672" endtime="20230913 09:11:13.673"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 09:11:13.673" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 09:11:13.673" endtime="20230913 09:11:13.673"/>
</kw>
<status status="PASS" starttime="20230913 09:11:13.613" endtime="20230913 09:11:13.673"/>
</kw>
<msg timestamp="20230913 09:11:13.673" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 09:11:13.612" endtime="20230913 09:11:13.674"/>
</kw>
<msg timestamp="20230913 09:11:13.674" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230913 09:11:13.612" endtime="20230913 09:11:13.674"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230913 09:11:13.675" endtime="20230913 09:11:13.675"/>
</kw>
<status status="NOT RUN" starttime="20230913 09:11:13.675" endtime="20230913 09:11:13.675"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230913 09:11:13.676" endtime="20230913 09:11:13.676"/>
</kw>
<status status="PASS" starttime="20230913 09:11:13.675" endtime="20230913 09:11:13.676"/>
</branch>
<status status="PASS" starttime="20230913 09:11:13.675" endtime="20230913 09:11:13.676"/>
</if>
<status status="PASS" starttime="20230913 09:11:13.611" endtime="20230913 09:11:13.676"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230913 09:11:13.677" endtime="20230913 09:11:13.677"/>
</kw>
<status status="PASS" starttime="20230913 09:11:13.676" endtime="20230913 09:11:13.677"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>403</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 09:11:13.683" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 09:11:13.699" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 09:11:13.699" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230913 09:11:13.679" endtime="20230913 09:11:13.699"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 09:11:13.701" level="INFO">200</msg>
<status status="PASS" starttime="20230913 09:11:13.700" endtime="20230913 09:11:13.701"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 09:11:13.701" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 09:11:13.701" endtime="20230913 09:11:13.701"/>
</kw>
<status status="PASS" starttime="20230913 09:11:13.679" endtime="20230913 09:11:13.702"/>
</kw>
<msg timestamp="20230913 09:11:13.702" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 09:11:13.678" endtime="20230913 09:11:13.702"/>
</kw>
<msg timestamp="20230913 09:11:13.702" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230913 09:11:13.678" endtime="20230913 09:11:13.702"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230913 09:11:13.703" endtime="20230913 09:11:13.703"/>
</kw>
<status status="NOT RUN" starttime="20230913 09:11:13.702" endtime="20230913 09:11:13.703"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230913 09:11:13.703" endtime="20230913 09:11:13.703"/>
</kw>
<status status="PASS" starttime="20230913 09:11:13.703" endtime="20230913 09:11:13.703"/>
</branch>
<status status="PASS" starttime="20230913 09:11:13.702" endtime="20230913 09:11:13.703"/>
</if>
<status status="PASS" starttime="20230913 09:11:13.677" endtime="20230913 09:11:13.703"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230913 09:11:13.704" endtime="20230913 09:11:13.704"/>
</kw>
<status status="PASS" starttime="20230913 09:11:13.704" endtime="20230913 09:11:13.705"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 09:11:13.735" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 09:11:13.735" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 09:11:13.735" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230913 09:11:13.706" endtime="20230913 09:11:13.735"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 09:11:13.736" level="INFO">200</msg>
<status status="PASS" starttime="20230913 09:11:13.736" endtime="20230913 09:11:13.736"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 09:11:13.737" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 09:11:13.737" endtime="20230913 09:11:13.737"/>
</kw>
<status status="PASS" starttime="20230913 09:11:13.706" endtime="20230913 09:11:13.737"/>
</kw>
<msg timestamp="20230913 09:11:13.737" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 09:11:13.706" endtime="20230913 09:11:13.737"/>
</kw>
<msg timestamp="20230913 09:11:13.738" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230913 09:11:13.705" endtime="20230913 09:11:13.738"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230913 09:11:13.738" endtime="20230913 09:11:13.738"/>
</kw>
<status status="NOT RUN" starttime="20230913 09:11:13.738" endtime="20230913 09:11:13.738"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230913 09:11:13.738" endtime="20230913 09:11:13.739"/>
</kw>
<status status="PASS" starttime="20230913 09:11:13.738" endtime="20230913 09:11:13.739"/>
</branch>
<status status="PASS" starttime="20230913 09:11:13.738" endtime="20230913 09:11:13.739"/>
</if>
<status status="PASS" starttime="20230913 09:11:13.705" endtime="20230913 09:11:13.739"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230913 09:11:13.740" endtime="20230913 09:11:13.740"/>
</kw>
<status status="PASS" starttime="20230913 09:11:13.739" endtime="20230913 09:11:13.740"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 09:11:13.745" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 09:11:13.761" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 09:11:13.762" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230913 09:11:13.742" endtime="20230913 09:11:13.762"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 09:11:13.763" level="INFO">200</msg>
<status status="PASS" starttime="20230913 09:11:13.762" endtime="20230913 09:11:13.763"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 09:11:13.764" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 09:11:13.763" endtime="20230913 09:11:13.764"/>
</kw>
<status status="PASS" starttime="20230913 09:11:13.741" endtime="20230913 09:11:13.764"/>
</kw>
<msg timestamp="20230913 09:11:13.764" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 09:11:13.741" endtime="20230913 09:11:13.764"/>
</kw>
<msg timestamp="20230913 09:11:13.765" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230913 09:11:13.741" endtime="20230913 09:11:13.765"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230913 09:11:13.766" endtime="20230913 09:11:13.766"/>
</kw>
<status status="NOT RUN" starttime="20230913 09:11:13.765" endtime="20230913 09:11:13.766"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230913 09:11:13.766" endtime="20230913 09:11:13.766"/>
</kw>
<status status="PASS" starttime="20230913 09:11:13.766" endtime="20230913 09:11:13.766"/>
</branch>
<status status="PASS" starttime="20230913 09:11:13.765" endtime="20230913 09:11:13.766"/>
</if>
<status status="PASS" starttime="20230913 09:11:13.740" endtime="20230913 09:11:13.766"/>
</kw>
<status status="PASS" starttime="20230913 09:11:13.599" endtime="20230913 09:11:13.767"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230913 09:11:13.598" endtime="20230913 09:11:13.767"/>
</test>
<test id="s1-s3-s2-t5" name="Check Disk Usage api access" line="113">
<kw name="Check Access">
<arg>${DISK_USAGE_URL}?path=/</arg>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 09:11:13.774" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 09:11:13.777" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 09:11:13.777" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230913 09:11:13.771" endtime="20230913 09:11:13.777"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 09:11:13.778" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230913 09:11:13.778" endtime="20230913 09:11:13.779"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 09:11:13.779" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 09:11:13.779" endtime="20230913 09:11:13.779"/>
</kw>
<status status="PASS" starttime="20230913 09:11:13.770" endtime="20230913 09:11:13.779"/>
</kw>
<msg timestamp="20230913 09:11:13.779" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 09:11:13.770" endtime="20230913 09:11:13.780"/>
</kw>
<status status="PASS" starttime="20230913 09:11:13.770" endtime="20230913 09:11:13.780"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 09:11:13.784" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/du?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 09:11:13.808" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 09:11:13.808" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230913 09:11:13.782" endtime="20230913 09:11:13.808"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 09:11:13.809" level="INFO">200</msg>
<status status="PASS" starttime="20230913 09:11:13.808" endtime="20230913 09:11:13.809"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 09:11:13.810" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 09:11:13.809" endtime="20230913 09:11:13.810"/>
</kw>
<status status="PASS" starttime="20230913 09:11:13.782" endtime="20230913 09:11:13.810"/>
</kw>
<msg timestamp="20230913 09:11:13.810" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 09:11:13.781" endtime="20230913 09:11:13.810"/>
</kw>
<msg timestamp="20230913 09:11:13.811" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230913 09:11:13.781" endtime="20230913 09:11:13.811"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230913 09:11:13.811" endtime="20230913 09:11:13.811"/>
</kw>
<status status="NOT RUN" starttime="20230913 09:11:13.811" endtime="20230913 09:11:13.811"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230913 09:11:13.812" endtime="20230913 09:11:13.812"/>
</kw>
<status status="PASS" starttime="20230913 09:11:13.811" endtime="20230913 09:11:13.812"/>
</branch>
<status status="PASS" starttime="20230913 09:11:13.811" endtime="20230913 09:11:13.812"/>
</if>
<status status="PASS" starttime="20230913 09:11:13.780" endtime="20230913 09:11:13.812"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230913 09:11:13.813" endtime="20230913 09:11:13.814"/>
</kw>
<status status="PASS" starttime="20230913 09:11:13.813" endtime="20230913 09:11:13.814"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>403</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 09:11:13.819" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/du?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 09:11:13.838" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 09:11:13.838" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230913 09:11:13.816" endtime="20230913 09:11:13.838"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 09:11:13.839" level="INFO">200</msg>
<status status="PASS" starttime="20230913 09:11:13.839" endtime="20230913 09:11:13.840"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 09:11:13.840" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 09:11:13.840" endtime="20230913 09:11:13.840"/>
</kw>
<status status="PASS" starttime="20230913 09:11:13.815" endtime="20230913 09:11:13.841"/>
</kw>
<msg timestamp="20230913 09:11:13.841" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 09:11:13.815" endtime="20230913 09:11:13.841"/>
</kw>
<msg timestamp="20230913 09:11:13.841" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230913 09:11:13.814" endtime="20230913 09:11:13.841"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230913 09:11:13.842" endtime="20230913 09:11:13.842"/>
</kw>
<status status="NOT RUN" starttime="20230913 09:11:13.841" endtime="20230913 09:11:13.842"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230913 09:11:13.842" endtime="20230913 09:11:13.842"/>
</kw>
<status status="PASS" starttime="20230913 09:11:13.842" endtime="20230913 09:11:13.842"/>
</branch>
<status status="PASS" starttime="20230913 09:11:13.841" endtime="20230913 09:11:13.842"/>
</if>
<status status="PASS" starttime="20230913 09:11:13.814" endtime="20230913 09:11:13.842"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230913 09:11:13.843" endtime="20230913 09:11:13.843"/>
</kw>
<status status="PASS" starttime="20230913 09:11:13.843" endtime="20230913 09:11:13.844"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 09:11:13.848" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/du?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 09:11:13.865" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 09:11:13.865" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230913 09:11:13.845" endtime="20230913 09:11:13.865"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 09:11:13.867" level="INFO">200</msg>
<status status="PASS" starttime="20230913 09:11:13.865" endtime="20230913 09:11:13.867"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 09:11:13.868" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 09:11:13.867" endtime="20230913 09:11:13.868"/>
</kw>
<status status="PASS" starttime="20230913 09:11:13.845" endtime="20230913 09:11:13.868"/>
</kw>
<msg timestamp="20230913 09:11:13.868" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 09:11:13.845" endtime="20230913 09:11:13.868"/>
</kw>
<msg timestamp="20230913 09:11:13.868" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230913 09:11:13.844" endtime="20230913 09:11:13.868"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230913 09:11:13.869" endtime="20230913 09:11:13.869"/>
</kw>
<status status="NOT RUN" starttime="20230913 09:11:13.869" endtime="20230913 09:11:13.869"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230913 09:11:13.869" endtime="20230913 09:11:13.870"/>
</kw>
<status status="PASS" starttime="20230913 09:11:13.869" endtime="20230913 09:11:13.870"/>
</branch>
<status status="PASS" starttime="20230913 09:11:13.868" endtime="20230913 09:11:13.870"/>
</if>
<status status="PASS" starttime="20230913 09:11:13.844" endtime="20230913 09:11:13.870"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230913 09:11:13.870" endtime="20230913 09:11:13.871"/>
</kw>
<status status="PASS" starttime="20230913 09:11:13.870" endtime="20230913 09:11:13.871"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 09:11:13.876" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/du?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 09:11:13.894" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 09:11:13.894" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230913 09:11:13.873" endtime="20230913 09:11:13.894"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 09:11:13.896" level="INFO">200</msg>
<status status="PASS" starttime="20230913 09:11:13.895" endtime="20230913 09:11:13.896"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 09:11:13.897" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 09:11:13.896" endtime="20230913 09:11:13.897"/>
</kw>
<status status="PASS" starttime="20230913 09:11:13.872" endtime="20230913 09:11:13.897"/>
</kw>
<msg timestamp="20230913 09:11:13.897" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 09:11:13.872" endtime="20230913 09:11:13.897"/>
</kw>
<msg timestamp="20230913 09:11:13.897" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230913 09:11:13.871" endtime="20230913 09:11:13.897"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230913 09:11:13.898" endtime="20230913 09:11:13.898"/>
</kw>
<status status="NOT RUN" starttime="20230913 09:11:13.898" endtime="20230913 09:11:13.898"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230913 09:11:13.898" endtime="20230913 09:11:13.899"/>
</kw>
<status status="PASS" starttime="20230913 09:11:13.898" endtime="20230913 09:11:13.899"/>
</branch>
<status status="PASS" starttime="20230913 09:11:13.898" endtime="20230913 09:11:13.899"/>
</if>
<status status="PASS" starttime="20230913 09:11:13.871" endtime="20230913 09:11:13.899"/>
</kw>
<status status="PASS" starttime="20230913 09:11:13.769" endtime="20230913 09:11:13.899"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230913 09:11:13.768" endtime="20230913 09:11:13.899"/>
</test>
<test id="s1-s3-s2-t6" name="Check Quota Usage api access" line="116">
<kw name="Check Access">
<arg>${QUOTA_USAGE_URL}?path=/</arg>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 09:11:13.906" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 09:11:13.910" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 09:11:13.910" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230913 09:11:13.903" endtime="20230913 09:11:13.910"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 09:11:13.911" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230913 09:11:13.910" endtime="20230913 09:11:13.911"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 09:11:13.911" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 09:11:13.911" endtime="20230913 09:11:13.911"/>
</kw>
<status status="PASS" starttime="20230913 09:11:13.903" endtime="20230913 09:11:13.912"/>
</kw>
<msg timestamp="20230913 09:11:13.912" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 09:11:13.902" endtime="20230913 09:11:13.912"/>
</kw>
<status status="PASS" starttime="20230913 09:11:13.902" endtime="20230913 09:11:13.912"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 09:11:13.917" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/quota?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 09:11:13.955" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 09:11:13.956" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230913 09:11:13.914" endtime="20230913 09:11:13.956"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 09:11:13.957" level="INFO">200</msg>
<status status="PASS" starttime="20230913 09:11:13.956" endtime="20230913 09:11:13.957"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 09:11:13.958" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 09:11:13.957" endtime="20230913 09:11:13.958"/>
</kw>
<status status="PASS" starttime="20230913 09:11:13.914" endtime="20230913 09:11:13.958"/>
</kw>
<msg timestamp="20230913 09:11:13.958" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 09:11:13.913" endtime="20230913 09:11:13.958"/>
</kw>
<msg timestamp="20230913 09:11:13.959" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230913 09:11:13.913" endtime="20230913 09:11:13.959"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230913 09:11:13.959" endtime="20230913 09:11:13.959"/>
</kw>
<status status="NOT RUN" starttime="20230913 09:11:13.959" endtime="20230913 09:11:13.959"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230913 09:11:13.960" endtime="20230913 09:11:13.960"/>
</kw>
<status status="PASS" starttime="20230913 09:11:13.960" endtime="20230913 09:11:13.960"/>
</branch>
<status status="PASS" starttime="20230913 09:11:13.959" endtime="20230913 09:11:13.960"/>
</if>
<status status="PASS" starttime="20230913 09:11:13.912" endtime="20230913 09:11:13.960"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230913 09:11:13.961" endtime="20230913 09:11:13.962"/>
</kw>
<status status="PASS" starttime="20230913 09:11:13.961" endtime="20230913 09:11:13.962"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>403</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 09:11:13.968" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/quota?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 09:11:13.985" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 09:11:13.985" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230913 09:11:13.965" endtime="20230913 09:11:13.986"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 09:11:13.987" level="INFO">200</msg>
<status status="PASS" starttime="20230913 09:11:13.986" endtime="20230913 09:11:13.987"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 09:11:13.988" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 09:11:13.987" endtime="20230913 09:11:13.988"/>
</kw>
<status status="PASS" starttime="20230913 09:11:13.964" endtime="20230913 09:11:13.988"/>
</kw>
<msg timestamp="20230913 09:11:13.988" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 09:11:13.964" endtime="20230913 09:11:13.988"/>
</kw>
<msg timestamp="20230913 09:11:13.989" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230913 09:11:13.963" endtime="20230913 09:11:13.989"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230913 09:11:13.989" endtime="20230913 09:11:13.989"/>
</kw>
<status status="NOT RUN" starttime="20230913 09:11:13.989" endtime="20230913 09:11:13.989"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230913 09:11:13.990" endtime="20230913 09:11:13.990"/>
</kw>
<status status="PASS" starttime="20230913 09:11:13.989" endtime="20230913 09:11:13.990"/>
</branch>
<status status="PASS" starttime="20230913 09:11:13.989" endtime="20230913 09:11:13.990"/>
</if>
<status status="PASS" starttime="20230913 09:11:13.963" endtime="20230913 09:11:13.990"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230913 09:11:13.991" endtime="20230913 09:11:13.991"/>
</kw>
<status status="PASS" starttime="20230913 09:11:13.991" endtime="20230913 09:11:13.992"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 09:11:13.997" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/quota?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 09:11:14.014" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 09:11:14.014" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230913 09:11:13.994" endtime="20230913 09:11:14.014"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 09:11:14.016" level="INFO">200</msg>
<status status="PASS" starttime="20230913 09:11:14.015" endtime="20230913 09:11:14.016"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 09:11:14.016" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 09:11:14.016" endtime="20230913 09:11:14.016"/>
</kw>
<status status="PASS" starttime="20230913 09:11:13.993" endtime="20230913 09:11:14.017"/>
</kw>
<msg timestamp="20230913 09:11:14.017" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 09:11:13.993" endtime="20230913 09:11:14.017"/>
</kw>
<msg timestamp="20230913 09:11:14.017" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230913 09:11:13.992" endtime="20230913 09:11:14.017"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230913 09:11:14.018" endtime="20230913 09:11:14.018"/>
</kw>
<status status="NOT RUN" starttime="20230913 09:11:14.017" endtime="20230913 09:11:14.018"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230913 09:11:14.018" endtime="20230913 09:11:14.018"/>
</kw>
<status status="PASS" starttime="20230913 09:11:14.018" endtime="20230913 09:11:14.018"/>
</branch>
<status status="PASS" starttime="20230913 09:11:14.017" endtime="20230913 09:11:14.019"/>
</if>
<status status="PASS" starttime="20230913 09:11:13.992" endtime="20230913 09:11:14.019"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230913 09:11:14.019" endtime="20230913 09:11:14.020"/>
</kw>
<status status="PASS" starttime="20230913 09:11:14.019" endtime="20230913 09:11:14.020"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 09:11:14.025" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/quota?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 09:11:14.045" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 09:11:14.045" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230913 09:11:14.022" endtime="20230913 09:11:14.045"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 09:11:14.047" level="INFO">200</msg>
<status status="PASS" starttime="20230913 09:11:14.046" endtime="20230913 09:11:14.047"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 09:11:14.048" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 09:11:14.048" endtime="20230913 09:11:14.048"/>
</kw>
<status status="PASS" starttime="20230913 09:11:14.021" endtime="20230913 09:11:14.049"/>
</kw>
<msg timestamp="20230913 09:11:14.049" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 09:11:14.021" endtime="20230913 09:11:14.049"/>
</kw>
<msg timestamp="20230913 09:11:14.049" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230913 09:11:14.020" endtime="20230913 09:11:14.049"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230913 09:11:14.050" endtime="20230913 09:11:14.050"/>
</kw>
<status status="NOT RUN" starttime="20230913 09:11:14.049" endtime="20230913 09:11:14.050"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230913 09:11:14.050" endtime="20230913 09:11:14.050"/>
</kw>
<status status="PASS" starttime="20230913 09:11:14.050" endtime="20230913 09:11:14.050"/>
</branch>
<status status="PASS" starttime="20230913 09:11:14.049" endtime="20230913 09:11:14.051"/>
</if>
<status status="PASS" starttime="20230913 09:11:14.020" endtime="20230913 09:11:14.051"/>
</kw>
<status status="PASS" starttime="20230913 09:11:13.901" endtime="20230913 09:11:14.051"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230913 09:11:13.901" endtime="20230913 09:11:14.051"/>
</test>
<test id="s1-s3-s2-t7" name="Check File Size Distribution api access" line="119">
<kw name="Check Access">
<arg>${FILE_SIZE_DIST_URL}?path=/</arg>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 09:11:14.059" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 09:11:14.062" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 09:11:14.062" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230913 09:11:14.055" endtime="20230913 09:11:14.062"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 09:11:14.063" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230913 09:11:14.063" endtime="20230913 09:11:14.063"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 09:11:14.064" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 09:11:14.064" endtime="20230913 09:11:14.064"/>
</kw>
<status status="PASS" starttime="20230913 09:11:14.055" endtime="20230913 09:11:14.064"/>
</kw>
<msg timestamp="20230913 09:11:14.064" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 09:11:14.054" endtime="20230913 09:11:14.064"/>
</kw>
<status status="PASS" starttime="20230913 09:11:14.054" endtime="20230913 09:11:14.065"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 09:11:14.069" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/dist?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 09:11:14.094" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 09:11:14.094" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230913 09:11:14.067" endtime="20230913 09:11:14.094"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 09:11:14.095" level="INFO">200</msg>
<status status="PASS" starttime="20230913 09:11:14.095" endtime="20230913 09:11:14.096"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 09:11:14.096" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 09:11:14.096" endtime="20230913 09:11:14.096"/>
</kw>
<status status="PASS" starttime="20230913 09:11:14.066" endtime="20230913 09:11:14.097"/>
</kw>
<msg timestamp="20230913 09:11:14.097" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 09:11:14.066" endtime="20230913 09:11:14.097"/>
</kw>
<msg timestamp="20230913 09:11:14.097" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230913 09:11:14.065" endtime="20230913 09:11:14.097"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230913 09:11:14.098" endtime="20230913 09:11:14.098"/>
</kw>
<status status="NOT RUN" starttime="20230913 09:11:14.097" endtime="20230913 09:11:14.098"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230913 09:11:14.098" endtime="20230913 09:11:14.099"/>
</kw>
<status status="PASS" starttime="20230913 09:11:14.098" endtime="20230913 09:11:14.099"/>
</branch>
<status status="PASS" starttime="20230913 09:11:14.097" endtime="20230913 09:11:14.099"/>
</if>
<status status="PASS" starttime="20230913 09:11:14.065" endtime="20230913 09:11:14.099"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230913 09:11:14.099" endtime="20230913 09:11:14.100"/>
</kw>
<status status="PASS" starttime="20230913 09:11:14.099" endtime="20230913 09:11:14.100"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>403</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 09:11:14.105" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/dist?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 09:11:14.121" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 09:11:14.121" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230913 09:11:14.102" endtime="20230913 09:11:14.121"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 09:11:14.123" level="INFO">200</msg>
<status status="PASS" starttime="20230913 09:11:14.122" endtime="20230913 09:11:14.123"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 09:11:14.123" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 09:11:14.123" endtime="20230913 09:11:14.123"/>
</kw>
<status status="PASS" starttime="20230913 09:11:14.101" endtime="20230913 09:11:14.124"/>
</kw>
<msg timestamp="20230913 09:11:14.124" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 09:11:14.101" endtime="20230913 09:11:14.124"/>
</kw>
<msg timestamp="20230913 09:11:14.124" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230913 09:11:14.101" endtime="20230913 09:11:14.124"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230913 09:11:14.125" endtime="20230913 09:11:14.125"/>
</kw>
<status status="NOT RUN" starttime="20230913 09:11:14.125" endtime="20230913 09:11:14.125"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230913 09:11:14.125" endtime="20230913 09:11:14.126"/>
</kw>
<status status="PASS" starttime="20230913 09:11:14.125" endtime="20230913 09:11:14.126"/>
</branch>
<status status="PASS" starttime="20230913 09:11:14.125" endtime="20230913 09:11:14.126"/>
</if>
<status status="PASS" starttime="20230913 09:11:14.100" endtime="20230913 09:11:14.126"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230913 09:11:14.127" endtime="20230913 09:11:14.127"/>
</kw>
<status status="PASS" starttime="20230913 09:11:14.126" endtime="20230913 09:11:14.127"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 09:11:14.132" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/dist?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 09:11:14.149" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 09:11:14.149" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230913 09:11:14.129" endtime="20230913 09:11:14.149"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 09:11:14.150" level="INFO">200</msg>
<status status="PASS" starttime="20230913 09:11:14.150" endtime="20230913 09:11:14.150"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 09:11:14.151" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 09:11:14.151" endtime="20230913 09:11:14.151"/>
</kw>
<status status="PASS" starttime="20230913 09:11:14.129" endtime="20230913 09:11:14.151"/>
</kw>
<msg timestamp="20230913 09:11:14.151" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 09:11:14.129" endtime="20230913 09:11:14.152"/>
</kw>
<msg timestamp="20230913 09:11:14.152" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230913 09:11:14.128" endtime="20230913 09:11:14.152"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230913 09:11:14.153" endtime="20230913 09:11:14.153"/>
</kw>
<status status="NOT RUN" starttime="20230913 09:11:14.152" endtime="20230913 09:11:14.153"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230913 09:11:14.153" endtime="20230913 09:11:14.153"/>
</kw>
<status status="PASS" starttime="20230913 09:11:14.153" endtime="20230913 09:11:14.154"/>
</branch>
<status status="PASS" starttime="20230913 09:11:14.152" endtime="20230913 09:11:14.154"/>
</if>
<status status="PASS" starttime="20230913 09:11:14.127" endtime="20230913 09:11:14.154"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230913 09:11:14.154" endtime="20230913 09:11:14.157"/>
</kw>
<status status="PASS" starttime="20230913 09:11:14.154" endtime="20230913 09:11:14.157"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 09:11:14.163" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/dist?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 09:11:14.178" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 09:11:14.178" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230913 09:11:14.159" endtime="20230913 09:11:14.178"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 09:11:14.179" level="INFO">200</msg>
<status status="PASS" starttime="20230913 09:11:14.179" endtime="20230913 09:11:14.180"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 09:11:14.180" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 09:11:14.180" endtime="20230913 09:11:14.180"/>
</kw>
<status status="PASS" starttime="20230913 09:11:14.159" endtime="20230913 09:11:14.181"/>
</kw>
<msg timestamp="20230913 09:11:14.181" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 09:11:14.158" endtime="20230913 09:11:14.181"/>
</kw>
<msg timestamp="20230913 09:11:14.181" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230913 09:11:14.158" endtime="20230913 09:11:14.181"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230913 09:11:14.182" endtime="20230913 09:11:14.182"/>
</kw>
<status status="NOT RUN" starttime="20230913 09:11:14.181" endtime="20230913 09:11:14.182"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230913 09:11:14.182" endtime="20230913 09:11:14.182"/>
</kw>
<status status="PASS" starttime="20230913 09:11:14.182" endtime="20230913 09:11:14.182"/>
</branch>
<status status="PASS" starttime="20230913 09:11:14.181" endtime="20230913 09:11:14.183"/>
</if>
<status status="PASS" starttime="20230913 09:11:14.157" endtime="20230913 09:11:14.183"/>
</kw>
<status status="PASS" starttime="20230913 09:11:14.053" endtime="20230913 09:11:14.183"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230913 09:11:14.052" endtime="20230913 09:11:14.183"/>
</test>
<test id="s1-s3-s2-t8" name="Check Recon Namespace Summary Root" line="122">
<kw name="Wait For Summary">
<arg>${SUMMARY_URL}?path=/</arg>
<arg>ROOT</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 09:11:14.190" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 09:11:14.207" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 09:11:14.207" level="INFO">${output} = {"path":"","type":"ROOT","countStats":{"numVolume":3,"numBucket":2,"numDir":1,"numKey":1},"objectInfo":{"metadata":null,"name":null,"quotaInBytes":0,"quotaInNamespace":0,"usedNamespace":0,"creationTim...</msg>
<status status="PASS" starttime="20230913 09:11:14.188" endtime="20230913 09:11:14.207"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 09:11:14.209" level="INFO">{"path":"","type":"ROOT","countStats":{"numVolume":3,"numBucket":2,"numDir":1,"numKey":1},"objectInfo":{"metadata":null,"name":null,"quotaInBytes":0,"quotaInNamespace":0,"usedNamespace":0,"creationTime":0,"modificationTime":0,"acls":null},"status":"OK"}</msg>
<status status="PASS" starttime="20230913 09:11:14.208" endtime="20230913 09:11:14.209"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 09:11:14.210" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 09:11:14.209" endtime="20230913 09:11:14.210"/>
</kw>
<status status="PASS" starttime="20230913 09:11:14.187" endtime="20230913 09:11:14.210"/>
</kw>
<msg timestamp="20230913 09:11:14.210" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 09:11:14.187" endtime="20230913 09:11:14.210"/>
</kw>
<msg timestamp="20230913 09:11:14.210" level="INFO">${result} = {"path":"","type":"ROOT","countStats":{"numVolume":3,"numBucket":2,"numDir":1,"numKey":1},"objectInfo":{"metadata":null,"name":null,"quotaInBytes":0,"quotaInNamespace":0,"usedNamespace":0,"creationTim...</msg>
<status status="PASS" starttime="20230913 09:11:14.186" endtime="20230913 09:11:14.210"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230913 09:11:14.210" endtime="20230913 09:11:14.211"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230913 09:11:14.211" endtime="20230913 09:11:14.211"/>
</kw>
<status status="PASS" starttime="20230913 09:11:14.186" endtime="20230913 09:11:14.211"/>
</kw>
<status status="PASS" starttime="20230913 09:11:14.185" endtime="20230913 09:11:14.212"/>
</kw>
<status status="PASS" starttime="20230913 09:11:14.185" endtime="20230913 09:11:14.212"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230913 09:11:14.184" endtime="20230913 09:11:14.212"/>
</test>
<test id="s1-s3-s2-t9" name="Check Recon Namespace Summary Volume" line="125">
<kw name="Wait For Summary">
<arg>${SUMMARY_URL}?path=/${VOLUME}</arg>
<arg>VOLUME</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 09:11:14.220" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-xctqo 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 09:11:14.241" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 09:11:14.241" level="INFO">${output} = {"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20230913 09:11:14.217" endtime="20230913 09:11:14.241"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 09:11:14.242" level="INFO">{"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20230913 09:11:14.241" endtime="20230913 09:11:14.242"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 09:11:14.243" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 09:11:14.242" endtime="20230913 09:11:14.243"/>
</kw>
<status status="PASS" starttime="20230913 09:11:14.217" endtime="20230913 09:11:14.243"/>
</kw>
<msg timestamp="20230913 09:11:14.243" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 09:11:14.216" endtime="20230913 09:11:14.243"/>
</kw>
<msg timestamp="20230913 09:11:14.243" level="INFO">${result} = {"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20230913 09:11:14.216" endtime="20230913 09:11:14.243"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20230913 09:11:14.244" level="FAIL">'{"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}' does not contain '"status":"OK"'</msg>
<status status="FAIL" starttime="20230913 09:11:14.243" endtime="20230913 09:11:14.244"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230913 09:11:14.244" endtime="20230913 09:11:14.244"/>
</kw>
<status status="FAIL" starttime="20230913 09:11:14.215" endtime="20230913 09:11:14.244"/>
</kw>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 09:11:24.259" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-xctqo 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 09:11:24.296" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 09:11:24.296" level="INFO">${output} = {"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20230913 09:11:24.250" endtime="20230913 09:11:24.296"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 09:11:24.298" level="INFO">{"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20230913 09:11:24.297" endtime="20230913 09:11:24.298"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 09:11:24.299" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 09:11:24.298" endtime="20230913 09:11:24.299"/>
</kw>
<status status="PASS" starttime="20230913 09:11:24.249" endtime="20230913 09:11:24.299"/>
</kw>
<msg timestamp="20230913 09:11:24.299" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 09:11:24.249" endtime="20230913 09:11:24.299"/>
</kw>
<msg timestamp="20230913 09:11:24.299" level="INFO">${result} = {"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20230913 09:11:24.248" endtime="20230913 09:11:24.300"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20230913 09:11:24.300" level="FAIL">'{"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}' does not contain '"status":"OK"'</msg>
<status status="FAIL" starttime="20230913 09:11:24.300" endtime="20230913 09:11:24.300"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230913 09:11:24.301" endtime="20230913 09:11:24.301"/>
</kw>
<status status="FAIL" starttime="20230913 09:11:24.246" endtime="20230913 09:11:24.301"/>
</kw>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 09:11:34.307" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-xctqo 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 09:11:34.322" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 09:11:34.322" level="INFO">${output} = {"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20230913 09:11:34.304" endtime="20230913 09:11:34.322"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 09:11:34.323" level="INFO">{"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20230913 09:11:34.323" endtime="20230913 09:11:34.324"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 09:11:34.324" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 09:11:34.324" endtime="20230913 09:11:34.324"/>
</kw>
<status status="PASS" starttime="20230913 09:11:34.303" endtime="20230913 09:11:34.325"/>
</kw>
<msg timestamp="20230913 09:11:34.325" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 09:11:34.303" endtime="20230913 09:11:34.325"/>
</kw>
<msg timestamp="20230913 09:11:34.325" level="INFO">${result} = {"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20230913 09:11:34.302" endtime="20230913 09:11:34.325"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20230913 09:11:34.326" level="FAIL">'{"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}' does not contain '"status":"OK"'</msg>
<status status="FAIL" starttime="20230913 09:11:34.325" endtime="20230913 09:11:34.326"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230913 09:11:34.326" endtime="20230913 09:11:34.326"/>
</kw>
<status status="FAIL" starttime="20230913 09:11:34.301" endtime="20230913 09:11:34.326"/>
</kw>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 09:11:44.333" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-xctqo 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 09:11:44.347" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 09:11:44.348" level="INFO">${output} = {"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20230913 09:11:44.330" endtime="20230913 09:11:44.348"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 09:11:44.349" level="INFO">{"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20230913 09:11:44.348" endtime="20230913 09:11:44.349"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 09:11:44.350" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 09:11:44.349" endtime="20230913 09:11:44.350"/>
</kw>
<status status="PASS" starttime="20230913 09:11:44.329" endtime="20230913 09:11:44.350"/>
</kw>
<msg timestamp="20230913 09:11:44.350" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 09:11:44.329" endtime="20230913 09:11:44.350"/>
</kw>
<msg timestamp="20230913 09:11:44.350" level="INFO">${result} = {"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20230913 09:11:44.328" endtime="20230913 09:11:44.350"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20230913 09:11:44.351" level="FAIL">'{"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}' does not contain '"status":"OK"'</msg>
<status status="FAIL" starttime="20230913 09:11:44.350" endtime="20230913 09:11:44.351"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230913 09:11:44.351" endtime="20230913 09:11:44.351"/>
</kw>
<status status="FAIL" starttime="20230913 09:11:44.327" endtime="20230913 09:11:44.351"/>
</kw>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 09:11:54.358" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-xctqo 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 09:11:54.397" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 09:11:54.397" level="INFO">${output} = {"path":"","type":"VOLUME","countStats":{"numVolume":-1,"numBucket":1,"numDir":2,"numKey":2},"objectInfo":{"metadata":{},"name":"vol-xctqo","quotaInBytes":-1,"quotaInNamespace":-1,"usedNamespace":1,"c...</msg>
<status status="PASS" starttime="20230913 09:11:54.355" endtime="20230913 09:11:54.397"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 09:11:54.399" level="INFO">{"path":"","type":"VOLUME","countStats":{"numVolume":-1,"numBucket":1,"numDir":2,"numKey":2},"objectInfo":{"metadata":{},"name":"vol-xctqo","quotaInBytes":-1,"quotaInNamespace":-1,"usedNamespace":1,"creationTime":1694596254794,"modificationTime":1694596254794,"acls":[{"type":"USER","name":"hadoop","aclScope":"ACCESS","aclList":["ALL"]},{"type":"GROUP","name":"hadoop","aclScope":"ACCESS","aclList":["ALL"]}],"admin":"hadoop","owner":"hadoop","volume":"vol-xctqo"},"status":"OK"}</msg>
<status status="PASS" starttime="20230913 09:11:54.398" endtime="20230913 09:11:54.399"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 09:11:54.399" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 09:11:54.399" endtime="20230913 09:11:54.400"/>
</kw>
<status status="PASS" starttime="20230913 09:11:54.354" endtime="20230913 09:11:54.400"/>
</kw>
<msg timestamp="20230913 09:11:54.400" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 09:11:54.354" endtime="20230913 09:11:54.400"/>
</kw>
<msg timestamp="20230913 09:11:54.400" level="INFO">${result} = {"path":"","type":"VOLUME","countStats":{"numVolume":-1,"numBucket":1,"numDir":2,"numKey":2},"objectInfo":{"metadata":{},"name":"vol-xctqo","quotaInBytes":-1,"quotaInNamespace":-1,"usedNamespace":1,"c...</msg>
<status status="PASS" starttime="20230913 09:11:54.353" endtime="20230913 09:11:54.400"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230913 09:11:54.400" endtime="20230913 09:11:54.401"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230913 09:11:54.401" endtime="20230913 09:11:54.401"/>
</kw>
<status status="PASS" starttime="20230913 09:11:54.352" endtime="20230913 09:11:54.402"/>
</kw>
<status status="PASS" starttime="20230913 09:11:14.215" endtime="20230913 09:11:54.402"/>
</kw>
<status status="PASS" starttime="20230913 09:11:14.214" endtime="20230913 09:11:54.402"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230913 09:11:14.213" endtime="20230913 09:11:54.402"/>
</test>
<test id="s1-s3-s2-t10" name="Check Recon Namespace Summary Bucket" line="128">
<kw name="Wait For Summary">
<arg>${SUMMARY_URL}?path=/${VOLUME}/${BUCKET}</arg>
<arg>BUCKET</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 09:11:54.411" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-xctqo/buc-yxlma 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 09:11:54.444" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 09:11:54.445" level="INFO">${output} = {"path":"","type":"BUCKET","countStats":{"numVolume":-1,"numBucket":-1,"numDir":2,"numKey":2},"objectInfo":{"versioningEnabled":false,"metadata":{},"name":"buc-yxlma","quotaInBytes":-1,"quotaInNamespa...</msg>
<status status="PASS" starttime="20230913 09:11:54.408" endtime="20230913 09:11:54.445"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 09:11:54.446" level="INFO">{"path":"","type":"BUCKET","countStats":{"numVolume":-1,"numBucket":-1,"numDir":2,"numKey":2},"objectInfo":{"versioningEnabled":false,"metadata":{},"name":"buc-yxlma","quotaInBytes":-1,"quotaInNamespace":-1,"usedNamespace":4,"creationTime":1694596259351,"modificationTime":1694596259351,"acls":[{"type":"USER","name":"hadoop","aclScope":"ACCESS","aclList":["ALL"]},{"type":"GROUP","name":"hadoop","aclScope":"ACCESS","aclList":["ALL"]}],"volumeName":"vol-xctqo","storageType":"DISK","versioning":false,"usedBytes":null,"encryptionInfo":null,"replicationConfigInfo":null,"sourceVolume":null,"sourceBucket":null,"bucketLayout":"FILE_SYSTEM_OPTIMIZED","owner":"hadoop"},"status":"OK"}</msg>
<status status="PASS" starttime="20230913 09:11:54.445" endtime="20230913 09:11:54.446"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 09:11:54.447" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 09:11:54.446" endtime="20230913 09:11:54.447"/>
</kw>
<status status="PASS" starttime="20230913 09:11:54.407" endtime="20230913 09:11:54.447"/>
</kw>
<msg timestamp="20230913 09:11:54.447" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 09:11:54.407" endtime="20230913 09:11:54.447"/>
</kw>
<msg timestamp="20230913 09:11:54.447" level="INFO">${result} = {"path":"","type":"BUCKET","countStats":{"numVolume":-1,"numBucket":-1,"numDir":2,"numKey":2},"objectInfo":{"versioningEnabled":false,"metadata":{},"name":"buc-yxlma","quotaInBytes":-1,"quotaInNamespa...</msg>
<status status="PASS" starttime="20230913 09:11:54.407" endtime="20230913 09:11:54.448"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230913 09:11:54.448" endtime="20230913 09:11:54.448"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230913 09:11:54.448" endtime="20230913 09:11:54.449"/>
</kw>
<status status="PASS" starttime="20230913 09:11:54.406" endtime="20230913 09:11:54.449"/>
</kw>
<status status="PASS" starttime="20230913 09:11:54.405" endtime="20230913 09:11:54.449"/>
</kw>
<status status="PASS" starttime="20230913 09:11:54.404" endtime="20230913 09:11:54.449"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230913 09:11:54.403" endtime="20230913 09:11:54.449"/>
</test>
<test id="s1-s3-s2-t11" name="Check Recon Namespace Summary Key" line="131">
<kw name="Wait For Summary">
<arg>${SUMMARY_URL}?path=/${VOLUME}/${BUCKET}/file1</arg>
<arg>KEY</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 09:11:54.458" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-xctqo/buc-yxlma/file1 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 09:11:54.511" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 09:11:54.511" level="INFO">${output} = {"path":"","type":"KEY","countStats":{"numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0},"objectInfo":{"fileName":"file1","file":true,"metadata":{},"name":"file1","quotaInBytes":0,"quotaInNamespace...</msg>
<status status="PASS" starttime="20230913 09:11:54.455" endtime="20230913 09:11:54.511"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 09:11:54.512" level="INFO">{"path":"","type":"KEY","countStats":{"numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0},"objectInfo":{"fileName":"file1","file":true,"metadata":{},"name":"file1","quotaInBytes":0,"quotaInNamespace":0,"usedNamespace":0,"creationTime":1694596263510,"modificationTime":1694596265605,"acls":[{"type":"USER","name":"hadoop","aclScope":"ACCESS","aclList":["ALL"]},{"type":"GROUP","name":"hadoop","aclScope":"ACCESS","aclList":["ALL"]}],"volumeName":"vol-xctqo","bucketName":"buc-yxlma","keyName":"file1","dataSize":4068,"keyLocationVersions":[{"version":0,"locationVersionMap":{"0":[{"blockID":{"containerBlockID":{"containerID":2,"localID":111677748019200012},"blockCommitSequenceId":14,"containerID":2,"localID":111677748019200012},"length":4068,"offset":0,"token":null,"createVersion":0,"pipeline":null,"partNumber":0,"containerID":2,"localID":111677748019200012,"blockCommitSequenceId":14}]},"locationList":[{"blockID":{"containerBlockID":{"containerID":2,"localID":111677748019200012},"blockCommitSequenceId":14,"containerID":2,"localID":111677748019200012},"length":4068,"offset":0,"token":null,"createVersion":0,"pipeline":null,"partNumber":0,"containerID":2,"localID":111677748019200012,"blockCommitSequenceId":14}],"blocksLatestVersionOnly":[{"blockID":{"containerBlockID":{"containerID":2,"localID":111677748019200012},"blockCommitSequenceId":14,"containerID":2,"localID":111677748019200012},"length":4068,"offset":0,"token":null,"createVersion":0,"pipeline":null,"partNumber":0,"containerID":2,"localID":111677748019200012,"blockCommitSequenceId":14}],"locationLists":[[{"blockID":{"containerBlockID":{"containerID":2,"localID":111677748019200012},"blockCommitSequenceId":14,"containerID":2,"localID":111677748019200012},"length":4068,"offset":0,"token":null,"createVersion":0,"pipeline":null,"partNumber":0,"containerID":2,"localID":111677748019200012,"blockCommitSequenceId":14}]],"locationListCount":1,"multipartKey":false}],"replicationConfig":{"replicationFactor":"THREE","requiredNodes":3,"replicationType":"RATIS"},"encInfo":null},"status":"OK"}</msg>
<status status="PASS" starttime="20230913 09:11:54.511" endtime="20230913 09:11:54.512"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 09:11:54.513" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 09:11:54.513" endtime="20230913 09:11:54.513"/>
</kw>
<status status="PASS" starttime="20230913 09:11:54.455" endtime="20230913 09:11:54.513"/>
</kw>
<msg timestamp="20230913 09:11:54.514" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 09:11:54.454" endtime="20230913 09:11:54.514"/>
</kw>
<msg timestamp="20230913 09:11:54.514" level="INFO">${result} = {"path":"","type":"KEY","countStats":{"numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0},"objectInfo":{"fileName":"file1","file":true,"metadata":{},"name":"file1","quotaInBytes":0,"quotaInNamespace...</msg>
<status status="PASS" starttime="20230913 09:11:54.454" endtime="20230913 09:11:54.514"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230913 09:11:54.514" endtime="20230913 09:11:54.515"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230913 09:11:54.515" endtime="20230913 09:11:54.515"/>
</kw>
<status status="PASS" starttime="20230913 09:11:54.453" endtime="20230913 09:11:54.515"/>
</kw>
<status status="PASS" starttime="20230913 09:11:54.453" endtime="20230913 09:11:54.515"/>
</kw>
<status status="PASS" starttime="20230913 09:11:54.452" endtime="20230913 09:11:54.515"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230913 09:11:54.451" endtime="20230913 09:11:54.516"/>
</test>
<test id="s1-s3-s2-t12" name="Check Recon Namespace Summary Directory" line="134">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET_LAYOUT}' == 'LEGACY'</arg>
<arg>Wait For Summary</arg>
<arg>${SUMMARY_URL}?path=/${VOLUME}/${BUCKET}/dir1/dir2/</arg>
<arg>DIRECTORY</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230913 09:11:54.519" endtime="20230913 09:11:54.519"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET_LAYOUT}' == 'FILE_SYSTEM_OPTIMIZED'</arg>
<arg>Wait For Summary</arg>
<arg>${SUMMARY_URL}?path=/${VOLUME}/${BUCKET}/dir1/dir2</arg>
<arg>DIRECTORY</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Wait For Summary">
<arg>${SUMMARY_URL}?path=/${VOLUME}/${BUCKET}/dir1/dir2</arg>
<arg>DIRECTORY</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 09:11:54.526" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-xctqo/buc-yxlma/dir1/dir2 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 09:11:54.552" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 09:11:54.552" level="INFO">${output} = {"path":"","type":"DIRECTORY","countStats":{"numVolume":-1,"numBucket":-1,"numDir":0,"numKey":1},"objectInfo":{"metadata":{},"name":"dir2","quotaInBytes":0,"quotaInNamespace":0,"usedNamespace":0,"crea...</msg>
<status status="PASS" starttime="20230913 09:11:54.523" endtime="20230913 09:11:54.552"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 09:11:54.553" level="INFO">{"path":"","type":"DIRECTORY","countStats":{"numVolume":-1,"numBucket":-1,"numDir":0,"numKey":1},"objectInfo":{"metadata":{},"name":"dir2","quotaInBytes":0,"quotaInNamespace":0,"usedNamespace":0,"creationTime":1694596270928,"modificationTime":1694596270928,"acls":[{"type":"USER","name":"hadoop","aclScope":"ACCESS","aclList":["ALL"]},{"type":"GROUP","name":"hadoop","aclScope":"ACCESS","aclList":["ALL"]}]},"status":"OK"}</msg>
<status status="PASS" starttime="20230913 09:11:54.552" endtime="20230913 09:11:54.553"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 09:11:54.554" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 09:11:54.553" endtime="20230913 09:11:54.554"/>
</kw>
<status status="PASS" starttime="20230913 09:11:54.523" endtime="20230913 09:11:54.554"/>
</kw>
<msg timestamp="20230913 09:11:54.554" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 09:11:54.522" endtime="20230913 09:11:54.554"/>
</kw>
<msg timestamp="20230913 09:11:54.554" level="INFO">${result} = {"path":"","type":"DIRECTORY","countStats":{"numVolume":-1,"numBucket":-1,"numDir":0,"numKey":1},"objectInfo":{"metadata":{},"name":"dir2","quotaInBytes":0,"quotaInNamespace":0,"usedNamespace":0,"crea...</msg>
<status status="PASS" starttime="20230913 09:11:54.522" endtime="20230913 09:11:54.555"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230913 09:11:54.555" endtime="20230913 09:11:54.555"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230913 09:11:54.555" endtime="20230913 09:11:54.555"/>
</kw>
<status status="PASS" starttime="20230913 09:11:54.521" endtime="20230913 09:11:54.556"/>
</kw>
<status status="PASS" starttime="20230913 09:11:54.521" endtime="20230913 09:11:54.556"/>
</kw>
<status status="PASS" starttime="20230913 09:11:54.520" endtime="20230913 09:11:54.558"/>
</kw>
<status status="PASS" starttime="20230913 09:11:54.520" endtime="20230913 09:11:54.558"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230913 09:11:54.518" endtime="20230913 09:11:54.558"/>
</test>
<test id="s1-s3-s2-t13" name="Check Recon Namespace Disk Usage" line="138">
<kw name="Wait For Summary">
<arg>${DISK_USAGE_URL}?path=/${VOLUME}/${BUCKET}&amp;files=true&amp;replica=true</arg>
<arg>\"sizeWithReplica\"</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 09:11:54.570" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/du?path=/vol-xctqo/buc-yxlma&amp;files=true&amp;replica=true 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 09:11:54.587" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 09:11:54.587" level="INFO">${output} = {"status":"OK","path":"/vol-xctqo/buc-yxlma","size":10106,"sizeWithReplica":-1,"subPathCount":1,"subPaths":[{"key":false,"path":"/vol-xctqo/buc-yxlma/dir1","size":6038,"sizeWithReplica":-1,"isKey":fal...</msg>
<status status="PASS" starttime="20230913 09:11:54.567" endtime="20230913 09:11:54.587"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 09:11:54.589" level="INFO">{"status":"OK","path":"/vol-xctqo/buc-yxlma","size":10106,"sizeWithReplica":-1,"subPathCount":1,"subPaths":[{"key":false,"path":"/vol-xctqo/buc-yxlma/dir1","size":6038,"sizeWithReplica":-1,"isKey":false}],"sizeDirectKey":4068}</msg>
<status status="PASS" starttime="20230913 09:11:54.588" endtime="20230913 09:11:54.589"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 09:11:54.590" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 09:11:54.589" endtime="20230913 09:11:54.590"/>
</kw>
<status status="PASS" starttime="20230913 09:11:54.566" endtime="20230913 09:11:54.590"/>
</kw>
<msg timestamp="20230913 09:11:54.590" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 09:11:54.565" endtime="20230913 09:11:54.590"/>
</kw>
<msg timestamp="20230913 09:11:54.590" level="INFO">${result} = {"status":"OK","path":"/vol-xctqo/buc-yxlma","size":10106,"sizeWithReplica":-1,"subPathCount":1,"subPaths":[{"key":false,"path":"/vol-xctqo/buc-yxlma/dir1","size":6038,"sizeWithReplica":-1,"isKey":fal...</msg>
<status status="PASS" starttime="20230913 09:11:54.565" endtime="20230913 09:11:54.590"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230913 09:11:54.591" endtime="20230913 09:11:54.591"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230913 09:11:54.591" endtime="20230913 09:11:54.592"/>
</kw>
<status status="PASS" starttime="20230913 09:11:54.564" endtime="20230913 09:11:54.592"/>
</kw>
<status status="PASS" starttime="20230913 09:11:54.564" endtime="20230913 09:11:54.592"/>
</kw>
<status status="PASS" starttime="20230913 09:11:54.561" endtime="20230913 09:11:54.592"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230913 09:11:54.560" endtime="20230913 09:11:54.592"/>
</test>
<test id="s1-s3-s2-t14" name="Check Recon Namespace Volume Quota Usage" line="141">
<kw name="Wait For Summary">
<arg>${QUOTA_USAGE_URL}?path=/${VOLUME}</arg>
<arg>\"used\"</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 09:11:54.602" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/quota?path=/vol-xctqo 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 09:11:54.619" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 09:11:54.619" level="INFO">${output} = {"allowed":-1,"used":10106,"status":"OK"}</msg>
<status status="PASS" starttime="20230913 09:11:54.599" endtime="20230913 09:11:54.619"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 09:11:54.620" level="INFO">{"allowed":-1,"used":10106,"status":"OK"}</msg>
<status status="PASS" starttime="20230913 09:11:54.619" endtime="20230913 09:11:54.620"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 09:11:54.621" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 09:11:54.620" endtime="20230913 09:11:54.621"/>
</kw>
<status status="PASS" starttime="20230913 09:11:54.598" endtime="20230913 09:11:54.621"/>
</kw>
<msg timestamp="20230913 09:11:54.621" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 09:11:54.598" endtime="20230913 09:11:54.621"/>
</kw>
<msg timestamp="20230913 09:11:54.622" level="INFO">${result} = {"allowed":-1,"used":10106,"status":"OK"}</msg>
<status status="PASS" starttime="20230913 09:11:54.597" endtime="20230913 09:11:54.622"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230913 09:11:54.622" endtime="20230913 09:11:54.622"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230913 09:11:54.622" endtime="20230913 09:11:54.623"/>
</kw>
<status status="PASS" starttime="20230913 09:11:54.597" endtime="20230913 09:11:54.623"/>
</kw>
<status status="PASS" starttime="20230913 09:11:54.596" endtime="20230913 09:11:54.623"/>
</kw>
<status status="PASS" starttime="20230913 09:11:54.595" endtime="20230913 09:11:54.623"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230913 09:11:54.594" endtime="20230913 09:11:54.623"/>
</test>
<test id="s1-s3-s2-t15" name="Check Recon Namespace Bucket Quota Usage" line="144">
<kw name="Wait For Summary">
<arg>${QUOTA_USAGE_URL}?path=/${VOLUME}/${BUCKET}</arg>
<arg>\"used\"</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 09:11:54.632" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/quota?path=/vol-xctqo/buc-yxlma 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 09:11:54.649" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 09:11:54.649" level="INFO">${output} = {"allowed":-1,"used":10106,"status":"OK"}</msg>
<status status="PASS" starttime="20230913 09:11:54.628" endtime="20230913 09:11:54.649"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 09:11:54.651" level="INFO">{"allowed":-1,"used":10106,"status":"OK"}</msg>
<status status="PASS" starttime="20230913 09:11:54.650" endtime="20230913 09:11:54.651"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 09:11:54.651" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 09:11:54.651" endtime="20230913 09:11:54.651"/>
</kw>
<status status="PASS" starttime="20230913 09:11:54.628" endtime="20230913 09:11:54.652"/>
</kw>
<msg timestamp="20230913 09:11:54.652" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 09:11:54.628" endtime="20230913 09:11:54.652"/>
</kw>
<msg timestamp="20230913 09:11:54.652" level="INFO">${result} = {"allowed":-1,"used":10106,"status":"OK"}</msg>
<status status="PASS" starttime="20230913 09:11:54.627" endtime="20230913 09:11:54.652"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230913 09:11:54.652" endtime="20230913 09:11:54.653"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230913 09:11:54.653" endtime="20230913 09:11:54.653"/>
</kw>
<status status="PASS" starttime="20230913 09:11:54.627" endtime="20230913 09:11:54.654"/>
</kw>
<status status="PASS" starttime="20230913 09:11:54.626" endtime="20230913 09:11:54.654"/>
</kw>
<status status="PASS" starttime="20230913 09:11:54.625" endtime="20230913 09:11:54.654"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230913 09:11:54.624" endtime="20230913 09:11:54.654"/>
</test>
<test id="s1-s3-s2-t16" name="Check Recon Namespace File Size Distribution Root" line="147">
<kw name="Wait For Summary">
<arg>${FILE_SIZE_DIST_URL}?path=/</arg>
<arg>\"dist\"</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 09:11:54.663" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/dist?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 09:11:54.679" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 09:11:54.679" level="INFO">${output} = {"dist":[0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"status":"OK"}</msg>
<status status="PASS" starttime="20230913 09:11:54.660" endtime="20230913 09:11:54.679"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 09:11:54.680" level="INFO">{"dist":[0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"status":"OK"}</msg>
<status status="PASS" starttime="20230913 09:11:54.679" endtime="20230913 09:11:54.680"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 09:11:54.681" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 09:11:54.680" endtime="20230913 09:11:54.681"/>
</kw>
<status status="PASS" starttime="20230913 09:11:54.659" endtime="20230913 09:11:54.681"/>
</kw>
<msg timestamp="20230913 09:11:54.681" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 09:11:54.659" endtime="20230913 09:11:54.681"/>
</kw>
<msg timestamp="20230913 09:11:54.681" level="INFO">${result} = {"dist":[0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"status":"OK"}</msg>
<status status="PASS" starttime="20230913 09:11:54.659" endtime="20230913 09:11:54.681"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230913 09:11:54.682" endtime="20230913 09:11:54.682"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230913 09:11:54.682" endtime="20230913 09:11:54.683"/>
</kw>
<status status="PASS" starttime="20230913 09:11:54.658" endtime="20230913 09:11:54.683"/>
</kw>
<status status="PASS" starttime="20230913 09:11:54.658" endtime="20230913 09:11:54.683"/>
</kw>
<status status="PASS" starttime="20230913 09:11:54.657" endtime="20230913 09:11:54.683"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230913 09:11:54.656" endtime="20230913 09:11:54.683"/>
</test>
<doc>Smoke test for Recon Namespace Summary Endpoint for FILE_SYSTEM_OPTIMIZED buckets.</doc>
<status status="PASS" starttime="20230913 09:10:50.185" endtime="20230913 09:11:54.684"/>
</suite>
<status status="PASS" starttime="20230913 09:10:09.725" endtime="20230913 09:11:54.688"/>
</suite>
<suite id="s1-s4" name="Loaddata" source="/opt/hadoop/smoketest/topology/loaddata.robot">
<test id="s1-s4-t1" name="Create a volume, bucket and key" line="27">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create topvol1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 09:11:57.695" level="INFO">Running command 'ozone sh volume create topvol1 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 09:12:01.977" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 09:12:01.977" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230913 09:11:57.692" endtime="20230913 09:12:01.977"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 09:12:01.978" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230913 09:12:01.977" endtime="20230913 09:12:01.978"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 09:12:01.979" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 09:12:01.979" endtime="20230913 09:12:01.979"/>
</kw>
<status status="PASS" starttime="20230913 09:11:57.691" endtime="20230913 09:12:01.980"/>
</kw>
<msg timestamp="20230913 09:12:01.980" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 09:11:57.691" endtime="20230913 09:12:01.980"/>
</kw>
<msg timestamp="20230913 09:12:01.980" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230913 09:11:57.690" endtime="20230913 09:12:01.980"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230913 09:12:01.980" endtime="20230913 09:12:01.981"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /topvol1/bucket1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 09:12:01.985" level="INFO">Running command 'ozone sh bucket create /topvol1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 09:12:06.709" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 09:12:06.709" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230913 09:12:01.982" endtime="20230913 09:12:06.709"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 09:12:06.710" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230913 09:12:06.710" endtime="20230913 09:12:06.710"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 09:12:06.711" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 09:12:06.710" endtime="20230913 09:12:06.711"/>
</kw>
<status status="PASS" starttime="20230913 09:12:01.982" endtime="20230913 09:12:06.711"/>
</kw>
<msg timestamp="20230913 09:12:06.711" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 09:12:01.982" endtime="20230913 09:12:06.711"/>
</kw>
<msg timestamp="20230913 09:12:06.711" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230913 09:12:01.981" endtime="20230913 09:12:06.711"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230913 09:12:06.712" endtime="20230913 09:12:06.712"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /topvol1/bucket1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 09:12:06.717" level="INFO">Running command 'ozone sh key put /topvol1/bucket1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 09:12:14.137" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 09:12:14.137" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230913 09:12:06.714" endtime="20230913 09:12:14.137"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 09:12:14.139" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230913 09:12:14.138" endtime="20230913 09:12:14.139"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 09:12:14.139" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 09:12:14.139" endtime="20230913 09:12:14.139"/>
</kw>
<status status="PASS" starttime="20230913 09:12:06.713" endtime="20230913 09:12:14.140"/>
</kw>
<msg timestamp="20230913 09:12:14.140" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 09:12:06.713" endtime="20230913 09:12:14.140"/>
</kw>
<msg timestamp="20230913 09:12:14.140" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230913 09:12:06.713" endtime="20230913 09:12:14.140"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230913 09:12:14.140" endtime="20230913 09:12:14.141"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230913 09:11:57.689" endtime="20230913 09:12:14.141"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20230913 09:11:57.625" endtime="20230913 09:12:14.142"/>
</suite>
<suite id="s1-s5" name="readdata-first-half" source="/opt/hadoop/smoketest/topology/readdata.robot">
<test id="s1-s5-t1" name="Read data from previously created key" line="27">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230913 09:12:22.072" level="INFO">${random} = 37366</msg>
<status status="PASS" starttime="20230913 09:12:22.071" endtime="20230913 09:12:22.072"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /topvol1/bucket1/key1 /tmp/key1-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 09:12:22.077" level="INFO">Running command 'ozone sh key get /topvol1/bucket1/key1 /tmp/key1-37366 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 09:12:28.606" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 09:12:28.606" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230913 09:12:22.074" endtime="20230913 09:12:28.606"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 09:12:28.607" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230913 09:12:28.606" endtime="20230913 09:12:28.607"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 09:12:28.608" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 09:12:28.607" endtime="20230913 09:12:28.608"/>
</kw>
<status status="PASS" starttime="20230913 09:12:22.073" endtime="20230913 09:12:28.608"/>
</kw>
<msg timestamp="20230913 09:12:28.608" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 09:12:22.073" endtime="20230913 09:12:28.608"/>
</kw>
<msg timestamp="20230913 09:12:28.608" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230913 09:12:22.072" endtime="20230913 09:12:28.608"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230913 09:12:28.609" endtime="20230913 09:12:28.609"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230913 09:12:22.071" endtime="20230913 09:12:28.609"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20230913 09:12:22.022" endtime="20230913 09:12:28.610"/>
</suite>
<suite id="s1-s6" name="readdata-second-half" source="/opt/hadoop/smoketest/topology/readdata.robot">
<test id="s1-s6-t1" name="Read data from previously created key" line="27">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230913 09:13:15.482" level="INFO">${random} = 54338</msg>
<status status="PASS" starttime="20230913 09:13:15.482" endtime="20230913 09:13:15.482"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /topvol1/bucket1/key1 /tmp/key1-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 09:13:15.487" level="INFO">Running command 'ozone sh key get /topvol1/bucket1/key1 /tmp/key1-54338 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 09:14:10.377" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 09:14:10.378" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230913 09:13:15.484" endtime="20230913 09:14:10.378"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 09:14:10.379" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230913 09:14:10.378" endtime="20230913 09:14:10.379"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 09:14:10.379" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 09:14:10.379" endtime="20230913 09:14:10.380"/>
</kw>
<status status="PASS" starttime="20230913 09:13:15.483" endtime="20230913 09:14:10.380"/>
</kw>
<msg timestamp="20230913 09:14:10.380" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 09:13:15.483" endtime="20230913 09:14:10.380"/>
</kw>
<msg timestamp="20230913 09:14:10.380" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230913 09:13:15.482" endtime="20230913 09:14:10.380"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230913 09:14:10.380" endtime="20230913 09:14:10.381"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230913 09:13:15.481" endtime="20230913 09:14:10.381"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20230913 09:13:15.425" endtime="20230913 09:14:10.382"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="233825"/>
</suite>
<statistics>
<total>
<stat pass="32" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="32" fail="0" skip="0" id="s1" name="ozone-topology">ozone-topology</stat>
<stat pass="2" fail="0" skip="0" id="s1-s1" name="Basic">ozone-topology.Basic</stat>
<stat pass="4" fail="0" skip="0" id="s1-s2" name="Cli">ozone-topology.Cli</stat>
<stat pass="23" fail="0" skip="0" id="s1-s3" name="Recon">ozone-topology.Recon</stat>
<stat pass="7" fail="0" skip="0" id="s1-s3-s1" name="Recon-Api">ozone-topology.Recon.Recon-Api</stat>
<stat pass="16" fail="0" skip="0" id="s1-s3-s2" name="Recon-Nssummary">ozone-topology.Recon.Recon-Nssummary</stat>
<stat pass="1" fail="0" skip="0" id="s1-s4" name="Loaddata">ozone-topology.Loaddata</stat>
<stat pass="1" fail="0" skip="0" id="s1-s5" name="readdata-first-half">ozone-topology.readdata-first-half</stat>
<stat pass="1" fail="0" skip="0" id="s1-s6" name="readdata-second-half">ozone-topology.readdata-second-half</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
