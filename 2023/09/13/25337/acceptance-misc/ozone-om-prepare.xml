<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 6.1.1 (Python 3.8.10 on linux)" generated="20230913 09:07:24.327" rpa="false" schemaversion="4">
<suite id="s1" name="ozone-om-prepare">
<suite id="s1-s1" name="Om-Prepare" source="/opt/hadoop/smoketest/omha/om-prepare.robot">
<kw name="Create Specific OM data for prepare" type="SETUP">
<kw name="Freon OCKG" library="freon">
<arg>prefix=om-prepare</arg>
<arg>n=100</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 09:01:19.202" level="INFO">Running command 'ozone freon ockg --om-service-id=omservice -t 1 -n100 -p om-prepare  2&gt;&amp;1'.</msg>
<msg timestamp="20230913 09:01:37.549" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 09:01:37.549" level="INFO">${output} = 2023-09-13 09:01:21,461 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-13 09:01:21,636 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230913 09:01:19.195" endtime="20230913 09:01:37.549"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 09:01:37.550" level="INFO">2023-09-13 09:01:21,461 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-13 09:01:21,636 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-09-13 09:01:21,636 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-09-13 09:01:21,790 [main] INFO freon.BaseFreonGenerator: Executing test with prefix om-prepare and number-of-tests 100
2023-09-13 09:01:21,873 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2023-09-13 09:01:22,725 [main] INFO rpc.RpcClient: Creating Volume: vol1, with hadoop as owner and space quota set to -1 bytes, counts quota set to -1
2023-09-13 09:01:22,875 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2023-09-13 09:01:22,983 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Encryption set to false, Replication Type set to server-side default replication type, Namespace Quota set to -1, Space Quota set to -1 
2023-09-13 09:01:23,875 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2023-09-13 09:01:24,187 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2023-09-13 09:01:24,579 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2023-09-13 09:01:24,876 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2023-09-13 09:01:25,880 [Thread-3] INFO freon.ProgressBar: Progress: 1.00 % (1 out of 100)
2023-09-13 09:01:26,880 [Thread-3] INFO freon.ProgressBar: Progress: 3.00 % (3 out of 100)
2023-09-13 09:01:27,884 [Thread-3] INFO freon.ProgressBar: Progress: 8.00 % (8 out of 100)
2023-09-13 09:01:28,885 [Thread-3] INFO freon.ProgressBar: Progress: 17.00 % (17 out of 100)
2023-09-13 09:01:29,886 [Thread-3] INFO freon.ProgressBar: Progress: 25.00 % (25 out of 100)
2023-09-13 09:01:30,888 [Thread-3] INFO freon.ProgressBar: Progress: 34.00 % (34 out of 100)
2023-09-13 09:01:31,889 [Thread-3] INFO freon.ProgressBar: Progress: 45.00 % (45 out of 100)
2023-09-13 09:01:32,889 [Thread-3] INFO freon.ProgressBar: Progress: 56.00 % (56 out of 100)
2023-09-13 09:01:33,890 [Thread-3] INFO freon.ProgressBar: Progress: 68.00 % (68 out of 100)
2023-09-13 09:01:34,896 [Thread-3] INFO freon.ProgressBar: Progress: 81.00 % (81 out of 100)
2023-09-13 09:01:35,897 [Thread-3] INFO freon.ProgressBar: Progress: 94.00 % (94 out of 100)
2023-09-13 09:01:36,897 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (100 out of 100)
2023-09-13 09:01:37,189 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=100, min=53.014935, max=2680.396075, mean=127.92798441702823, stddev=256.21353107652794, median=89.437945, p75=114.645937, p95=168.271319, p98=526.752377, p99=729.208451, p999=2680.396075, mean_rate=7.096835020383988, m1=2.6076624488171434, m5=2.1256169509557075, m15=2.042105155162785, rate_unit=events/second, duration_unit=milliseconds
2023-09-13 09:01:37,189 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 15
2023-09-13 09:01:37,190 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-09-13 09:01:37,190 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 100</msg>
<status status="PASS" starttime="20230913 09:01:37.550" endtime="20230913 09:01:37.551"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 09:01:37.551" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 09:01:37.551" endtime="20230913 09:01:37.551"/>
</kw>
<status status="PASS" starttime="20230913 09:01:19.195" endtime="20230913 09:01:37.551"/>
</kw>
<msg timestamp="20230913 09:01:37.551" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 09:01:19.195" endtime="20230913 09:01:37.552"/>
</kw>
<msg timestamp="20230913 09:01:37.552" level="INFO">${result} = 2023-09-13 09:01:21,461 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-13 09:01:21,636 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230913 09:01:19.194" endtime="20230913 09:01:37.552"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230913 09:01:37.552" endtime="20230913 09:01:37.553"/>
</kw>
<status status="PASS" starttime="20230913 09:01:19.193" endtime="20230913 09:01:37.553"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230913 09:01:37.553" level="INFO">${random} = 16777</msg>
<status status="PASS" starttime="20230913 09:01:37.553" endtime="20230913 09:01:37.553"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${volume_name}</arg>
<arg>${random}-volume-for-prepare</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230913 09:01:37.555" level="INFO">${volume_name} = 16777-volume-for-prepare</msg>
<status status="PASS" starttime="20230913 09:01:37.553" endtime="20230913 09:01:37.555"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${bucket_name}</arg>
<arg>${random}-bucket-for-prepare</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230913 09:01:37.556" level="INFO">${bucket_name} = 16777-bucket-for-prepare</msg>
<status status="PASS" starttime="20230913 09:01:37.555" endtime="20230913 09:01:37.556"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create /${volume_name}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 09:01:37.560" level="INFO">Running command 'ozone sh volume create /16777-volume-for-prepare 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 09:01:40.904" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 09:01:40.904" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230913 09:01:37.558" endtime="20230913 09:01:40.904"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 09:01:40.905" level="INFO"/>
<status status="PASS" starttime="20230913 09:01:40.904" endtime="20230913 09:01:40.905"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 09:01:40.905" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 09:01:40.905" endtime="20230913 09:01:40.905"/>
</kw>
<status status="PASS" starttime="20230913 09:01:37.557" endtime="20230913 09:01:40.906"/>
</kw>
<msg timestamp="20230913 09:01:40.906" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 09:01:37.557" endtime="20230913 09:01:40.906"/>
</kw>
<status status="PASS" starttime="20230913 09:01:37.557" endtime="20230913 09:01:40.906"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create /${volume_name}/${bucket_name}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 09:01:40.910" level="INFO">Running command 'ozone sh bucket create /16777-volume-for-prepare/16777-bucket-for-prepare 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 09:01:44.010" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 09:01:44.010" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230913 09:01:40.908" endtime="20230913 09:01:44.010"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 09:01:44.011" level="INFO"/>
<status status="PASS" starttime="20230913 09:01:44.010" endtime="20230913 09:01:44.011"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 09:01:44.012" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 09:01:44.011" endtime="20230913 09:01:44.012"/>
</kw>
<status status="PASS" starttime="20230913 09:01:40.907" endtime="20230913 09:01:44.012"/>
</kw>
<msg timestamp="20230913 09:01:44.012" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 09:01:40.907" endtime="20230913 09:01:44.012"/>
</kw>
<status status="PASS" starttime="20230913 09:01:40.906" endtime="20230913 09:01:44.012"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put /${volume_name}/${bucket_name}/prepare-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 09:01:44.017" level="INFO">Running command 'ozone sh key put /16777-volume-for-prepare/16777-bucket-for-prepare/prepare-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 09:01:49.292" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 09:01:49.292" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230913 09:01:44.014" endtime="20230913 09:01:49.292"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 09:01:49.294" level="INFO"/>
<status status="PASS" starttime="20230913 09:01:49.293" endtime="20230913 09:01:49.294"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 09:01:49.294" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 09:01:49.294" endtime="20230913 09:01:49.294"/>
</kw>
<status status="PASS" starttime="20230913 09:01:44.014" endtime="20230913 09:01:49.294"/>
</kw>
<msg timestamp="20230913 09:01:49.294" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 09:01:44.013" endtime="20230913 09:01:49.295"/>
</kw>
<status status="PASS" starttime="20230913 09:01:44.013" endtime="20230913 09:01:49.295"/>
</kw>
<status status="PASS" starttime="20230913 09:01:19.193" endtime="20230913 09:01:49.295"/>
</kw>
<test id="s1-s1-t1" name="Prepare Ozone Manager" line="39">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230913 09:01:49.296" endtime="20230913 09:01:49.297"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om prepare -id=omservice</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 09:01:49.301" level="INFO">Running command 'ozone admin om prepare -id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 09:01:57.936" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 09:01:57.936" level="INFO">${output} = Ozone Manager Prepare Request successfully returned with Transaction Id : [413].

Checking individual OM instances for prepare request completion...
OM : [om1], Prepare Status : [PREPARE_COMPLETED], C...</msg>
<status status="PASS" starttime="20230913 09:01:49.298" endtime="20230913 09:01:57.936"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 09:01:57.937" level="INFO">Ozone Manager Prepare Request successfully returned with Transaction Id : [413].

Checking individual OM instances for prepare request completion...
OM : [om1], Prepare Status : [PREPARE_COMPLETED], Current Transaction Id : [413]
OM : [om3], Prepare Status : [PREPARE_COMPLETED], Current Transaction Id : [413]
OM : [om2], Prepare Status : [PREPARE_COMPLETED], Current Transaction Id : [413]

OM Preparation successful! 
All OMs are prepared
No new write requests will be allowed until preparation is cancelled or upgrade/downgrade is done.</msg>
<status status="PASS" starttime="20230913 09:01:57.936" endtime="20230913 09:01:57.937"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 09:01:57.938" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 09:01:57.937" endtime="20230913 09:01:57.938"/>
</kw>
<status status="PASS" starttime="20230913 09:01:49.298" endtime="20230913 09:01:57.938"/>
</kw>
<msg timestamp="20230913 09:01:57.938" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 09:01:49.297" endtime="20230913 09:01:57.938"/>
</kw>
<msg timestamp="20230913 09:01:57.939" level="INFO">${result} = Ozone Manager Prepare Request successfully returned with Transaction Id : [413].

Checking individual OM instances for prepare request completion...
OM : [om1], Prepare Status : [PREPARE_COMPLETED], C...</msg>
<status status="PASS" starttime="20230913 09:01:49.297" endtime="20230913 09:01:57.939"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>OM Preparation successful!</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>OM Preparation successful!</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230913 09:01:57.939" endtime="20230913 09:01:57.940"/>
</kw>
<status status="PASS" starttime="20230913 09:01:57.939" endtime="20230913 09:01:57.940"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230913 09:01:49.295" endtime="20230913 09:01:57.940"/>
</test>
<test id="s1-s1-t2" name="Checks if the expected data is present in OM" line="43">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230913 09:01:57.942" endtime="20230913 09:01:57.942"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info /${volume_name}/${bucket_name}/prepare-key</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 09:01:57.946" level="INFO">Running command 'ozone sh key info /16777-volume-for-prepare/16777-bucket-for-prepare/prepare-key 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 09:02:02.101" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 09:02:02.101" level="INFO">${output} = {
  "volumeName" : "16777-volume-for-prepare",
  "bucketName" : "16777-bucket-for-prepare",
  "name" : "prepare-key",
  "dataSize" : 17289,
  "creationTime" : "2023-09-13T09:01:46.955Z",
  "modificati...</msg>
<status status="PASS" starttime="20230913 09:01:57.944" endtime="20230913 09:02:02.101"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 09:02:02.102" level="INFO">{
  "volumeName" : "16777-volume-for-prepare",
  "bucketName" : "16777-bucket-for-prepare",
  "name" : "prepare-key",
  "dataSize" : 17289,
  "creationTime" : "2023-09-13T09:01:46.955Z",
  "modificationTime" : "2023-09-13T09:01:48.893Z",
  "replicationConfig" : {
    "replicationFactor" : "ONE",
    "requiredNodes" : 1,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "ozoneKeyLocations" : [ {
    "containerID" : 5,
    "localID" : 111677748019200101,
    "length" : 17289,
    "offset" : 0,
    "keyOffset" : 0
  } ],
  "file" : true
}</msg>
<status status="PASS" starttime="20230913 09:02:02.102" endtime="20230913 09:02:02.102"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 09:02:02.103" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 09:02:02.103" endtime="20230913 09:02:02.103"/>
</kw>
<status status="PASS" starttime="20230913 09:01:57.943" endtime="20230913 09:02:02.103"/>
</kw>
<msg timestamp="20230913 09:02:02.103" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 09:01:57.943" endtime="20230913 09:02:02.103"/>
</kw>
<msg timestamp="20230913 09:02:02.104" level="INFO">${result} = {
  "volumeName" : "16777-volume-for-prepare",
  "bucketName" : "16777-bucket-for-prepare",
  "name" : "prepare-key",
  "dataSize" : 17289,
  "creationTime" : "2023-09-13T09:01:46.955Z",
  "modificati...</msg>
<status status="PASS" starttime="20230913 09:01:57.942" endtime="20230913 09:02:02.104"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"name\" : \"prepare-key\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230913 09:02:02.104" endtime="20230913 09:02:02.104"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230913 09:01:57.941" endtime="20230913 09:02:02.104"/>
</test>
<test id="s1-s1-t3" name="Test write operation fails" line="47">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230913 09:02:02.106" endtime="20230913 09:02:02.107"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh key put /${volume_name}/${bucket_name}/prepare-key2 /opt/hadoop/NOTICE.txt</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 09:02:02.113" level="INFO">Running command 'ozone sh key put /16777-volume-for-prepare/16777-bucket-for-prepare/prepare-key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 09:02:05.305" level="INFO">${rc} = 255</msg>
<msg timestamp="20230913 09:02:05.305" level="INFO">${output} = NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateKey when OM is in prepare mode.</msg>
<status status="PASS" starttime="20230913 09:02:02.107" endtime="20230913 09:02:05.305"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 09:02:05.306" level="INFO">NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateKey when OM is in prepare mode.</msg>
<status status="PASS" starttime="20230913 09:02:05.305" endtime="20230913 09:02:05.306"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 09:02:05.307" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 09:02:05.306" endtime="20230913 09:02:05.307"/>
</kw>
<msg timestamp="20230913 09:02:05.307" level="INFO">${result} = NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateKey when OM is in prepare mode.</msg>
<status status="PASS" starttime="20230913 09:02:02.107" endtime="20230913 09:02:05.307"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>OM is in prepare mode</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230913 09:02:05.307" endtime="20230913 09:02:05.308"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>ozone sh key info /${volume_name}/${bucket_name}/prepare-key2</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 09:02:05.311" level="INFO">Running command 'ozone sh key info /16777-volume-for-prepare/16777-bucket-for-prepare/prepare-key2 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 09:02:08.633" level="INFO">${rc} = 255</msg>
<msg timestamp="20230913 09:02:08.633" level="INFO">${output} = KEY_NOT_FOUND Key:prepare-key2 not found</msg>
<status status="PASS" starttime="20230913 09:02:05.309" endtime="20230913 09:02:08.633"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 09:02:08.634" level="INFO">KEY_NOT_FOUND Key:prepare-key2 not found</msg>
<status status="PASS" starttime="20230913 09:02:08.634" endtime="20230913 09:02:08.634"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 09:02:08.635" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 09:02:08.635" endtime="20230913 09:02:08.635"/>
</kw>
<status status="PASS" starttime="20230913 09:02:05.308" endtime="20230913 09:02:08.635"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230913 09:02:02.105" endtime="20230913 09:02:08.636"/>
</test>
<doc>Smoke test to test preparing OMs in an OM HA cluster.</doc>
<status status="PASS" starttime="20230913 09:01:19.133" endtime="20230913 09:02:08.637"/>
</suite>
<suite id="s1-s2" name="Om-Cancel-Prepare" source="/opt/hadoop/smoketest/omha/om-cancel-prepare.robot">
<kw name="Generate volume and bucket names" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230913 09:02:11.375" level="INFO">${random} = 36206</msg>
<status status="PASS" starttime="20230913 09:02:11.374" endtime="20230913 09:02:11.375"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${volume_name}</arg>
<arg>${random}-volume-for-cancel</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230913 09:02:11.376" level="INFO">${volume_name} = 36206-volume-for-cancel</msg>
<status status="PASS" starttime="20230913 09:02:11.375" endtime="20230913 09:02:11.376"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${bucket_name}</arg>
<arg>${random}-bucket-for-cancel</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230913 09:02:11.378" level="INFO">${bucket_name} = 36206-bucket-for-cancel</msg>
<status status="PASS" starttime="20230913 09:02:11.377" endtime="20230913 09:02:11.378"/>
</kw>
<status status="PASS" starttime="20230913 09:02:11.374" endtime="20230913 09:02:11.378"/>
</kw>
<test id="s1-s2-t1" name="Cancel Ozone Manager Prepare" line="33">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230913 09:02:11.379" endtime="20230913 09:02:11.379"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om cancelprepare -id=omservice</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 09:02:11.384" level="INFO">Running command 'ozone admin om cancelprepare -id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 09:02:14.793" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 09:02:14.793" level="INFO">${output} = Cancel prepare succeeded, cluster can now accept write requests.</msg>
<status status="PASS" starttime="20230913 09:02:11.381" endtime="20230913 09:02:14.793"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 09:02:14.795" level="INFO">Cancel prepare succeeded, cluster can now accept write requests.</msg>
<status status="PASS" starttime="20230913 09:02:14.794" endtime="20230913 09:02:14.795"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 09:02:14.795" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 09:02:14.795" endtime="20230913 09:02:14.796"/>
</kw>
<status status="PASS" starttime="20230913 09:02:11.380" endtime="20230913 09:02:14.796"/>
</kw>
<msg timestamp="20230913 09:02:14.796" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 09:02:11.380" endtime="20230913 09:02:14.796"/>
</kw>
<msg timestamp="20230913 09:02:14.796" level="INFO">${result} = Cancel prepare succeeded, cluster can now accept write requests.</msg>
<status status="PASS" starttime="20230913 09:02:11.379" endtime="20230913 09:02:14.796"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>5sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Cancel prepare succeeded</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Cancel prepare succeeded</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230913 09:02:14.797" endtime="20230913 09:02:14.797"/>
</kw>
<status status="PASS" starttime="20230913 09:02:14.796" endtime="20230913 09:02:14.797"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230913 09:02:11.378" endtime="20230913 09:02:14.798"/>
</test>
<test id="s1-s2-t2" name="Test write operations" line="37">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230913 09:02:14.800" endtime="20230913 09:02:14.800"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create /${volume_name}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 09:02:14.805" level="INFO">Running command 'ozone sh volume create /36206-volume-for-cancel 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 09:02:18.117" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 09:02:18.117" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230913 09:02:14.802" endtime="20230913 09:02:18.117"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 09:02:18.118" level="INFO"/>
<status status="PASS" starttime="20230913 09:02:18.118" endtime="20230913 09:02:18.119"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 09:02:18.119" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 09:02:18.119" endtime="20230913 09:02:18.119"/>
</kw>
<status status="PASS" starttime="20230913 09:02:14.801" endtime="20230913 09:02:18.119"/>
</kw>
<msg timestamp="20230913 09:02:18.119" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 09:02:14.801" endtime="20230913 09:02:18.120"/>
</kw>
<status status="PASS" starttime="20230913 09:02:14.800" endtime="20230913 09:02:18.120"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create /${volume_name}/${bucket_name}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 09:02:18.124" level="INFO">Running command 'ozone sh bucket create /36206-volume-for-cancel/36206-bucket-for-cancel 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 09:02:21.306" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 09:02:21.307" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230913 09:02:18.121" endtime="20230913 09:02:21.307"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 09:02:21.308" level="INFO"/>
<status status="PASS" starttime="20230913 09:02:21.307" endtime="20230913 09:02:21.308"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 09:02:21.309" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 09:02:21.308" endtime="20230913 09:02:21.309"/>
</kw>
<status status="PASS" starttime="20230913 09:02:18.121" endtime="20230913 09:02:21.309"/>
</kw>
<msg timestamp="20230913 09:02:21.309" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 09:02:18.120" endtime="20230913 09:02:21.309"/>
</kw>
<status status="PASS" starttime="20230913 09:02:18.120" endtime="20230913 09:02:21.309"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key put /${volume_name}/${bucket_name}/cancel-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 09:02:21.313" level="INFO">Running command 'ozone sh key put /36206-volume-for-cancel/36206-bucket-for-cancel/cancel-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 09:02:26.713" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 09:02:26.713" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230913 09:02:21.311" endtime="20230913 09:02:26.713"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 09:02:26.714" level="INFO"/>
<status status="PASS" starttime="20230913 09:02:26.714" endtime="20230913 09:02:26.715"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 09:02:26.715" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 09:02:26.715" endtime="20230913 09:02:26.715"/>
</kw>
<status status="PASS" starttime="20230913 09:02:21.310" endtime="20230913 09:02:26.715"/>
</kw>
<msg timestamp="20230913 09:02:26.715" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 09:02:21.310" endtime="20230913 09:02:26.716"/>
</kw>
<msg timestamp="20230913 09:02:26.716" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230913 09:02:21.309" endtime="20230913 09:02:26.716"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info /${volume_name}/${bucket_name}/cancel-key</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 09:02:26.720" level="INFO">Running command 'ozone sh key info /36206-volume-for-cancel/36206-bucket-for-cancel/cancel-key 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 09:02:29.911" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 09:02:29.911" level="INFO">${output} = {
  "volumeName" : "36206-volume-for-cancel",
  "bucketName" : "36206-bucket-for-cancel",
  "name" : "cancel-key",
  "dataSize" : 17289,
  "creationTime" : "2023-09-13T09:02:24.468Z",
  "modificationT...</msg>
<status status="PASS" starttime="20230913 09:02:26.718" endtime="20230913 09:02:29.911"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 09:02:29.913" level="INFO">{
  "volumeName" : "36206-volume-for-cancel",
  "bucketName" : "36206-bucket-for-cancel",
  "name" : "cancel-key",
  "dataSize" : 17289,
  "creationTime" : "2023-09-13T09:02:24.468Z",
  "modificationTime" : "2023-09-13T09:02:26.317Z",
  "replicationConfig" : {
    "replicationFactor" : "ONE",
    "requiredNodes" : 1,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "ozoneKeyLocations" : [ {
    "containerID" : 2,
    "localID" : 111677748019200103,
    "length" : 17289,
    "offset" : 0,
    "keyOffset" : 0
  } ],
  "file" : true
}</msg>
<status status="PASS" starttime="20230913 09:02:29.912" endtime="20230913 09:02:29.913"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 09:02:29.914" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 09:02:29.913" endtime="20230913 09:02:29.914"/>
</kw>
<status status="PASS" starttime="20230913 09:02:26.717" endtime="20230913 09:02:29.914"/>
</kw>
<msg timestamp="20230913 09:02:29.914" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 09:02:26.717" endtime="20230913 09:02:29.914"/>
</kw>
<msg timestamp="20230913 09:02:29.914" level="INFO">${result} = {
  "volumeName" : "36206-volume-for-cancel",
  "bucketName" : "36206-bucket-for-cancel",
  "name" : "cancel-key",
  "dataSize" : 17289,
  "creationTime" : "2023-09-13T09:02:24.468Z",
  "modificationT...</msg>
<status status="PASS" starttime="20230913 09:02:26.716" endtime="20230913 09:02:29.914"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"name\" : \"cancel-key\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230913 09:02:29.915" endtime="20230913 09:02:29.915"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230913 09:02:14.799" endtime="20230913 09:02:29.915"/>
</test>
<doc>Smoke test for ozone manager cancel prepare</doc>
<status status="PASS" starttime="20230913 09:02:11.315" endtime="20230913 09:02:29.916"/>
</suite>
<suite id="s1-s3" name="Om-Prepare" source="/opt/hadoop/smoketest/omha/om-prepare.robot">
<kw name="Create Specific OM data for prepare" type="SETUP">
<kw name="Freon OCKG" library="freon">
<arg>prefix=om-prepare</arg>
<arg>n=100</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 09:02:32.529" level="INFO">Running command 'ozone freon ockg --om-service-id=omservice -t 1 -n100 -p om-prepare  2&gt;&amp;1'.</msg>
<msg timestamp="20230913 09:02:45.187" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 09:02:45.187" level="INFO">${output} = 2023-09-13 09:02:34,436 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-13 09:02:34,583 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230913 09:02:32.527" endtime="20230913 09:02:45.187"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 09:02:45.189" level="INFO">2023-09-13 09:02:34,436 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-13 09:02:34,583 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-09-13 09:02:34,583 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-09-13 09:02:34,704 [main] INFO freon.BaseFreonGenerator: Executing test with prefix om-prepare and number-of-tests 100
2023-09-13 09:02:34,771 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2023-09-13 09:02:35,772 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2023-09-13 09:02:36,037 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2023-09-13 09:02:36,333 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2023-09-13 09:02:36,772 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2023-09-13 09:02:37,775 [Thread-3] INFO freon.ProgressBar: Progress: 7.00 % (7 out of 100)
2023-09-13 09:02:38,775 [Thread-3] INFO freon.ProgressBar: Progress: 19.00 % (19 out of 100)
2023-09-13 09:02:39,776 [Thread-3] INFO freon.ProgressBar: Progress: 31.00 % (31 out of 100)
2023-09-13 09:02:40,783 [Thread-3] INFO freon.ProgressBar: Progress: 45.00 % (45 out of 100)
2023-09-13 09:02:41,784 [Thread-3] INFO freon.ProgressBar: Progress: 60.00 % (60 out of 100)
2023-09-13 09:02:42,784 [Thread-3] INFO freon.ProgressBar: Progress: 76.00 % (76 out of 100)
2023-09-13 09:02:43,788 [Thread-3] INFO freon.ProgressBar: Progress: 90.00 % (90 out of 100)
2023-09-13 09:02:44,788 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (100 out of 100)
2023-09-13 09:02:44,836 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=100, min=42.81258, max=1626.495641, mean=88.49410288991015, stddev=151.73781068246365, median=69.366264, p75=85.502058, p95=107.04605, p98=113.415067, p99=167.264148, p999=1626.495641, mean_rate=10.6963456738194, m1=8.200000000000001, m5=8.200000000000001, m15=8.200000000000001, rate_unit=events/second, duration_unit=milliseconds
2023-09-13 09:02:44,836 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 10
2023-09-13 09:02:44,836 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-09-13 09:02:44,836 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 100</msg>
<status status="PASS" starttime="20230913 09:02:45.188" endtime="20230913 09:02:45.189"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 09:02:45.189" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 09:02:45.189" endtime="20230913 09:02:45.189"/>
</kw>
<status status="PASS" starttime="20230913 09:02:32.526" endtime="20230913 09:02:45.189"/>
</kw>
<msg timestamp="20230913 09:02:45.190" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 09:02:32.525" endtime="20230913 09:02:45.190"/>
</kw>
<msg timestamp="20230913 09:02:45.190" level="INFO">${result} = 2023-09-13 09:02:34,436 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-13 09:02:34,583 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230913 09:02:32.525" endtime="20230913 09:02:45.190"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230913 09:02:45.190" endtime="20230913 09:02:45.191"/>
</kw>
<status status="PASS" starttime="20230913 09:02:32.523" endtime="20230913 09:02:45.191"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230913 09:02:45.191" level="INFO">${random} = 78758</msg>
<status status="PASS" starttime="20230913 09:02:45.191" endtime="20230913 09:02:45.191"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${volume_name}</arg>
<arg>${random}-volume-for-prepare</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230913 09:02:45.193" level="INFO">${volume_name} = 78758-volume-for-prepare</msg>
<status status="PASS" starttime="20230913 09:02:45.191" endtime="20230913 09:02:45.193"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${bucket_name}</arg>
<arg>${random}-bucket-for-prepare</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230913 09:02:45.194" level="INFO">${bucket_name} = 78758-bucket-for-prepare</msg>
<status status="PASS" starttime="20230913 09:02:45.193" endtime="20230913 09:02:45.194"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create /${volume_name}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 09:02:45.198" level="INFO">Running command 'ozone sh volume create /78758-volume-for-prepare 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 09:02:48.371" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 09:02:48.371" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230913 09:02:45.196" endtime="20230913 09:02:48.371"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 09:02:48.372" level="INFO"/>
<status status="PASS" starttime="20230913 09:02:48.372" endtime="20230913 09:02:48.372"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 09:02:48.373" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 09:02:48.372" endtime="20230913 09:02:48.373"/>
</kw>
<status status="PASS" starttime="20230913 09:02:45.195" endtime="20230913 09:02:48.373"/>
</kw>
<msg timestamp="20230913 09:02:48.373" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 09:02:45.195" endtime="20230913 09:02:48.373"/>
</kw>
<status status="PASS" starttime="20230913 09:02:45.195" endtime="20230913 09:02:48.374"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create /${volume_name}/${bucket_name}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 09:02:48.378" level="INFO">Running command 'ozone sh bucket create /78758-volume-for-prepare/78758-bucket-for-prepare 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 09:02:51.612" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 09:02:51.612" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230913 09:02:48.375" endtime="20230913 09:02:51.612"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 09:02:51.613" level="INFO"/>
<status status="PASS" starttime="20230913 09:02:51.613" endtime="20230913 09:02:51.613"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 09:02:51.614" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 09:02:51.614" endtime="20230913 09:02:51.615"/>
</kw>
<status status="PASS" starttime="20230913 09:02:48.375" endtime="20230913 09:02:51.615"/>
</kw>
<msg timestamp="20230913 09:02:51.616" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 09:02:48.374" endtime="20230913 09:02:51.616"/>
</kw>
<status status="PASS" starttime="20230913 09:02:48.374" endtime="20230913 09:02:51.616"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put /${volume_name}/${bucket_name}/prepare-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 09:02:51.620" level="INFO">Running command 'ozone sh key put /78758-volume-for-prepare/78758-bucket-for-prepare/prepare-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 09:02:56.667" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 09:02:56.667" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230913 09:02:51.618" endtime="20230913 09:02:56.667"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 09:02:56.668" level="INFO"/>
<status status="PASS" starttime="20230913 09:02:56.667" endtime="20230913 09:02:56.668"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 09:02:56.669" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 09:02:56.668" endtime="20230913 09:02:56.669"/>
</kw>
<status status="PASS" starttime="20230913 09:02:51.617" endtime="20230913 09:02:56.669"/>
</kw>
<msg timestamp="20230913 09:02:56.669" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 09:02:51.617" endtime="20230913 09:02:56.669"/>
</kw>
<status status="PASS" starttime="20230913 09:02:51.616" endtime="20230913 09:02:56.669"/>
</kw>
<status status="PASS" starttime="20230913 09:02:32.523" endtime="20230913 09:02:56.669"/>
</kw>
<test id="s1-s3-t1" name="Prepare Ozone Manager" line="39">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230913 09:02:56.671" endtime="20230913 09:02:56.671"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om prepare -id=omservice</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 09:02:56.675" level="INFO">Running command 'ozone admin om prepare -id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 09:03:04.724" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 09:03:04.724" level="INFO">${output} = Ozone Manager Prepare Request successfully returned with Transaction Id : [833].

Checking individual OM instances for prepare request completion...
OM : [om1], Prepare Status : [PREPARE_COMPLETED], C...</msg>
<status status="PASS" starttime="20230913 09:02:56.673" endtime="20230913 09:03:04.724"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 09:03:04.725" level="INFO">Ozone Manager Prepare Request successfully returned with Transaction Id : [833].

Checking individual OM instances for prepare request completion...
OM : [om1], Prepare Status : [PREPARE_COMPLETED], Current Transaction Id : [833]
OM : [om3], Prepare Status : [PREPARE_COMPLETED], Current Transaction Id : [833]
OM : [om2], Prepare Status : [PREPARE_COMPLETED], Current Transaction Id : [833]

OM Preparation successful! 
All OMs are prepared
No new write requests will be allowed until preparation is cancelled or upgrade/downgrade is done.</msg>
<status status="PASS" starttime="20230913 09:03:04.725" endtime="20230913 09:03:04.725"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 09:03:04.726" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 09:03:04.725" endtime="20230913 09:03:04.726"/>
</kw>
<status status="PASS" starttime="20230913 09:02:56.672" endtime="20230913 09:03:04.726"/>
</kw>
<msg timestamp="20230913 09:03:04.726" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 09:02:56.672" endtime="20230913 09:03:04.726"/>
</kw>
<msg timestamp="20230913 09:03:04.727" level="INFO">${result} = Ozone Manager Prepare Request successfully returned with Transaction Id : [833].

Checking individual OM instances for prepare request completion...
OM : [om1], Prepare Status : [PREPARE_COMPLETED], C...</msg>
<status status="PASS" starttime="20230913 09:02:56.671" endtime="20230913 09:03:04.727"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>OM Preparation successful!</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>OM Preparation successful!</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230913 09:03:04.727" endtime="20230913 09:03:04.728"/>
</kw>
<status status="PASS" starttime="20230913 09:03:04.727" endtime="20230913 09:03:04.728"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230913 09:02:56.670" endtime="20230913 09:03:04.728"/>
</test>
<test id="s1-s3-t2" name="Checks if the expected data is present in OM" line="43">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230913 09:03:04.730" endtime="20230913 09:03:04.730"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info /${volume_name}/${bucket_name}/prepare-key</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 09:03:04.734" level="INFO">Running command 'ozone sh key info /78758-volume-for-prepare/78758-bucket-for-prepare/prepare-key 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 09:03:07.973" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 09:03:07.973" level="INFO">${output} = {
  "volumeName" : "78758-volume-for-prepare",
  "bucketName" : "78758-bucket-for-prepare",
  "name" : "prepare-key",
  "dataSize" : 17289,
  "creationTime" : "2023-09-13T09:02:54.551Z",
  "modificati...</msg>
<status status="PASS" starttime="20230913 09:03:04.732" endtime="20230913 09:03:07.973"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 09:03:07.974" level="INFO">{
  "volumeName" : "78758-volume-for-prepare",
  "bucketName" : "78758-bucket-for-prepare",
  "name" : "prepare-key",
  "dataSize" : 17289,
  "creationTime" : "2023-09-13T09:02:54.551Z",
  "modificationTime" : "2023-09-13T09:02:56.283Z",
  "replicationConfig" : {
    "replicationFactor" : "ONE",
    "requiredNodes" : 1,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "ozoneKeyLocations" : [ {
    "containerID" : 6,
    "localID" : 111677748019200204,
    "length" : 17289,
    "offset" : 0,
    "keyOffset" : 0
  } ],
  "file" : true
}</msg>
<status status="PASS" starttime="20230913 09:03:07.974" endtime="20230913 09:03:07.975"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 09:03:07.975" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 09:03:07.975" endtime="20230913 09:03:07.975"/>
</kw>
<status status="PASS" starttime="20230913 09:03:04.731" endtime="20230913 09:03:07.976"/>
</kw>
<msg timestamp="20230913 09:03:07.976" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 09:03:04.731" endtime="20230913 09:03:07.976"/>
</kw>
<msg timestamp="20230913 09:03:07.976" level="INFO">${result} = {
  "volumeName" : "78758-volume-for-prepare",
  "bucketName" : "78758-bucket-for-prepare",
  "name" : "prepare-key",
  "dataSize" : 17289,
  "creationTime" : "2023-09-13T09:02:54.551Z",
  "modificati...</msg>
<status status="PASS" starttime="20230913 09:03:04.730" endtime="20230913 09:03:07.976"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"name\" : \"prepare-key\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230913 09:03:07.976" endtime="20230913 09:03:07.977"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230913 09:03:04.729" endtime="20230913 09:03:07.977"/>
</test>
<test id="s1-s3-t3" name="Test write operation fails" line="47">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230913 09:03:07.979" endtime="20230913 09:03:07.979"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh key put /${volume_name}/${bucket_name}/prepare-key2 /opt/hadoop/NOTICE.txt</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 09:03:07.982" level="INFO">Running command 'ozone sh key put /78758-volume-for-prepare/78758-bucket-for-prepare/prepare-key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 09:03:11.104" level="INFO">${rc} = 255</msg>
<msg timestamp="20230913 09:03:11.104" level="INFO">${output} = NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateKey when OM is in prepare mode.</msg>
<status status="PASS" starttime="20230913 09:03:07.980" endtime="20230913 09:03:11.104"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 09:03:11.105" level="INFO">NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateKey when OM is in prepare mode.</msg>
<status status="PASS" starttime="20230913 09:03:11.104" endtime="20230913 09:03:11.105"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 09:03:11.106" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 09:03:11.105" endtime="20230913 09:03:11.106"/>
</kw>
<msg timestamp="20230913 09:03:11.106" level="INFO">${result} = NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateKey when OM is in prepare mode.</msg>
<status status="PASS" starttime="20230913 09:03:07.979" endtime="20230913 09:03:11.106"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>OM is in prepare mode</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230913 09:03:11.106" endtime="20230913 09:03:11.107"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>ozone sh key info /${volume_name}/${bucket_name}/prepare-key2</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 09:03:11.110" level="INFO">Running command 'ozone sh key info /78758-volume-for-prepare/78758-bucket-for-prepare/prepare-key2 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 09:03:13.989" level="INFO">${rc} = 255</msg>
<msg timestamp="20230913 09:03:13.989" level="INFO">${output} = KEY_NOT_FOUND Key:prepare-key2 not found</msg>
<status status="PASS" starttime="20230913 09:03:11.108" endtime="20230913 09:03:13.989"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 09:03:13.990" level="INFO">KEY_NOT_FOUND Key:prepare-key2 not found</msg>
<status status="PASS" starttime="20230913 09:03:13.989" endtime="20230913 09:03:13.990"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 09:03:13.991" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 09:03:13.990" endtime="20230913 09:03:13.991"/>
</kw>
<status status="PASS" starttime="20230913 09:03:11.107" endtime="20230913 09:03:13.991"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230913 09:03:07.978" endtime="20230913 09:03:13.991"/>
</test>
<doc>Smoke test to test preparing OMs in an OM HA cluster.</doc>
<status status="PASS" starttime="20230913 09:02:32.465" endtime="20230913 09:03:13.993"/>
</suite>
<suite id="s1-s4" name="Om-Prepared" source="/opt/hadoop/smoketest/omha/om-prepared.robot">
<test id="s1-s4-t1" name="Test create volume fails" line="26">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230913 09:03:16.589" endtime="20230913 09:03:16.589"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230913 09:03:16.590" level="INFO">${random} = 52537</msg>
<status status="PASS" starttime="20230913 09:03:16.590" endtime="20230913 09:03:16.590"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${volume_name}</arg>
<arg>${random}-volume-for-prepare</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230913 09:03:16.592" level="INFO">${volume_name} = 52537-volume-for-prepare</msg>
<status status="PASS" starttime="20230913 09:03:16.590" endtime="20230913 09:03:16.592"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh volume create /${volume_name}</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 09:03:16.595" level="INFO">Running command 'ozone sh volume create /52537-volume-for-prepare 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 09:03:19.632" level="INFO">${rc} = 255</msg>
<msg timestamp="20230913 09:03:19.632" level="INFO">${output} = NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateVolume when OM is in prepare mode.</msg>
<status status="PASS" starttime="20230913 09:03:16.592" endtime="20230913 09:03:19.632"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 09:03:19.634" level="INFO">NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateVolume when OM is in prepare mode.</msg>
<status status="PASS" starttime="20230913 09:03:19.633" endtime="20230913 09:03:19.634"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 09:03:19.634" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 09:03:19.634" endtime="20230913 09:03:19.634"/>
</kw>
<msg timestamp="20230913 09:03:19.635" level="INFO">${result} = NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateVolume when OM is in prepare mode.</msg>
<status status="PASS" starttime="20230913 09:03:16.592" endtime="20230913 09:03:19.635"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>OM is in prepare mode</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230913 09:03:19.635" endtime="20230913 09:03:19.635"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh volume info /${volume_name}</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 09:03:19.639" level="INFO">Running command 'ozone sh volume info /52537-volume-for-prepare 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 09:03:22.570" level="INFO">${rc} = 255</msg>
<msg timestamp="20230913 09:03:22.570" level="INFO">${output} = VOLUME_NOT_FOUND Volume 52537-volume-for-prepare is not found</msg>
<status status="PASS" starttime="20230913 09:03:19.636" endtime="20230913 09:03:22.570"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 09:03:22.571" level="INFO">VOLUME_NOT_FOUND Volume 52537-volume-for-prepare is not found</msg>
<status status="PASS" starttime="20230913 09:03:22.571" endtime="20230913 09:03:22.571"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 09:03:22.572" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 09:03:22.572" endtime="20230913 09:03:22.572"/>
</kw>
<msg timestamp="20230913 09:03:22.572" level="INFO">${result} = VOLUME_NOT_FOUND Volume 52537-volume-for-prepare is not found</msg>
<status status="PASS" starttime="20230913 09:03:19.635" endtime="20230913 09:03:22.573"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230913 09:03:22.573" endtime="20230913 09:03:22.573"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230913 09:03:16.588" endtime="20230913 09:03:22.573"/>
</test>
<test id="s1-s4-t2" name="Test list volumes succeeds" line="34">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230913 09:03:22.575" endtime="20230913 09:03:22.575"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 09:03:22.579" level="INFO">Running command 'ozone sh volume list 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 09:03:25.832" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 09:03:25.832" level="INFO">${output} = [ {
  "metadata" : { },
  "name" : "36206-volume-for-cancel",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2...</msg>
<status status="PASS" starttime="20230913 09:03:22.577" endtime="20230913 09:03:25.832"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 09:03:25.834" level="INFO">[ {
  "metadata" : { },
  "name" : "36206-volume-for-cancel",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2023-09-13T09:02:18.071Z",
  "modificationTime" : "2023-09-13T09:02:18.071Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "16777-volume-for-prepare",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2023-09-13T09:01:40.859Z",
  "modificationTime" : "2023-09-13T09:01:40.859Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "s3v",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 0,
  "creationTime" : "2023-09-13T09:00:53.545Z",
  "modificationTime" : "2023-09-13T09:00:53.545Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "vol1",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2023-09-13T09:01:22.737Z",
  "modificationTime" : "2023-09-13T09:01:22.737Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "78758-volume-for-prepare",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2023-09-13T09:02:48.339Z",
  "modificationTime" : "2023-09-13T09:02:48.339Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "refCount" : 0
} ]</msg>
<status status="PASS" starttime="20230913 09:03:25.833" endtime="20230913 09:03:25.834"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 09:03:25.834" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 09:03:25.834" endtime="20230913 09:03:25.834"/>
</kw>
<status status="PASS" starttime="20230913 09:03:22.576" endtime="20230913 09:03:25.835"/>
</kw>
<msg timestamp="20230913 09:03:25.835" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 09:03:22.576" endtime="20230913 09:03:25.835"/>
</kw>
<msg timestamp="20230913 09:03:25.835" level="INFO">${result} = [ {
  "metadata" : { },
  "name" : "36206-volume-for-cancel",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2...</msg>
<status status="PASS" starttime="20230913 09:03:22.576" endtime="20230913 09:03:25.835"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230913 09:03:22.574" endtime="20230913 09:03:25.835"/>
</test>
<doc>Smoke test to test that OMs are prepared in an OM HA cluster.</doc>
<status status="PASS" starttime="20230913 09:03:16.535" endtime="20230913 09:03:25.837"/>
</suite>
<suite id="s1-s5" name="Om-Prepared" source="/opt/hadoop/smoketest/omha/om-prepared.robot">
<test id="s1-s5-t1" name="Test create volume fails" line="26">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230913 09:05:03.802" endtime="20230913 09:05:03.803"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230913 09:05:03.804" level="INFO">${random} = 81712</msg>
<status status="PASS" starttime="20230913 09:05:03.803" endtime="20230913 09:05:03.804"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${volume_name}</arg>
<arg>${random}-volume-for-prepare</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230913 09:05:03.805" level="INFO">${volume_name} = 81712-volume-for-prepare</msg>
<status status="PASS" starttime="20230913 09:05:03.804" endtime="20230913 09:05:03.805"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh volume create /${volume_name}</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 09:05:03.808" level="INFO">Running command 'ozone sh volume create /81712-volume-for-prepare 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 09:05:07.003" level="INFO">${rc} = 255</msg>
<msg timestamp="20230913 09:05:07.003" level="INFO">${output} = NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateVolume when OM is in prepare mode.</msg>
<status status="PASS" starttime="20230913 09:05:03.806" endtime="20230913 09:05:07.003"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 09:05:07.004" level="INFO">NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateVolume when OM is in prepare mode.</msg>
<status status="PASS" starttime="20230913 09:05:07.003" endtime="20230913 09:05:07.004"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 09:05:07.005" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 09:05:07.004" endtime="20230913 09:05:07.005"/>
</kw>
<msg timestamp="20230913 09:05:07.005" level="INFO">${result} = NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateVolume when OM is in prepare mode.</msg>
<status status="PASS" starttime="20230913 09:05:03.805" endtime="20230913 09:05:07.005"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>OM is in prepare mode</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230913 09:05:07.005" endtime="20230913 09:05:07.006"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh volume info /${volume_name}</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 09:05:07.009" level="INFO">Running command 'ozone sh volume info /81712-volume-for-prepare 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 09:05:10.402" level="INFO">${rc} = 255</msg>
<msg timestamp="20230913 09:05:10.402" level="INFO">${output} = VOLUME_NOT_FOUND Volume 81712-volume-for-prepare is not found</msg>
<status status="PASS" starttime="20230913 09:05:07.006" endtime="20230913 09:05:10.402"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 09:05:10.404" level="INFO">VOLUME_NOT_FOUND Volume 81712-volume-for-prepare is not found</msg>
<status status="PASS" starttime="20230913 09:05:10.403" endtime="20230913 09:05:10.404"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 09:05:10.404" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 09:05:10.404" endtime="20230913 09:05:10.405"/>
</kw>
<msg timestamp="20230913 09:05:10.405" level="INFO">${result} = VOLUME_NOT_FOUND Volume 81712-volume-for-prepare is not found</msg>
<status status="PASS" starttime="20230913 09:05:07.006" endtime="20230913 09:05:10.405"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230913 09:05:10.405" endtime="20230913 09:05:10.405"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230913 09:05:03.802" endtime="20230913 09:05:10.406"/>
</test>
<test id="s1-s5-t2" name="Test list volumes succeeds" line="34">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230913 09:05:10.408" endtime="20230913 09:05:10.409"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 09:05:10.413" level="INFO">Running command 'ozone sh volume list 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 09:05:14.201" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 09:05:14.201" level="INFO">${output} = [ {
  "metadata" : { },
  "name" : "36206-volume-for-cancel",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2...</msg>
<status status="PASS" starttime="20230913 09:05:10.410" endtime="20230913 09:05:14.201"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 09:05:14.202" level="INFO">[ {
  "metadata" : { },
  "name" : "36206-volume-for-cancel",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2023-09-13T09:02:18.071Z",
  "modificationTime" : "2023-09-13T09:02:18.071Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "16777-volume-for-prepare",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2023-09-13T09:01:40.859Z",
  "modificationTime" : "2023-09-13T09:01:40.859Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "s3v",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 0,
  "creationTime" : "2023-09-13T09:00:53.545Z",
  "modificationTime" : "2023-09-13T09:00:53.545Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "vol1",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2023-09-13T09:01:22.737Z",
  "modificationTime" : "2023-09-13T09:01:22.737Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "78758-volume-for-prepare",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2023-09-13T09:02:48.339Z",
  "modificationTime" : "2023-09-13T09:02:48.339Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "refCount" : 0
} ]</msg>
<status status="PASS" starttime="20230913 09:05:14.201" endtime="20230913 09:05:14.202"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 09:05:14.203" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 09:05:14.202" endtime="20230913 09:05:14.203"/>
</kw>
<status status="PASS" starttime="20230913 09:05:10.410" endtime="20230913 09:05:14.203"/>
</kw>
<msg timestamp="20230913 09:05:14.203" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 09:05:10.409" endtime="20230913 09:05:14.203"/>
</kw>
<msg timestamp="20230913 09:05:14.203" level="INFO">${result} = [ {
  "metadata" : { },
  "name" : "36206-volume-for-cancel",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2...</msg>
<status status="PASS" starttime="20230913 09:05:10.409" endtime="20230913 09:05:14.204"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230913 09:05:10.407" endtime="20230913 09:05:14.204"/>
</test>
<doc>Smoke test to test that OMs are prepared in an OM HA cluster.</doc>
<status status="PASS" starttime="20230913 09:05:03.751" endtime="20230913 09:05:14.206"/>
</suite>
<suite id="s1-s6" name="Loaddata" source="/opt/hadoop/smoketest/topology/loaddata.robot">
<test id="s1-s6-t1" name="Create a volume, bucket and key" line="27">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create topvol1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 09:06:48.299" level="INFO">Running command 'ozone sh volume create topvol1 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 09:06:51.868" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 09:06:51.868" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230913 09:06:48.296" endtime="20230913 09:06:51.868"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 09:06:51.870" level="INFO"/>
<status status="PASS" starttime="20230913 09:06:51.869" endtime="20230913 09:06:51.870"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 09:06:51.870" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 09:06:51.870" endtime="20230913 09:06:51.870"/>
</kw>
<status status="PASS" starttime="20230913 09:06:48.295" endtime="20230913 09:06:51.871"/>
</kw>
<msg timestamp="20230913 09:06:51.871" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 09:06:48.295" endtime="20230913 09:06:51.871"/>
</kw>
<msg timestamp="20230913 09:06:51.871" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230913 09:06:48.294" endtime="20230913 09:06:51.871"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230913 09:06:51.871" endtime="20230913 09:06:51.871"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /topvol1/bucket1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 09:06:51.914" level="INFO">Running command 'ozone sh bucket create /topvol1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 09:06:55.198" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 09:06:55.198" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230913 09:06:51.901" endtime="20230913 09:06:55.198"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 09:06:55.200" level="INFO"/>
<status status="PASS" starttime="20230913 09:06:55.199" endtime="20230913 09:06:55.200"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 09:06:55.201" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 09:06:55.200" endtime="20230913 09:06:55.201"/>
</kw>
<status status="PASS" starttime="20230913 09:06:51.894" endtime="20230913 09:06:55.201"/>
</kw>
<msg timestamp="20230913 09:06:55.201" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 09:06:51.885" endtime="20230913 09:06:55.201"/>
</kw>
<msg timestamp="20230913 09:06:55.201" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230913 09:06:51.872" endtime="20230913 09:06:55.202"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230913 09:06:55.202" endtime="20230913 09:06:55.202"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /topvol1/bucket1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 09:06:55.206" level="INFO">Running command 'ozone sh key put /topvol1/bucket1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 09:07:01.565" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 09:07:01.565" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230913 09:06:55.204" endtime="20230913 09:07:01.565"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 09:07:01.567" level="INFO"/>
<status status="PASS" starttime="20230913 09:07:01.566" endtime="20230913 09:07:01.567"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 09:07:01.567" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 09:07:01.567" endtime="20230913 09:07:01.567"/>
</kw>
<status status="PASS" starttime="20230913 09:06:55.203" endtime="20230913 09:07:01.567"/>
</kw>
<msg timestamp="20230913 09:07:01.568" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 09:06:55.203" endtime="20230913 09:07:01.568"/>
</kw>
<msg timestamp="20230913 09:07:01.568" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230913 09:06:55.202" endtime="20230913 09:07:01.568"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230913 09:07:01.568" endtime="20230913 09:07:01.569"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230913 09:06:48.293" endtime="20230913 09:07:01.569"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20230913 09:06:48.242" endtime="20230913 09:07:01.571"/>
</suite>
<suite id="s1-s7" name="Readdata" source="/opt/hadoop/smoketest/topology/readdata.robot">
<test id="s1-s7-t1" name="Read data from previously created key" line="27">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230913 09:07:04.356" level="INFO">${random} = 89491</msg>
<status status="PASS" starttime="20230913 09:07:04.356" endtime="20230913 09:07:04.356"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /topvol1/bucket1/key1 /tmp/key1-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 09:07:04.361" level="INFO">Running command 'ozone sh key get /topvol1/bucket1/key1 /tmp/key1-89491 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 09:07:09.635" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 09:07:09.635" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230913 09:07:04.358" endtime="20230913 09:07:09.635"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 09:07:09.636" level="INFO"/>
<status status="PASS" starttime="20230913 09:07:09.635" endtime="20230913 09:07:09.636"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 09:07:09.637" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 09:07:09.636" endtime="20230913 09:07:09.637"/>
</kw>
<status status="PASS" starttime="20230913 09:07:04.358" endtime="20230913 09:07:09.637"/>
</kw>
<msg timestamp="20230913 09:07:09.637" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 09:07:04.357" endtime="20230913 09:07:09.637"/>
</kw>
<msg timestamp="20230913 09:07:09.638" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230913 09:07:04.356" endtime="20230913 09:07:09.638"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230913 09:07:09.638" endtime="20230913 09:07:09.638"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230913 09:07:04.355" endtime="20230913 09:07:09.638"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20230913 09:07:04.306" endtime="20230913 09:07:09.640"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="148053"/>
</suite>
<statistics>
<total>
<stat pass="14" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="14" fail="0" skip="0" id="s1" name="ozone-om-prepare">ozone-om-prepare</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1" name="Om-Prepare">ozone-om-prepare.Om-Prepare</stat>
<stat pass="2" fail="0" skip="0" id="s1-s2" name="Om-Cancel-Prepare">ozone-om-prepare.Om-Cancel-Prepare</stat>
<stat pass="3" fail="0" skip="0" id="s1-s3" name="Om-Prepare">ozone-om-prepare.Om-Prepare</stat>
<stat pass="2" fail="0" skip="0" id="s1-s4" name="Om-Prepared">ozone-om-prepare.Om-Prepared</stat>
<stat pass="2" fail="0" skip="0" id="s1-s5" name="Om-Prepared">ozone-om-prepare.Om-Prepared</stat>
<stat pass="1" fail="0" skip="0" id="s1-s6" name="Loaddata">ozone-om-prepare.Loaddata</stat>
<stat pass="1" fail="0" skip="0" id="s1-s7" name="Readdata">ozone-om-prepare.Readdata</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
