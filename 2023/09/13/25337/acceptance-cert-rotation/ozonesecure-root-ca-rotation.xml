<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 6.1.1 (Python 3.8.10 on linux)" generated="20230913 09:20:41.888" rpa="false" schemaversion="4">
<suite id="s1" name="ozonesecure-root-ca-rotation">
<suite id="s1-s1" name="Kinit" source="/opt/hadoop/smoketest/kinit.robot">
<test id="s1-s1-t1" name="Kinit" line="27">
<kw name="Kinit test user" library="commonlib">
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 09:17:47.183" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 09:17:47.192" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 09:17:47.192" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230913 09:17:47.178" endtime="20230913 09:17:47.192"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 09:17:47.194" level="INFO">scm</msg>
<status status="PASS" starttime="20230913 09:17:47.193" endtime="20230913 09:17:47.194"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 09:17:47.195" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 09:17:47.194" endtime="20230913 09:17:47.195"/>
</kw>
<status status="PASS" starttime="20230913 09:17:47.176" endtime="20230913 09:17:47.195"/>
</kw>
<msg timestamp="20230913 09:17:47.195" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 09:17:47.176" endtime="20230913 09:17:47.195"/>
</kw>
<msg timestamp="20230913 09:17:47.196" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230913 09:17:47.175" endtime="20230913 09:17:47.196"/>
</kw>
<msg timestamp="20230913 09:17:47.196" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230913 09:17:47.174" endtime="20230913 09:17:47.196"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230913 09:17:47.197" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230913 09:17:47.196" endtime="20230913 09:17:47.197"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 09:17:47.202" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 09:17:47.268" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 09:17:47.268" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230913 09:17:47.199" endtime="20230913 09:17:47.268"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 09:17:47.271" level="INFO"/>
<status status="PASS" starttime="20230913 09:17:47.269" endtime="20230913 09:17:47.271"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 09:17:47.271" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 09:17:47.271" endtime="20230913 09:17:47.272"/>
</kw>
<status status="PASS" starttime="20230913 09:17:47.199" endtime="20230913 09:17:47.273"/>
</kw>
<msg timestamp="20230913 09:17:47.273" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 09:17:47.198" endtime="20230913 09:17:47.274"/>
</kw>
<status status="PASS" starttime="20230913 09:17:47.197" endtime="20230913 09:17:47.274"/>
</kw>
<status status="PASS" starttime="20230913 09:17:47.197" endtime="20230913 09:17:47.274"/>
</kw>
<status status="PASS" starttime="20230913 09:17:47.173" endtime="20230913 09:17:47.275"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20230913 09:17:47.171" endtime="20230913 09:17:47.275"/>
</test>
<doc>Kinit test user</doc>
<status status="PASS" starttime="20230913 09:17:47.082" endtime="20230913 09:17:47.278"/>
</suite>
<suite id="s1-s2" name="Root-Ca-Rotation-Client-Checks" source="/opt/hadoop/smoketest/certrotation/root-ca-rotation-client-checks.robot">
<test id="s1-s2-t1" name="Create a volume and bucket" line="27">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 09:18:12.263" level="INFO">Running command 'ozone sh volume create rootca-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 09:18:20.068" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 09:18:20.068" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230913 09:18:12.260" endtime="20230913 09:18:20.068"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 09:18:20.070" level="INFO"/>
<status status="PASS" starttime="20230913 09:18:20.069" endtime="20230913 09:18:20.070"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 09:18:20.071" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 09:18:20.070" endtime="20230913 09:18:20.071"/>
</kw>
<status status="PASS" starttime="20230913 09:18:12.259" endtime="20230913 09:18:20.071"/>
</kw>
<msg timestamp="20230913 09:18:20.071" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 09:18:12.259" endtime="20230913 09:18:20.072"/>
</kw>
<msg timestamp="20230913 09:18:20.072" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230913 09:18:12.258" endtime="20230913 09:18:20.072"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230913 09:18:20.072" endtime="20230913 09:18:20.073"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 09:18:20.078" level="INFO">Running command 'ozone sh bucket create /rootca-volume/rootca-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 09:18:28.007" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 09:18:28.007" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230913 09:18:20.075" endtime="20230913 09:18:28.007"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 09:18:28.009" level="INFO"/>
<status status="PASS" starttime="20230913 09:18:28.008" endtime="20230913 09:18:28.009"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 09:18:28.010" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 09:18:28.009" endtime="20230913 09:18:28.010"/>
</kw>
<status status="PASS" starttime="20230913 09:18:20.074" endtime="20230913 09:18:28.010"/>
</kw>
<msg timestamp="20230913 09:18:28.010" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 09:18:20.074" endtime="20230913 09:18:28.011"/>
</kw>
<msg timestamp="20230913 09:18:28.011" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230913 09:18:20.073" endtime="20230913 09:18:28.011"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230913 09:18:28.011" endtime="20230913 09:18:28.011"/>
</kw>
<tag>create-volume-and-bucket</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230913 09:18:12.257" endtime="20230913 09:18:28.012"/>
</test>
<test id="s1-s2-t2" name="Create key" line="34">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 09:18:28.018" level="INFO">Running command 'echo "rootca: key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20230913 09:18:28.020" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 09:18:28.020" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230913 09:18:28.015" endtime="20230913 09:18:28.020"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 09:18:28.022" level="INFO"/>
<status status="PASS" starttime="20230913 09:18:28.021" endtime="20230913 09:18:28.022"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 09:18:28.023" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 09:18:28.022" endtime="20230913 09:18:28.023"/>
</kw>
<status status="PASS" starttime="20230913 09:18:28.014" endtime="20230913 09:18:28.023"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 09:18:28.028" level="INFO">Running command 'ozone sh key put /rootca-volume/rootca-bucket/rootca-key /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 09:18:41.309" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 09:18:41.309" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230913 09:18:28.025" endtime="20230913 09:18:41.309"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 09:18:41.311" level="INFO"/>
<status status="PASS" starttime="20230913 09:18:41.310" endtime="20230913 09:18:41.311"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 09:18:41.312" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 09:18:41.311" endtime="20230913 09:18:41.312"/>
</kw>
<status status="PASS" starttime="20230913 09:18:28.024" endtime="20230913 09:18:41.312"/>
</kw>
<msg timestamp="20230913 09:18:41.312" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 09:18:28.024" endtime="20230913 09:18:41.312"/>
</kw>
<msg timestamp="20230913 09:18:41.313" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230913 09:18:28.023" endtime="20230913 09:18:41.313"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230913 09:18:41.313" endtime="20230913 09:18:41.313"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 09:18:41.319" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 09:18:41.323" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 09:18:41.323" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230913 09:18:41.314" endtime="20230913 09:18:41.323"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 09:18:41.324" level="INFO"/>
<status status="PASS" starttime="20230913 09:18:41.323" endtime="20230913 09:18:41.324"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 09:18:41.325" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 09:18:41.324" endtime="20230913 09:18:41.325"/>
</kw>
<status status="PASS" starttime="20230913 09:18:41.314" endtime="20230913 09:18:41.325"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230913 09:18:28.013" endtime="20230913 09:18:41.325"/>
</test>
<test id="s1-s2-t3" name="Read data from previously created key" line="40">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230913 09:18:41.328" level="INFO">${random} = 32950</msg>
<status status="PASS" starttime="20230913 09:18:41.327" endtime="20230913 09:18:41.328"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 09:18:41.332" level="INFO">Running command 'ozone sh key get /rootca-volume/rootca-bucket/rootca-key /tmp/key-32950 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 09:18:51.555" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 09:18:51.555" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230913 09:18:41.330" endtime="20230913 09:18:51.555"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 09:18:51.556" level="INFO"/>
<status status="PASS" starttime="20230913 09:18:51.556" endtime="20230913 09:18:51.556"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 09:18:51.557" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 09:18:51.557" endtime="20230913 09:18:51.558"/>
</kw>
<status status="PASS" starttime="20230913 09:18:41.329" endtime="20230913 09:18:51.558"/>
</kw>
<msg timestamp="20230913 09:18:51.558" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 09:18:41.329" endtime="20230913 09:18:51.558"/>
</kw>
<msg timestamp="20230913 09:18:51.558" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230913 09:18:41.328" endtime="20230913 09:18:51.558"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230913 09:18:51.559" endtime="20230913 09:18:51.559"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 09:18:51.563" level="INFO">Running command 'cat /tmp/key-32950 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 09:18:51.567" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 09:18:51.567" level="INFO">${output} = rootca: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230913 09:18:51.560" endtime="20230913 09:18:51.567"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 09:18:51.569" level="INFO">rootca: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230913 09:18:51.568" endtime="20230913 09:18:51.569"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 09:18:51.570" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 09:18:51.569" endtime="20230913 09:18:51.570"/>
</kw>
<msg timestamp="20230913 09:18:51.571" level="INFO">${output} = rootca: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230913 09:18:51.559" endtime="20230913 09:18:51.571"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230913 09:18:51.571" endtime="20230913 09:18:51.571"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 09:18:51.575" level="INFO">Running command 'rm /tmp/key-32950 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 09:18:51.578" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 09:18:51.578" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230913 09:18:51.572" endtime="20230913 09:18:51.579"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 09:18:51.580" level="INFO"/>
<status status="PASS" starttime="20230913 09:18:51.579" endtime="20230913 09:18:51.580"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 09:18:51.581" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 09:18:51.580" endtime="20230913 09:18:51.581"/>
</kw>
<status status="PASS" starttime="20230913 09:18:51.572" endtime="20230913 09:18:51.581"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230913 09:18:41.326" endtime="20230913 09:18:51.582"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20230913 09:18:12.200" endtime="20230913 09:18:51.583"/>
</suite>
<suite id="s1-s3" name="Root-Ca-Rotation-Client-Checks" source="/opt/hadoop/smoketest/certrotation/root-ca-rotation-client-checks.robot">
<test id="s1-s3-t1" name="Create a volume and bucket" line="27">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 09:19:42.032" level="INFO">Running command 'ozone sh volume create rootca2-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 09:19:48.141" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 09:19:48.142" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230913 09:19:42.029" endtime="20230913 09:19:48.142"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 09:19:48.143" level="INFO"/>
<status status="PASS" starttime="20230913 09:19:48.142" endtime="20230913 09:19:48.143"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 09:19:48.144" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 09:19:48.144" endtime="20230913 09:19:48.144"/>
</kw>
<status status="PASS" starttime="20230913 09:19:42.028" endtime="20230913 09:19:48.144"/>
</kw>
<msg timestamp="20230913 09:19:48.145" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 09:19:42.028" endtime="20230913 09:19:48.145"/>
</kw>
<msg timestamp="20230913 09:19:48.145" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230913 09:19:42.027" endtime="20230913 09:19:48.145"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230913 09:19:48.145" endtime="20230913 09:19:48.146"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 09:19:48.151" level="INFO">Running command 'ozone sh bucket create /rootca2-volume/rootca2-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 09:19:55.897" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 09:19:55.897" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230913 09:19:48.147" endtime="20230913 09:19:55.897"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 09:19:55.898" level="INFO"/>
<status status="PASS" starttime="20230913 09:19:55.898" endtime="20230913 09:19:55.899"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 09:19:55.899" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 09:19:55.899" endtime="20230913 09:19:55.899"/>
</kw>
<status status="PASS" starttime="20230913 09:19:48.147" endtime="20230913 09:19:55.900"/>
</kw>
<msg timestamp="20230913 09:19:55.900" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 09:19:48.147" endtime="20230913 09:19:55.900"/>
</kw>
<msg timestamp="20230913 09:19:55.900" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230913 09:19:48.146" endtime="20230913 09:19:55.900"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230913 09:19:55.900" endtime="20230913 09:19:55.901"/>
</kw>
<tag>create-volume-and-bucket</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230913 09:19:42.026" endtime="20230913 09:19:55.901"/>
</test>
<test id="s1-s3-t2" name="Create key" line="34">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 09:19:55.906" level="INFO">Running command 'echo "rootca2: key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20230913 09:19:55.909" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 09:19:55.909" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230913 09:19:55.903" endtime="20230913 09:19:55.909"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 09:19:55.910" level="INFO"/>
<status status="PASS" starttime="20230913 09:19:55.910" endtime="20230913 09:19:55.910"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 09:19:55.911" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 09:19:55.911" endtime="20230913 09:19:55.911"/>
</kw>
<status status="PASS" starttime="20230913 09:19:55.903" endtime="20230913 09:19:55.911"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 09:19:55.916" level="INFO">Running command 'ozone sh key put /rootca2-volume/rootca2-bucket/rootca2-key /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 09:20:05.312" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 09:20:05.312" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230913 09:19:55.913" endtime="20230913 09:20:05.312"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 09:20:05.314" level="INFO"/>
<status status="PASS" starttime="20230913 09:20:05.313" endtime="20230913 09:20:05.314"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 09:20:05.315" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 09:20:05.314" endtime="20230913 09:20:05.315"/>
</kw>
<status status="PASS" starttime="20230913 09:19:55.912" endtime="20230913 09:20:05.315"/>
</kw>
<msg timestamp="20230913 09:20:05.315" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 09:19:55.912" endtime="20230913 09:20:05.315"/>
</kw>
<msg timestamp="20230913 09:20:05.317" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230913 09:19:55.911" endtime="20230913 09:20:05.317"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230913 09:20:05.318" endtime="20230913 09:20:05.318"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 09:20:05.324" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 09:20:05.329" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 09:20:05.329" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230913 09:20:05.320" endtime="20230913 09:20:05.329"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 09:20:05.331" level="INFO"/>
<status status="PASS" starttime="20230913 09:20:05.330" endtime="20230913 09:20:05.335"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 09:20:05.337" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 09:20:05.336" endtime="20230913 09:20:05.337"/>
</kw>
<status status="PASS" starttime="20230913 09:20:05.319" endtime="20230913 09:20:05.339"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230913 09:19:55.902" endtime="20230913 09:20:05.339"/>
</test>
<test id="s1-s3-t3" name="Read data from previously created key" line="40">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230913 09:20:05.344" level="INFO">${random} = 01428</msg>
<status status="PASS" starttime="20230913 09:20:05.344" endtime="20230913 09:20:05.345"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 09:20:05.355" level="INFO">Running command 'ozone sh key get /rootca2-volume/rootca2-bucket/rootca2-key /tmp/key-01428 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 09:20:15.262" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 09:20:15.262" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230913 09:20:05.349" endtime="20230913 09:20:15.262"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 09:20:15.263" level="INFO"/>
<status status="PASS" starttime="20230913 09:20:15.262" endtime="20230913 09:20:15.263"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 09:20:15.264" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 09:20:15.264" endtime="20230913 09:20:15.264"/>
</kw>
<status status="PASS" starttime="20230913 09:20:05.348" endtime="20230913 09:20:15.264"/>
</kw>
<msg timestamp="20230913 09:20:15.264" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 09:20:05.346" endtime="20230913 09:20:15.264"/>
</kw>
<msg timestamp="20230913 09:20:15.265" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230913 09:20:05.345" endtime="20230913 09:20:15.265"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230913 09:20:15.265" endtime="20230913 09:20:15.265"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 09:20:15.269" level="INFO">Running command 'cat /tmp/key-01428 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 09:20:15.272" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 09:20:15.272" level="INFO">${output} = rootca2: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230913 09:20:15.266" endtime="20230913 09:20:15.272"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 09:20:15.274" level="INFO">rootca2: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230913 09:20:15.273" endtime="20230913 09:20:15.274"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 09:20:15.275" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 09:20:15.274" endtime="20230913 09:20:15.275"/>
</kw>
<msg timestamp="20230913 09:20:15.275" level="INFO">${output} = rootca2: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230913 09:20:15.266" endtime="20230913 09:20:15.275"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230913 09:20:15.275" endtime="20230913 09:20:15.276"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 09:20:15.280" level="INFO">Running command 'rm /tmp/key-01428 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 09:20:15.283" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 09:20:15.283" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230913 09:20:15.277" endtime="20230913 09:20:15.283"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 09:20:15.285" level="INFO"/>
<status status="PASS" starttime="20230913 09:20:15.284" endtime="20230913 09:20:15.285"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 09:20:15.286" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 09:20:15.285" endtime="20230913 09:20:15.286"/>
</kw>
<status status="PASS" starttime="20230913 09:20:15.276" endtime="20230913 09:20:15.286"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230913 09:20:05.341" endtime="20230913 09:20:15.287"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20230913 09:19:41.969" endtime="20230913 09:20:15.288"/>
</suite>
<suite id="s1-s4" name="Root-Ca-Rotation" source="/opt/hadoop/smoketest/scmha/root-ca-rotation.robot">
<test id="s1-s4-t1" name="Verify root CA rotation metrics" line="26">
<kw name="Execute" library="os">
<var>${successRotationLine}</var>
<arg>curl -sS 'http://localhost:9876/jmx' | grep NumSuccessRotation</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230913 09:20:19.391" level="INFO">Running command 'curl -sS 'http://localhost:9876/jmx' | grep NumSuccessRotation 2&gt;&amp;1'.</msg>
<msg timestamp="20230913 09:20:20.130" level="INFO">${rc} = 0</msg>
<msg timestamp="20230913 09:20:20.130" level="INFO">${output} =     "NumSuccessRotation" : 2,</msg>
<status status="PASS" starttime="20230913 09:20:19.388" endtime="20230913 09:20:20.130"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 09:20:20.132" level="INFO">    "NumSuccessRotation" : 2,</msg>
<status status="PASS" starttime="20230913 09:20:20.131" endtime="20230913 09:20:20.132"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230913 09:20:20.133" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230913 09:20:20.133" endtime="20230913 09:20:20.133"/>
</kw>
<status status="PASS" starttime="20230913 09:20:19.387" endtime="20230913 09:20:20.134"/>
</kw>
<msg timestamp="20230913 09:20:20.134" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230913 09:20:19.387" endtime="20230913 09:20:20.134"/>
</kw>
<msg timestamp="20230913 09:20:20.134" level="INFO">${successRotationLine} =     "NumSuccessRotation" : 2,</msg>
<status status="PASS" starttime="20230913 09:20:19.386" endtime="20230913 09:20:20.134"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${successRotationLine}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230913 09:20:20.135" level="INFO">    "NumSuccessRotation" : 2,</msg>
<status status="PASS" starttime="20230913 09:20:20.135" endtime="20230913 09:20:20.135"/>
</kw>
<kw name="Split String" library="String">
<var>${temp_1}</var>
<arg>${successRotationLine}</arg>
<arg>:</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20230913 09:20:20.136" level="INFO">${temp_1} = ['    "NumSuccessRotation" ', ' 2,']</msg>
<status status="PASS" starttime="20230913 09:20:20.135" endtime="20230913 09:20:20.136"/>
</kw>
<kw name="Strip String" library="String">
<var>${temp_2}</var>
<arg>${temp_1[1]}</arg>
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<msg timestamp="20230913 09:20:20.140" level="INFO">${temp_2} = 2,</msg>
<status status="PASS" starttime="20230913 09:20:20.136" endtime="20230913 09:20:20.140"/>
</kw>
<kw name="Split String" library="String">
<var>${temp_3}</var>
<arg>${temp_2}</arg>
<arg>,</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20230913 09:20:20.141" level="INFO">${temp_3} = ['2', '']</msg>
<status status="PASS" starttime="20230913 09:20:20.140" endtime="20230913 09:20:20.142"/>
</kw>
<kw name="Strip String" library="String">
<var>${successRotation}</var>
<arg>${temp_3[0]}</arg>
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<msg timestamp="20230913 09:20:20.145" level="INFO">${successRotation} = 2</msg>
<status status="PASS" starttime="20230913 09:20:20.142" endtime="20230913 09:20:20.145"/>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<var>${successRotation}</var>
<arg>${successRotation}</arg>
<doc>Converts the given item to a floating point number.</doc>
<msg timestamp="20230913 09:20:20.147" level="INFO">${successRotation} = 2.0</msg>
<status status="PASS" starttime="20230913 09:20:20.145" endtime="20230913 09:20:20.147"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${successRotation} &gt;= 1</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230913 09:20:20.147" endtime="20230913 09:20:20.149"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230913 09:20:19.386" endtime="20230913 09:20:20.149"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20230913 09:20:19.329" endtime="20230913 09:20:20.155"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="73724"/>
</suite>
<statistics>
<total>
<stat pass="8" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="2" fail="0" skip="0">create-volume-and-bucket</stat>
</tag>
<suite>
<stat pass="8" fail="0" skip="0" id="s1" name="ozonesecure-root-ca-rotation">ozonesecure-root-ca-rotation</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1" name="Kinit">ozonesecure-root-ca-rotation.Kinit</stat>
<stat pass="3" fail="0" skip="0" id="s1-s2" name="Root-Ca-Rotation-Client-Checks">ozonesecure-root-ca-rotation.Root-Ca-Rotation-Client-Checks</stat>
<stat pass="3" fail="0" skip="0" id="s1-s3" name="Root-Ca-Rotation-Client-Checks">ozonesecure-root-ca-rotation.Root-Ca-Rotation-Client-Checks</stat>
<stat pass="1" fail="0" skip="0" id="s1-s4" name="Root-Ca-Rotation">ozonesecure-root-ca-rotation.Root-Ca-Rotation</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
