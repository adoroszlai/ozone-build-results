<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 6.1.1 (Python 3.8.10 on linux)" generated="20230919 09:40:31.171" rpa="false" schemaversion="4">
<suite id="s1" name="ozonesecure-root-ca-rotation">
<suite id="s1-s1" name="Kinit" source="/opt/hadoop/smoketest/kinit.robot">
<test id="s1-s1-t1" name="Kinit" line="27">
<kw name="Kinit test user" library="commonlib">
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230919 09:37:38.782" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230919 09:37:38.788" level="INFO">${rc} = 0</msg>
<msg timestamp="20230919 09:37:38.788" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230919 09:37:38.779" endtime="20230919 09:37:38.788"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230919 09:37:38.789" level="INFO">scm</msg>
<status status="PASS" starttime="20230919 09:37:38.789" endtime="20230919 09:37:38.789"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230919 09:37:38.790" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230919 09:37:38.789" endtime="20230919 09:37:38.790"/>
</kw>
<status status="PASS" starttime="20230919 09:37:38.778" endtime="20230919 09:37:38.791"/>
</kw>
<msg timestamp="20230919 09:37:38.791" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230919 09:37:38.778" endtime="20230919 09:37:38.791"/>
</kw>
<msg timestamp="20230919 09:37:38.791" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230919 09:37:38.777" endtime="20230919 09:37:38.791"/>
</kw>
<msg timestamp="20230919 09:37:38.791" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230919 09:37:38.777" endtime="20230919 09:37:38.791"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230919 09:37:38.792" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230919 09:37:38.792" endtime="20230919 09:37:38.792"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230919 09:37:38.797" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20230919 09:37:38.885" level="INFO">${rc} = 0</msg>
<msg timestamp="20230919 09:37:38.885" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230919 09:37:38.794" endtime="20230919 09:37:38.885"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230919 09:37:38.886" level="INFO"/>
<status status="PASS" starttime="20230919 09:37:38.885" endtime="20230919 09:37:38.887"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230919 09:37:38.887" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230919 09:37:38.887" endtime="20230919 09:37:38.887"/>
</kw>
<status status="PASS" starttime="20230919 09:37:38.794" endtime="20230919 09:37:38.888"/>
</kw>
<msg timestamp="20230919 09:37:38.888" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230919 09:37:38.793" endtime="20230919 09:37:38.888"/>
</kw>
<status status="PASS" starttime="20230919 09:37:38.793" endtime="20230919 09:37:38.888"/>
</kw>
<status status="PASS" starttime="20230919 09:37:38.792" endtime="20230919 09:37:38.888"/>
</kw>
<status status="PASS" starttime="20230919 09:37:38.776" endtime="20230919 09:37:38.888"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20230919 09:37:38.771" endtime="20230919 09:37:38.889"/>
</test>
<doc>Kinit test user</doc>
<status status="PASS" starttime="20230919 09:37:38.668" endtime="20230919 09:37:38.890"/>
</suite>
<suite id="s1-s2" name="Root-Ca-Rotation-Client-Checks" source="/opt/hadoop/smoketest/certrotation/root-ca-rotation-client-checks.robot">
<test id="s1-s2-t1" name="Create a volume and bucket" line="27">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230919 09:38:04.679" level="INFO">Running command 'ozone sh volume create rootca-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20230919 09:38:13.011" level="INFO">${rc} = 0</msg>
<msg timestamp="20230919 09:38:13.011" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230919 09:38:04.676" endtime="20230919 09:38:13.011"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230919 09:38:13.018" level="INFO"/>
<status status="PASS" starttime="20230919 09:38:13.014" endtime="20230919 09:38:13.018"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230919 09:38:13.027" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230919 09:38:13.018" endtime="20230919 09:38:13.028"/>
</kw>
<status status="PASS" starttime="20230919 09:38:04.676" endtime="20230919 09:38:13.028"/>
</kw>
<msg timestamp="20230919 09:38:13.028" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230919 09:38:04.675" endtime="20230919 09:38:13.028"/>
</kw>
<msg timestamp="20230919 09:38:13.029" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230919 09:38:04.674" endtime="20230919 09:38:13.029"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230919 09:38:13.029" endtime="20230919 09:38:13.030"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230919 09:38:13.036" level="INFO">Running command 'ozone sh bucket create /rootca-volume/rootca-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230919 09:38:20.236" level="INFO">${rc} = 0</msg>
<msg timestamp="20230919 09:38:20.236" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230919 09:38:13.032" endtime="20230919 09:38:20.236"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230919 09:38:20.239" level="INFO"/>
<status status="PASS" starttime="20230919 09:38:20.238" endtime="20230919 09:38:20.239"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230919 09:38:20.240" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230919 09:38:20.240" endtime="20230919 09:38:20.241"/>
</kw>
<status status="PASS" starttime="20230919 09:38:13.032" endtime="20230919 09:38:20.241"/>
</kw>
<msg timestamp="20230919 09:38:20.241" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230919 09:38:13.031" endtime="20230919 09:38:20.241"/>
</kw>
<msg timestamp="20230919 09:38:20.242" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230919 09:38:13.030" endtime="20230919 09:38:20.242"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230919 09:38:20.242" endtime="20230919 09:38:20.242"/>
</kw>
<tag>create-volume-and-bucket</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230919 09:38:04.674" endtime="20230919 09:38:20.243"/>
</test>
<test id="s1-s2-t2" name="Create key" line="34">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230919 09:38:20.250" level="INFO">Running command 'echo "rootca: key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20230919 09:38:20.253" level="INFO">${rc} = 0</msg>
<msg timestamp="20230919 09:38:20.254" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230919 09:38:20.247" endtime="20230919 09:38:20.254"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230919 09:38:20.255" level="INFO"/>
<status status="PASS" starttime="20230919 09:38:20.254" endtime="20230919 09:38:20.255"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230919 09:38:20.256" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230919 09:38:20.255" endtime="20230919 09:38:20.256"/>
</kw>
<status status="PASS" starttime="20230919 09:38:20.246" endtime="20230919 09:38:20.256"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230919 09:38:20.262" level="INFO">Running command 'ozone sh key put /rootca-volume/rootca-bucket/rootca-key /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230919 09:38:33.708" level="INFO">${rc} = 0</msg>
<msg timestamp="20230919 09:38:33.708" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230919 09:38:20.259" endtime="20230919 09:38:33.708"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230919 09:38:33.710" level="INFO"/>
<status status="PASS" starttime="20230919 09:38:33.709" endtime="20230919 09:38:33.710"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230919 09:38:33.710" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230919 09:38:33.710" endtime="20230919 09:38:33.711"/>
</kw>
<status status="PASS" starttime="20230919 09:38:20.258" endtime="20230919 09:38:33.711"/>
</kw>
<msg timestamp="20230919 09:38:33.711" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230919 09:38:20.258" endtime="20230919 09:38:33.711"/>
</kw>
<msg timestamp="20230919 09:38:33.711" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230919 09:38:20.257" endtime="20230919 09:38:33.711"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230919 09:38:33.711" endtime="20230919 09:38:33.712"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230919 09:38:33.716" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230919 09:38:33.719" level="INFO">${rc} = 0</msg>
<msg timestamp="20230919 09:38:33.719" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230919 09:38:33.713" endtime="20230919 09:38:33.719"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230919 09:38:33.720" level="INFO"/>
<status status="PASS" starttime="20230919 09:38:33.720" endtime="20230919 09:38:33.721"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230919 09:38:33.721" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230919 09:38:33.721" endtime="20230919 09:38:33.721"/>
</kw>
<status status="PASS" starttime="20230919 09:38:33.712" endtime="20230919 09:38:33.722"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230919 09:38:20.245" endtime="20230919 09:38:33.722"/>
</test>
<test id="s1-s2-t3" name="Read data from previously created key" line="40">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230919 09:38:33.725" level="INFO">${random} = 08808</msg>
<status status="PASS" starttime="20230919 09:38:33.724" endtime="20230919 09:38:33.725"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230919 09:38:33.729" level="INFO">Running command 'ozone sh key get /rootca-volume/rootca-bucket/rootca-key /tmp/key-08808 2&gt;&amp;1'.</msg>
<msg timestamp="20230919 09:38:43.864" level="INFO">${rc} = 0</msg>
<msg timestamp="20230919 09:38:43.865" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230919 09:38:33.726" endtime="20230919 09:38:43.865"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230919 09:38:43.866" level="INFO"/>
<status status="PASS" starttime="20230919 09:38:43.865" endtime="20230919 09:38:43.866"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230919 09:38:43.867" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230919 09:38:43.866" endtime="20230919 09:38:43.867"/>
</kw>
<status status="PASS" starttime="20230919 09:38:33.726" endtime="20230919 09:38:43.867"/>
</kw>
<msg timestamp="20230919 09:38:43.867" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230919 09:38:33.726" endtime="20230919 09:38:43.867"/>
</kw>
<msg timestamp="20230919 09:38:43.867" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230919 09:38:33.725" endtime="20230919 09:38:43.868"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230919 09:38:43.868" endtime="20230919 09:38:43.868"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230919 09:38:43.872" level="INFO">Running command 'cat /tmp/key-08808 2&gt;&amp;1'.</msg>
<msg timestamp="20230919 09:38:43.876" level="INFO">${rc} = 0</msg>
<msg timestamp="20230919 09:38:43.876" level="INFO">${output} = rootca: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230919 09:38:43.869" endtime="20230919 09:38:43.876"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230919 09:38:43.877" level="INFO">rootca: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230919 09:38:43.876" endtime="20230919 09:38:43.877"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230919 09:38:43.878" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230919 09:38:43.877" endtime="20230919 09:38:43.878"/>
</kw>
<msg timestamp="20230919 09:38:43.878" level="INFO">${output} = rootca: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230919 09:38:43.868" endtime="20230919 09:38:43.878"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230919 09:38:43.879" endtime="20230919 09:38:43.879"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230919 09:38:43.883" level="INFO">Running command 'rm /tmp/key-08808 2&gt;&amp;1'.</msg>
<msg timestamp="20230919 09:38:43.886" level="INFO">${rc} = 0</msg>
<msg timestamp="20230919 09:38:43.886" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230919 09:38:43.880" endtime="20230919 09:38:43.886"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230919 09:38:43.887" level="INFO"/>
<status status="PASS" starttime="20230919 09:38:43.887" endtime="20230919 09:38:43.887"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230919 09:38:43.888" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230919 09:38:43.888" endtime="20230919 09:38:43.888"/>
</kw>
<status status="PASS" starttime="20230919 09:38:43.879" endtime="20230919 09:38:43.889"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230919 09:38:33.723" endtime="20230919 09:38:43.889"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20230919 09:38:04.617" endtime="20230919 09:38:43.891"/>
</suite>
<suite id="s1-s3" name="Root-Ca-Rotation-Client-Checks" source="/opt/hadoop/smoketest/certrotation/root-ca-rotation-client-checks.robot">
<test id="s1-s3-t1" name="Create a volume and bucket" line="27">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230919 09:39:30.017" level="INFO">Running command 'ozone sh volume create rootca2-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20230919 09:39:37.183" level="INFO">${rc} = 0</msg>
<msg timestamp="20230919 09:39:37.183" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230919 09:39:30.013" endtime="20230919 09:39:37.183"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230919 09:39:37.184" level="INFO"/>
<status status="PASS" starttime="20230919 09:39:37.183" endtime="20230919 09:39:37.185"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230919 09:39:37.185" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230919 09:39:37.185" endtime="20230919 09:39:37.185"/>
</kw>
<status status="PASS" starttime="20230919 09:39:30.013" endtime="20230919 09:39:37.185"/>
</kw>
<msg timestamp="20230919 09:39:37.186" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230919 09:39:30.012" endtime="20230919 09:39:37.186"/>
</kw>
<msg timestamp="20230919 09:39:37.186" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230919 09:39:30.011" endtime="20230919 09:39:37.186"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230919 09:39:37.186" endtime="20230919 09:39:37.186"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230919 09:39:37.191" level="INFO">Running command 'ozone sh bucket create /rootca2-volume/rootca2-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230919 09:39:44.683" level="INFO">${rc} = 0</msg>
<msg timestamp="20230919 09:39:44.683" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230919 09:39:37.188" endtime="20230919 09:39:44.684"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230919 09:39:44.685" level="INFO"/>
<status status="PASS" starttime="20230919 09:39:44.684" endtime="20230919 09:39:44.685"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230919 09:39:44.686" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230919 09:39:44.685" endtime="20230919 09:39:44.686"/>
</kw>
<status status="PASS" starttime="20230919 09:39:37.188" endtime="20230919 09:39:44.686"/>
</kw>
<msg timestamp="20230919 09:39:44.686" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230919 09:39:37.187" endtime="20230919 09:39:44.686"/>
</kw>
<msg timestamp="20230919 09:39:44.686" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230919 09:39:37.187" endtime="20230919 09:39:44.686"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230919 09:39:44.686" endtime="20230919 09:39:44.687"/>
</kw>
<tag>create-volume-and-bucket</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230919 09:39:30.010" endtime="20230919 09:39:44.687"/>
</test>
<test id="s1-s3-t2" name="Create key" line="34">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230919 09:39:44.693" level="INFO">Running command 'echo "rootca2: key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20230919 09:39:44.696" level="INFO">${rc} = 0</msg>
<msg timestamp="20230919 09:39:44.696" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230919 09:39:44.690" endtime="20230919 09:39:44.696"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230919 09:39:44.698" level="INFO"/>
<status status="PASS" starttime="20230919 09:39:44.697" endtime="20230919 09:39:44.698"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230919 09:39:44.699" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230919 09:39:44.698" endtime="20230919 09:39:44.699"/>
</kw>
<status status="PASS" starttime="20230919 09:39:44.690" endtime="20230919 09:39:44.699"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230919 09:39:44.704" level="INFO">Running command 'ozone sh key put /rootca2-volume/rootca2-bucket/rootca2-key /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230919 09:39:54.277" level="INFO">${rc} = 0</msg>
<msg timestamp="20230919 09:39:54.277" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230919 09:39:44.701" endtime="20230919 09:39:54.277"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230919 09:39:54.278" level="INFO"/>
<status status="PASS" starttime="20230919 09:39:54.277" endtime="20230919 09:39:54.278"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230919 09:39:54.279" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230919 09:39:54.279" endtime="20230919 09:39:54.279"/>
</kw>
<status status="PASS" starttime="20230919 09:39:44.700" endtime="20230919 09:39:54.280"/>
</kw>
<msg timestamp="20230919 09:39:54.280" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230919 09:39:44.700" endtime="20230919 09:39:54.280"/>
</kw>
<msg timestamp="20230919 09:39:54.280" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230919 09:39:44.699" endtime="20230919 09:39:54.280"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230919 09:39:54.280" endtime="20230919 09:39:54.281"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230919 09:39:54.284" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230919 09:39:54.288" level="INFO">${rc} = 0</msg>
<msg timestamp="20230919 09:39:54.288" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230919 09:39:54.281" endtime="20230919 09:39:54.288"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230919 09:39:54.289" level="INFO"/>
<status status="PASS" starttime="20230919 09:39:54.288" endtime="20230919 09:39:54.289"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230919 09:39:54.290" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230919 09:39:54.289" endtime="20230919 09:39:54.290"/>
</kw>
<status status="PASS" starttime="20230919 09:39:54.281" endtime="20230919 09:39:54.290"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230919 09:39:44.689" endtime="20230919 09:39:54.290"/>
</test>
<test id="s1-s3-t3" name="Read data from previously created key" line="40">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230919 09:39:54.299" level="INFO">${random} = 57976</msg>
<status status="PASS" starttime="20230919 09:39:54.293" endtime="20230919 09:39:54.299"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230919 09:39:54.305" level="INFO">Running command 'ozone sh key get /rootca2-volume/rootca2-bucket/rootca2-key /tmp/key-57976 2&gt;&amp;1'.</msg>
<msg timestamp="20230919 09:40:04.885" level="INFO">${rc} = 0</msg>
<msg timestamp="20230919 09:40:04.885" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230919 09:39:54.301" endtime="20230919 09:40:04.885"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230919 09:40:04.887" level="INFO"/>
<status status="PASS" starttime="20230919 09:40:04.886" endtime="20230919 09:40:04.887"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230919 09:40:04.888" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230919 09:40:04.888" endtime="20230919 09:40:04.888"/>
</kw>
<status status="PASS" starttime="20230919 09:39:54.301" endtime="20230919 09:40:04.889"/>
</kw>
<msg timestamp="20230919 09:40:04.889" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230919 09:39:54.300" endtime="20230919 09:40:04.889"/>
</kw>
<msg timestamp="20230919 09:40:04.889" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230919 09:39:54.300" endtime="20230919 09:40:04.889"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230919 09:40:04.889" endtime="20230919 09:40:04.890"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230919 09:40:04.898" level="INFO">Running command 'cat /tmp/key-57976 2&gt;&amp;1'.</msg>
<msg timestamp="20230919 09:40:04.902" level="INFO">${rc} = 0</msg>
<msg timestamp="20230919 09:40:04.902" level="INFO">${output} = rootca2: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230919 09:40:04.891" endtime="20230919 09:40:04.902"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230919 09:40:04.903" level="INFO">rootca2: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230919 09:40:04.903" endtime="20230919 09:40:04.904"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230919 09:40:04.904" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230919 09:40:04.904" endtime="20230919 09:40:04.905"/>
</kw>
<msg timestamp="20230919 09:40:04.905" level="INFO">${output} = rootca2: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230919 09:40:04.890" endtime="20230919 09:40:04.905"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230919 09:40:04.905" endtime="20230919 09:40:04.906"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230919 09:40:04.910" level="INFO">Running command 'rm /tmp/key-57976 2&gt;&amp;1'.</msg>
<msg timestamp="20230919 09:40:04.915" level="INFO">${rc} = 0</msg>
<msg timestamp="20230919 09:40:04.915" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230919 09:40:04.907" endtime="20230919 09:40:04.915"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230919 09:40:04.917" level="INFO"/>
<status status="PASS" starttime="20230919 09:40:04.916" endtime="20230919 09:40:04.917"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230919 09:40:04.918" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230919 09:40:04.917" endtime="20230919 09:40:04.918"/>
</kw>
<status status="PASS" starttime="20230919 09:40:04.906" endtime="20230919 09:40:04.918"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230919 09:39:54.292" endtime="20230919 09:40:04.918"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20230919 09:39:29.939" endtime="20230919 09:40:04.920"/>
</suite>
<suite id="s1-s4" name="Root-Ca-Rotation" source="/opt/hadoop/smoketest/scmha/root-ca-rotation.robot">
<test id="s1-s4-t1" name="Verify root CA rotation metrics" line="26">
<kw name="Execute" library="os">
<var>${successRotationLine}</var>
<arg>curl -sS 'http://localhost:9876/jmx' | grep NumSuccessRotation</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230919 09:40:09.034" level="INFO">Running command 'curl -sS 'http://localhost:9876/jmx' | grep NumSuccessRotation 2&gt;&amp;1'.</msg>
<msg timestamp="20230919 09:40:09.615" level="INFO">${rc} = 0</msg>
<msg timestamp="20230919 09:40:09.615" level="INFO">${output} =     "NumSuccessRotation" : 2,</msg>
<status status="PASS" starttime="20230919 09:40:09.031" endtime="20230919 09:40:09.615"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230919 09:40:09.617" level="INFO">    "NumSuccessRotation" : 2,</msg>
<status status="PASS" starttime="20230919 09:40:09.616" endtime="20230919 09:40:09.617"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230919 09:40:09.618" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230919 09:40:09.617" endtime="20230919 09:40:09.618"/>
</kw>
<status status="PASS" starttime="20230919 09:40:09.030" endtime="20230919 09:40:09.618"/>
</kw>
<msg timestamp="20230919 09:40:09.618" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230919 09:40:09.029" endtime="20230919 09:40:09.618"/>
</kw>
<msg timestamp="20230919 09:40:09.619" level="INFO">${successRotationLine} =     "NumSuccessRotation" : 2,</msg>
<status status="PASS" starttime="20230919 09:40:09.029" endtime="20230919 09:40:09.619"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${successRotationLine}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230919 09:40:09.619" level="INFO">    "NumSuccessRotation" : 2,</msg>
<status status="PASS" starttime="20230919 09:40:09.619" endtime="20230919 09:40:09.620"/>
</kw>
<kw name="Split String" library="String">
<var>${temp_1}</var>
<arg>${successRotationLine}</arg>
<arg>:</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20230919 09:40:09.620" level="INFO">${temp_1} = ['    "NumSuccessRotation" ', ' 2,']</msg>
<status status="PASS" starttime="20230919 09:40:09.620" endtime="20230919 09:40:09.620"/>
</kw>
<kw name="Strip String" library="String">
<var>${temp_2}</var>
<arg>${temp_1[1]}</arg>
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<msg timestamp="20230919 09:40:09.623" level="INFO">${temp_2} = 2,</msg>
<status status="PASS" starttime="20230919 09:40:09.620" endtime="20230919 09:40:09.623"/>
</kw>
<kw name="Split String" library="String">
<var>${temp_3}</var>
<arg>${temp_2}</arg>
<arg>,</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20230919 09:40:09.624" level="INFO">${temp_3} = ['2', '']</msg>
<status status="PASS" starttime="20230919 09:40:09.623" endtime="20230919 09:40:09.624"/>
</kw>
<kw name="Strip String" library="String">
<var>${successRotation}</var>
<arg>${temp_3[0]}</arg>
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<msg timestamp="20230919 09:40:09.625" level="INFO">${successRotation} = 2</msg>
<status status="PASS" starttime="20230919 09:40:09.624" endtime="20230919 09:40:09.625"/>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<var>${successRotation}</var>
<arg>${successRotation}</arg>
<doc>Converts the given item to a floating point number.</doc>
<msg timestamp="20230919 09:40:09.626" level="INFO">${successRotation} = 2.0</msg>
<status status="PASS" starttime="20230919 09:40:09.626" endtime="20230919 09:40:09.626"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${successRotation} &gt;= 1</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230919 09:40:09.626" endtime="20230919 09:40:09.627"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230919 09:40:09.028" endtime="20230919 09:40:09.627"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20230919 09:40:08.971" endtime="20230919 09:40:09.630"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="75136"/>
</suite>
<statistics>
<total>
<stat pass="8" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="2" fail="0" skip="0">create-volume-and-bucket</stat>
</tag>
<suite>
<stat pass="8" fail="0" skip="0" id="s1" name="ozonesecure-root-ca-rotation">ozonesecure-root-ca-rotation</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1" name="Kinit">ozonesecure-root-ca-rotation.Kinit</stat>
<stat pass="3" fail="0" skip="0" id="s1-s2" name="Root-Ca-Rotation-Client-Checks">ozonesecure-root-ca-rotation.Root-Ca-Rotation-Client-Checks</stat>
<stat pass="3" fail="0" skip="0" id="s1-s3" name="Root-Ca-Rotation-Client-Checks">ozonesecure-root-ca-rotation.Root-Ca-Rotation-Client-Checks</stat>
<stat pass="1" fail="0" skip="0" id="s1-s4" name="Root-Ca-Rotation">ozonesecure-root-ca-rotation.Root-Ca-Rotation</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
