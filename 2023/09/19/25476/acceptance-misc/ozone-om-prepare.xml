<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 6.1.1 (Python 3.8.10 on linux)" generated="20230919 02:25:44.003" rpa="false" schemaversion="4">
<suite id="s1" name="ozone-om-prepare">
<suite id="s1-s1" name="Om-Prepare" source="/opt/hadoop/smoketest/omha/om-prepare.robot">
<kw name="Create Specific OM data for prepare" type="SETUP">
<kw name="Freon OCKG" library="freon">
<arg>prefix=om-prepare</arg>
<arg>n=100</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230919 02:20:12.184" level="INFO">Running command 'ozone freon ockg --om-service-id=omservice -t 1 -n100 -p om-prepare  2&gt;&amp;1'.</msg>
<msg timestamp="20230919 02:20:28.726" level="INFO">${rc} = 0</msg>
<msg timestamp="20230919 02:20:28.726" level="INFO">${output} = 2023-09-19 02:20:14,015 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-19 02:20:14,138 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230919 02:20:12.182" endtime="20230919 02:20:28.726"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230919 02:20:28.727" level="INFO">2023-09-19 02:20:14,015 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-19 02:20:14,138 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-09-19 02:20:14,138 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-09-19 02:20:14,234 [main] INFO freon.BaseFreonGenerator: Executing test with prefix om-prepare and number-of-tests 100
2023-09-19 02:20:14,289 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2023-09-19 02:20:15,098 [main] INFO rpc.RpcClient: Creating Volume: vol1, with hadoop as owner and space quota set to -1 bytes, counts quota set to -1
2023-09-19 02:20:15,290 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2023-09-19 02:20:15,357 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Encryption set to false, Replication Type set to server-side default replication type, Namespace Quota set to -1, Space Quota set to -1 
2023-09-19 02:20:16,291 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2023-09-19 02:20:16,725 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2023-09-19 02:20:17,027 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2023-09-19 02:20:17,292 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2023-09-19 02:20:18,293 [Thread-3] INFO freon.ProgressBar: Progress: 1.00 % (1 out of 100)
2023-09-19 02:20:19,293 [Thread-3] INFO freon.ProgressBar: Progress: 3.00 % (3 out of 100)
2023-09-19 02:20:20,296 [Thread-3] INFO freon.ProgressBar: Progress: 11.00 % (11 out of 100)
2023-09-19 02:20:21,297 [Thread-3] INFO freon.ProgressBar: Progress: 19.00 % (19 out of 100)
2023-09-19 02:20:22,297 [Thread-3] INFO freon.ProgressBar: Progress: 29.00 % (29 out of 100)
2023-09-19 02:20:23,306 [Thread-3] INFO freon.ProgressBar: Progress: 41.00 % (41 out of 100)
2023-09-19 02:20:24,306 [Thread-3] INFO freon.ProgressBar: Progress: 54.00 % (54 out of 100)
2023-09-19 02:20:25,307 [Thread-3] INFO freon.ProgressBar: Progress: 67.00 % (67 out of 100)
2023-09-19 02:20:26,307 [Thread-3] INFO freon.ProgressBar: Progress: 83.00 % (83 out of 100)
2023-09-19 02:20:27,308 [Thread-3] INFO freon.ProgressBar: Progress: 98.00 % (98 out of 100)
2023-09-19 02:20:28,309 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (100 out of 100)
2023-09-19 02:20:28,353 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=100, min=45.65337, max=2569.913147, mean=115.26387545993677, stddev=246.80814852731567, median=78.445236, p75=99.072903, p95=144.772728, p98=501.126958, p99=610.065732, p999=2569.913147, mean_rate=7.780181237762786, m1=3.3196002683360906, m5=2.7487569156054428, m15=2.6498613679559293, rate_unit=events/second, duration_unit=milliseconds
2023-09-19 02:20:28,354 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 14
2023-09-19 02:20:28,354 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-09-19 02:20:28,354 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 100</msg>
<status status="PASS" starttime="20230919 02:20:28.727" endtime="20230919 02:20:28.727"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230919 02:20:28.728" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230919 02:20:28.727" endtime="20230919 02:20:28.728"/>
</kw>
<status status="PASS" starttime="20230919 02:20:12.182" endtime="20230919 02:20:28.728"/>
</kw>
<msg timestamp="20230919 02:20:28.728" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230919 02:20:12.181" endtime="20230919 02:20:28.728"/>
</kw>
<msg timestamp="20230919 02:20:28.728" level="INFO">${result} = 2023-09-19 02:20:14,015 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-19 02:20:14,138 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230919 02:20:12.181" endtime="20230919 02:20:28.728"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230919 02:20:28.729" endtime="20230919 02:20:28.729"/>
</kw>
<status status="PASS" starttime="20230919 02:20:12.180" endtime="20230919 02:20:28.729"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230919 02:20:28.730" level="INFO">${random} = 49245</msg>
<status status="PASS" starttime="20230919 02:20:28.729" endtime="20230919 02:20:28.730"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${volume_name}</arg>
<arg>${random}-volume-for-prepare</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230919 02:20:28.731" level="INFO">${volume_name} = 49245-volume-for-prepare</msg>
<status status="PASS" starttime="20230919 02:20:28.730" endtime="20230919 02:20:28.731"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${bucket_name}</arg>
<arg>${random}-bucket-for-prepare</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230919 02:20:28.732" level="INFO">${bucket_name} = 49245-bucket-for-prepare</msg>
<status status="PASS" starttime="20230919 02:20:28.731" endtime="20230919 02:20:28.732"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create /${volume_name}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230919 02:20:28.736" level="INFO">Running command 'ozone sh volume create /49245-volume-for-prepare 2&gt;&amp;1'.</msg>
<msg timestamp="20230919 02:20:31.367" level="INFO">${rc} = 0</msg>
<msg timestamp="20230919 02:20:31.367" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230919 02:20:28.734" endtime="20230919 02:20:31.367"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230919 02:20:31.368" level="INFO"/>
<status status="PASS" starttime="20230919 02:20:31.367" endtime="20230919 02:20:31.368"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230919 02:20:31.368" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230919 02:20:31.368" endtime="20230919 02:20:31.368"/>
</kw>
<status status="PASS" starttime="20230919 02:20:28.733" endtime="20230919 02:20:31.369"/>
</kw>
<msg timestamp="20230919 02:20:31.369" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230919 02:20:28.733" endtime="20230919 02:20:31.369"/>
</kw>
<status status="PASS" starttime="20230919 02:20:28.733" endtime="20230919 02:20:31.369"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create /${volume_name}/${bucket_name}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230919 02:20:31.373" level="INFO">Running command 'ozone sh bucket create /49245-volume-for-prepare/49245-bucket-for-prepare 2&gt;&amp;1'.</msg>
<msg timestamp="20230919 02:20:34.363" level="INFO">${rc} = 0</msg>
<msg timestamp="20230919 02:20:34.363" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230919 02:20:31.370" endtime="20230919 02:20:34.364"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230919 02:20:34.365" level="INFO"/>
<status status="PASS" starttime="20230919 02:20:34.364" endtime="20230919 02:20:34.365"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230919 02:20:34.365" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230919 02:20:34.365" endtime="20230919 02:20:34.365"/>
</kw>
<status status="PASS" starttime="20230919 02:20:31.370" endtime="20230919 02:20:34.365"/>
</kw>
<msg timestamp="20230919 02:20:34.365" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230919 02:20:31.370" endtime="20230919 02:20:34.366"/>
</kw>
<status status="PASS" starttime="20230919 02:20:31.369" endtime="20230919 02:20:34.366"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put /${volume_name}/${bucket_name}/prepare-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230919 02:20:34.370" level="INFO">Running command 'ozone sh key put /49245-volume-for-prepare/49245-bucket-for-prepare/prepare-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230919 02:20:39.187" level="INFO">${rc} = 0</msg>
<msg timestamp="20230919 02:20:39.187" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230919 02:20:34.367" endtime="20230919 02:20:39.187"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230919 02:20:39.188" level="INFO"/>
<status status="PASS" starttime="20230919 02:20:39.187" endtime="20230919 02:20:39.188"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230919 02:20:39.188" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230919 02:20:39.188" endtime="20230919 02:20:39.188"/>
</kw>
<status status="PASS" starttime="20230919 02:20:34.367" endtime="20230919 02:20:39.189"/>
</kw>
<msg timestamp="20230919 02:20:39.189" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230919 02:20:34.366" endtime="20230919 02:20:39.189"/>
</kw>
<status status="PASS" starttime="20230919 02:20:34.366" endtime="20230919 02:20:39.189"/>
</kw>
<status status="PASS" starttime="20230919 02:20:12.179" endtime="20230919 02:20:39.189"/>
</kw>
<test id="s1-s1-t1" name="Prepare Ozone Manager" line="39">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230919 02:20:39.190" endtime="20230919 02:20:39.191"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om prepare -id=omservice</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230919 02:20:39.195" level="INFO">Running command 'ozone admin om prepare -id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20230919 02:20:47.432" level="INFO">${rc} = 0</msg>
<msg timestamp="20230919 02:20:47.432" level="INFO">${output} = Ozone Manager Prepare Request successfully returned with Transaction Id : [413].

Checking individual OM instances for prepare request completion...
OM : [om1], Prepare Status : [PREPARE_COMPLETED], C...</msg>
<status status="PASS" starttime="20230919 02:20:39.192" endtime="20230919 02:20:47.432"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230919 02:20:47.434" level="INFO">Ozone Manager Prepare Request successfully returned with Transaction Id : [413].

Checking individual OM instances for prepare request completion...
OM : [om1], Prepare Status : [PREPARE_COMPLETED], Current Transaction Id : [413]
OM : [om3], Prepare Status : [PREPARE_COMPLETED], Current Transaction Id : [413]
OM : [om2], Prepare Status : [PREPARE_COMPLETED], Current Transaction Id : [413]

OM Preparation successful! 
All OMs are prepared
No new write requests will be allowed until preparation is cancelled or upgrade/downgrade is done.</msg>
<status status="PASS" starttime="20230919 02:20:47.433" endtime="20230919 02:20:47.434"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230919 02:20:47.434" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230919 02:20:47.434" endtime="20230919 02:20:47.435"/>
</kw>
<status status="PASS" starttime="20230919 02:20:39.192" endtime="20230919 02:20:47.435"/>
</kw>
<msg timestamp="20230919 02:20:47.435" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230919 02:20:39.191" endtime="20230919 02:20:47.435"/>
</kw>
<msg timestamp="20230919 02:20:47.435" level="INFO">${result} = Ozone Manager Prepare Request successfully returned with Transaction Id : [413].

Checking individual OM instances for prepare request completion...
OM : [om1], Prepare Status : [PREPARE_COMPLETED], C...</msg>
<status status="PASS" starttime="20230919 02:20:39.191" endtime="20230919 02:20:47.435"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>OM Preparation successful!</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>OM Preparation successful!</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230919 02:20:47.436" endtime="20230919 02:20:47.436"/>
</kw>
<status status="PASS" starttime="20230919 02:20:47.435" endtime="20230919 02:20:47.436"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230919 02:20:39.189" endtime="20230919 02:20:47.436"/>
</test>
<test id="s1-s1-t2" name="Checks if the expected data is present in OM" line="43">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230919 02:20:47.438" endtime="20230919 02:20:47.439"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info /${volume_name}/${bucket_name}/prepare-key</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230919 02:20:47.442" level="INFO">Running command 'ozone sh key info /49245-volume-for-prepare/49245-bucket-for-prepare/prepare-key 2&gt;&amp;1'.</msg>
<msg timestamp="20230919 02:20:50.692" level="INFO">${rc} = 0</msg>
<msg timestamp="20230919 02:20:50.692" level="INFO">${output} = {
  "volumeName" : "49245-volume-for-prepare",
  "bucketName" : "49245-bucket-for-prepare",
  "name" : "prepare-key",
  "dataSize" : 17289,
  "creationTime" : "2023-09-19T02:20:37.140Z",
  "modificati...</msg>
<status status="PASS" starttime="20230919 02:20:47.440" endtime="20230919 02:20:50.692"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230919 02:20:50.693" level="INFO">{
  "volumeName" : "49245-volume-for-prepare",
  "bucketName" : "49245-bucket-for-prepare",
  "name" : "prepare-key",
  "dataSize" : 17289,
  "creationTime" : "2023-09-19T02:20:37.140Z",
  "modificationTime" : "2023-09-19T02:20:38.798Z",
  "replicationConfig" : {
    "replicationFactor" : "ONE",
    "requiredNodes" : 1,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "ozoneKeyLocations" : [ {
    "containerID" : 3,
    "localID" : 111677748019200101,
    "length" : 17289,
    "offset" : 0,
    "keyOffset" : 0
  } ],
  "file" : true
}</msg>
<status status="PASS" starttime="20230919 02:20:50.693" endtime="20230919 02:20:50.693"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230919 02:20:50.694" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230919 02:20:50.693" endtime="20230919 02:20:50.694"/>
</kw>
<status status="PASS" starttime="20230919 02:20:47.440" endtime="20230919 02:20:50.694"/>
</kw>
<msg timestamp="20230919 02:20:50.694" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230919 02:20:47.439" endtime="20230919 02:20:50.694"/>
</kw>
<msg timestamp="20230919 02:20:50.695" level="INFO">${result} = {
  "volumeName" : "49245-volume-for-prepare",
  "bucketName" : "49245-bucket-for-prepare",
  "name" : "prepare-key",
  "dataSize" : 17289,
  "creationTime" : "2023-09-19T02:20:37.140Z",
  "modificati...</msg>
<status status="PASS" starttime="20230919 02:20:47.439" endtime="20230919 02:20:50.695"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"name\" : \"prepare-key\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230919 02:20:50.695" endtime="20230919 02:20:50.695"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230919 02:20:47.437" endtime="20230919 02:20:50.695"/>
</test>
<test id="s1-s1-t3" name="Test write operation fails" line="47">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230919 02:20:50.697" endtime="20230919 02:20:50.697"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh key put /${volume_name}/${bucket_name}/prepare-key2 /opt/hadoop/NOTICE.txt</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230919 02:20:50.701" level="INFO">Running command 'ozone sh key put /49245-volume-for-prepare/49245-bucket-for-prepare/prepare-key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230919 02:20:53.730" level="INFO">${rc} = 255</msg>
<msg timestamp="20230919 02:20:53.730" level="INFO">${output} = NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateKey when OM is in prepare mode.</msg>
<status status="PASS" starttime="20230919 02:20:50.698" endtime="20230919 02:20:53.730"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230919 02:20:53.732" level="INFO">NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateKey when OM is in prepare mode.</msg>
<status status="PASS" starttime="20230919 02:20:53.731" endtime="20230919 02:20:53.732"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230919 02:20:53.732" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230919 02:20:53.732" endtime="20230919 02:20:53.733"/>
</kw>
<msg timestamp="20230919 02:20:53.733" level="INFO">${result} = NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateKey when OM is in prepare mode.</msg>
<status status="PASS" starttime="20230919 02:20:50.698" endtime="20230919 02:20:53.733"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>OM is in prepare mode</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230919 02:20:53.733" endtime="20230919 02:20:53.734"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>ozone sh key info /${volume_name}/${bucket_name}/prepare-key2</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230919 02:20:53.737" level="INFO">Running command 'ozone sh key info /49245-volume-for-prepare/49245-bucket-for-prepare/prepare-key2 2&gt;&amp;1'.</msg>
<msg timestamp="20230919 02:20:56.743" level="INFO">${rc} = 255</msg>
<msg timestamp="20230919 02:20:56.743" level="INFO">${output} = KEY_NOT_FOUND Key:prepare-key2 not found</msg>
<status status="PASS" starttime="20230919 02:20:53.734" endtime="20230919 02:20:56.743"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230919 02:20:56.744" level="INFO">KEY_NOT_FOUND Key:prepare-key2 not found</msg>
<status status="PASS" starttime="20230919 02:20:56.744" endtime="20230919 02:20:56.745"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230919 02:20:56.745" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230919 02:20:56.745" endtime="20230919 02:20:56.745"/>
</kw>
<status status="PASS" starttime="20230919 02:20:53.734" endtime="20230919 02:20:56.745"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230919 02:20:50.696" endtime="20230919 02:20:56.746"/>
</test>
<doc>Smoke test to test preparing OMs in an OM HA cluster.</doc>
<status status="PASS" starttime="20230919 02:20:12.123" endtime="20230919 02:20:56.747"/>
</suite>
<suite id="s1-s2" name="Om-Cancel-Prepare" source="/opt/hadoop/smoketest/omha/om-cancel-prepare.robot">
<kw name="Generate volume and bucket names" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230919 02:20:59.216" level="INFO">${random} = 20466</msg>
<status status="PASS" starttime="20230919 02:20:59.215" endtime="20230919 02:20:59.216"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${volume_name}</arg>
<arg>${random}-volume-for-cancel</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230919 02:20:59.217" level="INFO">${volume_name} = 20466-volume-for-cancel</msg>
<status status="PASS" starttime="20230919 02:20:59.216" endtime="20230919 02:20:59.217"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${bucket_name}</arg>
<arg>${random}-bucket-for-cancel</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230919 02:20:59.219" level="INFO">${bucket_name} = 20466-bucket-for-cancel</msg>
<status status="PASS" starttime="20230919 02:20:59.218" endtime="20230919 02:20:59.219"/>
</kw>
<status status="PASS" starttime="20230919 02:20:59.215" endtime="20230919 02:20:59.219"/>
</kw>
<test id="s1-s2-t1" name="Cancel Ozone Manager Prepare" line="33">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230919 02:20:59.220" endtime="20230919 02:20:59.220"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om cancelprepare -id=omservice</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230919 02:20:59.224" level="INFO">Running command 'ozone admin om cancelprepare -id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20230919 02:21:02.354" level="INFO">${rc} = 0</msg>
<msg timestamp="20230919 02:21:02.354" level="INFO">${output} = Cancel prepare succeeded, cluster can now accept write requests.</msg>
<status status="PASS" starttime="20230919 02:20:59.221" endtime="20230919 02:21:02.355"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230919 02:21:02.356" level="INFO">Cancel prepare succeeded, cluster can now accept write requests.</msg>
<status status="PASS" starttime="20230919 02:21:02.355" endtime="20230919 02:21:02.356"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230919 02:21:02.356" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230919 02:21:02.356" endtime="20230919 02:21:02.357"/>
</kw>
<status status="PASS" starttime="20230919 02:20:59.221" endtime="20230919 02:21:02.357"/>
</kw>
<msg timestamp="20230919 02:21:02.357" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230919 02:20:59.220" endtime="20230919 02:21:02.358"/>
</kw>
<msg timestamp="20230919 02:21:02.358" level="INFO">${result} = Cancel prepare succeeded, cluster can now accept write requests.</msg>
<status status="PASS" starttime="20230919 02:20:59.220" endtime="20230919 02:21:02.358"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>5sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Cancel prepare succeeded</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Cancel prepare succeeded</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230919 02:21:02.360" endtime="20230919 02:21:02.360"/>
</kw>
<status status="PASS" starttime="20230919 02:21:02.358" endtime="20230919 02:21:02.360"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230919 02:20:59.219" endtime="20230919 02:21:02.361"/>
</test>
<test id="s1-s2-t2" name="Test write operations" line="37">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230919 02:21:02.362" endtime="20230919 02:21:02.362"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create /${volume_name}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230919 02:21:02.366" level="INFO">Running command 'ozone sh volume create /20466-volume-for-cancel 2&gt;&amp;1'.</msg>
<msg timestamp="20230919 02:21:05.290" level="INFO">${rc} = 0</msg>
<msg timestamp="20230919 02:21:05.290" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230919 02:21:02.364" endtime="20230919 02:21:05.290"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230919 02:21:05.291" level="INFO"/>
<status status="PASS" starttime="20230919 02:21:05.290" endtime="20230919 02:21:05.291"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230919 02:21:05.292" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230919 02:21:05.291" endtime="20230919 02:21:05.292"/>
</kw>
<status status="PASS" starttime="20230919 02:21:02.363" endtime="20230919 02:21:05.292"/>
</kw>
<msg timestamp="20230919 02:21:05.292" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230919 02:21:02.363" endtime="20230919 02:21:05.292"/>
</kw>
<status status="PASS" starttime="20230919 02:21:02.362" endtime="20230919 02:21:05.292"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create /${volume_name}/${bucket_name}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230919 02:21:05.296" level="INFO">Running command 'ozone sh bucket create /20466-volume-for-cancel/20466-bucket-for-cancel 2&gt;&amp;1'.</msg>
<msg timestamp="20230919 02:21:08.362" level="INFO">${rc} = 0</msg>
<msg timestamp="20230919 02:21:08.362" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230919 02:21:05.294" endtime="20230919 02:21:08.362"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230919 02:21:08.364" level="INFO"/>
<status status="PASS" starttime="20230919 02:21:08.363" endtime="20230919 02:21:08.364"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230919 02:21:08.364" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230919 02:21:08.364" endtime="20230919 02:21:08.364"/>
</kw>
<status status="PASS" starttime="20230919 02:21:05.293" endtime="20230919 02:21:08.364"/>
</kw>
<msg timestamp="20230919 02:21:08.365" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230919 02:21:05.293" endtime="20230919 02:21:08.365"/>
</kw>
<status status="PASS" starttime="20230919 02:21:05.292" endtime="20230919 02:21:08.365"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key put /${volume_name}/${bucket_name}/cancel-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230919 02:21:08.369" level="INFO">Running command 'ozone sh key put /20466-volume-for-cancel/20466-bucket-for-cancel/cancel-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230919 02:21:13.264" level="INFO">${rc} = 0</msg>
<msg timestamp="20230919 02:21:13.264" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230919 02:21:08.367" endtime="20230919 02:21:13.264"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230919 02:21:13.265" level="INFO"/>
<status status="PASS" starttime="20230919 02:21:13.264" endtime="20230919 02:21:13.265"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230919 02:21:13.266" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230919 02:21:13.265" endtime="20230919 02:21:13.266"/>
</kw>
<status status="PASS" starttime="20230919 02:21:08.366" endtime="20230919 02:21:13.266"/>
</kw>
<msg timestamp="20230919 02:21:13.266" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230919 02:21:08.366" endtime="20230919 02:21:13.266"/>
</kw>
<msg timestamp="20230919 02:21:13.266" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230919 02:21:08.365" endtime="20230919 02:21:13.266"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info /${volume_name}/${bucket_name}/cancel-key</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230919 02:21:13.270" level="INFO">Running command 'ozone sh key info /20466-volume-for-cancel/20466-bucket-for-cancel/cancel-key 2&gt;&amp;1'.</msg>
<msg timestamp="20230919 02:21:16.469" level="INFO">${rc} = 0</msg>
<msg timestamp="20230919 02:21:16.469" level="INFO">${output} = {
  "volumeName" : "20466-volume-for-cancel",
  "bucketName" : "20466-bucket-for-cancel",
  "name" : "cancel-key",
  "dataSize" : 17289,
  "creationTime" : "2023-09-19T02:21:11.042Z",
  "modificationT...</msg>
<status status="PASS" starttime="20230919 02:21:13.268" endtime="20230919 02:21:16.469"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230919 02:21:16.470" level="INFO">{
  "volumeName" : "20466-volume-for-cancel",
  "bucketName" : "20466-bucket-for-cancel",
  "name" : "cancel-key",
  "dataSize" : 17289,
  "creationTime" : "2023-09-19T02:21:11.042Z",
  "modificationTime" : "2023-09-19T02:21:12.865Z",
  "replicationConfig" : {
    "replicationFactor" : "ONE",
    "requiredNodes" : 1,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "ozoneKeyLocations" : [ {
    "containerID" : 3,
    "localID" : 111677748019200103,
    "length" : 17289,
    "offset" : 0,
    "keyOffset" : 0
  } ],
  "file" : true
}</msg>
<status status="PASS" starttime="20230919 02:21:16.469" endtime="20230919 02:21:16.470"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230919 02:21:16.471" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230919 02:21:16.471" endtime="20230919 02:21:16.471"/>
</kw>
<status status="PASS" starttime="20230919 02:21:13.267" endtime="20230919 02:21:16.471"/>
</kw>
<msg timestamp="20230919 02:21:16.471" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230919 02:21:13.267" endtime="20230919 02:21:16.471"/>
</kw>
<msg timestamp="20230919 02:21:16.472" level="INFO">${result} = {
  "volumeName" : "20466-volume-for-cancel",
  "bucketName" : "20466-bucket-for-cancel",
  "name" : "cancel-key",
  "dataSize" : 17289,
  "creationTime" : "2023-09-19T02:21:11.042Z",
  "modificationT...</msg>
<status status="PASS" starttime="20230919 02:21:13.267" endtime="20230919 02:21:16.472"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"name\" : \"cancel-key\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230919 02:21:16.472" endtime="20230919 02:21:16.472"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230919 02:21:02.361" endtime="20230919 02:21:16.472"/>
</test>
<doc>Smoke test for ozone manager cancel prepare</doc>
<status status="PASS" starttime="20230919 02:20:59.167" endtime="20230919 02:21:16.474"/>
</suite>
<suite id="s1-s3" name="Om-Prepare" source="/opt/hadoop/smoketest/omha/om-prepare.robot">
<kw name="Create Specific OM data for prepare" type="SETUP">
<kw name="Freon OCKG" library="freon">
<arg>prefix=om-prepare</arg>
<arg>n=100</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230919 02:21:18.955" level="INFO">Running command 'ozone freon ockg --om-service-id=omservice -t 1 -n100 -p om-prepare  2&gt;&amp;1'.</msg>
<msg timestamp="20230919 02:21:31.027" level="INFO">${rc} = 0</msg>
<msg timestamp="20230919 02:21:31.027" level="INFO">${output} = 2023-09-19 02:21:20,613 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-19 02:21:20,762 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230919 02:21:18.952" endtime="20230919 02:21:31.027"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230919 02:21:31.028" level="INFO">2023-09-19 02:21:20,613 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-19 02:21:20,762 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-09-19 02:21:20,762 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-09-19 02:21:20,858 [main] INFO freon.BaseFreonGenerator: Executing test with prefix om-prepare and number-of-tests 100
2023-09-19 02:21:20,912 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2023-09-19 02:21:21,917 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2023-09-19 02:21:22,435 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2023-09-19 02:21:22,769 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2023-09-19 02:21:22,939 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2023-09-19 02:21:23,941 [Thread-3] INFO freon.ProgressBar: Progress: 6.00 % (6 out of 100)
2023-09-19 02:21:24,942 [Thread-3] INFO freon.ProgressBar: Progress: 20.00 % (20 out of 100)
2023-09-19 02:21:25,946 [Thread-3] INFO freon.ProgressBar: Progress: 34.00 % (34 out of 100)
2023-09-19 02:21:26,984 [Thread-3] INFO freon.ProgressBar: Progress: 51.00 % (51 out of 100)
2023-09-19 02:21:27,987 [Thread-3] INFO freon.ProgressBar: Progress: 69.00 % (69 out of 100)
2023-09-19 02:21:28,987 [Thread-3] INFO freon.ProgressBar: Progress: 86.00 % (86 out of 100)
2023-09-19 02:21:29,988 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (100 out of 100)
2023-09-19 02:21:30,668 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=100, min=41.88417, max=1867.060014, mean=79.97142255113711, stddev=175.69372269135178, median=59.164915, p75=67.853676, p95=95.180568, p98=103.150665, p99=121.795455, p999=1867.060014, mean_rate=11.030634699948637, m1=9.0, m5=9.0, m15=9.0, rate_unit=events/second, duration_unit=milliseconds
2023-09-19 02:21:30,669 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 10
2023-09-19 02:21:30,669 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-09-19 02:21:30,669 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 100</msg>
<status status="PASS" starttime="20230919 02:21:31.027" endtime="20230919 02:21:31.028"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230919 02:21:31.028" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230919 02:21:31.028" endtime="20230919 02:21:31.028"/>
</kw>
<status status="PASS" starttime="20230919 02:21:18.952" endtime="20230919 02:21:31.029"/>
</kw>
<msg timestamp="20230919 02:21:31.029" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230919 02:21:18.952" endtime="20230919 02:21:31.029"/>
</kw>
<msg timestamp="20230919 02:21:31.029" level="INFO">${result} = 2023-09-19 02:21:20,613 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-19 02:21:20,762 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230919 02:21:18.951" endtime="20230919 02:21:31.029"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230919 02:21:31.029" endtime="20230919 02:21:31.030"/>
</kw>
<status status="PASS" starttime="20230919 02:21:18.950" endtime="20230919 02:21:31.030"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230919 02:21:31.030" level="INFO">${random} = 30940</msg>
<status status="PASS" starttime="20230919 02:21:31.030" endtime="20230919 02:21:31.030"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${volume_name}</arg>
<arg>${random}-volume-for-prepare</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230919 02:21:31.032" level="INFO">${volume_name} = 30940-volume-for-prepare</msg>
<status status="PASS" starttime="20230919 02:21:31.031" endtime="20230919 02:21:31.032"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${bucket_name}</arg>
<arg>${random}-bucket-for-prepare</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230919 02:21:31.033" level="INFO">${bucket_name} = 30940-bucket-for-prepare</msg>
<status status="PASS" starttime="20230919 02:21:31.032" endtime="20230919 02:21:31.033"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create /${volume_name}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230919 02:21:31.037" level="INFO">Running command 'ozone sh volume create /30940-volume-for-prepare 2&gt;&amp;1'.</msg>
<msg timestamp="20230919 02:21:34.092" level="INFO">${rc} = 0</msg>
<msg timestamp="20230919 02:21:34.093" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230919 02:21:31.035" endtime="20230919 02:21:34.093"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230919 02:21:34.094" level="INFO"/>
<status status="PASS" starttime="20230919 02:21:34.093" endtime="20230919 02:21:34.094"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230919 02:21:34.094" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230919 02:21:34.094" endtime="20230919 02:21:34.095"/>
</kw>
<status status="PASS" starttime="20230919 02:21:31.035" endtime="20230919 02:21:34.095"/>
</kw>
<msg timestamp="20230919 02:21:34.095" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230919 02:21:31.034" endtime="20230919 02:21:34.095"/>
</kw>
<status status="PASS" starttime="20230919 02:21:31.034" endtime="20230919 02:21:34.095"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create /${volume_name}/${bucket_name}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230919 02:21:34.099" level="INFO">Running command 'ozone sh bucket create /30940-volume-for-prepare/30940-bucket-for-prepare 2&gt;&amp;1'.</msg>
<msg timestamp="20230919 02:21:36.807" level="INFO">${rc} = 0</msg>
<msg timestamp="20230919 02:21:36.807" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230919 02:21:34.096" endtime="20230919 02:21:36.807"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230919 02:21:36.808" level="INFO"/>
<status status="PASS" starttime="20230919 02:21:36.807" endtime="20230919 02:21:36.808"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230919 02:21:36.808" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230919 02:21:36.808" endtime="20230919 02:21:36.808"/>
</kw>
<status status="PASS" starttime="20230919 02:21:34.096" endtime="20230919 02:21:36.809"/>
</kw>
<msg timestamp="20230919 02:21:36.809" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230919 02:21:34.096" endtime="20230919 02:21:36.809"/>
</kw>
<status status="PASS" starttime="20230919 02:21:34.095" endtime="20230919 02:21:36.809"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put /${volume_name}/${bucket_name}/prepare-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230919 02:21:36.813" level="INFO">Running command 'ozone sh key put /30940-volume-for-prepare/30940-bucket-for-prepare/prepare-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230919 02:21:41.724" level="INFO">${rc} = 0</msg>
<msg timestamp="20230919 02:21:41.724" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230919 02:21:36.810" endtime="20230919 02:21:41.724"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230919 02:21:41.725" level="INFO"/>
<status status="PASS" starttime="20230919 02:21:41.724" endtime="20230919 02:21:41.725"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230919 02:21:41.725" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230919 02:21:41.725" endtime="20230919 02:21:41.725"/>
</kw>
<status status="PASS" starttime="20230919 02:21:36.810" endtime="20230919 02:21:41.726"/>
</kw>
<msg timestamp="20230919 02:21:41.726" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230919 02:21:36.809" endtime="20230919 02:21:41.726"/>
</kw>
<status status="PASS" starttime="20230919 02:21:36.809" endtime="20230919 02:21:41.726"/>
</kw>
<status status="PASS" starttime="20230919 02:21:18.950" endtime="20230919 02:21:41.726"/>
</kw>
<test id="s1-s3-t1" name="Prepare Ozone Manager" line="39">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230919 02:21:41.728" endtime="20230919 02:21:41.728"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om prepare -id=omservice</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230919 02:21:41.732" level="INFO">Running command 'ozone admin om prepare -id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20230919 02:21:50.124" level="INFO">${rc} = 0</msg>
<msg timestamp="20230919 02:21:50.124" level="INFO">${output} = Ozone Manager Prepare Request successfully returned with Transaction Id : [833].

Checking individual OM instances for prepare request completion...
OM : [om1], Prepare Status : [PREPARE_COMPLETED], C...</msg>
<status status="PASS" starttime="20230919 02:21:41.730" endtime="20230919 02:21:50.124"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230919 02:21:50.125" level="INFO">Ozone Manager Prepare Request successfully returned with Transaction Id : [833].

Checking individual OM instances for prepare request completion...
OM : [om1], Prepare Status : [PREPARE_COMPLETED], Current Transaction Id : [833]
OM : [om3], Prepare Status : [PREPARE_COMPLETED], Current Transaction Id : [833]
OM : [om2], Prepare Status : [PREPARE_COMPLETED], Current Transaction Id : [833]

OM Preparation successful! 
All OMs are prepared
No new write requests will be allowed until preparation is cancelled or upgrade/downgrade is done.</msg>
<status status="PASS" starttime="20230919 02:21:50.124" endtime="20230919 02:21:50.125"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230919 02:21:50.126" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230919 02:21:50.125" endtime="20230919 02:21:50.126"/>
</kw>
<status status="PASS" starttime="20230919 02:21:41.729" endtime="20230919 02:21:50.126"/>
</kw>
<msg timestamp="20230919 02:21:50.126" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230919 02:21:41.729" endtime="20230919 02:21:50.126"/>
</kw>
<msg timestamp="20230919 02:21:50.127" level="INFO">${result} = Ozone Manager Prepare Request successfully returned with Transaction Id : [833].

Checking individual OM instances for prepare request completion...
OM : [om1], Prepare Status : [PREPARE_COMPLETED], C...</msg>
<status status="PASS" starttime="20230919 02:21:41.728" endtime="20230919 02:21:50.127"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>OM Preparation successful!</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>OM Preparation successful!</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230919 02:21:50.127" endtime="20230919 02:21:50.128"/>
</kw>
<status status="PASS" starttime="20230919 02:21:50.127" endtime="20230919 02:21:50.128"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230919 02:21:41.726" endtime="20230919 02:21:50.128"/>
</test>
<test id="s1-s3-t2" name="Checks if the expected data is present in OM" line="43">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230919 02:21:50.130" endtime="20230919 02:21:50.130"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info /${volume_name}/${bucket_name}/prepare-key</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230919 02:21:50.134" level="INFO">Running command 'ozone sh key info /30940-volume-for-prepare/30940-bucket-for-prepare/prepare-key 2&gt;&amp;1'.</msg>
<msg timestamp="20230919 02:21:53.154" level="INFO">${rc} = 0</msg>
<msg timestamp="20230919 02:21:53.154" level="INFO">${output} = {
  "volumeName" : "30940-volume-for-prepare",
  "bucketName" : "30940-bucket-for-prepare",
  "name" : "prepare-key",
  "dataSize" : 17289,
  "creationTime" : "2023-09-19T02:21:39.593Z",
  "modificati...</msg>
<status status="PASS" starttime="20230919 02:21:50.132" endtime="20230919 02:21:53.154"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230919 02:21:53.155" level="INFO">{
  "volumeName" : "30940-volume-for-prepare",
  "bucketName" : "30940-bucket-for-prepare",
  "name" : "prepare-key",
  "dataSize" : 17289,
  "creationTime" : "2023-09-19T02:21:39.593Z",
  "modificationTime" : "2023-09-19T02:21:41.351Z",
  "replicationConfig" : {
    "replicationFactor" : "ONE",
    "requiredNodes" : 1,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "ozoneKeyLocations" : [ {
    "containerID" : 6,
    "localID" : 111677748019200204,
    "length" : 17289,
    "offset" : 0,
    "keyOffset" : 0
  } ],
  "file" : true
}</msg>
<status status="PASS" starttime="20230919 02:21:53.154" endtime="20230919 02:21:53.155"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230919 02:21:53.156" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230919 02:21:53.155" endtime="20230919 02:21:53.156"/>
</kw>
<status status="PASS" starttime="20230919 02:21:50.131" endtime="20230919 02:21:53.156"/>
</kw>
<msg timestamp="20230919 02:21:53.156" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230919 02:21:50.131" endtime="20230919 02:21:53.156"/>
</kw>
<msg timestamp="20230919 02:21:53.156" level="INFO">${result} = {
  "volumeName" : "30940-volume-for-prepare",
  "bucketName" : "30940-bucket-for-prepare",
  "name" : "prepare-key",
  "dataSize" : 17289,
  "creationTime" : "2023-09-19T02:21:39.593Z",
  "modificati...</msg>
<status status="PASS" starttime="20230919 02:21:50.130" endtime="20230919 02:21:53.156"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"name\" : \"prepare-key\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230919 02:21:53.157" endtime="20230919 02:21:53.157"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230919 02:21:50.129" endtime="20230919 02:21:53.157"/>
</test>
<test id="s1-s3-t3" name="Test write operation fails" line="47">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230919 02:21:53.159" endtime="20230919 02:21:53.160"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh key put /${volume_name}/${bucket_name}/prepare-key2 /opt/hadoop/NOTICE.txt</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230919 02:21:53.163" level="INFO">Running command 'ozone sh key put /30940-volume-for-prepare/30940-bucket-for-prepare/prepare-key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230919 02:21:55.778" level="INFO">${rc} = 255</msg>
<msg timestamp="20230919 02:21:55.778" level="INFO">${output} = NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateKey when OM is in prepare mode.</msg>
<status status="PASS" starttime="20230919 02:21:53.160" endtime="20230919 02:21:55.779"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230919 02:21:55.780" level="INFO">NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateKey when OM is in prepare mode.</msg>
<status status="PASS" starttime="20230919 02:21:55.779" endtime="20230919 02:21:55.780"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230919 02:21:55.780" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230919 02:21:55.780" endtime="20230919 02:21:55.781"/>
</kw>
<msg timestamp="20230919 02:21:55.781" level="INFO">${result} = NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateKey when OM is in prepare mode.</msg>
<status status="PASS" starttime="20230919 02:21:53.160" endtime="20230919 02:21:55.781"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>OM is in prepare mode</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230919 02:21:55.781" endtime="20230919 02:21:55.781"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>ozone sh key info /${volume_name}/${bucket_name}/prepare-key2</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230919 02:21:55.785" level="INFO">Running command 'ozone sh key info /30940-volume-for-prepare/30940-bucket-for-prepare/prepare-key2 2&gt;&amp;1'.</msg>
<msg timestamp="20230919 02:21:58.575" level="INFO">${rc} = 255</msg>
<msg timestamp="20230919 02:21:58.575" level="INFO">${output} = KEY_NOT_FOUND Key:prepare-key2 not found</msg>
<status status="PASS" starttime="20230919 02:21:55.782" endtime="20230919 02:21:58.575"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230919 02:21:58.577" level="INFO">KEY_NOT_FOUND Key:prepare-key2 not found</msg>
<status status="PASS" starttime="20230919 02:21:58.576" endtime="20230919 02:21:58.577"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230919 02:21:58.577" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230919 02:21:58.577" endtime="20230919 02:21:58.578"/>
</kw>
<status status="PASS" starttime="20230919 02:21:55.782" endtime="20230919 02:21:58.578"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230919 02:21:53.158" endtime="20230919 02:21:58.578"/>
</test>
<doc>Smoke test to test preparing OMs in an OM HA cluster.</doc>
<status status="PASS" starttime="20230919 02:21:18.894" endtime="20230919 02:21:58.580"/>
</suite>
<suite id="s1-s4" name="Om-Prepared" source="/opt/hadoop/smoketest/omha/om-prepared.robot">
<test id="s1-s4-t1" name="Test create volume fails" line="26">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230919 02:22:01.084" endtime="20230919 02:22:01.084"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230919 02:22:01.085" level="INFO">${random} = 53139</msg>
<status status="PASS" starttime="20230919 02:22:01.085" endtime="20230919 02:22:01.085"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${volume_name}</arg>
<arg>${random}-volume-for-prepare</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230919 02:22:01.087" level="INFO">${volume_name} = 53139-volume-for-prepare</msg>
<status status="PASS" starttime="20230919 02:22:01.086" endtime="20230919 02:22:01.087"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh volume create /${volume_name}</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230919 02:22:01.090" level="INFO">Running command 'ozone sh volume create /53139-volume-for-prepare 2&gt;&amp;1'.</msg>
<msg timestamp="20230919 02:22:04.286" level="INFO">${rc} = 255</msg>
<msg timestamp="20230919 02:22:04.286" level="INFO">${output} = NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateVolume when OM is in prepare mode.</msg>
<status status="PASS" starttime="20230919 02:22:01.087" endtime="20230919 02:22:04.286"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230919 02:22:04.287" level="INFO">NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateVolume when OM is in prepare mode.</msg>
<status status="PASS" starttime="20230919 02:22:04.287" endtime="20230919 02:22:04.287"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230919 02:22:04.288" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230919 02:22:04.287" endtime="20230919 02:22:04.288"/>
</kw>
<msg timestamp="20230919 02:22:04.288" level="INFO">${result} = NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateVolume when OM is in prepare mode.</msg>
<status status="PASS" starttime="20230919 02:22:01.087" endtime="20230919 02:22:04.288"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>OM is in prepare mode</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230919 02:22:04.288" endtime="20230919 02:22:04.289"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh volume info /${volume_name}</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230919 02:22:04.292" level="INFO">Running command 'ozone sh volume info /53139-volume-for-prepare 2&gt;&amp;1'.</msg>
<msg timestamp="20230919 02:22:06.937" level="INFO">${rc} = 255</msg>
<msg timestamp="20230919 02:22:06.937" level="INFO">${output} = VOLUME_NOT_FOUND Volume 53139-volume-for-prepare is not found</msg>
<status status="PASS" starttime="20230919 02:22:04.289" endtime="20230919 02:22:06.937"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230919 02:22:06.939" level="INFO">VOLUME_NOT_FOUND Volume 53139-volume-for-prepare is not found</msg>
<status status="PASS" starttime="20230919 02:22:06.938" endtime="20230919 02:22:06.939"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230919 02:22:06.939" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230919 02:22:06.939" endtime="20230919 02:22:06.939"/>
</kw>
<msg timestamp="20230919 02:22:06.939" level="INFO">${result} = VOLUME_NOT_FOUND Volume 53139-volume-for-prepare is not found</msg>
<status status="PASS" starttime="20230919 02:22:04.289" endtime="20230919 02:22:06.940"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230919 02:22:06.940" endtime="20230919 02:22:06.940"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230919 02:22:01.083" endtime="20230919 02:22:06.940"/>
</test>
<test id="s1-s4-t2" name="Test list volumes succeeds" line="34">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230919 02:22:06.942" endtime="20230919 02:22:06.942"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230919 02:22:06.946" level="INFO">Running command 'ozone sh volume list 2&gt;&amp;1'.</msg>
<msg timestamp="20230919 02:22:10.124" level="INFO">${rc} = 0</msg>
<msg timestamp="20230919 02:22:10.124" level="INFO">${output} = [ {
  "metadata" : { },
  "name" : "49245-volume-for-prepare",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "...</msg>
<status status="PASS" starttime="20230919 02:22:06.944" endtime="20230919 02:22:10.124"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230919 02:22:10.125" level="INFO">[ {
  "metadata" : { },
  "name" : "49245-volume-for-prepare",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2023-09-19T02:20:31.335Z",
  "modificationTime" : "2023-09-19T02:20:31.335Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "s3v",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 0,
  "creationTime" : "2023-09-19T02:19:44.732Z",
  "modificationTime" : "2023-09-19T02:19:44.732Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "20466-volume-for-cancel",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2023-09-19T02:21:05.252Z",
  "modificationTime" : "2023-09-19T02:21:05.252Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "vol1",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2023-09-19T02:20:15.111Z",
  "modificationTime" : "2023-09-19T02:20:15.111Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "30940-volume-for-prepare",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2023-09-19T02:21:34.051Z",
  "modificationTime" : "2023-09-19T02:21:34.051Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "refCount" : 0
} ]</msg>
<status status="PASS" starttime="20230919 02:22:10.124" endtime="20230919 02:22:10.125"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230919 02:22:10.126" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230919 02:22:10.126" endtime="20230919 02:22:10.126"/>
</kw>
<status status="PASS" starttime="20230919 02:22:06.943" endtime="20230919 02:22:10.126"/>
</kw>
<msg timestamp="20230919 02:22:10.126" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230919 02:22:06.943" endtime="20230919 02:22:10.126"/>
</kw>
<msg timestamp="20230919 02:22:10.127" level="INFO">${result} = [ {
  "metadata" : { },
  "name" : "49245-volume-for-prepare",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "...</msg>
<status status="PASS" starttime="20230919 02:22:06.943" endtime="20230919 02:22:10.127"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230919 02:22:06.941" endtime="20230919 02:22:10.127"/>
</test>
<doc>Smoke test to test that OMs are prepared in an OM HA cluster.</doc>
<status status="PASS" starttime="20230919 02:22:01.035" endtime="20230919 02:22:10.128"/>
</suite>
<suite id="s1-s5" name="Om-Prepared" source="/opt/hadoop/smoketest/omha/om-prepared.robot">
<test id="s1-s5-t1" name="Test create volume fails" line="26">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230919 02:23:35.034" endtime="20230919 02:23:35.035"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230919 02:23:35.035" level="INFO">${random} = 43425</msg>
<status status="PASS" starttime="20230919 02:23:35.035" endtime="20230919 02:23:35.035"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${volume_name}</arg>
<arg>${random}-volume-for-prepare</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230919 02:23:35.037" level="INFO">${volume_name} = 43425-volume-for-prepare</msg>
<status status="PASS" starttime="20230919 02:23:35.036" endtime="20230919 02:23:35.037"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh volume create /${volume_name}</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230919 02:23:35.040" level="INFO">Running command 'ozone sh volume create /43425-volume-for-prepare 2&gt;&amp;1'.</msg>
<msg timestamp="20230919 02:23:37.873" level="INFO">${rc} = 255</msg>
<msg timestamp="20230919 02:23:37.873" level="INFO">${output} = NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateVolume when OM is in prepare mode.</msg>
<status status="PASS" starttime="20230919 02:23:35.037" endtime="20230919 02:23:37.873"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230919 02:23:37.874" level="INFO">NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateVolume when OM is in prepare mode.</msg>
<status status="PASS" starttime="20230919 02:23:37.874" endtime="20230919 02:23:37.875"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230919 02:23:37.875" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230919 02:23:37.875" endtime="20230919 02:23:37.875"/>
</kw>
<msg timestamp="20230919 02:23:37.875" level="INFO">${result} = NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateVolume when OM is in prepare mode.</msg>
<status status="PASS" starttime="20230919 02:23:35.037" endtime="20230919 02:23:37.875"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>OM is in prepare mode</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230919 02:23:37.876" endtime="20230919 02:23:37.876"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh volume info /${volume_name}</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230919 02:23:37.879" level="INFO">Running command 'ozone sh volume info /43425-volume-for-prepare 2&gt;&amp;1'.</msg>
<msg timestamp="20230919 02:23:41.032" level="INFO">${rc} = 255</msg>
<msg timestamp="20230919 02:23:41.032" level="INFO">${output} = VOLUME_NOT_FOUND Volume 43425-volume-for-prepare is not found</msg>
<status status="PASS" starttime="20230919 02:23:37.877" endtime="20230919 02:23:41.032"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230919 02:23:41.033" level="INFO">VOLUME_NOT_FOUND Volume 43425-volume-for-prepare is not found</msg>
<status status="PASS" starttime="20230919 02:23:41.033" endtime="20230919 02:23:41.034"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230919 02:23:41.034" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230919 02:23:41.034" endtime="20230919 02:23:41.034"/>
</kw>
<msg timestamp="20230919 02:23:41.034" level="INFO">${result} = VOLUME_NOT_FOUND Volume 43425-volume-for-prepare is not found</msg>
<status status="PASS" starttime="20230919 02:23:37.876" endtime="20230919 02:23:41.034"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230919 02:23:41.035" endtime="20230919 02:23:41.035"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230919 02:23:35.033" endtime="20230919 02:23:41.035"/>
</test>
<test id="s1-s5-t2" name="Test list volumes succeeds" line="34">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230919 02:23:41.037" endtime="20230919 02:23:41.037"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230919 02:23:41.041" level="INFO">Running command 'ozone sh volume list 2&gt;&amp;1'.</msg>
<msg timestamp="20230919 02:23:44.534" level="INFO">${rc} = 0</msg>
<msg timestamp="20230919 02:23:44.534" level="INFO">${output} = [ {
  "metadata" : { },
  "name" : "49245-volume-for-prepare",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "...</msg>
<status status="PASS" starttime="20230919 02:23:41.039" endtime="20230919 02:23:44.534"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230919 02:23:44.536" level="INFO">[ {
  "metadata" : { },
  "name" : "49245-volume-for-prepare",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2023-09-19T02:20:31.335Z",
  "modificationTime" : "2023-09-19T02:20:31.335Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "s3v",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 0,
  "creationTime" : "2023-09-19T02:19:45.696Z",
  "modificationTime" : "2023-09-19T02:19:45.696Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "20466-volume-for-cancel",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2023-09-19T02:21:05.252Z",
  "modificationTime" : "2023-09-19T02:21:05.252Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "vol1",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2023-09-19T02:20:15.111Z",
  "modificationTime" : "2023-09-19T02:20:15.111Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "30940-volume-for-prepare",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2023-09-19T02:21:34.051Z",
  "modificationTime" : "2023-09-19T02:21:34.051Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "refCount" : 0
} ]</msg>
<status status="PASS" starttime="20230919 02:23:44.535" endtime="20230919 02:23:44.536"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230919 02:23:44.536" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230919 02:23:44.536" endtime="20230919 02:23:44.537"/>
</kw>
<status status="PASS" starttime="20230919 02:23:41.038" endtime="20230919 02:23:44.537"/>
</kw>
<msg timestamp="20230919 02:23:44.537" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230919 02:23:41.038" endtime="20230919 02:23:44.537"/>
</kw>
<msg timestamp="20230919 02:23:44.537" level="INFO">${result} = [ {
  "metadata" : { },
  "name" : "49245-volume-for-prepare",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "...</msg>
<status status="PASS" starttime="20230919 02:23:41.037" endtime="20230919 02:23:44.537"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230919 02:23:41.036" endtime="20230919 02:23:44.537"/>
</test>
<doc>Smoke test to test that OMs are prepared in an OM HA cluster.</doc>
<status status="PASS" starttime="20230919 02:23:34.986" endtime="20230919 02:23:44.539"/>
</suite>
<suite id="s1-s6" name="Loaddata" source="/opt/hadoop/smoketest/topology/loaddata.robot">
<test id="s1-s6-t1" name="Create a volume, bucket and key" line="27">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create topvol1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230919 02:25:09.166" level="INFO">Running command 'ozone sh volume create topvol1 2&gt;&amp;1'.</msg>
<msg timestamp="20230919 02:25:12.361" level="INFO">${rc} = 0</msg>
<msg timestamp="20230919 02:25:12.361" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230919 02:25:09.163" endtime="20230919 02:25:12.362"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230919 02:25:12.365" level="INFO"/>
<status status="PASS" starttime="20230919 02:25:12.364" endtime="20230919 02:25:12.365"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230919 02:25:12.365" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230919 02:25:12.365" endtime="20230919 02:25:12.366"/>
</kw>
<status status="PASS" starttime="20230919 02:25:09.163" endtime="20230919 02:25:12.366"/>
</kw>
<msg timestamp="20230919 02:25:12.366" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230919 02:25:09.163" endtime="20230919 02:25:12.366"/>
</kw>
<msg timestamp="20230919 02:25:12.366" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230919 02:25:09.162" endtime="20230919 02:25:12.366"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230919 02:25:12.366" endtime="20230919 02:25:12.367"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /topvol1/bucket1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230919 02:25:12.390" level="INFO">Running command 'ozone sh bucket create /topvol1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20230919 02:25:15.734" level="INFO">${rc} = 0</msg>
<msg timestamp="20230919 02:25:15.734" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230919 02:25:12.386" endtime="20230919 02:25:15.734"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230919 02:25:15.735" level="INFO"/>
<status status="PASS" starttime="20230919 02:25:15.734" endtime="20230919 02:25:15.735"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230919 02:25:15.736" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230919 02:25:15.735" endtime="20230919 02:25:15.736"/>
</kw>
<status status="PASS" starttime="20230919 02:25:12.368" endtime="20230919 02:25:15.736"/>
</kw>
<msg timestamp="20230919 02:25:15.736" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230919 02:25:12.367" endtime="20230919 02:25:15.736"/>
</kw>
<msg timestamp="20230919 02:25:15.736" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230919 02:25:12.367" endtime="20230919 02:25:15.736"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230919 02:25:15.736" endtime="20230919 02:25:15.737"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /topvol1/bucket1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230919 02:25:15.742" level="INFO">Running command 'ozone sh key put /topvol1/bucket1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230919 02:25:21.802" level="INFO">${rc} = 0</msg>
<msg timestamp="20230919 02:25:21.802" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230919 02:25:15.740" endtime="20230919 02:25:21.802"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230919 02:25:21.803" level="INFO"/>
<status status="PASS" starttime="20230919 02:25:21.802" endtime="20230919 02:25:21.803"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230919 02:25:21.804" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230919 02:25:21.803" endtime="20230919 02:25:21.804"/>
</kw>
<status status="PASS" starttime="20230919 02:25:15.739" endtime="20230919 02:25:21.804"/>
</kw>
<msg timestamp="20230919 02:25:21.804" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230919 02:25:15.739" endtime="20230919 02:25:21.804"/>
</kw>
<msg timestamp="20230919 02:25:21.804" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230919 02:25:15.737" endtime="20230919 02:25:21.804"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230919 02:25:21.804" endtime="20230919 02:25:21.805"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230919 02:25:09.161" endtime="20230919 02:25:21.805"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20230919 02:25:09.113" endtime="20230919 02:25:21.806"/>
</suite>
<suite id="s1-s7" name="Readdata" source="/opt/hadoop/smoketest/topology/readdata.robot">
<test id="s1-s7-t1" name="Read data from previously created key" line="27">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230919 02:25:24.462" level="INFO">${random} = 44294</msg>
<status status="PASS" starttime="20230919 02:25:24.462" endtime="20230919 02:25:24.462"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /topvol1/bucket1/key1 /tmp/key1-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230919 02:25:24.466" level="INFO">Running command 'ozone sh key get /topvol1/bucket1/key1 /tmp/key1-44294 2&gt;&amp;1'.</msg>
<msg timestamp="20230919 02:25:29.575" level="INFO">${rc} = 0</msg>
<msg timestamp="20230919 02:25:29.575" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230919 02:25:24.464" endtime="20230919 02:25:29.576"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230919 02:25:29.577" level="INFO"/>
<status status="PASS" starttime="20230919 02:25:29.576" endtime="20230919 02:25:29.577"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230919 02:25:29.577" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230919 02:25:29.577" endtime="20230919 02:25:29.577"/>
</kw>
<status status="PASS" starttime="20230919 02:25:24.463" endtime="20230919 02:25:29.578"/>
</kw>
<msg timestamp="20230919 02:25:29.578" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230919 02:25:24.463" endtime="20230919 02:25:29.578"/>
</kw>
<msg timestamp="20230919 02:25:29.578" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230919 02:25:24.462" endtime="20230919 02:25:29.578"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230919 02:25:29.578" endtime="20230919 02:25:29.579"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230919 02:25:24.461" endtime="20230919 02:25:29.579"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20230919 02:25:24.412" endtime="20230919 02:25:29.580"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="138124"/>
</suite>
<statistics>
<total>
<stat pass="14" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="14" fail="0" skip="0" id="s1" name="ozone-om-prepare">ozone-om-prepare</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1" name="Om-Prepare">ozone-om-prepare.Om-Prepare</stat>
<stat pass="2" fail="0" skip="0" id="s1-s2" name="Om-Cancel-Prepare">ozone-om-prepare.Om-Cancel-Prepare</stat>
<stat pass="3" fail="0" skip="0" id="s1-s3" name="Om-Prepare">ozone-om-prepare.Om-Prepare</stat>
<stat pass="2" fail="0" skip="0" id="s1-s4" name="Om-Prepared">ozone-om-prepare.Om-Prepared</stat>
<stat pass="2" fail="0" skip="0" id="s1-s5" name="Om-Prepared">ozone-om-prepare.Om-Prepared</stat>
<stat pass="1" fail="0" skip="0" id="s1-s6" name="Loaddata">ozone-om-prepare.Loaddata</stat>
<stat pass="1" fail="0" skip="0" id="s1-s7" name="Readdata">ozone-om-prepare.Readdata</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
