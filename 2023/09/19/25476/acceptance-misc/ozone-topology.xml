<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 6.1.1 (Python 3.8.10 on linux)" generated="20230919 02:32:14.797" rpa="false" schemaversion="4">
<suite id="s1" name="ozone-topology">
<suite id="s1-s1" name="Basic" source="/opt/hadoop/smoketest/basic/basic.robot">
<test id="s1-s1-t1" name="Check webui static resources" line="29">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230919 02:27:18.367" endtime="20230919 02:27:18.370"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -s -I http://${SCM}:9876/static/bootstrap-3.4.1/js/bootstrap.min.js</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230919 02:27:18.388" level="INFO">Running command 'curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js 2&gt;&amp;1'.</msg>
<msg timestamp="20230919 02:27:18.641" level="INFO">${rc} = 0</msg>
<msg timestamp="20230919 02:27:18.641" level="INFO">${output} = HTTP/1.1 200 OK
Date: Tue, 19 Sep 2023 02:27:18 GMT
X-Content-Type-Options: nosniff
X-XSS-Protection: 1; mode=block
X-FRAME-OPTIONS: SAMEORIGIN
Last-Modified: Tue, 19 Sep 2023 01:47:24 GMT
Content-Typ...</msg>
<status status="PASS" starttime="20230919 02:27:18.375" endtime="20230919 02:27:18.642"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230919 02:27:18.643" level="INFO">HTTP/1.1 200 OK
Date: Tue, 19 Sep 2023 02:27:18 GMT
X-Content-Type-Options: nosniff
X-XSS-Protection: 1; mode=block
X-FRAME-OPTIONS: SAMEORIGIN
Last-Modified: Tue, 19 Sep 2023 01:47:24 GMT
Content-Type: application/javascript
Accept-Ranges: bytes
Content-Length: 39680
</msg>
<status status="PASS" starttime="20230919 02:27:18.643" endtime="20230919 02:27:18.644"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230919 02:27:18.645" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230919 02:27:18.644" endtime="20230919 02:27:18.646"/>
</kw>
<status status="PASS" starttime="20230919 02:27:18.375" endtime="20230919 02:27:18.646"/>
</kw>
<msg timestamp="20230919 02:27:18.646" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230919 02:27:18.374" endtime="20230919 02:27:18.646"/>
</kw>
<msg timestamp="20230919 02:27:18.647" level="INFO">${result} = HTTP/1.1 200 OK
Date: Tue, 19 Sep 2023 02:27:18 GMT
X-Content-Type-Options: nosniff
X-XSS-Protection: 1; mode=block
X-FRAME-OPTIONS: SAMEORIGIN
Last-Modified: Tue, 19 Sep 2023 01:47:24 GMT
Content-Typ...</msg>
<status status="PASS" starttime="20230919 02:27:18.370" endtime="20230919 02:27:18.647"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230919 02:27:18.647" endtime="20230919 02:27:18.648"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230919 02:27:18.363" endtime="20230919 02:27:18.649"/>
</test>
<test id="s1-s1-t2" name="Basic Freon smoketest" line="34">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230919 02:27:18.650" endtime="20230919 02:27:18.653"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>10</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230919 02:27:18.654" level="INFO">${random} = WbzdFHiVYP</msg>
<status status="PASS" starttime="20230919 02:27:18.653" endtime="20230919 02:27:18.654"/>
</kw>
<kw name="Freon OCKG" library="freon">
<arg>prefix=${random}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230919 02:27:18.665" level="INFO">Running command 'ozone freon ockg  -t 1 -n1 -p WbzdFHiVYP  2&gt;&amp;1'.</msg>
<msg timestamp="20230919 02:27:41.368" level="INFO">${rc} = 0</msg>
<msg timestamp="20230919 02:27:41.368" level="INFO">${output} = 2023-09-19 02:27:24,834 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-19 02:27:25,172 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230919 02:27:18.662" endtime="20230919 02:27:41.368"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230919 02:27:41.370" level="INFO">2023-09-19 02:27:24,834 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-19 02:27:25,172 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-09-19 02:27:25,172 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-09-19 02:27:25,598 [main] INFO freon.BaseFreonGenerator: Executing test with prefix WbzdFHiVYP and number-of-tests 1
2023-09-19 02:27:25,751 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-19 02:27:26,758 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-19 02:27:27,759 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-19 02:27:28,759 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-19 02:27:29,760 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-19 02:27:30,760 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-19 02:27:31,195 [main] INFO retry.RetryInvocationHandler: com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.ozone.om.exceptions.OMNotLeaderException): OM:om1 is not the leader. Could not determine the leader node.
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createNotLeaderException(OzoneManagerProtocolServerSideTranslatorPB.java:246)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createLeaderErrorException(OzoneManagerProtocolServerSideTranslatorPB.java:234)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitReadRequestToOM(OzoneManagerProtocolServerSideTranslatorPB.java:227)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.processRequest(OzoneManagerProtocolServerSideTranslatorPB.java:179)
	at org.apache.hadoop.hdds.server.OzoneProtocolMessageDispatcher.processRequest(OzoneProtocolMessageDispatcher.java:87)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitRequest(OzoneManagerProtocolServerSideTranslatorPB.java:148)
	at org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos$OzoneManagerService$2.callBlockingMethod(OzoneManagerProtocolProtos.java)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Server.processCall(ProtobufRpcEngine.java:484)
	at org.apache.hadoop.ipc.ProtobufRpcEngine2$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine2.java:595)
	at org.apache.hadoop.ipc.ProtobufRpcEngine2$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine2.java:573)
	at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:1227)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:1094)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:1017)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/javax.security.auth.Subject.doAs(Subject.java:423)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1899)
	at org.apache.hadoop.ipc.Server$Handler.run(Server.java:3048)
, while invoking $Proxy25.submitRequest over nodeId=null,nodeAddress=om:9862 after 1 failover attempts. Trying to failover after sleeping for 4000ms. Current retry count: 1.
2023-09-19 02:27:31,761 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-19 02:27:32,762 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-19 02:27:33,762 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-19 02:27:34,763 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-19 02:27:35,763 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-19 02:27:36,052 [main] INFO rpc.RpcClient: Creating Volume: vol1, with hadoop as owner and space quota set to -1 bytes, counts quota set to -1
2023-09-19 02:27:36,320 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Encryption set to false, Replication Type set to server-side default replication type, Namespace Quota set to -1, Space Quota set to -1 
2023-09-19 02:27:36,767 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-19 02:27:37,751 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2023-09-19 02:27:37,767 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-19 02:27:38,233 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2023-09-19 02:27:38,767 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-19 02:27:39,768 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-19 02:27:40,768 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2023-09-19 02:27:41,014 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=1, min=3979.198878, max=3979.198878, mean=3979.198878, stddev=0.0, median=3979.198878, p75=3979.198878, p95=3979.198878, p98=3979.198878, p99=3979.198878, p999=3979.198878, mean_rate=0.21780473936278139, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-09-19 02:27:41,015 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 15
2023-09-19 02:27:41,015 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-09-19 02:27:41,015 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20230919 02:27:41.369" endtime="20230919 02:27:41.370"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230919 02:27:41.370" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230919 02:27:41.370" endtime="20230919 02:27:41.371"/>
</kw>
<status status="PASS" starttime="20230919 02:27:18.660" endtime="20230919 02:27:41.371"/>
</kw>
<msg timestamp="20230919 02:27:41.371" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230919 02:27:18.659" endtime="20230919 02:27:41.371"/>
</kw>
<msg timestamp="20230919 02:27:41.371" level="INFO">${result} = 2023-09-19 02:27:24,834 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-19 02:27:25,172 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230919 02:27:18.658" endtime="20230919 02:27:41.371"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230919 02:27:41.372" endtime="20230919 02:27:41.372"/>
</kw>
<status status="PASS" starttime="20230919 02:27:18.656" endtime="20230919 02:27:41.372"/>
</kw>
<kw name="Freon OCKV" library="freon">
<arg>prefix=${random}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockv ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230919 02:27:41.378" level="INFO">Running command 'ozone freon ockv  -t 1 -n1 -p WbzdFHiVYP  2&gt;&amp;1'.</msg>
<msg timestamp="20230919 02:27:50.071" level="INFO">${rc} = 0</msg>
<msg timestamp="20230919 02:27:50.071" level="INFO">${output} = 2023-09-19 02:27:44,165 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-19 02:27:44,294 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230919 02:27:41.375" endtime="20230919 02:27:50.071"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230919 02:27:50.072" level="INFO">2023-09-19 02:27:44,165 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-19 02:27:44,294 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-09-19 02:27:44,294 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-09-19 02:27:44,390 [main] INFO freon.BaseFreonGenerator: Executing test with prefix WbzdFHiVYP and number-of-tests 1
2023-09-19 02:27:44,454 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-19 02:27:45,458 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-19 02:27:46,459 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-19 02:27:47,253 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2023-09-19 02:27:47,469 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-19 02:27:48,469 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-19 02:27:49,470 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2023-09-19 02:27:49,687 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-validate, count=1, min=64.660444, max=64.660444, mean=64.660444, stddev=0.0, median=64.660444, p75=64.660444, p95=64.660444, p98=64.660444, p99=64.660444, p999=64.660444, mean_rate=0.8662378449191589, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-09-19 02:27:49,689 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 5
2023-09-19 02:27:49,690 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-09-19 02:27:49,690 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20230919 02:27:50.071" endtime="20230919 02:27:50.072"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230919 02:27:50.073" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230919 02:27:50.072" endtime="20230919 02:27:50.073"/>
</kw>
<status status="PASS" starttime="20230919 02:27:41.375" endtime="20230919 02:27:50.073"/>
</kw>
<msg timestamp="20230919 02:27:50.073" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230919 02:27:41.374" endtime="20230919 02:27:50.073"/>
</kw>
<msg timestamp="20230919 02:27:50.073" level="INFO">${result} = 2023-09-19 02:27:44,165 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-19 02:27:44,294 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230919 02:27:41.374" endtime="20230919 02:27:50.073"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230919 02:27:50.074" endtime="20230919 02:27:50.074"/>
</kw>
<status status="PASS" starttime="20230919 02:27:41.372" endtime="20230919 02:27:50.074"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230919 02:27:18.649" endtime="20230919 02:27:50.074"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20230919 02:27:18.261" endtime="20230919 02:27:50.076"/>
</suite>
<suite id="s1-s2" name="Cli" source="/opt/hadoop/smoketest/topology/cli.robot">
<test id="s1-s2-t1" name="Run printTopology" line="27">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin printTopology</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230919 02:27:52.903" level="INFO">Running command 'ozone admin printTopology 2&gt;&amp;1'.</msg>
<msg timestamp="20230919 02:27:58.380" level="INFO">${rc} = 0</msg>
<msg timestamp="20230919 02:27:58.380" level="INFO">${output} = State = HEALTHY
 10.5.0.8(ozone-topology_datanode_5_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rac...</msg>
<status status="PASS" starttime="20230919 02:27:52.900" endtime="20230919 02:27:58.380"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230919 02:27:58.381" level="INFO">State = HEALTHY
 10.5.0.8(ozone-topology_datanode_5_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.9(ozone-topology_datanode_6_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1</msg>
<status status="PASS" starttime="20230919 02:27:58.380" endtime="20230919 02:27:58.381"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230919 02:27:58.382" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230919 02:27:58.381" endtime="20230919 02:27:58.382"/>
</kw>
<status status="PASS" starttime="20230919 02:27:52.899" endtime="20230919 02:27:58.382"/>
</kw>
<msg timestamp="20230919 02:27:58.382" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230919 02:27:52.899" endtime="20230919 02:27:58.383"/>
</kw>
<msg timestamp="20230919 02:27:58.383" level="INFO">${output} = State = HEALTHY
 10.5.0.8(ozone-topology_datanode_5_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rac...</msg>
<status status="PASS" starttime="20230919 02:27:52.899" endtime="20230919 02:27:58.383"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net)</arg>
<arg>IN_SERVICE</arg>
<arg>/rack2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230919 02:27:58.383" endtime="20230919 02:27:58.384"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230919 02:27:52.898" endtime="20230919 02:27:58.384"/>
</test>
<test id="s1-s2-t2" name="Run printTopology -o" line="30">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin printTopology -o</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230919 02:27:58.390" level="INFO">Running command 'ozone admin printTopology -o 2&gt;&amp;1'.</msg>
<msg timestamp="20230919 02:28:02.312" level="INFO">${rc} = 0</msg>
<msg timestamp="20230919 02:28:02.312" level="INFO">${output} = State = HEALTHY
Location: /rack1
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net) IN_SERVICE
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net) IN_SERVICE
 10.5.0.4(ozone-topology_data...</msg>
<status status="PASS" starttime="20230919 02:27:58.387" endtime="20230919 02:28:02.312"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230919 02:28:02.314" level="INFO">State = HEALTHY
Location: /rack1
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net) IN_SERVICE
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net) IN_SERVICE
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net) IN_SERVICE
Location: /rack2
 10.5.0.8(ozone-topology_datanode_5_1.ozone-topology_net) IN_SERVICE
 10.5.0.9(ozone-topology_datanode_6_1.ozone-topology_net) IN_SERVICE
 10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net) IN_SERVICE</msg>
<status status="PASS" starttime="20230919 02:28:02.313" endtime="20230919 02:28:02.314"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230919 02:28:02.314" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230919 02:28:02.314" endtime="20230919 02:28:02.314"/>
</kw>
<status status="PASS" starttime="20230919 02:27:58.387" endtime="20230919 02:28:02.315"/>
</kw>
<msg timestamp="20230919 02:28:02.315" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230919 02:27:58.386" endtime="20230919 02:28:02.315"/>
</kw>
<msg timestamp="20230919 02:28:02.315" level="INFO">${output} = State = HEALTHY
Location: /rack1
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net) IN_SERVICE
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net) IN_SERVICE
 10.5.0.4(ozone-topology_data...</msg>
<status status="PASS" starttime="20230919 02:27:58.386" endtime="20230919 02:28:02.315"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Location: /rack2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230919 02:28:02.315" endtime="20230919 02:28:02.316"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net) IN_SERVICE</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230919 02:28:02.316" endtime="20230919 02:28:02.316"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230919 02:27:58.385" endtime="20230919 02:28:02.317"/>
</test>
<test id="s1-s2-t3" name="Run printTopology --operational-state IN_SERVICE" line="34">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin printTopology --operational-state IN_SERVICE</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230919 02:28:02.323" level="INFO">Running command 'ozone admin printTopology --operational-state IN_SERVICE 2&gt;&amp;1'.</msg>
<msg timestamp="20230919 02:28:06.667" level="INFO">${rc} = 0</msg>
<msg timestamp="20230919 02:28:06.667" level="INFO">${output} = State = HEALTHY
 10.5.0.8(ozone-topology_datanode_5_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rac...</msg>
<status status="PASS" starttime="20230919 02:28:02.320" endtime="20230919 02:28:06.667"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230919 02:28:06.669" level="INFO">State = HEALTHY
 10.5.0.8(ozone-topology_datanode_5_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.9(ozone-topology_datanode_6_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1</msg>
<status status="PASS" starttime="20230919 02:28:06.668" endtime="20230919 02:28:06.669"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230919 02:28:06.669" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230919 02:28:06.669" endtime="20230919 02:28:06.669"/>
</kw>
<status status="PASS" starttime="20230919 02:28:02.319" endtime="20230919 02:28:06.670"/>
</kw>
<msg timestamp="20230919 02:28:06.670" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230919 02:28:02.319" endtime="20230919 02:28:06.670"/>
</kw>
<msg timestamp="20230919 02:28:06.670" level="INFO">${output} = State = HEALTHY
 10.5.0.8(ozone-topology_datanode_5_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rac...</msg>
<status status="PASS" starttime="20230919 02:28:02.319" endtime="20230919 02:28:06.670"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net)</arg>
<arg>IN_SERVICE</arg>
<arg>/rack2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230919 02:28:06.670" endtime="20230919 02:28:06.671"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230919 02:28:02.318" endtime="20230919 02:28:06.671"/>
</test>
<test id="s1-s2-t4" name="Run printTopology --node-state HEALTHY" line="37">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin printTopology --node-state HEALTHY</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230919 02:28:06.676" level="INFO">Running command 'ozone admin printTopology --node-state HEALTHY 2&gt;&amp;1'.</msg>
<msg timestamp="20230919 02:28:11.004" level="INFO">${rc} = 0</msg>
<msg timestamp="20230919 02:28:11.004" level="INFO">${output} = State = HEALTHY
 10.5.0.8(ozone-topology_datanode_5_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rac...</msg>
<status status="PASS" starttime="20230919 02:28:06.674" endtime="20230919 02:28:11.004"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230919 02:28:11.005" level="INFO">State = HEALTHY
 10.5.0.8(ozone-topology_datanode_5_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.9(ozone-topology_datanode_6_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1</msg>
<status status="PASS" starttime="20230919 02:28:11.004" endtime="20230919 02:28:11.005"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230919 02:28:11.006" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230919 02:28:11.006" endtime="20230919 02:28:11.006"/>
</kw>
<status status="PASS" starttime="20230919 02:28:06.673" endtime="20230919 02:28:11.007"/>
</kw>
<msg timestamp="20230919 02:28:11.007" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230919 02:28:06.673" endtime="20230919 02:28:11.007"/>
</kw>
<msg timestamp="20230919 02:28:11.007" level="INFO">${output} = State = HEALTHY
 10.5.0.8(ozone-topology_datanode_5_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rac...</msg>
<status status="PASS" starttime="20230919 02:28:06.673" endtime="20230919 02:28:11.007"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net)</arg>
<arg>IN_SERVICE</arg>
<arg>/rack2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230919 02:28:11.007" endtime="20230919 02:28:11.008"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230919 02:28:06.672" endtime="20230919 02:28:11.008"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20230919 02:27:52.848" endtime="20230919 02:28:11.009"/>
</suite>
<suite id="s1-s3" name="Recon" source="/opt/hadoop/smoketest/recon">
<suite id="s1-s3-s1" name="Recon-Api" source="/opt/hadoop/smoketest/recon/recon-api.robot">
<test id="s1-s3-s1-t1" name="Check if Recon picks up OM data" line="61">
<kw name="Execute" library="os">
<arg>ozone sh volume create recon</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230919 02:28:13.792" level="INFO">Running command 'ozone sh volume create recon 2&gt;&amp;1'.</msg>
<msg timestamp="20230919 02:28:18.301" level="INFO">${rc} = 0</msg>
<msg timestamp="20230919 02:28:18.301" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230919 02:28:13.789" endtime="20230919 02:28:18.301"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230919 02:28:18.303" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230919 02:28:18.302" endtime="20230919 02:28:18.303"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230919 02:28:18.303" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230919 02:28:18.303" endtime="20230919 02:28:18.303"/>
</kw>
<status status="PASS" starttime="20230919 02:28:13.789" endtime="20230919 02:28:18.304"/>
</kw>
<msg timestamp="20230919 02:28:18.304" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230919 02:28:13.788" endtime="20230919 02:28:18.304"/>
</kw>
<status status="PASS" starttime="20230919 02:28:13.788" endtime="20230919 02:28:18.304"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create recon/api --layout=LEGACY</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230919 02:28:18.309" level="INFO">Running command 'ozone sh bucket create recon/api --layout=LEGACY 2&gt;&amp;1'.</msg>
<msg timestamp="20230919 02:28:22.993" level="INFO">${rc} = 0</msg>
<msg timestamp="20230919 02:28:22.993" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230919 02:28:18.307" endtime="20230919 02:28:22.993"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230919 02:28:22.994" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230919 02:28:22.993" endtime="20230919 02:28:22.994"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230919 02:28:22.995" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230919 02:28:22.994" endtime="20230919 02:28:22.995"/>
</kw>
<status status="PASS" starttime="20230919 02:28:18.305" endtime="20230919 02:28:22.995"/>
</kw>
<msg timestamp="20230919 02:28:22.995" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230919 02:28:18.305" endtime="20230919 02:28:22.995"/>
</kw>
<status status="PASS" starttime="20230919 02:28:18.304" endtime="20230919 02:28:22.995"/>
</kw>
<kw name="Freon OCKG" library="freon">
<arg>n=10</arg>
<arg>args=-s 1025 -v recon -b api</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230919 02:28:23.001" level="INFO">Running command 'ozone freon ockg  -t 1 -n10 -p ockg -s 1025 -v recon -b api 2&gt;&amp;1'.</msg>
<msg timestamp="20230919 02:28:32.578" level="INFO">${rc} = 0</msg>
<msg timestamp="20230919 02:28:32.578" level="INFO">${output} = 2023-09-19 02:28:25,441 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-19 02:28:25,560 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230919 02:28:22.998" endtime="20230919 02:28:32.578"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230919 02:28:32.579" level="INFO">2023-09-19 02:28:25,441 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-19 02:28:25,560 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-09-19 02:28:25,560 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-09-19 02:28:25,638 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ockg and number-of-tests 10
2023-09-19 02:28:25,693 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2023-09-19 02:28:26,697 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2023-09-19 02:28:27,697 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2023-09-19 02:28:27,801 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2023-09-19 02:28:28,202 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2023-09-19 02:28:28,697 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2023-09-19 02:28:29,699 [Thread-5] INFO freon.ProgressBar: Progress: 10.00 % (1 out of 10)
2023-09-19 02:28:30,700 [Thread-5] INFO freon.ProgressBar: Progress: 40.00 % (4 out of 10)
2023-09-19 02:28:31,701 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (10 out of 10)
2023-09-19 02:28:32,220 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=10, min=103.855679, max=2390.765059, mean=431.68208138217653, stddev=678.0509433958406, median=154.122263, p75=171.220944, p95=2390.765059, p98=2390.765059, p99=2390.765059, p999=2390.765059, mean_rate=1.9618788478581208, m1=2.0, m5=2.0, m15=2.0, rate_unit=events/second, duration_unit=milliseconds
2023-09-19 02:28:32,221 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 7
2023-09-19 02:28:32,222 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-09-19 02:28:32,222 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 10</msg>
<status status="PASS" starttime="20230919 02:28:32.579" endtime="20230919 02:28:32.579"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230919 02:28:32.580" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230919 02:28:32.579" endtime="20230919 02:28:32.580"/>
</kw>
<status status="PASS" starttime="20230919 02:28:22.998" endtime="20230919 02:28:32.580"/>
</kw>
<msg timestamp="20230919 02:28:32.580" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230919 02:28:22.997" endtime="20230919 02:28:32.580"/>
</kw>
<msg timestamp="20230919 02:28:32.581" level="INFO">${result} = 2023-09-19 02:28:25,441 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-19 02:28:25,560 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230919 02:28:22.996" endtime="20230919 02:28:32.581"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230919 02:28:32.581" endtime="20230919 02:28:32.581"/>
</kw>
<status status="PASS" starttime="20230919 02:28:22.996" endtime="20230919 02:28:32.581"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Check if Recon picks up container from OM</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit as ozone admin</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230919 02:28:32.583" endtime="20230919 02:28:32.583"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/containers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230919 02:28:32.587" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20230919 02:28:32.836" level="INFO">${rc} = 0</msg>
<msg timestamp="20230919 02:28:32.836" level="INFO">${output} = {"data":{"totalCount":3,"prevKey":3,"containers":[{"ContainerID":1,"NumberOfKeys":0,"pipelines":null},{"ContainerID":2,"NumberOfKeys":0,"pipelines":null},{"ContainerID":3,"NumberOfKeys":0,"pipelines":...</msg>
<status status="PASS" starttime="20230919 02:28:32.584" endtime="20230919 02:28:32.836"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230919 02:28:32.837" level="INFO">{"data":{"totalCount":3,"prevKey":3,"containers":[{"ContainerID":1,"NumberOfKeys":0,"pipelines":null},{"ContainerID":2,"NumberOfKeys":0,"pipelines":null},{"ContainerID":3,"NumberOfKeys":0,"pipelines":null}]}}</msg>
<status status="PASS" starttime="20230919 02:28:32.836" endtime="20230919 02:28:32.837"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230919 02:28:32.838" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230919 02:28:32.838" endtime="20230919 02:28:32.838"/>
</kw>
<status status="PASS" starttime="20230919 02:28:32.584" endtime="20230919 02:28:32.838"/>
</kw>
<msg timestamp="20230919 02:28:32.838" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230919 02:28:32.583" endtime="20230919 02:28:32.839"/>
</kw>
<msg timestamp="20230919 02:28:32.839" level="INFO">${result} = {"data":{"totalCount":3,"prevKey":3,"containers":[{"ContainerID":1,"NumberOfKeys":0,"pipelines":null},{"ContainerID":2,"NumberOfKeys":0,"pipelines":null},{"ContainerID":3,"NumberOfKeys":0,"pipelines":...</msg>
<status status="PASS" starttime="20230919 02:28:32.583" endtime="20230919 02:28:32.839"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"ContainerID\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230919 02:28:32.839" endtime="20230919 02:28:32.839"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/utilization/fileCount</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230919 02:28:32.845" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20230919 02:28:32.872" level="INFO">${rc} = 0</msg>
<msg timestamp="20230919 02:28:32.872" level="INFO">${output} = [{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20230919 02:28:32.842" endtime="20230919 02:28:32.872"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230919 02:28:32.873" level="INFO">[{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20230919 02:28:32.873" endtime="20230919 02:28:32.873"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230919 02:28:32.874" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230919 02:28:32.873" endtime="20230919 02:28:32.874"/>
</kw>
<status status="PASS" starttime="20230919 02:28:32.841" endtime="20230919 02:28:32.874"/>
</kw>
<msg timestamp="20230919 02:28:32.874" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230919 02:28:32.841" endtime="20230919 02:28:32.874"/>
</kw>
<msg timestamp="20230919 02:28:32.875" level="INFO">${result} = [{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20230919 02:28:32.840" endtime="20230919 02:28:32.875"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20230919 02:28:32.875" level="FAIL">'[{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]' does not contain '"fileSize":2048,"count":10'</msg>
<status status="FAIL" starttime="20230919 02:28:32.875" endtime="20230919 02:28:32.876"/>
</kw>
<status status="FAIL" starttime="20230919 02:28:32.582" endtime="20230919 02:28:32.876"/>
</kw>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit as ozone admin</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230919 02:28:42.877" endtime="20230919 02:28:42.877"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/containers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230919 02:28:42.882" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20230919 02:28:42.900" level="INFO">${rc} = 0</msg>
<msg timestamp="20230919 02:28:42.900" level="INFO">${output} = {"data":{"totalCount":3,"prevKey":3,"containers":[{"ContainerID":1,"NumberOfKeys":0,"pipelines":null},{"ContainerID":2,"NumberOfKeys":0,"pipelines":null},{"ContainerID":3,"NumberOfKeys":0,"pipelines":...</msg>
<status status="PASS" starttime="20230919 02:28:42.879" endtime="20230919 02:28:42.901"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230919 02:28:42.902" level="INFO">{"data":{"totalCount":3,"prevKey":3,"containers":[{"ContainerID":1,"NumberOfKeys":0,"pipelines":null},{"ContainerID":2,"NumberOfKeys":0,"pipelines":null},{"ContainerID":3,"NumberOfKeys":0,"pipelines":null}]}}</msg>
<status status="PASS" starttime="20230919 02:28:42.901" endtime="20230919 02:28:42.902"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230919 02:28:42.902" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230919 02:28:42.902" endtime="20230919 02:28:42.902"/>
</kw>
<status status="PASS" starttime="20230919 02:28:42.879" endtime="20230919 02:28:42.903"/>
</kw>
<msg timestamp="20230919 02:28:42.903" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230919 02:28:42.878" endtime="20230919 02:28:42.903"/>
</kw>
<msg timestamp="20230919 02:28:42.904" level="INFO">${result} = {"data":{"totalCount":3,"prevKey":3,"containers":[{"ContainerID":1,"NumberOfKeys":0,"pipelines":null},{"ContainerID":2,"NumberOfKeys":0,"pipelines":null},{"ContainerID":3,"NumberOfKeys":0,"pipelines":...</msg>
<status status="PASS" starttime="20230919 02:28:42.878" endtime="20230919 02:28:42.904"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"ContainerID\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230919 02:28:42.904" endtime="20230919 02:28:42.904"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/utilization/fileCount</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230919 02:28:42.908" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20230919 02:28:42.923" level="INFO">${rc} = 0</msg>
<msg timestamp="20230919 02:28:42.923" level="INFO">${output} = [{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20230919 02:28:42.906" endtime="20230919 02:28:42.923"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230919 02:28:42.924" level="INFO">[{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20230919 02:28:42.924" endtime="20230919 02:28:42.924"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230919 02:28:42.925" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230919 02:28:42.925" endtime="20230919 02:28:42.925"/>
</kw>
<status status="PASS" starttime="20230919 02:28:42.905" endtime="20230919 02:28:42.925"/>
</kw>
<msg timestamp="20230919 02:28:42.925" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230919 02:28:42.905" endtime="20230919 02:28:42.925"/>
</kw>
<msg timestamp="20230919 02:28:42.926" level="INFO">${result} = [{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20230919 02:28:42.904" endtime="20230919 02:28:42.926"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20230919 02:28:42.926" level="FAIL">'[{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]' does not contain '"fileSize":2048,"count":10'</msg>
<status status="FAIL" starttime="20230919 02:28:42.926" endtime="20230919 02:28:42.926"/>
</kw>
<status status="FAIL" starttime="20230919 02:28:42.876" endtime="20230919 02:28:42.927"/>
</kw>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit as ozone admin</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230919 02:28:52.928" endtime="20230919 02:28:52.928"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/containers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230919 02:28:52.933" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20230919 02:28:52.957" level="INFO">${rc} = 0</msg>
<msg timestamp="20230919 02:28:52.958" level="INFO">${output} = {"data":{"totalCount":3,"prevKey":3,"containers":[{"ContainerID":1,"NumberOfKeys":0,"pipelines":null},{"ContainerID":2,"NumberOfKeys":0,"pipelines":null},{"ContainerID":3,"NumberOfKeys":0,"pipelines":...</msg>
<status status="PASS" starttime="20230919 02:28:52.930" endtime="20230919 02:28:52.958"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230919 02:28:52.959" level="INFO">{"data":{"totalCount":3,"prevKey":3,"containers":[{"ContainerID":1,"NumberOfKeys":0,"pipelines":null},{"ContainerID":2,"NumberOfKeys":0,"pipelines":null},{"ContainerID":3,"NumberOfKeys":0,"pipelines":null}]}}</msg>
<status status="PASS" starttime="20230919 02:28:52.958" endtime="20230919 02:28:52.959"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230919 02:28:52.959" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230919 02:28:52.959" endtime="20230919 02:28:52.960"/>
</kw>
<status status="PASS" starttime="20230919 02:28:52.929" endtime="20230919 02:28:52.960"/>
</kw>
<msg timestamp="20230919 02:28:52.960" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230919 02:28:52.929" endtime="20230919 02:28:52.960"/>
</kw>
<msg timestamp="20230919 02:28:52.960" level="INFO">${result} = {"data":{"totalCount":3,"prevKey":3,"containers":[{"ContainerID":1,"NumberOfKeys":0,"pipelines":null},{"ContainerID":2,"NumberOfKeys":0,"pipelines":null},{"ContainerID":3,"NumberOfKeys":0,"pipelines":...</msg>
<status status="PASS" starttime="20230919 02:28:52.928" endtime="20230919 02:28:52.960"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"ContainerID\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230919 02:28:52.960" endtime="20230919 02:28:52.961"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/utilization/fileCount</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230919 02:28:52.965" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20230919 02:28:52.980" level="INFO">${rc} = 0</msg>
<msg timestamp="20230919 02:28:52.980" level="INFO">${output} = [{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20230919 02:28:52.962" endtime="20230919 02:28:52.980"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230919 02:28:52.981" level="INFO">[{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20230919 02:28:52.980" endtime="20230919 02:28:52.981"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230919 02:28:52.982" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230919 02:28:52.981" endtime="20230919 02:28:52.982"/>
</kw>
<status status="PASS" starttime="20230919 02:28:52.962" endtime="20230919 02:28:52.982"/>
</kw>
<msg timestamp="20230919 02:28:52.982" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230919 02:28:52.961" endtime="20230919 02:28:52.982"/>
</kw>
<msg timestamp="20230919 02:28:52.983" level="INFO">${result} = [{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20230919 02:28:52.961" endtime="20230919 02:28:52.983"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20230919 02:28:52.983" level="FAIL">'[{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]' does not contain '"fileSize":2048,"count":10'</msg>
<status status="FAIL" starttime="20230919 02:28:52.983" endtime="20230919 02:28:52.983"/>
</kw>
<status status="FAIL" starttime="20230919 02:28:52.927" endtime="20230919 02:28:52.983"/>
</kw>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit as ozone admin</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230919 02:29:02.985" endtime="20230919 02:29:02.985"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/containers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230919 02:29:02.989" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20230919 02:29:03.005" level="INFO">${rc} = 0</msg>
<msg timestamp="20230919 02:29:03.005" level="INFO">${output} = {"data":{"totalCount":3,"prevKey":3,"containers":[{"ContainerID":1,"NumberOfKeys":0,"pipelines":null},{"ContainerID":2,"NumberOfKeys":0,"pipelines":null},{"ContainerID":3,"NumberOfKeys":0,"pipelines":...</msg>
<status status="PASS" starttime="20230919 02:29:02.987" endtime="20230919 02:29:03.005"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230919 02:29:03.006" level="INFO">{"data":{"totalCount":3,"prevKey":3,"containers":[{"ContainerID":1,"NumberOfKeys":0,"pipelines":null},{"ContainerID":2,"NumberOfKeys":0,"pipelines":null},{"ContainerID":3,"NumberOfKeys":0,"pipelines":null}]}}</msg>
<status status="PASS" starttime="20230919 02:29:03.005" endtime="20230919 02:29:03.006"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230919 02:29:03.007" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230919 02:29:03.006" endtime="20230919 02:29:03.007"/>
</kw>
<status status="PASS" starttime="20230919 02:29:02.986" endtime="20230919 02:29:03.007"/>
</kw>
<msg timestamp="20230919 02:29:03.007" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230919 02:29:02.986" endtime="20230919 02:29:03.007"/>
</kw>
<msg timestamp="20230919 02:29:03.007" level="INFO">${result} = {"data":{"totalCount":3,"prevKey":3,"containers":[{"ContainerID":1,"NumberOfKeys":0,"pipelines":null},{"ContainerID":2,"NumberOfKeys":0,"pipelines":null},{"ContainerID":3,"NumberOfKeys":0,"pipelines":...</msg>
<status status="PASS" starttime="20230919 02:29:02.985" endtime="20230919 02:29:03.007"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"ContainerID\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230919 02:29:03.008" endtime="20230919 02:29:03.008"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/utilization/fileCount</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230919 02:29:03.012" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20230919 02:29:03.026" level="INFO">${rc} = 0</msg>
<msg timestamp="20230919 02:29:03.026" level="INFO">${output} = [{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1},{"volume":"recon","bucket":"api","fileSize":2048,"count":10}]</msg>
<status status="PASS" starttime="20230919 02:29:03.010" endtime="20230919 02:29:03.026"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230919 02:29:03.028" level="INFO">[{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1},{"volume":"recon","bucket":"api","fileSize":2048,"count":10}]</msg>
<status status="PASS" starttime="20230919 02:29:03.027" endtime="20230919 02:29:03.028"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230919 02:29:03.029" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230919 02:29:03.028" endtime="20230919 02:29:03.029"/>
</kw>
<status status="PASS" starttime="20230919 02:29:03.009" endtime="20230919 02:29:03.029"/>
</kw>
<msg timestamp="20230919 02:29:03.029" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230919 02:29:03.009" endtime="20230919 02:29:03.029"/>
</kw>
<msg timestamp="20230919 02:29:03.030" level="INFO">${result} = [{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1},{"volume":"recon","bucket":"api","fileSize":2048,"count":10}]</msg>
<status status="PASS" starttime="20230919 02:29:03.008" endtime="20230919 02:29:03.030"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230919 02:29:03.030" endtime="20230919 02:29:03.030"/>
</kw>
<status status="PASS" starttime="20230919 02:29:02.984" endtime="20230919 02:29:03.030"/>
</kw>
<status status="PASS" starttime="20230919 02:28:32.582" endtime="20230919 02:29:03.030"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230919 02:28:13.787" endtime="20230919 02:29:03.031"/>
</test>
<test id="s1-s3-s1-t2" name="Check if Recon picks up DN heartbeats" line="71">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/datanodes</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230919 02:29:03.036" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/datanodes 2&gt;&amp;1'.</msg>
<msg timestamp="20230919 02:29:03.074" level="INFO">${rc} = 0</msg>
<msg timestamp="20230919 02:29:03.074" level="INFO">${output} = {"totalCount":6,"datanodes":[{"uuid":"a91909ed-14ae-42f1-8fde-b814a7cc31ec","hostname":"ozone-topology_datanode_2_1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":0,"stor...</msg>
<status status="PASS" starttime="20230919 02:29:03.034" endtime="20230919 02:29:03.074"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230919 02:29:03.076" level="INFO">{"totalCount":6,"datanodes":[{"uuid":"a91909ed-14ae-42f1-8fde-b814a7cc31ec","hostname":"ozone-topology_datanode_2_1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":0,"storageReport":{"capacity":89297309696,"used":7171,"remaining":15325302784},"pipelines":[{"pipelineID":"4f97a26d-540d-447b-99db-0898497e9e71","replicationType":"RATIS","replicationFactor":"ONE","leaderNode":"ozone-topology_datanode_2_1.ozone-topology_net"},{"pipelineID":"c3962395-a6f4-4e7f-bd88-285d035688ea","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_2_1.ozone-topology_net"}],"containers":1,"openContainers":1,"leaderCount":2,"version":"1.4.0-SNAPSHOT","setupTime":1695090366031,"revision":"47887987244ba42ba6317b9db37a5b6f7c6e24f4","buildDate":"2023-09-19T01:47Z","layoutVersion":7,"networkLocation":"/rack1"},{"uuid":"e07d9ba1-7585-40f0-b4fa-930839b4b169","hostname":"ozone-topology_datanode_4_1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":0,"storageReport":{"capacity":89297309696,"used":21511,"remaining":15325302784},"pipelines":[{"pipelineID":"808f1d06-0b73-41bb-99e3-007ff7c13de8","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_5_1.ozone-topology_net"},{"pipelineID":"02aabd6b-7267-4541-b36c-ebeb3bfc9a56","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_3_1.ozone-topology_net"},{"pipelineID":"9e8d810f-1100-4f84-9471-14b74250a89b","replicationType":"RATIS","replicationFactor":"ONE","leaderNode":"ozone-topology_datanode_4_1.ozone-topology_net"}],"containers":2,"openContainers":2,"leaderCount":1,"version":"1.4.0-SNAPSHOT","setupTime":1695090367504,"revision":"47887987244ba42ba6317b9db37a5b6f7c6e24f4","buildDate":"2023-09-19T01:47Z","layoutVersion":7,"networkLocation":"/rack2"},{"uuid":"aeb1efd5-ae80-4d11-9135-5acc430a4d11","hostname":"ozone-topology_datanode_6_1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":0,"storageReport":{"capacity":89297309696,"used":4096,"remaining":15325302784},"pipelines":[{"pipelineID":"a9b3447c-92fd-4881-9ab1-730a1082842c","replicationType":"RATIS","replicationFactor":"ONE","leaderNode":"ozone-topology_datanode_6_1.ozone-topology_net"}],"containers":0,"openContainers":0,"leaderCount":1,"version":"1.4.0-SNAPSHOT","setupTime":1695090366778,"revision":"47887987244ba42ba6317b9db37a5b6f7c6e24f4","buildDate":"2023-09-19T01:47Z","layoutVersion":7,"networkLocation":"/rack2"},{"uuid":"8e2a5854-a028-4737-bf19-c837207352b5","hostname":"ozone-topology_datanode_5_1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":0,"storageReport":{"capacity":89297309696,"used":11271,"remaining":15325310976},"pipelines":[{"pipelineID":"c3962395-a6f4-4e7f-bd88-285d035688ea","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_2_1.ozone-topology_net"},{"pipelineID":"808f1d06-0b73-41bb-99e3-007ff7c13de8","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_5_1.ozone-topology_net"},{"pipelineID":"3694590c-0f72-46f6-a06c-aa8c91469b0d","replicationType":"RATIS","replicationFactor":"ONE","leaderNode":"ozone-topology_datanode_5_1.ozone-topology_net"}],"containers":2,"openContainers":2,"leaderCount":2,"version":"1.4.0-SNAPSHOT","setupTime":1695090366458,"revision":"47887987244ba42ba6317b9db37a5b6f7c6e24f4","buildDate":"2023-09-19T01:47Z","layoutVersion":7,"networkLocation":"/rack2"},{"uuid":"4aefacdb-572e-414b-9683-8ef48edf1897","hostname":"ozone-topology_datanode_1_1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":0,"storageReport":{"capacity":89297309696,"used":21511,"remaining":15325310976},"pipelines":[{"pipelineID":"808f1d06-0b73-41bb-99e3-007ff7c13de8","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_5_1.ozone-topology_net"},{"pipelineID":"7cd36526-40c8-4b1f-9515-85ebc4d63e32","replicationType":"RATIS","replicationFactor":"ONE","leaderNode":"ozone-topology_datanode_1_1.ozone-topology_net"},{"pipelineID":"02aabd6b-7267-4541-b36c-ebeb3bfc9a56","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_3_1.ozone-topology_net"}],"containers":2,"openContainers":2,"leaderCount":1,"version":"1.4.0-SNAPSHOT","setupTime":1695090366168,"revision":"47887987244ba42ba6317b9db37a5b6f7c6e24f4","buildDate":"2023-09-19T01:47Z","layoutVersion":7,"networkLocation":"/rack1"},{"uuid":"e5975141-1726-4ade-a1a2-a3be8466ccca","hostname":"ozone-topology_datanode_3_1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":0,"storageReport":{"capacity":89297309696,"used":20486,"remaining":15325310976},"pipelines":[{"pipelineID":"c3962395-a6f4-4e7f-bd88-285d035688ea","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_2_1.ozone-topology_net"},{"pipelineID":"02aabd6b-7267-4541-b36c-ebeb3bfc9a56","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_3_1.ozone-topology_net"},{"pipelineID":"12cbcb1e-a173-49e7-bee2-2221535b6c75","replicationType":"RATIS","replicationFactor":"ONE","leaderNode":"ozone-topology_datanode_3_1.ozone-topology_net"}],"containers":2,"openContainers":2,"leaderCount":2,"version":"1.4.0-SNAPSHOT","setupTime":1695090363292,"revision":"47887987244ba42ba6317b9db37a5b6f7c6e24f4","buildDate":"2023-09-19T01:47Z","layoutVersion":7,"networkLocation":"/rack1"}]}</msg>
<status status="PASS" starttime="20230919 02:29:03.075" endtime="20230919 02:29:03.076"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230919 02:29:03.076" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230919 02:29:03.076" endtime="20230919 02:29:03.077"/>
</kw>
<status status="PASS" starttime="20230919 02:29:03.033" endtime="20230919 02:29:03.077"/>
</kw>
<msg timestamp="20230919 02:29:03.077" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230919 02:29:03.033" endtime="20230919 02:29:03.077"/>
</kw>
<msg timestamp="20230919 02:29:03.077" level="INFO">${result} = {"totalCount":6,"datanodes":[{"uuid":"a91909ed-14ae-42f1-8fde-b814a7cc31ec","hostname":"ozone-topology_datanode_2_1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":0,"stor...</msg>
<status status="PASS" starttime="20230919 02:29:03.032" endtime="20230919 02:29:03.077"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>datanodes</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230919 02:29:03.078" endtime="20230919 02:29:03.078"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>datanode_1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230919 02:29:03.078" endtime="20230919 02:29:03.079"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>datanode_2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230919 02:29:03.079" endtime="20230919 02:29:03.079"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>datanode_3</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230919 02:29:03.080" endtime="20230919 02:29:03.080"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/pipelines</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230919 02:29:03.084" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/pipelines 2&gt;&amp;1'.</msg>
<msg timestamp="20230919 02:29:03.133" level="INFO">${rc} = 0</msg>
<msg timestamp="20230919 02:29:03.134" level="INFO">${output} = {"totalCount":9,"pipelines":[{"pipelineId":"4f97a26d-540d-447b-99db-0898497e9e71","status":"OPEN","leaderNode":"ozone-topology_datanode_2_1.ozone-topology_net","datanodes":[{"level":0,"parent":null,"c...</msg>
<status status="PASS" starttime="20230919 02:29:03.082" endtime="20230919 02:29:03.134"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230919 02:29:03.135" level="INFO">{"totalCount":9,"pipelines":[{"pipelineId":"4f97a26d-540d-447b-99db-0898497e9e71","status":"OPEN","leaderNode":"ozone-topology_datanode_2_1.ozone-topology_net","datanodes":[{"level":0,"parent":null,"cost":0,"uuid":"a91909ed-14ae-42f1-8fde-b814a7cc31ec","uuidString":"a91909ed-14ae-42f1-8fde-b814a7cc31ec","ipAddress":"10.5.0.5","hostName":"ozone-topology_datanode_2_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":9864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":486614830,"decommissioned":false,"maintenance":false,"networkName":"a91909ed-14ae-42f1-8fde-b814a7cc31ec","networkLocation":"/rack1","networkFullPath":"/rack1/a91909ed-14ae-42f1-8fde-b814a7cc31ec","numOfLeaves":1}],"lastLeaderElection":0,"duration":118796,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"ONE","containers":0},{"pipelineId":"c3962395-a6f4-4e7f-bd88-285d035688ea","status":"OPEN","leaderNode":"ozone-topology_datanode_2_1.ozone-topology_net","datanodes":[{"level":0,"parent":null,"cost":0,"uuid":"a91909ed-14ae-42f1-8fde-b814a7cc31ec","uuidString":"a91909ed-14ae-42f1-8fde-b814a7cc31ec","ipAddress":"10.5.0.5","hostName":"ozone-topology_datanode_2_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":9864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":486614830,"decommissioned":false,"maintenance":false,"networkName":"a91909ed-14ae-42f1-8fde-b814a7cc31ec","networkLocation":"/rack1","networkFullPath":"/rack1/a91909ed-14ae-42f1-8fde-b814a7cc31ec","numOfLeaves":1},{"level":0,"parent":null,"cost":0,"uuid":"8e2a5854-a028-4737-bf19-c837207352b5","uuidString":"8e2a5854-a028-4737-bf19-c837207352b5","ipAddress":"10.5.0.8","hostName":"ozone-topology_datanode_5_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":9864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":-2135804916,"decommissioned":false,"maintenance":false,"networkName":"8e2a5854-a028-4737-bf19-c837207352b5","networkLocation":"/rack2","networkFullPath":"/rack2/8e2a5854-a028-4737-bf19-c837207352b5","numOfLeaves":1},{"level":0,"parent":null,"cost":0,"uuid":"e5975141-1726-4ade-a1a2-a3be8466ccca","uuidString":"e5975141-1726-4ade-a1a2-a3be8466ccca","ipAddress":"10.5.0.6","hostName":"ozone-topology_datanode_3_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":9864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":-1086044040,"decommissioned":false,"maintenance":false,"networkName":"e5975141-1726-4ade-a1a2-a3be8466ccca","networkLocation":"/rack1","networkFullPath":"/rack1/e5975141-1726-4ade-a1a2-a3be8466ccca","numOfLeaves":1}],"lastLeaderElection":0,"duration":118776,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"THREE","containers":1},{"pipelineId":"808f1d06-0b73-41bb-99e3-007ff7c13de8","status":"OPEN","leaderNode":"ozone-topology_datanode_5_1.ozone-topology_net","datanodes":[{"level":0,"parent":null,"cost":0,"uuid":"e07d9ba1-7585-40f0-b4fa-930839b4b169","uuidString":"e07d9ba1-7585-40f0-b4fa-930839b4b169","ipAddress":"10.5.0.7","hostName":"ozone-topology_datanode_4_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":9864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":708173939,"decommissioned":false,"maintenance":false,"networkName":"e07d9ba1-7585-40f0-b4fa-930839b4b169","networkLocation":"/rack2","networkFullPath":"/rack2/e07d9ba1-7585-40f0-b4fa-930839b4b169","numOfLeaves":1},{"level":0,"parent":null,"cost":0,"uuid":"4aefacdb-572e-414b-9683-8ef48edf1897","uuidString":"4aefacdb-572e-414b-9683-8ef48edf1897","ipAddress":"10.5.0.4","hostName":"ozone-topology_datanode_1_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":9864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":297323862,"decommissioned":false,"maintenance":false,"networkName":"4aefacdb-572e-414b-9683-8ef48edf1897","networkLocation":"/rack1","networkFullPath":"/rack1/4aefacdb-572e-414b-9683-8ef48edf1897","numOfLeaves":1},{"level":0,"parent":null,"cost":0,"uuid":"8e2a5854-a028-4737-bf19-c837207352b5","uuidString":"8e2a5854-a028-4737-bf19-c837207352b5","ipAddress":"10.5.0.8","hostName":"ozone-topology_datanode_5_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":9864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":-2135804916,"decommissioned":false,"maintenance":false,"networkName":"8e2a5854-a028-4737-bf19-c837207352b5","networkLocation":"/rack2","networkFullPath":"/rack2/8e2a5854-a028-4737-bf19-c837207352b5","numOfLeaves":1}],"lastLeaderElection":0,"duration":118880,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"THREE","containers":1},{"pipelineId":"a9b3447c-92fd-4881-9ab1-730a1082842c","status":"OPEN","leaderNode":"ozone-topology_datanode_6_1.ozone-topology_net","datanodes":[{"level":0,"parent":null,"cost":0,"uuid":"aeb1efd5-ae80-4d11-9135-5acc430a4d11","uuidString":"aeb1efd5-ae80-4d11-9135-5acc430a4d11","ipAddress":"10.5.0.9","hostName":"ozone-topology_datanode_6_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":9864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":1526838710,"decommissioned":false,"maintenance":false,"networkName":"aeb1efd5-ae80-4d11-9135-5acc430a4d11","networkLocation":"/rack2","networkFullPath":"/rack2/aeb1efd5-ae80-4d11-9135-5acc430a4d11","numOfLeaves":1}],"lastLeaderElection":0,"duration":118217,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"ONE","containers":0},{"pipelineId":"3694590c-0f72-46f6-a06c-aa8c91469b0d","status":"OPEN","leaderNode":"ozone-topology_datanode_5_1.ozone-topology_net","datanodes":[{"level":0,"parent":null,"cost":0,"uuid":"8e2a5854-a028-4737-bf19-c837207352b5","uuidString":"8e2a5854-a028-4737-bf19-c837207352b5","ipAddress":"10.5.0.8","hostName":"ozone-topology_datanode_5_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":9864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":-2135804916,"decommissioned":false,"maintenance":false,"networkName":"8e2a5854-a028-4737-bf19-c837207352b5","networkLocation":"/rack2","networkFullPath":"/rack2/8e2a5854-a028-4737-bf19-c837207352b5","numOfLeaves":1}],"lastLeaderElection":0,"duration":118841,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"ONE","containers":0},{"pipelineId":"7cd36526-40c8-4b1f-9515-85ebc4d63e32","status":"OPEN","leaderNode":"ozone-topology_datanode_1_1.ozone-topology_net","datanodes":[{"level":0,"parent":null,"cost":0,"uuid":"4aefacdb-572e-414b-9683-8ef48edf1897","uuidString":"4aefacdb-572e-414b-9683-8ef48edf1897","ipAddress":"10.5.0.4","hostName":"ozone-topology_datanode_1_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":9864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":297323862,"decommissioned":false,"maintenance":false,"networkName":"4aefacdb-572e-414b-9683-8ef48edf1897","networkLocation":"/rack1","networkFullPath":"/rack1/4aefacdb-572e-414b-9683-8ef48edf1897","numOfLeaves":1}],"lastLeaderElection":0,"duration":118763,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"ONE","containers":0},{"pipelineId":"02aabd6b-7267-4541-b36c-ebeb3bfc9a56","status":"OPEN","leaderNode":"ozone-topology_datanode_3_1.ozone-topology_net","datanodes":[{"level":0,"parent":null,"cost":0,"uuid":"e5975141-1726-4ade-a1a2-a3be8466ccca","uuidString":"e5975141-1726-4ade-a1a2-a3be8466ccca","ipAddress":"10.5.0.6","hostName":"ozone-topology_datanode_3_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":9864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":-1086044040,"decommissioned":false,"maintenance":false,"networkName":"e5975141-1726-4ade-a1a2-a3be8466ccca","networkLocation":"/rack1","networkFullPath":"/rack1/e5975141-1726-4ade-a1a2-a3be8466ccca","numOfLeaves":1},{"level":0,"parent":null,"cost":0,"uuid":"e07d9ba1-7585-40f0-b4fa-930839b4b169","uuidString":"e07d9ba1-7585-40f0-b4fa-930839b4b169","ipAddress":"10.5.0.7","hostName":"ozone-topology_datanode_4_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":9864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":708173939,"decommissioned":false,"maintenance":false,"networkName":"e07d9ba1-7585-40f0-b4fa-930839b4b169","networkLocation":"/rack2","networkFullPath":"/rack2/e07d9ba1-7585-40f0-b4fa-930839b4b169","numOfLeaves":1},{"level":0,"parent":null,"cost":0,"uuid":"4aefacdb-572e-414b-9683-8ef48edf1897","uuidString":"4aefacdb-572e-414b-9683-8ef48edf1897","ipAddress":"10.5.0.4","hostName":"ozone-topology_datanode_1_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":9864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":297323862,"decommissioned":false,"maintenance":false,"networkName":"4aefacdb-572e-414b-9683-8ef48edf1897","networkLocation":"/rack1","networkFullPath":"/rack1/4aefacdb-572e-414b-9683-8ef48edf1897","numOfLeaves":1}],"lastLeaderElection":0,"duration":118825,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"THREE","containers":1},{"pipelineId":"9e8d810f-1100-4f84-9471-14b74250a89b","status":"OPEN","leaderNode":"ozone-topology_datanode_4_1.ozone-topology_net","datanodes":[{"level":0,"parent":null,"cost":0,"uuid":"e07d9ba1-7585-40f0-b4fa-930839b4b169","uuidString":"e07d9ba1-7585-40f0-b4fa-930839b4b169","ipAddress":"10.5.0.7","hostName":"ozone-topology_datanode_4_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":9864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":708173939,"decommissioned":false,"maintenance":false,"networkName":"e07d9ba1-7585-40f0-b4fa-930839b4b169","networkLocation":"/rack2","networkFullPath":"/rack2/e07d9ba1-7585-40f0-b4fa-930839b4b169","numOfLeaves":1}],"lastLeaderElection":0,"duration":119444,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"ONE","containers":0},{"pipelineId":"12cbcb1e-a173-49e7-bee2-2221535b6c75","status":"OPEN","leaderNode":"ozone-topology_datanode_3_1.ozone-topology_net","datanodes":[{"level":0,"parent":null,"cost":0,"uuid":"e5975141-1726-4ade-a1a2-a3be8466ccca","uuidString":"e5975141-1726-4ade-a1a2-a3be8466ccca","ipAddress":"10.5.0.6","hostName":"ozone-topology_datanode_3_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":9864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":-1086044040,"decommissioned":false,"maintenance":false,"networkName":"e5975141-1726-4ade-a1a2-a3be8466ccca","networkLocation":"/rack1","networkFullPath":"/rack1/e5975141-1726-4ade-a1a2-a3be8466ccca","numOfLeaves":1}],"lastLeaderElection":0,"duration":118733,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"ONE","containers":0}]}</msg>
<status status="PASS" starttime="20230919 02:29:03.134" endtime="20230919 02:29:03.135"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230919 02:29:03.136" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230919 02:29:03.136" endtime="20230919 02:29:03.136"/>
</kw>
<status status="PASS" starttime="20230919 02:29:03.081" endtime="20230919 02:29:03.136"/>
</kw>
<msg timestamp="20230919 02:29:03.137" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230919 02:29:03.081" endtime="20230919 02:29:03.137"/>
</kw>
<msg timestamp="20230919 02:29:03.137" level="INFO">${result} = {"totalCount":9,"pipelines":[{"pipelineId":"4f97a26d-540d-447b-99db-0898497e9e71","status":"OPEN","leaderNode":"ozone-topology_datanode_2_1.ozone-topology_net","datanodes":[{"level":0,"parent":null,"c...</msg>
<status status="PASS" starttime="20230919 02:29:03.080" endtime="20230919 02:29:03.137"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>pipelines</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230919 02:29:03.137" endtime="20230919 02:29:03.138"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230919 02:29:03.139" endtime="20230919 02:29:03.139"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>OPEN</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230919 02:29:03.139" endtime="20230919 02:29:03.140"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>datanode_1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230919 02:29:03.140" endtime="20230919 02:29:03.140"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>datanode_2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230919 02:29:03.140" endtime="20230919 02:29:03.141"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>datanode_3</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230919 02:29:03.141" endtime="20230919 02:29:03.141"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/clusterState</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230919 02:29:03.146" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/clusterState 2&gt;&amp;1'.</msg>
<msg timestamp="20230919 02:29:03.207" level="INFO">${rc} = 0</msg>
<msg timestamp="20230919 02:29:03.207" level="INFO">${output} = {"deletedDirs":0,"pipelines":9,"totalDatanodes":6,"healthyDatanodes":6,"storageReport":{"capacity":535783858176,"used":86046,"remaining":91951841280},"containers":3,"missingContainers":0,"openContaine...</msg>
<status status="PASS" starttime="20230919 02:29:03.143" endtime="20230919 02:29:03.207"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230919 02:29:03.209" level="INFO">{"deletedDirs":0,"pipelines":9,"totalDatanodes":6,"healthyDatanodes":6,"storageReport":{"capacity":535783858176,"used":86046,"remaining":91951841280},"containers":3,"missingContainers":0,"openContainers":3,"deletedContainers":0,"volumes":3,"buckets":2,"keys":11,"keysPendingDeletion":0}</msg>
<status status="PASS" starttime="20230919 02:29:03.208" endtime="20230919 02:29:03.209"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230919 02:29:03.210" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230919 02:29:03.209" endtime="20230919 02:29:03.210"/>
</kw>
<status status="PASS" starttime="20230919 02:29:03.143" endtime="20230919 02:29:03.210"/>
</kw>
<msg timestamp="20230919 02:29:03.211" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230919 02:29:03.142" endtime="20230919 02:29:03.211"/>
</kw>
<msg timestamp="20230919 02:29:03.211" level="INFO">${result} = {"deletedDirs":0,"pipelines":9,"totalDatanodes":6,"healthyDatanodes":6,"storageReport":{"capacity":535783858176,"used":86046,"remaining":91951841280},"containers":3,"missingContainers":0,"openContaine...</msg>
<status status="PASS" starttime="20230919 02:29:03.142" endtime="20230919 02:29:03.211"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"totalDatanodes\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230919 02:29:03.211" endtime="20230919 02:29:03.211"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"healthyDatanodes\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230919 02:29:03.212" endtime="20230919 02:29:03.212"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"pipelines\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230919 02:29:03.212" endtime="20230919 02:29:03.213"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/containers/1/replicaHistory</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230919 02:29:03.217" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/containers/1/replicaHistory 2&gt;&amp;1'.</msg>
<msg timestamp="20230919 02:29:03.239" level="INFO">${rc} = 0</msg>
<msg timestamp="20230919 02:29:03.239" level="INFO">${output} = [{"containerId":1,"datanodeUuid":"e07d9ba1-7585-40f0-b4fa-930839b4b169","datanodeHost":"ozone-topology_datanode_4_1.ozone-topology_net","firstSeenTime":1695090459714,"lastSeenTime":1695090459714,"stat...</msg>
<status status="PASS" starttime="20230919 02:29:03.214" endtime="20230919 02:29:03.239"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230919 02:29:03.240" level="INFO">[{"containerId":1,"datanodeUuid":"e07d9ba1-7585-40f0-b4fa-930839b4b169","datanodeHost":"ozone-topology_datanode_4_1.ozone-topology_net","firstSeenTime":1695090459714,"lastSeenTime":1695090459714,"state":"OPEN","lastBcsId":0},{"containerId":1,"datanodeUuid":"e5975141-1726-4ade-a1a2-a3be8466ccca","datanodeHost":"ozone-topology_datanode_3_1.ozone-topology_net","firstSeenTime":1695090459490,"lastSeenTime":1695090459490,"state":"OPEN","lastBcsId":0},{"containerId":1,"datanodeUuid":"4aefacdb-572e-414b-9683-8ef48edf1897","datanodeHost":"ozone-topology_datanode_1_1.ozone-topology_net","firstSeenTime":1695090459729,"lastSeenTime":1695090459729,"state":"OPEN","lastBcsId":0}]</msg>
<status status="PASS" starttime="20230919 02:29:03.240" endtime="20230919 02:29:03.241"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230919 02:29:03.241" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230919 02:29:03.241" endtime="20230919 02:29:03.241"/>
</kw>
<status status="PASS" starttime="20230919 02:29:03.214" endtime="20230919 02:29:03.242"/>
</kw>
<msg timestamp="20230919 02:29:03.242" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230919 02:29:03.213" endtime="20230919 02:29:03.242"/>
</kw>
<msg timestamp="20230919 02:29:03.242" level="INFO">${result} = [{"containerId":1,"datanodeUuid":"e07d9ba1-7585-40f0-b4fa-930839b4b169","datanodeHost":"ozone-topology_datanode_4_1.ozone-topology_net","firstSeenTime":1695090459714,"lastSeenTime":1695090459714,"stat...</msg>
<status status="PASS" starttime="20230919 02:29:03.213" endtime="20230919 02:29:03.242"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"containerId\":1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230919 02:29:03.242" endtime="20230919 02:29:03.243"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230919 02:29:03.031" endtime="20230919 02:29:03.243"/>
</test>
<test id="s1-s3-s1-t3" name="Check if Recon Web UI is up" line="94">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230919 02:29:03.245" endtime="20230919 02:29:03.245"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${ENDPOINT_URL}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230919 02:29:03.249" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888 2&gt;&amp;1'.</msg>
<msg timestamp="20230919 02:29:03.269" level="INFO">${rc} = 0</msg>
<msg timestamp="20230919 02:29:03.269" level="INFO">${output} = &lt;!doctype html&gt;&lt;html lang="en"&gt;&lt;head&gt;&lt;meta charset="utf-8"/&gt;&lt;link rel="shortcut icon" href="/favicon.ico"/&gt;&lt;meta name="viewport" content="width=device-width,initial-scale=1"/&gt;&lt;meta name="theme-color" ...</msg>
<status status="PASS" starttime="20230919 02:29:03.247" endtime="20230919 02:29:03.269"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230919 02:29:03.270" level="INFO">&lt;!doctype html&gt;&lt;html lang="en"&gt;&lt;head&gt;&lt;meta charset="utf-8"/&gt;&lt;link rel="shortcut icon" href="/favicon.ico"/&gt;&lt;meta name="viewport" content="width=device-width,initial-scale=1"/&gt;&lt;meta name="theme-color" content="#000000"/&gt;&lt;link rel="manifest" href="/manifest.json"/&gt;&lt;title&gt;Ozone Recon&lt;/title&gt;&lt;link href="/static/css/2.58b4e004.chunk.css" rel="stylesheet"&gt;&lt;link href="/static/css/main.95934262.chunk.css" rel="stylesheet"&gt;&lt;/head&gt;&lt;body&gt;&lt;noscript&gt;You need to enable JavaScript to run this app.&lt;/noscript&gt;&lt;div id="root"&gt;&lt;/div&gt;&lt;script&gt;!function(e){function r(r){for(var n,l,f=r[0],i=r[1],a=r[2],p=0,s=[];p&lt;f.length;p++)l=f[p],Object.prototype.hasOwnProperty.call(o,l)&amp;&amp;o[l]&amp;&amp;s.push(o[l][0]),o[l]=0;for(n in i)Object.prototype.hasOwnProperty.call(i,n)&amp;&amp;(e[n]=i[n]);for(c&amp;&amp;c(r);s.length;)s.shift()();return u.push.apply(u,a||[]),t()}function t(){for(var e,r=0;r&lt;u.length;r++){for(var t=u[r],n=!0,f=1;f&lt;t.length;f++){var i=t[f];0!==o[i]&amp;&amp;(n=!1)}n&amp;&amp;(u.splice(r--,1),e=l(l.s=t[0]))}return e}var n={},o={1:0},u=[];function l(r){if(n[r])return n[r].exports;var t=n[r]={i:r,l:!1,exports:{}};return e[r].call(t.exports,t,t.exports,l),t.l=!0,t.exports}l.m=e,l.c=n,l.d=function(e,r,t){l.o(e,r)||Object.defineProperty(e,r,{enumerable:!0,get:t})},l.r=function(e){"undefined"!=typeof Symbol&amp;&amp;Symbol.toStringTag&amp;&amp;Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},l.t=function(e,r){if(1&amp;r&amp;&amp;(e=l(e)),8&amp;r)return e;if(4&amp;r&amp;&amp;"object"==typeof e&amp;&amp;e&amp;&amp;e.__esModule)return e;var t=Object.create(null);if(l.r(t),Object.defineProperty(t,"default",{enumerable:!0,value:e}),2&amp;r&amp;&amp;"string"!=typeof e)for(var n in e)l.d(t,n,function(r){return e[r]}.bind(null,n));return t},l.n=function(e){var r=e&amp;&amp;e.__esModule?function(){return e.default}:function(){return e};return l.d(r,"a",r),r},l.o=function(e,r){return Object.prototype.hasOwnProperty.call(e,r)},l.p="/";var f=this["webpackJsonpozone-recon"]=this["webpackJsonpozone-recon"]||[],i=f.push.bind(f);f.push=r,f=f.slice();for(var a=0;a&lt;f.length;a++)r(f[a]);var c=i;t()}([])&lt;/script&gt;&lt;script src="/static/js/2.60ad2f10.chunk.js"&gt;&lt;/script&gt;&lt;script src="/static/js/main.10bea825.chunk.js"&gt;&lt;/script&gt;&lt;/body&gt;&lt;/html&gt;</msg>
<status status="PASS" starttime="20230919 02:29:03.269" endtime="20230919 02:29:03.270"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230919 02:29:03.271" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230919 02:29:03.270" endtime="20230919 02:29:03.271"/>
</kw>
<status status="PASS" starttime="20230919 02:29:03.246" endtime="20230919 02:29:03.271"/>
</kw>
<msg timestamp="20230919 02:29:03.271" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230919 02:29:03.246" endtime="20230919 02:29:03.272"/>
</kw>
<msg timestamp="20230919 02:29:03.272" level="INFO">${result} = &lt;!doctype html&gt;&lt;html lang="en"&gt;&lt;head&gt;&lt;meta charset="utf-8"/&gt;&lt;link rel="shortcut icon" href="/favicon.ico"/&gt;&lt;meta name="viewport" content="width=device-width,initial-scale=1"/&gt;&lt;meta name="theme-color" ...</msg>
<status status="PASS" starttime="20230919 02:29:03.245" endtime="20230919 02:29:03.272"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Ozone Recon</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230919 02:29:03.272" endtime="20230919 02:29:03.273"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230919 02:29:03.244" endtime="20230919 02:29:03.273"/>
</test>
<test id="s1-s3-s1-t4" name="Check web UI access" line="99">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230919 02:29:03.278" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20230919 02:29:03.284" level="INFO">${rc} = 0</msg>
<msg timestamp="20230919 02:29:03.284" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230919 02:29:03.276" endtime="20230919 02:29:03.284"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230919 02:29:03.285" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230919 02:29:03.285" endtime="20230919 02:29:03.285"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230919 02:29:03.286" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230919 02:29:03.285" endtime="20230919 02:29:03.286"/>
</kw>
<status status="PASS" starttime="20230919 02:29:03.275" endtime="20230919 02:29:03.286"/>
</kw>
<msg timestamp="20230919 02:29:03.286" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230919 02:29:03.275" endtime="20230919 02:29:03.286"/>
</kw>
<status status="PASS" starttime="20230919 02:29:03.274" endtime="20230919 02:29:03.287"/>
</kw>
<kw name="Check http return code">
<arg>${ENDPOINT_URL}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230919 02:29:03.291" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888 2&gt;&amp;1'.</msg>
<msg timestamp="20230919 02:29:03.305" level="INFO">${rc} = 0</msg>
<msg timestamp="20230919 02:29:03.305" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230919 02:29:03.289" endtime="20230919 02:29:03.305"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230919 02:29:03.306" level="INFO">200</msg>
<status status="PASS" starttime="20230919 02:29:03.305" endtime="20230919 02:29:03.306"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230919 02:29:03.307" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230919 02:29:03.306" endtime="20230919 02:29:03.307"/>
</kw>
<status status="PASS" starttime="20230919 02:29:03.289" endtime="20230919 02:29:03.307"/>
</kw>
<msg timestamp="20230919 02:29:03.307" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230919 02:29:03.288" endtime="20230919 02:29:03.307"/>
</kw>
<msg timestamp="20230919 02:29:03.307" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230919 02:29:03.287" endtime="20230919 02:29:03.307"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230919 02:29:03.308" endtime="20230919 02:29:03.308"/>
</kw>
<status status="NOT RUN" starttime="20230919 02:29:03.307" endtime="20230919 02:29:03.308"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230919 02:29:03.308" endtime="20230919 02:29:03.309"/>
</kw>
<status status="PASS" starttime="20230919 02:29:03.308" endtime="20230919 02:29:03.309"/>
</branch>
<status status="PASS" starttime="20230919 02:29:03.307" endtime="20230919 02:29:03.309"/>
</if>
<status status="PASS" starttime="20230919 02:29:03.287" endtime="20230919 02:29:03.309"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230919 02:29:03.309" endtime="20230919 02:29:03.310"/>
</kw>
<status status="PASS" starttime="20230919 02:29:03.309" endtime="20230919 02:29:03.310"/>
</kw>
<kw name="Check http return code">
<arg>${ENDPOINT_URL}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230919 02:29:03.314" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888 2&gt;&amp;1'.</msg>
<msg timestamp="20230919 02:29:03.327" level="INFO">${rc} = 0</msg>
<msg timestamp="20230919 02:29:03.327" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230919 02:29:03.312" endtime="20230919 02:29:03.327"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230919 02:29:03.328" level="INFO">200</msg>
<status status="PASS" starttime="20230919 02:29:03.327" endtime="20230919 02:29:03.328"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230919 02:29:03.328" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230919 02:29:03.328" endtime="20230919 02:29:03.329"/>
</kw>
<status status="PASS" starttime="20230919 02:29:03.311" endtime="20230919 02:29:03.329"/>
</kw>
<msg timestamp="20230919 02:29:03.329" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230919 02:29:03.311" endtime="20230919 02:29:03.329"/>
</kw>
<msg timestamp="20230919 02:29:03.329" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230919 02:29:03.310" endtime="20230919 02:29:03.329"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230919 02:29:03.330" endtime="20230919 02:29:03.330"/>
</kw>
<status status="NOT RUN" starttime="20230919 02:29:03.329" endtime="20230919 02:29:03.330"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230919 02:29:03.330" endtime="20230919 02:29:03.330"/>
</kw>
<status status="PASS" starttime="20230919 02:29:03.330" endtime="20230919 02:29:03.330"/>
</branch>
<status status="PASS" starttime="20230919 02:29:03.329" endtime="20230919 02:29:03.331"/>
</if>
<status status="PASS" starttime="20230919 02:29:03.310" endtime="20230919 02:29:03.331"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230919 02:29:03.274" endtime="20230919 02:29:03.331"/>
</test>
<test id="s1-s3-s1-t5" name="Check admin only api access" line="107">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230919 02:29:03.336" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20230919 02:29:03.339" level="INFO">${rc} = 0</msg>
<msg timestamp="20230919 02:29:03.339" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230919 02:29:03.333" endtime="20230919 02:29:03.339"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230919 02:29:03.340" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230919 02:29:03.339" endtime="20230919 02:29:03.340"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230919 02:29:03.340" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230919 02:29:03.340" endtime="20230919 02:29:03.340"/>
</kw>
<status status="PASS" starttime="20230919 02:29:03.333" endtime="20230919 02:29:03.341"/>
</kw>
<msg timestamp="20230919 02:29:03.341" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230919 02:29:03.333" endtime="20230919 02:29:03.341"/>
</kw>
<status status="PASS" starttime="20230919 02:29:03.332" endtime="20230919 02:29:03.341"/>
</kw>
<kw name="Check http return code">
<arg>${ADMIN_API_ENDPOINT_URL}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230919 02:29:03.346" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20230919 02:29:03.359" level="INFO">${rc} = 0</msg>
<msg timestamp="20230919 02:29:03.359" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230919 02:29:03.343" endtime="20230919 02:29:03.359"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230919 02:29:03.360" level="INFO">200</msg>
<status status="PASS" starttime="20230919 02:29:03.359" endtime="20230919 02:29:03.360"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230919 02:29:03.360" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230919 02:29:03.360" endtime="20230919 02:29:03.361"/>
</kw>
<status status="PASS" starttime="20230919 02:29:03.343" endtime="20230919 02:29:03.361"/>
</kw>
<msg timestamp="20230919 02:29:03.361" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230919 02:29:03.342" endtime="20230919 02:29:03.361"/>
</kw>
<msg timestamp="20230919 02:29:03.361" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230919 02:29:03.342" endtime="20230919 02:29:03.361"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230919 02:29:03.362" endtime="20230919 02:29:03.362"/>
</kw>
<status status="NOT RUN" starttime="20230919 02:29:03.362" endtime="20230919 02:29:03.362"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230919 02:29:03.362" endtime="20230919 02:29:03.363"/>
</kw>
<status status="PASS" starttime="20230919 02:29:03.362" endtime="20230919 02:29:03.363"/>
</branch>
<status status="PASS" starttime="20230919 02:29:03.361" endtime="20230919 02:29:03.363"/>
</if>
<status status="PASS" starttime="20230919 02:29:03.341" endtime="20230919 02:29:03.363"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230919 02:29:03.364" endtime="20230919 02:29:03.364"/>
</kw>
<status status="PASS" starttime="20230919 02:29:03.363" endtime="20230919 02:29:03.364"/>
</kw>
<kw name="Check http return code">
<arg>${ADMIN_API_ENDPOINT_URL}</arg>
<arg>403</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230919 02:29:03.369" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20230919 02:29:03.382" level="INFO">${rc} = 0</msg>
<msg timestamp="20230919 02:29:03.382" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230919 02:29:03.366" endtime="20230919 02:29:03.383"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230919 02:29:03.384" level="INFO">200</msg>
<status status="PASS" starttime="20230919 02:29:03.383" endtime="20230919 02:29:03.384"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230919 02:29:03.384" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230919 02:29:03.384" endtime="20230919 02:29:03.384"/>
</kw>
<status status="PASS" starttime="20230919 02:29:03.366" endtime="20230919 02:29:03.385"/>
</kw>
<msg timestamp="20230919 02:29:03.385" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230919 02:29:03.366" endtime="20230919 02:29:03.385"/>
</kw>
<msg timestamp="20230919 02:29:03.385" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230919 02:29:03.365" endtime="20230919 02:29:03.385"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230919 02:29:03.386" endtime="20230919 02:29:03.386"/>
</kw>
<status status="NOT RUN" starttime="20230919 02:29:03.385" endtime="20230919 02:29:03.386"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230919 02:29:03.386" endtime="20230919 02:29:03.386"/>
</kw>
<status status="PASS" starttime="20230919 02:29:03.386" endtime="20230919 02:29:03.386"/>
</branch>
<status status="PASS" starttime="20230919 02:29:03.385" endtime="20230919 02:29:03.386"/>
</if>
<status status="PASS" starttime="20230919 02:29:03.364" endtime="20230919 02:29:03.386"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230919 02:29:03.390" endtime="20230919 02:29:03.390"/>
</kw>
<status status="PASS" starttime="20230919 02:29:03.387" endtime="20230919 02:29:03.390"/>
</kw>
<kw name="Check http return code">
<arg>${ADMIN_API_ENDPOINT_URL}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230919 02:29:03.401" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20230919 02:29:03.416" level="INFO">${rc} = 0</msg>
<msg timestamp="20230919 02:29:03.416" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230919 02:29:03.398" endtime="20230919 02:29:03.416"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230919 02:29:03.417" level="INFO">200</msg>
<status status="PASS" starttime="20230919 02:29:03.416" endtime="20230919 02:29:03.417"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230919 02:29:03.418" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230919 02:29:03.417" endtime="20230919 02:29:03.418"/>
</kw>
<status status="PASS" starttime="20230919 02:29:03.397" endtime="20230919 02:29:03.418"/>
</kw>
<msg timestamp="20230919 02:29:03.418" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230919 02:29:03.391" endtime="20230919 02:29:03.418"/>
</kw>
<msg timestamp="20230919 02:29:03.418" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230919 02:29:03.391" endtime="20230919 02:29:03.418"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230919 02:29:03.420" endtime="20230919 02:29:03.420"/>
</kw>
<status status="NOT RUN" starttime="20230919 02:29:03.419" endtime="20230919 02:29:03.420"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230919 02:29:03.420" endtime="20230919 02:29:03.420"/>
</kw>
<status status="PASS" starttime="20230919 02:29:03.420" endtime="20230919 02:29:03.420"/>
</branch>
<status status="PASS" starttime="20230919 02:29:03.419" endtime="20230919 02:29:03.422"/>
</if>
<status status="PASS" starttime="20230919 02:29:03.390" endtime="20230919 02:29:03.422"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230919 02:29:03.423" endtime="20230919 02:29:03.423"/>
</kw>
<status status="PASS" starttime="20230919 02:29:03.423" endtime="20230919 02:29:03.424"/>
</kw>
<kw name="Check http return code">
<arg>${ADMIN_API_ENDPOINT_URL}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230919 02:29:03.429" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20230919 02:29:03.443" level="INFO">${rc} = 0</msg>
<msg timestamp="20230919 02:29:03.443" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230919 02:29:03.427" endtime="20230919 02:29:03.443"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230919 02:29:03.444" level="INFO">200</msg>
<status status="PASS" starttime="20230919 02:29:03.444" endtime="20230919 02:29:03.444"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230919 02:29:03.445" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230919 02:29:03.445" endtime="20230919 02:29:03.445"/>
</kw>
<status status="PASS" starttime="20230919 02:29:03.425" endtime="20230919 02:29:03.445"/>
</kw>
<msg timestamp="20230919 02:29:03.445" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230919 02:29:03.425" endtime="20230919 02:29:03.446"/>
</kw>
<msg timestamp="20230919 02:29:03.446" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230919 02:29:03.424" endtime="20230919 02:29:03.446"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230919 02:29:03.447" endtime="20230919 02:29:03.447"/>
</kw>
<status status="NOT RUN" starttime="20230919 02:29:03.446" endtime="20230919 02:29:03.447"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230919 02:29:03.447" endtime="20230919 02:29:03.447"/>
</kw>
<status status="PASS" starttime="20230919 02:29:03.447" endtime="20230919 02:29:03.447"/>
</branch>
<status status="PASS" starttime="20230919 02:29:03.446" endtime="20230919 02:29:03.448"/>
</if>
<status status="PASS" starttime="20230919 02:29:03.424" endtime="20230919 02:29:03.448"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230919 02:29:03.332" endtime="20230919 02:29:03.448"/>
</test>
<test id="s1-s3-s1-t6" name="Check unhealthy, (admin) api access" line="120">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230919 02:29:03.455" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20230919 02:29:03.459" level="INFO">${rc} = 0</msg>
<msg timestamp="20230919 02:29:03.459" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230919 02:29:03.452" endtime="20230919 02:29:03.459"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230919 02:29:03.460" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230919 02:29:03.459" endtime="20230919 02:29:03.460"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230919 02:29:03.461" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230919 02:29:03.460" endtime="20230919 02:29:03.461"/>
</kw>
<status status="PASS" starttime="20230919 02:29:03.452" endtime="20230919 02:29:03.461"/>
</kw>
<msg timestamp="20230919 02:29:03.461" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230919 02:29:03.451" endtime="20230919 02:29:03.461"/>
</kw>
<status status="PASS" starttime="20230919 02:29:03.451" endtime="20230919 02:29:03.461"/>
</kw>
<kw name="Check http return code">
<arg>${UNHEALTHY_ENDPOINT_URL}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230919 02:29:03.467" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers/unhealthy 2&gt;&amp;1'.</msg>
<msg timestamp="20230919 02:29:03.530" level="INFO">${rc} = 0</msg>
<msg timestamp="20230919 02:29:03.530" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230919 02:29:03.464" endtime="20230919 02:29:03.530"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230919 02:29:03.532" level="INFO">200</msg>
<status status="PASS" starttime="20230919 02:29:03.531" endtime="20230919 02:29:03.532"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230919 02:29:03.532" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230919 02:29:03.532" endtime="20230919 02:29:03.532"/>
</kw>
<status status="PASS" starttime="20230919 02:29:03.464" endtime="20230919 02:29:03.533"/>
</kw>
<msg timestamp="20230919 02:29:03.533" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230919 02:29:03.463" endtime="20230919 02:29:03.533"/>
</kw>
<msg timestamp="20230919 02:29:03.533" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230919 02:29:03.462" endtime="20230919 02:29:03.533"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230919 02:29:03.537" endtime="20230919 02:29:03.537"/>
</kw>
<status status="NOT RUN" starttime="20230919 02:29:03.536" endtime="20230919 02:29:03.537"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230919 02:29:03.537" endtime="20230919 02:29:03.537"/>
</kw>
<status status="PASS" starttime="20230919 02:29:03.537" endtime="20230919 02:29:03.537"/>
</branch>
<status status="PASS" starttime="20230919 02:29:03.536" endtime="20230919 02:29:03.538"/>
</if>
<status status="PASS" starttime="20230919 02:29:03.462" endtime="20230919 02:29:03.538"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230919 02:29:03.539" endtime="20230919 02:29:03.539"/>
</kw>
<status status="PASS" starttime="20230919 02:29:03.538" endtime="20230919 02:29:03.539"/>
</kw>
<kw name="Check http return code">
<arg>${UNHEALTHY_ENDPOINT_URL}</arg>
<arg>403</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230919 02:29:03.545" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers/unhealthy 2&gt;&amp;1'.</msg>
<msg timestamp="20230919 02:29:03.563" level="INFO">${rc} = 0</msg>
<msg timestamp="20230919 02:29:03.563" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230919 02:29:03.542" endtime="20230919 02:29:03.563"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230919 02:29:03.564" level="INFO">200</msg>
<status status="PASS" starttime="20230919 02:29:03.564" endtime="20230919 02:29:03.565"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230919 02:29:03.565" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230919 02:29:03.565" endtime="20230919 02:29:03.565"/>
</kw>
<status status="PASS" starttime="20230919 02:29:03.541" endtime="20230919 02:29:03.566"/>
</kw>
<msg timestamp="20230919 02:29:03.566" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230919 02:29:03.540" endtime="20230919 02:29:03.566"/>
</kw>
<msg timestamp="20230919 02:29:03.566" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230919 02:29:03.540" endtime="20230919 02:29:03.566"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230919 02:29:03.567" endtime="20230919 02:29:03.567"/>
</kw>
<status status="NOT RUN" starttime="20230919 02:29:03.567" endtime="20230919 02:29:03.567"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230919 02:29:03.567" endtime="20230919 02:29:03.568"/>
</kw>
<status status="PASS" starttime="20230919 02:29:03.567" endtime="20230919 02:29:03.568"/>
</branch>
<status status="PASS" starttime="20230919 02:29:03.567" endtime="20230919 02:29:03.568"/>
</if>
<status status="PASS" starttime="20230919 02:29:03.539" endtime="20230919 02:29:03.568"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230919 02:29:03.569" endtime="20230919 02:29:03.569"/>
</kw>
<status status="PASS" starttime="20230919 02:29:03.568" endtime="20230919 02:29:03.570"/>
</kw>
<kw name="Check http return code">
<arg>${UNHEALTHY_ENDPOINT_URL}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230919 02:29:03.575" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers/unhealthy 2&gt;&amp;1'.</msg>
<msg timestamp="20230919 02:29:03.610" level="INFO">${rc} = 0</msg>
<msg timestamp="20230919 02:29:03.610" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230919 02:29:03.572" endtime="20230919 02:29:03.610"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230919 02:29:03.611" level="INFO">200</msg>
<status status="PASS" starttime="20230919 02:29:03.610" endtime="20230919 02:29:03.611"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230919 02:29:03.612" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230919 02:29:03.611" endtime="20230919 02:29:03.612"/>
</kw>
<status status="PASS" starttime="20230919 02:29:03.571" endtime="20230919 02:29:03.612"/>
</kw>
<msg timestamp="20230919 02:29:03.612" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230919 02:29:03.571" endtime="20230919 02:29:03.612"/>
</kw>
<msg timestamp="20230919 02:29:03.612" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230919 02:29:03.570" endtime="20230919 02:29:03.612"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230919 02:29:03.613" endtime="20230919 02:29:03.613"/>
</kw>
<status status="NOT RUN" starttime="20230919 02:29:03.613" endtime="20230919 02:29:03.613"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230919 02:29:03.613" endtime="20230919 02:29:03.614"/>
</kw>
<status status="PASS" starttime="20230919 02:29:03.613" endtime="20230919 02:29:03.614"/>
</branch>
<status status="PASS" starttime="20230919 02:29:03.613" endtime="20230919 02:29:03.614"/>
</if>
<status status="PASS" starttime="20230919 02:29:03.570" endtime="20230919 02:29:03.614"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230919 02:29:03.615" endtime="20230919 02:29:03.616"/>
</kw>
<status status="PASS" starttime="20230919 02:29:03.615" endtime="20230919 02:29:03.616"/>
</kw>
<kw name="Check http return code">
<arg>${UNHEALTHY_ENDPOINT_URL}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230919 02:29:03.621" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers/unhealthy 2&gt;&amp;1'.</msg>
<msg timestamp="20230919 02:29:03.637" level="INFO">${rc} = 0</msg>
<msg timestamp="20230919 02:29:03.637" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230919 02:29:03.618" endtime="20230919 02:29:03.637"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230919 02:29:03.638" level="INFO">200</msg>
<status status="PASS" starttime="20230919 02:29:03.638" endtime="20230919 02:29:03.638"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230919 02:29:03.639" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230919 02:29:03.639" endtime="20230919 02:29:03.639"/>
</kw>
<status status="PASS" starttime="20230919 02:29:03.618" endtime="20230919 02:29:03.639"/>
</kw>
<msg timestamp="20230919 02:29:03.639" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230919 02:29:03.617" endtime="20230919 02:29:03.640"/>
</kw>
<msg timestamp="20230919 02:29:03.640" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230919 02:29:03.617" endtime="20230919 02:29:03.640"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230919 02:29:03.641" endtime="20230919 02:29:03.641"/>
</kw>
<status status="NOT RUN" starttime="20230919 02:29:03.640" endtime="20230919 02:29:03.641"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230919 02:29:03.641" endtime="20230919 02:29:03.641"/>
</kw>
<status status="PASS" starttime="20230919 02:29:03.641" endtime="20230919 02:29:03.641"/>
</branch>
<status status="PASS" starttime="20230919 02:29:03.640" endtime="20230919 02:29:03.641"/>
</if>
<status status="PASS" starttime="20230919 02:29:03.616" endtime="20230919 02:29:03.641"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230919 02:29:03.450" endtime="20230919 02:29:03.642"/>
</test>
<test id="s1-s3-s1-t7" name="Check normal api access" line="133">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230919 02:29:03.649" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20230919 02:29:03.652" level="INFO">${rc} = 0</msg>
<msg timestamp="20230919 02:29:03.652" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230919 02:29:03.646" endtime="20230919 02:29:03.652"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230919 02:29:03.653" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230919 02:29:03.653" endtime="20230919 02:29:03.653"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230919 02:29:03.654" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230919 02:29:03.654" endtime="20230919 02:29:03.654"/>
</kw>
<status status="PASS" starttime="20230919 02:29:03.645" endtime="20230919 02:29:03.655"/>
</kw>
<msg timestamp="20230919 02:29:03.655" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230919 02:29:03.645" endtime="20230919 02:29:03.655"/>
</kw>
<status status="PASS" starttime="20230919 02:29:03.644" endtime="20230919 02:29:03.655"/>
</kw>
<kw name="Check http return code">
<arg>${NON_ADMIN_API_ENDPOINT_URL}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230919 02:29:03.660" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/clusterState 2&gt;&amp;1'.</msg>
<msg timestamp="20230919 02:29:03.687" level="INFO">${rc} = 0</msg>
<msg timestamp="20230919 02:29:03.687" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230919 02:29:03.657" endtime="20230919 02:29:03.687"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230919 02:29:03.688" level="INFO">200</msg>
<status status="PASS" starttime="20230919 02:29:03.687" endtime="20230919 02:29:03.689"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230919 02:29:03.689" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230919 02:29:03.689" endtime="20230919 02:29:03.689"/>
</kw>
<status status="PASS" starttime="20230919 02:29:03.657" endtime="20230919 02:29:03.690"/>
</kw>
<msg timestamp="20230919 02:29:03.690" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230919 02:29:03.656" endtime="20230919 02:29:03.690"/>
</kw>
<msg timestamp="20230919 02:29:03.690" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230919 02:29:03.656" endtime="20230919 02:29:03.690"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230919 02:29:03.691" endtime="20230919 02:29:03.691"/>
</kw>
<status status="NOT RUN" starttime="20230919 02:29:03.690" endtime="20230919 02:29:03.691"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230919 02:29:03.691" endtime="20230919 02:29:03.691"/>
</kw>
<status status="PASS" starttime="20230919 02:29:03.691" endtime="20230919 02:29:03.691"/>
</branch>
<status status="PASS" starttime="20230919 02:29:03.690" endtime="20230919 02:29:03.692"/>
</if>
<status status="PASS" starttime="20230919 02:29:03.655" endtime="20230919 02:29:03.692"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230919 02:29:03.692" endtime="20230919 02:29:03.693"/>
</kw>
<status status="PASS" starttime="20230919 02:29:03.692" endtime="20230919 02:29:03.693"/>
</kw>
<kw name="Check http return code">
<arg>${NON_ADMIN_API_ENDPOINT_URL}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230919 02:29:03.698" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/clusterState 2&gt;&amp;1'.</msg>
<msg timestamp="20230919 02:29:03.724" level="INFO">${rc} = 0</msg>
<msg timestamp="20230919 02:29:03.724" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230919 02:29:03.695" endtime="20230919 02:29:03.724"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230919 02:29:03.726" level="INFO">200</msg>
<status status="PASS" starttime="20230919 02:29:03.725" endtime="20230919 02:29:03.726"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230919 02:29:03.727" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230919 02:29:03.726" endtime="20230919 02:29:03.730"/>
</kw>
<status status="PASS" starttime="20230919 02:29:03.695" endtime="20230919 02:29:03.731"/>
</kw>
<msg timestamp="20230919 02:29:03.731" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230919 02:29:03.694" endtime="20230919 02:29:03.731"/>
</kw>
<msg timestamp="20230919 02:29:03.731" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230919 02:29:03.694" endtime="20230919 02:29:03.731"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230919 02:29:03.732" endtime="20230919 02:29:03.732"/>
</kw>
<status status="NOT RUN" starttime="20230919 02:29:03.731" endtime="20230919 02:29:03.732"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230919 02:29:03.732" endtime="20230919 02:29:03.732"/>
</kw>
<status status="PASS" starttime="20230919 02:29:03.732" endtime="20230919 02:29:03.732"/>
</branch>
<status status="PASS" starttime="20230919 02:29:03.731" endtime="20230919 02:29:03.732"/>
</if>
<status status="PASS" starttime="20230919 02:29:03.693" endtime="20230919 02:29:03.733"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230919 02:29:03.643" endtime="20230919 02:29:03.733"/>
</test>
<doc>Smoke test to start cluster with docker-compose environments.</doc>
<status status="PASS" starttime="20230919 02:28:13.753" endtime="20230919 02:29:03.736"/>
</suite>
<suite id="s1-s3-s2" name="Recon-Nssummary" source="/opt/hadoop/smoketest/recon/recon-nssummary.robot">
<test id="s1-s3-s2-t1" name="Check volume creation" line="99">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230919 02:29:03.754" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20230919 02:29:03.758" level="INFO">${rc} = 0</msg>
<msg timestamp="20230919 02:29:03.758" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230919 02:29:03.752" endtime="20230919 02:29:03.758"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230919 02:29:03.759" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230919 02:29:03.759" endtime="20230919 02:29:03.759"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230919 02:29:03.760" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230919 02:29:03.759" endtime="20230919 02:29:03.760"/>
</kw>
<status status="PASS" starttime="20230919 02:29:03.751" endtime="20230919 02:29:03.760"/>
</kw>
<msg timestamp="20230919 02:29:03.760" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230919 02:29:03.751" endtime="20230919 02:29:03.760"/>
</kw>
<status status="PASS" starttime="20230919 02:29:03.750" endtime="20230919 02:29:03.761"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230919 02:29:03.761" endtime="20230919 02:29:03.762"/>
</kw>
<status status="PASS" starttime="20230919 02:29:03.761" endtime="20230919 02:29:03.762"/>
</kw>
<kw name="Create volume">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[LOWER]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230919 02:29:03.763" level="INFO">${random} = tiyuy</msg>
<status status="PASS" starttime="20230919 02:29:03.762" endtime="20230919 02:29:03.763"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${VOLUME}</arg>
<arg>vol-${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230919 02:29:03.764" level="INFO">${VOLUME} = vol-tiyuy</msg>
<status status="PASS" starttime="20230919 02:29:03.763" endtime="20230919 02:29:03.764"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create /${VOLUME}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230919 02:29:03.768" level="INFO">Running command 'ozone sh volume create /vol-tiyuy 2&gt;&amp;1'.</msg>
<msg timestamp="20230919 02:29:08.236" level="INFO">${rc} = 0</msg>
<msg timestamp="20230919 02:29:08.236" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230919 02:29:03.765" endtime="20230919 02:29:08.236"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230919 02:29:08.237" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230919 02:29:08.236" endtime="20230919 02:29:08.237"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230919 02:29:08.238" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230919 02:29:08.238" endtime="20230919 02:29:08.238"/>
</kw>
<status status="PASS" starttime="20230919 02:29:03.765" endtime="20230919 02:29:08.239"/>
</kw>
<msg timestamp="20230919 02:29:08.239" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230919 02:29:03.764" endtime="20230919 02:29:08.239"/>
</kw>
<msg timestamp="20230919 02:29:08.239" level="INFO">${result} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230919 02:29:03.764" endtime="20230919 02:29:08.239"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230919 02:29:08.239" endtime="20230919 02:29:08.240"/>
</kw>
<status status="PASS" starttime="20230919 02:29:03.762" endtime="20230919 02:29:08.240"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230919 02:29:03.749" endtime="20230919 02:29:08.240"/>
</test>
<test id="s1-s3-s2-t2" name="Check bucket creation" line="104">
<kw name="Create bucket">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[LOWER]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230919 02:29:08.243" level="INFO">${random} = abwuv</msg>
<status status="PASS" starttime="20230919 02:29:08.243" endtime="20230919 02:29:08.243"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${BUCKET}</arg>
<arg>buc-${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230919 02:29:08.244" level="INFO">${BUCKET} = buc-abwuv</msg>
<status status="PASS" starttime="20230919 02:29:08.243" endtime="20230919 02:29:08.244"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket create -l ${BUCKET_LAYOUT} /${VOLUME}/${BUCKET}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230919 02:29:08.248" level="INFO">Running command 'ozone sh bucket create -l FILE_SYSTEM_OPTIMIZED /vol-tiyuy/buc-abwuv 2&gt;&amp;1'.</msg>
<msg timestamp="20230919 02:29:12.343" level="INFO">${rc} = 0</msg>
<msg timestamp="20230919 02:29:12.343" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230919 02:29:08.245" endtime="20230919 02:29:12.343"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230919 02:29:12.344" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230919 02:29:12.343" endtime="20230919 02:29:12.344"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230919 02:29:12.345" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230919 02:29:12.345" endtime="20230919 02:29:12.345"/>
</kw>
<status status="PASS" starttime="20230919 02:29:08.245" endtime="20230919 02:29:12.345"/>
</kw>
<msg timestamp="20230919 02:29:12.345" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230919 02:29:08.245" endtime="20230919 02:29:12.346"/>
</kw>
<msg timestamp="20230919 02:29:12.346" level="INFO">${result} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230919 02:29:08.244" endtime="20230919 02:29:12.346"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230919 02:29:12.346" endtime="20230919 02:29:12.346"/>
</kw>
<status status="PASS" starttime="20230919 02:29:08.242" endtime="20230919 02:29:12.346"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230919 02:29:08.241" endtime="20230919 02:29:12.347"/>
</test>
<test id="s1-s3-s2-t3" name="Check keys creation" line="107">
<kw name="Create keys">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key put /${VOLUME}/${BUCKET}/file1 README.md</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230919 02:29:12.354" level="INFO">Running command 'ozone sh key put /vol-tiyuy/buc-abwuv/file1 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20230919 02:29:19.146" level="INFO">${rc} = 0</msg>
<msg timestamp="20230919 02:29:19.146" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230919 02:29:12.350" endtime="20230919 02:29:19.146"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230919 02:29:19.148" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230919 02:29:19.147" endtime="20230919 02:29:19.148"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230919 02:29:19.149" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230919 02:29:19.148" endtime="20230919 02:29:19.149"/>
</kw>
<status status="PASS" starttime="20230919 02:29:12.350" endtime="20230919 02:29:19.149"/>
</kw>
<msg timestamp="20230919 02:29:19.149" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230919 02:29:12.349" endtime="20230919 02:29:19.149"/>
</kw>
<msg timestamp="20230919 02:29:19.149" level="INFO">${result} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230919 02:29:12.349" endtime="20230919 02:29:19.149"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230919 02:29:19.150" endtime="20230919 02:29:19.150"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key put /${VOLUME}/${BUCKET}/dir1/dir2/file2 HISTORY.md</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230919 02:29:19.154" level="INFO">Running command 'ozone sh key put /vol-tiyuy/buc-abwuv/dir1/dir2/file2 HISTORY.md 2&gt;&amp;1'.</msg>
<msg timestamp="20230919 02:29:25.467" level="INFO">${rc} = 0</msg>
<msg timestamp="20230919 02:29:25.467" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230919 02:29:19.152" endtime="20230919 02:29:25.467"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230919 02:29:25.468" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230919 02:29:25.467" endtime="20230919 02:29:25.468"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230919 02:29:25.469" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230919 02:29:25.469" endtime="20230919 02:29:25.469"/>
</kw>
<status status="PASS" starttime="20230919 02:29:19.151" endtime="20230919 02:29:25.469"/>
</kw>
<msg timestamp="20230919 02:29:25.470" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230919 02:29:19.151" endtime="20230919 02:29:25.470"/>
</kw>
<msg timestamp="20230919 02:29:25.470" level="INFO">${result} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230919 02:29:19.150" endtime="20230919 02:29:25.470"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230919 02:29:25.470" endtime="20230919 02:29:25.470"/>
</kw>
<status status="PASS" starttime="20230919 02:29:12.348" endtime="20230919 02:29:25.470"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230919 02:29:12.348" endtime="20230919 02:29:25.471"/>
</test>
<test id="s1-s3-s2-t4" name="Check Summary api access" line="110">
<kw name="Check Access">
<arg>${SUMMARY_URL}?path=/</arg>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230919 02:29:25.477" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20230919 02:29:25.481" level="INFO">${rc} = 0</msg>
<msg timestamp="20230919 02:29:25.481" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230919 02:29:25.475" endtime="20230919 02:29:25.481"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230919 02:29:25.482" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230919 02:29:25.482" endtime="20230919 02:29:25.483"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230919 02:29:25.483" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230919 02:29:25.483" endtime="20230919 02:29:25.483"/>
</kw>
<status status="PASS" starttime="20230919 02:29:25.474" endtime="20230919 02:29:25.484"/>
</kw>
<msg timestamp="20230919 02:29:25.484" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230919 02:29:25.474" endtime="20230919 02:29:25.484"/>
</kw>
<status status="PASS" starttime="20230919 02:29:25.473" endtime="20230919 02:29:25.484"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230919 02:29:25.501" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230919 02:29:25.568" level="INFO">${rc} = 0</msg>
<msg timestamp="20230919 02:29:25.568" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230919 02:29:25.496" endtime="20230919 02:29:25.568"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230919 02:29:25.570" level="INFO">200</msg>
<status status="PASS" starttime="20230919 02:29:25.569" endtime="20230919 02:29:25.570"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230919 02:29:25.571" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230919 02:29:25.570" endtime="20230919 02:29:25.571"/>
</kw>
<status status="PASS" starttime="20230919 02:29:25.494" endtime="20230919 02:29:25.571"/>
</kw>
<msg timestamp="20230919 02:29:25.571" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230919 02:29:25.485" endtime="20230919 02:29:25.572"/>
</kw>
<msg timestamp="20230919 02:29:25.572" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230919 02:29:25.485" endtime="20230919 02:29:25.572"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230919 02:29:25.573" endtime="20230919 02:29:25.573"/>
</kw>
<status status="NOT RUN" starttime="20230919 02:29:25.572" endtime="20230919 02:29:25.573"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230919 02:29:25.573" endtime="20230919 02:29:25.573"/>
</kw>
<status status="PASS" starttime="20230919 02:29:25.573" endtime="20230919 02:29:25.573"/>
</branch>
<status status="PASS" starttime="20230919 02:29:25.572" endtime="20230919 02:29:25.573"/>
</if>
<status status="PASS" starttime="20230919 02:29:25.484" endtime="20230919 02:29:25.574"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230919 02:29:25.574" endtime="20230919 02:29:25.575"/>
</kw>
<status status="PASS" starttime="20230919 02:29:25.574" endtime="20230919 02:29:25.575"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>403</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230919 02:29:25.594" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230919 02:29:25.610" level="INFO">${rc} = 0</msg>
<msg timestamp="20230919 02:29:25.610" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230919 02:29:25.591" endtime="20230919 02:29:25.610"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230919 02:29:25.611" level="INFO">200</msg>
<status status="PASS" starttime="20230919 02:29:25.611" endtime="20230919 02:29:25.611"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230919 02:29:25.612" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230919 02:29:25.611" endtime="20230919 02:29:25.612"/>
</kw>
<status status="PASS" starttime="20230919 02:29:25.591" endtime="20230919 02:29:25.612"/>
</kw>
<msg timestamp="20230919 02:29:25.612" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230919 02:29:25.590" endtime="20230919 02:29:25.612"/>
</kw>
<msg timestamp="20230919 02:29:25.612" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230919 02:29:25.576" endtime="20230919 02:29:25.612"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230919 02:29:25.613" endtime="20230919 02:29:25.613"/>
</kw>
<status status="NOT RUN" starttime="20230919 02:29:25.613" endtime="20230919 02:29:25.613"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230919 02:29:25.613" endtime="20230919 02:29:25.614"/>
</kw>
<status status="PASS" starttime="20230919 02:29:25.613" endtime="20230919 02:29:25.614"/>
</branch>
<status status="PASS" starttime="20230919 02:29:25.613" endtime="20230919 02:29:25.614"/>
</if>
<status status="PASS" starttime="20230919 02:29:25.575" endtime="20230919 02:29:25.614"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230919 02:29:25.614" endtime="20230919 02:29:25.615"/>
</kw>
<status status="PASS" starttime="20230919 02:29:25.614" endtime="20230919 02:29:25.615"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230919 02:29:25.619" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230919 02:29:25.636" level="INFO">${rc} = 0</msg>
<msg timestamp="20230919 02:29:25.636" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230919 02:29:25.617" endtime="20230919 02:29:25.636"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230919 02:29:25.637" level="INFO">200</msg>
<status status="PASS" starttime="20230919 02:29:25.636" endtime="20230919 02:29:25.637"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230919 02:29:25.638" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230919 02:29:25.637" endtime="20230919 02:29:25.638"/>
</kw>
<status status="PASS" starttime="20230919 02:29:25.616" endtime="20230919 02:29:25.638"/>
</kw>
<msg timestamp="20230919 02:29:25.638" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230919 02:29:25.616" endtime="20230919 02:29:25.638"/>
</kw>
<msg timestamp="20230919 02:29:25.638" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230919 02:29:25.616" endtime="20230919 02:29:25.638"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230919 02:29:25.639" endtime="20230919 02:29:25.639"/>
</kw>
<status status="NOT RUN" starttime="20230919 02:29:25.639" endtime="20230919 02:29:25.639"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230919 02:29:25.639" endtime="20230919 02:29:25.640"/>
</kw>
<status status="PASS" starttime="20230919 02:29:25.639" endtime="20230919 02:29:25.640"/>
</branch>
<status status="PASS" starttime="20230919 02:29:25.639" endtime="20230919 02:29:25.640"/>
</if>
<status status="PASS" starttime="20230919 02:29:25.615" endtime="20230919 02:29:25.640"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230919 02:29:25.640" endtime="20230919 02:29:25.641"/>
</kw>
<status status="PASS" starttime="20230919 02:29:25.640" endtime="20230919 02:29:25.641"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230919 02:29:25.645" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230919 02:29:25.660" level="INFO">${rc} = 0</msg>
<msg timestamp="20230919 02:29:25.660" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230919 02:29:25.643" endtime="20230919 02:29:25.660"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230919 02:29:25.661" level="INFO">200</msg>
<status status="PASS" starttime="20230919 02:29:25.660" endtime="20230919 02:29:25.661"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230919 02:29:25.662" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230919 02:29:25.661" endtime="20230919 02:29:25.662"/>
</kw>
<status status="PASS" starttime="20230919 02:29:25.643" endtime="20230919 02:29:25.662"/>
</kw>
<msg timestamp="20230919 02:29:25.662" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230919 02:29:25.642" endtime="20230919 02:29:25.662"/>
</kw>
<msg timestamp="20230919 02:29:25.662" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230919 02:29:25.642" endtime="20230919 02:29:25.662"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230919 02:29:25.663" endtime="20230919 02:29:25.663"/>
</kw>
<status status="NOT RUN" starttime="20230919 02:29:25.663" endtime="20230919 02:29:25.663"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230919 02:29:25.663" endtime="20230919 02:29:25.664"/>
</kw>
<status status="PASS" starttime="20230919 02:29:25.663" endtime="20230919 02:29:25.664"/>
</branch>
<status status="PASS" starttime="20230919 02:29:25.663" endtime="20230919 02:29:25.664"/>
</if>
<status status="PASS" starttime="20230919 02:29:25.641" endtime="20230919 02:29:25.664"/>
</kw>
<status status="PASS" starttime="20230919 02:29:25.473" endtime="20230919 02:29:25.664"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230919 02:29:25.472" endtime="20230919 02:29:25.664"/>
</test>
<test id="s1-s3-s2-t5" name="Check Disk Usage api access" line="113">
<kw name="Check Access">
<arg>${DISK_USAGE_URL}?path=/</arg>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230919 02:29:25.670" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20230919 02:29:25.673" level="INFO">${rc} = 0</msg>
<msg timestamp="20230919 02:29:25.673" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230919 02:29:25.668" endtime="20230919 02:29:25.673"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230919 02:29:25.675" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230919 02:29:25.674" endtime="20230919 02:29:25.675"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230919 02:29:25.675" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230919 02:29:25.675" endtime="20230919 02:29:25.675"/>
</kw>
<status status="PASS" starttime="20230919 02:29:25.667" endtime="20230919 02:29:25.676"/>
</kw>
<msg timestamp="20230919 02:29:25.676" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230919 02:29:25.667" endtime="20230919 02:29:25.676"/>
</kw>
<status status="PASS" starttime="20230919 02:29:25.667" endtime="20230919 02:29:25.676"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230919 02:29:25.680" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/du?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230919 02:29:25.700" level="INFO">${rc} = 0</msg>
<msg timestamp="20230919 02:29:25.701" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230919 02:29:25.678" endtime="20230919 02:29:25.701"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230919 02:29:25.702" level="INFO">200</msg>
<status status="PASS" starttime="20230919 02:29:25.701" endtime="20230919 02:29:25.702"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230919 02:29:25.702" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230919 02:29:25.702" endtime="20230919 02:29:25.702"/>
</kw>
<status status="PASS" starttime="20230919 02:29:25.677" endtime="20230919 02:29:25.703"/>
</kw>
<msg timestamp="20230919 02:29:25.703" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230919 02:29:25.677" endtime="20230919 02:29:25.703"/>
</kw>
<msg timestamp="20230919 02:29:25.703" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230919 02:29:25.677" endtime="20230919 02:29:25.703"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230919 02:29:25.704" endtime="20230919 02:29:25.704"/>
</kw>
<status status="NOT RUN" starttime="20230919 02:29:25.703" endtime="20230919 02:29:25.704"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230919 02:29:25.704" endtime="20230919 02:29:25.704"/>
</kw>
<status status="PASS" starttime="20230919 02:29:25.704" endtime="20230919 02:29:25.704"/>
</branch>
<status status="PASS" starttime="20230919 02:29:25.703" endtime="20230919 02:29:25.704"/>
</if>
<status status="PASS" starttime="20230919 02:29:25.676" endtime="20230919 02:29:25.705"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230919 02:29:25.705" endtime="20230919 02:29:25.706"/>
</kw>
<status status="PASS" starttime="20230919 02:29:25.705" endtime="20230919 02:29:25.706"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>403</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230919 02:29:25.710" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/du?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230919 02:29:25.726" level="INFO">${rc} = 0</msg>
<msg timestamp="20230919 02:29:25.726" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230919 02:29:25.708" endtime="20230919 02:29:25.726"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230919 02:29:25.727" level="INFO">200</msg>
<status status="PASS" starttime="20230919 02:29:25.727" endtime="20230919 02:29:25.727"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230919 02:29:25.728" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230919 02:29:25.728" endtime="20230919 02:29:25.728"/>
</kw>
<status status="PASS" starttime="20230919 02:29:25.708" endtime="20230919 02:29:25.728"/>
</kw>
<msg timestamp="20230919 02:29:25.728" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230919 02:29:25.707" endtime="20230919 02:29:25.729"/>
</kw>
<msg timestamp="20230919 02:29:25.729" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230919 02:29:25.706" endtime="20230919 02:29:25.729"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230919 02:29:25.729" endtime="20230919 02:29:25.729"/>
</kw>
<status status="NOT RUN" starttime="20230919 02:29:25.729" endtime="20230919 02:29:25.729"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230919 02:29:25.729" endtime="20230919 02:29:25.730"/>
</kw>
<status status="PASS" starttime="20230919 02:29:25.729" endtime="20230919 02:29:25.730"/>
</branch>
<status status="PASS" starttime="20230919 02:29:25.729" endtime="20230919 02:29:25.730"/>
</if>
<status status="PASS" starttime="20230919 02:29:25.706" endtime="20230919 02:29:25.730"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230919 02:29:25.731" endtime="20230919 02:29:25.731"/>
</kw>
<status status="PASS" starttime="20230919 02:29:25.730" endtime="20230919 02:29:25.731"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230919 02:29:25.735" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/du?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230919 02:29:25.751" level="INFO">${rc} = 0</msg>
<msg timestamp="20230919 02:29:25.751" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230919 02:29:25.733" endtime="20230919 02:29:25.751"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230919 02:29:25.752" level="INFO">200</msg>
<status status="PASS" starttime="20230919 02:29:25.752" endtime="20230919 02:29:25.752"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230919 02:29:25.755" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230919 02:29:25.752" endtime="20230919 02:29:25.755"/>
</kw>
<status status="PASS" starttime="20230919 02:29:25.733" endtime="20230919 02:29:25.755"/>
</kw>
<msg timestamp="20230919 02:29:25.755" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230919 02:29:25.732" endtime="20230919 02:29:25.755"/>
</kw>
<msg timestamp="20230919 02:29:25.755" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230919 02:29:25.732" endtime="20230919 02:29:25.756"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230919 02:29:25.756" endtime="20230919 02:29:25.756"/>
</kw>
<status status="NOT RUN" starttime="20230919 02:29:25.756" endtime="20230919 02:29:25.756"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230919 02:29:25.757" endtime="20230919 02:29:25.757"/>
</kw>
<status status="PASS" starttime="20230919 02:29:25.756" endtime="20230919 02:29:25.757"/>
</branch>
<status status="PASS" starttime="20230919 02:29:25.756" endtime="20230919 02:29:25.757"/>
</if>
<status status="PASS" starttime="20230919 02:29:25.731" endtime="20230919 02:29:25.757"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230919 02:29:25.758" endtime="20230919 02:29:25.758"/>
</kw>
<status status="PASS" starttime="20230919 02:29:25.757" endtime="20230919 02:29:25.758"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230919 02:29:25.763" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/du?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230919 02:29:25.780" level="INFO">${rc} = 0</msg>
<msg timestamp="20230919 02:29:25.780" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230919 02:29:25.761" endtime="20230919 02:29:25.780"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230919 02:29:25.781" level="INFO">200</msg>
<status status="PASS" starttime="20230919 02:29:25.780" endtime="20230919 02:29:25.781"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230919 02:29:25.782" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230919 02:29:25.781" endtime="20230919 02:29:25.782"/>
</kw>
<status status="PASS" starttime="20230919 02:29:25.760" endtime="20230919 02:29:25.782"/>
</kw>
<msg timestamp="20230919 02:29:25.782" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230919 02:29:25.760" endtime="20230919 02:29:25.782"/>
</kw>
<msg timestamp="20230919 02:29:25.782" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230919 02:29:25.759" endtime="20230919 02:29:25.782"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230919 02:29:25.783" endtime="20230919 02:29:25.783"/>
</kw>
<status status="NOT RUN" starttime="20230919 02:29:25.783" endtime="20230919 02:29:25.783"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230919 02:29:25.783" endtime="20230919 02:29:25.784"/>
</kw>
<status status="PASS" starttime="20230919 02:29:25.783" endtime="20230919 02:29:25.784"/>
</branch>
<status status="PASS" starttime="20230919 02:29:25.783" endtime="20230919 02:29:25.784"/>
</if>
<status status="PASS" starttime="20230919 02:29:25.759" endtime="20230919 02:29:25.784"/>
</kw>
<status status="PASS" starttime="20230919 02:29:25.666" endtime="20230919 02:29:25.784"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230919 02:29:25.665" endtime="20230919 02:29:25.784"/>
</test>
<test id="s1-s3-s2-t6" name="Check Quota Usage api access" line="116">
<kw name="Check Access">
<arg>${QUOTA_USAGE_URL}?path=/</arg>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230919 02:29:25.790" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20230919 02:29:25.793" level="INFO">${rc} = 0</msg>
<msg timestamp="20230919 02:29:25.793" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230919 02:29:25.788" endtime="20230919 02:29:25.793"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230919 02:29:25.794" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230919 02:29:25.794" endtime="20230919 02:29:25.794"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230919 02:29:25.795" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230919 02:29:25.795" endtime="20230919 02:29:25.795"/>
</kw>
<status status="PASS" starttime="20230919 02:29:25.787" endtime="20230919 02:29:25.795"/>
</kw>
<msg timestamp="20230919 02:29:25.795" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230919 02:29:25.787" endtime="20230919 02:29:25.796"/>
</kw>
<status status="PASS" starttime="20230919 02:29:25.787" endtime="20230919 02:29:25.796"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230919 02:29:25.800" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/quota?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230919 02:29:25.824" level="INFO">${rc} = 0</msg>
<msg timestamp="20230919 02:29:25.824" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230919 02:29:25.798" endtime="20230919 02:29:25.824"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230919 02:29:25.825" level="INFO">200</msg>
<status status="PASS" starttime="20230919 02:29:25.824" endtime="20230919 02:29:25.825"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230919 02:29:25.825" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230919 02:29:25.825" endtime="20230919 02:29:25.825"/>
</kw>
<status status="PASS" starttime="20230919 02:29:25.798" endtime="20230919 02:29:25.826"/>
</kw>
<msg timestamp="20230919 02:29:25.826" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230919 02:29:25.797" endtime="20230919 02:29:25.826"/>
</kw>
<msg timestamp="20230919 02:29:25.826" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230919 02:29:25.797" endtime="20230919 02:29:25.826"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230919 02:29:25.827" endtime="20230919 02:29:25.827"/>
</kw>
<status status="NOT RUN" starttime="20230919 02:29:25.826" endtime="20230919 02:29:25.827"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230919 02:29:25.827" endtime="20230919 02:29:25.827"/>
</kw>
<status status="PASS" starttime="20230919 02:29:25.827" endtime="20230919 02:29:25.827"/>
</branch>
<status status="PASS" starttime="20230919 02:29:25.826" endtime="20230919 02:29:25.827"/>
</if>
<status status="PASS" starttime="20230919 02:29:25.796" endtime="20230919 02:29:25.828"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230919 02:29:25.828" endtime="20230919 02:29:25.828"/>
</kw>
<status status="PASS" starttime="20230919 02:29:25.828" endtime="20230919 02:29:25.829"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>403</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230919 02:29:25.833" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/quota?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230919 02:29:25.850" level="INFO">${rc} = 0</msg>
<msg timestamp="20230919 02:29:25.850" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230919 02:29:25.831" endtime="20230919 02:29:25.850"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230919 02:29:25.851" level="INFO">200</msg>
<status status="PASS" starttime="20230919 02:29:25.851" endtime="20230919 02:29:25.851"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230919 02:29:25.852" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230919 02:29:25.851" endtime="20230919 02:29:25.852"/>
</kw>
<status status="PASS" starttime="20230919 02:29:25.830" endtime="20230919 02:29:25.852"/>
</kw>
<msg timestamp="20230919 02:29:25.852" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230919 02:29:25.830" endtime="20230919 02:29:25.852"/>
</kw>
<msg timestamp="20230919 02:29:25.853" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230919 02:29:25.829" endtime="20230919 02:29:25.853"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230919 02:29:25.853" endtime="20230919 02:29:25.853"/>
</kw>
<status status="NOT RUN" starttime="20230919 02:29:25.853" endtime="20230919 02:29:25.853"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230919 02:29:25.853" endtime="20230919 02:29:25.854"/>
</kw>
<status status="PASS" starttime="20230919 02:29:25.853" endtime="20230919 02:29:25.854"/>
</branch>
<status status="PASS" starttime="20230919 02:29:25.853" endtime="20230919 02:29:25.854"/>
</if>
<status status="PASS" starttime="20230919 02:29:25.829" endtime="20230919 02:29:25.854"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230919 02:29:25.855" endtime="20230919 02:29:25.855"/>
</kw>
<status status="PASS" starttime="20230919 02:29:25.854" endtime="20230919 02:29:25.855"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230919 02:29:25.859" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/quota?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230919 02:29:25.874" level="INFO">${rc} = 0</msg>
<msg timestamp="20230919 02:29:25.874" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230919 02:29:25.857" endtime="20230919 02:29:25.874"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230919 02:29:25.875" level="INFO">200</msg>
<status status="PASS" starttime="20230919 02:29:25.875" endtime="20230919 02:29:25.875"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230919 02:29:25.876" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230919 02:29:25.876" endtime="20230919 02:29:25.876"/>
</kw>
<status status="PASS" starttime="20230919 02:29:25.857" endtime="20230919 02:29:25.876"/>
</kw>
<msg timestamp="20230919 02:29:25.876" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230919 02:29:25.856" endtime="20230919 02:29:25.876"/>
</kw>
<msg timestamp="20230919 02:29:25.876" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230919 02:29:25.856" endtime="20230919 02:29:25.877"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230919 02:29:25.877" endtime="20230919 02:29:25.877"/>
</kw>
<status status="NOT RUN" starttime="20230919 02:29:25.877" endtime="20230919 02:29:25.877"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230919 02:29:25.877" endtime="20230919 02:29:25.878"/>
</kw>
<status status="PASS" starttime="20230919 02:29:25.877" endtime="20230919 02:29:25.878"/>
</branch>
<status status="PASS" starttime="20230919 02:29:25.877" endtime="20230919 02:29:25.878"/>
</if>
<status status="PASS" starttime="20230919 02:29:25.855" endtime="20230919 02:29:25.879"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230919 02:29:25.879" endtime="20230919 02:29:25.880"/>
</kw>
<status status="PASS" starttime="20230919 02:29:25.879" endtime="20230919 02:29:25.880"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230919 02:29:25.885" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/quota?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230919 02:29:25.899" level="INFO">${rc} = 0</msg>
<msg timestamp="20230919 02:29:25.899" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230919 02:29:25.882" endtime="20230919 02:29:25.899"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230919 02:29:25.900" level="INFO">200</msg>
<status status="PASS" starttime="20230919 02:29:25.900" endtime="20230919 02:29:25.900"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230919 02:29:25.901" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230919 02:29:25.901" endtime="20230919 02:29:25.901"/>
</kw>
<status status="PASS" starttime="20230919 02:29:25.881" endtime="20230919 02:29:25.901"/>
</kw>
<msg timestamp="20230919 02:29:25.901" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230919 02:29:25.881" endtime="20230919 02:29:25.901"/>
</kw>
<msg timestamp="20230919 02:29:25.902" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230919 02:29:25.880" endtime="20230919 02:29:25.902"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230919 02:29:25.902" endtime="20230919 02:29:25.902"/>
</kw>
<status status="NOT RUN" starttime="20230919 02:29:25.902" endtime="20230919 02:29:25.902"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230919 02:29:25.903" endtime="20230919 02:29:25.904"/>
</kw>
<status status="PASS" starttime="20230919 02:29:25.903" endtime="20230919 02:29:25.904"/>
</branch>
<status status="PASS" starttime="20230919 02:29:25.902" endtime="20230919 02:29:25.904"/>
</if>
<status status="PASS" starttime="20230919 02:29:25.880" endtime="20230919 02:29:25.904"/>
</kw>
<status status="PASS" starttime="20230919 02:29:25.786" endtime="20230919 02:29:25.904"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230919 02:29:25.785" endtime="20230919 02:29:25.904"/>
</test>
<test id="s1-s3-s2-t7" name="Check File Size Distribution api access" line="119">
<kw name="Check Access">
<arg>${FILE_SIZE_DIST_URL}?path=/</arg>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230919 02:29:25.911" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20230919 02:29:25.914" level="INFO">${rc} = 0</msg>
<msg timestamp="20230919 02:29:25.915" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230919 02:29:25.909" endtime="20230919 02:29:25.915"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230919 02:29:25.916" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230919 02:29:25.915" endtime="20230919 02:29:25.916"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230919 02:29:25.916" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230919 02:29:25.916" endtime="20230919 02:29:25.916"/>
</kw>
<status status="PASS" starttime="20230919 02:29:25.908" endtime="20230919 02:29:25.917"/>
</kw>
<msg timestamp="20230919 02:29:25.917" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230919 02:29:25.908" endtime="20230919 02:29:25.917"/>
</kw>
<status status="PASS" starttime="20230919 02:29:25.908" endtime="20230919 02:29:25.917"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230919 02:29:25.921" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/dist?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230919 02:29:25.941" level="INFO">${rc} = 0</msg>
<msg timestamp="20230919 02:29:25.941" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230919 02:29:25.919" endtime="20230919 02:29:25.942"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230919 02:29:25.943" level="INFO">200</msg>
<status status="PASS" starttime="20230919 02:29:25.942" endtime="20230919 02:29:25.943"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230919 02:29:25.944" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230919 02:29:25.943" endtime="20230919 02:29:25.944"/>
</kw>
<status status="PASS" starttime="20230919 02:29:25.919" endtime="20230919 02:29:25.944"/>
</kw>
<msg timestamp="20230919 02:29:25.944" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230919 02:29:25.918" endtime="20230919 02:29:25.944"/>
</kw>
<msg timestamp="20230919 02:29:25.944" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230919 02:29:25.918" endtime="20230919 02:29:25.944"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230919 02:29:25.945" endtime="20230919 02:29:25.945"/>
</kw>
<status status="NOT RUN" starttime="20230919 02:29:25.945" endtime="20230919 02:29:25.945"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230919 02:29:25.945" endtime="20230919 02:29:25.946"/>
</kw>
<status status="PASS" starttime="20230919 02:29:25.945" endtime="20230919 02:29:25.946"/>
</branch>
<status status="PASS" starttime="20230919 02:29:25.944" endtime="20230919 02:29:25.946"/>
</if>
<status status="PASS" starttime="20230919 02:29:25.917" endtime="20230919 02:29:25.946"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230919 02:29:25.947" endtime="20230919 02:29:25.947"/>
</kw>
<status status="PASS" starttime="20230919 02:29:25.946" endtime="20230919 02:29:25.947"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>403</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230919 02:29:25.952" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/dist?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230919 02:29:25.965" level="INFO">${rc} = 0</msg>
<msg timestamp="20230919 02:29:25.965" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230919 02:29:25.949" endtime="20230919 02:29:25.965"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230919 02:29:25.966" level="INFO">200</msg>
<status status="PASS" starttime="20230919 02:29:25.966" endtime="20230919 02:29:25.966"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230919 02:29:25.967" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230919 02:29:25.967" endtime="20230919 02:29:25.967"/>
</kw>
<status status="PASS" starttime="20230919 02:29:25.949" endtime="20230919 02:29:25.967"/>
</kw>
<msg timestamp="20230919 02:29:25.967" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230919 02:29:25.948" endtime="20230919 02:29:25.968"/>
</kw>
<msg timestamp="20230919 02:29:25.968" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230919 02:29:25.948" endtime="20230919 02:29:25.968"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230919 02:29:25.968" endtime="20230919 02:29:25.969"/>
</kw>
<status status="NOT RUN" starttime="20230919 02:29:25.968" endtime="20230919 02:29:25.969"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230919 02:29:25.969" endtime="20230919 02:29:25.969"/>
</kw>
<status status="PASS" starttime="20230919 02:29:25.969" endtime="20230919 02:29:25.969"/>
</branch>
<status status="PASS" starttime="20230919 02:29:25.968" endtime="20230919 02:29:25.969"/>
</if>
<status status="PASS" starttime="20230919 02:29:25.947" endtime="20230919 02:29:25.969"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230919 02:29:25.970" endtime="20230919 02:29:25.970"/>
</kw>
<status status="PASS" starttime="20230919 02:29:25.969" endtime="20230919 02:29:25.970"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230919 02:29:25.975" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/dist?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230919 02:29:25.989" level="INFO">${rc} = 0</msg>
<msg timestamp="20230919 02:29:25.989" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230919 02:29:25.973" endtime="20230919 02:29:25.989"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230919 02:29:25.990" level="INFO">200</msg>
<status status="PASS" starttime="20230919 02:29:25.989" endtime="20230919 02:29:25.990"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230919 02:29:25.991" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230919 02:29:25.990" endtime="20230919 02:29:25.991"/>
</kw>
<status status="PASS" starttime="20230919 02:29:25.972" endtime="20230919 02:29:25.991"/>
</kw>
<msg timestamp="20230919 02:29:25.991" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230919 02:29:25.971" endtime="20230919 02:29:25.991"/>
</kw>
<msg timestamp="20230919 02:29:25.991" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230919 02:29:25.971" endtime="20230919 02:29:25.991"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230919 02:29:25.992" endtime="20230919 02:29:25.992"/>
</kw>
<status status="NOT RUN" starttime="20230919 02:29:25.992" endtime="20230919 02:29:25.992"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230919 02:29:25.992" endtime="20230919 02:29:25.993"/>
</kw>
<status status="PASS" starttime="20230919 02:29:25.992" endtime="20230919 02:29:25.993"/>
</branch>
<status status="PASS" starttime="20230919 02:29:25.992" endtime="20230919 02:29:25.993"/>
</if>
<status status="PASS" starttime="20230919 02:29:25.970" endtime="20230919 02:29:25.993"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230919 02:29:25.994" endtime="20230919 02:29:25.994"/>
</kw>
<status status="PASS" starttime="20230919 02:29:25.993" endtime="20230919 02:29:25.994"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230919 02:29:25.998" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/dist?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230919 02:29:26.012" level="INFO">${rc} = 0</msg>
<msg timestamp="20230919 02:29:26.012" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230919 02:29:25.996" endtime="20230919 02:29:26.012"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230919 02:29:26.013" level="INFO">200</msg>
<status status="PASS" starttime="20230919 02:29:26.013" endtime="20230919 02:29:26.013"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230919 02:29:26.014" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230919 02:29:26.013" endtime="20230919 02:29:26.014"/>
</kw>
<status status="PASS" starttime="20230919 02:29:25.996" endtime="20230919 02:29:26.014"/>
</kw>
<msg timestamp="20230919 02:29:26.014" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230919 02:29:25.995" endtime="20230919 02:29:26.014"/>
</kw>
<msg timestamp="20230919 02:29:26.014" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230919 02:29:25.995" endtime="20230919 02:29:26.014"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230919 02:29:26.015" endtime="20230919 02:29:26.015"/>
</kw>
<status status="NOT RUN" starttime="20230919 02:29:26.015" endtime="20230919 02:29:26.015"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230919 02:29:26.015" endtime="20230919 02:29:26.016"/>
</kw>
<status status="PASS" starttime="20230919 02:29:26.015" endtime="20230919 02:29:26.016"/>
</branch>
<status status="PASS" starttime="20230919 02:29:26.015" endtime="20230919 02:29:26.016"/>
</if>
<status status="PASS" starttime="20230919 02:29:25.994" endtime="20230919 02:29:26.016"/>
</kw>
<status status="PASS" starttime="20230919 02:29:25.907" endtime="20230919 02:29:26.016"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230919 02:29:25.906" endtime="20230919 02:29:26.016"/>
</test>
<test id="s1-s3-s2-t8" name="Check Recon Namespace Summary Root" line="122">
<kw name="Wait For Summary">
<arg>${SUMMARY_URL}?path=/</arg>
<arg>ROOT</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230919 02:29:26.022" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230919 02:29:26.037" level="INFO">${rc} = 0</msg>
<msg timestamp="20230919 02:29:26.037" level="INFO">${output} = {"path":"","type":"ROOT","countStats":{"numVolume":3,"numBucket":2,"numDir":1,"numKey":1},"objectInfo":{"metadata":null,"name":null,"quotaInBytes":0,"quotaInNamespace":0,"usedNamespace":0,"creationTim...</msg>
<status status="PASS" starttime="20230919 02:29:26.020" endtime="20230919 02:29:26.037"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230919 02:29:26.038" level="INFO">{"path":"","type":"ROOT","countStats":{"numVolume":3,"numBucket":2,"numDir":1,"numKey":1},"objectInfo":{"metadata":null,"name":null,"quotaInBytes":0,"quotaInNamespace":0,"usedNamespace":0,"creationTime":0,"modificationTime":0,"acls":null},"status":"OK"}</msg>
<status status="PASS" starttime="20230919 02:29:26.038" endtime="20230919 02:29:26.039"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230919 02:29:26.039" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230919 02:29:26.039" endtime="20230919 02:29:26.039"/>
</kw>
<status status="PASS" starttime="20230919 02:29:26.020" endtime="20230919 02:29:26.040"/>
</kw>
<msg timestamp="20230919 02:29:26.040" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230919 02:29:26.020" endtime="20230919 02:29:26.040"/>
</kw>
<msg timestamp="20230919 02:29:26.040" level="INFO">${result} = {"path":"","type":"ROOT","countStats":{"numVolume":3,"numBucket":2,"numDir":1,"numKey":1},"objectInfo":{"metadata":null,"name":null,"quotaInBytes":0,"quotaInNamespace":0,"usedNamespace":0,"creationTim...</msg>
<status status="PASS" starttime="20230919 02:29:26.019" endtime="20230919 02:29:26.040"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230919 02:29:26.040" endtime="20230919 02:29:26.041"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230919 02:29:26.041" endtime="20230919 02:29:26.042"/>
</kw>
<status status="PASS" starttime="20230919 02:29:26.019" endtime="20230919 02:29:26.042"/>
</kw>
<status status="PASS" starttime="20230919 02:29:26.018" endtime="20230919 02:29:26.042"/>
</kw>
<status status="PASS" starttime="20230919 02:29:26.018" endtime="20230919 02:29:26.042"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230919 02:29:26.017" endtime="20230919 02:29:26.042"/>
</test>
<test id="s1-s3-s2-t9" name="Check Recon Namespace Summary Volume" line="125">
<kw name="Wait For Summary">
<arg>${SUMMARY_URL}?path=/${VOLUME}</arg>
<arg>VOLUME</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230919 02:29:26.049" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-tiyuy 2&gt;&amp;1'.</msg>
<msg timestamp="20230919 02:29:26.062" level="INFO">${rc} = 0</msg>
<msg timestamp="20230919 02:29:26.062" level="INFO">${output} = {"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20230919 02:29:26.047" endtime="20230919 02:29:26.062"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230919 02:29:26.063" level="INFO">{"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20230919 02:29:26.063" endtime="20230919 02:29:26.063"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230919 02:29:26.064" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230919 02:29:26.064" endtime="20230919 02:29:26.064"/>
</kw>
<status status="PASS" starttime="20230919 02:29:26.046" endtime="20230919 02:29:26.064"/>
</kw>
<msg timestamp="20230919 02:29:26.064" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230919 02:29:26.046" endtime="20230919 02:29:26.065"/>
</kw>
<msg timestamp="20230919 02:29:26.065" level="INFO">${result} = {"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20230919 02:29:26.045" endtime="20230919 02:29:26.065"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20230919 02:29:26.066" level="FAIL">'{"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}' does not contain '"status":"OK"'</msg>
<status status="FAIL" starttime="20230919 02:29:26.065" endtime="20230919 02:29:26.066"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230919 02:29:26.066" endtime="20230919 02:29:26.066"/>
</kw>
<status status="FAIL" starttime="20230919 02:29:26.045" endtime="20230919 02:29:26.066"/>
</kw>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230919 02:29:36.072" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-tiyuy 2&gt;&amp;1'.</msg>
<msg timestamp="20230919 02:29:36.090" level="INFO">${rc} = 0</msg>
<msg timestamp="20230919 02:29:36.091" level="INFO">${output} = {"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20230919 02:29:36.070" endtime="20230919 02:29:36.091"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230919 02:29:36.092" level="INFO">{"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20230919 02:29:36.091" endtime="20230919 02:29:36.092"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230919 02:29:36.092" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230919 02:29:36.092" endtime="20230919 02:29:36.093"/>
</kw>
<status status="PASS" starttime="20230919 02:29:36.069" endtime="20230919 02:29:36.093"/>
</kw>
<msg timestamp="20230919 02:29:36.093" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230919 02:29:36.069" endtime="20230919 02:29:36.093"/>
</kw>
<msg timestamp="20230919 02:29:36.093" level="INFO">${result} = {"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20230919 02:29:36.068" endtime="20230919 02:29:36.093"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20230919 02:29:36.094" level="FAIL">'{"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}' does not contain '"status":"OK"'</msg>
<status status="FAIL" starttime="20230919 02:29:36.093" endtime="20230919 02:29:36.094"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230919 02:29:36.094" endtime="20230919 02:29:36.094"/>
</kw>
<status status="FAIL" starttime="20230919 02:29:36.067" endtime="20230919 02:29:36.094"/>
</kw>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230919 02:29:46.100" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-tiyuy 2&gt;&amp;1'.</msg>
<msg timestamp="20230919 02:29:46.115" level="INFO">${rc} = 0</msg>
<msg timestamp="20230919 02:29:46.115" level="INFO">${output} = {"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20230919 02:29:46.098" endtime="20230919 02:29:46.115"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230919 02:29:46.116" level="INFO">{"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20230919 02:29:46.116" endtime="20230919 02:29:46.116"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230919 02:29:46.117" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230919 02:29:46.117" endtime="20230919 02:29:46.117"/>
</kw>
<status status="PASS" starttime="20230919 02:29:46.097" endtime="20230919 02:29:46.117"/>
</kw>
<msg timestamp="20230919 02:29:46.118" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230919 02:29:46.097" endtime="20230919 02:29:46.118"/>
</kw>
<msg timestamp="20230919 02:29:46.118" level="INFO">${result} = {"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20230919 02:29:46.096" endtime="20230919 02:29:46.118"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20230919 02:29:46.119" level="FAIL">'{"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}' does not contain '"status":"OK"'</msg>
<status status="FAIL" starttime="20230919 02:29:46.118" endtime="20230919 02:29:46.119"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230919 02:29:46.119" endtime="20230919 02:29:46.119"/>
</kw>
<status status="FAIL" starttime="20230919 02:29:46.095" endtime="20230919 02:29:46.119"/>
</kw>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230919 02:29:56.125" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-tiyuy 2&gt;&amp;1'.</msg>
<msg timestamp="20230919 02:29:56.147" level="INFO">${rc} = 0</msg>
<msg timestamp="20230919 02:29:56.147" level="INFO">${output} = {"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20230919 02:29:56.122" endtime="20230919 02:29:56.147"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230919 02:29:56.148" level="INFO">{"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20230919 02:29:56.147" endtime="20230919 02:29:56.148"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230919 02:29:56.149" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230919 02:29:56.148" endtime="20230919 02:29:56.149"/>
</kw>
<status status="PASS" starttime="20230919 02:29:56.121" endtime="20230919 02:29:56.149"/>
</kw>
<msg timestamp="20230919 02:29:56.149" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230919 02:29:56.121" endtime="20230919 02:29:56.149"/>
</kw>
<msg timestamp="20230919 02:29:56.150" level="INFO">${result} = {"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20230919 02:29:56.120" endtime="20230919 02:29:56.150"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20230919 02:29:56.150" level="FAIL">'{"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}' does not contain '"status":"OK"'</msg>
<status status="FAIL" starttime="20230919 02:29:56.150" endtime="20230919 02:29:56.150"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230919 02:29:56.151" endtime="20230919 02:29:56.151"/>
</kw>
<status status="FAIL" starttime="20230919 02:29:56.120" endtime="20230919 02:29:56.151"/>
</kw>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230919 02:30:06.166" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-tiyuy 2&gt;&amp;1'.</msg>
<msg timestamp="20230919 02:30:06.193" level="INFO">${rc} = 0</msg>
<msg timestamp="20230919 02:30:06.193" level="INFO">${output} = {"path":"","type":"VOLUME","countStats":{"numVolume":-1,"numBucket":1,"numDir":2,"numKey":2},"objectInfo":{"metadata":{},"name":"vol-tiyuy","quotaInBytes":-1,"quotaInNamespace":-1,"usedNamespace":1,"c...</msg>
<status status="PASS" starttime="20230919 02:30:06.154" endtime="20230919 02:30:06.193"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230919 02:30:06.194" level="INFO">{"path":"","type":"VOLUME","countStats":{"numVolume":-1,"numBucket":1,"numDir":2,"numKey":2},"objectInfo":{"metadata":{},"name":"vol-tiyuy","quotaInBytes":-1,"quotaInNamespace":-1,"usedNamespace":1,"creationTime":1695090548013,"modificationTime":1695090548013,"acls":[{"type":"USER","name":"hadoop","aclScope":"ACCESS","aclList":["ALL"]},{"type":"GROUP","name":"hadoop","aclScope":"ACCESS","aclList":["ALL"]}],"admin":"hadoop","owner":"hadoop","volume":"vol-tiyuy"},"status":"OK"}</msg>
<status status="PASS" starttime="20230919 02:30:06.193" endtime="20230919 02:30:06.194"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230919 02:30:06.195" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230919 02:30:06.194" endtime="20230919 02:30:06.195"/>
</kw>
<status status="PASS" starttime="20230919 02:30:06.153" endtime="20230919 02:30:06.195"/>
</kw>
<msg timestamp="20230919 02:30:06.195" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230919 02:30:06.153" endtime="20230919 02:30:06.195"/>
</kw>
<msg timestamp="20230919 02:30:06.196" level="INFO">${result} = {"path":"","type":"VOLUME","countStats":{"numVolume":-1,"numBucket":1,"numDir":2,"numKey":2},"objectInfo":{"metadata":{},"name":"vol-tiyuy","quotaInBytes":-1,"quotaInNamespace":-1,"usedNamespace":1,"c...</msg>
<status status="PASS" starttime="20230919 02:30:06.152" endtime="20230919 02:30:06.196"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230919 02:30:06.196" endtime="20230919 02:30:06.196"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230919 02:30:06.196" endtime="20230919 02:30:06.197"/>
</kw>
<status status="PASS" starttime="20230919 02:30:06.151" endtime="20230919 02:30:06.197"/>
</kw>
<status status="PASS" starttime="20230919 02:29:26.044" endtime="20230919 02:30:06.197"/>
</kw>
<status status="PASS" starttime="20230919 02:29:26.044" endtime="20230919 02:30:06.197"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230919 02:29:26.043" endtime="20230919 02:30:06.197"/>
</test>
<test id="s1-s3-s2-t10" name="Check Recon Namespace Summary Bucket" line="128">
<kw name="Wait For Summary">
<arg>${SUMMARY_URL}?path=/${VOLUME}/${BUCKET}</arg>
<arg>BUCKET</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230919 02:30:06.204" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-tiyuy/buc-abwuv 2&gt;&amp;1'.</msg>
<msg timestamp="20230919 02:30:06.232" level="INFO">${rc} = 0</msg>
<msg timestamp="20230919 02:30:06.232" level="INFO">${output} = {"path":"","type":"BUCKET","countStats":{"numVolume":-1,"numBucket":-1,"numDir":2,"numKey":2},"objectInfo":{"versioningEnabled":false,"metadata":{},"name":"buc-abwuv","quotaInBytes":-1,"quotaInNamespa...</msg>
<status status="PASS" starttime="20230919 02:30:06.202" endtime="20230919 02:30:06.232"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230919 02:30:06.233" level="INFO">{"path":"","type":"BUCKET","countStats":{"numVolume":-1,"numBucket":-1,"numDir":2,"numKey":2},"objectInfo":{"versioningEnabled":false,"metadata":{},"name":"buc-abwuv","quotaInBytes":-1,"quotaInNamespace":-1,"usedNamespace":4,"creationTime":1695090552157,"modificationTime":1695090552157,"acls":[{"type":"USER","name":"hadoop","aclScope":"ACCESS","aclList":["ALL"]},{"type":"GROUP","name":"hadoop","aclScope":"ACCESS","aclList":["ALL"]}],"volumeName":"vol-tiyuy","storageType":"DISK","versioning":false,"usedBytes":null,"encryptionInfo":null,"replicationConfigInfo":null,"sourceVolume":null,"sourceBucket":null,"bucketLayout":"FILE_SYSTEM_OPTIMIZED","owner":"hadoop"},"status":"OK"}</msg>
<status status="PASS" starttime="20230919 02:30:06.232" endtime="20230919 02:30:06.233"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230919 02:30:06.234" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230919 02:30:06.234" endtime="20230919 02:30:06.234"/>
</kw>
<status status="PASS" starttime="20230919 02:30:06.201" endtime="20230919 02:30:06.234"/>
</kw>
<msg timestamp="20230919 02:30:06.235" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230919 02:30:06.201" endtime="20230919 02:30:06.235"/>
</kw>
<msg timestamp="20230919 02:30:06.235" level="INFO">${result} = {"path":"","type":"BUCKET","countStats":{"numVolume":-1,"numBucket":-1,"numDir":2,"numKey":2},"objectInfo":{"versioningEnabled":false,"metadata":{},"name":"buc-abwuv","quotaInBytes":-1,"quotaInNamespa...</msg>
<status status="PASS" starttime="20230919 02:30:06.201" endtime="20230919 02:30:06.235"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230919 02:30:06.235" endtime="20230919 02:30:06.236"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230919 02:30:06.236" endtime="20230919 02:30:06.236"/>
</kw>
<status status="PASS" starttime="20230919 02:30:06.200" endtime="20230919 02:30:06.237"/>
</kw>
<status status="PASS" starttime="20230919 02:30:06.200" endtime="20230919 02:30:06.237"/>
</kw>
<status status="PASS" starttime="20230919 02:30:06.199" endtime="20230919 02:30:06.237"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230919 02:30:06.198" endtime="20230919 02:30:06.237"/>
</test>
<test id="s1-s3-s2-t11" name="Check Recon Namespace Summary Key" line="131">
<kw name="Wait For Summary">
<arg>${SUMMARY_URL}?path=/${VOLUME}/${BUCKET}/file1</arg>
<arg>KEY</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230919 02:30:06.256" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-tiyuy/buc-abwuv/file1 2&gt;&amp;1'.</msg>
<msg timestamp="20230919 02:30:06.366" level="INFO">${rc} = 0</msg>
<msg timestamp="20230919 02:30:06.366" level="INFO">${output} = {"path":"","type":"KEY","countStats":{"numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0},"objectInfo":{"fileName":"file1","file":true,"metadata":{},"name":"file1","quotaInBytes":0,"quotaInNamespace...</msg>
<status status="PASS" starttime="20230919 02:30:06.243" endtime="20230919 02:30:06.366"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230919 02:30:06.368" level="INFO">{"path":"","type":"KEY","countStats":{"numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0},"objectInfo":{"fileName":"file1","file":true,"metadata":{},"name":"file1","quotaInBytes":0,"quotaInNamespace":0,"usedNamespace":0,"creationTime":1695090556616,"modificationTime":1695090558725,"acls":[{"type":"USER","name":"hadoop","aclScope":"ACCESS","aclList":["ALL"]},{"type":"GROUP","name":"hadoop","aclScope":"ACCESS","aclList":["ALL"]}],"volumeName":"vol-tiyuy","bucketName":"buc-abwuv","keyName":"file1","dataSize":4068,"keyLocationVersions":[{"version":0,"locationVersionMap":{"0":[{"blockID":{"containerBlockID":{"containerID":3,"localID":111677748019200012},"blockCommitSequenceId":14,"containerID":3,"localID":111677748019200012},"length":4068,"offset":0,"token":null,"createVersion":0,"pipeline":null,"partNumber":0,"containerID":3,"localID":111677748019200012,"blockCommitSequenceId":14}]},"locationList":[{"blockID":{"containerBlockID":{"containerID":3,"localID":111677748019200012},"blockCommitSequenceId":14,"containerID":3,"localID":111677748019200012},"length":4068,"offset":0,"token":null,"createVersion":0,"pipeline":null,"partNumber":0,"containerID":3,"localID":111677748019200012,"blockCommitSequenceId":14}],"multipartKey":false,"blocksLatestVersionOnly":[{"blockID":{"containerBlockID":{"containerID":3,"localID":111677748019200012},"blockCommitSequenceId":14,"containerID":3,"localID":111677748019200012},"length":4068,"offset":0,"token":null,"createVersion":0,"pipeline":null,"partNumber":0,"containerID":3,"localID":111677748019200012,"blockCommitSequenceId":14}],"locationLists":[[{"blockID":{"containerBlockID":{"containerID":3,"localID":111677748019200012},"blockCommitSequenceId":14,"containerID":3,"localID":111677748019200012},"length":4068,"offset":0,"token":null,"createVersion":0,"pipeline":null,"partNumber":0,"containerID":3,"localID":111677748019200012,"blockCommitSequenceId":14}]],"locationListCount":1}],"replicationConfig":{"replicationFactor":"THREE","requiredNodes":3,"replicationType":"RATIS"},"encInfo":null},"status":"OK"}</msg>
<status status="PASS" starttime="20230919 02:30:06.367" endtime="20230919 02:30:06.368"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230919 02:30:06.370" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230919 02:30:06.368" endtime="20230919 02:30:06.370"/>
</kw>
<status status="PASS" starttime="20230919 02:30:06.242" endtime="20230919 02:30:06.370"/>
</kw>
<msg timestamp="20230919 02:30:06.370" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230919 02:30:06.242" endtime="20230919 02:30:06.370"/>
</kw>
<msg timestamp="20230919 02:30:06.371" level="INFO">${result} = {"path":"","type":"KEY","countStats":{"numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0},"objectInfo":{"fileName":"file1","file":true,"metadata":{},"name":"file1","quotaInBytes":0,"quotaInNamespace...</msg>
<status status="PASS" starttime="20230919 02:30:06.241" endtime="20230919 02:30:06.371"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230919 02:30:06.371" endtime="20230919 02:30:06.371"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230919 02:30:06.371" endtime="20230919 02:30:06.372"/>
</kw>
<status status="PASS" starttime="20230919 02:30:06.241" endtime="20230919 02:30:06.372"/>
</kw>
<status status="PASS" starttime="20230919 02:30:06.240" endtime="20230919 02:30:06.372"/>
</kw>
<status status="PASS" starttime="20230919 02:30:06.239" endtime="20230919 02:30:06.372"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230919 02:30:06.238" endtime="20230919 02:30:06.372"/>
</test>
<test id="s1-s3-s2-t12" name="Check Recon Namespace Summary Directory" line="134">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET_LAYOUT}' == 'LEGACY'</arg>
<arg>Wait For Summary</arg>
<arg>${SUMMARY_URL}?path=/${VOLUME}/${BUCKET}/dir1/dir2/</arg>
<arg>DIRECTORY</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230919 02:30:06.374" endtime="20230919 02:30:06.374"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET_LAYOUT}' == 'FILE_SYSTEM_OPTIMIZED'</arg>
<arg>Wait For Summary</arg>
<arg>${SUMMARY_URL}?path=/${VOLUME}/${BUCKET}/dir1/dir2</arg>
<arg>DIRECTORY</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Wait For Summary">
<arg>${SUMMARY_URL}?path=/${VOLUME}/${BUCKET}/dir1/dir2</arg>
<arg>DIRECTORY</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230919 02:30:06.380" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-tiyuy/buc-abwuv/dir1/dir2 2&gt;&amp;1'.</msg>
<msg timestamp="20230919 02:30:06.398" level="INFO">${rc} = 0</msg>
<msg timestamp="20230919 02:30:06.398" level="INFO">${output} = {"path":"","type":"DIRECTORY","countStats":{"numVolume":-1,"numBucket":-1,"numDir":0,"numKey":1},"objectInfo":{"metadata":{},"name":"dir2","quotaInBytes":0,"quotaInNamespace":0,"usedNamespace":0,"crea...</msg>
<status status="PASS" starttime="20230919 02:30:06.378" endtime="20230919 02:30:06.399"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230919 02:30:06.400" level="INFO">{"path":"","type":"DIRECTORY","countStats":{"numVolume":-1,"numBucket":-1,"numDir":0,"numKey":1},"objectInfo":{"metadata":{},"name":"dir2","quotaInBytes":0,"quotaInNamespace":0,"usedNamespace":0,"creationTime":1695090562995,"modificationTime":1695090562995,"acls":[{"type":"USER","name":"hadoop","aclScope":"ACCESS","aclList":["ALL"]},{"type":"GROUP","name":"hadoop","aclScope":"ACCESS","aclList":["ALL"]}]},"status":"OK"}</msg>
<status status="PASS" starttime="20230919 02:30:06.399" endtime="20230919 02:30:06.400"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230919 02:30:06.400" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230919 02:30:06.400" endtime="20230919 02:30:06.400"/>
</kw>
<status status="PASS" starttime="20230919 02:30:06.377" endtime="20230919 02:30:06.401"/>
</kw>
<msg timestamp="20230919 02:30:06.401" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230919 02:30:06.377" endtime="20230919 02:30:06.401"/>
</kw>
<msg timestamp="20230919 02:30:06.401" level="INFO">${result} = {"path":"","type":"DIRECTORY","countStats":{"numVolume":-1,"numBucket":-1,"numDir":0,"numKey":1},"objectInfo":{"metadata":{},"name":"dir2","quotaInBytes":0,"quotaInNamespace":0,"usedNamespace":0,"crea...</msg>
<status status="PASS" starttime="20230919 02:30:06.376" endtime="20230919 02:30:06.401"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230919 02:30:06.401" endtime="20230919 02:30:06.402"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230919 02:30:06.402" endtime="20230919 02:30:06.402"/>
</kw>
<status status="PASS" starttime="20230919 02:30:06.376" endtime="20230919 02:30:06.402"/>
</kw>
<status status="PASS" starttime="20230919 02:30:06.375" endtime="20230919 02:30:06.402"/>
</kw>
<status status="PASS" starttime="20230919 02:30:06.375" endtime="20230919 02:30:06.402"/>
</kw>
<status status="PASS" starttime="20230919 02:30:06.374" endtime="20230919 02:30:06.402"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230919 02:30:06.373" endtime="20230919 02:30:06.403"/>
</test>
<test id="s1-s3-s2-t13" name="Check Recon Namespace Disk Usage" line="138">
<kw name="Wait For Summary">
<arg>${DISK_USAGE_URL}?path=/${VOLUME}/${BUCKET}&amp;files=true&amp;replica=true</arg>
<arg>\"sizeWithReplica\"</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230919 02:30:06.412" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/du?path=/vol-tiyuy/buc-abwuv&amp;files=true&amp;replica=true 2&gt;&amp;1'.</msg>
<msg timestamp="20230919 02:30:06.425" level="INFO">${rc} = 0</msg>
<msg timestamp="20230919 02:30:06.425" level="INFO">${output} = {"status":"OK","path":"/vol-tiyuy/buc-abwuv","size":10106,"sizeWithReplica":-1,"subPathCount":1,"subPaths":[{"key":false,"path":"/vol-tiyuy/buc-abwuv/dir1","size":6038,"sizeWithReplica":-1,"isKey":fal...</msg>
<status status="PASS" starttime="20230919 02:30:06.408" endtime="20230919 02:30:06.425"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230919 02:30:06.426" level="INFO">{"status":"OK","path":"/vol-tiyuy/buc-abwuv","size":10106,"sizeWithReplica":-1,"subPathCount":1,"subPaths":[{"key":false,"path":"/vol-tiyuy/buc-abwuv/dir1","size":6038,"sizeWithReplica":-1,"isKey":false}],"sizeDirectKey":4068}</msg>
<status status="PASS" starttime="20230919 02:30:06.426" endtime="20230919 02:30:06.427"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230919 02:30:06.427" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230919 02:30:06.427" endtime="20230919 02:30:06.427"/>
</kw>
<status status="PASS" starttime="20230919 02:30:06.408" endtime="20230919 02:30:06.428"/>
</kw>
<msg timestamp="20230919 02:30:06.428" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230919 02:30:06.407" endtime="20230919 02:30:06.428"/>
</kw>
<msg timestamp="20230919 02:30:06.428" level="INFO">${result} = {"status":"OK","path":"/vol-tiyuy/buc-abwuv","size":10106,"sizeWithReplica":-1,"subPathCount":1,"subPaths":[{"key":false,"path":"/vol-tiyuy/buc-abwuv/dir1","size":6038,"sizeWithReplica":-1,"isKey":fal...</msg>
<status status="PASS" starttime="20230919 02:30:06.407" endtime="20230919 02:30:06.428"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230919 02:30:06.428" endtime="20230919 02:30:06.429"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230919 02:30:06.429" endtime="20230919 02:30:06.429"/>
</kw>
<status status="PASS" starttime="20230919 02:30:06.406" endtime="20230919 02:30:06.429"/>
</kw>
<status status="PASS" starttime="20230919 02:30:06.406" endtime="20230919 02:30:06.429"/>
</kw>
<status status="PASS" starttime="20230919 02:30:06.405" endtime="20230919 02:30:06.429"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230919 02:30:06.404" endtime="20230919 02:30:06.430"/>
</test>
<test id="s1-s3-s2-t14" name="Check Recon Namespace Volume Quota Usage" line="141">
<kw name="Wait For Summary">
<arg>${QUOTA_USAGE_URL}?path=/${VOLUME}</arg>
<arg>\"used\"</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230919 02:30:06.438" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/quota?path=/vol-tiyuy 2&gt;&amp;1'.</msg>
<msg timestamp="20230919 02:30:06.452" level="INFO">${rc} = 0</msg>
<msg timestamp="20230919 02:30:06.452" level="INFO">${output} = {"allowed":-1,"used":10106,"status":"OK"}</msg>
<status status="PASS" starttime="20230919 02:30:06.435" endtime="20230919 02:30:06.452"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230919 02:30:06.453" level="INFO">{"allowed":-1,"used":10106,"status":"OK"}</msg>
<status status="PASS" starttime="20230919 02:30:06.453" endtime="20230919 02:30:06.453"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230919 02:30:06.454" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230919 02:30:06.454" endtime="20230919 02:30:06.454"/>
</kw>
<status status="PASS" starttime="20230919 02:30:06.435" endtime="20230919 02:30:06.454"/>
</kw>
<msg timestamp="20230919 02:30:06.455" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230919 02:30:06.434" endtime="20230919 02:30:06.455"/>
</kw>
<msg timestamp="20230919 02:30:06.455" level="INFO">${result} = {"allowed":-1,"used":10106,"status":"OK"}</msg>
<status status="PASS" starttime="20230919 02:30:06.434" endtime="20230919 02:30:06.455"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230919 02:30:06.455" endtime="20230919 02:30:06.455"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230919 02:30:06.456" endtime="20230919 02:30:06.456"/>
</kw>
<status status="PASS" starttime="20230919 02:30:06.433" endtime="20230919 02:30:06.456"/>
</kw>
<status status="PASS" starttime="20230919 02:30:06.433" endtime="20230919 02:30:06.456"/>
</kw>
<status status="PASS" starttime="20230919 02:30:06.432" endtime="20230919 02:30:06.456"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230919 02:30:06.431" endtime="20230919 02:30:06.457"/>
</test>
<test id="s1-s3-s2-t15" name="Check Recon Namespace Bucket Quota Usage" line="144">
<kw name="Wait For Summary">
<arg>${QUOTA_USAGE_URL}?path=/${VOLUME}/${BUCKET}</arg>
<arg>\"used\"</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230919 02:30:06.465" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/quota?path=/vol-tiyuy/buc-abwuv 2&gt;&amp;1'.</msg>
<msg timestamp="20230919 02:30:06.480" level="INFO">${rc} = 0</msg>
<msg timestamp="20230919 02:30:06.480" level="INFO">${output} = {"allowed":-1,"used":10106,"status":"OK"}</msg>
<status status="PASS" starttime="20230919 02:30:06.461" endtime="20230919 02:30:06.480"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230919 02:30:06.481" level="INFO">{"allowed":-1,"used":10106,"status":"OK"}</msg>
<status status="PASS" starttime="20230919 02:30:06.481" endtime="20230919 02:30:06.481"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230919 02:30:06.483" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230919 02:30:06.482" endtime="20230919 02:30:06.483"/>
</kw>
<status status="PASS" starttime="20230919 02:30:06.461" endtime="20230919 02:30:06.483"/>
</kw>
<msg timestamp="20230919 02:30:06.483" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230919 02:30:06.461" endtime="20230919 02:30:06.483"/>
</kw>
<msg timestamp="20230919 02:30:06.483" level="INFO">${result} = {"allowed":-1,"used":10106,"status":"OK"}</msg>
<status status="PASS" starttime="20230919 02:30:06.460" endtime="20230919 02:30:06.483"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230919 02:30:06.483" endtime="20230919 02:30:06.484"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230919 02:30:06.484" endtime="20230919 02:30:06.484"/>
</kw>
<status status="PASS" starttime="20230919 02:30:06.460" endtime="20230919 02:30:06.484"/>
</kw>
<status status="PASS" starttime="20230919 02:30:06.459" endtime="20230919 02:30:06.485"/>
</kw>
<status status="PASS" starttime="20230919 02:30:06.458" endtime="20230919 02:30:06.485"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230919 02:30:06.458" endtime="20230919 02:30:06.485"/>
</test>
<test id="s1-s3-s2-t16" name="Check Recon Namespace File Size Distribution Root" line="147">
<kw name="Wait For Summary">
<arg>${FILE_SIZE_DIST_URL}?path=/</arg>
<arg>\"dist\"</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230919 02:30:06.492" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/dist?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230919 02:30:06.506" level="INFO">${rc} = 0</msg>
<msg timestamp="20230919 02:30:06.506" level="INFO">${output} = {"dist":[0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"status":"OK"}</msg>
<status status="PASS" starttime="20230919 02:30:06.489" endtime="20230919 02:30:06.506"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230919 02:30:06.507" level="INFO">{"dist":[0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"status":"OK"}</msg>
<status status="PASS" starttime="20230919 02:30:06.507" endtime="20230919 02:30:06.508"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230919 02:30:06.508" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230919 02:30:06.508" endtime="20230919 02:30:06.508"/>
</kw>
<status status="PASS" starttime="20230919 02:30:06.489" endtime="20230919 02:30:06.509"/>
</kw>
<msg timestamp="20230919 02:30:06.509" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230919 02:30:06.489" endtime="20230919 02:30:06.509"/>
</kw>
<msg timestamp="20230919 02:30:06.509" level="INFO">${result} = {"dist":[0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"status":"OK"}</msg>
<status status="PASS" starttime="20230919 02:30:06.488" endtime="20230919 02:30:06.509"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230919 02:30:06.509" endtime="20230919 02:30:06.510"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230919 02:30:06.510" endtime="20230919 02:30:06.510"/>
</kw>
<status status="PASS" starttime="20230919 02:30:06.487" endtime="20230919 02:30:06.511"/>
</kw>
<status status="PASS" starttime="20230919 02:30:06.487" endtime="20230919 02:30:06.511"/>
</kw>
<status status="PASS" starttime="20230919 02:30:06.486" endtime="20230919 02:30:06.511"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230919 02:30:06.486" endtime="20230919 02:30:06.511"/>
</test>
<doc>Smoke test for Recon Namespace Summary Endpoint for FILE_SYSTEM_OPTIMIZED buckets.</doc>
<status status="PASS" starttime="20230919 02:29:03.740" endtime="20230919 02:30:06.512"/>
</suite>
<status status="PASS" starttime="20230919 02:28:13.728" endtime="20230919 02:30:06.515"/>
</suite>
<suite id="s1-s4" name="Loaddata" source="/opt/hadoop/smoketest/topology/loaddata.robot">
<test id="s1-s4-t1" name="Create a volume, bucket and key" line="27">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create topvol1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230919 02:30:09.317" level="INFO">Running command 'ozone sh volume create topvol1 2&gt;&amp;1'.</msg>
<msg timestamp="20230919 02:30:13.654" level="INFO">${rc} = 0</msg>
<msg timestamp="20230919 02:30:13.654" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230919 02:30:09.315" endtime="20230919 02:30:13.654"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230919 02:30:13.656" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230919 02:30:13.655" endtime="20230919 02:30:13.656"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230919 02:30:13.656" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230919 02:30:13.656" endtime="20230919 02:30:13.656"/>
</kw>
<status status="PASS" starttime="20230919 02:30:09.314" endtime="20230919 02:30:13.657"/>
</kw>
<msg timestamp="20230919 02:30:13.657" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230919 02:30:09.314" endtime="20230919 02:30:13.657"/>
</kw>
<msg timestamp="20230919 02:30:13.657" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230919 02:30:09.313" endtime="20230919 02:30:13.657"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230919 02:30:13.657" endtime="20230919 02:30:13.658"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /topvol1/bucket1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230919 02:30:13.661" level="INFO">Running command 'ozone sh bucket create /topvol1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20230919 02:30:17.889" level="INFO">${rc} = 0</msg>
<msg timestamp="20230919 02:30:17.889" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230919 02:30:13.659" endtime="20230919 02:30:17.889"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230919 02:30:17.890" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230919 02:30:17.890" endtime="20230919 02:30:17.890"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230919 02:30:17.891" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230919 02:30:17.890" endtime="20230919 02:30:17.891"/>
</kw>
<status status="PASS" starttime="20230919 02:30:13.659" endtime="20230919 02:30:17.891"/>
</kw>
<msg timestamp="20230919 02:30:17.891" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230919 02:30:13.658" endtime="20230919 02:30:17.891"/>
</kw>
<msg timestamp="20230919 02:30:17.892" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230919 02:30:13.658" endtime="20230919 02:30:17.892"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230919 02:30:17.892" endtime="20230919 02:30:17.892"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /topvol1/bucket1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230919 02:30:17.896" level="INFO">Running command 'ozone sh key put /topvol1/bucket1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230919 02:30:24.652" level="INFO">${rc} = 0</msg>
<msg timestamp="20230919 02:30:24.652" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230919 02:30:17.894" endtime="20230919 02:30:24.652"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230919 02:30:24.653" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230919 02:30:24.652" endtime="20230919 02:30:24.654"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230919 02:30:24.654" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230919 02:30:24.654" endtime="20230919 02:30:24.654"/>
</kw>
<status status="PASS" starttime="20230919 02:30:17.893" endtime="20230919 02:30:24.655"/>
</kw>
<msg timestamp="20230919 02:30:24.655" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230919 02:30:17.893" endtime="20230919 02:30:24.655"/>
</kw>
<msg timestamp="20230919 02:30:24.655" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230919 02:30:17.892" endtime="20230919 02:30:24.655"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230919 02:30:24.655" endtime="20230919 02:30:24.655"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230919 02:30:09.313" endtime="20230919 02:30:24.656"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20230919 02:30:09.265" endtime="20230919 02:30:24.657"/>
</suite>
<suite id="s1-s5" name="readdata-first-half" source="/opt/hadoop/smoketest/topology/readdata.robot">
<test id="s1-s5-t1" name="Read data from previously created key" line="27">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230919 02:30:32.373" level="INFO">${random} = 59727</msg>
<status status="PASS" starttime="20230919 02:30:32.372" endtime="20230919 02:30:32.373"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /topvol1/bucket1/key1 /tmp/key1-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230919 02:30:32.377" level="INFO">Running command 'ozone sh key get /topvol1/bucket1/key1 /tmp/key1-59727 2&gt;&amp;1'.</msg>
<msg timestamp="20230919 02:31:11.898" level="INFO">${rc} = 0</msg>
<msg timestamp="20230919 02:31:11.898" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230919 02:30:32.374" endtime="20230919 02:31:11.898"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230919 02:31:11.900" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230919 02:31:11.899" endtime="20230919 02:31:11.900"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230919 02:31:11.900" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230919 02:31:11.900" endtime="20230919 02:31:11.900"/>
</kw>
<status status="PASS" starttime="20230919 02:30:32.374" endtime="20230919 02:31:11.901"/>
</kw>
<msg timestamp="20230919 02:31:11.901" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230919 02:30:32.374" endtime="20230919 02:31:11.901"/>
</kw>
<msg timestamp="20230919 02:31:11.901" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230919 02:30:32.373" endtime="20230919 02:31:11.901"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230919 02:31:11.901" endtime="20230919 02:31:11.902"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230919 02:30:32.372" endtime="20230919 02:31:11.902"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20230919 02:30:32.324" endtime="20230919 02:31:11.904"/>
</suite>
<suite id="s1-s6" name="readdata-second-half" source="/opt/hadoop/smoketest/topology/readdata.robot">
<test id="s1-s6-t1" name="Read data from previously created key" line="27">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230919 02:31:53.432" level="INFO">${random} = 42951</msg>
<status status="PASS" starttime="20230919 02:31:53.431" endtime="20230919 02:31:53.432"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /topvol1/bucket1/key1 /tmp/key1-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230919 02:31:53.436" level="INFO">Running command 'ozone sh key get /topvol1/bucket1/key1 /tmp/key1-42951 2&gt;&amp;1'.</msg>
<msg timestamp="20230919 02:32:00.064" level="INFO">${rc} = 0</msg>
<msg timestamp="20230919 02:32:00.064" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230919 02:31:53.434" endtime="20230919 02:32:00.064"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230919 02:32:00.065" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230919 02:32:00.065" endtime="20230919 02:32:00.066"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230919 02:32:00.066" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230919 02:32:00.066" endtime="20230919 02:32:00.066"/>
</kw>
<status status="PASS" starttime="20230919 02:31:53.433" endtime="20230919 02:32:00.066"/>
</kw>
<msg timestamp="20230919 02:32:00.067" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230919 02:31:53.433" endtime="20230919 02:32:00.067"/>
</kw>
<msg timestamp="20230919 02:32:00.067" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230919 02:31:53.432" endtime="20230919 02:32:00.067"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230919 02:32:00.067" endtime="20230919 02:32:00.067"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230919 02:31:53.430" endtime="20230919 02:32:00.067"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20230919 02:31:53.383" endtime="20230919 02:32:00.069"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="224421"/>
</suite>
<statistics>
<total>
<stat pass="32" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="32" fail="0" skip="0" id="s1" name="ozone-topology">ozone-topology</stat>
<stat pass="2" fail="0" skip="0" id="s1-s1" name="Basic">ozone-topology.Basic</stat>
<stat pass="4" fail="0" skip="0" id="s1-s2" name="Cli">ozone-topology.Cli</stat>
<stat pass="23" fail="0" skip="0" id="s1-s3" name="Recon">ozone-topology.Recon</stat>
<stat pass="7" fail="0" skip="0" id="s1-s3-s1" name="Recon-Api">ozone-topology.Recon.Recon-Api</stat>
<stat pass="16" fail="0" skip="0" id="s1-s3-s2" name="Recon-Nssummary">ozone-topology.Recon.Recon-Nssummary</stat>
<stat pass="1" fail="0" skip="0" id="s1-s4" name="Loaddata">ozone-topology.Loaddata</stat>
<stat pass="1" fail="0" skip="0" id="s1-s5" name="readdata-first-half">ozone-topology.readdata-first-half</stat>
<stat pass="1" fail="0" skip="0" id="s1-s6" name="readdata-second-half">ozone-topology.readdata-second-half</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
