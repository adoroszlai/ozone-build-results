<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 6.1.1 (Python 3.8.10 on linux)" generated="20230914 01:24:56.639" rpa="false" schemaversion="4">
<suite id="s1" name="ozone-topology">
<suite id="s1-s1" name="Basic" source="/opt/hadoop/smoketest/basic/basic.robot">
<test id="s1-s1-t1" name="Check webui static resources" line="29">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230914 01:20:20.220" endtime="20230914 01:20:20.220"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -s -I http://${SCM}:9876/static/bootstrap-3.4.1/js/bootstrap.min.js</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230914 01:20:20.230" level="INFO">Running command 'curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js 2&gt;&amp;1'.</msg>
<msg timestamp="20230914 01:20:20.580" level="INFO">${rc} = 0</msg>
<msg timestamp="20230914 01:20:20.580" level="INFO">${output} = HTTP/1.1 200 OK
Date: Thu, 14 Sep 2023 01:20:20 GMT
X-Content-Type-Options: nosniff
X-XSS-Protection: 1; mode=block
X-FRAME-OPTIONS: SAMEORIGIN
Last-Modified: Thu, 14 Sep 2023 00:38:16 GMT
Content-Typ...</msg>
<status status="PASS" starttime="20230914 01:20:20.223" endtime="20230914 01:20:20.580"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 01:20:20.583" level="INFO">HTTP/1.1 200 OK
Date: Thu, 14 Sep 2023 01:20:20 GMT
X-Content-Type-Options: nosniff
X-XSS-Protection: 1; mode=block
X-FRAME-OPTIONS: SAMEORIGIN
Last-Modified: Thu, 14 Sep 2023 00:38:16 GMT
Content-Type: application/javascript
Accept-Ranges: bytes
Content-Length: 39680
</msg>
<status status="PASS" starttime="20230914 01:20:20.581" endtime="20230914 01:20:20.583"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230914 01:20:20.587" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230914 01:20:20.584" endtime="20230914 01:20:20.587"/>
</kw>
<status status="PASS" starttime="20230914 01:20:20.222" endtime="20230914 01:20:20.587"/>
</kw>
<msg timestamp="20230914 01:20:20.587" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230914 01:20:20.221" endtime="20230914 01:20:20.589"/>
</kw>
<msg timestamp="20230914 01:20:20.590" level="INFO">${result} = HTTP/1.1 200 OK
Date: Thu, 14 Sep 2023 01:20:20 GMT
X-Content-Type-Options: nosniff
X-XSS-Protection: 1; mode=block
X-FRAME-OPTIONS: SAMEORIGIN
Last-Modified: Thu, 14 Sep 2023 00:38:16 GMT
Content-Typ...</msg>
<status status="PASS" starttime="20230914 01:20:20.221" endtime="20230914 01:20:20.590"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230914 01:20:20.590" endtime="20230914 01:20:20.590"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230914 01:20:20.218" endtime="20230914 01:20:20.592"/>
</test>
<test id="s1-s1-t2" name="Basic Freon smoketest" line="34">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230914 01:20:20.599" endtime="20230914 01:20:20.602"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>10</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230914 01:20:20.603" level="INFO">${random} = ZIlF5kDqpq</msg>
<status status="PASS" starttime="20230914 01:20:20.602" endtime="20230914 01:20:20.607"/>
</kw>
<kw name="Freon OCKG" library="freon">
<arg>prefix=${random}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230914 01:20:20.638" level="INFO">Running command 'ozone freon ockg  -t 1 -n1 -p ZIlF5kDqpq  2&gt;&amp;1'.</msg>
<msg timestamp="20230914 01:20:35.628" level="INFO">${rc} = 0</msg>
<msg timestamp="20230914 01:20:35.628" level="INFO">${output} = 2023-09-14 01:20:25,533 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-14 01:20:25,748 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230914 01:20:20.629" endtime="20230914 01:20:35.628"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 01:20:35.629" level="INFO">2023-09-14 01:20:25,533 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-14 01:20:25,748 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-09-14 01:20:25,748 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-09-14 01:20:25,854 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ZIlF5kDqpq and number-of-tests 1
2023-09-14 01:20:25,925 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-14 01:20:26,927 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-14 01:20:27,932 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-14 01:20:28,112 [main] INFO rpc.RpcClient: Creating Volume: vol1, with hadoop as owner and space quota set to -1 bytes, counts quota set to -1
2023-09-14 01:20:28,295 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Encryption set to false, Replication Type set to server-side default replication type, Namespace Quota set to -1, Space Quota set to -1 
2023-09-14 01:20:28,939 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-14 01:20:29,940 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-14 01:20:30,221 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2023-09-14 01:20:30,631 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2023-09-14 01:20:30,941 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-14 01:20:31,941 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-14 01:20:32,941 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-14 01:20:34,009 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-14 01:20:35,009 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2023-09-14 01:20:35,250 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=1, min=5808.206933, max=5808.206933, mean=5808.206933, stddev=0.0, median=5808.206933, p75=5808.206933, p95=5808.206933, p98=5808.206933, p99=5808.206933, p999=5808.206933, mean_rate=0.14533267197026833, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-09-14 01:20:35,255 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 9
2023-09-14 01:20:35,255 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-09-14 01:20:35,255 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20230914 01:20:35.629" endtime="20230914 01:20:35.630"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230914 01:20:35.630" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230914 01:20:35.630" endtime="20230914 01:20:35.630"/>
</kw>
<status status="PASS" starttime="20230914 01:20:20.615" endtime="20230914 01:20:35.631"/>
</kw>
<msg timestamp="20230914 01:20:35.631" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230914 01:20:20.614" endtime="20230914 01:20:35.631"/>
</kw>
<msg timestamp="20230914 01:20:35.631" level="INFO">${result} = 2023-09-14 01:20:25,533 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-14 01:20:25,748 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230914 01:20:20.608" endtime="20230914 01:20:35.631"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230914 01:20:35.631" endtime="20230914 01:20:35.632"/>
</kw>
<status status="PASS" starttime="20230914 01:20:20.607" endtime="20230914 01:20:35.632"/>
</kw>
<kw name="Freon OCKV" library="freon">
<arg>prefix=${random}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockv ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230914 01:20:35.637" level="INFO">Running command 'ozone freon ockv  -t 1 -n1 -p ZIlF5kDqpq  2&gt;&amp;1'.</msg>
<msg timestamp="20230914 01:20:44.169" level="INFO">${rc} = 0</msg>
<msg timestamp="20230914 01:20:44.169" level="INFO">${output} = 2023-09-14 01:20:38,572 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-14 01:20:38,695 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230914 01:20:35.635" endtime="20230914 01:20:44.169"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 01:20:44.171" level="INFO">2023-09-14 01:20:38,572 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-14 01:20:38,695 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-09-14 01:20:38,695 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-09-14 01:20:38,772 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ZIlF5kDqpq and number-of-tests 1
2023-09-14 01:20:38,842 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-14 01:20:39,905 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-14 01:20:40,906 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-14 01:20:41,409 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2023-09-14 01:20:41,907 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-14 01:20:42,908 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2023-09-14 01:20:43,772 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-validate, count=1, min=72.595404, max=72.595404, mean=72.595404, stddev=0.0, median=72.595404, p75=72.595404, p95=72.595404, p98=72.595404, p99=72.595404, p999=72.595404, mean_rate=0.9201700509588702, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-09-14 01:20:43,773 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 5
2023-09-14 01:20:43,773 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-09-14 01:20:43,773 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20230914 01:20:44.170" endtime="20230914 01:20:44.171"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230914 01:20:44.171" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230914 01:20:44.171" endtime="20230914 01:20:44.171"/>
</kw>
<status status="PASS" starttime="20230914 01:20:35.634" endtime="20230914 01:20:44.171"/>
</kw>
<msg timestamp="20230914 01:20:44.172" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230914 01:20:35.634" endtime="20230914 01:20:44.172"/>
</kw>
<msg timestamp="20230914 01:20:44.172" level="INFO">${result} = 2023-09-14 01:20:38,572 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-14 01:20:38,695 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230914 01:20:35.633" endtime="20230914 01:20:44.172"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230914 01:20:44.172" endtime="20230914 01:20:44.172"/>
</kw>
<status status="PASS" starttime="20230914 01:20:35.632" endtime="20230914 01:20:44.173"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230914 01:20:20.595" endtime="20230914 01:20:44.173"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20230914 01:20:20.028" endtime="20230914 01:20:44.174"/>
</suite>
<suite id="s1-s2" name="Cli" source="/opt/hadoop/smoketest/topology/cli.robot">
<test id="s1-s2-t1" name="Run printTopology" line="27">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin printTopology</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230914 01:20:47.126" level="INFO">Running command 'ozone admin printTopology 2&gt;&amp;1'.</msg>
<msg timestamp="20230914 01:20:51.221" level="INFO">${rc} = 0</msg>
<msg timestamp="20230914 01:20:51.221" level="INFO">${output} = State = HEALTHY
 10.5.0.8(ozone-topology_datanode_5_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rac...</msg>
<status status="PASS" starttime="20230914 01:20:47.123" endtime="20230914 01:20:51.221"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 01:20:51.223" level="INFO">State = HEALTHY
 10.5.0.8(ozone-topology_datanode_5_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.9(ozone-topology_datanode_6_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1</msg>
<status status="PASS" starttime="20230914 01:20:51.222" endtime="20230914 01:20:51.223"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230914 01:20:51.223" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230914 01:20:51.223" endtime="20230914 01:20:51.223"/>
</kw>
<status status="PASS" starttime="20230914 01:20:47.123" endtime="20230914 01:20:51.224"/>
</kw>
<msg timestamp="20230914 01:20:51.224" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230914 01:20:47.122" endtime="20230914 01:20:51.224"/>
</kw>
<msg timestamp="20230914 01:20:51.224" level="INFO">${output} = State = HEALTHY
 10.5.0.8(ozone-topology_datanode_5_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rac...</msg>
<status status="PASS" starttime="20230914 01:20:47.122" endtime="20230914 01:20:51.224"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net)</arg>
<arg>IN_SERVICE</arg>
<arg>/rack2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230914 01:20:51.224" endtime="20230914 01:20:51.225"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230914 01:20:47.121" endtime="20230914 01:20:51.225"/>
</test>
<test id="s1-s2-t2" name="Run printTopology -o" line="30">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin printTopology -o</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230914 01:20:51.230" level="INFO">Running command 'ozone admin printTopology -o 2&gt;&amp;1'.</msg>
<msg timestamp="20230914 01:20:56.261" level="INFO">${rc} = 0</msg>
<msg timestamp="20230914 01:20:56.261" level="INFO">${output} = State = HEALTHY
Location: /rack1
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net) IN_SERVICE
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net) IN_SERVICE
 10.5.0.6(ozone-topology_data...</msg>
<status status="PASS" starttime="20230914 01:20:51.228" endtime="20230914 01:20:56.261"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 01:20:56.263" level="INFO">State = HEALTHY
Location: /rack1
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net) IN_SERVICE
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net) IN_SERVICE
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net) IN_SERVICE
Location: /rack2
 10.5.0.8(ozone-topology_datanode_5_1.ozone-topology_net) IN_SERVICE
 10.5.0.9(ozone-topology_datanode_6_1.ozone-topology_net) IN_SERVICE
 10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net) IN_SERVICE</msg>
<status status="PASS" starttime="20230914 01:20:56.262" endtime="20230914 01:20:56.263"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230914 01:20:56.263" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230914 01:20:56.263" endtime="20230914 01:20:56.264"/>
</kw>
<status status="PASS" starttime="20230914 01:20:51.227" endtime="20230914 01:20:56.264"/>
</kw>
<msg timestamp="20230914 01:20:56.264" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230914 01:20:51.227" endtime="20230914 01:20:56.264"/>
</kw>
<msg timestamp="20230914 01:20:56.264" level="INFO">${output} = State = HEALTHY
Location: /rack1
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net) IN_SERVICE
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net) IN_SERVICE
 10.5.0.6(ozone-topology_data...</msg>
<status status="PASS" starttime="20230914 01:20:51.226" endtime="20230914 01:20:56.264"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Location: /rack2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230914 01:20:56.264" endtime="20230914 01:20:56.265"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net) IN_SERVICE</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230914 01:20:56.265" endtime="20230914 01:20:56.265"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230914 01:20:51.226" endtime="20230914 01:20:56.265"/>
</test>
<test id="s1-s2-t3" name="Run printTopology --operational-state IN_SERVICE" line="34">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin printTopology --operational-state IN_SERVICE</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230914 01:20:56.272" level="INFO">Running command 'ozone admin printTopology --operational-state IN_SERVICE 2&gt;&amp;1'.</msg>
<msg timestamp="20230914 01:21:00.929" level="INFO">${rc} = 0</msg>
<msg timestamp="20230914 01:21:00.929" level="INFO">${output} = State = HEALTHY
 10.5.0.8(ozone-topology_datanode_5_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rac...</msg>
<status status="PASS" starttime="20230914 01:20:56.270" endtime="20230914 01:21:00.929"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 01:21:00.930" level="INFO">State = HEALTHY
 10.5.0.8(ozone-topology_datanode_5_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.9(ozone-topology_datanode_6_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1</msg>
<status status="PASS" starttime="20230914 01:21:00.929" endtime="20230914 01:21:00.930"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230914 01:21:00.931" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230914 01:21:00.931" endtime="20230914 01:21:00.931"/>
</kw>
<status status="PASS" starttime="20230914 01:20:56.269" endtime="20230914 01:21:00.931"/>
</kw>
<msg timestamp="20230914 01:21:00.931" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230914 01:20:56.269" endtime="20230914 01:21:00.931"/>
</kw>
<msg timestamp="20230914 01:21:00.932" level="INFO">${output} = State = HEALTHY
 10.5.0.8(ozone-topology_datanode_5_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rac...</msg>
<status status="PASS" starttime="20230914 01:20:56.268" endtime="20230914 01:21:00.932"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net)</arg>
<arg>IN_SERVICE</arg>
<arg>/rack2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230914 01:21:00.932" endtime="20230914 01:21:00.932"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230914 01:20:56.267" endtime="20230914 01:21:00.933"/>
</test>
<test id="s1-s2-t4" name="Run printTopology --node-state HEALTHY" line="37">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin printTopology --node-state HEALTHY</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230914 01:21:00.941" level="INFO">Running command 'ozone admin printTopology --node-state HEALTHY 2&gt;&amp;1'.</msg>
<msg timestamp="20230914 01:21:05.932" level="INFO">${rc} = 0</msg>
<msg timestamp="20230914 01:21:05.932" level="INFO">${output} = State = HEALTHY
 10.5.0.8(ozone-topology_datanode_5_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rac...</msg>
<status status="PASS" starttime="20230914 01:21:00.938" endtime="20230914 01:21:05.932"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 01:21:05.934" level="INFO">State = HEALTHY
 10.5.0.8(ozone-topology_datanode_5_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.9(ozone-topology_datanode_6_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1</msg>
<status status="PASS" starttime="20230914 01:21:05.933" endtime="20230914 01:21:05.934"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230914 01:21:05.934" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230914 01:21:05.934" endtime="20230914 01:21:05.934"/>
</kw>
<status status="PASS" starttime="20230914 01:21:00.938" endtime="20230914 01:21:05.935"/>
</kw>
<msg timestamp="20230914 01:21:05.935" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230914 01:21:00.937" endtime="20230914 01:21:05.935"/>
</kw>
<msg timestamp="20230914 01:21:05.935" level="INFO">${output} = State = HEALTHY
 10.5.0.8(ozone-topology_datanode_5_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rac...</msg>
<status status="PASS" starttime="20230914 01:21:00.937" endtime="20230914 01:21:05.935"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net)</arg>
<arg>IN_SERVICE</arg>
<arg>/rack2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230914 01:21:05.935" endtime="20230914 01:21:05.936"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230914 01:21:00.936" endtime="20230914 01:21:05.936"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20230914 01:20:47.069" endtime="20230914 01:21:05.938"/>
</suite>
<suite id="s1-s3" name="Recon" source="/opt/hadoop/smoketest/recon">
<suite id="s1-s3-s1" name="Recon-Api" source="/opt/hadoop/smoketest/recon/recon-api.robot">
<test id="s1-s3-s1-t1" name="Check if Recon picks up OM data" line="61">
<kw name="Execute" library="os">
<arg>ozone sh volume create recon</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230914 01:21:08.951" level="INFO">Running command 'ozone sh volume create recon 2&gt;&amp;1'.</msg>
<msg timestamp="20230914 01:21:13.747" level="INFO">${rc} = 0</msg>
<msg timestamp="20230914 01:21:13.747" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230914 01:21:08.948" endtime="20230914 01:21:13.747"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 01:21:13.748" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230914 01:21:13.747" endtime="20230914 01:21:13.748"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230914 01:21:13.749" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230914 01:21:13.749" endtime="20230914 01:21:13.749"/>
</kw>
<status status="PASS" starttime="20230914 01:21:08.947" endtime="20230914 01:21:13.750"/>
</kw>
<msg timestamp="20230914 01:21:13.750" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230914 01:21:08.947" endtime="20230914 01:21:13.750"/>
</kw>
<status status="PASS" starttime="20230914 01:21:08.947" endtime="20230914 01:21:13.750"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create recon/api --layout=LEGACY</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230914 01:21:13.756" level="INFO">Running command 'ozone sh bucket create recon/api --layout=LEGACY 2&gt;&amp;1'.</msg>
<msg timestamp="20230914 01:21:18.649" level="INFO">${rc} = 0</msg>
<msg timestamp="20230914 01:21:18.650" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230914 01:21:13.753" endtime="20230914 01:21:18.650"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 01:21:18.651" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230914 01:21:18.650" endtime="20230914 01:21:18.651"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230914 01:21:18.652" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230914 01:21:18.652" endtime="20230914 01:21:18.652"/>
</kw>
<status status="PASS" starttime="20230914 01:21:13.751" endtime="20230914 01:21:18.652"/>
</kw>
<msg timestamp="20230914 01:21:18.653" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230914 01:21:13.751" endtime="20230914 01:21:18.653"/>
</kw>
<status status="PASS" starttime="20230914 01:21:13.750" endtime="20230914 01:21:18.653"/>
</kw>
<kw name="Freon OCKG" library="freon">
<arg>n=10</arg>
<arg>args=-s 1025 -v recon -b api</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230914 01:21:18.658" level="INFO">Running command 'ozone freon ockg  -t 1 -n10 -p ockg -s 1025 -v recon -b api 2&gt;&amp;1'.</msg>
<msg timestamp="20230914 01:21:29.682" level="INFO">${rc} = 0</msg>
<msg timestamp="20230914 01:21:29.682" level="INFO">${output} = 2023-09-14 01:21:20,926 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-14 01:21:21,032 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230914 01:21:18.655" endtime="20230914 01:21:29.682"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 01:21:29.684" level="INFO">2023-09-14 01:21:20,926 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-14 01:21:21,032 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-09-14 01:21:21,032 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-09-14 01:21:21,123 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ockg and number-of-tests 10
2023-09-14 01:21:21,187 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2023-09-14 01:21:22,193 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2023-09-14 01:21:23,194 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2023-09-14 01:21:23,583 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2023-09-14 01:21:23,957 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2023-09-14 01:21:24,194 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2023-09-14 01:21:25,196 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2023-09-14 01:21:26,197 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2023-09-14 01:21:27,197 [Thread-5] INFO freon.ProgressBar: Progress: 20.00 % (2 out of 10)
2023-09-14 01:21:28,198 [Thread-5] INFO freon.ProgressBar: Progress: 90.00 % (9 out of 10)
2023-09-14 01:21:29,198 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (10 out of 10)
2023-09-14 01:21:29,330 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=10, min=116.981335, max=3826.075725, mean=554.8460707185495, stddev=1086.0681644004876, median=144.460202, p75=328.600489, p95=3826.075725, p98=3826.075725, p99=3826.075725, p999=3826.075725, mean_rate=1.5082681144953005, m1=1.0, m5=1.0, m15=1.0, rate_unit=events/second, duration_unit=milliseconds
2023-09-14 01:21:29,330 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 8
2023-09-14 01:21:29,331 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-09-14 01:21:29,331 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 10</msg>
<status status="PASS" starttime="20230914 01:21:29.683" endtime="20230914 01:21:29.684"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230914 01:21:29.685" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230914 01:21:29.684" endtime="20230914 01:21:29.685"/>
</kw>
<status status="PASS" starttime="20230914 01:21:18.655" endtime="20230914 01:21:29.685"/>
</kw>
<msg timestamp="20230914 01:21:29.685" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230914 01:21:18.654" endtime="20230914 01:21:29.685"/>
</kw>
<msg timestamp="20230914 01:21:29.686" level="INFO">${result} = 2023-09-14 01:21:20,926 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-14 01:21:21,032 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230914 01:21:18.654" endtime="20230914 01:21:29.686"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230914 01:21:29.686" endtime="20230914 01:21:29.686"/>
</kw>
<status status="PASS" starttime="20230914 01:21:18.653" endtime="20230914 01:21:29.686"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Check if Recon picks up container from OM</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit as ozone admin</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230914 01:21:29.688" endtime="20230914 01:21:29.688"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/containers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230914 01:21:29.693" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20230914 01:21:29.934" level="INFO">${rc} = 0</msg>
<msg timestamp="20230914 01:21:29.934" level="INFO">${output} = {"data":{"totalCount":4,"prevKey":4,"containers":[{"ContainerID":1,"NumberOfKeys":0,"pipelines":null},{"ContainerID":2,"NumberOfKeys":0,"pipelines":null},{"ContainerID":3,"NumberOfKeys":0,"pipelines":...</msg>
<status status="PASS" starttime="20230914 01:21:29.690" endtime="20230914 01:21:29.934"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 01:21:29.935" level="INFO">{"data":{"totalCount":4,"prevKey":4,"containers":[{"ContainerID":1,"NumberOfKeys":0,"pipelines":null},{"ContainerID":2,"NumberOfKeys":0,"pipelines":null},{"ContainerID":3,"NumberOfKeys":0,"pipelines":null},{"ContainerID":4,"NumberOfKeys":0,"pipelines":null}]}}</msg>
<status status="PASS" starttime="20230914 01:21:29.934" endtime="20230914 01:21:29.935"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230914 01:21:29.936" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230914 01:21:29.935" endtime="20230914 01:21:29.936"/>
</kw>
<status status="PASS" starttime="20230914 01:21:29.689" endtime="20230914 01:21:29.936"/>
</kw>
<msg timestamp="20230914 01:21:29.936" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230914 01:21:29.689" endtime="20230914 01:21:29.936"/>
</kw>
<msg timestamp="20230914 01:21:29.936" level="INFO">${result} = {"data":{"totalCount":4,"prevKey":4,"containers":[{"ContainerID":1,"NumberOfKeys":0,"pipelines":null},{"ContainerID":2,"NumberOfKeys":0,"pipelines":null},{"ContainerID":3,"NumberOfKeys":0,"pipelines":...</msg>
<status status="PASS" starttime="20230914 01:21:29.688" endtime="20230914 01:21:29.937"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"ContainerID\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230914 01:21:29.937" endtime="20230914 01:21:29.937"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/utilization/fileCount</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230914 01:21:29.946" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20230914 01:21:29.984" level="INFO">${rc} = 0</msg>
<msg timestamp="20230914 01:21:29.984" level="INFO">${output} = []</msg>
<status status="PASS" starttime="20230914 01:21:29.941" endtime="20230914 01:21:29.984"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 01:21:29.985" level="INFO">[]</msg>
<status status="PASS" starttime="20230914 01:21:29.984" endtime="20230914 01:21:29.985"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230914 01:21:29.986" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230914 01:21:29.985" endtime="20230914 01:21:29.986"/>
</kw>
<status status="PASS" starttime="20230914 01:21:29.941" endtime="20230914 01:21:29.986"/>
</kw>
<msg timestamp="20230914 01:21:29.986" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230914 01:21:29.938" endtime="20230914 01:21:29.986"/>
</kw>
<msg timestamp="20230914 01:21:29.987" level="INFO">${result} = []</msg>
<status status="PASS" starttime="20230914 01:21:29.937" endtime="20230914 01:21:29.987"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20230914 01:21:29.988" level="FAIL">'[]' does not contain '"fileSize":2048,"count":10'</msg>
<status status="FAIL" starttime="20230914 01:21:29.987" endtime="20230914 01:21:29.988"/>
</kw>
<status status="FAIL" starttime="20230914 01:21:29.687" endtime="20230914 01:21:29.988"/>
</kw>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit as ozone admin</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230914 01:21:39.990" endtime="20230914 01:21:39.990"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/containers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230914 01:21:39.995" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20230914 01:21:40.013" level="INFO">${rc} = 0</msg>
<msg timestamp="20230914 01:21:40.013" level="INFO">${output} = {"data":{"totalCount":4,"prevKey":4,"containers":[{"ContainerID":1,"NumberOfKeys":0,"pipelines":null},{"ContainerID":2,"NumberOfKeys":0,"pipelines":null},{"ContainerID":3,"NumberOfKeys":0,"pipelines":...</msg>
<status status="PASS" starttime="20230914 01:21:39.992" endtime="20230914 01:21:40.013"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 01:21:40.015" level="INFO">{"data":{"totalCount":4,"prevKey":4,"containers":[{"ContainerID":1,"NumberOfKeys":0,"pipelines":null},{"ContainerID":2,"NumberOfKeys":0,"pipelines":null},{"ContainerID":3,"NumberOfKeys":0,"pipelines":null},{"ContainerID":4,"NumberOfKeys":0,"pipelines":null}]}}</msg>
<status status="PASS" starttime="20230914 01:21:40.014" endtime="20230914 01:21:40.015"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230914 01:21:40.015" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230914 01:21:40.015" endtime="20230914 01:21:40.016"/>
</kw>
<status status="PASS" starttime="20230914 01:21:39.991" endtime="20230914 01:21:40.016"/>
</kw>
<msg timestamp="20230914 01:21:40.016" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230914 01:21:39.991" endtime="20230914 01:21:40.016"/>
</kw>
<msg timestamp="20230914 01:21:40.016" level="INFO">${result} = {"data":{"totalCount":4,"prevKey":4,"containers":[{"ContainerID":1,"NumberOfKeys":0,"pipelines":null},{"ContainerID":2,"NumberOfKeys":0,"pipelines":null},{"ContainerID":3,"NumberOfKeys":0,"pipelines":...</msg>
<status status="PASS" starttime="20230914 01:21:39.990" endtime="20230914 01:21:40.016"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"ContainerID\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230914 01:21:40.017" endtime="20230914 01:21:40.017"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/utilization/fileCount</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230914 01:21:40.021" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20230914 01:21:40.038" level="INFO">${rc} = 0</msg>
<msg timestamp="20230914 01:21:40.038" level="INFO">${output} = [{"volume":"recon","bucket":"api","fileSize":2048,"count":10},{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20230914 01:21:40.019" endtime="20230914 01:21:40.038"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 01:21:40.040" level="INFO">[{"volume":"recon","bucket":"api","fileSize":2048,"count":10},{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20230914 01:21:40.039" endtime="20230914 01:21:40.040"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230914 01:21:40.040" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230914 01:21:40.040" endtime="20230914 01:21:40.041"/>
</kw>
<status status="PASS" starttime="20230914 01:21:40.018" endtime="20230914 01:21:40.041"/>
</kw>
<msg timestamp="20230914 01:21:40.041" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230914 01:21:40.018" endtime="20230914 01:21:40.041"/>
</kw>
<msg timestamp="20230914 01:21:40.041" level="INFO">${result} = [{"volume":"recon","bucket":"api","fileSize":2048,"count":10},{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20230914 01:21:40.017" endtime="20230914 01:21:40.041"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230914 01:21:40.041" endtime="20230914 01:21:40.042"/>
</kw>
<status status="PASS" starttime="20230914 01:21:39.989" endtime="20230914 01:21:40.042"/>
</kw>
<status status="PASS" starttime="20230914 01:21:29.687" endtime="20230914 01:21:40.042"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230914 01:21:08.946" endtime="20230914 01:21:40.042"/>
</test>
<test id="s1-s3-s1-t2" name="Check if Recon picks up DN heartbeats" line="71">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/datanodes</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230914 01:21:40.049" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/datanodes 2&gt;&amp;1'.</msg>
<msg timestamp="20230914 01:21:40.086" level="INFO">${rc} = 0</msg>
<msg timestamp="20230914 01:21:40.086" level="INFO">${output} = {"totalCount":6,"datanodes":[{"uuid":"d81b5483-2edb-49e5-951b-520f48b40a46","hostname":"ozone-topology_datanode_2_1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":0,"stor...</msg>
<status status="PASS" starttime="20230914 01:21:40.046" endtime="20230914 01:21:40.086"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 01:21:40.089" level="INFO">{"totalCount":6,"datanodes":[{"uuid":"d81b5483-2edb-49e5-951b-520f48b40a46","hostname":"ozone-topology_datanode_2_1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":0,"storageReport":{"capacity":89297309696,"used":4096,"remaining":15232348160},"pipelines":[{"pipelineID":"6b386b12-cfac-4813-8b50-ab855c9e5edf","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_6_1.ozone-topology_net"},{"pipelineID":"0e3e3a34-a2dd-47d4-b76c-97edd3f97628","replicationType":"RATIS","replicationFactor":"ONE","leaderNode":"ozone-topology_datanode_2_1.ozone-topology_net"},{"pipelineID":"3068300d-45a3-47aa-9a9e-1e272f1a2a28","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_2_1.ozone-topology_net"}],"containers":2,"openContainers":3,"leaderCount":2,"version":"1.4.0-SNAPSHOT","setupTime":1694654313389,"revision":"eec1ce49c87595c83d6946c019c24bda4e86401d","buildDate":"2023-09-14T00:38Z","layoutVersion":7,"networkLocation":"/rack1"},{"uuid":"e9496986-a245-4e56-8936-b25b4826b895","hostname":"ozone-topology_datanode_6_1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":0,"storageReport":{"capacity":89297309696,"used":4096,"remaining":15232282624},"pipelines":[{"pipelineID":"6b386b12-cfac-4813-8b50-ab855c9e5edf","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_6_1.ozone-topology_net"},{"pipelineID":"7125681c-b4ec-40d8-8667-dc50d77480ac","replicationType":"RATIS","replicationFactor":"ONE","leaderNode":"ozone-topology_datanode_6_1.ozone-topology_net"},{"pipelineID":"3068300d-45a3-47aa-9a9e-1e272f1a2a28","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_2_1.ozone-topology_net"}],"containers":2,"openContainers":3,"leaderCount":2,"version":"1.4.0-SNAPSHOT","setupTime":1694654314645,"revision":"eec1ce49c87595c83d6946c019c24bda4e86401d","buildDate":"2023-09-14T00:38Z","layoutVersion":7,"networkLocation":"/rack2"},{"uuid":"5292a929-3ab9-4f22-9357-4dae4c1126cb","hostname":"ozone-topology_datanode_3_1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":0,"storageReport":{"capacity":89297309696,"used":4096,"remaining":15232282624},"pipelines":[{"pipelineID":"6b386b12-cfac-4813-8b50-ab855c9e5edf","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_6_1.ozone-topology_net"},{"pipelineID":"a2d7d1c9-e6a6-4347-be7b-e9419e79c2bf","replicationType":"RATIS","replicationFactor":"ONE","leaderNode":"ozone-topology_datanode_3_1.ozone-topology_net"},{"pipelineID":"3068300d-45a3-47aa-9a9e-1e272f1a2a28","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_2_1.ozone-topology_net"}],"containers":2,"openContainers":3,"leaderCount":1,"version":"1.4.0-SNAPSHOT","setupTime":1694654316745,"revision":"eec1ce49c87595c83d6946c019c24bda4e86401d","buildDate":"2023-09-14T00:38Z","layoutVersion":7,"networkLocation":"/rack1"},{"uuid":"896e33b2-6c4d-4538-ab2a-19c7fd780658","hostname":"ozone-topology_datanode_5_1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":0,"storageReport":{"capacity":89297309696,"used":14336,"remaining":15232282624},"pipelines":[{"pipelineID":"11d9bcc8-266d-48d4-9388-e1cb5dbcfc4f","replicationType":"RATIS","replicationFactor":"ONE","leaderNode":"ozone-topology_datanode_5_1.ozone-topology_net"},{"pipelineID":"f4c2c37a-a8e4-4ef0-8d81-0e5ef021932c","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_1_1.ozone-topology_net"},{"pipelineID":"7de1384d-dce0-4276-a1d8-d76ab2ce81b9","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_5_1.ozone-topology_net"}],"containers":2,"openContainers":2,"leaderCount":2,"version":"1.4.0-SNAPSHOT","setupTime":1694654316084,"revision":"eec1ce49c87595c83d6946c019c24bda4e86401d","buildDate":"2023-09-14T00:38Z","layoutVersion":7,"networkLocation":"/rack2"},{"uuid":"fe32df6b-6855-4335-bce8-6731503e16bb","hostname":"ozone-topology_datanode_1_1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":0,"storageReport":{"capacity":89297309696,"used":14336,"remaining":15232348160},"pipelines":[{"pipelineID":"7cf6f0a8-92ee-4c2e-a377-b45193c564bb","replicationType":"RATIS","replicationFactor":"ONE","leaderNode":"ozone-topology_datanode_1_1.ozone-topology_net"},{"pipelineID":"f4c2c37a-a8e4-4ef0-8d81-0e5ef021932c","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_1_1.ozone-topology_net"},{"pipelineID":"7de1384d-dce0-4276-a1d8-d76ab2ce81b9","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_5_1.ozone-topology_net"}],"containers":2,"openContainers":2,"leaderCount":2,"version":"1.4.0-SNAPSHOT","setupTime":1694654316030,"revision":"eec1ce49c87595c83d6946c019c24bda4e86401d","buildDate":"2023-09-14T00:38Z","layoutVersion":7,"networkLocation":"/rack1"},{"uuid":"f2a84190-b725-4250-a3c0-ba36beac06fd","hostname":"ozone-topology_datanode_4_1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":0,"storageReport":{"capacity":89297309696,"used":14336,"remaining":15232282624},"pipelines":[{"pipelineID":"7da24d17-e4f3-4a8c-bb3a-20cfb976d2e3","replicationType":"RATIS","replicationFactor":"ONE","leaderNode":"ozone-topology_datanode_4_1.ozone-topology_net"},{"pipelineID":"f4c2c37a-a8e4-4ef0-8d81-0e5ef021932c","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_1_1.ozone-topology_net"},{"pipelineID":"7de1384d-dce0-4276-a1d8-d76ab2ce81b9","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_5_1.ozone-topology_net"}],"containers":2,"openContainers":2,"leaderCount":1,"version":"1.4.0-SNAPSHOT","setupTime":1694654314593,"revision":"eec1ce49c87595c83d6946c019c24bda4e86401d","buildDate":"2023-09-14T00:38Z","layoutVersion":7,"networkLocation":"/rack2"}]}</msg>
<status status="PASS" starttime="20230914 01:21:40.087" endtime="20230914 01:21:40.089"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230914 01:21:40.091" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230914 01:21:40.089" endtime="20230914 01:21:40.091"/>
</kw>
<status status="PASS" starttime="20230914 01:21:40.045" endtime="20230914 01:21:40.091"/>
</kw>
<msg timestamp="20230914 01:21:40.091" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230914 01:21:40.045" endtime="20230914 01:21:40.091"/>
</kw>
<msg timestamp="20230914 01:21:40.091" level="INFO">${result} = {"totalCount":6,"datanodes":[{"uuid":"d81b5483-2edb-49e5-951b-520f48b40a46","hostname":"ozone-topology_datanode_2_1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":0,"stor...</msg>
<status status="PASS" starttime="20230914 01:21:40.044" endtime="20230914 01:21:40.091"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>datanodes</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230914 01:21:40.092" endtime="20230914 01:21:40.092"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>datanode_1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230914 01:21:40.092" endtime="20230914 01:21:40.092"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>datanode_2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230914 01:21:40.093" endtime="20230914 01:21:40.093"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>datanode_3</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230914 01:21:40.093" endtime="20230914 01:21:40.094"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/pipelines</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230914 01:21:40.098" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/pipelines 2&gt;&amp;1'.</msg>
<msg timestamp="20230914 01:21:40.140" level="INFO">${rc} = 0</msg>
<msg timestamp="20230914 01:21:40.141" level="INFO">${output} = {"totalCount":10,"pipelines":[{"pipelineId":"6b386b12-cfac-4813-8b50-ab855c9e5edf","status":"OPEN","leaderNode":"ozone-topology_datanode_6_1.ozone-topology_net","datanodes":[{"level":0,"parent":null,"...</msg>
<status status="PASS" starttime="20230914 01:21:40.095" endtime="20230914 01:21:40.141"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 01:21:40.142" level="INFO">{"totalCount":10,"pipelines":[{"pipelineId":"6b386b12-cfac-4813-8b50-ab855c9e5edf","status":"OPEN","leaderNode":"ozone-topology_datanode_6_1.ozone-topology_net","datanodes":[{"level":0,"parent":null,"cost":0,"uuid":"d81b5483-2edb-49e5-951b-520f48b40a46","uuidString":"d81b5483-2edb-49e5-951b-520f48b40a46","ipAddress":"10.5.0.5","hostName":"ozone-topology_datanode_2_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":9864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":-1439343833,"decommissioned":false,"maintenance":false,"networkName":"d81b5483-2edb-49e5-951b-520f48b40a46","networkLocation":"/rack1","networkFullPath":"/rack1/d81b5483-2edb-49e5-951b-520f48b40a46","numOfLeaves":1},{"level":0,"parent":null,"cost":0,"uuid":"e9496986-a245-4e56-8936-b25b4826b895","uuidString":"e9496986-a245-4e56-8936-b25b4826b895","ipAddress":"10.5.0.9","hostName":"ozone-topology_datanode_6_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":9864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":1783091563,"decommissioned":false,"maintenance":false,"networkName":"e9496986-a245-4e56-8936-b25b4826b895","networkLocation":"/rack2","networkFullPath":"/rack2/e9496986-a245-4e56-8936-b25b4826b895","numOfLeaves":1},{"level":0,"parent":null,"cost":0,"uuid":"5292a929-3ab9-4f22-9357-4dae4c1126cb","uuidString":"5292a929-3ab9-4f22-9357-4dae4c1126cb","ipAddress":"10.5.0.6","hostName":"ozone-topology_datanode_3_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":9864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":847571328,"decommissioned":false,"maintenance":false,"networkName":"5292a929-3ab9-4f22-9357-4dae4c1126cb","networkLocation":"/rack1","networkFullPath":"/rack1/5292a929-3ab9-4f22-9357-4dae4c1126cb","numOfLeaves":1}],"lastLeaderElection":0,"duration":121949,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"THREE","containers":1},{"pipelineId":"7125681c-b4ec-40d8-8667-dc50d77480ac","status":"OPEN","leaderNode":"ozone-topology_datanode_6_1.ozone-topology_net","datanodes":[{"level":0,"parent":null,"cost":0,"uuid":"e9496986-a245-4e56-8936-b25b4826b895","uuidString":"e9496986-a245-4e56-8936-b25b4826b895","ipAddress":"10.5.0.9","hostName":"ozone-topology_datanode_6_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":9864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":1783091563,"decommissioned":false,"maintenance":false,"networkName":"e9496986-a245-4e56-8936-b25b4826b895","networkLocation":"/rack2","networkFullPath":"/rack2/e9496986-a245-4e56-8936-b25b4826b895","numOfLeaves":1}],"lastLeaderElection":0,"duration":124332,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"ONE","containers":0},{"pipelineId":"a2d7d1c9-e6a6-4347-be7b-e9419e79c2bf","status":"OPEN","leaderNode":"ozone-topology_datanode_3_1.ozone-topology_net","datanodes":[{"level":0,"parent":null,"cost":0,"uuid":"5292a929-3ab9-4f22-9357-4dae4c1126cb","uuidString":"5292a929-3ab9-4f22-9357-4dae4c1126cb","ipAddress":"10.5.0.6","hostName":"ozone-topology_datanode_3_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":9864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":847571328,"decommissioned":false,"maintenance":false,"networkName":"5292a929-3ab9-4f22-9357-4dae4c1126cb","networkLocation":"/rack1","networkFullPath":"/rack1/5292a929-3ab9-4f22-9357-4dae4c1126cb","numOfLeaves":1}],"lastLeaderElection":0,"duration":122078,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"ONE","containers":0},{"pipelineId":"0e3e3a34-a2dd-47d4-b76c-97edd3f97628","status":"OPEN","leaderNode":"ozone-topology_datanode_2_1.ozone-topology_net","datanodes":[{"level":0,"parent":null,"cost":0,"uuid":"d81b5483-2edb-49e5-951b-520f48b40a46","uuidString":"d81b5483-2edb-49e5-951b-520f48b40a46","ipAddress":"10.5.0.5","hostName":"ozone-topology_datanode_2_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":9864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":-1439343833,"decommissioned":false,"maintenance":false,"networkName":"d81b5483-2edb-49e5-951b-520f48b40a46","networkLocation":"/rack1","networkFullPath":"/rack1/d81b5483-2edb-49e5-951b-520f48b40a46","numOfLeaves":1}],"lastLeaderElection":0,"duration":122178,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"ONE","containers":0},{"pipelineId":"7cf6f0a8-92ee-4c2e-a377-b45193c564bb","status":"OPEN","leaderNode":"ozone-topology_datanode_1_1.ozone-topology_net","datanodes":[{"level":0,"parent":null,"cost":0,"uuid":"fe32df6b-6855-4335-bce8-6731503e16bb","uuidString":"fe32df6b-6855-4335-bce8-6731503e16bb","ipAddress":"10.5.0.4","hostName":"ozone-topology_datanode_1_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":9864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":-913047750,"decommissioned":false,"maintenance":false,"networkName":"fe32df6b-6855-4335-bce8-6731503e16bb","networkLocation":"/rack1","networkFullPath":"/rack1/fe32df6b-6855-4335-bce8-6731503e16bb","numOfLeaves":1}],"lastLeaderElection":0,"duration":121864,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"ONE","containers":0},{"pipelineId":"3068300d-45a3-47aa-9a9e-1e272f1a2a28","status":"OPEN","leaderNode":"ozone-topology_datanode_2_1.ozone-topology_net","datanodes":[{"level":0,"parent":null,"cost":0,"uuid":"d81b5483-2edb-49e5-951b-520f48b40a46","uuidString":"d81b5483-2edb-49e5-951b-520f48b40a46","ipAddress":"10.5.0.5","hostName":"ozone-topology_datanode_2_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":9864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":-1439343833,"decommissioned":false,"maintenance":false,"networkName":"d81b5483-2edb-49e5-951b-520f48b40a46","networkLocation":"/rack1","networkFullPath":"/rack1/d81b5483-2edb-49e5-951b-520f48b40a46","numOfLeaves":1},{"level":0,"parent":null,"cost":0,"uuid":"e9496986-a245-4e56-8936-b25b4826b895","uuidString":"e9496986-a245-4e56-8936-b25b4826b895","ipAddress":"10.5.0.9","hostName":"ozone-topology_datanode_6_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":9864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":1783091563,"decommissioned":false,"maintenance":false,"networkName":"e9496986-a245-4e56-8936-b25b4826b895","networkLocation":"/rack2","networkFullPath":"/rack2/e9496986-a245-4e56-8936-b25b4826b895","numOfLeaves":1},{"level":0,"parent":null,"cost":0,"uuid":"5292a929-3ab9-4f22-9357-4dae4c1126cb","uuidString":"5292a929-3ab9-4f22-9357-4dae4c1126cb","ipAddress":"10.5.0.6","hostName":"ozone-topology_datanode_3_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":9864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":847571328,"decommissioned":false,"maintenance":false,"networkName":"5292a929-3ab9-4f22-9357-4dae4c1126cb","networkLocation":"/rack1","networkFullPath":"/rack1/5292a929-3ab9-4f22-9357-4dae4c1126cb","numOfLeaves":1}],"lastLeaderElection":0,"duration":122417,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"THREE","containers":1},{"pipelineId":"11d9bcc8-266d-48d4-9388-e1cb5dbcfc4f","status":"OPEN","leaderNode":"ozone-topology_datanode_5_1.ozone-topology_net","datanodes":[{"level":0,"parent":null,"cost":0,"uuid":"896e33b2-6c4d-4538-ab2a-19c7fd780658","uuidString":"896e33b2-6c4d-4538-ab2a-19c7fd780658","ipAddress":"10.5.0.8","hostName":"ozone-topology_datanode_5_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":9864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":-1803441626,"decommissioned":false,"maintenance":false,"networkName":"896e33b2-6c4d-4538-ab2a-19c7fd780658","networkLocation":"/rack2","networkFullPath":"/rack2/896e33b2-6c4d-4538-ab2a-19c7fd780658","numOfLeaves":1}],"lastLeaderElection":0,"duration":121942,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"ONE","containers":0},{"pipelineId":"7da24d17-e4f3-4a8c-bb3a-20cfb976d2e3","status":"OPEN","leaderNode":"ozone-topology_datanode_4_1.ozone-topology_net","datanodes":[{"level":0,"parent":null,"cost":0,"uuid":"f2a84190-b725-4250-a3c0-ba36beac06fd","uuidString":"f2a84190-b725-4250-a3c0-ba36beac06fd","ipAddress":"10.5.0.7","hostName":"ozone-topology_datanode_4_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":9864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":-51161607,"decommissioned":false,"maintenance":false,"networkName":"f2a84190-b725-4250-a3c0-ba36beac06fd","networkLocation":"/rack2","networkFullPath":"/rack2/f2a84190-b725-4250-a3c0-ba36beac06fd","numOfLeaves":1}],"lastLeaderElection":0,"duration":121852,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"ONE","containers":0},{"pipelineId":"f4c2c37a-a8e4-4ef0-8d81-0e5ef021932c","status":"OPEN","leaderNode":"ozone-topology_datanode_1_1.ozone-topology_net","datanodes":[{"level":0,"parent":null,"cost":0,"uuid":"896e33b2-6c4d-4538-ab2a-19c7fd780658","uuidString":"896e33b2-6c4d-4538-ab2a-19c7fd780658","ipAddress":"10.5.0.8","hostName":"ozone-topology_datanode_5_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":9864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":-1803441626,"decommissioned":false,"maintenance":false,"networkName":"896e33b2-6c4d-4538-ab2a-19c7fd780658","networkLocation":"/rack2","networkFullPath":"/rack2/896e33b2-6c4d-4538-ab2a-19c7fd780658","numOfLeaves":1},{"level":0,"parent":null,"cost":0,"uuid":"fe32df6b-6855-4335-bce8-6731503e16bb","uuidString":"fe32df6b-6855-4335-bce8-6731503e16bb","ipAddress":"10.5.0.4","hostName":"ozone-topology_datanode_1_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":9864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":-913047750,"decommissioned":false,"maintenance":false,"networkName":"fe32df6b-6855-4335-bce8-6731503e16bb","networkLocation":"/rack1","networkFullPath":"/rack1/fe32df6b-6855-4335-bce8-6731503e16bb","numOfLeaves":1},{"level":0,"parent":null,"cost":0,"uuid":"f2a84190-b725-4250-a3c0-ba36beac06fd","uuidString":"f2a84190-b725-4250-a3c0-ba36beac06fd","ipAddress":"10.5.0.7","hostName":"ozone-topology_datanode_4_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":9864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":-51161607,"decommissioned":false,"maintenance":false,"networkName":"f2a84190-b725-4250-a3c0-ba36beac06fd","networkLocation":"/rack2","networkFullPath":"/rack2/f2a84190-b725-4250-a3c0-ba36beac06fd","numOfLeaves":1}],"lastLeaderElection":0,"duration":121881,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"THREE","containers":1},{"pipelineId":"7de1384d-dce0-4276-a1d8-d76ab2ce81b9","status":"OPEN","leaderNode":"ozone-topology_datanode_5_1.ozone-topology_net","datanodes":[{"level":0,"parent":null,"cost":0,"uuid":"896e33b2-6c4d-4538-ab2a-19c7fd780658","uuidString":"896e33b2-6c4d-4538-ab2a-19c7fd780658","ipAddress":"10.5.0.8","hostName":"ozone-topology_datanode_5_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":9864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":-1803441626,"decommissioned":false,"maintenance":false,"networkName":"896e33b2-6c4d-4538-ab2a-19c7fd780658","networkLocation":"/rack2","networkFullPath":"/rack2/896e33b2-6c4d-4538-ab2a-19c7fd780658","numOfLeaves":1},{"level":0,"parent":null,"cost":0,"uuid":"fe32df6b-6855-4335-bce8-6731503e16bb","uuidString":"fe32df6b-6855-4335-bce8-6731503e16bb","ipAddress":"10.5.0.4","hostName":"ozone-topology_datanode_1_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":9864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":-913047750,"decommissioned":false,"maintenance":false,"networkName":"fe32df6b-6855-4335-bce8-6731503e16bb","networkLocation":"/rack1","networkFullPath":"/rack1/fe32df6b-6855-4335-bce8-6731503e16bb","numOfLeaves":1},{"level":0,"parent":null,"cost":0,"uuid":"f2a84190-b725-4250-a3c0-ba36beac06fd","uuidString":"f2a84190-b725-4250-a3c0-ba36beac06fd","ipAddress":"10.5.0.7","hostName":"ozone-topology_datanode_4_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":9864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":-51161607,"decommissioned":false,"maintenance":false,"networkName":"f2a84190-b725-4250-a3c0-ba36beac06fd","networkLocation":"/rack2","networkFullPath":"/rack2/f2a84190-b725-4250-a3c0-ba36beac06fd","numOfLeaves":1}],"lastLeaderElection":0,"duration":122140,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"THREE","containers":1}]}</msg>
<status status="PASS" starttime="20230914 01:21:40.141" endtime="20230914 01:21:40.142"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230914 01:21:40.143" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230914 01:21:40.143" endtime="20230914 01:21:40.143"/>
</kw>
<status status="PASS" starttime="20230914 01:21:40.095" endtime="20230914 01:21:40.143"/>
</kw>
<msg timestamp="20230914 01:21:40.144" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230914 01:21:40.094" endtime="20230914 01:21:40.144"/>
</kw>
<msg timestamp="20230914 01:21:40.144" level="INFO">${result} = {"totalCount":10,"pipelines":[{"pipelineId":"6b386b12-cfac-4813-8b50-ab855c9e5edf","status":"OPEN","leaderNode":"ozone-topology_datanode_6_1.ozone-topology_net","datanodes":[{"level":0,"parent":null,"...</msg>
<status status="PASS" starttime="20230914 01:21:40.094" endtime="20230914 01:21:40.144"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>pipelines</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230914 01:21:40.144" endtime="20230914 01:21:40.145"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230914 01:21:40.145" endtime="20230914 01:21:40.145"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>OPEN</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230914 01:21:40.145" endtime="20230914 01:21:40.146"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>datanode_1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230914 01:21:40.146" endtime="20230914 01:21:40.146"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>datanode_2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230914 01:21:40.147" endtime="20230914 01:21:40.147"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>datanode_3</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230914 01:21:40.147" endtime="20230914 01:21:40.147"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/clusterState</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230914 01:21:40.152" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/clusterState 2&gt;&amp;1'.</msg>
<msg timestamp="20230914 01:21:40.206" level="INFO">${rc} = 0</msg>
<msg timestamp="20230914 01:21:40.206" level="INFO">${output} = {"deletedDirs":0,"pipelines":10,"totalDatanodes":6,"healthyDatanodes":6,"storageReport":{"capacity":535783858176,"used":55296,"remaining":91393826816},"containers":4,"missingContainers":0,"openContain...</msg>
<status status="PASS" starttime="20230914 01:21:40.149" endtime="20230914 01:21:40.206"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 01:21:40.208" level="INFO">{"deletedDirs":0,"pipelines":10,"totalDatanodes":6,"healthyDatanodes":6,"storageReport":{"capacity":535783858176,"used":55296,"remaining":91393826816},"containers":4,"missingContainers":0,"openContainers":4,"deletedContainers":0,"volumes":3,"buckets":2,"keys":11,"keysPendingDeletion":0}</msg>
<status status="PASS" starttime="20230914 01:21:40.207" endtime="20230914 01:21:40.208"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230914 01:21:40.209" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230914 01:21:40.208" endtime="20230914 01:21:40.209"/>
</kw>
<status status="PASS" starttime="20230914 01:21:40.149" endtime="20230914 01:21:40.209"/>
</kw>
<msg timestamp="20230914 01:21:40.209" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230914 01:21:40.148" endtime="20230914 01:21:40.209"/>
</kw>
<msg timestamp="20230914 01:21:40.209" level="INFO">${result} = {"deletedDirs":0,"pipelines":10,"totalDatanodes":6,"healthyDatanodes":6,"storageReport":{"capacity":535783858176,"used":55296,"remaining":91393826816},"containers":4,"missingContainers":0,"openContain...</msg>
<status status="PASS" starttime="20230914 01:21:40.148" endtime="20230914 01:21:40.209"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"totalDatanodes\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230914 01:21:40.210" endtime="20230914 01:21:40.210"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"healthyDatanodes\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230914 01:21:40.210" endtime="20230914 01:21:40.210"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"pipelines\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230914 01:21:40.211" endtime="20230914 01:21:40.212"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/containers/1/replicaHistory</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230914 01:21:40.217" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/containers/1/replicaHistory 2&gt;&amp;1'.</msg>
<msg timestamp="20230914 01:21:40.239" level="INFO">${rc} = 0</msg>
<msg timestamp="20230914 01:21:40.239" level="INFO">${output} = [{"containerId":1,"datanodeUuid":"896e33b2-6c4d-4538-ab2a-19c7fd780658","datanodeHost":"ozone-topology_datanode_5_1.ozone-topology_net","firstSeenTime":1694654432791,"lastSeenTime":1694654432791,"stat...</msg>
<status status="PASS" starttime="20230914 01:21:40.214" endtime="20230914 01:21:40.239"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 01:21:40.241" level="INFO">[{"containerId":1,"datanodeUuid":"896e33b2-6c4d-4538-ab2a-19c7fd780658","datanodeHost":"ozone-topology_datanode_5_1.ozone-topology_net","firstSeenTime":1694654432791,"lastSeenTime":1694654432791,"state":"OPEN","lastBcsId":0},{"containerId":1,"datanodeUuid":"fe32df6b-6855-4335-bce8-6731503e16bb","datanodeHost":"ozone-topology_datanode_1_1.ozone-topology_net","firstSeenTime":1694654432792,"lastSeenTime":1694654432792,"state":"OPEN","lastBcsId":0},{"containerId":1,"datanodeUuid":"f2a84190-b725-4250-a3c0-ba36beac06fd","datanodeHost":"ozone-topology_datanode_4_1.ozone-topology_net","firstSeenTime":1694654432651,"lastSeenTime":1694654432651,"state":"OPEN","lastBcsId":0}]</msg>
<status status="PASS" starttime="20230914 01:21:40.240" endtime="20230914 01:21:40.241"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230914 01:21:40.242" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230914 01:21:40.242" endtime="20230914 01:21:40.242"/>
</kw>
<status status="PASS" starttime="20230914 01:21:40.214" endtime="20230914 01:21:40.242"/>
</kw>
<msg timestamp="20230914 01:21:40.242" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230914 01:21:40.213" endtime="20230914 01:21:40.243"/>
</kw>
<msg timestamp="20230914 01:21:40.243" level="INFO">${result} = [{"containerId":1,"datanodeUuid":"896e33b2-6c4d-4538-ab2a-19c7fd780658","datanodeHost":"ozone-topology_datanode_5_1.ozone-topology_net","firstSeenTime":1694654432791,"lastSeenTime":1694654432791,"stat...</msg>
<status status="PASS" starttime="20230914 01:21:40.212" endtime="20230914 01:21:40.243"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"containerId\":1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230914 01:21:40.243" endtime="20230914 01:21:40.243"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230914 01:21:40.044" endtime="20230914 01:21:40.243"/>
</test>
<test id="s1-s3-s1-t3" name="Check if Recon Web UI is up" line="94">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230914 01:21:40.246" endtime="20230914 01:21:40.247"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${ENDPOINT_URL}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230914 01:21:40.251" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888 2&gt;&amp;1'.</msg>
<msg timestamp="20230914 01:21:40.272" level="INFO">${rc} = 0</msg>
<msg timestamp="20230914 01:21:40.273" level="INFO">${output} = &lt;!doctype html&gt;&lt;html lang="en"&gt;&lt;head&gt;&lt;meta charset="utf-8"/&gt;&lt;link rel="shortcut icon" href="/favicon.ico"/&gt;&lt;meta name="viewport" content="width=device-width,initial-scale=1"/&gt;&lt;meta name="theme-color" ...</msg>
<status status="PASS" starttime="20230914 01:21:40.248" endtime="20230914 01:21:40.273"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 01:21:40.274" level="INFO">&lt;!doctype html&gt;&lt;html lang="en"&gt;&lt;head&gt;&lt;meta charset="utf-8"/&gt;&lt;link rel="shortcut icon" href="/favicon.ico"/&gt;&lt;meta name="viewport" content="width=device-width,initial-scale=1"/&gt;&lt;meta name="theme-color" content="#000000"/&gt;&lt;link rel="manifest" href="/manifest.json"/&gt;&lt;title&gt;Ozone Recon&lt;/title&gt;&lt;link href="/static/css/2.58b4e004.chunk.css" rel="stylesheet"&gt;&lt;link href="/static/css/main.95934262.chunk.css" rel="stylesheet"&gt;&lt;/head&gt;&lt;body&gt;&lt;noscript&gt;You need to enable JavaScript to run this app.&lt;/noscript&gt;&lt;div id="root"&gt;&lt;/div&gt;&lt;script&gt;!function(e){function r(r){for(var n,l,f=r[0],i=r[1],a=r[2],p=0,s=[];p&lt;f.length;p++)l=f[p],Object.prototype.hasOwnProperty.call(o,l)&amp;&amp;o[l]&amp;&amp;s.push(o[l][0]),o[l]=0;for(n in i)Object.prototype.hasOwnProperty.call(i,n)&amp;&amp;(e[n]=i[n]);for(c&amp;&amp;c(r);s.length;)s.shift()();return u.push.apply(u,a||[]),t()}function t(){for(var e,r=0;r&lt;u.length;r++){for(var t=u[r],n=!0,f=1;f&lt;t.length;f++){var i=t[f];0!==o[i]&amp;&amp;(n=!1)}n&amp;&amp;(u.splice(r--,1),e=l(l.s=t[0]))}return e}var n={},o={1:0},u=[];function l(r){if(n[r])return n[r].exports;var t=n[r]={i:r,l:!1,exports:{}};return e[r].call(t.exports,t,t.exports,l),t.l=!0,t.exports}l.m=e,l.c=n,l.d=function(e,r,t){l.o(e,r)||Object.defineProperty(e,r,{enumerable:!0,get:t})},l.r=function(e){"undefined"!=typeof Symbol&amp;&amp;Symbol.toStringTag&amp;&amp;Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},l.t=function(e,r){if(1&amp;r&amp;&amp;(e=l(e)),8&amp;r)return e;if(4&amp;r&amp;&amp;"object"==typeof e&amp;&amp;e&amp;&amp;e.__esModule)return e;var t=Object.create(null);if(l.r(t),Object.defineProperty(t,"default",{enumerable:!0,value:e}),2&amp;r&amp;&amp;"string"!=typeof e)for(var n in e)l.d(t,n,function(r){return e[r]}.bind(null,n));return t},l.n=function(e){var r=e&amp;&amp;e.__esModule?function(){return e.default}:function(){return e};return l.d(r,"a",r),r},l.o=function(e,r){return Object.prototype.hasOwnProperty.call(e,r)},l.p="/";var f=this["webpackJsonpozone-recon"]=this["webpackJsonpozone-recon"]||[],i=f.push.bind(f);f.push=r,f=f.slice();for(var a=0;a&lt;f.length;a++)r(f[a]);var c=i;t()}([])&lt;/script&gt;&lt;script src="/static/js/2.60ad2f10.chunk.js"&gt;&lt;/script&gt;&lt;script src="/static/js/main.8c26211b.chunk.js"&gt;&lt;/script&gt;&lt;/body&gt;&lt;/html&gt;</msg>
<status status="PASS" starttime="20230914 01:21:40.273" endtime="20230914 01:21:40.274"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230914 01:21:40.274" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230914 01:21:40.274" endtime="20230914 01:21:40.275"/>
</kw>
<status status="PASS" starttime="20230914 01:21:40.248" endtime="20230914 01:21:40.275"/>
</kw>
<msg timestamp="20230914 01:21:40.275" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230914 01:21:40.247" endtime="20230914 01:21:40.275"/>
</kw>
<msg timestamp="20230914 01:21:40.275" level="INFO">${result} = &lt;!doctype html&gt;&lt;html lang="en"&gt;&lt;head&gt;&lt;meta charset="utf-8"/&gt;&lt;link rel="shortcut icon" href="/favicon.ico"/&gt;&lt;meta name="viewport" content="width=device-width,initial-scale=1"/&gt;&lt;meta name="theme-color" ...</msg>
<status status="PASS" starttime="20230914 01:21:40.247" endtime="20230914 01:21:40.275"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Ozone Recon</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230914 01:21:40.275" endtime="20230914 01:21:40.276"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230914 01:21:40.245" endtime="20230914 01:21:40.276"/>
</test>
<test id="s1-s3-s1-t4" name="Check web UI access" line="99">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230914 01:21:40.282" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20230914 01:21:40.288" level="INFO">${rc} = 0</msg>
<msg timestamp="20230914 01:21:40.288" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230914 01:21:40.280" endtime="20230914 01:21:40.289"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 01:21:40.290" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230914 01:21:40.289" endtime="20230914 01:21:40.290"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230914 01:21:40.290" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230914 01:21:40.290" endtime="20230914 01:21:40.291"/>
</kw>
<status status="PASS" starttime="20230914 01:21:40.279" endtime="20230914 01:21:40.291"/>
</kw>
<msg timestamp="20230914 01:21:40.291" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230914 01:21:40.279" endtime="20230914 01:21:40.291"/>
</kw>
<status status="PASS" starttime="20230914 01:21:40.278" endtime="20230914 01:21:40.291"/>
</kw>
<kw name="Check http return code">
<arg>${ENDPOINT_URL}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230914 01:21:40.301" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888 2&gt;&amp;1'.</msg>
<msg timestamp="20230914 01:21:40.319" level="INFO">${rc} = 0</msg>
<msg timestamp="20230914 01:21:40.319" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230914 01:21:40.298" endtime="20230914 01:21:40.319"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 01:21:40.320" level="INFO">200</msg>
<status status="PASS" starttime="20230914 01:21:40.319" endtime="20230914 01:21:40.320"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230914 01:21:40.321" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230914 01:21:40.320" endtime="20230914 01:21:40.321"/>
</kw>
<status status="PASS" starttime="20230914 01:21:40.297" endtime="20230914 01:21:40.321"/>
</kw>
<msg timestamp="20230914 01:21:40.322" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230914 01:21:40.292" endtime="20230914 01:21:40.322"/>
</kw>
<msg timestamp="20230914 01:21:40.322" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230914 01:21:40.292" endtime="20230914 01:21:40.322"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230914 01:21:40.323" endtime="20230914 01:21:40.323"/>
</kw>
<status status="NOT RUN" starttime="20230914 01:21:40.322" endtime="20230914 01:21:40.323"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230914 01:21:40.323" endtime="20230914 01:21:40.324"/>
</kw>
<status status="PASS" starttime="20230914 01:21:40.323" endtime="20230914 01:21:40.324"/>
</branch>
<status status="PASS" starttime="20230914 01:21:40.322" endtime="20230914 01:21:40.324"/>
</if>
<status status="PASS" starttime="20230914 01:21:40.291" endtime="20230914 01:21:40.324"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230914 01:21:40.325" endtime="20230914 01:21:40.325"/>
</kw>
<status status="PASS" starttime="20230914 01:21:40.324" endtime="20230914 01:21:40.325"/>
</kw>
<kw name="Check http return code">
<arg>${ENDPOINT_URL}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230914 01:21:40.330" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888 2&gt;&amp;1'.</msg>
<msg timestamp="20230914 01:21:40.343" level="INFO">${rc} = 0</msg>
<msg timestamp="20230914 01:21:40.343" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230914 01:21:40.327" endtime="20230914 01:21:40.344"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 01:21:40.345" level="INFO">200</msg>
<status status="PASS" starttime="20230914 01:21:40.344" endtime="20230914 01:21:40.345"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230914 01:21:40.345" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230914 01:21:40.345" endtime="20230914 01:21:40.345"/>
</kw>
<status status="PASS" starttime="20230914 01:21:40.327" endtime="20230914 01:21:40.346"/>
</kw>
<msg timestamp="20230914 01:21:40.346" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230914 01:21:40.327" endtime="20230914 01:21:40.346"/>
</kw>
<msg timestamp="20230914 01:21:40.346" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230914 01:21:40.326" endtime="20230914 01:21:40.346"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230914 01:21:40.347" endtime="20230914 01:21:40.347"/>
</kw>
<status status="NOT RUN" starttime="20230914 01:21:40.346" endtime="20230914 01:21:40.347"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230914 01:21:40.347" endtime="20230914 01:21:40.347"/>
</kw>
<status status="PASS" starttime="20230914 01:21:40.347" endtime="20230914 01:21:40.347"/>
</branch>
<status status="PASS" starttime="20230914 01:21:40.346" endtime="20230914 01:21:40.347"/>
</if>
<status status="PASS" starttime="20230914 01:21:40.325" endtime="20230914 01:21:40.348"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230914 01:21:40.277" endtime="20230914 01:21:40.348"/>
</test>
<test id="s1-s3-s1-t5" name="Check admin only api access" line="107">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230914 01:21:40.353" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20230914 01:21:40.357" level="INFO">${rc} = 0</msg>
<msg timestamp="20230914 01:21:40.357" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230914 01:21:40.351" endtime="20230914 01:21:40.357"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 01:21:40.358" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230914 01:21:40.357" endtime="20230914 01:21:40.358"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230914 01:21:40.359" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230914 01:21:40.358" endtime="20230914 01:21:40.359"/>
</kw>
<status status="PASS" starttime="20230914 01:21:40.350" endtime="20230914 01:21:40.359"/>
</kw>
<msg timestamp="20230914 01:21:40.359" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230914 01:21:40.350" endtime="20230914 01:21:40.359"/>
</kw>
<status status="PASS" starttime="20230914 01:21:40.349" endtime="20230914 01:21:40.359"/>
</kw>
<kw name="Check http return code">
<arg>${ADMIN_API_ENDPOINT_URL}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230914 01:21:40.364" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20230914 01:21:40.377" level="INFO">${rc} = 0</msg>
<msg timestamp="20230914 01:21:40.378" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230914 01:21:40.361" endtime="20230914 01:21:40.378"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 01:21:40.380" level="INFO">200</msg>
<status status="PASS" starttime="20230914 01:21:40.379" endtime="20230914 01:21:40.380"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230914 01:21:40.381" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230914 01:21:40.380" endtime="20230914 01:21:40.381"/>
</kw>
<status status="PASS" starttime="20230914 01:21:40.361" endtime="20230914 01:21:40.381"/>
</kw>
<msg timestamp="20230914 01:21:40.381" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230914 01:21:40.361" endtime="20230914 01:21:40.381"/>
</kw>
<msg timestamp="20230914 01:21:40.382" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230914 01:21:40.360" endtime="20230914 01:21:40.382"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230914 01:21:40.382" endtime="20230914 01:21:40.382"/>
</kw>
<status status="NOT RUN" starttime="20230914 01:21:40.382" endtime="20230914 01:21:40.383"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230914 01:21:40.383" endtime="20230914 01:21:40.383"/>
</kw>
<status status="PASS" starttime="20230914 01:21:40.383" endtime="20230914 01:21:40.383"/>
</branch>
<status status="PASS" starttime="20230914 01:21:40.382" endtime="20230914 01:21:40.383"/>
</if>
<status status="PASS" starttime="20230914 01:21:40.360" endtime="20230914 01:21:40.383"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230914 01:21:40.384" endtime="20230914 01:21:40.385"/>
</kw>
<status status="PASS" starttime="20230914 01:21:40.384" endtime="20230914 01:21:40.385"/>
</kw>
<kw name="Check http return code">
<arg>${ADMIN_API_ENDPOINT_URL}</arg>
<arg>403</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230914 01:21:40.389" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20230914 01:21:40.406" level="INFO">${rc} = 0</msg>
<msg timestamp="20230914 01:21:40.406" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230914 01:21:40.387" endtime="20230914 01:21:40.406"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 01:21:40.408" level="INFO">200</msg>
<status status="PASS" starttime="20230914 01:21:40.407" endtime="20230914 01:21:40.408"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230914 01:21:40.409" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230914 01:21:40.408" endtime="20230914 01:21:40.409"/>
</kw>
<status status="PASS" starttime="20230914 01:21:40.386" endtime="20230914 01:21:40.409"/>
</kw>
<msg timestamp="20230914 01:21:40.409" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230914 01:21:40.386" endtime="20230914 01:21:40.409"/>
</kw>
<msg timestamp="20230914 01:21:40.410" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230914 01:21:40.385" endtime="20230914 01:21:40.410"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230914 01:21:40.410" endtime="20230914 01:21:40.410"/>
</kw>
<status status="NOT RUN" starttime="20230914 01:21:40.410" endtime="20230914 01:21:40.411"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230914 01:21:40.411" endtime="20230914 01:21:40.411"/>
</kw>
<status status="PASS" starttime="20230914 01:21:40.411" endtime="20230914 01:21:40.411"/>
</branch>
<status status="PASS" starttime="20230914 01:21:40.410" endtime="20230914 01:21:40.411"/>
</if>
<status status="PASS" starttime="20230914 01:21:40.385" endtime="20230914 01:21:40.411"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230914 01:21:40.412" endtime="20230914 01:21:40.412"/>
</kw>
<status status="PASS" starttime="20230914 01:21:40.412" endtime="20230914 01:21:40.413"/>
</kw>
<kw name="Check http return code">
<arg>${ADMIN_API_ENDPOINT_URL}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230914 01:21:40.420" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20230914 01:21:40.435" level="INFO">${rc} = 0</msg>
<msg timestamp="20230914 01:21:40.435" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230914 01:21:40.415" endtime="20230914 01:21:40.435"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 01:21:40.436" level="INFO">200</msg>
<status status="PASS" starttime="20230914 01:21:40.435" endtime="20230914 01:21:40.436"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230914 01:21:40.437" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230914 01:21:40.436" endtime="20230914 01:21:40.437"/>
</kw>
<status status="PASS" starttime="20230914 01:21:40.414" endtime="20230914 01:21:40.437"/>
</kw>
<msg timestamp="20230914 01:21:40.437" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230914 01:21:40.414" endtime="20230914 01:21:40.437"/>
</kw>
<msg timestamp="20230914 01:21:40.438" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230914 01:21:40.413" endtime="20230914 01:21:40.438"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230914 01:21:40.438" endtime="20230914 01:21:40.438"/>
</kw>
<status status="NOT RUN" starttime="20230914 01:21:40.438" endtime="20230914 01:21:40.438"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230914 01:21:40.439" endtime="20230914 01:21:40.439"/>
</kw>
<status status="PASS" starttime="20230914 01:21:40.438" endtime="20230914 01:21:40.439"/>
</branch>
<status status="PASS" starttime="20230914 01:21:40.438" endtime="20230914 01:21:40.439"/>
</if>
<status status="PASS" starttime="20230914 01:21:40.413" endtime="20230914 01:21:40.439"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230914 01:21:40.440" endtime="20230914 01:21:40.440"/>
</kw>
<status status="PASS" starttime="20230914 01:21:40.439" endtime="20230914 01:21:40.440"/>
</kw>
<kw name="Check http return code">
<arg>${ADMIN_API_ENDPOINT_URL}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230914 01:21:40.445" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20230914 01:21:40.460" level="INFO">${rc} = 0</msg>
<msg timestamp="20230914 01:21:40.460" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230914 01:21:40.442" endtime="20230914 01:21:40.460"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 01:21:40.462" level="INFO">200</msg>
<status status="PASS" starttime="20230914 01:21:40.461" endtime="20230914 01:21:40.462"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230914 01:21:40.463" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230914 01:21:40.463" endtime="20230914 01:21:40.463"/>
</kw>
<status status="PASS" starttime="20230914 01:21:40.442" endtime="20230914 01:21:40.463"/>
</kw>
<msg timestamp="20230914 01:21:40.463" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230914 01:21:40.441" endtime="20230914 01:21:40.464"/>
</kw>
<msg timestamp="20230914 01:21:40.464" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230914 01:21:40.441" endtime="20230914 01:21:40.464"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230914 01:21:40.464" endtime="20230914 01:21:40.464"/>
</kw>
<status status="NOT RUN" starttime="20230914 01:21:40.464" endtime="20230914 01:21:40.464"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230914 01:21:40.465" endtime="20230914 01:21:40.465"/>
</kw>
<status status="PASS" starttime="20230914 01:21:40.465" endtime="20230914 01:21:40.465"/>
</branch>
<status status="PASS" starttime="20230914 01:21:40.464" endtime="20230914 01:21:40.465"/>
</if>
<status status="PASS" starttime="20230914 01:21:40.440" endtime="20230914 01:21:40.465"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230914 01:21:40.349" endtime="20230914 01:21:40.466"/>
</test>
<test id="s1-s3-s1-t6" name="Check unhealthy, (admin) api access" line="120">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230914 01:21:40.472" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20230914 01:21:40.475" level="INFO">${rc} = 0</msg>
<msg timestamp="20230914 01:21:40.475" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230914 01:21:40.469" endtime="20230914 01:21:40.475"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 01:21:40.476" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230914 01:21:40.476" endtime="20230914 01:21:40.476"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230914 01:21:40.477" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230914 01:21:40.477" endtime="20230914 01:21:40.477"/>
</kw>
<status status="PASS" starttime="20230914 01:21:40.468" endtime="20230914 01:21:40.477"/>
</kw>
<msg timestamp="20230914 01:21:40.477" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230914 01:21:40.468" endtime="20230914 01:21:40.478"/>
</kw>
<status status="PASS" starttime="20230914 01:21:40.468" endtime="20230914 01:21:40.478"/>
</kw>
<kw name="Check http return code">
<arg>${UNHEALTHY_ENDPOINT_URL}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230914 01:21:40.482" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers/unhealthy 2&gt;&amp;1'.</msg>
<msg timestamp="20230914 01:21:40.551" level="INFO">${rc} = 0</msg>
<msg timestamp="20230914 01:21:40.551" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230914 01:21:40.480" endtime="20230914 01:21:40.551"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 01:21:40.552" level="INFO">200</msg>
<status status="PASS" starttime="20230914 01:21:40.551" endtime="20230914 01:21:40.552"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230914 01:21:40.553" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230914 01:21:40.552" endtime="20230914 01:21:40.553"/>
</kw>
<status status="PASS" starttime="20230914 01:21:40.479" endtime="20230914 01:21:40.553"/>
</kw>
<msg timestamp="20230914 01:21:40.553" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230914 01:21:40.479" endtime="20230914 01:21:40.554"/>
</kw>
<msg timestamp="20230914 01:21:40.554" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230914 01:21:40.478" endtime="20230914 01:21:40.554"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230914 01:21:40.555" endtime="20230914 01:21:40.555"/>
</kw>
<status status="NOT RUN" starttime="20230914 01:21:40.554" endtime="20230914 01:21:40.555"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230914 01:21:40.555" endtime="20230914 01:21:40.556"/>
</kw>
<status status="PASS" starttime="20230914 01:21:40.555" endtime="20230914 01:21:40.556"/>
</branch>
<status status="PASS" starttime="20230914 01:21:40.554" endtime="20230914 01:21:40.556"/>
</if>
<status status="PASS" starttime="20230914 01:21:40.478" endtime="20230914 01:21:40.556"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230914 01:21:40.558" endtime="20230914 01:21:40.558"/>
</kw>
<status status="PASS" starttime="20230914 01:21:40.556" endtime="20230914 01:21:40.558"/>
</kw>
<kw name="Check http return code">
<arg>${UNHEALTHY_ENDPOINT_URL}</arg>
<arg>403</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230914 01:21:40.563" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers/unhealthy 2&gt;&amp;1'.</msg>
<msg timestamp="20230914 01:21:40.582" level="INFO">${rc} = 0</msg>
<msg timestamp="20230914 01:21:40.582" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230914 01:21:40.561" endtime="20230914 01:21:40.582"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 01:21:40.583" level="INFO">200</msg>
<status status="PASS" starttime="20230914 01:21:40.582" endtime="20230914 01:21:40.583"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230914 01:21:40.584" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230914 01:21:40.583" endtime="20230914 01:21:40.584"/>
</kw>
<status status="PASS" starttime="20230914 01:21:40.560" endtime="20230914 01:21:40.585"/>
</kw>
<msg timestamp="20230914 01:21:40.585" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230914 01:21:40.560" endtime="20230914 01:21:40.585"/>
</kw>
<msg timestamp="20230914 01:21:40.585" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230914 01:21:40.559" endtime="20230914 01:21:40.586"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230914 01:21:40.586" endtime="20230914 01:21:40.586"/>
</kw>
<status status="NOT RUN" starttime="20230914 01:21:40.586" endtime="20230914 01:21:40.586"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230914 01:21:40.586" endtime="20230914 01:21:40.587"/>
</kw>
<status status="PASS" starttime="20230914 01:21:40.586" endtime="20230914 01:21:40.587"/>
</branch>
<status status="PASS" starttime="20230914 01:21:40.586" endtime="20230914 01:21:40.587"/>
</if>
<status status="PASS" starttime="20230914 01:21:40.559" endtime="20230914 01:21:40.587"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230914 01:21:40.588" endtime="20230914 01:21:40.588"/>
</kw>
<status status="PASS" starttime="20230914 01:21:40.587" endtime="20230914 01:21:40.588"/>
</kw>
<kw name="Check http return code">
<arg>${UNHEALTHY_ENDPOINT_URL}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230914 01:21:40.593" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers/unhealthy 2&gt;&amp;1'.</msg>
<msg timestamp="20230914 01:21:40.609" level="INFO">${rc} = 0</msg>
<msg timestamp="20230914 01:21:40.609" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230914 01:21:40.590" endtime="20230914 01:21:40.609"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 01:21:40.610" level="INFO">200</msg>
<status status="PASS" starttime="20230914 01:21:40.610" endtime="20230914 01:21:40.610"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230914 01:21:40.611" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230914 01:21:40.611" endtime="20230914 01:21:40.611"/>
</kw>
<status status="PASS" starttime="20230914 01:21:40.590" endtime="20230914 01:21:40.611"/>
</kw>
<msg timestamp="20230914 01:21:40.611" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230914 01:21:40.589" endtime="20230914 01:21:40.611"/>
</kw>
<msg timestamp="20230914 01:21:40.612" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230914 01:21:40.589" endtime="20230914 01:21:40.612"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230914 01:21:40.612" endtime="20230914 01:21:40.612"/>
</kw>
<status status="NOT RUN" starttime="20230914 01:21:40.612" endtime="20230914 01:21:40.612"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230914 01:21:40.612" endtime="20230914 01:21:40.613"/>
</kw>
<status status="PASS" starttime="20230914 01:21:40.612" endtime="20230914 01:21:40.613"/>
</branch>
<status status="PASS" starttime="20230914 01:21:40.612" endtime="20230914 01:21:40.613"/>
</if>
<status status="PASS" starttime="20230914 01:21:40.588" endtime="20230914 01:21:40.613"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230914 01:21:40.614" endtime="20230914 01:21:40.614"/>
</kw>
<status status="PASS" starttime="20230914 01:21:40.613" endtime="20230914 01:21:40.614"/>
</kw>
<kw name="Check http return code">
<arg>${UNHEALTHY_ENDPOINT_URL}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230914 01:21:40.619" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers/unhealthy 2&gt;&amp;1'.</msg>
<msg timestamp="20230914 01:21:40.637" level="INFO">${rc} = 0</msg>
<msg timestamp="20230914 01:21:40.637" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230914 01:21:40.616" endtime="20230914 01:21:40.637"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 01:21:40.638" level="INFO">200</msg>
<status status="PASS" starttime="20230914 01:21:40.637" endtime="20230914 01:21:40.638"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230914 01:21:40.639" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230914 01:21:40.638" endtime="20230914 01:21:40.639"/>
</kw>
<status status="PASS" starttime="20230914 01:21:40.616" endtime="20230914 01:21:40.639"/>
</kw>
<msg timestamp="20230914 01:21:40.639" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230914 01:21:40.615" endtime="20230914 01:21:40.639"/>
</kw>
<msg timestamp="20230914 01:21:40.639" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230914 01:21:40.615" endtime="20230914 01:21:40.639"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230914 01:21:40.640" endtime="20230914 01:21:40.640"/>
</kw>
<status status="NOT RUN" starttime="20230914 01:21:40.640" endtime="20230914 01:21:40.640"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230914 01:21:40.640" endtime="20230914 01:21:40.640"/>
</kw>
<status status="PASS" starttime="20230914 01:21:40.640" endtime="20230914 01:21:40.641"/>
</branch>
<status status="PASS" starttime="20230914 01:21:40.639" endtime="20230914 01:21:40.641"/>
</if>
<status status="PASS" starttime="20230914 01:21:40.614" endtime="20230914 01:21:40.641"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230914 01:21:40.467" endtime="20230914 01:21:40.641"/>
</test>
<test id="s1-s3-s1-t7" name="Check normal api access" line="133">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230914 01:21:40.646" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20230914 01:21:40.650" level="INFO">${rc} = 0</msg>
<msg timestamp="20230914 01:21:40.650" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230914 01:21:40.644" endtime="20230914 01:21:40.650"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 01:21:40.651" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230914 01:21:40.651" endtime="20230914 01:21:40.651"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230914 01:21:40.652" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230914 01:21:40.651" endtime="20230914 01:21:40.652"/>
</kw>
<status status="PASS" starttime="20230914 01:21:40.643" endtime="20230914 01:21:40.652"/>
</kw>
<msg timestamp="20230914 01:21:40.652" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230914 01:21:40.643" endtime="20230914 01:21:40.652"/>
</kw>
<status status="PASS" starttime="20230914 01:21:40.643" endtime="20230914 01:21:40.652"/>
</kw>
<kw name="Check http return code">
<arg>${NON_ADMIN_API_ENDPOINT_URL}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230914 01:21:40.657" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/clusterState 2&gt;&amp;1'.</msg>
<msg timestamp="20230914 01:21:40.686" level="INFO">${rc} = 0</msg>
<msg timestamp="20230914 01:21:40.686" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230914 01:21:40.654" endtime="20230914 01:21:40.686"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 01:21:40.687" level="INFO">200</msg>
<status status="PASS" starttime="20230914 01:21:40.686" endtime="20230914 01:21:40.687"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230914 01:21:40.688" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230914 01:21:40.687" endtime="20230914 01:21:40.688"/>
</kw>
<status status="PASS" starttime="20230914 01:21:40.654" endtime="20230914 01:21:40.688"/>
</kw>
<msg timestamp="20230914 01:21:40.688" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230914 01:21:40.654" endtime="20230914 01:21:40.688"/>
</kw>
<msg timestamp="20230914 01:21:40.688" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230914 01:21:40.653" endtime="20230914 01:21:40.688"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230914 01:21:40.689" endtime="20230914 01:21:40.689"/>
</kw>
<status status="NOT RUN" starttime="20230914 01:21:40.689" endtime="20230914 01:21:40.689"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230914 01:21:40.690" endtime="20230914 01:21:40.690"/>
</kw>
<status status="PASS" starttime="20230914 01:21:40.690" endtime="20230914 01:21:40.690"/>
</branch>
<status status="PASS" starttime="20230914 01:21:40.689" endtime="20230914 01:21:40.690"/>
</if>
<status status="PASS" starttime="20230914 01:21:40.653" endtime="20230914 01:21:40.691"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230914 01:21:40.691" endtime="20230914 01:21:40.692"/>
</kw>
<status status="PASS" starttime="20230914 01:21:40.691" endtime="20230914 01:21:40.692"/>
</kw>
<kw name="Check http return code">
<arg>${NON_ADMIN_API_ENDPOINT_URL}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230914 01:21:40.698" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/clusterState 2&gt;&amp;1'.</msg>
<msg timestamp="20230914 01:21:40.723" level="INFO">${rc} = 0</msg>
<msg timestamp="20230914 01:21:40.723" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230914 01:21:40.694" endtime="20230914 01:21:40.723"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 01:21:40.724" level="INFO">200</msg>
<status status="PASS" starttime="20230914 01:21:40.723" endtime="20230914 01:21:40.724"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230914 01:21:40.725" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230914 01:21:40.724" endtime="20230914 01:21:40.725"/>
</kw>
<status status="PASS" starttime="20230914 01:21:40.694" endtime="20230914 01:21:40.725"/>
</kw>
<msg timestamp="20230914 01:21:40.725" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230914 01:21:40.693" endtime="20230914 01:21:40.725"/>
</kw>
<msg timestamp="20230914 01:21:40.725" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230914 01:21:40.693" endtime="20230914 01:21:40.725"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230914 01:21:40.726" endtime="20230914 01:21:40.726"/>
</kw>
<status status="NOT RUN" starttime="20230914 01:21:40.726" endtime="20230914 01:21:40.726"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230914 01:21:40.726" endtime="20230914 01:21:40.727"/>
</kw>
<status status="PASS" starttime="20230914 01:21:40.726" endtime="20230914 01:21:40.727"/>
</branch>
<status status="PASS" starttime="20230914 01:21:40.726" endtime="20230914 01:21:40.727"/>
</if>
<status status="PASS" starttime="20230914 01:21:40.692" endtime="20230914 01:21:40.727"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230914 01:21:40.642" endtime="20230914 01:21:40.727"/>
</test>
<doc>Smoke test to start cluster with docker-compose environments.</doc>
<status status="PASS" starttime="20230914 01:21:08.904" endtime="20230914 01:21:40.729"/>
</suite>
<suite id="s1-s3-s2" name="Recon-Nssummary" source="/opt/hadoop/smoketest/recon/recon-nssummary.robot">
<test id="s1-s3-s2-t1" name="Check volume creation" line="99">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230914 01:21:40.747" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20230914 01:21:40.751" level="INFO">${rc} = 0</msg>
<msg timestamp="20230914 01:21:40.751" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230914 01:21:40.744" endtime="20230914 01:21:40.752"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 01:21:40.753" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230914 01:21:40.752" endtime="20230914 01:21:40.753"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230914 01:21:40.753" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230914 01:21:40.753" endtime="20230914 01:21:40.753"/>
</kw>
<status status="PASS" starttime="20230914 01:21:40.744" endtime="20230914 01:21:40.753"/>
</kw>
<msg timestamp="20230914 01:21:40.753" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230914 01:21:40.743" endtime="20230914 01:21:40.754"/>
</kw>
<status status="PASS" starttime="20230914 01:21:40.743" endtime="20230914 01:21:40.754"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230914 01:21:40.754" endtime="20230914 01:21:40.755"/>
</kw>
<status status="PASS" starttime="20230914 01:21:40.754" endtime="20230914 01:21:40.755"/>
</kw>
<kw name="Create volume">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[LOWER]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230914 01:21:40.756" level="INFO">${random} = elaho</msg>
<status status="PASS" starttime="20230914 01:21:40.755" endtime="20230914 01:21:40.756"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${VOLUME}</arg>
<arg>vol-${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230914 01:21:40.757" level="INFO">${VOLUME} = vol-elaho</msg>
<status status="PASS" starttime="20230914 01:21:40.756" endtime="20230914 01:21:40.757"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create /${VOLUME}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230914 01:21:40.761" level="INFO">Running command 'ozone sh volume create /vol-elaho 2&gt;&amp;1'.</msg>
<msg timestamp="20230914 01:21:45.619" level="INFO">${rc} = 0</msg>
<msg timestamp="20230914 01:21:45.619" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230914 01:21:40.758" endtime="20230914 01:21:45.619"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 01:21:45.620" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230914 01:21:45.619" endtime="20230914 01:21:45.620"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230914 01:21:45.621" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230914 01:21:45.620" endtime="20230914 01:21:45.621"/>
</kw>
<status status="PASS" starttime="20230914 01:21:40.758" endtime="20230914 01:21:45.621"/>
</kw>
<msg timestamp="20230914 01:21:45.621" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230914 01:21:40.758" endtime="20230914 01:21:45.621"/>
</kw>
<msg timestamp="20230914 01:21:45.622" level="INFO">${result} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230914 01:21:40.757" endtime="20230914 01:21:45.622"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230914 01:21:45.622" endtime="20230914 01:21:45.622"/>
</kw>
<status status="PASS" starttime="20230914 01:21:40.755" endtime="20230914 01:21:45.622"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230914 01:21:40.742" endtime="20230914 01:21:45.623"/>
</test>
<test id="s1-s3-s2-t2" name="Check bucket creation" line="104">
<kw name="Create bucket">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[LOWER]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230914 01:21:45.625" level="INFO">${random} = wtocr</msg>
<status status="PASS" starttime="20230914 01:21:45.625" endtime="20230914 01:21:45.625"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${BUCKET}</arg>
<arg>buc-${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230914 01:21:45.626" level="INFO">${BUCKET} = buc-wtocr</msg>
<status status="PASS" starttime="20230914 01:21:45.625" endtime="20230914 01:21:45.626"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket create -l ${BUCKET_LAYOUT} /${VOLUME}/${BUCKET}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230914 01:21:45.630" level="INFO">Running command 'ozone sh bucket create -l FILE_SYSTEM_OPTIMIZED /vol-elaho/buc-wtocr 2&gt;&amp;1'.</msg>
<msg timestamp="20230914 01:21:49.612" level="INFO">${rc} = 0</msg>
<msg timestamp="20230914 01:21:49.612" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230914 01:21:45.627" endtime="20230914 01:21:49.612"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 01:21:49.613" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230914 01:21:49.612" endtime="20230914 01:21:49.613"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230914 01:21:49.614" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230914 01:21:49.613" endtime="20230914 01:21:49.614"/>
</kw>
<status status="PASS" starttime="20230914 01:21:45.627" endtime="20230914 01:21:49.614"/>
</kw>
<msg timestamp="20230914 01:21:49.614" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230914 01:21:45.626" endtime="20230914 01:21:49.614"/>
</kw>
<msg timestamp="20230914 01:21:49.615" level="INFO">${result} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230914 01:21:45.626" endtime="20230914 01:21:49.615"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230914 01:21:49.615" endtime="20230914 01:21:49.615"/>
</kw>
<status status="PASS" starttime="20230914 01:21:45.624" endtime="20230914 01:21:49.615"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230914 01:21:45.623" endtime="20230914 01:21:49.616"/>
</test>
<test id="s1-s3-s2-t3" name="Check keys creation" line="107">
<kw name="Create keys">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key put /${VOLUME}/${BUCKET}/file1 README.md</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230914 01:21:49.622" level="INFO">Running command 'ozone sh key put /vol-elaho/buc-wtocr/file1 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20230914 01:21:56.556" level="INFO">${rc} = 0</msg>
<msg timestamp="20230914 01:21:56.556" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230914 01:21:49.619" endtime="20230914 01:21:56.557"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 01:21:56.558" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230914 01:21:56.557" endtime="20230914 01:21:56.559"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230914 01:21:56.559" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230914 01:21:56.559" endtime="20230914 01:21:56.559"/>
</kw>
<status status="PASS" starttime="20230914 01:21:49.619" endtime="20230914 01:21:56.559"/>
</kw>
<msg timestamp="20230914 01:21:56.559" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230914 01:21:49.618" endtime="20230914 01:21:56.560"/>
</kw>
<msg timestamp="20230914 01:21:56.560" level="INFO">${result} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230914 01:21:49.618" endtime="20230914 01:21:56.560"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230914 01:21:56.560" endtime="20230914 01:21:56.560"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key put /${VOLUME}/${BUCKET}/dir1/dir2/file2 HISTORY.md</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230914 01:21:56.565" level="INFO">Running command 'ozone sh key put /vol-elaho/buc-wtocr/dir1/dir2/file2 HISTORY.md 2&gt;&amp;1'.</msg>
<msg timestamp="20230914 01:22:03.044" level="INFO">${rc} = 0</msg>
<msg timestamp="20230914 01:22:03.044" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230914 01:21:56.562" endtime="20230914 01:22:03.044"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 01:22:03.046" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230914 01:22:03.045" endtime="20230914 01:22:03.046"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230914 01:22:03.047" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230914 01:22:03.046" endtime="20230914 01:22:03.047"/>
</kw>
<status status="PASS" starttime="20230914 01:21:56.561" endtime="20230914 01:22:03.047"/>
</kw>
<msg timestamp="20230914 01:22:03.047" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230914 01:21:56.561" endtime="20230914 01:22:03.048"/>
</kw>
<msg timestamp="20230914 01:22:03.048" level="INFO">${result} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230914 01:21:56.560" endtime="20230914 01:22:03.048"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230914 01:22:03.048" endtime="20230914 01:22:03.048"/>
</kw>
<status status="PASS" starttime="20230914 01:21:49.618" endtime="20230914 01:22:03.048"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230914 01:21:49.617" endtime="20230914 01:22:03.049"/>
</test>
<test id="s1-s3-s2-t4" name="Check Summary api access" line="110">
<kw name="Check Access">
<arg>${SUMMARY_URL}?path=/</arg>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230914 01:22:03.055" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20230914 01:22:03.059" level="INFO">${rc} = 0</msg>
<msg timestamp="20230914 01:22:03.059" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230914 01:22:03.052" endtime="20230914 01:22:03.059"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 01:22:03.060" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230914 01:22:03.060" endtime="20230914 01:22:03.061"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230914 01:22:03.061" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230914 01:22:03.061" endtime="20230914 01:22:03.061"/>
</kw>
<status status="PASS" starttime="20230914 01:22:03.052" endtime="20230914 01:22:03.062"/>
</kw>
<msg timestamp="20230914 01:22:03.062" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230914 01:22:03.051" endtime="20230914 01:22:03.062"/>
</kw>
<status status="PASS" starttime="20230914 01:22:03.051" endtime="20230914 01:22:03.062"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230914 01:22:03.066" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230914 01:22:03.106" level="INFO">${rc} = 0</msg>
<msg timestamp="20230914 01:22:03.106" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230914 01:22:03.064" endtime="20230914 01:22:03.107"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 01:22:03.108" level="INFO">200</msg>
<status status="PASS" starttime="20230914 01:22:03.107" endtime="20230914 01:22:03.108"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230914 01:22:03.108" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230914 01:22:03.108" endtime="20230914 01:22:03.109"/>
</kw>
<status status="PASS" starttime="20230914 01:22:03.063" endtime="20230914 01:22:03.109"/>
</kw>
<msg timestamp="20230914 01:22:03.109" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230914 01:22:03.063" endtime="20230914 01:22:03.109"/>
</kw>
<msg timestamp="20230914 01:22:03.109" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230914 01:22:03.063" endtime="20230914 01:22:03.109"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230914 01:22:03.110" endtime="20230914 01:22:03.110"/>
</kw>
<status status="NOT RUN" starttime="20230914 01:22:03.110" endtime="20230914 01:22:03.110"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230914 01:22:03.110" endtime="20230914 01:22:03.112"/>
</kw>
<status status="PASS" starttime="20230914 01:22:03.110" endtime="20230914 01:22:03.112"/>
</branch>
<status status="PASS" starttime="20230914 01:22:03.110" endtime="20230914 01:22:03.112"/>
</if>
<status status="PASS" starttime="20230914 01:22:03.062" endtime="20230914 01:22:03.112"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230914 01:22:03.113" endtime="20230914 01:22:03.113"/>
</kw>
<status status="PASS" starttime="20230914 01:22:03.112" endtime="20230914 01:22:03.113"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>403</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230914 01:22:03.118" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230914 01:22:03.134" level="INFO">${rc} = 0</msg>
<msg timestamp="20230914 01:22:03.134" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230914 01:22:03.115" endtime="20230914 01:22:03.134"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 01:22:03.136" level="INFO">200</msg>
<status status="PASS" starttime="20230914 01:22:03.135" endtime="20230914 01:22:03.136"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230914 01:22:03.136" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230914 01:22:03.136" endtime="20230914 01:22:03.136"/>
</kw>
<status status="PASS" starttime="20230914 01:22:03.114" endtime="20230914 01:22:03.137"/>
</kw>
<msg timestamp="20230914 01:22:03.137" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230914 01:22:03.114" endtime="20230914 01:22:03.137"/>
</kw>
<msg timestamp="20230914 01:22:03.137" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230914 01:22:03.114" endtime="20230914 01:22:03.137"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230914 01:22:03.138" endtime="20230914 01:22:03.138"/>
</kw>
<status status="NOT RUN" starttime="20230914 01:22:03.137" endtime="20230914 01:22:03.138"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230914 01:22:03.138" endtime="20230914 01:22:03.138"/>
</kw>
<status status="PASS" starttime="20230914 01:22:03.138" endtime="20230914 01:22:03.138"/>
</branch>
<status status="PASS" starttime="20230914 01:22:03.137" endtime="20230914 01:22:03.139"/>
</if>
<status status="PASS" starttime="20230914 01:22:03.113" endtime="20230914 01:22:03.139"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230914 01:22:03.139" endtime="20230914 01:22:03.140"/>
</kw>
<status status="PASS" starttime="20230914 01:22:03.139" endtime="20230914 01:22:03.140"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230914 01:22:03.145" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230914 01:22:03.160" level="INFO">${rc} = 0</msg>
<msg timestamp="20230914 01:22:03.161" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230914 01:22:03.142" endtime="20230914 01:22:03.161"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 01:22:03.162" level="INFO">200</msg>
<status status="PASS" starttime="20230914 01:22:03.161" endtime="20230914 01:22:03.162"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230914 01:22:03.162" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230914 01:22:03.162" endtime="20230914 01:22:03.162"/>
</kw>
<status status="PASS" starttime="20230914 01:22:03.142" endtime="20230914 01:22:03.163"/>
</kw>
<msg timestamp="20230914 01:22:03.163" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230914 01:22:03.141" endtime="20230914 01:22:03.163"/>
</kw>
<msg timestamp="20230914 01:22:03.163" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230914 01:22:03.141" endtime="20230914 01:22:03.163"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230914 01:22:03.163" endtime="20230914 01:22:03.164"/>
</kw>
<status status="NOT RUN" starttime="20230914 01:22:03.163" endtime="20230914 01:22:03.164"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230914 01:22:03.164" endtime="20230914 01:22:03.164"/>
</kw>
<status status="PASS" starttime="20230914 01:22:03.164" endtime="20230914 01:22:03.164"/>
</branch>
<status status="PASS" starttime="20230914 01:22:03.163" endtime="20230914 01:22:03.164"/>
</if>
<status status="PASS" starttime="20230914 01:22:03.140" endtime="20230914 01:22:03.164"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230914 01:22:03.165" endtime="20230914 01:22:03.165"/>
</kw>
<status status="PASS" starttime="20230914 01:22:03.164" endtime="20230914 01:22:03.165"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230914 01:22:03.186" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230914 01:22:03.203" level="INFO">${rc} = 0</msg>
<msg timestamp="20230914 01:22:03.203" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230914 01:22:03.167" endtime="20230914 01:22:03.203"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 01:22:03.204" level="INFO">200</msg>
<status status="PASS" starttime="20230914 01:22:03.203" endtime="20230914 01:22:03.204"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230914 01:22:03.205" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230914 01:22:03.204" endtime="20230914 01:22:03.205"/>
</kw>
<status status="PASS" starttime="20230914 01:22:03.167" endtime="20230914 01:22:03.205"/>
</kw>
<msg timestamp="20230914 01:22:03.205" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230914 01:22:03.167" endtime="20230914 01:22:03.206"/>
</kw>
<msg timestamp="20230914 01:22:03.206" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230914 01:22:03.166" endtime="20230914 01:22:03.206"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230914 01:22:03.206" endtime="20230914 01:22:03.206"/>
</kw>
<status status="NOT RUN" starttime="20230914 01:22:03.206" endtime="20230914 01:22:03.206"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230914 01:22:03.207" endtime="20230914 01:22:03.207"/>
</kw>
<status status="PASS" starttime="20230914 01:22:03.206" endtime="20230914 01:22:03.207"/>
</branch>
<status status="PASS" starttime="20230914 01:22:03.206" endtime="20230914 01:22:03.207"/>
</if>
<status status="PASS" starttime="20230914 01:22:03.166" endtime="20230914 01:22:03.207"/>
</kw>
<status status="PASS" starttime="20230914 01:22:03.050" endtime="20230914 01:22:03.207"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230914 01:22:03.050" endtime="20230914 01:22:03.208"/>
</test>
<test id="s1-s3-s2-t5" name="Check Disk Usage api access" line="113">
<kw name="Check Access">
<arg>${DISK_USAGE_URL}?path=/</arg>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230914 01:22:03.215" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20230914 01:22:03.221" level="INFO">${rc} = 0</msg>
<msg timestamp="20230914 01:22:03.221" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230914 01:22:03.211" endtime="20230914 01:22:03.221"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 01:22:03.222" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230914 01:22:03.222" endtime="20230914 01:22:03.222"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230914 01:22:03.223" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230914 01:22:03.223" endtime="20230914 01:22:03.223"/>
</kw>
<status status="PASS" starttime="20230914 01:22:03.210" endtime="20230914 01:22:03.223"/>
</kw>
<msg timestamp="20230914 01:22:03.224" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230914 01:22:03.210" endtime="20230914 01:22:03.224"/>
</kw>
<status status="PASS" starttime="20230914 01:22:03.209" endtime="20230914 01:22:03.224"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230914 01:22:03.229" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/du?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230914 01:22:03.251" level="INFO">${rc} = 0</msg>
<msg timestamp="20230914 01:22:03.252" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230914 01:22:03.226" endtime="20230914 01:22:03.252"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 01:22:03.253" level="INFO">200</msg>
<status status="PASS" starttime="20230914 01:22:03.252" endtime="20230914 01:22:03.253"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230914 01:22:03.254" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230914 01:22:03.253" endtime="20230914 01:22:03.254"/>
</kw>
<status status="PASS" starttime="20230914 01:22:03.226" endtime="20230914 01:22:03.254"/>
</kw>
<msg timestamp="20230914 01:22:03.254" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230914 01:22:03.225" endtime="20230914 01:22:03.254"/>
</kw>
<msg timestamp="20230914 01:22:03.254" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230914 01:22:03.225" endtime="20230914 01:22:03.254"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230914 01:22:03.255" endtime="20230914 01:22:03.255"/>
</kw>
<status status="NOT RUN" starttime="20230914 01:22:03.255" endtime="20230914 01:22:03.255"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230914 01:22:03.255" endtime="20230914 01:22:03.256"/>
</kw>
<status status="PASS" starttime="20230914 01:22:03.255" endtime="20230914 01:22:03.256"/>
</branch>
<status status="PASS" starttime="20230914 01:22:03.255" endtime="20230914 01:22:03.256"/>
</if>
<status status="PASS" starttime="20230914 01:22:03.224" endtime="20230914 01:22:03.256"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230914 01:22:03.257" endtime="20230914 01:22:03.258"/>
</kw>
<status status="PASS" starttime="20230914 01:22:03.257" endtime="20230914 01:22:03.258"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>403</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230914 01:22:03.262" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/du?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230914 01:22:03.278" level="INFO">${rc} = 0</msg>
<msg timestamp="20230914 01:22:03.278" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230914 01:22:03.260" endtime="20230914 01:22:03.278"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 01:22:03.279" level="INFO">200</msg>
<status status="PASS" starttime="20230914 01:22:03.279" endtime="20230914 01:22:03.279"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230914 01:22:03.280" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230914 01:22:03.279" endtime="20230914 01:22:03.280"/>
</kw>
<status status="PASS" starttime="20230914 01:22:03.259" endtime="20230914 01:22:03.281"/>
</kw>
<msg timestamp="20230914 01:22:03.281" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230914 01:22:03.259" endtime="20230914 01:22:03.281"/>
</kw>
<msg timestamp="20230914 01:22:03.281" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230914 01:22:03.258" endtime="20230914 01:22:03.281"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230914 01:22:03.282" endtime="20230914 01:22:03.282"/>
</kw>
<status status="NOT RUN" starttime="20230914 01:22:03.281" endtime="20230914 01:22:03.282"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230914 01:22:03.282" endtime="20230914 01:22:03.282"/>
</kw>
<status status="PASS" starttime="20230914 01:22:03.282" endtime="20230914 01:22:03.282"/>
</branch>
<status status="PASS" starttime="20230914 01:22:03.281" endtime="20230914 01:22:03.282"/>
</if>
<status status="PASS" starttime="20230914 01:22:03.258" endtime="20230914 01:22:03.283"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230914 01:22:03.283" endtime="20230914 01:22:03.283"/>
</kw>
<status status="PASS" starttime="20230914 01:22:03.283" endtime="20230914 01:22:03.283"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230914 01:22:03.288" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/du?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230914 01:22:03.305" level="INFO">${rc} = 0</msg>
<msg timestamp="20230914 01:22:03.306" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230914 01:22:03.285" endtime="20230914 01:22:03.306"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 01:22:03.307" level="INFO">200</msg>
<status status="PASS" starttime="20230914 01:22:03.306" endtime="20230914 01:22:03.308"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230914 01:22:03.308" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230914 01:22:03.308" endtime="20230914 01:22:03.308"/>
</kw>
<status status="PASS" starttime="20230914 01:22:03.285" endtime="20230914 01:22:03.308"/>
</kw>
<msg timestamp="20230914 01:22:03.309" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230914 01:22:03.285" endtime="20230914 01:22:03.309"/>
</kw>
<msg timestamp="20230914 01:22:03.309" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230914 01:22:03.284" endtime="20230914 01:22:03.309"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230914 01:22:03.309" endtime="20230914 01:22:03.309"/>
</kw>
<status status="NOT RUN" starttime="20230914 01:22:03.309" endtime="20230914 01:22:03.310"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230914 01:22:03.310" endtime="20230914 01:22:03.310"/>
</kw>
<status status="PASS" starttime="20230914 01:22:03.310" endtime="20230914 01:22:03.310"/>
</branch>
<status status="PASS" starttime="20230914 01:22:03.309" endtime="20230914 01:22:03.310"/>
</if>
<status status="PASS" starttime="20230914 01:22:03.284" endtime="20230914 01:22:03.310"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230914 01:22:03.311" endtime="20230914 01:22:03.311"/>
</kw>
<status status="PASS" starttime="20230914 01:22:03.310" endtime="20230914 01:22:03.311"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230914 01:22:03.316" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/du?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230914 01:22:03.333" level="INFO">${rc} = 0</msg>
<msg timestamp="20230914 01:22:03.333" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230914 01:22:03.314" endtime="20230914 01:22:03.333"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 01:22:03.335" level="INFO">200</msg>
<status status="PASS" starttime="20230914 01:22:03.334" endtime="20230914 01:22:03.336"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230914 01:22:03.336" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230914 01:22:03.336" endtime="20230914 01:22:03.336"/>
</kw>
<status status="PASS" starttime="20230914 01:22:03.313" endtime="20230914 01:22:03.337"/>
</kw>
<msg timestamp="20230914 01:22:03.337" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230914 01:22:03.312" endtime="20230914 01:22:03.337"/>
</kw>
<msg timestamp="20230914 01:22:03.337" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230914 01:22:03.312" endtime="20230914 01:22:03.337"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230914 01:22:03.338" endtime="20230914 01:22:03.338"/>
</kw>
<status status="NOT RUN" starttime="20230914 01:22:03.337" endtime="20230914 01:22:03.338"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230914 01:22:03.338" endtime="20230914 01:22:03.338"/>
</kw>
<status status="PASS" starttime="20230914 01:22:03.338" endtime="20230914 01:22:03.338"/>
</branch>
<status status="PASS" starttime="20230914 01:22:03.337" endtime="20230914 01:22:03.338"/>
</if>
<status status="PASS" starttime="20230914 01:22:03.311" endtime="20230914 01:22:03.339"/>
</kw>
<status status="PASS" starttime="20230914 01:22:03.209" endtime="20230914 01:22:03.339"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230914 01:22:03.208" endtime="20230914 01:22:03.339"/>
</test>
<test id="s1-s3-s2-t6" name="Check Quota Usage api access" line="116">
<kw name="Check Access">
<arg>${QUOTA_USAGE_URL}?path=/</arg>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230914 01:22:03.346" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20230914 01:22:03.349" level="INFO">${rc} = 0</msg>
<msg timestamp="20230914 01:22:03.349" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230914 01:22:03.343" endtime="20230914 01:22:03.349"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 01:22:03.350" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230914 01:22:03.350" endtime="20230914 01:22:03.351"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230914 01:22:03.351" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230914 01:22:03.351" endtime="20230914 01:22:03.351"/>
</kw>
<status status="PASS" starttime="20230914 01:22:03.342" endtime="20230914 01:22:03.351"/>
</kw>
<msg timestamp="20230914 01:22:03.351" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230914 01:22:03.342" endtime="20230914 01:22:03.352"/>
</kw>
<status status="PASS" starttime="20230914 01:22:03.341" endtime="20230914 01:22:03.352"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230914 01:22:03.356" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/quota?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230914 01:22:03.395" level="INFO">${rc} = 0</msg>
<msg timestamp="20230914 01:22:03.395" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230914 01:22:03.354" endtime="20230914 01:22:03.395"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 01:22:03.397" level="INFO">200</msg>
<status status="PASS" starttime="20230914 01:22:03.396" endtime="20230914 01:22:03.397"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230914 01:22:03.398" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230914 01:22:03.398" endtime="20230914 01:22:03.398"/>
</kw>
<status status="PASS" starttime="20230914 01:22:03.353" endtime="20230914 01:22:03.398"/>
</kw>
<msg timestamp="20230914 01:22:03.398" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230914 01:22:03.353" endtime="20230914 01:22:03.399"/>
</kw>
<msg timestamp="20230914 01:22:03.409" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230914 01:22:03.352" endtime="20230914 01:22:03.409"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230914 01:22:03.417" endtime="20230914 01:22:03.417"/>
</kw>
<status status="NOT RUN" starttime="20230914 01:22:03.410" endtime="20230914 01:22:03.417"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230914 01:22:03.417" endtime="20230914 01:22:03.418"/>
</kw>
<status status="PASS" starttime="20230914 01:22:03.417" endtime="20230914 01:22:03.418"/>
</branch>
<status status="PASS" starttime="20230914 01:22:03.409" endtime="20230914 01:22:03.418"/>
</if>
<status status="PASS" starttime="20230914 01:22:03.352" endtime="20230914 01:22:03.418"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230914 01:22:03.423" endtime="20230914 01:22:03.423"/>
</kw>
<status status="PASS" starttime="20230914 01:22:03.418" endtime="20230914 01:22:03.423"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>403</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230914 01:22:03.436" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/quota?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230914 01:22:03.454" level="INFO">${rc} = 0</msg>
<msg timestamp="20230914 01:22:03.454" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230914 01:22:03.433" endtime="20230914 01:22:03.454"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 01:22:03.455" level="INFO">200</msg>
<status status="PASS" starttime="20230914 01:22:03.455" endtime="20230914 01:22:03.455"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230914 01:22:03.469" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230914 01:22:03.459" endtime="20230914 01:22:03.469"/>
</kw>
<status status="PASS" starttime="20230914 01:22:03.432" endtime="20230914 01:22:03.469"/>
</kw>
<msg timestamp="20230914 01:22:03.469" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230914 01:22:03.424" endtime="20230914 01:22:03.469"/>
</kw>
<msg timestamp="20230914 01:22:03.470" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230914 01:22:03.424" endtime="20230914 01:22:03.470"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230914 01:22:03.470" endtime="20230914 01:22:03.470"/>
</kw>
<status status="NOT RUN" starttime="20230914 01:22:03.470" endtime="20230914 01:22:03.470"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230914 01:22:03.471" endtime="20230914 01:22:03.471"/>
</kw>
<status status="PASS" starttime="20230914 01:22:03.470" endtime="20230914 01:22:03.471"/>
</branch>
<status status="PASS" starttime="20230914 01:22:03.470" endtime="20230914 01:22:03.471"/>
</if>
<status status="PASS" starttime="20230914 01:22:03.423" endtime="20230914 01:22:03.471"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230914 01:22:03.473" endtime="20230914 01:22:03.473"/>
</kw>
<status status="PASS" starttime="20230914 01:22:03.471" endtime="20230914 01:22:03.473"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230914 01:22:03.478" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/quota?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230914 01:22:03.503" level="INFO">${rc} = 0</msg>
<msg timestamp="20230914 01:22:03.503" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230914 01:22:03.476" endtime="20230914 01:22:03.503"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 01:22:03.504" level="INFO">200</msg>
<status status="PASS" starttime="20230914 01:22:03.504" endtime="20230914 01:22:03.505"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230914 01:22:03.505" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230914 01:22:03.505" endtime="20230914 01:22:03.505"/>
</kw>
<status status="PASS" starttime="20230914 01:22:03.475" endtime="20230914 01:22:03.505"/>
</kw>
<msg timestamp="20230914 01:22:03.506" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230914 01:22:03.475" endtime="20230914 01:22:03.506"/>
</kw>
<msg timestamp="20230914 01:22:03.506" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230914 01:22:03.474" endtime="20230914 01:22:03.506"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230914 01:22:03.506" endtime="20230914 01:22:03.506"/>
</kw>
<status status="NOT RUN" starttime="20230914 01:22:03.506" endtime="20230914 01:22:03.507"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230914 01:22:03.507" endtime="20230914 01:22:03.508"/>
</kw>
<status status="PASS" starttime="20230914 01:22:03.507" endtime="20230914 01:22:03.508"/>
</branch>
<status status="PASS" starttime="20230914 01:22:03.506" endtime="20230914 01:22:03.508"/>
</if>
<status status="PASS" starttime="20230914 01:22:03.473" endtime="20230914 01:22:03.508"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230914 01:22:03.509" endtime="20230914 01:22:03.509"/>
</kw>
<status status="PASS" starttime="20230914 01:22:03.508" endtime="20230914 01:22:03.509"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230914 01:22:03.515" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/quota?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230914 01:22:03.533" level="INFO">${rc} = 0</msg>
<msg timestamp="20230914 01:22:03.533" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230914 01:22:03.512" endtime="20230914 01:22:03.533"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 01:22:03.535" level="INFO">200</msg>
<status status="PASS" starttime="20230914 01:22:03.533" endtime="20230914 01:22:03.535"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230914 01:22:03.535" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230914 01:22:03.535" endtime="20230914 01:22:03.535"/>
</kw>
<status status="PASS" starttime="20230914 01:22:03.511" endtime="20230914 01:22:03.535"/>
</kw>
<msg timestamp="20230914 01:22:03.536" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230914 01:22:03.511" endtime="20230914 01:22:03.536"/>
</kw>
<msg timestamp="20230914 01:22:03.536" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230914 01:22:03.510" endtime="20230914 01:22:03.536"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230914 01:22:03.537" endtime="20230914 01:22:03.537"/>
</kw>
<status status="NOT RUN" starttime="20230914 01:22:03.536" endtime="20230914 01:22:03.537"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230914 01:22:03.537" endtime="20230914 01:22:03.537"/>
</kw>
<status status="PASS" starttime="20230914 01:22:03.537" endtime="20230914 01:22:03.537"/>
</branch>
<status status="PASS" starttime="20230914 01:22:03.536" endtime="20230914 01:22:03.537"/>
</if>
<status status="PASS" starttime="20230914 01:22:03.509" endtime="20230914 01:22:03.537"/>
</kw>
<status status="PASS" starttime="20230914 01:22:03.340" endtime="20230914 01:22:03.538"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230914 01:22:03.340" endtime="20230914 01:22:03.538"/>
</test>
<test id="s1-s3-s2-t7" name="Check File Size Distribution api access" line="119">
<kw name="Check Access">
<arg>${FILE_SIZE_DIST_URL}?path=/</arg>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230914 01:22:03.546" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20230914 01:22:03.549" level="INFO">${rc} = 0</msg>
<msg timestamp="20230914 01:22:03.549" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230914 01:22:03.542" endtime="20230914 01:22:03.549"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 01:22:03.551" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230914 01:22:03.550" endtime="20230914 01:22:03.551"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230914 01:22:03.551" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230914 01:22:03.551" endtime="20230914 01:22:03.551"/>
</kw>
<status status="PASS" starttime="20230914 01:22:03.542" endtime="20230914 01:22:03.551"/>
</kw>
<msg timestamp="20230914 01:22:03.552" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230914 01:22:03.541" endtime="20230914 01:22:03.552"/>
</kw>
<status status="PASS" starttime="20230914 01:22:03.541" endtime="20230914 01:22:03.552"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230914 01:22:03.556" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/dist?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230914 01:22:03.580" level="INFO">${rc} = 0</msg>
<msg timestamp="20230914 01:22:03.580" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230914 01:22:03.554" endtime="20230914 01:22:03.580"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 01:22:03.581" level="INFO">200</msg>
<status status="PASS" starttime="20230914 01:22:03.581" endtime="20230914 01:22:03.581"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230914 01:22:03.583" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230914 01:22:03.582" endtime="20230914 01:22:03.583"/>
</kw>
<status status="PASS" starttime="20230914 01:22:03.553" endtime="20230914 01:22:03.583"/>
</kw>
<msg timestamp="20230914 01:22:03.583" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230914 01:22:03.553" endtime="20230914 01:22:03.583"/>
</kw>
<msg timestamp="20230914 01:22:03.584" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230914 01:22:03.552" endtime="20230914 01:22:03.584"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230914 01:22:03.584" endtime="20230914 01:22:03.584"/>
</kw>
<status status="NOT RUN" starttime="20230914 01:22:03.584" endtime="20230914 01:22:03.584"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230914 01:22:03.585" endtime="20230914 01:22:03.585"/>
</kw>
<status status="PASS" starttime="20230914 01:22:03.585" endtime="20230914 01:22:03.585"/>
</branch>
<status status="PASS" starttime="20230914 01:22:03.584" endtime="20230914 01:22:03.585"/>
</if>
<status status="PASS" starttime="20230914 01:22:03.552" endtime="20230914 01:22:03.586"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230914 01:22:03.586" endtime="20230914 01:22:03.587"/>
</kw>
<status status="PASS" starttime="20230914 01:22:03.586" endtime="20230914 01:22:03.587"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>403</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230914 01:22:03.591" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/dist?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230914 01:22:03.607" level="INFO">${rc} = 0</msg>
<msg timestamp="20230914 01:22:03.607" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230914 01:22:03.589" endtime="20230914 01:22:03.607"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 01:22:03.608" level="INFO">200</msg>
<status status="PASS" starttime="20230914 01:22:03.607" endtime="20230914 01:22:03.608"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230914 01:22:03.608" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230914 01:22:03.608" endtime="20230914 01:22:03.609"/>
</kw>
<status status="PASS" starttime="20230914 01:22:03.588" endtime="20230914 01:22:03.609"/>
</kw>
<msg timestamp="20230914 01:22:03.609" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230914 01:22:03.588" endtime="20230914 01:22:03.609"/>
</kw>
<msg timestamp="20230914 01:22:03.609" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230914 01:22:03.587" endtime="20230914 01:22:03.609"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230914 01:22:03.610" endtime="20230914 01:22:03.610"/>
</kw>
<status status="NOT RUN" starttime="20230914 01:22:03.610" endtime="20230914 01:22:03.610"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230914 01:22:03.610" endtime="20230914 01:22:03.611"/>
</kw>
<status status="PASS" starttime="20230914 01:22:03.610" endtime="20230914 01:22:03.611"/>
</branch>
<status status="PASS" starttime="20230914 01:22:03.609" endtime="20230914 01:22:03.611"/>
</if>
<status status="PASS" starttime="20230914 01:22:03.587" endtime="20230914 01:22:03.611"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230914 01:22:03.612" endtime="20230914 01:22:03.612"/>
</kw>
<status status="PASS" starttime="20230914 01:22:03.611" endtime="20230914 01:22:03.612"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230914 01:22:03.616" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/dist?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230914 01:22:03.635" level="INFO">${rc} = 0</msg>
<msg timestamp="20230914 01:22:03.635" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230914 01:22:03.614" endtime="20230914 01:22:03.635"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 01:22:03.636" level="INFO">200</msg>
<status status="PASS" starttime="20230914 01:22:03.636" endtime="20230914 01:22:03.636"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230914 01:22:03.637" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230914 01:22:03.637" endtime="20230914 01:22:03.637"/>
</kw>
<status status="PASS" starttime="20230914 01:22:03.614" endtime="20230914 01:22:03.637"/>
</kw>
<msg timestamp="20230914 01:22:03.638" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230914 01:22:03.613" endtime="20230914 01:22:03.638"/>
</kw>
<msg timestamp="20230914 01:22:03.638" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230914 01:22:03.613" endtime="20230914 01:22:03.638"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230914 01:22:03.638" endtime="20230914 01:22:03.638"/>
</kw>
<status status="NOT RUN" starttime="20230914 01:22:03.638" endtime="20230914 01:22:03.638"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230914 01:22:03.639" endtime="20230914 01:22:03.639"/>
</kw>
<status status="PASS" starttime="20230914 01:22:03.639" endtime="20230914 01:22:03.639"/>
</branch>
<status status="PASS" starttime="20230914 01:22:03.638" endtime="20230914 01:22:03.639"/>
</if>
<status status="PASS" starttime="20230914 01:22:03.612" endtime="20230914 01:22:03.639"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230914 01:22:03.640" endtime="20230914 01:22:03.641"/>
</kw>
<status status="PASS" starttime="20230914 01:22:03.640" endtime="20230914 01:22:03.641"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230914 01:22:03.645" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/dist?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230914 01:22:03.662" level="INFO">${rc} = 0</msg>
<msg timestamp="20230914 01:22:03.662" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230914 01:22:03.643" endtime="20230914 01:22:03.662"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 01:22:03.663" level="INFO">200</msg>
<status status="PASS" starttime="20230914 01:22:03.662" endtime="20230914 01:22:03.663"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230914 01:22:03.664" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230914 01:22:03.663" endtime="20230914 01:22:03.664"/>
</kw>
<status status="PASS" starttime="20230914 01:22:03.642" endtime="20230914 01:22:03.664"/>
</kw>
<msg timestamp="20230914 01:22:03.664" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230914 01:22:03.642" endtime="20230914 01:22:03.664"/>
</kw>
<msg timestamp="20230914 01:22:03.664" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230914 01:22:03.641" endtime="20230914 01:22:03.664"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230914 01:22:03.665" endtime="20230914 01:22:03.665"/>
</kw>
<status status="NOT RUN" starttime="20230914 01:22:03.665" endtime="20230914 01:22:03.665"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230914 01:22:03.666" endtime="20230914 01:22:03.666"/>
</kw>
<status status="PASS" starttime="20230914 01:22:03.665" endtime="20230914 01:22:03.666"/>
</branch>
<status status="PASS" starttime="20230914 01:22:03.665" endtime="20230914 01:22:03.666"/>
</if>
<status status="PASS" starttime="20230914 01:22:03.641" endtime="20230914 01:22:03.666"/>
</kw>
<status status="PASS" starttime="20230914 01:22:03.540" endtime="20230914 01:22:03.666"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230914 01:22:03.539" endtime="20230914 01:22:03.667"/>
</test>
<test id="s1-s3-s2-t8" name="Check Recon Namespace Summary Root" line="122">
<kw name="Wait For Summary">
<arg>${SUMMARY_URL}?path=/</arg>
<arg>ROOT</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230914 01:22:03.674" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230914 01:22:03.689" level="INFO">${rc} = 0</msg>
<msg timestamp="20230914 01:22:03.689" level="INFO">${output} = {"path":"","type":"ROOT","countStats":{"numVolume":3,"numBucket":2,"numDir":1,"numKey":1},"objectInfo":{"metadata":null,"name":null,"quotaInBytes":0,"quotaInNamespace":0,"usedNamespace":0,"creationTim...</msg>
<status status="PASS" starttime="20230914 01:22:03.672" endtime="20230914 01:22:03.689"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 01:22:03.690" level="INFO">{"path":"","type":"ROOT","countStats":{"numVolume":3,"numBucket":2,"numDir":1,"numKey":1},"objectInfo":{"metadata":null,"name":null,"quotaInBytes":0,"quotaInNamespace":0,"usedNamespace":0,"creationTime":0,"modificationTime":0,"acls":null},"status":"OK"}</msg>
<status status="PASS" starttime="20230914 01:22:03.689" endtime="20230914 01:22:03.690"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230914 01:22:03.692" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230914 01:22:03.690" endtime="20230914 01:22:03.692"/>
</kw>
<status status="PASS" starttime="20230914 01:22:03.672" endtime="20230914 01:22:03.692"/>
</kw>
<msg timestamp="20230914 01:22:03.692" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230914 01:22:03.671" endtime="20230914 01:22:03.692"/>
</kw>
<msg timestamp="20230914 01:22:03.692" level="INFO">${result} = {"path":"","type":"ROOT","countStats":{"numVolume":3,"numBucket":2,"numDir":1,"numKey":1},"objectInfo":{"metadata":null,"name":null,"quotaInBytes":0,"quotaInNamespace":0,"usedNamespace":0,"creationTim...</msg>
<status status="PASS" starttime="20230914 01:22:03.671" endtime="20230914 01:22:03.692"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230914 01:22:03.692" endtime="20230914 01:22:03.693"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230914 01:22:03.693" endtime="20230914 01:22:03.693"/>
</kw>
<status status="PASS" starttime="20230914 01:22:03.670" endtime="20230914 01:22:03.693"/>
</kw>
<status status="PASS" starttime="20230914 01:22:03.670" endtime="20230914 01:22:03.694"/>
</kw>
<status status="PASS" starttime="20230914 01:22:03.669" endtime="20230914 01:22:03.694"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230914 01:22:03.668" endtime="20230914 01:22:03.694"/>
</test>
<test id="s1-s3-s2-t9" name="Check Recon Namespace Summary Volume" line="125">
<kw name="Wait For Summary">
<arg>${SUMMARY_URL}?path=/${VOLUME}</arg>
<arg>VOLUME</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230914 01:22:03.701" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-elaho 2&gt;&amp;1'.</msg>
<msg timestamp="20230914 01:22:03.716" level="INFO">${rc} = 0</msg>
<msg timestamp="20230914 01:22:03.716" level="INFO">${output} = {"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20230914 01:22:03.698" endtime="20230914 01:22:03.716"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 01:22:03.717" level="INFO">{"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20230914 01:22:03.716" endtime="20230914 01:22:03.717"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230914 01:22:03.718" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230914 01:22:03.717" endtime="20230914 01:22:03.718"/>
</kw>
<status status="PASS" starttime="20230914 01:22:03.698" endtime="20230914 01:22:03.718"/>
</kw>
<msg timestamp="20230914 01:22:03.718" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230914 01:22:03.698" endtime="20230914 01:22:03.718"/>
</kw>
<msg timestamp="20230914 01:22:03.719" level="INFO">${result} = {"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20230914 01:22:03.697" endtime="20230914 01:22:03.719"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20230914 01:22:03.719" level="FAIL">'{"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}' does not contain '"status":"OK"'</msg>
<status status="FAIL" starttime="20230914 01:22:03.719" endtime="20230914 01:22:03.719"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230914 01:22:03.720" endtime="20230914 01:22:03.720"/>
</kw>
<status status="FAIL" starttime="20230914 01:22:03.697" endtime="20230914 01:22:03.720"/>
</kw>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230914 01:22:13.725" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-elaho 2&gt;&amp;1'.</msg>
<msg timestamp="20230914 01:22:13.741" level="INFO">${rc} = 0</msg>
<msg timestamp="20230914 01:22:13.741" level="INFO">${output} = {"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20230914 01:22:13.723" endtime="20230914 01:22:13.741"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 01:22:13.742" level="INFO">{"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20230914 01:22:13.741" endtime="20230914 01:22:13.742"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230914 01:22:13.743" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230914 01:22:13.742" endtime="20230914 01:22:13.743"/>
</kw>
<status status="PASS" starttime="20230914 01:22:13.722" endtime="20230914 01:22:13.743"/>
</kw>
<msg timestamp="20230914 01:22:13.743" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230914 01:22:13.722" endtime="20230914 01:22:13.743"/>
</kw>
<msg timestamp="20230914 01:22:13.744" level="INFO">${result} = {"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20230914 01:22:13.721" endtime="20230914 01:22:13.744"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20230914 01:22:13.745" level="FAIL">'{"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}' does not contain '"status":"OK"'</msg>
<status status="FAIL" starttime="20230914 01:22:13.744" endtime="20230914 01:22:13.745"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230914 01:22:13.745" endtime="20230914 01:22:13.745"/>
</kw>
<status status="FAIL" starttime="20230914 01:22:13.720" endtime="20230914 01:22:13.745"/>
</kw>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230914 01:22:23.751" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-elaho 2&gt;&amp;1'.</msg>
<msg timestamp="20230914 01:22:23.769" level="INFO">${rc} = 0</msg>
<msg timestamp="20230914 01:22:23.769" level="INFO">${output} = {"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20230914 01:22:23.748" endtime="20230914 01:22:23.769"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 01:22:23.770" level="INFO">{"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20230914 01:22:23.769" endtime="20230914 01:22:23.770"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230914 01:22:23.771" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230914 01:22:23.771" endtime="20230914 01:22:23.771"/>
</kw>
<status status="PASS" starttime="20230914 01:22:23.748" endtime="20230914 01:22:23.771"/>
</kw>
<msg timestamp="20230914 01:22:23.771" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230914 01:22:23.748" endtime="20230914 01:22:23.772"/>
</kw>
<msg timestamp="20230914 01:22:23.772" level="INFO">${result} = {"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20230914 01:22:23.747" endtime="20230914 01:22:23.772"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20230914 01:22:23.772" level="FAIL">'{"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}' does not contain '"status":"OK"'</msg>
<status status="FAIL" starttime="20230914 01:22:23.772" endtime="20230914 01:22:23.773"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230914 01:22:23.773" endtime="20230914 01:22:23.773"/>
</kw>
<status status="FAIL" starttime="20230914 01:22:23.746" endtime="20230914 01:22:23.773"/>
</kw>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230914 01:22:33.779" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-elaho 2&gt;&amp;1'.</msg>
<msg timestamp="20230914 01:22:33.795" level="INFO">${rc} = 0</msg>
<msg timestamp="20230914 01:22:33.795" level="INFO">${output} = {"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20230914 01:22:33.776" endtime="20230914 01:22:33.795"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 01:22:33.796" level="INFO">{"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20230914 01:22:33.796" endtime="20230914 01:22:33.797"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230914 01:22:33.797" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230914 01:22:33.797" endtime="20230914 01:22:33.797"/>
</kw>
<status status="PASS" starttime="20230914 01:22:33.776" endtime="20230914 01:22:33.798"/>
</kw>
<msg timestamp="20230914 01:22:33.798" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230914 01:22:33.775" endtime="20230914 01:22:33.798"/>
</kw>
<msg timestamp="20230914 01:22:33.798" level="INFO">${result} = {"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20230914 01:22:33.775" endtime="20230914 01:22:33.798"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20230914 01:22:33.799" level="FAIL">'{"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}' does not contain '"status":"OK"'</msg>
<status status="FAIL" starttime="20230914 01:22:33.798" endtime="20230914 01:22:33.799"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230914 01:22:33.799" endtime="20230914 01:22:33.799"/>
</kw>
<status status="FAIL" starttime="20230914 01:22:33.774" endtime="20230914 01:22:33.799"/>
</kw>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230914 01:22:43.806" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-elaho 2&gt;&amp;1'.</msg>
<msg timestamp="20230914 01:22:43.832" level="INFO">${rc} = 0</msg>
<msg timestamp="20230914 01:22:43.832" level="INFO">${output} = {"path":"","type":"VOLUME","countStats":{"numVolume":-1,"numBucket":1,"numDir":2,"numKey":2},"objectInfo":{"metadata":{},"name":"vol-elaho","quotaInBytes":-1,"quotaInNamespace":-1,"usedNamespace":1,"c...</msg>
<status status="PASS" starttime="20230914 01:22:43.803" endtime="20230914 01:22:43.833"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 01:22:43.834" level="INFO">{"path":"","type":"VOLUME","countStats":{"numVolume":-1,"numBucket":1,"numDir":2,"numKey":2},"objectInfo":{"metadata":{},"name":"vol-elaho","quotaInBytes":-1,"quotaInNamespace":-1,"usedNamespace":1,"creationTime":1694654505367,"modificationTime":1694654505367,"acls":[{"type":"USER","name":"hadoop","aclScope":"ACCESS","aclList":["ALL"]},{"type":"GROUP","name":"hadoop","aclScope":"ACCESS","aclList":["ALL"]}],"admin":"hadoop","owner":"hadoop","volume":"vol-elaho"},"status":"OK"}</msg>
<status status="PASS" starttime="20230914 01:22:43.833" endtime="20230914 01:22:43.834"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230914 01:22:43.835" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230914 01:22:43.834" endtime="20230914 01:22:43.835"/>
</kw>
<status status="PASS" starttime="20230914 01:22:43.802" endtime="20230914 01:22:43.835"/>
</kw>
<msg timestamp="20230914 01:22:43.835" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230914 01:22:43.802" endtime="20230914 01:22:43.835"/>
</kw>
<msg timestamp="20230914 01:22:43.836" level="INFO">${result} = {"path":"","type":"VOLUME","countStats":{"numVolume":-1,"numBucket":1,"numDir":2,"numKey":2},"objectInfo":{"metadata":{},"name":"vol-elaho","quotaInBytes":-1,"quotaInNamespace":-1,"usedNamespace":1,"c...</msg>
<status status="PASS" starttime="20230914 01:22:43.801" endtime="20230914 01:22:43.836"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230914 01:22:43.836" endtime="20230914 01:22:43.836"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230914 01:22:43.836" endtime="20230914 01:22:43.837"/>
</kw>
<status status="PASS" starttime="20230914 01:22:43.800" endtime="20230914 01:22:43.837"/>
</kw>
<status status="PASS" starttime="20230914 01:22:03.696" endtime="20230914 01:22:43.837"/>
</kw>
<status status="PASS" starttime="20230914 01:22:03.696" endtime="20230914 01:22:43.837"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230914 01:22:03.695" endtime="20230914 01:22:43.837"/>
</test>
<test id="s1-s3-s2-t10" name="Check Recon Namespace Summary Bucket" line="128">
<kw name="Wait For Summary">
<arg>${SUMMARY_URL}?path=/${VOLUME}/${BUCKET}</arg>
<arg>BUCKET</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230914 01:22:43.845" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-elaho/buc-wtocr 2&gt;&amp;1'.</msg>
<msg timestamp="20230914 01:22:43.871" level="INFO">${rc} = 0</msg>
<msg timestamp="20230914 01:22:43.871" level="INFO">${output} = {"path":"","type":"BUCKET","countStats":{"numVolume":-1,"numBucket":-1,"numDir":2,"numKey":2},"objectInfo":{"versioningEnabled":false,"metadata":{},"name":"buc-wtocr","quotaInBytes":-1,"quotaInNamespa...</msg>
<status status="PASS" starttime="20230914 01:22:43.843" endtime="20230914 01:22:43.871"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 01:22:43.872" level="INFO">{"path":"","type":"BUCKET","countStats":{"numVolume":-1,"numBucket":-1,"numDir":2,"numKey":2},"objectInfo":{"versioningEnabled":false,"metadata":{},"name":"buc-wtocr","quotaInBytes":-1,"quotaInNamespace":-1,"usedNamespace":4,"creationTime":1694654509459,"modificationTime":1694654509459,"acls":[{"type":"USER","name":"hadoop","aclScope":"ACCESS","aclList":["ALL"]},{"type":"GROUP","name":"hadoop","aclScope":"ACCESS","aclList":["ALL"]}],"volumeName":"vol-elaho","storageType":"DISK","versioning":false,"usedBytes":null,"encryptionInfo":null,"replicationConfigInfo":null,"sourceVolume":null,"sourceBucket":null,"bucketLayout":"FILE_SYSTEM_OPTIMIZED","owner":"hadoop"},"status":"OK"}</msg>
<status status="PASS" starttime="20230914 01:22:43.872" endtime="20230914 01:22:43.872"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230914 01:22:43.873" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230914 01:22:43.873" endtime="20230914 01:22:43.873"/>
</kw>
<status status="PASS" starttime="20230914 01:22:43.842" endtime="20230914 01:22:43.873"/>
</kw>
<msg timestamp="20230914 01:22:43.874" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230914 01:22:43.842" endtime="20230914 01:22:43.874"/>
</kw>
<msg timestamp="20230914 01:22:43.874" level="INFO">${result} = {"path":"","type":"BUCKET","countStats":{"numVolume":-1,"numBucket":-1,"numDir":2,"numKey":2},"objectInfo":{"versioningEnabled":false,"metadata":{},"name":"buc-wtocr","quotaInBytes":-1,"quotaInNamespa...</msg>
<status status="PASS" starttime="20230914 01:22:43.841" endtime="20230914 01:22:43.874"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230914 01:22:43.874" endtime="20230914 01:22:43.874"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230914 01:22:43.875" endtime="20230914 01:22:43.875"/>
</kw>
<status status="PASS" starttime="20230914 01:22:43.841" endtime="20230914 01:22:43.875"/>
</kw>
<status status="PASS" starttime="20230914 01:22:43.840" endtime="20230914 01:22:43.875"/>
</kw>
<status status="PASS" starttime="20230914 01:22:43.840" endtime="20230914 01:22:43.875"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230914 01:22:43.839" endtime="20230914 01:22:43.875"/>
</test>
<test id="s1-s3-s2-t11" name="Check Recon Namespace Summary Key" line="131">
<kw name="Wait For Summary">
<arg>${SUMMARY_URL}?path=/${VOLUME}/${BUCKET}/file1</arg>
<arg>KEY</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230914 01:22:43.885" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-elaho/buc-wtocr/file1 2&gt;&amp;1'.</msg>
<msg timestamp="20230914 01:22:43.934" level="INFO">${rc} = 0</msg>
<msg timestamp="20230914 01:22:43.934" level="INFO">${output} = {"path":"","type":"KEY","countStats":{"numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0},"objectInfo":{"fileName":"file1","file":true,"metadata":{},"name":"file1","quotaInBytes":0,"quotaInNamespace...</msg>
<status status="PASS" starttime="20230914 01:22:43.881" endtime="20230914 01:22:43.935"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 01:22:43.936" level="INFO">{"path":"","type":"KEY","countStats":{"numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0},"objectInfo":{"fileName":"file1","file":true,"metadata":{},"name":"file1","quotaInBytes":0,"quotaInNamespace":0,"usedNamespace":0,"creationTime":1694654513825,"modificationTime":1694654515984,"acls":[{"type":"USER","name":"hadoop","aclScope":"ACCESS","aclList":["ALL"]},{"type":"GROUP","name":"hadoop","aclScope":"ACCESS","aclList":["ALL"]}],"volumeName":"vol-elaho","bucketName":"buc-wtocr","keyName":"file1","dataSize":4068,"keyLocationVersions":[{"version":0,"locationVersionMap":{"0":[{"blockID":{"containerBlockID":{"containerID":4,"localID":111677748019200012},"blockCommitSequenceId":11,"containerID":4,"localID":111677748019200012},"length":4068,"offset":0,"token":null,"createVersion":0,"pipeline":null,"partNumber":0,"containerID":4,"localID":111677748019200012,"blockCommitSequenceId":11}]},"locationList":[{"blockID":{"containerBlockID":{"containerID":4,"localID":111677748019200012},"blockCommitSequenceId":11,"containerID":4,"localID":111677748019200012},"length":4068,"offset":0,"token":null,"createVersion":0,"pipeline":null,"partNumber":0,"containerID":4,"localID":111677748019200012,"blockCommitSequenceId":11}],"blocksLatestVersionOnly":[{"blockID":{"containerBlockID":{"containerID":4,"localID":111677748019200012},"blockCommitSequenceId":11,"containerID":4,"localID":111677748019200012},"length":4068,"offset":0,"token":null,"createVersion":0,"pipeline":null,"partNumber":0,"containerID":4,"localID":111677748019200012,"blockCommitSequenceId":11}],"locationLists":[[{"blockID":{"containerBlockID":{"containerID":4,"localID":111677748019200012},"blockCommitSequenceId":11,"containerID":4,"localID":111677748019200012},"length":4068,"offset":0,"token":null,"createVersion":0,"pipeline":null,"partNumber":0,"containerID":4,"localID":111677748019200012,"blockCommitSequenceId":11}]],"locationListCount":1,"multipartKey":false}],"replicationConfig":{"replicationFactor":"THREE","requiredNodes":3,"replicationType":"RATIS"},"encInfo":null},"status":"OK"}</msg>
<status status="PASS" starttime="20230914 01:22:43.935" endtime="20230914 01:22:43.936"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230914 01:22:43.937" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230914 01:22:43.936" endtime="20230914 01:22:43.937"/>
</kw>
<status status="PASS" starttime="20230914 01:22:43.880" endtime="20230914 01:22:43.937"/>
</kw>
<msg timestamp="20230914 01:22:43.937" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230914 01:22:43.880" endtime="20230914 01:22:43.937"/>
</kw>
<msg timestamp="20230914 01:22:43.938" level="INFO">${result} = {"path":"","type":"KEY","countStats":{"numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0},"objectInfo":{"fileName":"file1","file":true,"metadata":{},"name":"file1","quotaInBytes":0,"quotaInNamespace...</msg>
<status status="PASS" starttime="20230914 01:22:43.880" endtime="20230914 01:22:43.938"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230914 01:22:43.938" endtime="20230914 01:22:43.938"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230914 01:22:43.938" endtime="20230914 01:22:43.939"/>
</kw>
<status status="PASS" starttime="20230914 01:22:43.879" endtime="20230914 01:22:43.939"/>
</kw>
<status status="PASS" starttime="20230914 01:22:43.878" endtime="20230914 01:22:43.939"/>
</kw>
<status status="PASS" starttime="20230914 01:22:43.878" endtime="20230914 01:22:43.939"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230914 01:22:43.877" endtime="20230914 01:22:43.939"/>
</test>
<test id="s1-s3-s2-t12" name="Check Recon Namespace Summary Directory" line="134">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET_LAYOUT}' == 'LEGACY'</arg>
<arg>Wait For Summary</arg>
<arg>${SUMMARY_URL}?path=/${VOLUME}/${BUCKET}/dir1/dir2/</arg>
<arg>DIRECTORY</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230914 01:22:43.941" endtime="20230914 01:22:43.942"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET_LAYOUT}' == 'FILE_SYSTEM_OPTIMIZED'</arg>
<arg>Wait For Summary</arg>
<arg>${SUMMARY_URL}?path=/${VOLUME}/${BUCKET}/dir1/dir2</arg>
<arg>DIRECTORY</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Wait For Summary">
<arg>${SUMMARY_URL}?path=/${VOLUME}/${BUCKET}/dir1/dir2</arg>
<arg>DIRECTORY</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230914 01:22:43.949" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-elaho/buc-wtocr/dir1/dir2 2&gt;&amp;1'.</msg>
<msg timestamp="20230914 01:22:43.969" level="INFO">${rc} = 0</msg>
<msg timestamp="20230914 01:22:43.969" level="INFO">${output} = {"path":"","type":"DIRECTORY","countStats":{"numVolume":-1,"numBucket":-1,"numDir":0,"numKey":1},"objectInfo":{"metadata":{},"name":"dir2","quotaInBytes":0,"quotaInNamespace":0,"usedNamespace":0,"crea...</msg>
<status status="PASS" starttime="20230914 01:22:43.945" endtime="20230914 01:22:43.969"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 01:22:43.971" level="INFO">{"path":"","type":"DIRECTORY","countStats":{"numVolume":-1,"numBucket":-1,"numDir":0,"numKey":1},"objectInfo":{"metadata":{},"name":"dir2","quotaInBytes":0,"quotaInNamespace":0,"usedNamespace":0,"creationTime":1694654520602,"modificationTime":1694654520602,"acls":[{"type":"USER","name":"hadoop","aclScope":"ACCESS","aclList":["ALL"]},{"type":"GROUP","name":"hadoop","aclScope":"ACCESS","aclList":["ALL"]}]},"status":"OK"}</msg>
<status status="PASS" starttime="20230914 01:22:43.970" endtime="20230914 01:22:43.971"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230914 01:22:43.971" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230914 01:22:43.971" endtime="20230914 01:22:43.971"/>
</kw>
<status status="PASS" starttime="20230914 01:22:43.945" endtime="20230914 01:22:43.972"/>
</kw>
<msg timestamp="20230914 01:22:43.972" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230914 01:22:43.945" endtime="20230914 01:22:43.972"/>
</kw>
<msg timestamp="20230914 01:22:43.972" level="INFO">${result} = {"path":"","type":"DIRECTORY","countStats":{"numVolume":-1,"numBucket":-1,"numDir":0,"numKey":1},"objectInfo":{"metadata":{},"name":"dir2","quotaInBytes":0,"quotaInNamespace":0,"usedNamespace":0,"crea...</msg>
<status status="PASS" starttime="20230914 01:22:43.944" endtime="20230914 01:22:43.972"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230914 01:22:43.972" endtime="20230914 01:22:43.973"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230914 01:22:43.973" endtime="20230914 01:22:43.976"/>
</kw>
<status status="PASS" starttime="20230914 01:22:43.944" endtime="20230914 01:22:43.976"/>
</kw>
<status status="PASS" starttime="20230914 01:22:43.943" endtime="20230914 01:22:43.976"/>
</kw>
<status status="PASS" starttime="20230914 01:22:43.942" endtime="20230914 01:22:43.976"/>
</kw>
<status status="PASS" starttime="20230914 01:22:43.942" endtime="20230914 01:22:43.977"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230914 01:22:43.940" endtime="20230914 01:22:43.977"/>
</test>
<test id="s1-s3-s2-t13" name="Check Recon Namespace Disk Usage" line="138">
<kw name="Wait For Summary">
<arg>${DISK_USAGE_URL}?path=/${VOLUME}/${BUCKET}&amp;files=true&amp;replica=true</arg>
<arg>\"sizeWithReplica\"</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230914 01:22:43.985" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/du?path=/vol-elaho/buc-wtocr&amp;files=true&amp;replica=true 2&gt;&amp;1'.</msg>
<msg timestamp="20230914 01:22:44.000" level="INFO">${rc} = 0</msg>
<msg timestamp="20230914 01:22:44.001" level="INFO">${output} = {"status":"OK","path":"/vol-elaho/buc-wtocr","size":10106,"sizeWithReplica":-1,"subPathCount":1,"subPaths":[{"key":false,"path":"/vol-elaho/buc-wtocr/dir1","size":6038,"sizeWithReplica":-1,"isKey":fal...</msg>
<status status="PASS" starttime="20230914 01:22:43.982" endtime="20230914 01:22:44.001"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 01:22:44.002" level="INFO">{"status":"OK","path":"/vol-elaho/buc-wtocr","size":10106,"sizeWithReplica":-1,"subPathCount":1,"subPaths":[{"key":false,"path":"/vol-elaho/buc-wtocr/dir1","size":6038,"sizeWithReplica":-1,"isKey":false}],"sizeDirectKey":4068}</msg>
<status status="PASS" starttime="20230914 01:22:44.001" endtime="20230914 01:22:44.002"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230914 01:22:44.002" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230914 01:22:44.002" endtime="20230914 01:22:44.003"/>
</kw>
<status status="PASS" starttime="20230914 01:22:43.982" endtime="20230914 01:22:44.003"/>
</kw>
<msg timestamp="20230914 01:22:44.003" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230914 01:22:43.981" endtime="20230914 01:22:44.003"/>
</kw>
<msg timestamp="20230914 01:22:44.003" level="INFO">${result} = {"status":"OK","path":"/vol-elaho/buc-wtocr","size":10106,"sizeWithReplica":-1,"subPathCount":1,"subPaths":[{"key":false,"path":"/vol-elaho/buc-wtocr/dir1","size":6038,"sizeWithReplica":-1,"isKey":fal...</msg>
<status status="PASS" starttime="20230914 01:22:43.981" endtime="20230914 01:22:44.003"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230914 01:22:44.003" endtime="20230914 01:22:44.004"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230914 01:22:44.004" endtime="20230914 01:22:44.004"/>
</kw>
<status status="PASS" starttime="20230914 01:22:43.980" endtime="20230914 01:22:44.004"/>
</kw>
<status status="PASS" starttime="20230914 01:22:43.980" endtime="20230914 01:22:44.004"/>
</kw>
<status status="PASS" starttime="20230914 01:22:43.979" endtime="20230914 01:22:44.005"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230914 01:22:43.978" endtime="20230914 01:22:44.005"/>
</test>
<test id="s1-s3-s2-t14" name="Check Recon Namespace Volume Quota Usage" line="141">
<kw name="Wait For Summary">
<arg>${QUOTA_USAGE_URL}?path=/${VOLUME}</arg>
<arg>\"used\"</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230914 01:22:44.013" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/quota?path=/vol-elaho 2&gt;&amp;1'.</msg>
<msg timestamp="20230914 01:22:44.032" level="INFO">${rc} = 0</msg>
<msg timestamp="20230914 01:22:44.033" level="INFO">${output} = {"allowed":-1,"used":10106,"status":"OK"}</msg>
<status status="PASS" starttime="20230914 01:22:44.011" endtime="20230914 01:22:44.033"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 01:22:44.034" level="INFO">{"allowed":-1,"used":10106,"status":"OK"}</msg>
<status status="PASS" starttime="20230914 01:22:44.033" endtime="20230914 01:22:44.034"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230914 01:22:44.034" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230914 01:22:44.034" endtime="20230914 01:22:44.035"/>
</kw>
<status status="PASS" starttime="20230914 01:22:44.010" endtime="20230914 01:22:44.035"/>
</kw>
<msg timestamp="20230914 01:22:44.035" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230914 01:22:44.010" endtime="20230914 01:22:44.035"/>
</kw>
<msg timestamp="20230914 01:22:44.035" level="INFO">${result} = {"allowed":-1,"used":10106,"status":"OK"}</msg>
<status status="PASS" starttime="20230914 01:22:44.009" endtime="20230914 01:22:44.035"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230914 01:22:44.035" endtime="20230914 01:22:44.036"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230914 01:22:44.036" endtime="20230914 01:22:44.036"/>
</kw>
<status status="PASS" starttime="20230914 01:22:44.009" endtime="20230914 01:22:44.036"/>
</kw>
<status status="PASS" starttime="20230914 01:22:44.008" endtime="20230914 01:22:44.036"/>
</kw>
<status status="PASS" starttime="20230914 01:22:44.007" endtime="20230914 01:22:44.036"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230914 01:22:44.006" endtime="20230914 01:22:44.037"/>
</test>
<test id="s1-s3-s2-t15" name="Check Recon Namespace Bucket Quota Usage" line="144">
<kw name="Wait For Summary">
<arg>${QUOTA_USAGE_URL}?path=/${VOLUME}/${BUCKET}</arg>
<arg>\"used\"</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230914 01:22:44.044" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/quota?path=/vol-elaho/buc-wtocr 2&gt;&amp;1'.</msg>
<msg timestamp="20230914 01:22:44.059" level="INFO">${rc} = 0</msg>
<msg timestamp="20230914 01:22:44.059" level="INFO">${output} = {"allowed":-1,"used":10106,"status":"OK"}</msg>
<status status="PASS" starttime="20230914 01:22:44.042" endtime="20230914 01:22:44.060"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 01:22:44.061" level="INFO">{"allowed":-1,"used":10106,"status":"OK"}</msg>
<status status="PASS" starttime="20230914 01:22:44.060" endtime="20230914 01:22:44.061"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230914 01:22:44.062" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230914 01:22:44.061" endtime="20230914 01:22:44.062"/>
</kw>
<status status="PASS" starttime="20230914 01:22:44.041" endtime="20230914 01:22:44.062"/>
</kw>
<msg timestamp="20230914 01:22:44.062" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230914 01:22:44.041" endtime="20230914 01:22:44.062"/>
</kw>
<msg timestamp="20230914 01:22:44.063" level="INFO">${result} = {"allowed":-1,"used":10106,"status":"OK"}</msg>
<status status="PASS" starttime="20230914 01:22:44.041" endtime="20230914 01:22:44.063"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230914 01:22:44.063" endtime="20230914 01:22:44.063"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230914 01:22:44.063" endtime="20230914 01:22:44.064"/>
</kw>
<status status="PASS" starttime="20230914 01:22:44.040" endtime="20230914 01:22:44.064"/>
</kw>
<status status="PASS" starttime="20230914 01:22:44.039" endtime="20230914 01:22:44.064"/>
</kw>
<status status="PASS" starttime="20230914 01:22:44.039" endtime="20230914 01:22:44.064"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230914 01:22:44.038" endtime="20230914 01:22:44.064"/>
</test>
<test id="s1-s3-s2-t16" name="Check Recon Namespace File Size Distribution Root" line="147">
<kw name="Wait For Summary">
<arg>${FILE_SIZE_DIST_URL}?path=/</arg>
<arg>\"dist\"</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230914 01:22:44.071" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/dist?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230914 01:22:44.085" level="INFO">${rc} = 0</msg>
<msg timestamp="20230914 01:22:44.085" level="INFO">${output} = {"dist":[0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"status":"OK"}</msg>
<status status="PASS" starttime="20230914 01:22:44.069" endtime="20230914 01:22:44.085"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 01:22:44.086" level="INFO">{"dist":[0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"status":"OK"}</msg>
<status status="PASS" starttime="20230914 01:22:44.086" endtime="20230914 01:22:44.087"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230914 01:22:44.087" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230914 01:22:44.087" endtime="20230914 01:22:44.087"/>
</kw>
<status status="PASS" starttime="20230914 01:22:44.068" endtime="20230914 01:22:44.088"/>
</kw>
<msg timestamp="20230914 01:22:44.088" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230914 01:22:44.068" endtime="20230914 01:22:44.088"/>
</kw>
<msg timestamp="20230914 01:22:44.088" level="INFO">${result} = {"dist":[0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"status":"OK"}</msg>
<status status="PASS" starttime="20230914 01:22:44.067" endtime="20230914 01:22:44.088"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230914 01:22:44.088" endtime="20230914 01:22:44.089"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230914 01:22:44.089" endtime="20230914 01:22:44.089"/>
</kw>
<status status="PASS" starttime="20230914 01:22:44.067" endtime="20230914 01:22:44.089"/>
</kw>
<status status="PASS" starttime="20230914 01:22:44.066" endtime="20230914 01:22:44.089"/>
</kw>
<status status="PASS" starttime="20230914 01:22:44.066" endtime="20230914 01:22:44.090"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230914 01:22:44.065" endtime="20230914 01:22:44.090"/>
</test>
<doc>Smoke test for Recon Namespace Summary Endpoint for FILE_SYSTEM_OPTIMIZED buckets.</doc>
<status status="PASS" starttime="20230914 01:21:40.731" endtime="20230914 01:22:44.091"/>
</suite>
<status status="PASS" starttime="20230914 01:21:08.876" endtime="20230914 01:22:44.094"/>
</suite>
<suite id="s1-s4" name="Loaddata" source="/opt/hadoop/smoketest/topology/loaddata.robot">
<test id="s1-s4-t1" name="Create a volume, bucket and key" line="27">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create topvol1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230914 01:22:47.088" level="INFO">Running command 'ozone sh volume create topvol1 2&gt;&amp;1'.</msg>
<msg timestamp="20230914 01:22:51.415" level="INFO">${rc} = 0</msg>
<msg timestamp="20230914 01:22:51.415" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230914 01:22:47.086" endtime="20230914 01:22:51.415"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 01:22:51.416" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230914 01:22:51.416" endtime="20230914 01:22:51.417"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230914 01:22:51.417" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230914 01:22:51.417" endtime="20230914 01:22:51.417"/>
</kw>
<status status="PASS" starttime="20230914 01:22:47.085" endtime="20230914 01:22:51.418"/>
</kw>
<msg timestamp="20230914 01:22:51.418" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230914 01:22:47.085" endtime="20230914 01:22:51.418"/>
</kw>
<msg timestamp="20230914 01:22:51.418" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230914 01:22:47.084" endtime="20230914 01:22:51.418"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230914 01:22:51.418" endtime="20230914 01:22:51.419"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /topvol1/bucket1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230914 01:22:51.423" level="INFO">Running command 'ozone sh bucket create /topvol1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20230914 01:22:55.628" level="INFO">${rc} = 0</msg>
<msg timestamp="20230914 01:22:55.628" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230914 01:22:51.420" endtime="20230914 01:22:55.628"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 01:22:55.630" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230914 01:22:55.629" endtime="20230914 01:22:55.630"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230914 01:22:55.631" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230914 01:22:55.630" endtime="20230914 01:22:55.631"/>
</kw>
<status status="PASS" starttime="20230914 01:22:51.420" endtime="20230914 01:22:55.631"/>
</kw>
<msg timestamp="20230914 01:22:55.631" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230914 01:22:51.419" endtime="20230914 01:22:55.631"/>
</kw>
<msg timestamp="20230914 01:22:55.632" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230914 01:22:51.419" endtime="20230914 01:22:55.632"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230914 01:22:55.632" endtime="20230914 01:22:55.632"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /topvol1/bucket1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230914 01:22:55.637" level="INFO">Running command 'ozone sh key put /topvol1/bucket1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230914 01:23:02.561" level="INFO">${rc} = 0</msg>
<msg timestamp="20230914 01:23:02.561" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230914 01:22:55.634" endtime="20230914 01:23:02.561"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 01:23:02.562" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230914 01:23:02.561" endtime="20230914 01:23:02.562"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230914 01:23:02.563" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230914 01:23:02.563" endtime="20230914 01:23:02.563"/>
</kw>
<status status="PASS" starttime="20230914 01:22:55.633" endtime="20230914 01:23:02.563"/>
</kw>
<msg timestamp="20230914 01:23:02.563" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230914 01:22:55.633" endtime="20230914 01:23:02.563"/>
</kw>
<msg timestamp="20230914 01:23:02.564" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230914 01:22:55.632" endtime="20230914 01:23:02.564"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230914 01:23:02.564" endtime="20230914 01:23:02.564"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230914 01:22:47.083" endtime="20230914 01:23:02.564"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20230914 01:22:47.033" endtime="20230914 01:23:02.566"/>
</suite>
<suite id="s1-s5" name="readdata-first-half" source="/opt/hadoop/smoketest/topology/readdata.robot">
<test id="s1-s5-t1" name="Read data from previously created key" line="27">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230914 01:23:10.636" level="INFO">${random} = 02922</msg>
<status status="PASS" starttime="20230914 01:23:10.636" endtime="20230914 01:23:10.636"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /topvol1/bucket1/key1 /tmp/key1-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230914 01:23:10.641" level="INFO">Running command 'ozone sh key get /topvol1/bucket1/key1 /tmp/key1-02922 2&gt;&amp;1'.</msg>
<msg timestamp="20230914 01:23:50.029" level="INFO">${rc} = 0</msg>
<msg timestamp="20230914 01:23:50.029" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230914 01:23:10.638" endtime="20230914 01:23:50.029"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 01:23:50.030" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230914 01:23:50.029" endtime="20230914 01:23:50.030"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230914 01:23:50.031" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230914 01:23:50.030" endtime="20230914 01:23:50.031"/>
</kw>
<status status="PASS" starttime="20230914 01:23:10.638" endtime="20230914 01:23:50.031"/>
</kw>
<msg timestamp="20230914 01:23:50.031" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230914 01:23:10.637" endtime="20230914 01:23:50.031"/>
</kw>
<msg timestamp="20230914 01:23:50.032" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230914 01:23:10.637" endtime="20230914 01:23:50.032"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230914 01:23:50.032" endtime="20230914 01:23:50.032"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230914 01:23:10.635" endtime="20230914 01:23:50.032"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20230914 01:23:10.586" endtime="20230914 01:23:50.034"/>
</suite>
<suite id="s1-s6" name="readdata-second-half" source="/opt/hadoop/smoketest/topology/readdata.robot">
<test id="s1-s6-t1" name="Read data from previously created key" line="27">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230914 01:24:34.484" level="INFO">${random} = 35751</msg>
<status status="PASS" starttime="20230914 01:24:34.483" endtime="20230914 01:24:34.484"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /topvol1/bucket1/key1 /tmp/key1-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230914 01:24:34.488" level="INFO">Running command 'ozone sh key get /topvol1/bucket1/key1 /tmp/key1-35751 2&gt;&amp;1'.</msg>
<msg timestamp="20230914 01:24:41.687" level="INFO">${rc} = 0</msg>
<msg timestamp="20230914 01:24:41.687" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230914 01:24:34.485" endtime="20230914 01:24:41.687"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 01:24:41.688" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230914 01:24:41.688" endtime="20230914 01:24:41.688"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230914 01:24:41.689" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230914 01:24:41.689" endtime="20230914 01:24:41.689"/>
</kw>
<status status="PASS" starttime="20230914 01:24:34.485" endtime="20230914 01:24:41.689"/>
</kw>
<msg timestamp="20230914 01:24:41.689" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230914 01:24:34.484" endtime="20230914 01:24:41.690"/>
</kw>
<msg timestamp="20230914 01:24:41.690" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230914 01:24:34.484" endtime="20230914 01:24:41.690"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230914 01:24:41.690" endtime="20230914 01:24:41.691"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230914 01:24:34.482" endtime="20230914 01:24:41.691"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20230914 01:24:34.434" endtime="20230914 01:24:41.693"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="200473"/>
</suite>
<statistics>
<total>
<stat pass="32" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="32" fail="0" skip="0" id="s1" name="ozone-topology">ozone-topology</stat>
<stat pass="2" fail="0" skip="0" id="s1-s1" name="Basic">ozone-topology.Basic</stat>
<stat pass="4" fail="0" skip="0" id="s1-s2" name="Cli">ozone-topology.Cli</stat>
<stat pass="23" fail="0" skip="0" id="s1-s3" name="Recon">ozone-topology.Recon</stat>
<stat pass="7" fail="0" skip="0" id="s1-s3-s1" name="Recon-Api">ozone-topology.Recon.Recon-Api</stat>
<stat pass="16" fail="0" skip="0" id="s1-s3-s2" name="Recon-Nssummary">ozone-topology.Recon.Recon-Nssummary</stat>
<stat pass="1" fail="0" skip="0" id="s1-s4" name="Loaddata">ozone-topology.Loaddata</stat>
<stat pass="1" fail="0" skip="0" id="s1-s5" name="readdata-first-half">ozone-topology.readdata-first-half</stat>
<stat pass="1" fail="0" skip="0" id="s1-s6" name="readdata-second-half">ozone-topology.readdata-second-half</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
