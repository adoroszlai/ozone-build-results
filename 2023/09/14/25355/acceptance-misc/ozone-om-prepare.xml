<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 6.1.1 (Python 3.8.10 on linux)" generated="20230914 01:18:11.978" rpa="false" schemaversion="4">
<suite id="s1" name="ozone-om-prepare">
<suite id="s1-s1" name="Om-Prepare" source="/opt/hadoop/smoketest/omha/om-prepare.robot">
<kw name="Create Specific OM data for prepare" type="SETUP">
<kw name="Freon OCKG" library="freon">
<arg>prefix=om-prepare</arg>
<arg>n=100</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230914 01:12:27.117" level="INFO">Running command 'ozone freon ockg --om-service-id=omservice -t 1 -n100 -p om-prepare  2&gt;&amp;1'.</msg>
<msg timestamp="20230914 01:12:43.828" level="INFO">${rc} = 0</msg>
<msg timestamp="20230914 01:12:43.828" level="INFO">${output} = 2023-09-14 01:12:29,072 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-14 01:12:29,250 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230914 01:12:27.114" endtime="20230914 01:12:43.828"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 01:12:43.829" level="INFO">2023-09-14 01:12:29,072 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-14 01:12:29,250 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-09-14 01:12:29,250 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-09-14 01:12:29,348 [main] INFO freon.BaseFreonGenerator: Executing test with prefix om-prepare and number-of-tests 100
2023-09-14 01:12:29,398 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2023-09-14 01:12:30,120 [main] INFO rpc.RpcClient: Creating Volume: vol1, with hadoop as owner and space quota set to -1 bytes, counts quota set to -1
2023-09-14 01:12:30,299 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Encryption set to false, Replication Type set to server-side default replication type, Namespace Quota set to -1, Space Quota set to -1 
2023-09-14 01:12:30,399 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2023-09-14 01:12:31,386 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2023-09-14 01:12:31,399 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2023-09-14 01:12:31,760 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2023-09-14 01:12:32,400 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2023-09-14 01:12:33,403 [Thread-3] INFO freon.ProgressBar: Progress: 1.00 % (1 out of 100)
2023-09-14 01:12:34,404 [Thread-3] INFO freon.ProgressBar: Progress: 4.00 % (4 out of 100)
2023-09-14 01:12:35,404 [Thread-3] INFO freon.ProgressBar: Progress: 12.00 % (12 out of 100)
2023-09-14 01:12:36,405 [Thread-3] INFO freon.ProgressBar: Progress: 19.00 % (19 out of 100)
2023-09-14 01:12:37,405 [Thread-3] INFO freon.ProgressBar: Progress: 30.00 % (30 out of 100)
2023-09-14 01:12:38,406 [Thread-3] INFO freon.ProgressBar: Progress: 40.00 % (40 out of 100)
2023-09-14 01:12:39,411 [Thread-3] INFO freon.ProgressBar: Progress: 50.00 % (50 out of 100)
2023-09-14 01:12:40,412 [Thread-3] INFO freon.ProgressBar: Progress: 62.00 % (62 out of 100)
2023-09-14 01:12:41,412 [Thread-3] INFO freon.ProgressBar: Progress: 76.00 % (76 out of 100)
2023-09-14 01:12:42,417 [Thread-3] INFO freon.ProgressBar: Progress: 90.00 % (90 out of 100)
2023-09-14 01:12:43,417 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (100 out of 100)
2023-09-14 01:12:43,470 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=100, min=53.005015, max=2688.359206, mean=124.2217130079571, stddev=255.43106170746267, median=86.102235, p75=106.911937, p95=155.399008, p98=504.720596, p99=557.945213, p999=2688.359206, mean_rate=7.636266559422531, m1=2.8236535658912785, m5=2.3289226601913833, m15=2.2432131855618054, rate_unit=events/second, duration_unit=milliseconds
2023-09-14 01:12:43,470 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 14
2023-09-14 01:12:43,470 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-09-14 01:12:43,470 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 100</msg>
<status status="PASS" starttime="20230914 01:12:43.828" endtime="20230914 01:12:43.829"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230914 01:12:43.829" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230914 01:12:43.829" endtime="20230914 01:12:43.830"/>
</kw>
<status status="PASS" starttime="20230914 01:12:27.114" endtime="20230914 01:12:43.830"/>
</kw>
<msg timestamp="20230914 01:12:43.830" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230914 01:12:27.114" endtime="20230914 01:12:43.830"/>
</kw>
<msg timestamp="20230914 01:12:43.830" level="INFO">${result} = 2023-09-14 01:12:29,072 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-14 01:12:29,250 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230914 01:12:27.113" endtime="20230914 01:12:43.830"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230914 01:12:43.830" endtime="20230914 01:12:43.831"/>
</kw>
<status status="PASS" starttime="20230914 01:12:27.111" endtime="20230914 01:12:43.831"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230914 01:12:43.831" level="INFO">${random} = 81602</msg>
<status status="PASS" starttime="20230914 01:12:43.831" endtime="20230914 01:12:43.831"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${volume_name}</arg>
<arg>${random}-volume-for-prepare</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230914 01:12:43.833" level="INFO">${volume_name} = 81602-volume-for-prepare</msg>
<status status="PASS" starttime="20230914 01:12:43.832" endtime="20230914 01:12:43.833"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${bucket_name}</arg>
<arg>${random}-bucket-for-prepare</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230914 01:12:43.834" level="INFO">${bucket_name} = 81602-bucket-for-prepare</msg>
<status status="PASS" starttime="20230914 01:12:43.833" endtime="20230914 01:12:43.834"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create /${volume_name}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230914 01:12:43.838" level="INFO">Running command 'ozone sh volume create /81602-volume-for-prepare 2&gt;&amp;1'.</msg>
<msg timestamp="20230914 01:12:46.648" level="INFO">${rc} = 0</msg>
<msg timestamp="20230914 01:12:46.648" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230914 01:12:43.836" endtime="20230914 01:12:46.648"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 01:12:46.649" level="INFO"/>
<status status="PASS" starttime="20230914 01:12:46.649" endtime="20230914 01:12:46.649"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230914 01:12:46.650" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230914 01:12:46.649" endtime="20230914 01:12:46.650"/>
</kw>
<status status="PASS" starttime="20230914 01:12:43.835" endtime="20230914 01:12:46.650"/>
</kw>
<msg timestamp="20230914 01:12:46.650" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230914 01:12:43.835" endtime="20230914 01:12:46.650"/>
</kw>
<status status="PASS" starttime="20230914 01:12:43.835" endtime="20230914 01:12:46.650"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create /${volume_name}/${bucket_name}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230914 01:12:46.654" level="INFO">Running command 'ozone sh bucket create /81602-volume-for-prepare/81602-bucket-for-prepare 2&gt;&amp;1'.</msg>
<msg timestamp="20230914 01:12:49.527" level="INFO">${rc} = 0</msg>
<msg timestamp="20230914 01:12:49.527" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230914 01:12:46.652" endtime="20230914 01:12:49.527"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 01:12:49.528" level="INFO"/>
<status status="PASS" starttime="20230914 01:12:49.528" endtime="20230914 01:12:49.528"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230914 01:12:49.529" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230914 01:12:49.528" endtime="20230914 01:12:49.529"/>
</kw>
<status status="PASS" starttime="20230914 01:12:46.651" endtime="20230914 01:12:49.529"/>
</kw>
<msg timestamp="20230914 01:12:49.529" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230914 01:12:46.651" endtime="20230914 01:12:49.529"/>
</kw>
<status status="PASS" starttime="20230914 01:12:46.651" endtime="20230914 01:12:49.529"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put /${volume_name}/${bucket_name}/prepare-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230914 01:12:49.534" level="INFO">Running command 'ozone sh key put /81602-volume-for-prepare/81602-bucket-for-prepare/prepare-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230914 01:12:54.487" level="INFO">${rc} = 0</msg>
<msg timestamp="20230914 01:12:54.487" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230914 01:12:49.531" endtime="20230914 01:12:54.487"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 01:12:54.488" level="INFO"/>
<status status="PASS" starttime="20230914 01:12:54.487" endtime="20230914 01:12:54.488"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230914 01:12:54.489" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230914 01:12:54.488" endtime="20230914 01:12:54.489"/>
</kw>
<status status="PASS" starttime="20230914 01:12:49.531" endtime="20230914 01:12:54.489"/>
</kw>
<msg timestamp="20230914 01:12:54.489" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230914 01:12:49.530" endtime="20230914 01:12:54.489"/>
</kw>
<status status="PASS" starttime="20230914 01:12:49.530" endtime="20230914 01:12:54.489"/>
</kw>
<status status="PASS" starttime="20230914 01:12:27.111" endtime="20230914 01:12:54.489"/>
</kw>
<test id="s1-s1-t1" name="Prepare Ozone Manager" line="39">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230914 01:12:54.491" endtime="20230914 01:12:54.491"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om prepare -id=omservice</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230914 01:12:54.496" level="INFO">Running command 'ozone admin om prepare -id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20230914 01:13:02.527" level="INFO">${rc} = 0</msg>
<msg timestamp="20230914 01:13:02.528" level="INFO">${output} = Ozone Manager Prepare Request successfully returned with Transaction Id : [413].

Checking individual OM instances for prepare request completion...
OM : [om1], Prepare Status : [PREPARE_COMPLETED], C...</msg>
<status status="PASS" starttime="20230914 01:12:54.493" endtime="20230914 01:13:02.528"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 01:13:02.529" level="INFO">Ozone Manager Prepare Request successfully returned with Transaction Id : [413].

Checking individual OM instances for prepare request completion...
OM : [om1], Prepare Status : [PREPARE_COMPLETED], Current Transaction Id : [413]
OM : [om3], Prepare Status : [PREPARE_COMPLETED], Current Transaction Id : [413]
OM : [om2], Prepare Status : [PREPARE_COMPLETED], Current Transaction Id : [413]

OM Preparation successful! 
All OMs are prepared
No new write requests will be allowed until preparation is cancelled or upgrade/downgrade is done.</msg>
<status status="PASS" starttime="20230914 01:13:02.528" endtime="20230914 01:13:02.529"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230914 01:13:02.530" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230914 01:13:02.529" endtime="20230914 01:13:02.530"/>
</kw>
<status status="PASS" starttime="20230914 01:12:54.492" endtime="20230914 01:13:02.530"/>
</kw>
<msg timestamp="20230914 01:13:02.530" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230914 01:12:54.492" endtime="20230914 01:13:02.530"/>
</kw>
<msg timestamp="20230914 01:13:02.531" level="INFO">${result} = Ozone Manager Prepare Request successfully returned with Transaction Id : [413].

Checking individual OM instances for prepare request completion...
OM : [om1], Prepare Status : [PREPARE_COMPLETED], C...</msg>
<status status="PASS" starttime="20230914 01:12:54.492" endtime="20230914 01:13:02.531"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>OM Preparation successful!</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>OM Preparation successful!</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230914 01:13:02.531" endtime="20230914 01:13:02.532"/>
</kw>
<status status="PASS" starttime="20230914 01:13:02.531" endtime="20230914 01:13:02.532"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230914 01:12:54.490" endtime="20230914 01:13:02.532"/>
</test>
<test id="s1-s1-t2" name="Checks if the expected data is present in OM" line="43">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230914 01:13:02.534" endtime="20230914 01:13:02.534"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info /${volume_name}/${bucket_name}/prepare-key</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230914 01:13:02.539" level="INFO">Running command 'ozone sh key info /81602-volume-for-prepare/81602-bucket-for-prepare/prepare-key 2&gt;&amp;1'.</msg>
<msg timestamp="20230914 01:13:06.070" level="INFO">${rc} = 0</msg>
<msg timestamp="20230914 01:13:06.070" level="INFO">${output} = {
  "volumeName" : "81602-volume-for-prepare",
  "bucketName" : "81602-bucket-for-prepare",
  "name" : "prepare-key",
  "dataSize" : 17289,
  "creationTime" : "2023-09-14T01:12:52.404Z",
  "modificati...</msg>
<status status="PASS" starttime="20230914 01:13:02.536" endtime="20230914 01:13:06.070"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 01:13:06.071" level="INFO">{
  "volumeName" : "81602-volume-for-prepare",
  "bucketName" : "81602-bucket-for-prepare",
  "name" : "prepare-key",
  "dataSize" : 17289,
  "creationTime" : "2023-09-14T01:12:52.404Z",
  "modificationTime" : "2023-09-14T01:12:54.094Z",
  "replicationConfig" : {
    "replicationFactor" : "ONE",
    "requiredNodes" : 1,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "ozoneKeyLocations" : [ {
    "containerID" : 1,
    "localID" : 111677748019200101,
    "length" : 17289,
    "offset" : 0,
    "keyOffset" : 0
  } ],
  "file" : true
}</msg>
<status status="PASS" starttime="20230914 01:13:06.070" endtime="20230914 01:13:06.071"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230914 01:13:06.072" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230914 01:13:06.072" endtime="20230914 01:13:06.072"/>
</kw>
<status status="PASS" starttime="20230914 01:13:02.535" endtime="20230914 01:13:06.072"/>
</kw>
<msg timestamp="20230914 01:13:06.072" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230914 01:13:02.535" endtime="20230914 01:13:06.073"/>
</kw>
<msg timestamp="20230914 01:13:06.073" level="INFO">${result} = {
  "volumeName" : "81602-volume-for-prepare",
  "bucketName" : "81602-bucket-for-prepare",
  "name" : "prepare-key",
  "dataSize" : 17289,
  "creationTime" : "2023-09-14T01:12:52.404Z",
  "modificati...</msg>
<status status="PASS" starttime="20230914 01:13:02.535" endtime="20230914 01:13:06.073"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"name\" : \"prepare-key\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230914 01:13:06.073" endtime="20230914 01:13:06.073"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230914 01:13:02.533" endtime="20230914 01:13:06.074"/>
</test>
<test id="s1-s1-t3" name="Test write operation fails" line="47">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230914 01:13:06.076" endtime="20230914 01:13:06.076"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh key put /${volume_name}/${bucket_name}/prepare-key2 /opt/hadoop/NOTICE.txt</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230914 01:13:06.080" level="INFO">Running command 'ozone sh key put /81602-volume-for-prepare/81602-bucket-for-prepare/prepare-key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230914 01:13:09.180" level="INFO">${rc} = 255</msg>
<msg timestamp="20230914 01:13:09.180" level="INFO">${output} = NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateKey when OM is in prepare mode.</msg>
<status status="PASS" starttime="20230914 01:13:06.077" endtime="20230914 01:13:09.180"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 01:13:09.181" level="INFO">NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateKey when OM is in prepare mode.</msg>
<status status="PASS" starttime="20230914 01:13:09.181" endtime="20230914 01:13:09.182"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230914 01:13:09.182" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230914 01:13:09.182" endtime="20230914 01:13:09.182"/>
</kw>
<msg timestamp="20230914 01:13:09.183" level="INFO">${result} = NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateKey when OM is in prepare mode.</msg>
<status status="PASS" starttime="20230914 01:13:06.076" endtime="20230914 01:13:09.183"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>OM is in prepare mode</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230914 01:13:09.183" endtime="20230914 01:13:09.183"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>ozone sh key info /${volume_name}/${bucket_name}/prepare-key2</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230914 01:13:09.187" level="INFO">Running command 'ozone sh key info /81602-volume-for-prepare/81602-bucket-for-prepare/prepare-key2 2&gt;&amp;1'.</msg>
<msg timestamp="20230914 01:13:12.324" level="INFO">${rc} = 255</msg>
<msg timestamp="20230914 01:13:12.324" level="INFO">${output} = KEY_NOT_FOUND Key:prepare-key2 not found</msg>
<status status="PASS" starttime="20230914 01:13:09.184" endtime="20230914 01:13:12.324"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 01:13:12.325" level="INFO">KEY_NOT_FOUND Key:prepare-key2 not found</msg>
<status status="PASS" starttime="20230914 01:13:12.324" endtime="20230914 01:13:12.326"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230914 01:13:12.326" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230914 01:13:12.326" endtime="20230914 01:13:12.326"/>
</kw>
<status status="PASS" starttime="20230914 01:13:09.183" endtime="20230914 01:13:12.327"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230914 01:13:06.075" endtime="20230914 01:13:12.327"/>
</test>
<doc>Smoke test to test preparing OMs in an OM HA cluster.</doc>
<status status="PASS" starttime="20230914 01:12:27.050" endtime="20230914 01:13:12.329"/>
</suite>
<suite id="s1-s2" name="Om-Cancel-Prepare" source="/opt/hadoop/smoketest/omha/om-cancel-prepare.robot">
<kw name="Generate volume and bucket names" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230914 01:13:14.939" level="INFO">${random} = 03630</msg>
<status status="PASS" starttime="20230914 01:13:14.939" endtime="20230914 01:13:14.939"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${volume_name}</arg>
<arg>${random}-volume-for-cancel</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230914 01:13:14.941" level="INFO">${volume_name} = 03630-volume-for-cancel</msg>
<status status="PASS" starttime="20230914 01:13:14.939" endtime="20230914 01:13:14.941"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${bucket_name}</arg>
<arg>${random}-bucket-for-cancel</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230914 01:13:14.942" level="INFO">${bucket_name} = 03630-bucket-for-cancel</msg>
<status status="PASS" starttime="20230914 01:13:14.941" endtime="20230914 01:13:14.942"/>
</kw>
<status status="PASS" starttime="20230914 01:13:14.938" endtime="20230914 01:13:14.942"/>
</kw>
<test id="s1-s2-t1" name="Cancel Ozone Manager Prepare" line="33">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230914 01:13:14.944" endtime="20230914 01:13:14.944"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om cancelprepare -id=omservice</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230914 01:13:14.948" level="INFO">Running command 'ozone admin om cancelprepare -id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20230914 01:13:17.947" level="INFO">${rc} = 0</msg>
<msg timestamp="20230914 01:13:17.947" level="INFO">${output} = Cancel prepare succeeded, cluster can now accept write requests.</msg>
<status status="PASS" starttime="20230914 01:13:14.945" endtime="20230914 01:13:17.947"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 01:13:17.948" level="INFO">Cancel prepare succeeded, cluster can now accept write requests.</msg>
<status status="PASS" starttime="20230914 01:13:17.948" endtime="20230914 01:13:17.949"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230914 01:13:17.949" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230914 01:13:17.949" endtime="20230914 01:13:17.949"/>
</kw>
<status status="PASS" starttime="20230914 01:13:14.945" endtime="20230914 01:13:17.949"/>
</kw>
<msg timestamp="20230914 01:13:17.950" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230914 01:13:14.945" endtime="20230914 01:13:17.950"/>
</kw>
<msg timestamp="20230914 01:13:17.950" level="INFO">${result} = Cancel prepare succeeded, cluster can now accept write requests.</msg>
<status status="PASS" starttime="20230914 01:13:14.944" endtime="20230914 01:13:17.950"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>5sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Cancel prepare succeeded</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Cancel prepare succeeded</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230914 01:13:17.951" endtime="20230914 01:13:17.951"/>
</kw>
<status status="PASS" starttime="20230914 01:13:17.950" endtime="20230914 01:13:17.951"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230914 01:13:14.943" endtime="20230914 01:13:17.951"/>
</test>
<test id="s1-s2-t2" name="Test write operations" line="37">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230914 01:13:17.953" endtime="20230914 01:13:17.954"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create /${volume_name}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230914 01:13:17.958" level="INFO">Running command 'ozone sh volume create /03630-volume-for-cancel 2&gt;&amp;1'.</msg>
<msg timestamp="20230914 01:13:20.857" level="INFO">${rc} = 0</msg>
<msg timestamp="20230914 01:13:20.857" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230914 01:13:17.955" endtime="20230914 01:13:20.857"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 01:13:20.858" level="INFO"/>
<status status="PASS" starttime="20230914 01:13:20.858" endtime="20230914 01:13:20.859"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230914 01:13:20.859" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230914 01:13:20.859" endtime="20230914 01:13:20.859"/>
</kw>
<status status="PASS" starttime="20230914 01:13:17.955" endtime="20230914 01:13:20.860"/>
</kw>
<msg timestamp="20230914 01:13:20.860" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230914 01:13:17.954" endtime="20230914 01:13:20.860"/>
</kw>
<status status="PASS" starttime="20230914 01:13:17.954" endtime="20230914 01:13:20.860"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create /${volume_name}/${bucket_name}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230914 01:13:20.864" level="INFO">Running command 'ozone sh bucket create /03630-volume-for-cancel/03630-bucket-for-cancel 2&gt;&amp;1'.</msg>
<msg timestamp="20230914 01:13:23.997" level="INFO">${rc} = 0</msg>
<msg timestamp="20230914 01:13:23.998" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230914 01:13:20.862" endtime="20230914 01:13:23.998"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 01:13:23.999" level="INFO"/>
<status status="PASS" starttime="20230914 01:13:23.998" endtime="20230914 01:13:23.999"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230914 01:13:23.999" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230914 01:13:23.999" endtime="20230914 01:13:24.000"/>
</kw>
<status status="PASS" starttime="20230914 01:13:20.861" endtime="20230914 01:13:24.000"/>
</kw>
<msg timestamp="20230914 01:13:24.000" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230914 01:13:20.861" endtime="20230914 01:13:24.000"/>
</kw>
<status status="PASS" starttime="20230914 01:13:20.860" endtime="20230914 01:13:24.000"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key put /${volume_name}/${bucket_name}/cancel-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230914 01:13:24.004" level="INFO">Running command 'ozone sh key put /03630-volume-for-cancel/03630-bucket-for-cancel/cancel-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230914 01:13:28.801" level="INFO">${rc} = 0</msg>
<msg timestamp="20230914 01:13:28.801" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230914 01:13:24.002" endtime="20230914 01:13:28.801"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 01:13:28.803" level="INFO"/>
<status status="PASS" starttime="20230914 01:13:28.802" endtime="20230914 01:13:28.803"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230914 01:13:28.803" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230914 01:13:28.803" endtime="20230914 01:13:28.803"/>
</kw>
<status status="PASS" starttime="20230914 01:13:24.001" endtime="20230914 01:13:28.804"/>
</kw>
<msg timestamp="20230914 01:13:28.804" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230914 01:13:24.001" endtime="20230914 01:13:28.804"/>
</kw>
<msg timestamp="20230914 01:13:28.804" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230914 01:13:24.000" endtime="20230914 01:13:28.804"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info /${volume_name}/${bucket_name}/cancel-key</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230914 01:13:28.808" level="INFO">Running command 'ozone sh key info /03630-volume-for-cancel/03630-bucket-for-cancel/cancel-key 2&gt;&amp;1'.</msg>
<msg timestamp="20230914 01:13:31.947" level="INFO">${rc} = 0</msg>
<msg timestamp="20230914 01:13:31.948" level="INFO">${output} = {
  "volumeName" : "03630-volume-for-cancel",
  "bucketName" : "03630-bucket-for-cancel",
  "name" : "cancel-key",
  "dataSize" : 17289,
  "creationTime" : "2023-09-14T01:13:26.789Z",
  "modificationT...</msg>
<status status="PASS" starttime="20230914 01:13:28.806" endtime="20230914 01:13:31.948"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 01:13:31.949" level="INFO">{
  "volumeName" : "03630-volume-for-cancel",
  "bucketName" : "03630-bucket-for-cancel",
  "name" : "cancel-key",
  "dataSize" : 17289,
  "creationTime" : "2023-09-14T01:13:26.789Z",
  "modificationTime" : "2023-09-14T01:13:28.421Z",
  "replicationConfig" : {
    "replicationFactor" : "ONE",
    "requiredNodes" : 1,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "ozoneKeyLocations" : [ {
    "containerID" : 3,
    "localID" : 111677748019200103,
    "length" : 17289,
    "offset" : 0,
    "keyOffset" : 0
  } ],
  "file" : true
}</msg>
<status status="PASS" starttime="20230914 01:13:31.948" endtime="20230914 01:13:31.949"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230914 01:13:31.950" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230914 01:13:31.949" endtime="20230914 01:13:31.950"/>
</kw>
<status status="PASS" starttime="20230914 01:13:28.805" endtime="20230914 01:13:31.950"/>
</kw>
<msg timestamp="20230914 01:13:31.950" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230914 01:13:28.805" endtime="20230914 01:13:31.950"/>
</kw>
<msg timestamp="20230914 01:13:31.950" level="INFO">${result} = {
  "volumeName" : "03630-volume-for-cancel",
  "bucketName" : "03630-bucket-for-cancel",
  "name" : "cancel-key",
  "dataSize" : 17289,
  "creationTime" : "2023-09-14T01:13:26.789Z",
  "modificationT...</msg>
<status status="PASS" starttime="20230914 01:13:28.804" endtime="20230914 01:13:31.950"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"name\" : \"cancel-key\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230914 01:13:31.950" endtime="20230914 01:13:31.951"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230914 01:13:17.953" endtime="20230914 01:13:31.951"/>
</test>
<doc>Smoke test for ozone manager cancel prepare</doc>
<status status="PASS" starttime="20230914 01:13:14.890" endtime="20230914 01:13:31.952"/>
</suite>
<suite id="s1-s3" name="Om-Prepare" source="/opt/hadoop/smoketest/omha/om-prepare.robot">
<kw name="Create Specific OM data for prepare" type="SETUP">
<kw name="Freon OCKG" library="freon">
<arg>prefix=om-prepare</arg>
<arg>n=100</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230914 01:13:34.546" level="INFO">Running command 'ozone freon ockg --om-service-id=omservice -t 1 -n100 -p om-prepare  2&gt;&amp;1'.</msg>
<msg timestamp="20230914 01:13:47.088" level="INFO">${rc} = 0</msg>
<msg timestamp="20230914 01:13:47.088" level="INFO">${output} = 2023-09-14 01:13:36,314 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-14 01:13:36,501 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230914 01:13:34.543" endtime="20230914 01:13:47.088"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 01:13:47.089" level="INFO">2023-09-14 01:13:36,314 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-14 01:13:36,501 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-09-14 01:13:36,504 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-09-14 01:13:36,598 [main] INFO freon.BaseFreonGenerator: Executing test with prefix om-prepare and number-of-tests 100
2023-09-14 01:13:36,654 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2023-09-14 01:13:37,660 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2023-09-14 01:13:37,835 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2023-09-14 01:13:38,107 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2023-09-14 01:13:38,661 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2023-09-14 01:13:39,663 [Thread-3] INFO freon.ProgressBar: Progress: 8.00 % (8 out of 100)
2023-09-14 01:13:40,663 [Thread-3] INFO freon.ProgressBar: Progress: 21.00 % (21 out of 100)
2023-09-14 01:13:41,677 [Thread-3] INFO freon.ProgressBar: Progress: 34.00 % (34 out of 100)
2023-09-14 01:13:42,677 [Thread-3] INFO freon.ProgressBar: Progress: 48.00 % (48 out of 100)
2023-09-14 01:13:43,680 [Thread-3] INFO freon.ProgressBar: Progress: 62.00 % (62 out of 100)
2023-09-14 01:13:44,681 [Thread-3] INFO freon.ProgressBar: Progress: 79.00 % (79 out of 100)
2023-09-14 01:13:45,681 [Thread-3] INFO freon.ProgressBar: Progress: 94.00 % (94 out of 100)
2023-09-14 01:13:46,682 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (100 out of 100)
2023-09-14 01:13:46,737 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=100, min=43.981828, max=1598.145953, mean=86.43800806893647, stddev=148.31681764552226, median=67.519157, p75=81.786193, p95=101.827491, p98=140.320366, p99=146.376224, p999=1598.145953, mean_rate=10.60630238491925, m1=8.6, m5=8.6, m15=8.6, rate_unit=events/second, duration_unit=milliseconds
2023-09-14 01:13:46,738 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 10
2023-09-14 01:13:46,738 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-09-14 01:13:46,738 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 100</msg>
<status status="PASS" starttime="20230914 01:13:47.089" endtime="20230914 01:13:47.090"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230914 01:13:47.090" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230914 01:13:47.090" endtime="20230914 01:13:47.090"/>
</kw>
<status status="PASS" starttime="20230914 01:13:34.543" endtime="20230914 01:13:47.090"/>
</kw>
<msg timestamp="20230914 01:13:47.090" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230914 01:13:34.542" endtime="20230914 01:13:47.091"/>
</kw>
<msg timestamp="20230914 01:13:47.091" level="INFO">${result} = 2023-09-14 01:13:36,314 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-14 01:13:36,501 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230914 01:13:34.542" endtime="20230914 01:13:47.091"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230914 01:13:47.091" endtime="20230914 01:13:47.092"/>
</kw>
<status status="PASS" starttime="20230914 01:13:34.541" endtime="20230914 01:13:47.092"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230914 01:13:47.092" level="INFO">${random} = 05423</msg>
<status status="PASS" starttime="20230914 01:13:47.092" endtime="20230914 01:13:47.092"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${volume_name}</arg>
<arg>${random}-volume-for-prepare</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230914 01:13:47.094" level="INFO">${volume_name} = 05423-volume-for-prepare</msg>
<status status="PASS" starttime="20230914 01:13:47.092" endtime="20230914 01:13:47.094"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${bucket_name}</arg>
<arg>${random}-bucket-for-prepare</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230914 01:13:47.095" level="INFO">${bucket_name} = 05423-bucket-for-prepare</msg>
<status status="PASS" starttime="20230914 01:13:47.094" endtime="20230914 01:13:47.095"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create /${volume_name}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230914 01:13:47.099" level="INFO">Running command 'ozone sh volume create /05423-volume-for-prepare 2&gt;&amp;1'.</msg>
<msg timestamp="20230914 01:13:50.007" level="INFO">${rc} = 0</msg>
<msg timestamp="20230914 01:13:50.007" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230914 01:13:47.096" endtime="20230914 01:13:50.007"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 01:13:50.008" level="INFO"/>
<status status="PASS" starttime="20230914 01:13:50.007" endtime="20230914 01:13:50.008"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230914 01:13:50.009" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230914 01:13:50.008" endtime="20230914 01:13:50.009"/>
</kw>
<status status="PASS" starttime="20230914 01:13:47.096" endtime="20230914 01:13:50.009"/>
</kw>
<msg timestamp="20230914 01:13:50.009" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230914 01:13:47.096" endtime="20230914 01:13:50.009"/>
</kw>
<status status="PASS" starttime="20230914 01:13:47.095" endtime="20230914 01:13:50.009"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create /${volume_name}/${bucket_name}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230914 01:13:50.013" level="INFO">Running command 'ozone sh bucket create /05423-volume-for-prepare/05423-bucket-for-prepare 2&gt;&amp;1'.</msg>
<msg timestamp="20230914 01:13:53.083" level="INFO">${rc} = 0</msg>
<msg timestamp="20230914 01:13:53.083" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230914 01:13:50.011" endtime="20230914 01:13:53.083"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 01:13:53.084" level="INFO"/>
<status status="PASS" starttime="20230914 01:13:53.083" endtime="20230914 01:13:53.084"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230914 01:13:53.085" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230914 01:13:53.084" endtime="20230914 01:13:53.085"/>
</kw>
<status status="PASS" starttime="20230914 01:13:50.010" endtime="20230914 01:13:53.085"/>
</kw>
<msg timestamp="20230914 01:13:53.085" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230914 01:13:50.010" endtime="20230914 01:13:53.085"/>
</kw>
<status status="PASS" starttime="20230914 01:13:50.010" endtime="20230914 01:13:53.086"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put /${volume_name}/${bucket_name}/prepare-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230914 01:13:53.092" level="INFO">Running command 'ozone sh key put /05423-volume-for-prepare/05423-bucket-for-prepare/prepare-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230914 01:13:58.058" level="INFO">${rc} = 0</msg>
<msg timestamp="20230914 01:13:58.058" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230914 01:13:53.089" endtime="20230914 01:13:58.058"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 01:13:58.059" level="INFO"/>
<status status="PASS" starttime="20230914 01:13:58.059" endtime="20230914 01:13:58.059"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230914 01:13:58.060" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230914 01:13:58.060" endtime="20230914 01:13:58.060"/>
</kw>
<status status="PASS" starttime="20230914 01:13:53.089" endtime="20230914 01:13:58.060"/>
</kw>
<msg timestamp="20230914 01:13:58.060" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230914 01:13:53.087" endtime="20230914 01:13:58.060"/>
</kw>
<status status="PASS" starttime="20230914 01:13:53.086" endtime="20230914 01:13:58.060"/>
</kw>
<status status="PASS" starttime="20230914 01:13:34.540" endtime="20230914 01:13:58.060"/>
</kw>
<test id="s1-s3-t1" name="Prepare Ozone Manager" line="39">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230914 01:13:58.062" endtime="20230914 01:13:58.062"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om prepare -id=omservice</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230914 01:13:58.067" level="INFO">Running command 'ozone admin om prepare -id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20230914 01:14:06.290" level="INFO">${rc} = 0</msg>
<msg timestamp="20230914 01:14:06.290" level="INFO">${output} = Ozone Manager Prepare Request successfully returned with Transaction Id : [833].

Checking individual OM instances for prepare request completion...
OM : [om1], Prepare Status : [PREPARE_COMPLETED], C...</msg>
<status status="PASS" starttime="20230914 01:13:58.064" endtime="20230914 01:14:06.290"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 01:14:06.292" level="INFO">Ozone Manager Prepare Request successfully returned with Transaction Id : [833].

Checking individual OM instances for prepare request completion...
OM : [om1], Prepare Status : [PREPARE_COMPLETED], Current Transaction Id : [833]
OM : [om3], Prepare Status : [PREPARE_COMPLETED], Current Transaction Id : [833]
OM : [om2], Prepare Status : [PREPARE_COMPLETED], Current Transaction Id : [833]

OM Preparation successful! 
All OMs are prepared
No new write requests will be allowed until preparation is cancelled or upgrade/downgrade is done.</msg>
<status status="PASS" starttime="20230914 01:14:06.291" endtime="20230914 01:14:06.292"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230914 01:14:06.292" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230914 01:14:06.292" endtime="20230914 01:14:06.292"/>
</kw>
<status status="PASS" starttime="20230914 01:13:58.063" endtime="20230914 01:14:06.293"/>
</kw>
<msg timestamp="20230914 01:14:06.293" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230914 01:13:58.063" endtime="20230914 01:14:06.293"/>
</kw>
<msg timestamp="20230914 01:14:06.293" level="INFO">${result} = Ozone Manager Prepare Request successfully returned with Transaction Id : [833].

Checking individual OM instances for prepare request completion...
OM : [om1], Prepare Status : [PREPARE_COMPLETED], C...</msg>
<status status="PASS" starttime="20230914 01:13:58.063" endtime="20230914 01:14:06.293"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>OM Preparation successful!</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>OM Preparation successful!</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230914 01:14:06.294" endtime="20230914 01:14:06.294"/>
</kw>
<status status="PASS" starttime="20230914 01:14:06.293" endtime="20230914 01:14:06.294"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230914 01:13:58.061" endtime="20230914 01:14:06.294"/>
</test>
<test id="s1-s3-t2" name="Checks if the expected data is present in OM" line="43">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230914 01:14:06.296" endtime="20230914 01:14:06.296"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info /${volume_name}/${bucket_name}/prepare-key</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230914 01:14:06.300" level="INFO">Running command 'ozone sh key info /05423-volume-for-prepare/05423-bucket-for-prepare/prepare-key 2&gt;&amp;1'.</msg>
<msg timestamp="20230914 01:14:09.341" level="INFO">${rc} = 0</msg>
<msg timestamp="20230914 01:14:09.341" level="INFO">${output} = {
  "volumeName" : "05423-volume-for-prepare",
  "bucketName" : "05423-bucket-for-prepare",
  "name" : "prepare-key",
  "dataSize" : 17289,
  "creationTime" : "2023-09-14T01:13:56.121Z",
  "modificati...</msg>
<status status="PASS" starttime="20230914 01:14:06.298" endtime="20230914 01:14:09.341"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 01:14:09.342" level="INFO">{
  "volumeName" : "05423-volume-for-prepare",
  "bucketName" : "05423-bucket-for-prepare",
  "name" : "prepare-key",
  "dataSize" : 17289,
  "creationTime" : "2023-09-14T01:13:56.121Z",
  "modificationTime" : "2023-09-14T01:13:57.685Z",
  "replicationConfig" : {
    "replicationFactor" : "ONE",
    "requiredNodes" : 1,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "ozoneKeyLocations" : [ {
    "containerID" : 6,
    "localID" : 111677748019200204,
    "length" : 17289,
    "offset" : 0,
    "keyOffset" : 0
  } ],
  "file" : true
}</msg>
<status status="PASS" starttime="20230914 01:14:09.342" endtime="20230914 01:14:09.343"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230914 01:14:09.343" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230914 01:14:09.343" endtime="20230914 01:14:09.343"/>
</kw>
<status status="PASS" starttime="20230914 01:14:06.297" endtime="20230914 01:14:09.343"/>
</kw>
<msg timestamp="20230914 01:14:09.343" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230914 01:14:06.297" endtime="20230914 01:14:09.344"/>
</kw>
<msg timestamp="20230914 01:14:09.344" level="INFO">${result} = {
  "volumeName" : "05423-volume-for-prepare",
  "bucketName" : "05423-bucket-for-prepare",
  "name" : "prepare-key",
  "dataSize" : 17289,
  "creationTime" : "2023-09-14T01:13:56.121Z",
  "modificati...</msg>
<status status="PASS" starttime="20230914 01:14:06.297" endtime="20230914 01:14:09.344"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"name\" : \"prepare-key\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230914 01:14:09.344" endtime="20230914 01:14:09.344"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230914 01:14:06.295" endtime="20230914 01:14:09.344"/>
</test>
<test id="s1-s3-t3" name="Test write operation fails" line="47">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230914 01:14:09.346" endtime="20230914 01:14:09.346"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh key put /${volume_name}/${bucket_name}/prepare-key2 /opt/hadoop/NOTICE.txt</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230914 01:14:09.350" level="INFO">Running command 'ozone sh key put /05423-volume-for-prepare/05423-bucket-for-prepare/prepare-key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230914 01:14:12.934" level="INFO">${rc} = 255</msg>
<msg timestamp="20230914 01:14:12.934" level="INFO">${output} = NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateKey when OM is in prepare mode.</msg>
<status status="PASS" starttime="20230914 01:14:09.347" endtime="20230914 01:14:12.934"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 01:14:12.935" level="INFO">NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateKey when OM is in prepare mode.</msg>
<status status="PASS" starttime="20230914 01:14:12.934" endtime="20230914 01:14:12.935"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230914 01:14:12.936" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230914 01:14:12.935" endtime="20230914 01:14:12.936"/>
</kw>
<msg timestamp="20230914 01:14:12.936" level="INFO">${result} = NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateKey when OM is in prepare mode.</msg>
<status status="PASS" starttime="20230914 01:14:09.347" endtime="20230914 01:14:12.936"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>OM is in prepare mode</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230914 01:14:12.936" endtime="20230914 01:14:12.937"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>ozone sh key info /${volume_name}/${bucket_name}/prepare-key2</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230914 01:14:12.940" level="INFO">Running command 'ozone sh key info /05423-volume-for-prepare/05423-bucket-for-prepare/prepare-key2 2&gt;&amp;1'.</msg>
<msg timestamp="20230914 01:14:15.675" level="INFO">${rc} = 255</msg>
<msg timestamp="20230914 01:14:15.675" level="INFO">${output} = KEY_NOT_FOUND Key:prepare-key2 not found</msg>
<status status="PASS" starttime="20230914 01:14:12.937" endtime="20230914 01:14:15.676"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 01:14:15.677" level="INFO">KEY_NOT_FOUND Key:prepare-key2 not found</msg>
<status status="PASS" starttime="20230914 01:14:15.676" endtime="20230914 01:14:15.677"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230914 01:14:15.678" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230914 01:14:15.677" endtime="20230914 01:14:15.678"/>
</kw>
<status status="PASS" starttime="20230914 01:14:12.937" endtime="20230914 01:14:15.678"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230914 01:14:09.345" endtime="20230914 01:14:15.678"/>
</test>
<doc>Smoke test to test preparing OMs in an OM HA cluster.</doc>
<status status="PASS" starttime="20230914 01:13:34.484" endtime="20230914 01:14:15.680"/>
</suite>
<suite id="s1-s4" name="Om-Prepared" source="/opt/hadoop/smoketest/omha/om-prepared.robot">
<test id="s1-s4-t1" name="Test create volume fails" line="26">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230914 01:14:18.252" endtime="20230914 01:14:18.252"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230914 01:14:18.253" level="INFO">${random} = 38435</msg>
<status status="PASS" starttime="20230914 01:14:18.252" endtime="20230914 01:14:18.253"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${volume_name}</arg>
<arg>${random}-volume-for-prepare</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230914 01:14:18.254" level="INFO">${volume_name} = 38435-volume-for-prepare</msg>
<status status="PASS" starttime="20230914 01:14:18.253" endtime="20230914 01:14:18.254"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh volume create /${volume_name}</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230914 01:14:18.258" level="INFO">Running command 'ozone sh volume create /38435-volume-for-prepare 2&gt;&amp;1'.</msg>
<msg timestamp="20230914 01:14:21.265" level="INFO">${rc} = 255</msg>
<msg timestamp="20230914 01:14:21.265" level="INFO">${output} = NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateVolume when OM is in prepare mode.</msg>
<status status="PASS" starttime="20230914 01:14:18.255" endtime="20230914 01:14:21.265"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 01:14:21.266" level="INFO">NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateVolume when OM is in prepare mode.</msg>
<status status="PASS" starttime="20230914 01:14:21.266" endtime="20230914 01:14:21.266"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230914 01:14:21.267" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230914 01:14:21.267" endtime="20230914 01:14:21.267"/>
</kw>
<msg timestamp="20230914 01:14:21.267" level="INFO">${result} = NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateVolume when OM is in prepare mode.</msg>
<status status="PASS" starttime="20230914 01:14:18.255" endtime="20230914 01:14:21.267"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>OM is in prepare mode</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230914 01:14:21.267" endtime="20230914 01:14:21.268"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh volume info /${volume_name}</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230914 01:14:21.271" level="INFO">Running command 'ozone sh volume info /38435-volume-for-prepare 2&gt;&amp;1'.</msg>
<msg timestamp="20230914 01:14:24.194" level="INFO">${rc} = 255</msg>
<msg timestamp="20230914 01:14:24.194" level="INFO">${output} = VOLUME_NOT_FOUND Volume 38435-volume-for-prepare is not found</msg>
<status status="PASS" starttime="20230914 01:14:21.269" endtime="20230914 01:14:24.194"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 01:14:24.195" level="INFO">VOLUME_NOT_FOUND Volume 38435-volume-for-prepare is not found</msg>
<status status="PASS" starttime="20230914 01:14:24.194" endtime="20230914 01:14:24.195"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230914 01:14:24.196" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230914 01:14:24.196" endtime="20230914 01:14:24.196"/>
</kw>
<msg timestamp="20230914 01:14:24.196" level="INFO">${result} = VOLUME_NOT_FOUND Volume 38435-volume-for-prepare is not found</msg>
<status status="PASS" starttime="20230914 01:14:21.268" endtime="20230914 01:14:24.196"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230914 01:14:24.196" endtime="20230914 01:14:24.197"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230914 01:14:18.251" endtime="20230914 01:14:24.197"/>
</test>
<test id="s1-s4-t2" name="Test list volumes succeeds" line="34">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230914 01:14:24.199" endtime="20230914 01:14:24.199"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230914 01:14:24.203" level="INFO">Running command 'ozone sh volume list 2&gt;&amp;1'.</msg>
<msg timestamp="20230914 01:14:27.279" level="INFO">${rc} = 0</msg>
<msg timestamp="20230914 01:14:27.279" level="INFO">${output} = [ {
  "metadata" : { },
  "name" : "s3v",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 0,
  "creationTime" : "2023-09-14T01:12:03.8...</msg>
<status status="PASS" starttime="20230914 01:14:24.201" endtime="20230914 01:14:27.279"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 01:14:27.280" level="INFO">[ {
  "metadata" : { },
  "name" : "s3v",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 0,
  "creationTime" : "2023-09-14T01:12:03.872Z",
  "modificationTime" : "2023-09-14T01:12:03.872Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "vol1",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2023-09-14T01:12:30.130Z",
  "modificationTime" : "2023-09-14T01:12:30.130Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "81602-volume-for-prepare",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2023-09-14T01:12:46.604Z",
  "modificationTime" : "2023-09-14T01:12:46.604Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "03630-volume-for-cancel",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2023-09-14T01:13:20.822Z",
  "modificationTime" : "2023-09-14T01:13:20.822Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "05423-volume-for-prepare",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2023-09-14T01:13:49.979Z",
  "modificationTime" : "2023-09-14T01:13:49.979Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "refCount" : 0
} ]</msg>
<status status="PASS" starttime="20230914 01:14:27.279" endtime="20230914 01:14:27.280"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230914 01:14:27.281" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230914 01:14:27.281" endtime="20230914 01:14:27.281"/>
</kw>
<status status="PASS" starttime="20230914 01:14:24.200" endtime="20230914 01:14:27.281"/>
</kw>
<msg timestamp="20230914 01:14:27.281" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230914 01:14:24.200" endtime="20230914 01:14:27.282"/>
</kw>
<msg timestamp="20230914 01:14:27.282" level="INFO">${result} = [ {
  "metadata" : { },
  "name" : "s3v",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 0,
  "creationTime" : "2023-09-14T01:12:03.8...</msg>
<status status="PASS" starttime="20230914 01:14:24.200" endtime="20230914 01:14:27.282"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230914 01:14:24.198" endtime="20230914 01:14:27.282"/>
</test>
<doc>Smoke test to test that OMs are prepared in an OM HA cluster.</doc>
<status status="PASS" starttime="20230914 01:14:18.201" endtime="20230914 01:14:27.284"/>
</suite>
<suite id="s1-s5" name="Om-Prepared" source="/opt/hadoop/smoketest/omha/om-prepared.robot">
<test id="s1-s5-t1" name="Test create volume fails" line="26">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230914 01:15:57.261" endtime="20230914 01:15:57.262"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230914 01:15:57.262" level="INFO">${random} = 92868</msg>
<status status="PASS" starttime="20230914 01:15:57.262" endtime="20230914 01:15:57.262"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${volume_name}</arg>
<arg>${random}-volume-for-prepare</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230914 01:15:57.264" level="INFO">${volume_name} = 92868-volume-for-prepare</msg>
<status status="PASS" starttime="20230914 01:15:57.263" endtime="20230914 01:15:57.264"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh volume create /${volume_name}</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230914 01:15:57.267" level="INFO">Running command 'ozone sh volume create /92868-volume-for-prepare 2&gt;&amp;1'.</msg>
<msg timestamp="20230914 01:16:00.399" level="INFO">${rc} = 255</msg>
<msg timestamp="20230914 01:16:00.399" level="INFO">${output} = NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateVolume when OM is in prepare mode.</msg>
<status status="PASS" starttime="20230914 01:15:57.265" endtime="20230914 01:16:00.400"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 01:16:00.401" level="INFO">NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateVolume when OM is in prepare mode.</msg>
<status status="PASS" starttime="20230914 01:16:00.400" endtime="20230914 01:16:00.401"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230914 01:16:00.402" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230914 01:16:00.401" endtime="20230914 01:16:00.402"/>
</kw>
<msg timestamp="20230914 01:16:00.402" level="INFO">${result} = NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateVolume when OM is in prepare mode.</msg>
<status status="PASS" starttime="20230914 01:15:57.264" endtime="20230914 01:16:00.402"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>OM is in prepare mode</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230914 01:16:00.402" endtime="20230914 01:16:00.403"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh volume info /${volume_name}</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230914 01:16:00.406" level="INFO">Running command 'ozone sh volume info /92868-volume-for-prepare 2&gt;&amp;1'.</msg>
<msg timestamp="20230914 01:16:03.666" level="INFO">${rc} = 255</msg>
<msg timestamp="20230914 01:16:03.666" level="INFO">${output} = VOLUME_NOT_FOUND Volume 92868-volume-for-prepare is not found</msg>
<status status="PASS" starttime="20230914 01:16:00.403" endtime="20230914 01:16:03.666"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 01:16:03.668" level="INFO">VOLUME_NOT_FOUND Volume 92868-volume-for-prepare is not found</msg>
<status status="PASS" starttime="20230914 01:16:03.667" endtime="20230914 01:16:03.668"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230914 01:16:03.668" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230914 01:16:03.668" endtime="20230914 01:16:03.668"/>
</kw>
<msg timestamp="20230914 01:16:03.669" level="INFO">${result} = VOLUME_NOT_FOUND Volume 92868-volume-for-prepare is not found</msg>
<status status="PASS" starttime="20230914 01:16:00.403" endtime="20230914 01:16:03.669"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230914 01:16:03.669" endtime="20230914 01:16:03.669"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230914 01:15:57.260" endtime="20230914 01:16:03.670"/>
</test>
<test id="s1-s5-t2" name="Test list volumes succeeds" line="34">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230914 01:16:03.672" endtime="20230914 01:16:03.673"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230914 01:16:03.677" level="INFO">Running command 'ozone sh volume list 2&gt;&amp;1'.</msg>
<msg timestamp="20230914 01:16:07.226" level="INFO">${rc} = 0</msg>
<msg timestamp="20230914 01:16:07.226" level="INFO">${output} = [ {
  "metadata" : { },
  "name" : "s3v",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 0,
  "creationTime" : "2023-09-14T01:12:04.6...</msg>
<status status="PASS" starttime="20230914 01:16:03.674" endtime="20230914 01:16:07.226"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 01:16:07.227" level="INFO">[ {
  "metadata" : { },
  "name" : "s3v",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 0,
  "creationTime" : "2023-09-14T01:12:04.621Z",
  "modificationTime" : "2023-09-14T01:12:04.621Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "vol1",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2023-09-14T01:12:30.130Z",
  "modificationTime" : "2023-09-14T01:12:30.130Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "81602-volume-for-prepare",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2023-09-14T01:12:46.604Z",
  "modificationTime" : "2023-09-14T01:12:46.604Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "03630-volume-for-cancel",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2023-09-14T01:13:20.822Z",
  "modificationTime" : "2023-09-14T01:13:20.822Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "05423-volume-for-prepare",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2023-09-14T01:13:49.979Z",
  "modificationTime" : "2023-09-14T01:13:49.979Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "refCount" : 0
} ]</msg>
<status status="PASS" starttime="20230914 01:16:07.226" endtime="20230914 01:16:07.227"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230914 01:16:07.228" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230914 01:16:07.227" endtime="20230914 01:16:07.228"/>
</kw>
<status status="PASS" starttime="20230914 01:16:03.673" endtime="20230914 01:16:07.228"/>
</kw>
<msg timestamp="20230914 01:16:07.228" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230914 01:16:03.673" endtime="20230914 01:16:07.228"/>
</kw>
<msg timestamp="20230914 01:16:07.229" level="INFO">${result} = [ {
  "metadata" : { },
  "name" : "s3v",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 0,
  "creationTime" : "2023-09-14T01:12:04.6...</msg>
<status status="PASS" starttime="20230914 01:16:03.673" endtime="20230914 01:16:07.229"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230914 01:16:03.671" endtime="20230914 01:16:07.229"/>
</test>
<doc>Smoke test to test that OMs are prepared in an OM HA cluster.</doc>
<status status="PASS" starttime="20230914 01:15:57.207" endtime="20230914 01:16:07.230"/>
</suite>
<suite id="s1-s6" name="Loaddata" source="/opt/hadoop/smoketest/topology/loaddata.robot">
<test id="s1-s6-t1" name="Create a volume, bucket and key" line="27">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create topvol1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230914 01:17:36.075" level="INFO">Running command 'ozone sh volume create topvol1 2&gt;&amp;1'.</msg>
<msg timestamp="20230914 01:17:39.710" level="INFO">${rc} = 0</msg>
<msg timestamp="20230914 01:17:39.710" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230914 01:17:36.072" endtime="20230914 01:17:39.710"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 01:17:39.720" level="INFO"/>
<status status="PASS" starttime="20230914 01:17:39.711" endtime="20230914 01:17:39.720"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230914 01:17:39.720" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230914 01:17:39.720" endtime="20230914 01:17:39.721"/>
</kw>
<status status="PASS" starttime="20230914 01:17:36.070" endtime="20230914 01:17:39.721"/>
</kw>
<msg timestamp="20230914 01:17:39.721" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230914 01:17:36.069" endtime="20230914 01:17:39.721"/>
</kw>
<msg timestamp="20230914 01:17:39.721" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230914 01:17:36.067" endtime="20230914 01:17:39.721"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230914 01:17:39.722" endtime="20230914 01:17:39.722"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /topvol1/bucket1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230914 01:17:39.727" level="INFO">Running command 'ozone sh bucket create /topvol1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20230914 01:17:43.076" level="INFO">${rc} = 0</msg>
<msg timestamp="20230914 01:17:43.076" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230914 01:17:39.724" endtime="20230914 01:17:43.076"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 01:17:43.077" level="INFO"/>
<status status="PASS" starttime="20230914 01:17:43.077" endtime="20230914 01:17:43.077"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230914 01:17:43.078" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230914 01:17:43.078" endtime="20230914 01:17:43.078"/>
</kw>
<status status="PASS" starttime="20230914 01:17:39.723" endtime="20230914 01:17:43.078"/>
</kw>
<msg timestamp="20230914 01:17:43.078" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230914 01:17:39.723" endtime="20230914 01:17:43.078"/>
</kw>
<msg timestamp="20230914 01:17:43.079" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230914 01:17:39.722" endtime="20230914 01:17:43.079"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230914 01:17:43.079" endtime="20230914 01:17:43.079"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /topvol1/bucket1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230914 01:17:43.083" level="INFO">Running command 'ozone sh key put /topvol1/bucket1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230914 01:17:49.327" level="INFO">${rc} = 0</msg>
<msg timestamp="20230914 01:17:49.327" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230914 01:17:43.081" endtime="20230914 01:17:49.327"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 01:17:49.328" level="INFO"/>
<status status="PASS" starttime="20230914 01:17:49.328" endtime="20230914 01:17:49.328"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230914 01:17:49.329" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230914 01:17:49.329" endtime="20230914 01:17:49.329"/>
</kw>
<status status="PASS" starttime="20230914 01:17:43.080" endtime="20230914 01:17:49.329"/>
</kw>
<msg timestamp="20230914 01:17:49.330" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230914 01:17:43.080" endtime="20230914 01:17:49.330"/>
</kw>
<msg timestamp="20230914 01:17:49.330" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230914 01:17:43.079" endtime="20230914 01:17:49.330"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230914 01:17:49.330" endtime="20230914 01:17:49.330"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230914 01:17:36.066" endtime="20230914 01:17:49.331"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20230914 01:17:36.016" endtime="20230914 01:17:49.332"/>
</suite>
<suite id="s1-s7" name="Readdata" source="/opt/hadoop/smoketest/topology/readdata.robot">
<test id="s1-s7-t1" name="Read data from previously created key" line="27">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230914 01:17:51.991" level="INFO">${random} = 57973</msg>
<status status="PASS" starttime="20230914 01:17:51.991" endtime="20230914 01:17:51.991"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /topvol1/bucket1/key1 /tmp/key1-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230914 01:17:51.995" level="INFO">Running command 'ozone sh key get /topvol1/bucket1/key1 /tmp/key1-57973 2&gt;&amp;1'.</msg>
<msg timestamp="20230914 01:17:57.355" level="INFO">${rc} = 0</msg>
<msg timestamp="20230914 01:17:57.355" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230914 01:17:51.993" endtime="20230914 01:17:57.355"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 01:17:57.356" level="INFO"/>
<status status="PASS" starttime="20230914 01:17:57.356" endtime="20230914 01:17:57.356"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230914 01:17:57.357" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230914 01:17:57.357" endtime="20230914 01:17:57.357"/>
</kw>
<status status="PASS" starttime="20230914 01:17:51.992" endtime="20230914 01:17:57.357"/>
</kw>
<msg timestamp="20230914 01:17:57.357" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230914 01:17:51.992" endtime="20230914 01:17:57.358"/>
</kw>
<msg timestamp="20230914 01:17:57.358" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230914 01:17:51.991" endtime="20230914 01:17:57.358"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230914 01:17:57.358" endtime="20230914 01:17:57.358"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230914 01:17:51.990" endtime="20230914 01:17:57.358"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20230914 01:17:51.941" endtime="20230914 01:17:57.360"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="141378"/>
</suite>
<statistics>
<total>
<stat pass="14" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="14" fail="0" skip="0" id="s1" name="ozone-om-prepare">ozone-om-prepare</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1" name="Om-Prepare">ozone-om-prepare.Om-Prepare</stat>
<stat pass="2" fail="0" skip="0" id="s1-s2" name="Om-Cancel-Prepare">ozone-om-prepare.Om-Cancel-Prepare</stat>
<stat pass="3" fail="0" skip="0" id="s1-s3" name="Om-Prepare">ozone-om-prepare.Om-Prepare</stat>
<stat pass="2" fail="0" skip="0" id="s1-s4" name="Om-Prepared">ozone-om-prepare.Om-Prepared</stat>
<stat pass="2" fail="0" skip="0" id="s1-s5" name="Om-Prepared">ozone-om-prepare.Om-Prepared</stat>
<stat pass="1" fail="0" skip="0" id="s1-s6" name="Loaddata">ozone-om-prepare.Loaddata</stat>
<stat pass="1" fail="0" skip="0" id="s1-s7" name="Readdata">ozone-om-prepare.Readdata</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
