<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 6.1.1 (Python 3.8.10 on linux)" generated="20230914 10:42:51.435" rpa="false" schemaversion="4">
<suite id="s1" name="ozonesecure-ha-root-ca-rotation">
<suite id="s1-s1" name="Kinit" source="/opt/hadoop/smoketest/kinit.robot">
<test id="s1-s1-t1" name="Kinit" line="27">
<kw name="Kinit test user" library="commonlib">
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230914 10:27:18.370" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230914 10:27:18.381" level="INFO">${rc} = 0</msg>
<msg timestamp="20230914 10:27:18.382" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230914 10:27:18.365" endtime="20230914 10:27:18.382"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 10:27:18.384" level="INFO">scm</msg>
<status status="PASS" starttime="20230914 10:27:18.382" endtime="20230914 10:27:18.384"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230914 10:27:18.385" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230914 10:27:18.384" endtime="20230914 10:27:18.385"/>
</kw>
<status status="PASS" starttime="20230914 10:27:18.364" endtime="20230914 10:27:18.386"/>
</kw>
<msg timestamp="20230914 10:27:18.386" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230914 10:27:18.363" endtime="20230914 10:27:18.386"/>
</kw>
<msg timestamp="20230914 10:27:18.386" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230914 10:27:18.362" endtime="20230914 10:27:18.386"/>
</kw>
<msg timestamp="20230914 10:27:18.387" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230914 10:27:18.362" endtime="20230914 10:27:18.387"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230914 10:27:18.388" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230914 10:27:18.387" endtime="20230914 10:27:18.389"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230914 10:27:18.397" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20230914 10:27:18.495" level="INFO">${rc} = 0</msg>
<msg timestamp="20230914 10:27:18.495" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230914 10:27:18.394" endtime="20230914 10:27:18.495"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 10:27:18.497" level="INFO"/>
<status status="PASS" starttime="20230914 10:27:18.496" endtime="20230914 10:27:18.497"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230914 10:27:18.498" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230914 10:27:18.497" endtime="20230914 10:27:18.498"/>
</kw>
<status status="PASS" starttime="20230914 10:27:18.393" endtime="20230914 10:27:18.498"/>
</kw>
<msg timestamp="20230914 10:27:18.498" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230914 10:27:18.392" endtime="20230914 10:27:18.499"/>
</kw>
<status status="PASS" starttime="20230914 10:27:18.390" endtime="20230914 10:27:18.499"/>
</kw>
<status status="PASS" starttime="20230914 10:27:18.389" endtime="20230914 10:27:18.499"/>
</kw>
<status status="PASS" starttime="20230914 10:27:18.360" endtime="20230914 10:27:18.500"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20230914 10:27:18.359" endtime="20230914 10:27:18.500"/>
</test>
<doc>Kinit test user</doc>
<status status="PASS" starttime="20230914 10:27:18.236" endtime="20230914 10:27:18.503"/>
</suite>
<suite id="s1-s2" name="Scm-Leader-Transfer" source="/opt/hadoop/smoketest/scmha/scm-leader-transfer.robot">
<test id="s1-s2-t1" name="Transfer Leadership" line="47">
<kw name="Get SCM Leader Node">
<var>${leaderSCM}</var>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin scm roles --service-id=scmservice</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230914 10:27:38.571" level="INFO">Running command 'ozone admin scm roles --service-id=scmservice 2&gt;&amp;1'.</msg>
<msg timestamp="20230914 10:27:46.513" level="INFO">${rc} = 0</msg>
<msg timestamp="20230914 10:27:46.514" level="INFO">${output} = scm3.org:9894:FOLLOWER:20b51c8d-3efe-461a-b173-2cf8dda7a22b:172.25.0.118
scm1.org:9894:LEADER:efbdf6b5-6cd0-4195-946f-fda01f4ced8a:172.25.0.116
scm2.org:9894:FOLLOWER:c2683c6c-c151-4b82-a768-352378f44...</msg>
<status status="PASS" starttime="20230914 10:27:38.565" endtime="20230914 10:27:46.514"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 10:27:46.515" level="INFO">scm3.org:9894:FOLLOWER:20b51c8d-3efe-461a-b173-2cf8dda7a22b:172.25.0.118
scm1.org:9894:LEADER:efbdf6b5-6cd0-4195-946f-fda01f4ced8a:172.25.0.116
scm2.org:9894:FOLLOWER:c2683c6c-c151-4b82-a768-352378f44b9d:172.25.0.117</msg>
<status status="PASS" starttime="20230914 10:27:46.514" endtime="20230914 10:27:46.515"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230914 10:27:46.516" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230914 10:27:46.515" endtime="20230914 10:27:46.516"/>
</kw>
<status status="PASS" starttime="20230914 10:27:38.563" endtime="20230914 10:27:46.516"/>
</kw>
<msg timestamp="20230914 10:27:46.516" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230914 10:27:38.562" endtime="20230914 10:27:46.516"/>
</kw>
<msg timestamp="20230914 10:27:46.517" level="INFO">${result} = scm3.org:9894:FOLLOWER:20b51c8d-3efe-461a-b173-2cf8dda7a22b:172.25.0.118
scm1.org:9894:LEADER:efbdf6b5-6cd0-4195-946f-fda01f4ced8a:172.25.0.116
scm2.org:9894:FOLLOWER:c2683c6c-c151-4b82-a768-352378f44...</msg>
<status status="PASS" starttime="20230914 10:27:38.561" endtime="20230914 10:27:46.517"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 10:27:46.517" level="INFO">scm3.org:9894:FOLLOWER:20b51c8d-3efe-461a-b173-2cf8dda7a22b:172.25.0.118
scm1.org:9894:LEADER:efbdf6b5-6cd0-4195-946f-fda01f4ced8a:172.25.0.116
scm2.org:9894:FOLLOWER:c2683c6c-c151-4b82-a768-352378f44b9d:172.25.0.117</msg>
<status status="PASS" starttime="20230914 10:27:46.517" endtime="20230914 10:27:46.518"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>LEADER</arg>
<arg>1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230914 10:27:46.518" endtime="20230914 10:27:46.518"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>FOLLOWER</arg>
<arg>2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230914 10:27:46.519" endtime="20230914 10:27:46.519"/>
</kw>
<kw name="Get Lines Containing String" library="String">
<var>${scmLine}</var>
<arg>${result}</arg>
<arg>LEADER</arg>
<doc>Returns lines of the given ``string`` that contain the ``pattern``.</doc>
<msg timestamp="20230914 10:27:46.520" level="INFO">1 out of 3 lines matched</msg>
<msg timestamp="20230914 10:27:46.520" level="INFO">${scmLine} = scm1.org:9894:LEADER:efbdf6b5-6cd0-4195-946f-fda01f4ced8a:172.25.0.116</msg>
<status status="PASS" starttime="20230914 10:27:46.519" endtime="20230914 10:27:46.520"/>
</kw>
<kw name="Split String" library="String">
<var>${splits}</var>
<arg>${scmLine}</arg>
<arg>:</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20230914 10:27:46.521" level="INFO">${splits} = ['scm1.org', '9894', 'LEADER', 'efbdf6b5-6cd0-4195-946f-fda01f4ced8a', '172.25.0.116']</msg>
<status status="PASS" starttime="20230914 10:27:46.520" endtime="20230914 10:27:46.521"/>
</kw>
<kw name="Strip String" library="String">
<var>${leaderSCM}</var>
<arg>${splits[3]}</arg>
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<msg timestamp="20230914 10:27:46.523" level="INFO">${leaderSCM} = efbdf6b5-6cd0-4195-946f-fda01f4ced8a</msg>
<status status="PASS" starttime="20230914 10:27:46.521" endtime="20230914 10:27:46.523"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Leader SCM: ${leaderSCM}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 10:27:46.523" level="INFO">Leader SCM: efbdf6b5-6cd0-4195-946f-fda01f4ced8a</msg>
<status status="PASS" starttime="20230914 10:27:46.523" endtime="20230914 10:27:46.523"/>
</kw>
<msg timestamp="20230914 10:27:46.524" level="INFO">${leaderSCM} = efbdf6b5-6cd0-4195-946f-fda01f4ced8a</msg>
<status status="PASS" starttime="20230914 10:27:38.559" endtime="20230914 10:27:46.524"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Leader SCM: ${leaderSCM}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 10:27:46.524" level="INFO">Leader SCM: efbdf6b5-6cd0-4195-946f-fda01f4ced8a</msg>
<status status="PASS" starttime="20230914 10:27:46.524" endtime="20230914 10:27:46.524"/>
</kw>
<kw name="Get SCM UUID">
<var>${target_scm_uuid}</var>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin scm roles --service-id=scmservice</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230914 10:27:46.530" level="INFO">Running command 'ozone admin scm roles --service-id=scmservice 2&gt;&amp;1'.</msg>
<msg timestamp="20230914 10:27:56.077" level="INFO">${rc} = 0</msg>
<msg timestamp="20230914 10:27:56.077" level="INFO">${output} = scm3.org:9894:FOLLOWER:20b51c8d-3efe-461a-b173-2cf8dda7a22b:172.25.0.118
scm1.org:9894:LEADER:efbdf6b5-6cd0-4195-946f-fda01f4ced8a:172.25.0.116
scm2.org:9894:FOLLOWER:c2683c6c-c151-4b82-a768-352378f44...</msg>
<status status="PASS" starttime="20230914 10:27:46.527" endtime="20230914 10:27:56.077"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 10:27:56.079" level="INFO">scm3.org:9894:FOLLOWER:20b51c8d-3efe-461a-b173-2cf8dda7a22b:172.25.0.118
scm1.org:9894:LEADER:efbdf6b5-6cd0-4195-946f-fda01f4ced8a:172.25.0.116
scm2.org:9894:FOLLOWER:c2683c6c-c151-4b82-a768-352378f44b9d:172.25.0.117</msg>
<status status="PASS" starttime="20230914 10:27:56.078" endtime="20230914 10:27:56.080"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230914 10:27:56.080" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230914 10:27:56.080" endtime="20230914 10:27:56.081"/>
</kw>
<status status="PASS" starttime="20230914 10:27:46.526" endtime="20230914 10:27:56.081"/>
</kw>
<msg timestamp="20230914 10:27:56.081" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230914 10:27:46.526" endtime="20230914 10:27:56.081"/>
</kw>
<msg timestamp="20230914 10:27:56.082" level="INFO">${result} = scm3.org:9894:FOLLOWER:20b51c8d-3efe-461a-b173-2cf8dda7a22b:172.25.0.118
scm1.org:9894:LEADER:efbdf6b5-6cd0-4195-946f-fda01f4ced8a:172.25.0.116
scm2.org:9894:FOLLOWER:c2683c6c-c151-4b82-a768-352378f44...</msg>
<status status="PASS" starttime="20230914 10:27:46.525" endtime="20230914 10:27:56.082"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 10:27:56.082" level="INFO">scm3.org:9894:FOLLOWER:20b51c8d-3efe-461a-b173-2cf8dda7a22b:172.25.0.118
scm1.org:9894:LEADER:efbdf6b5-6cd0-4195-946f-fda01f4ced8a:172.25.0.116
scm2.org:9894:FOLLOWER:c2683c6c-c151-4b82-a768-352378f44b9d:172.25.0.117</msg>
<status status="PASS" starttime="20230914 10:27:56.082" endtime="20230914 10:27:56.082"/>
</kw>
<kw name="Get Lines Containing String" library="String">
<var>${scm_line}</var>
<arg>${result}</arg>
<arg>${TARGET_SCM}</arg>
<doc>Returns lines of the given ``string`` that contain the ``pattern``.</doc>
<msg timestamp="20230914 10:27:56.083" level="INFO">1 out of 3 lines matched</msg>
<msg timestamp="20230914 10:27:56.083" level="INFO">${scm_line} = scm2.org:9894:FOLLOWER:c2683c6c-c151-4b82-a768-352378f44b9d:172.25.0.117</msg>
<status status="PASS" starttime="20230914 10:27:56.082" endtime="20230914 10:27:56.083"/>
</kw>
<kw name="Split String" library="String">
<var>${scm_split}</var>
<arg>${scm_line}</arg>
<arg>:</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20230914 10:27:56.084" level="INFO">${scm_split} = ['scm2.org', '9894', 'FOLLOWER', 'c2683c6c-c151-4b82-a768-352378f44b9d', '172.25.0.117']</msg>
<status status="PASS" starttime="20230914 10:27:56.083" endtime="20230914 10:27:56.084"/>
</kw>
<kw name="Strip String" library="String">
<var>${scm_uuid}</var>
<arg>${scm_split[3]}</arg>
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<msg timestamp="20230914 10:27:56.086" level="INFO">${scm_uuid} = c2683c6c-c151-4b82-a768-352378f44b9d</msg>
<status status="PASS" starttime="20230914 10:27:56.084" endtime="20230914 10:27:56.086"/>
</kw>
<msg timestamp="20230914 10:27:56.087" level="INFO">${target_scm_uuid} = c2683c6c-c151-4b82-a768-352378f44b9d</msg>
<status status="PASS" starttime="20230914 10:27:46.525" endtime="20230914 10:27:56.087"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin scm transfer --service-id=scmservice -n ${target_scm_uuid}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230914 10:27:56.093" level="INFO">Running command 'ozone admin scm transfer --service-id=scmservice -n c2683c6c-c151-4b82-a768-352378f44b9d 2&gt;&amp;1'.</msg>
<msg timestamp="20230914 10:28:10.810" level="INFO">${rc} = 0</msg>
<msg timestamp="20230914 10:28:10.810" level="INFO">${output} = Transfer leadership successfully to c2683c6c-c151-4b82-a768-352378f44b9d.</msg>
<status status="PASS" starttime="20230914 10:27:56.089" endtime="20230914 10:28:10.810"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 10:28:10.811" level="INFO">Transfer leadership successfully to c2683c6c-c151-4b82-a768-352378f44b9d.</msg>
<status status="PASS" starttime="20230914 10:28:10.810" endtime="20230914 10:28:10.811"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230914 10:28:10.812" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230914 10:28:10.811" endtime="20230914 10:28:10.812"/>
</kw>
<status status="PASS" starttime="20230914 10:27:56.089" endtime="20230914 10:28:10.814"/>
</kw>
<msg timestamp="20230914 10:28:10.815" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230914 10:27:56.088" endtime="20230914 10:28:10.815"/>
</kw>
<msg timestamp="20230914 10:28:10.816" level="INFO">${result} = Transfer leadership successfully to c2683c6c-c151-4b82-a768-352378f44b9d.</msg>
<status status="PASS" starttime="20230914 10:27:56.087" endtime="20230914 10:28:10.816"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 10:28:10.817" level="INFO">Transfer leadership successfully to c2683c6c-c151-4b82-a768-352378f44b9d.</msg>
<status status="PASS" starttime="20230914 10:28:10.816" endtime="20230914 10:28:10.817"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Transfer leadership successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230914 10:28:10.818" endtime="20230914 10:28:10.819"/>
</kw>
<kw name="Get SCM Leader Node">
<var>${newLeaderSCM}</var>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin scm roles --service-id=scmservice</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230914 10:28:10.829" level="INFO">Running command 'ozone admin scm roles --service-id=scmservice 2&gt;&amp;1'.</msg>
<msg timestamp="20230914 10:28:27.450" level="INFO">${rc} = 0</msg>
<msg timestamp="20230914 10:28:27.450" level="INFO">${output} = scm3.org:9894:FOLLOWER:20b51c8d-3efe-461a-b173-2cf8dda7a22b:172.25.0.118
scm1.org:9894:FOLLOWER:efbdf6b5-6cd0-4195-946f-fda01f4ced8a:172.25.0.116
scm2.org:9894:LEADER:c2683c6c-c151-4b82-a768-352378f44...</msg>
<status status="PASS" starttime="20230914 10:28:10.825" endtime="20230914 10:28:27.451"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 10:28:27.453" level="INFO">scm3.org:9894:FOLLOWER:20b51c8d-3efe-461a-b173-2cf8dda7a22b:172.25.0.118
scm1.org:9894:FOLLOWER:efbdf6b5-6cd0-4195-946f-fda01f4ced8a:172.25.0.116
scm2.org:9894:LEADER:c2683c6c-c151-4b82-a768-352378f44b9d:172.25.0.117</msg>
<status status="PASS" starttime="20230914 10:28:27.451" endtime="20230914 10:28:27.453"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230914 10:28:27.456" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230914 10:28:27.453" endtime="20230914 10:28:27.456"/>
</kw>
<status status="PASS" starttime="20230914 10:28:10.823" endtime="20230914 10:28:27.456"/>
</kw>
<msg timestamp="20230914 10:28:27.456" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230914 10:28:10.822" endtime="20230914 10:28:27.458"/>
</kw>
<msg timestamp="20230914 10:28:27.458" level="INFO">${result} = scm3.org:9894:FOLLOWER:20b51c8d-3efe-461a-b173-2cf8dda7a22b:172.25.0.118
scm1.org:9894:FOLLOWER:efbdf6b5-6cd0-4195-946f-fda01f4ced8a:172.25.0.116
scm2.org:9894:LEADER:c2683c6c-c151-4b82-a768-352378f44...</msg>
<status status="PASS" starttime="20230914 10:28:10.821" endtime="20230914 10:28:27.458"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 10:28:27.460" level="INFO">scm3.org:9894:FOLLOWER:20b51c8d-3efe-461a-b173-2cf8dda7a22b:172.25.0.118
scm1.org:9894:FOLLOWER:efbdf6b5-6cd0-4195-946f-fda01f4ced8a:172.25.0.116
scm2.org:9894:LEADER:c2683c6c-c151-4b82-a768-352378f44b9d:172.25.0.117</msg>
<status status="PASS" starttime="20230914 10:28:27.459" endtime="20230914 10:28:27.460"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>LEADER</arg>
<arg>1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230914 10:28:27.460" endtime="20230914 10:28:27.463"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>FOLLOWER</arg>
<arg>2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230914 10:28:27.463" endtime="20230914 10:28:27.464"/>
</kw>
<kw name="Get Lines Containing String" library="String">
<var>${scmLine}</var>
<arg>${result}</arg>
<arg>LEADER</arg>
<doc>Returns lines of the given ``string`` that contain the ``pattern``.</doc>
<msg timestamp="20230914 10:28:27.466" level="INFO">1 out of 3 lines matched</msg>
<msg timestamp="20230914 10:28:27.466" level="INFO">${scmLine} = scm2.org:9894:LEADER:c2683c6c-c151-4b82-a768-352378f44b9d:172.25.0.117</msg>
<status status="PASS" starttime="20230914 10:28:27.465" endtime="20230914 10:28:27.466"/>
</kw>
<kw name="Split String" library="String">
<var>${splits}</var>
<arg>${scmLine}</arg>
<arg>:</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20230914 10:28:27.468" level="INFO">${splits} = ['scm2.org', '9894', 'LEADER', 'c2683c6c-c151-4b82-a768-352378f44b9d', '172.25.0.117']</msg>
<status status="PASS" starttime="20230914 10:28:27.467" endtime="20230914 10:28:27.468"/>
</kw>
<kw name="Strip String" library="String">
<var>${leaderSCM}</var>
<arg>${splits[3]}</arg>
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<msg timestamp="20230914 10:28:27.472" level="INFO">${leaderSCM} = c2683c6c-c151-4b82-a768-352378f44b9d</msg>
<status status="PASS" starttime="20230914 10:28:27.468" endtime="20230914 10:28:27.472"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Leader SCM: ${leaderSCM}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 10:28:27.474" level="INFO">Leader SCM: c2683c6c-c151-4b82-a768-352378f44b9d</msg>
<status status="PASS" starttime="20230914 10:28:27.474" endtime="20230914 10:28:27.474"/>
</kw>
<msg timestamp="20230914 10:28:27.475" level="INFO">${newLeaderSCM} = c2683c6c-c151-4b82-a768-352378f44b9d</msg>
<status status="PASS" starttime="20230914 10:28:10.820" endtime="20230914 10:28:27.475"/>
</kw>
<kw name="Should Not Be Equal" library="BuiltIn">
<arg>${leaderSCM}</arg>
<arg>${newLeaderSCM}</arg>
<doc>Fails if the given objects are equal.</doc>
<status status="PASS" starttime="20230914 10:28:27.477" endtime="20230914 10:28:27.478"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230914 10:27:38.558" endtime="20230914 10:28:27.479"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20230914 10:27:38.400" endtime="20230914 10:28:27.488"/>
</suite>
<suite id="s1-s3" name="Root-Ca-Rotation-Client-Checks" source="/opt/hadoop/smoketest/certrotation/root-ca-rotation-client-checks.robot">
<test id="s1-s3-t1" name="Create a volume and bucket" line="27">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230914 10:28:36.163" level="INFO">Running command 'ozone sh volume create rootca-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20230914 10:28:47.595" level="INFO">${rc} = 0</msg>
<msg timestamp="20230914 10:28:47.596" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230914 10:28:36.159" endtime="20230914 10:28:47.596"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 10:28:47.597" level="INFO"/>
<status status="PASS" starttime="20230914 10:28:47.596" endtime="20230914 10:28:47.597"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230914 10:28:47.598" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230914 10:28:47.597" endtime="20230914 10:28:47.599"/>
</kw>
<status status="PASS" starttime="20230914 10:28:36.159" endtime="20230914 10:28:47.599"/>
</kw>
<msg timestamp="20230914 10:28:47.599" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230914 10:28:36.158" endtime="20230914 10:28:47.599"/>
</kw>
<msg timestamp="20230914 10:28:47.600" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230914 10:28:36.157" endtime="20230914 10:28:47.600"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230914 10:28:47.601" endtime="20230914 10:28:47.601"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230914 10:28:47.613" level="INFO">Running command 'ozone sh bucket create /rootca-volume/rootca-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230914 10:28:58.513" level="INFO">${rc} = 0</msg>
<msg timestamp="20230914 10:28:58.513" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230914 10:28:47.605" endtime="20230914 10:28:58.513"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 10:28:58.516" level="INFO"/>
<status status="PASS" starttime="20230914 10:28:58.514" endtime="20230914 10:28:58.516"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230914 10:28:58.517" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230914 10:28:58.516" endtime="20230914 10:28:58.517"/>
</kw>
<status status="PASS" starttime="20230914 10:28:47.604" endtime="20230914 10:28:58.518"/>
</kw>
<msg timestamp="20230914 10:28:58.518" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230914 10:28:47.603" endtime="20230914 10:28:58.518"/>
</kw>
<msg timestamp="20230914 10:28:58.519" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230914 10:28:47.602" endtime="20230914 10:28:58.519"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230914 10:28:58.519" endtime="20230914 10:28:58.520"/>
</kw>
<tag>create-volume-and-bucket</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230914 10:28:36.156" endtime="20230914 10:28:58.520"/>
</test>
<test id="s1-s3-t2" name="Create key" line="34">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230914 10:28:58.528" level="INFO">Running command 'echo "rootca: key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20230914 10:28:58.530" level="INFO">${rc} = 0</msg>
<msg timestamp="20230914 10:28:58.530" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230914 10:28:58.524" endtime="20230914 10:28:58.530"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 10:28:58.532" level="INFO"/>
<status status="PASS" starttime="20230914 10:28:58.531" endtime="20230914 10:28:58.532"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230914 10:28:58.533" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230914 10:28:58.532" endtime="20230914 10:28:58.533"/>
</kw>
<status status="PASS" starttime="20230914 10:28:58.523" endtime="20230914 10:28:58.533"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230914 10:28:58.540" level="INFO">Running command 'ozone sh key put /rootca-volume/rootca-bucket/rootca-key /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230914 10:29:19.287" level="INFO">${rc} = 0</msg>
<msg timestamp="20230914 10:29:19.287" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230914 10:28:58.536" endtime="20230914 10:29:19.287"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 10:29:19.288" level="INFO"/>
<status status="PASS" starttime="20230914 10:29:19.288" endtime="20230914 10:29:19.289"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230914 10:29:19.307" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230914 10:29:19.289" endtime="20230914 10:29:19.308"/>
</kw>
<status status="PASS" starttime="20230914 10:28:58.535" endtime="20230914 10:29:19.309"/>
</kw>
<msg timestamp="20230914 10:29:19.309" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230914 10:28:58.535" endtime="20230914 10:29:19.310"/>
</kw>
<msg timestamp="20230914 10:29:19.311" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230914 10:28:58.534" endtime="20230914 10:29:19.311"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230914 10:29:19.311" endtime="20230914 10:29:19.313"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230914 10:29:19.320" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230914 10:29:19.339" level="INFO">${rc} = 0</msg>
<msg timestamp="20230914 10:29:19.339" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230914 10:29:19.314" endtime="20230914 10:29:19.339"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 10:29:19.341" level="INFO"/>
<status status="PASS" starttime="20230914 10:29:19.340" endtime="20230914 10:29:19.341"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230914 10:29:19.342" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230914 10:29:19.341" endtime="20230914 10:29:19.342"/>
</kw>
<status status="PASS" starttime="20230914 10:29:19.313" endtime="20230914 10:29:19.343"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230914 10:28:58.522" endtime="20230914 10:29:19.343"/>
</test>
<test id="s1-s3-t3" name="Read data from previously created key" line="40">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230914 10:29:19.351" level="INFO">${random} = 19515</msg>
<status status="PASS" starttime="20230914 10:29:19.349" endtime="20230914 10:29:19.351"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230914 10:29:19.362" level="INFO">Running command 'ozone sh key get /rootca-volume/rootca-bucket/rootca-key /tmp/key-19515 2&gt;&amp;1'.</msg>
<msg timestamp="20230914 10:29:34.415" level="INFO">${rc} = 0</msg>
<msg timestamp="20230914 10:29:34.415" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230914 10:29:19.355" endtime="20230914 10:29:34.415"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 10:29:34.417" level="INFO"/>
<status status="PASS" starttime="20230914 10:29:34.415" endtime="20230914 10:29:34.417"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230914 10:29:34.417" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230914 10:29:34.417" endtime="20230914 10:29:34.418"/>
</kw>
<status status="PASS" starttime="20230914 10:29:19.354" endtime="20230914 10:29:34.418"/>
</kw>
<msg timestamp="20230914 10:29:34.418" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230914 10:29:19.353" endtime="20230914 10:29:34.418"/>
</kw>
<msg timestamp="20230914 10:29:34.418" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230914 10:29:19.351" endtime="20230914 10:29:34.418"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230914 10:29:34.419" endtime="20230914 10:29:34.419"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230914 10:29:34.423" level="INFO">Running command 'cat /tmp/key-19515 2&gt;&amp;1'.</msg>
<msg timestamp="20230914 10:29:34.429" level="INFO">${rc} = 0</msg>
<msg timestamp="20230914 10:29:34.429" level="INFO">${output} = rootca: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230914 10:29:34.420" endtime="20230914 10:29:34.429"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 10:29:34.431" level="INFO">rootca: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230914 10:29:34.430" endtime="20230914 10:29:34.431"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230914 10:29:34.432" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230914 10:29:34.431" endtime="20230914 10:29:34.432"/>
</kw>
<msg timestamp="20230914 10:29:34.432" level="INFO">${output} = rootca: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230914 10:29:34.419" endtime="20230914 10:29:34.433"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230914 10:29:34.433" endtime="20230914 10:29:34.433"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230914 10:29:34.440" level="INFO">Running command 'rm /tmp/key-19515 2&gt;&amp;1'.</msg>
<msg timestamp="20230914 10:29:34.444" level="INFO">${rc} = 0</msg>
<msg timestamp="20230914 10:29:34.444" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230914 10:29:34.435" endtime="20230914 10:29:34.444"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 10:29:34.446" level="INFO"/>
<status status="PASS" starttime="20230914 10:29:34.444" endtime="20230914 10:29:34.446"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230914 10:29:34.447" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230914 10:29:34.446" endtime="20230914 10:29:34.447"/>
</kw>
<status status="PASS" starttime="20230914 10:29:34.434" endtime="20230914 10:29:34.447"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230914 10:29:19.347" endtime="20230914 10:29:34.448"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20230914 10:28:36.081" endtime="20230914 10:29:34.450"/>
</suite>
<suite id="s1-s4" name="Pipeline" source="/opt/hadoop/smoketest/admincli/pipeline.robot">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230914 10:30:02.683" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230914 10:30:02.691" level="INFO">${rc} = 0</msg>
<msg timestamp="20230914 10:30:02.691" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230914 10:30:02.679" endtime="20230914 10:30:02.691"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 10:30:02.692" level="INFO">scm</msg>
<status status="PASS" starttime="20230914 10:30:02.691" endtime="20230914 10:30:02.693"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230914 10:30:02.693" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230914 10:30:02.693" endtime="20230914 10:30:02.694"/>
</kw>
<status status="PASS" starttime="20230914 10:30:02.678" endtime="20230914 10:30:02.694"/>
</kw>
<msg timestamp="20230914 10:30:02.694" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230914 10:30:02.677" endtime="20230914 10:30:02.694"/>
</kw>
<msg timestamp="20230914 10:30:02.694" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230914 10:30:02.677" endtime="20230914 10:30:02.695"/>
</kw>
<msg timestamp="20230914 10:30:02.695" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230914 10:30:02.676" endtime="20230914 10:30:02.695"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230914 10:30:02.696" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230914 10:30:02.695" endtime="20230914 10:30:02.696"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230914 10:30:02.703" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20230914 10:30:02.840" level="INFO">${rc} = 0</msg>
<msg timestamp="20230914 10:30:02.840" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230914 10:30:02.700" endtime="20230914 10:30:02.840"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 10:30:02.843" level="INFO"/>
<status status="PASS" starttime="20230914 10:30:02.841" endtime="20230914 10:30:02.843"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230914 10:30:02.844" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230914 10:30:02.843" endtime="20230914 10:30:02.844"/>
</kw>
<status status="PASS" starttime="20230914 10:30:02.699" endtime="20230914 10:30:02.845"/>
</kw>
<msg timestamp="20230914 10:30:02.845" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230914 10:30:02.698" endtime="20230914 10:30:02.845"/>
</kw>
<status status="PASS" starttime="20230914 10:30:02.697" endtime="20230914 10:30:02.845"/>
</kw>
<status status="PASS" starttime="20230914 10:30:02.696" endtime="20230914 10:30:02.845"/>
</kw>
<status status="PASS" starttime="20230914 10:30:02.675" endtime="20230914 10:30:02.854"/>
</kw>
<status status="PASS" starttime="20230914 10:30:02.673" endtime="20230914 10:30:02.854"/>
</kw>
<test id="s1-s4-t1" name="Create pipeline" line="28">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin pipeline create</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230914 10:30:02.863" level="INFO">Running command 'ozone admin pipeline create 2&gt;&amp;1'.</msg>
<msg timestamp="20230914 10:30:13.554" level="INFO">${rc} = 0</msg>
<msg timestamp="20230914 10:30:13.554" level="INFO">${output} = PipelineID=1b70c7ff-9593-4216-a2e7-a622f6cb278e is created. Pipeline[ Id: 1b70c7ff-9593-4216-a2e7-a622f6cb278e, Nodes: 96f86c3c-7cc8-4ead-bd2c-dff8247061f3(ozonesecure-ha_datanode1_1.ozonesecure-ha_oz...</msg>
<status status="PASS" starttime="20230914 10:30:02.858" endtime="20230914 10:30:13.554"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 10:30:13.556" level="INFO">PipelineID=1b70c7ff-9593-4216-a2e7-a622f6cb278e is created. Pipeline[ Id: 1b70c7ff-9593-4216-a2e7-a622f6cb278e, Nodes: 96f86c3c-7cc8-4ead-bd2c-dff8247061f3(ozonesecure-ha_datanode1_1.ozonesecure-ha_ozone_net/172.25.0.102), ReplicationConfig: STANDALONE/ONE, State:OPEN, leaderId:, CreationTimestamp2023-09-14T10:30:13.003Z[UTC]]</msg>
<status status="PASS" starttime="20230914 10:30:13.555" endtime="20230914 10:30:13.556"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230914 10:30:13.557" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230914 10:30:13.556" endtime="20230914 10:30:13.557"/>
</kw>
<status status="PASS" starttime="20230914 10:30:02.858" endtime="20230914 10:30:13.557"/>
</kw>
<msg timestamp="20230914 10:30:13.558" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230914 10:30:02.857" endtime="20230914 10:30:13.558"/>
</kw>
<msg timestamp="20230914 10:30:13.558" level="INFO">${output} = PipelineID=1b70c7ff-9593-4216-a2e7-a622f6cb278e is created. Pipeline[ Id: 1b70c7ff-9593-4216-a2e7-a622f6cb278e, Nodes: 96f86c3c-7cc8-4ead-bd2c-dff8247061f3(ozonesecure-ha_datanode1_1.ozonesecure-ha_oz...</msg>
<status status="PASS" starttime="20230914 10:30:02.856" endtime="20230914 10:30:13.558"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>is created.</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230914 10:30:13.559" endtime="20230914 10:30:13.559"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>STANDALONE/ONE</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230914 10:30:13.559" endtime="20230914 10:30:13.560"/>
</kw>
<kw name="Execute" library="os">
<var>${pipeline}</var>
<arg>echo "${output}" | grep 'is created' | cut -f1 -d' ' | cut -f2 -d'='</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230914 10:30:13.565" level="INFO">Running command 'echo "PipelineID=1b70c7ff-9593-4216-a2e7-a622f6cb278e is created. Pipeline[ Id: 1b70c7ff-9593-4216-a2e7-a622f6cb278e, Nodes: 96f86c3c-7cc8-4ead-bd2c-dff8247061f3(ozonesecure-ha_datanode1_1.ozonesecure-ha_ozone_net/172.25.0.102), ReplicationConfig: STANDALONE/ONE, State:OPEN, leaderId:, CreationTimestamp2023-09-14T10:30:13.003Z[UTC]]" | grep 'is created' | cut -f1 -d' ' | cut -f2 -d'=' 2&gt;&amp;1'.</msg>
<msg timestamp="20230914 10:30:13.574" level="INFO">${rc} = 0</msg>
<msg timestamp="20230914 10:30:13.574" level="INFO">${output} = 1b70c7ff-9593-4216-a2e7-a622f6cb278e</msg>
<status status="PASS" starttime="20230914 10:30:13.562" endtime="20230914 10:30:13.574"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 10:30:13.576" level="INFO">1b70c7ff-9593-4216-a2e7-a622f6cb278e</msg>
<status status="PASS" starttime="20230914 10:30:13.574" endtime="20230914 10:30:13.576"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230914 10:30:13.577" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230914 10:30:13.576" endtime="20230914 10:30:13.577"/>
</kw>
<status status="PASS" starttime="20230914 10:30:13.561" endtime="20230914 10:30:13.577"/>
</kw>
<msg timestamp="20230914 10:30:13.577" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230914 10:30:13.561" endtime="20230914 10:30:13.578"/>
</kw>
<msg timestamp="20230914 10:30:13.578" level="INFO">${pipeline} = 1b70c7ff-9593-4216-a2e7-a622f6cb278e</msg>
<status status="PASS" starttime="20230914 10:30:13.560" endtime="20230914 10:30:13.578"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${PIPELINE}</arg>
<arg>${pipeline}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230914 10:30:13.579" level="INFO">${PIPELINE} = 1b70c7ff-9593-4216-a2e7-a622f6cb278e</msg>
<status status="PASS" starttime="20230914 10:30:13.579" endtime="20230914 10:30:13.580"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230914 10:30:02.855" endtime="20230914 10:30:13.580"/>
</test>
<test id="s1-s4-t2" name="List pipelines" line="35">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin pipeline list</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230914 10:30:13.588" level="INFO">Running command 'ozone admin pipeline list 2&gt;&amp;1'.</msg>
<msg timestamp="20230914 10:30:23.731" level="INFO">${rc} = 0</msg>
<msg timestamp="20230914 10:30:23.731" level="INFO">${output} = Pipeline[ Id: 31f2e860-12e4-48fe-8e8a-77436c1a99fe, Nodes: bdeed25b-6ba7-4c98-af63-201d6dc6aaee(ozonesecure-ha_datanode2_1.ozonesecure-ha_ozone_net/172.25.0.103), ReplicationConfig: RATIS/ONE, State:O...</msg>
<status status="PASS" starttime="20230914 10:30:13.585" endtime="20230914 10:30:23.731"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 10:30:23.733" level="INFO">Pipeline[ Id: 31f2e860-12e4-48fe-8e8a-77436c1a99fe, Nodes: bdeed25b-6ba7-4c98-af63-201d6dc6aaee(ozonesecure-ha_datanode2_1.ozonesecure-ha_ozone_net/172.25.0.103), ReplicationConfig: RATIS/ONE, State:OPEN, leaderId:bdeed25b-6ba7-4c98-af63-201d6dc6aaee, CreationTimestamp2023-09-14T10:25:11.231Z[UTC]]
Pipeline[ Id: b04957ee-6408-4d26-ac15-7f98965a5dd4, Nodes: 96f86c3c-7cc8-4ead-bd2c-dff8247061f3(ozonesecure-ha_datanode1_1.ozonesecure-ha_ozone_net/172.25.0.102)3dd0adc4-c718-40b4-8974-b42e536d8f11(ozonesecure-ha_datanode3_1.ozonesecure-ha_ozone_net/172.25.0.104)bdeed25b-6ba7-4c98-af63-201d6dc6aaee(ozonesecure-ha_datanode2_1.ozonesecure-ha_ozone_net/172.25.0.103), ReplicationConfig: RATIS/THREE, State:OPEN, leaderId:bdeed25b-6ba7-4c98-af63-201d6dc6aaee, CreationTimestamp2023-09-14T10:25:11.555Z[UTC]]
Pipeline[ Id: 1b70c7ff-9593-4216-a2e7-a622f6cb278e, Nodes: 96f86c3c-7cc8-4ead-bd2c-dff8247061f3(ozonesecure-ha_datanode1_1.ozonesecure-ha_ozone_net/172.25.0.102), ReplicationConfig: STANDALONE/ONE, State:OPEN, leaderId:, CreationTimestamp2023-09-14T10:30:13.003Z[UTC]]
Pipeline[ Id: ae63bca0-db9d-4f3c-a7e2-e6311e4c27e0, Nodes: 3dd0adc4-c718-40b4-8974-b42e536d8f11(ozonesecure-ha_datanode3_1.ozonesecure-ha_ozone_net/172.25.0.104), ReplicationConfig: RATIS/ONE, State:OPEN, leaderId:3dd0adc4-c718-40b4-8974-b42e536d8f11, CreationTimestamp2023-09-14T10:25:08.261Z[UTC]]
Pipeline[ Id: 61464e92-ccbd-4abe-afcf-51c705bb740a, Nodes: 3dd0adc4-c718-40b4-8974-b42e536d8f11(ozonesecure-ha_datanode3_1.ozonesecure-ha_ozone_net/172.25.0.104)bdeed25b-6ba7-4c98-af63-201d6dc6aaee(ozonesecure-ha_datanode2_1.ozonesecure-ha_ozone_net/172.25.0.103)96f86c3c-7cc8-4ead-bd2c-dff8247061f3(ozonesecure-ha_datanode1_1.ozonesecure-ha_ozone_net/172.25.0.102), ReplicationConfig: RATIS/THREE, State:OPEN, leaderId:96f86c3c-7cc8-4ead-bd2c-dff8247061f3, CreationTimestamp2023-09-14T10:25:11.412Z[UTC]]
Pipeline[ Id: 933a8275-713d-40b6-a516-d0cc2cf54994, Nodes: 96f86c3c-7cc8-4ead-bd2c-dff8247061f3(ozonesecure-ha_datanode1_1.ozonesecure-ha_ozone_net/172.25.0.102), ReplicationConfig: RATIS/ONE, State:OPEN, leaderId:96f86c3c-7cc8-4ead-bd2c-dff8247061f3, CreationTimestamp2023-09-14T10:25:06.292Z[UTC]]</msg>
<status status="PASS" starttime="20230914 10:30:23.732" endtime="20230914 10:30:23.733"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230914 10:30:23.734" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230914 10:30:23.733" endtime="20230914 10:30:23.734"/>
</kw>
<status status="PASS" starttime="20230914 10:30:13.584" endtime="20230914 10:30:23.734"/>
</kw>
<msg timestamp="20230914 10:30:23.735" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230914 10:30:13.584" endtime="20230914 10:30:23.735"/>
</kw>
<msg timestamp="20230914 10:30:23.735" level="INFO">${output} = Pipeline[ Id: 31f2e860-12e4-48fe-8e8a-77436c1a99fe, Nodes: bdeed25b-6ba7-4c98-af63-201d6dc6aaee(ozonesecure-ha_datanode2_1.ozonesecure-ha_ozone_net/172.25.0.103), ReplicationConfig: RATIS/ONE, State:O...</msg>
<status status="PASS" starttime="20230914 10:30:13.583" endtime="20230914 10:30:23.735"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>STANDALONE/ONE</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230914 10:30:23.736" endtime="20230914 10:30:23.736"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230914 10:30:13.581" endtime="20230914 10:30:23.736"/>
</test>
<test id="s1-s4-t3" name="List pipelines with explicit host" line="39">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin pipeline list --scm ${SCM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230914 10:30:23.745" level="INFO">Running command 'ozone admin pipeline list --scm scm1.org 2&gt;&amp;1'.</msg>
<msg timestamp="20230914 10:30:32.714" level="INFO">${rc} = 0</msg>
<msg timestamp="20230914 10:30:32.714" level="INFO">${output} = Pipeline[ Id: 31f2e860-12e4-48fe-8e8a-77436c1a99fe, Nodes: bdeed25b-6ba7-4c98-af63-201d6dc6aaee(ozonesecure-ha_datanode2_1.ozonesecure-ha_ozone_net/172.25.0.103), ReplicationConfig: RATIS/ONE, State:O...</msg>
<status status="PASS" starttime="20230914 10:30:23.741" endtime="20230914 10:30:32.715"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 10:30:32.722" level="INFO">Pipeline[ Id: 31f2e860-12e4-48fe-8e8a-77436c1a99fe, Nodes: bdeed25b-6ba7-4c98-af63-201d6dc6aaee(ozonesecure-ha_datanode2_1.ozonesecure-ha_ozone_net/172.25.0.103), ReplicationConfig: RATIS/ONE, State:OPEN, leaderId:bdeed25b-6ba7-4c98-af63-201d6dc6aaee, CreationTimestamp2023-09-14T10:25:11.231Z[UTC]]
Pipeline[ Id: b04957ee-6408-4d26-ac15-7f98965a5dd4, Nodes: 96f86c3c-7cc8-4ead-bd2c-dff8247061f3(ozonesecure-ha_datanode1_1.ozonesecure-ha_ozone_net/172.25.0.102)3dd0adc4-c718-40b4-8974-b42e536d8f11(ozonesecure-ha_datanode3_1.ozonesecure-ha_ozone_net/172.25.0.104)bdeed25b-6ba7-4c98-af63-201d6dc6aaee(ozonesecure-ha_datanode2_1.ozonesecure-ha_ozone_net/172.25.0.103), ReplicationConfig: RATIS/THREE, State:OPEN, leaderId:bdeed25b-6ba7-4c98-af63-201d6dc6aaee, CreationTimestamp2023-09-14T10:25:11.555Z[UTC]]
Pipeline[ Id: 1b70c7ff-9593-4216-a2e7-a622f6cb278e, Nodes: 96f86c3c-7cc8-4ead-bd2c-dff8247061f3(ozonesecure-ha_datanode1_1.ozonesecure-ha_ozone_net/172.25.0.102), ReplicationConfig: STANDALONE/ONE, State:OPEN, leaderId:, CreationTimestamp2023-09-14T10:30:13.003Z[UTC]]
Pipeline[ Id: ae63bca0-db9d-4f3c-a7e2-e6311e4c27e0, Nodes: 3dd0adc4-c718-40b4-8974-b42e536d8f11(ozonesecure-ha_datanode3_1.ozonesecure-ha_ozone_net/172.25.0.104), ReplicationConfig: RATIS/ONE, State:OPEN, leaderId:3dd0adc4-c718-40b4-8974-b42e536d8f11, CreationTimestamp2023-09-14T10:25:08.261Z[UTC]]
Pipeline[ Id: 61464e92-ccbd-4abe-afcf-51c705bb740a, Nodes: 3dd0adc4-c718-40b4-8974-b42e536d8f11(ozonesecure-ha_datanode3_1.ozonesecure-ha_ozone_net/172.25.0.104)bdeed25b-6ba7-4c98-af63-201d6dc6aaee(ozonesecure-ha_datanode2_1.ozonesecure-ha_ozone_net/172.25.0.103)96f86c3c-7cc8-4ead-bd2c-dff8247061f3(ozonesecure-ha_datanode1_1.ozonesecure-ha_ozone_net/172.25.0.102), ReplicationConfig: RATIS/THREE, State:OPEN, leaderId:96f86c3c-7cc8-4ead-bd2c-dff8247061f3, CreationTimestamp2023-09-14T10:25:11.412Z[UTC]]
Pipeline[ Id: 933a8275-713d-40b6-a516-d0cc2cf54994, Nodes: 96f86c3c-7cc8-4ead-bd2c-dff8247061f3(ozonesecure-ha_datanode1_1.ozonesecure-ha_ozone_net/172.25.0.102), ReplicationConfig: RATIS/ONE, State:OPEN, leaderId:96f86c3c-7cc8-4ead-bd2c-dff8247061f3, CreationTimestamp2023-09-14T10:25:06.292Z[UTC]]</msg>
<status status="PASS" starttime="20230914 10:30:32.718" endtime="20230914 10:30:32.724"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230914 10:30:32.730" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230914 10:30:32.724" endtime="20230914 10:30:32.731"/>
</kw>
<status status="PASS" starttime="20230914 10:30:23.740" endtime="20230914 10:30:32.731"/>
</kw>
<msg timestamp="20230914 10:30:32.731" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230914 10:30:23.740" endtime="20230914 10:30:32.731"/>
</kw>
<msg timestamp="20230914 10:30:32.742" level="INFO">${output} = Pipeline[ Id: 31f2e860-12e4-48fe-8e8a-77436c1a99fe, Nodes: bdeed25b-6ba7-4c98-af63-201d6dc6aaee(ozonesecure-ha_datanode2_1.ozonesecure-ha_ozone_net/172.25.0.103), ReplicationConfig: RATIS/ONE, State:O...</msg>
<status status="PASS" starttime="20230914 10:30:23.739" endtime="20230914 10:30:32.743"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>STANDALONE/ONE</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230914 10:30:32.745" endtime="20230914 10:30:32.748"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230914 10:30:23.738" endtime="20230914 10:30:32.748"/>
</test>
<test id="s1-s4-t4" name="Deactivate pipeline" line="43">
<kw name="Execute" library="os">
<arg>ozone admin pipeline deactivate "${PIPELINE}"</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230914 10:30:32.784" level="INFO">Running command 'ozone admin pipeline deactivate "1b70c7ff-9593-4216-a2e7-a622f6cb278e" 2&gt;&amp;1'.</msg>
<msg timestamp="20230914 10:30:43.689" level="INFO">${rc} = 0</msg>
<msg timestamp="20230914 10:30:43.690" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230914 10:30:32.775" endtime="20230914 10:30:43.691"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 10:30:43.707" level="INFO"/>
<status status="PASS" starttime="20230914 10:30:43.695" endtime="20230914 10:30:43.711"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230914 10:30:43.718" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230914 10:30:43.713" endtime="20230914 10:30:43.718"/>
</kw>
<status status="PASS" starttime="20230914 10:30:32.771" endtime="20230914 10:30:43.724"/>
</kw>
<msg timestamp="20230914 10:30:43.726" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230914 10:30:32.769" endtime="20230914 10:30:43.726"/>
</kw>
<status status="PASS" starttime="20230914 10:30:32.767" endtime="20230914 10:30:43.726"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin pipeline list | grep "${PIPELINE}"</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230914 10:30:43.751" level="INFO">Running command 'ozone admin pipeline list | grep "1b70c7ff-9593-4216-a2e7-a622f6cb278e" 2&gt;&amp;1'.</msg>
<msg timestamp="20230914 10:30:59.198" level="INFO">${rc} = 0</msg>
<msg timestamp="20230914 10:30:59.198" level="INFO">${output} = Pipeline[ Id: 1b70c7ff-9593-4216-a2e7-a622f6cb278e, Nodes: 96f86c3c-7cc8-4ead-bd2c-dff8247061f3(ozonesecure-ha_datanode1_1.ozonesecure-ha_ozone_net/172.25.0.102), ReplicationConfig: STANDALONE/ONE, St...</msg>
<status status="PASS" starttime="20230914 10:30:43.740" endtime="20230914 10:30:59.199"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 10:30:59.201" level="INFO">Pipeline[ Id: 1b70c7ff-9593-4216-a2e7-a622f6cb278e, Nodes: 96f86c3c-7cc8-4ead-bd2c-dff8247061f3(ozonesecure-ha_datanode1_1.ozonesecure-ha_ozone_net/172.25.0.102), ReplicationConfig: STANDALONE/ONE, State:DORMANT, leaderId:, CreationTimestamp2023-09-14T10:30:13.003Z[UTC]]</msg>
<status status="PASS" starttime="20230914 10:30:59.199" endtime="20230914 10:30:59.201"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230914 10:30:59.202" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230914 10:30:59.201" endtime="20230914 10:30:59.202"/>
</kw>
<status status="PASS" starttime="20230914 10:30:43.737" endtime="20230914 10:30:59.202"/>
</kw>
<msg timestamp="20230914 10:30:59.203" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230914 10:30:43.733" endtime="20230914 10:30:59.203"/>
</kw>
<msg timestamp="20230914 10:30:59.203" level="INFO">${output} = Pipeline[ Id: 1b70c7ff-9593-4216-a2e7-a622f6cb278e, Nodes: 96f86c3c-7cc8-4ead-bd2c-dff8247061f3(ozonesecure-ha_datanode1_1.ozonesecure-ha_ozone_net/172.25.0.102), ReplicationConfig: STANDALONE/ONE, St...</msg>
<status status="PASS" starttime="20230914 10:30:43.729" endtime="20230914 10:30:59.203"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>DORMANT</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230914 10:30:59.203" endtime="20230914 10:30:59.204"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230914 10:30:32.753" endtime="20230914 10:30:59.205"/>
</test>
<test id="s1-s4-t5" name="Activate pipeline" line="48">
<kw name="Execute" library="os">
<arg>ozone admin pipeline activate "${PIPELINE}"</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230914 10:30:59.213" level="INFO">Running command 'ozone admin pipeline activate "1b70c7ff-9593-4216-a2e7-a622f6cb278e" 2&gt;&amp;1'.</msg>
<msg timestamp="20230914 10:31:08.349" level="INFO">${rc} = 0</msg>
<msg timestamp="20230914 10:31:08.349" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230914 10:30:59.209" endtime="20230914 10:31:08.349"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 10:31:08.351" level="INFO"/>
<status status="PASS" starttime="20230914 10:31:08.350" endtime="20230914 10:31:08.352"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230914 10:31:08.353" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230914 10:31:08.352" endtime="20230914 10:31:08.353"/>
</kw>
<status status="PASS" starttime="20230914 10:30:59.208" endtime="20230914 10:31:08.353"/>
</kw>
<msg timestamp="20230914 10:31:08.353" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230914 10:30:59.208" endtime="20230914 10:31:08.354"/>
</kw>
<status status="PASS" starttime="20230914 10:30:59.207" endtime="20230914 10:31:08.354"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin pipeline list | grep "${PIPELINE}"</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230914 10:31:08.364" level="INFO">Running command 'ozone admin pipeline list | grep "1b70c7ff-9593-4216-a2e7-a622f6cb278e" 2&gt;&amp;1'.</msg>
<msg timestamp="20230914 10:31:18.374" level="INFO">${rc} = 0</msg>
<msg timestamp="20230914 10:31:18.374" level="INFO">${output} = Pipeline[ Id: 1b70c7ff-9593-4216-a2e7-a622f6cb278e, Nodes: 96f86c3c-7cc8-4ead-bd2c-dff8247061f3(ozonesecure-ha_datanode1_1.ozonesecure-ha_ozone_net/172.25.0.102), ReplicationConfig: STANDALONE/ONE, St...</msg>
<status status="PASS" starttime="20230914 10:31:08.357" endtime="20230914 10:31:18.374"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 10:31:18.376" level="INFO">Pipeline[ Id: 1b70c7ff-9593-4216-a2e7-a622f6cb278e, Nodes: 96f86c3c-7cc8-4ead-bd2c-dff8247061f3(ozonesecure-ha_datanode1_1.ozonesecure-ha_ozone_net/172.25.0.102), ReplicationConfig: STANDALONE/ONE, State:OPEN, leaderId:, CreationTimestamp2023-09-14T10:30:13.003Z[UTC]]</msg>
<status status="PASS" starttime="20230914 10:31:18.375" endtime="20230914 10:31:18.376"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230914 10:31:18.377" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230914 10:31:18.376" endtime="20230914 10:31:18.377"/>
</kw>
<status status="PASS" starttime="20230914 10:31:08.356" endtime="20230914 10:31:18.378"/>
</kw>
<msg timestamp="20230914 10:31:18.378" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230914 10:31:08.355" endtime="20230914 10:31:18.378"/>
</kw>
<msg timestamp="20230914 10:31:18.378" level="INFO">${output} = Pipeline[ Id: 1b70c7ff-9593-4216-a2e7-a622f6cb278e, Nodes: 96f86c3c-7cc8-4ead-bd2c-dff8247061f3(ozonesecure-ha_datanode1_1.ozonesecure-ha_ozone_net/172.25.0.102), ReplicationConfig: STANDALONE/ONE, St...</msg>
<status status="PASS" starttime="20230914 10:31:08.354" endtime="20230914 10:31:18.378"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>OPEN</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230914 10:31:18.379" endtime="20230914 10:31:18.379"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230914 10:30:59.206" endtime="20230914 10:31:18.380"/>
</test>
<test id="s1-s4-t6" name="Close pipeline" line="53">
<kw name="Execute" library="os">
<arg>ozone admin pipeline close "${PIPELINE}"</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230914 10:31:18.390" level="INFO">Running command 'ozone admin pipeline close "1b70c7ff-9593-4216-a2e7-a622f6cb278e" 2&gt;&amp;1'.</msg>
<msg timestamp="20230914 10:31:27.537" level="INFO">${rc} = 0</msg>
<msg timestamp="20230914 10:31:27.537" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230914 10:31:18.385" endtime="20230914 10:31:27.537"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 10:31:27.539" level="INFO"/>
<status status="PASS" starttime="20230914 10:31:27.538" endtime="20230914 10:31:27.539"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230914 10:31:27.540" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230914 10:31:27.539" endtime="20230914 10:31:27.540"/>
</kw>
<status status="PASS" starttime="20230914 10:31:18.385" endtime="20230914 10:31:27.540"/>
</kw>
<msg timestamp="20230914 10:31:27.540" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230914 10:31:18.384" endtime="20230914 10:31:27.541"/>
</kw>
<status status="PASS" starttime="20230914 10:31:18.383" endtime="20230914 10:31:27.541"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin pipeline list</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230914 10:31:27.547" level="INFO">Running command 'ozone admin pipeline list 2&gt;&amp;1'.</msg>
<msg timestamp="20230914 10:31:36.332" level="INFO">${rc} = 0</msg>
<msg timestamp="20230914 10:31:36.332" level="INFO">${output} = Pipeline[ Id: 31f2e860-12e4-48fe-8e8a-77436c1a99fe, Nodes: bdeed25b-6ba7-4c98-af63-201d6dc6aaee(ozonesecure-ha_datanode2_1.ozonesecure-ha_ozone_net/172.25.0.103), ReplicationConfig: RATIS/ONE, State:O...</msg>
<status status="PASS" starttime="20230914 10:31:27.543" endtime="20230914 10:31:36.332"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 10:31:36.335" level="INFO">Pipeline[ Id: 31f2e860-12e4-48fe-8e8a-77436c1a99fe, Nodes: bdeed25b-6ba7-4c98-af63-201d6dc6aaee(ozonesecure-ha_datanode2_1.ozonesecure-ha_ozone_net/172.25.0.103), ReplicationConfig: RATIS/ONE, State:OPEN, leaderId:bdeed25b-6ba7-4c98-af63-201d6dc6aaee, CreationTimestamp2023-09-14T10:25:11.231Z[UTC]]
Pipeline[ Id: b04957ee-6408-4d26-ac15-7f98965a5dd4, Nodes: 96f86c3c-7cc8-4ead-bd2c-dff8247061f3(ozonesecure-ha_datanode1_1.ozonesecure-ha_ozone_net/172.25.0.102)3dd0adc4-c718-40b4-8974-b42e536d8f11(ozonesecure-ha_datanode3_1.ozonesecure-ha_ozone_net/172.25.0.104)bdeed25b-6ba7-4c98-af63-201d6dc6aaee(ozonesecure-ha_datanode2_1.ozonesecure-ha_ozone_net/172.25.0.103), ReplicationConfig: RATIS/THREE, State:OPEN, leaderId:bdeed25b-6ba7-4c98-af63-201d6dc6aaee, CreationTimestamp2023-09-14T10:25:11.555Z[UTC]]
Pipeline[ Id: 1b70c7ff-9593-4216-a2e7-a622f6cb278e, Nodes: 96f86c3c-7cc8-4ead-bd2c-dff8247061f3(ozonesecure-ha_datanode1_1.ozonesecure-ha_ozone_net/172.25.0.102), ReplicationConfig: STANDALONE/ONE, State:CLOSED, leaderId:, CreationTimestamp2023-09-14T10:30:13.003Z[UTC]]
Pipeline[ Id: ae63bca0-db9d-4f3c-a7e2-e6311e4c27e0, Nodes: 3dd0adc4-c718-40b4-8974-b42e536d8f11(ozonesecure-ha_datanode3_1.ozonesecure-ha_ozone_net/172.25.0.104), ReplicationConfig: RATIS/ONE, State:OPEN, leaderId:3dd0adc4-c718-40b4-8974-b42e536d8f11, CreationTimestamp2023-09-14T10:25:08.261Z[UTC]]
Pipeline[ Id: 61464e92-ccbd-4abe-afcf-51c705bb740a, Nodes: 3dd0adc4-c718-40b4-8974-b42e536d8f11(ozonesecure-ha_datanode3_1.ozonesecure-ha_ozone_net/172.25.0.104)bdeed25b-6ba7-4c98-af63-201d6dc6aaee(ozonesecure-ha_datanode2_1.ozonesecure-ha_ozone_net/172.25.0.103)96f86c3c-7cc8-4ead-bd2c-dff8247061f3(ozonesecure-ha_datanode1_1.ozonesecure-ha_ozone_net/172.25.0.102), ReplicationConfig: RATIS/THREE, State:OPEN, leaderId:96f86c3c-7cc8-4ead-bd2c-dff8247061f3, CreationTimestamp2023-09-14T10:25:11.412Z[UTC]]
Pipeline[ Id: 933a8275-713d-40b6-a516-d0cc2cf54994, Nodes: 96f86c3c-7cc8-4ead-bd2c-dff8247061f3(ozonesecure-ha_datanode1_1.ozonesecure-ha_ozone_net/172.25.0.102), ReplicationConfig: RATIS/ONE, State:OPEN, leaderId:96f86c3c-7cc8-4ead-bd2c-dff8247061f3, CreationTimestamp2023-09-14T10:25:06.292Z[UTC]]</msg>
<status status="PASS" starttime="20230914 10:31:36.333" endtime="20230914 10:31:36.335"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230914 10:31:36.336" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230914 10:31:36.335" endtime="20230914 10:31:36.336"/>
</kw>
<status status="PASS" starttime="20230914 10:31:27.542" endtime="20230914 10:31:36.337"/>
</kw>
<msg timestamp="20230914 10:31:36.337" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230914 10:31:27.542" endtime="20230914 10:31:36.337"/>
</kw>
<msg timestamp="20230914 10:31:36.338" level="INFO">${output} = Pipeline[ Id: 31f2e860-12e4-48fe-8e8a-77436c1a99fe, Nodes: bdeed25b-6ba7-4c98-af63-201d6dc6aaee(ozonesecure-ha_datanode2_1.ozonesecure-ha_ozone_net/172.25.0.103), ReplicationConfig: RATIS/ONE, State:O...</msg>
<status status="PASS" starttime="20230914 10:31:27.541" endtime="20230914 10:31:36.338"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${PIPELINE}' not in '''${output}'''</arg>
<arg>Pipeline already scrubbed</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20230914 10:31:36.338" endtime="20230914 10:31:36.339"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${output}</arg>
<arg>${PIPELINE}.*CLOSED</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20230914 10:31:36.339" endtime="20230914 10:31:36.340"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230914 10:31:18.382" endtime="20230914 10:31:36.341"/>
</test>
<test id="s1-s4-t7" name="Incomplete command" line="59">
<kw name="Execute And Ignore Error" library="os">
<var>${output}</var>
<arg>ozone admin pipeline</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230914 10:31:36.347" level="INFO">Running command 'ozone admin pipeline 2&gt;&amp;1'.</msg>
<msg timestamp="20230914 10:31:41.806" level="INFO">${rc} = 255</msg>
<msg timestamp="20230914 10:31:41.806" level="INFO">${output} = Incomplete command
Usage: ozone admin pipeline [-hV] [COMMAND]
Pipeline specific operations
  -h, --help      Show this help message and exit.
  -V, --version   Print version information and exit.
Com...</msg>
<status status="PASS" starttime="20230914 10:31:36.343" endtime="20230914 10:31:41.806"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 10:31:41.808" level="INFO">Incomplete command
Usage: ozone admin pipeline [-hV] [COMMAND]
Pipeline specific operations
  -h, --help      Show this help message and exit.
  -V, --version   Print version information and exit.
Commands:
  list        List all active pipelines
  activate    Activates the given Pipeline
  deactivate  Deactivates the given Pipeline
  create      create pipeline
  close       Close pipeline</msg>
<status status="PASS" starttime="20230914 10:31:41.807" endtime="20230914 10:31:41.808"/>
</kw>
<msg timestamp="20230914 10:31:41.809" level="INFO">${output} = Incomplete command
Usage: ozone admin pipeline [-hV] [COMMAND]
Pipeline specific operations
  -h, --help      Show this help message and exit.
  -V, --version   Print version information and exit.
Com...</msg>
<status status="PASS" starttime="20230914 10:31:36.342" endtime="20230914 10:31:41.809"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Incomplete command</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230914 10:31:41.809" endtime="20230914 10:31:41.810"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>close</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230914 10:31:41.810" endtime="20230914 10:31:41.810"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>create</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230914 10:31:41.810" endtime="20230914 10:31:41.811"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>deactivate</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230914 10:31:41.811" endtime="20230914 10:31:41.812"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>list</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230914 10:31:41.812" endtime="20230914 10:31:41.813"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230914 10:31:36.342" endtime="20230914 10:31:41.813"/>
</test>
<doc>Test ozone admin pipeline command</doc>
<status status="PASS" starttime="20230914 10:30:02.557" endtime="20230914 10:31:41.815"/>
</suite>
<suite id="s1-s5" name="Kinit" source="/opt/hadoop/smoketest/kinit.robot">
<test id="s1-s5-t1" name="Kinit" line="27">
<kw name="Kinit test user" library="commonlib">
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230914 10:32:41.618" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230914 10:32:41.626" level="INFO">${rc} = 0</msg>
<msg timestamp="20230914 10:32:41.627" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230914 10:32:41.615" endtime="20230914 10:32:41.627"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 10:32:41.629" level="INFO">scm</msg>
<status status="PASS" starttime="20230914 10:32:41.628" endtime="20230914 10:32:41.630"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230914 10:32:41.631" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230914 10:32:41.630" endtime="20230914 10:32:41.631"/>
</kw>
<status status="PASS" starttime="20230914 10:32:41.614" endtime="20230914 10:32:41.632"/>
</kw>
<msg timestamp="20230914 10:32:41.632" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230914 10:32:41.613" endtime="20230914 10:32:41.632"/>
</kw>
<msg timestamp="20230914 10:32:41.633" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230914 10:32:41.612" endtime="20230914 10:32:41.633"/>
</kw>
<msg timestamp="20230914 10:32:41.634" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230914 10:32:41.611" endtime="20230914 10:32:41.634"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230914 10:32:41.638" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230914 10:32:41.634" endtime="20230914 10:32:41.638"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230914 10:32:41.647" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20230914 10:32:41.830" level="INFO">${rc} = 0</msg>
<msg timestamp="20230914 10:32:41.830" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230914 10:32:41.643" endtime="20230914 10:32:41.830"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 10:32:41.832" level="INFO"/>
<status status="PASS" starttime="20230914 10:32:41.831" endtime="20230914 10:32:41.832"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230914 10:32:41.833" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230914 10:32:41.832" endtime="20230914 10:32:41.833"/>
</kw>
<status status="PASS" starttime="20230914 10:32:41.641" endtime="20230914 10:32:41.833"/>
</kw>
<msg timestamp="20230914 10:32:41.834" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230914 10:32:41.641" endtime="20230914 10:32:41.834"/>
</kw>
<status status="PASS" starttime="20230914 10:32:41.639" endtime="20230914 10:32:41.834"/>
</kw>
<status status="PASS" starttime="20230914 10:32:41.638" endtime="20230914 10:32:41.834"/>
</kw>
<status status="PASS" starttime="20230914 10:32:41.610" endtime="20230914 10:32:41.834"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20230914 10:32:41.609" endtime="20230914 10:32:41.835"/>
</test>
<doc>Kinit test user</doc>
<status status="PASS" starttime="20230914 10:32:41.502" endtime="20230914 10:32:41.837"/>
</suite>
<suite id="s1-s6" name="Root-Ca-Rotation-Client-Checks" source="/opt/hadoop/smoketest/certrotation/root-ca-rotation-client-checks.robot">
<test id="s1-s6-t1" name="Create a volume and bucket" line="27">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230914 10:33:49.901" level="INFO">Running command 'ozone sh volume create rootca2-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20230914 10:34:01.677" level="INFO">${rc} = 0</msg>
<msg timestamp="20230914 10:34:01.677" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230914 10:33:49.898" endtime="20230914 10:34:01.677"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 10:34:01.679" level="INFO"/>
<status status="PASS" starttime="20230914 10:34:01.678" endtime="20230914 10:34:01.679"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230914 10:34:01.680" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230914 10:34:01.679" endtime="20230914 10:34:01.680"/>
</kw>
<status status="PASS" starttime="20230914 10:33:49.897" endtime="20230914 10:34:01.680"/>
</kw>
<msg timestamp="20230914 10:34:01.681" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230914 10:33:49.896" endtime="20230914 10:34:01.681"/>
</kw>
<msg timestamp="20230914 10:34:01.681" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230914 10:33:49.895" endtime="20230914 10:34:01.681"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230914 10:34:01.681" endtime="20230914 10:34:01.682"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230914 10:34:01.688" level="INFO">Running command 'ozone sh bucket create /rootca2-volume/rootca2-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230914 10:34:12.954" level="INFO">${rc} = 0</msg>
<msg timestamp="20230914 10:34:12.954" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230914 10:34:01.685" endtime="20230914 10:34:12.955"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 10:34:12.960" level="INFO"/>
<status status="PASS" starttime="20230914 10:34:12.958" endtime="20230914 10:34:12.961"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230914 10:34:12.962" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230914 10:34:12.961" endtime="20230914 10:34:12.962"/>
</kw>
<status status="PASS" starttime="20230914 10:34:01.683" endtime="20230914 10:34:12.963"/>
</kw>
<msg timestamp="20230914 10:34:12.963" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230914 10:34:01.683" endtime="20230914 10:34:12.963"/>
</kw>
<msg timestamp="20230914 10:34:12.963" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230914 10:34:01.682" endtime="20230914 10:34:12.966"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230914 10:34:12.967" endtime="20230914 10:34:12.967"/>
</kw>
<tag>create-volume-and-bucket</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230914 10:33:49.894" endtime="20230914 10:34:12.968"/>
</test>
<test id="s1-s6-t2" name="Create key" line="34">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230914 10:34:12.981" level="INFO">Running command 'echo "rootca2: key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20230914 10:34:12.985" level="INFO">${rc} = 0</msg>
<msg timestamp="20230914 10:34:12.985" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230914 10:34:12.974" endtime="20230914 10:34:12.985"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 10:34:12.987" level="INFO"/>
<status status="PASS" starttime="20230914 10:34:12.986" endtime="20230914 10:34:12.988"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230914 10:34:12.990" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230914 10:34:12.988" endtime="20230914 10:34:12.991"/>
</kw>
<status status="PASS" starttime="20230914 10:34:12.973" endtime="20230914 10:34:12.991"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230914 10:34:13.000" level="INFO">Running command 'ozone sh key put /rootca2-volume/rootca2-bucket/rootca2-key /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230914 10:34:30.814" level="INFO">${rc} = 0</msg>
<msg timestamp="20230914 10:34:30.814" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230914 10:34:12.995" endtime="20230914 10:34:30.814"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 10:34:30.816" level="INFO"/>
<status status="PASS" starttime="20230914 10:34:30.815" endtime="20230914 10:34:30.816"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230914 10:34:30.818" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230914 10:34:30.817" endtime="20230914 10:34:30.818"/>
</kw>
<status status="PASS" starttime="20230914 10:34:12.994" endtime="20230914 10:34:30.818"/>
</kw>
<msg timestamp="20230914 10:34:30.819" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230914 10:34:12.993" endtime="20230914 10:34:30.819"/>
</kw>
<msg timestamp="20230914 10:34:30.819" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230914 10:34:12.992" endtime="20230914 10:34:30.819"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230914 10:34:30.819" endtime="20230914 10:34:30.820"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230914 10:34:30.826" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230914 10:34:30.832" level="INFO">${rc} = 0</msg>
<msg timestamp="20230914 10:34:30.832" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230914 10:34:30.822" endtime="20230914 10:34:30.832"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 10:34:30.834" level="INFO"/>
<status status="PASS" starttime="20230914 10:34:30.833" endtime="20230914 10:34:30.835"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230914 10:34:30.836" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230914 10:34:30.835" endtime="20230914 10:34:30.836"/>
</kw>
<status status="PASS" starttime="20230914 10:34:30.821" endtime="20230914 10:34:30.836"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230914 10:34:12.971" endtime="20230914 10:34:30.837"/>
</test>
<test id="s1-s6-t3" name="Read data from previously created key" line="40">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230914 10:34:30.841" level="INFO">${random} = 85980</msg>
<status status="PASS" starttime="20230914 10:34:30.840" endtime="20230914 10:34:30.841"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230914 10:34:30.846" level="INFO">Running command 'ozone sh key get /rootca2-volume/rootca2-bucket/rootca2-key /tmp/key-85980 2&gt;&amp;1'.</msg>
<msg timestamp="20230914 10:34:48.405" level="INFO">${rc} = 0</msg>
<msg timestamp="20230914 10:34:48.405" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230914 10:34:30.843" endtime="20230914 10:34:48.405"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 10:34:48.408" level="INFO"/>
<status status="PASS" starttime="20230914 10:34:48.407" endtime="20230914 10:34:48.409"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230914 10:34:48.410" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230914 10:34:48.409" endtime="20230914 10:34:48.410"/>
</kw>
<status status="PASS" starttime="20230914 10:34:30.843" endtime="20230914 10:34:48.411"/>
</kw>
<msg timestamp="20230914 10:34:48.412" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230914 10:34:30.842" endtime="20230914 10:34:48.412"/>
</kw>
<msg timestamp="20230914 10:34:48.412" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230914 10:34:30.841" endtime="20230914 10:34:48.413"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230914 10:34:48.414" endtime="20230914 10:34:48.415"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230914 10:34:48.425" level="INFO">Running command 'cat /tmp/key-85980 2&gt;&amp;1'.</msg>
<msg timestamp="20230914 10:34:48.443" level="INFO">${rc} = 0</msg>
<msg timestamp="20230914 10:34:48.443" level="INFO">${output} = rootca2: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230914 10:34:48.417" endtime="20230914 10:34:48.443"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 10:34:48.446" level="INFO">rootca2: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230914 10:34:48.444" endtime="20230914 10:34:48.446"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230914 10:34:48.449" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230914 10:34:48.447" endtime="20230914 10:34:48.449"/>
</kw>
<msg timestamp="20230914 10:34:48.450" level="INFO">${output} = rootca2: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230914 10:34:48.415" endtime="20230914 10:34:48.450"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230914 10:34:48.451" endtime="20230914 10:34:48.454"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230914 10:34:48.465" level="INFO">Running command 'rm /tmp/key-85980 2&gt;&amp;1'.</msg>
<msg timestamp="20230914 10:34:48.471" level="INFO">${rc} = 0</msg>
<msg timestamp="20230914 10:34:48.471" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230914 10:34:48.456" endtime="20230914 10:34:48.471"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 10:34:48.473" level="INFO"/>
<status status="PASS" starttime="20230914 10:34:48.472" endtime="20230914 10:34:48.473"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230914 10:34:48.474" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230914 10:34:48.473" endtime="20230914 10:34:48.475"/>
</kw>
<status status="PASS" starttime="20230914 10:34:48.455" endtime="20230914 10:34:48.475"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230914 10:34:30.839" endtime="20230914 10:34:48.475"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20230914 10:33:49.792" endtime="20230914 10:34:48.478"/>
</suite>
<suite id="s1-s7" name="Scm-Leader-Transfer" source="/opt/hadoop/smoketest/scmha/scm-leader-transfer.robot">
<test id="s1-s7-t1" name="Transfer Leadership" line="47">
<kw name="Get SCM Leader Node">
<var>${leaderSCM}</var>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin scm roles --service-id=scmservice</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230914 10:34:54.939" level="INFO">Running command 'ozone admin scm roles --service-id=scmservice 2&gt;&amp;1'.</msg>
<msg timestamp="20230914 10:35:06.059" level="INFO">${rc} = 0</msg>
<msg timestamp="20230914 10:35:06.059" level="INFO">${output} = scm3.org:9894:FOLLOWER:20b51c8d-3efe-461a-b173-2cf8dda7a22b:172.25.0.118
scm4.org:9894:FOLLOWER:af27da28-318e-4f23-a544-24ff353c0273:172.25.0.120
scm1.org:9894:FOLLOWER:efbdf6b5-6cd0-4195-946f-fda01f4...</msg>
<status status="PASS" starttime="20230914 10:34:54.933" endtime="20230914 10:35:06.059"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 10:35:06.061" level="INFO">scm3.org:9894:FOLLOWER:20b51c8d-3efe-461a-b173-2cf8dda7a22b:172.25.0.118
scm4.org:9894:FOLLOWER:af27da28-318e-4f23-a544-24ff353c0273:172.25.0.120
scm1.org:9894:FOLLOWER:efbdf6b5-6cd0-4195-946f-fda01f4ced8a:172.25.0.116
scm2.org:9894:LEADER:c2683c6c-c151-4b82-a768-352378f44b9d:172.25.0.117</msg>
<status status="PASS" starttime="20230914 10:35:06.060" endtime="20230914 10:35:06.061"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230914 10:35:06.062" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230914 10:35:06.061" endtime="20230914 10:35:06.063"/>
</kw>
<status status="PASS" starttime="20230914 10:34:54.932" endtime="20230914 10:35:06.063"/>
</kw>
<msg timestamp="20230914 10:35:06.063" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230914 10:34:54.932" endtime="20230914 10:35:06.063"/>
</kw>
<msg timestamp="20230914 10:35:06.064" level="INFO">${result} = scm3.org:9894:FOLLOWER:20b51c8d-3efe-461a-b173-2cf8dda7a22b:172.25.0.118
scm4.org:9894:FOLLOWER:af27da28-318e-4f23-a544-24ff353c0273:172.25.0.120
scm1.org:9894:FOLLOWER:efbdf6b5-6cd0-4195-946f-fda01f4...</msg>
<status status="PASS" starttime="20230914 10:34:54.931" endtime="20230914 10:35:06.064"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 10:35:06.064" level="INFO">scm3.org:9894:FOLLOWER:20b51c8d-3efe-461a-b173-2cf8dda7a22b:172.25.0.118
scm4.org:9894:FOLLOWER:af27da28-318e-4f23-a544-24ff353c0273:172.25.0.120
scm1.org:9894:FOLLOWER:efbdf6b5-6cd0-4195-946f-fda01f4ced8a:172.25.0.116
scm2.org:9894:LEADER:c2683c6c-c151-4b82-a768-352378f44b9d:172.25.0.117</msg>
<status status="PASS" starttime="20230914 10:35:06.064" endtime="20230914 10:35:06.065"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>LEADER</arg>
<arg>1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230914 10:35:06.065" endtime="20230914 10:35:06.066"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>FOLLOWER</arg>
<arg>2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230914 10:35:06.066" endtime="20230914 10:35:06.067"/>
</kw>
<kw name="Get Lines Containing String" library="String">
<var>${scmLine}</var>
<arg>${result}</arg>
<arg>LEADER</arg>
<doc>Returns lines of the given ``string`` that contain the ``pattern``.</doc>
<msg timestamp="20230914 10:35:06.068" level="INFO">1 out of 4 lines matched</msg>
<msg timestamp="20230914 10:35:06.068" level="INFO">${scmLine} = scm2.org:9894:LEADER:c2683c6c-c151-4b82-a768-352378f44b9d:172.25.0.117</msg>
<status status="PASS" starttime="20230914 10:35:06.067" endtime="20230914 10:35:06.068"/>
</kw>
<kw name="Split String" library="String">
<var>${splits}</var>
<arg>${scmLine}</arg>
<arg>:</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20230914 10:35:06.069" level="INFO">${splits} = ['scm2.org', '9894', 'LEADER', 'c2683c6c-c151-4b82-a768-352378f44b9d', '172.25.0.117']</msg>
<status status="PASS" starttime="20230914 10:35:06.068" endtime="20230914 10:35:06.069"/>
</kw>
<kw name="Strip String" library="String">
<var>${leaderSCM}</var>
<arg>${splits[3]}</arg>
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<msg timestamp="20230914 10:35:06.071" level="INFO">${leaderSCM} = c2683c6c-c151-4b82-a768-352378f44b9d</msg>
<status status="PASS" starttime="20230914 10:35:06.069" endtime="20230914 10:35:06.071"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Leader SCM: ${leaderSCM}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 10:35:06.071" level="INFO">Leader SCM: c2683c6c-c151-4b82-a768-352378f44b9d</msg>
<status status="PASS" starttime="20230914 10:35:06.071" endtime="20230914 10:35:06.072"/>
</kw>
<msg timestamp="20230914 10:35:06.072" level="INFO">${leaderSCM} = c2683c6c-c151-4b82-a768-352378f44b9d</msg>
<status status="PASS" starttime="20230914 10:34:54.930" endtime="20230914 10:35:06.072"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Leader SCM: ${leaderSCM}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 10:35:06.072" level="INFO">Leader SCM: c2683c6c-c151-4b82-a768-352378f44b9d</msg>
<status status="PASS" starttime="20230914 10:35:06.072" endtime="20230914 10:35:06.073"/>
</kw>
<kw name="Get SCM UUID">
<var>${target_scm_uuid}</var>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin scm roles --service-id=scmservice</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230914 10:35:06.079" level="INFO">Running command 'ozone admin scm roles --service-id=scmservice 2&gt;&amp;1'.</msg>
<msg timestamp="20230914 10:35:16.757" level="INFO">${rc} = 0</msg>
<msg timestamp="20230914 10:35:16.757" level="INFO">${output} = scm3.org:9894:FOLLOWER:20b51c8d-3efe-461a-b173-2cf8dda7a22b:172.25.0.118
scm4.org:9894:FOLLOWER:af27da28-318e-4f23-a544-24ff353c0273:172.25.0.120
scm1.org:9894:FOLLOWER:efbdf6b5-6cd0-4195-946f-fda01f4...</msg>
<status status="PASS" starttime="20230914 10:35:06.075" endtime="20230914 10:35:16.758"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 10:35:16.760" level="INFO">scm3.org:9894:FOLLOWER:20b51c8d-3efe-461a-b173-2cf8dda7a22b:172.25.0.118
scm4.org:9894:FOLLOWER:af27da28-318e-4f23-a544-24ff353c0273:172.25.0.120
scm1.org:9894:FOLLOWER:efbdf6b5-6cd0-4195-946f-fda01f4ced8a:172.25.0.116
scm2.org:9894:LEADER:c2683c6c-c151-4b82-a768-352378f44b9d:172.25.0.117</msg>
<status status="PASS" starttime="20230914 10:35:16.758" endtime="20230914 10:35:16.760"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230914 10:35:16.761" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230914 10:35:16.760" endtime="20230914 10:35:16.761"/>
</kw>
<status status="PASS" starttime="20230914 10:35:06.075" endtime="20230914 10:35:16.762"/>
</kw>
<msg timestamp="20230914 10:35:16.762" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230914 10:35:06.074" endtime="20230914 10:35:16.762"/>
</kw>
<msg timestamp="20230914 10:35:16.762" level="INFO">${result} = scm3.org:9894:FOLLOWER:20b51c8d-3efe-461a-b173-2cf8dda7a22b:172.25.0.118
scm4.org:9894:FOLLOWER:af27da28-318e-4f23-a544-24ff353c0273:172.25.0.120
scm1.org:9894:FOLLOWER:efbdf6b5-6cd0-4195-946f-fda01f4...</msg>
<status status="PASS" starttime="20230914 10:35:06.073" endtime="20230914 10:35:16.762"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 10:35:16.763" level="INFO">scm3.org:9894:FOLLOWER:20b51c8d-3efe-461a-b173-2cf8dda7a22b:172.25.0.118
scm4.org:9894:FOLLOWER:af27da28-318e-4f23-a544-24ff353c0273:172.25.0.120
scm1.org:9894:FOLLOWER:efbdf6b5-6cd0-4195-946f-fda01f4ced8a:172.25.0.116
scm2.org:9894:LEADER:c2683c6c-c151-4b82-a768-352378f44b9d:172.25.0.117</msg>
<status status="PASS" starttime="20230914 10:35:16.763" endtime="20230914 10:35:16.763"/>
</kw>
<kw name="Get Lines Containing String" library="String">
<var>${scm_line}</var>
<arg>${result}</arg>
<arg>${TARGET_SCM}</arg>
<doc>Returns lines of the given ``string`` that contain the ``pattern``.</doc>
<msg timestamp="20230914 10:35:16.764" level="INFO">1 out of 4 lines matched</msg>
<msg timestamp="20230914 10:35:16.764" level="INFO">${scm_line} = scm4.org:9894:FOLLOWER:af27da28-318e-4f23-a544-24ff353c0273:172.25.0.120</msg>
<status status="PASS" starttime="20230914 10:35:16.763" endtime="20230914 10:35:16.764"/>
</kw>
<kw name="Split String" library="String">
<var>${scm_split}</var>
<arg>${scm_line}</arg>
<arg>:</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20230914 10:35:16.765" level="INFO">${scm_split} = ['scm4.org', '9894', 'FOLLOWER', 'af27da28-318e-4f23-a544-24ff353c0273', '172.25.0.120']</msg>
<status status="PASS" starttime="20230914 10:35:16.764" endtime="20230914 10:35:16.765"/>
</kw>
<kw name="Strip String" library="String">
<var>${scm_uuid}</var>
<arg>${scm_split[3]}</arg>
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<msg timestamp="20230914 10:35:16.767" level="INFO">${scm_uuid} = af27da28-318e-4f23-a544-24ff353c0273</msg>
<status status="PASS" starttime="20230914 10:35:16.765" endtime="20230914 10:35:16.767"/>
</kw>
<msg timestamp="20230914 10:35:16.767" level="INFO">${target_scm_uuid} = af27da28-318e-4f23-a544-24ff353c0273</msg>
<status status="PASS" starttime="20230914 10:35:06.073" endtime="20230914 10:35:16.767"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin scm transfer --service-id=scmservice -n ${target_scm_uuid}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230914 10:35:16.775" level="INFO">Running command 'ozone admin scm transfer --service-id=scmservice -n af27da28-318e-4f23-a544-24ff353c0273 2&gt;&amp;1'.</msg>
<msg timestamp="20230914 10:35:30.224" level="INFO">${rc} = 0</msg>
<msg timestamp="20230914 10:35:30.225" level="INFO">${output} = Transfer leadership successfully to af27da28-318e-4f23-a544-24ff353c0273.</msg>
<status status="PASS" starttime="20230914 10:35:16.770" endtime="20230914 10:35:30.225"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 10:35:30.227" level="INFO">Transfer leadership successfully to af27da28-318e-4f23-a544-24ff353c0273.</msg>
<status status="PASS" starttime="20230914 10:35:30.226" endtime="20230914 10:35:30.228"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230914 10:35:30.229" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230914 10:35:30.228" endtime="20230914 10:35:30.229"/>
</kw>
<status status="PASS" starttime="20230914 10:35:16.769" endtime="20230914 10:35:30.229"/>
</kw>
<msg timestamp="20230914 10:35:30.230" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230914 10:35:16.769" endtime="20230914 10:35:30.230"/>
</kw>
<msg timestamp="20230914 10:35:30.230" level="INFO">${result} = Transfer leadership successfully to af27da28-318e-4f23-a544-24ff353c0273.</msg>
<status status="PASS" starttime="20230914 10:35:16.768" endtime="20230914 10:35:30.230"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 10:35:30.231" level="INFO">Transfer leadership successfully to af27da28-318e-4f23-a544-24ff353c0273.</msg>
<status status="PASS" starttime="20230914 10:35:30.231" endtime="20230914 10:35:30.231"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Transfer leadership successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230914 10:35:30.232" endtime="20230914 10:35:30.233"/>
</kw>
<kw name="Get SCM Leader Node">
<var>${newLeaderSCM}</var>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin scm roles --service-id=scmservice</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230914 10:35:30.239" level="INFO">Running command 'ozone admin scm roles --service-id=scmservice 2&gt;&amp;1'.</msg>
<msg timestamp="20230914 10:35:41.894" level="INFO">${rc} = 0</msg>
<msg timestamp="20230914 10:35:41.894" level="INFO">${output} = scm3.org:9894:FOLLOWER:20b51c8d-3efe-461a-b173-2cf8dda7a22b:172.25.0.118
scm4.org:9894:LEADER:af27da28-318e-4f23-a544-24ff353c0273:172.25.0.120
scm1.org:9894:FOLLOWER:efbdf6b5-6cd0-4195-946f-fda01f4ce...</msg>
<status status="PASS" starttime="20230914 10:35:30.236" endtime="20230914 10:35:41.895"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 10:35:41.897" level="INFO">scm3.org:9894:FOLLOWER:20b51c8d-3efe-461a-b173-2cf8dda7a22b:172.25.0.118
scm4.org:9894:LEADER:af27da28-318e-4f23-a544-24ff353c0273:172.25.0.120
scm1.org:9894:FOLLOWER:efbdf6b5-6cd0-4195-946f-fda01f4ced8a:172.25.0.116
scm2.org:9894:FOLLOWER:c2683c6c-c151-4b82-a768-352378f44b9d:172.25.0.117</msg>
<status status="PASS" starttime="20230914 10:35:41.895" endtime="20230914 10:35:41.897"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230914 10:35:41.898" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230914 10:35:41.897" endtime="20230914 10:35:41.899"/>
</kw>
<status status="PASS" starttime="20230914 10:35:30.235" endtime="20230914 10:35:41.899"/>
</kw>
<msg timestamp="20230914 10:35:41.899" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230914 10:35:30.235" endtime="20230914 10:35:41.899"/>
</kw>
<msg timestamp="20230914 10:35:41.900" level="INFO">${result} = scm3.org:9894:FOLLOWER:20b51c8d-3efe-461a-b173-2cf8dda7a22b:172.25.0.118
scm4.org:9894:LEADER:af27da28-318e-4f23-a544-24ff353c0273:172.25.0.120
scm1.org:9894:FOLLOWER:efbdf6b5-6cd0-4195-946f-fda01f4ce...</msg>
<status status="PASS" starttime="20230914 10:35:30.234" endtime="20230914 10:35:41.900"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 10:35:41.901" level="INFO">scm3.org:9894:FOLLOWER:20b51c8d-3efe-461a-b173-2cf8dda7a22b:172.25.0.118
scm4.org:9894:LEADER:af27da28-318e-4f23-a544-24ff353c0273:172.25.0.120
scm1.org:9894:FOLLOWER:efbdf6b5-6cd0-4195-946f-fda01f4ced8a:172.25.0.116
scm2.org:9894:FOLLOWER:c2683c6c-c151-4b82-a768-352378f44b9d:172.25.0.117</msg>
<status status="PASS" starttime="20230914 10:35:41.900" endtime="20230914 10:35:41.901"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>LEADER</arg>
<arg>1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230914 10:35:41.901" endtime="20230914 10:35:41.902"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>FOLLOWER</arg>
<arg>2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230914 10:35:41.902" endtime="20230914 10:35:41.903"/>
</kw>
<kw name="Get Lines Containing String" library="String">
<var>${scmLine}</var>
<arg>${result}</arg>
<arg>LEADER</arg>
<doc>Returns lines of the given ``string`` that contain the ``pattern``.</doc>
<msg timestamp="20230914 10:35:41.904" level="INFO">1 out of 4 lines matched</msg>
<msg timestamp="20230914 10:35:41.904" level="INFO">${scmLine} = scm4.org:9894:LEADER:af27da28-318e-4f23-a544-24ff353c0273:172.25.0.120</msg>
<status status="PASS" starttime="20230914 10:35:41.903" endtime="20230914 10:35:41.904"/>
</kw>
<kw name="Split String" library="String">
<var>${splits}</var>
<arg>${scmLine}</arg>
<arg>:</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20230914 10:35:41.905" level="INFO">${splits} = ['scm4.org', '9894', 'LEADER', 'af27da28-318e-4f23-a544-24ff353c0273', '172.25.0.120']</msg>
<status status="PASS" starttime="20230914 10:35:41.904" endtime="20230914 10:35:41.905"/>
</kw>
<kw name="Strip String" library="String">
<var>${leaderSCM}</var>
<arg>${splits[3]}</arg>
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<msg timestamp="20230914 10:35:41.909" level="INFO">${leaderSCM} = af27da28-318e-4f23-a544-24ff353c0273</msg>
<status status="PASS" starttime="20230914 10:35:41.907" endtime="20230914 10:35:41.909"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Leader SCM: ${leaderSCM}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 10:35:41.911" level="INFO">Leader SCM: af27da28-318e-4f23-a544-24ff353c0273</msg>
<status status="PASS" starttime="20230914 10:35:41.910" endtime="20230914 10:35:41.911"/>
</kw>
<msg timestamp="20230914 10:35:41.911" level="INFO">${newLeaderSCM} = af27da28-318e-4f23-a544-24ff353c0273</msg>
<status status="PASS" starttime="20230914 10:35:30.233" endtime="20230914 10:35:41.911"/>
</kw>
<kw name="Should Not Be Equal" library="BuiltIn">
<arg>${leaderSCM}</arg>
<arg>${newLeaderSCM}</arg>
<doc>Fails if the given objects are equal.</doc>
<status status="PASS" starttime="20230914 10:35:41.912" endtime="20230914 10:35:41.913"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230914 10:34:54.929" endtime="20230914 10:35:41.914"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20230914 10:34:54.827" endtime="20230914 10:35:41.917"/>
</suite>
<suite id="s1-s8" name="Kinit" source="/opt/hadoop/smoketest/kinit.robot">
<test id="s1-s8-t1" name="Kinit" line="27">
<kw name="Kinit test user" library="commonlib">
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230914 10:36:46.852" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230914 10:36:46.886" level="INFO">${rc} = 0</msg>
<msg timestamp="20230914 10:36:46.887" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230914 10:36:46.835" endtime="20230914 10:36:46.887"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 10:36:46.889" level="INFO">scm</msg>
<status status="PASS" starttime="20230914 10:36:46.888" endtime="20230914 10:36:46.889"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230914 10:36:46.890" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230914 10:36:46.889" endtime="20230914 10:36:46.890"/>
</kw>
<status status="PASS" starttime="20230914 10:36:46.833" endtime="20230914 10:36:46.891"/>
</kw>
<msg timestamp="20230914 10:36:46.894" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230914 10:36:46.833" endtime="20230914 10:36:46.896"/>
</kw>
<msg timestamp="20230914 10:36:46.896" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230914 10:36:46.831" endtime="20230914 10:36:46.896"/>
</kw>
<msg timestamp="20230914 10:36:46.896" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230914 10:36:46.831" endtime="20230914 10:36:46.896"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230914 10:36:46.904" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230914 10:36:46.899" endtime="20230914 10:36:46.904"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230914 10:36:46.953" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20230914 10:36:47.168" level="INFO">${rc} = 0</msg>
<msg timestamp="20230914 10:36:47.168" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230914 10:36:46.932" endtime="20230914 10:36:47.168"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 10:36:47.172" level="INFO"/>
<status status="PASS" starttime="20230914 10:36:47.169" endtime="20230914 10:36:47.172"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230914 10:36:47.173" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230914 10:36:47.172" endtime="20230914 10:36:47.173"/>
</kw>
<status status="PASS" starttime="20230914 10:36:46.929" endtime="20230914 10:36:47.174"/>
</kw>
<msg timestamp="20230914 10:36:47.174" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230914 10:36:46.916" endtime="20230914 10:36:47.175"/>
</kw>
<status status="PASS" starttime="20230914 10:36:46.906" endtime="20230914 10:36:47.175"/>
</kw>
<status status="PASS" starttime="20230914 10:36:46.904" endtime="20230914 10:36:47.175"/>
</kw>
<status status="PASS" starttime="20230914 10:36:46.829" endtime="20230914 10:36:47.175"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20230914 10:36:46.818" endtime="20230914 10:36:47.176"/>
</test>
<doc>Kinit test user</doc>
<status status="PASS" starttime="20230914 10:36:46.666" endtime="20230914 10:36:47.178"/>
</suite>
<suite id="s1-s9" name="Scm-Leader-Transfer" source="/opt/hadoop/smoketest/scmha/scm-leader-transfer.robot">
<test id="s1-s9-t1" name="Transfer Leadership" line="47">
<kw name="Get SCM Leader Node">
<var>${leaderSCM}</var>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin scm roles --service-id=scmservice</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230914 10:36:54.431" level="INFO">Running command 'ozone admin scm roles --service-id=scmservice 2&gt;&amp;1'.</msg>
<msg timestamp="20230914 10:37:07.230" level="INFO">${rc} = 0</msg>
<msg timestamp="20230914 10:37:07.230" level="INFO">${output} = scm3.org:9894:FOLLOWER:20b51c8d-3efe-461a-b173-2cf8dda7a22b:172.25.0.118
scm4.org:9894:LEADER:af27da28-318e-4f23-a544-24ff353c0273:172.25.0.120
scm1.org:9894:FOLLOWER:efbdf6b5-6cd0-4195-946f-fda01f4ce...</msg>
<status status="PASS" starttime="20230914 10:36:54.425" endtime="20230914 10:37:07.230"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 10:37:07.232" level="INFO">scm3.org:9894:FOLLOWER:20b51c8d-3efe-461a-b173-2cf8dda7a22b:172.25.0.118
scm4.org:9894:LEADER:af27da28-318e-4f23-a544-24ff353c0273:172.25.0.120
scm1.org:9894:FOLLOWER:efbdf6b5-6cd0-4195-946f-fda01f4ced8a:172.25.0.116
scm2.org:9894:FOLLOWER:c2683c6c-c151-4b82-a768-352378f44b9d:172.25.0.117</msg>
<status status="PASS" starttime="20230914 10:37:07.231" endtime="20230914 10:37:07.233"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230914 10:37:07.233" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230914 10:37:07.233" endtime="20230914 10:37:07.233"/>
</kw>
<status status="PASS" starttime="20230914 10:36:54.424" endtime="20230914 10:37:07.234"/>
</kw>
<msg timestamp="20230914 10:37:07.234" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230914 10:36:54.423" endtime="20230914 10:37:07.234"/>
</kw>
<msg timestamp="20230914 10:37:07.234" level="INFO">${result} = scm3.org:9894:FOLLOWER:20b51c8d-3efe-461a-b173-2cf8dda7a22b:172.25.0.118
scm4.org:9894:LEADER:af27da28-318e-4f23-a544-24ff353c0273:172.25.0.120
scm1.org:9894:FOLLOWER:efbdf6b5-6cd0-4195-946f-fda01f4ce...</msg>
<status status="PASS" starttime="20230914 10:36:54.422" endtime="20230914 10:37:07.235"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 10:37:07.235" level="INFO">scm3.org:9894:FOLLOWER:20b51c8d-3efe-461a-b173-2cf8dda7a22b:172.25.0.118
scm4.org:9894:LEADER:af27da28-318e-4f23-a544-24ff353c0273:172.25.0.120
scm1.org:9894:FOLLOWER:efbdf6b5-6cd0-4195-946f-fda01f4ced8a:172.25.0.116
scm2.org:9894:FOLLOWER:c2683c6c-c151-4b82-a768-352378f44b9d:172.25.0.117</msg>
<status status="PASS" starttime="20230914 10:37:07.235" endtime="20230914 10:37:07.236"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>LEADER</arg>
<arg>1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230914 10:37:07.236" endtime="20230914 10:37:07.237"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>FOLLOWER</arg>
<arg>2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230914 10:37:07.237" endtime="20230914 10:37:07.237"/>
</kw>
<kw name="Get Lines Containing String" library="String">
<var>${scmLine}</var>
<arg>${result}</arg>
<arg>LEADER</arg>
<doc>Returns lines of the given ``string`` that contain the ``pattern``.</doc>
<msg timestamp="20230914 10:37:07.239" level="INFO">1 out of 4 lines matched</msg>
<msg timestamp="20230914 10:37:07.239" level="INFO">${scmLine} = scm4.org:9894:LEADER:af27da28-318e-4f23-a544-24ff353c0273:172.25.0.120</msg>
<status status="PASS" starttime="20230914 10:37:07.238" endtime="20230914 10:37:07.239"/>
</kw>
<kw name="Split String" library="String">
<var>${splits}</var>
<arg>${scmLine}</arg>
<arg>:</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20230914 10:37:07.241" level="INFO">${splits} = ['scm4.org', '9894', 'LEADER', 'af27da28-318e-4f23-a544-24ff353c0273', '172.25.0.120']</msg>
<status status="PASS" starttime="20230914 10:37:07.239" endtime="20230914 10:37:07.241"/>
</kw>
<kw name="Strip String" library="String">
<var>${leaderSCM}</var>
<arg>${splits[3]}</arg>
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<msg timestamp="20230914 10:37:07.243" level="INFO">${leaderSCM} = af27da28-318e-4f23-a544-24ff353c0273</msg>
<status status="PASS" starttime="20230914 10:37:07.241" endtime="20230914 10:37:07.243"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Leader SCM: ${leaderSCM}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 10:37:07.244" level="INFO">Leader SCM: af27da28-318e-4f23-a544-24ff353c0273</msg>
<status status="PASS" starttime="20230914 10:37:07.243" endtime="20230914 10:37:07.244"/>
</kw>
<msg timestamp="20230914 10:37:07.244" level="INFO">${leaderSCM} = af27da28-318e-4f23-a544-24ff353c0273</msg>
<status status="PASS" starttime="20230914 10:36:54.421" endtime="20230914 10:37:07.244"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Leader SCM: ${leaderSCM}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 10:37:07.245" level="INFO">Leader SCM: af27da28-318e-4f23-a544-24ff353c0273</msg>
<status status="PASS" starttime="20230914 10:37:07.244" endtime="20230914 10:37:07.245"/>
</kw>
<kw name="Get SCM UUID">
<var>${target_scm_uuid}</var>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin scm roles --service-id=scmservice</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230914 10:37:07.257" level="INFO">Running command 'ozone admin scm roles --service-id=scmservice 2&gt;&amp;1'.</msg>
<msg timestamp="20230914 10:37:19.087" level="INFO">${rc} = 0</msg>
<msg timestamp="20230914 10:37:19.088" level="INFO">${output} = scm3.org:9894:FOLLOWER:20b51c8d-3efe-461a-b173-2cf8dda7a22b:172.25.0.118
scm4.org:9894:LEADER:af27da28-318e-4f23-a544-24ff353c0273:172.25.0.120
scm1.org:9894:FOLLOWER:efbdf6b5-6cd0-4195-946f-fda01f4ce...</msg>
<status status="PASS" starttime="20230914 10:37:07.248" endtime="20230914 10:37:19.088"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 10:37:19.089" level="INFO">scm3.org:9894:FOLLOWER:20b51c8d-3efe-461a-b173-2cf8dda7a22b:172.25.0.118
scm4.org:9894:LEADER:af27da28-318e-4f23-a544-24ff353c0273:172.25.0.120
scm1.org:9894:FOLLOWER:efbdf6b5-6cd0-4195-946f-fda01f4ced8a:172.25.0.116
scm2.org:9894:FOLLOWER:c2683c6c-c151-4b82-a768-352378f44b9d:172.25.0.117</msg>
<status status="PASS" starttime="20230914 10:37:19.088" endtime="20230914 10:37:19.089"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230914 10:37:19.095" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230914 10:37:19.090" endtime="20230914 10:37:19.095"/>
</kw>
<status status="PASS" starttime="20230914 10:37:07.247" endtime="20230914 10:37:19.095"/>
</kw>
<msg timestamp="20230914 10:37:19.095" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230914 10:37:07.247" endtime="20230914 10:37:19.095"/>
</kw>
<msg timestamp="20230914 10:37:19.098" level="INFO">${result} = scm3.org:9894:FOLLOWER:20b51c8d-3efe-461a-b173-2cf8dda7a22b:172.25.0.118
scm4.org:9894:LEADER:af27da28-318e-4f23-a544-24ff353c0273:172.25.0.120
scm1.org:9894:FOLLOWER:efbdf6b5-6cd0-4195-946f-fda01f4ce...</msg>
<status status="PASS" starttime="20230914 10:37:07.246" endtime="20230914 10:37:19.098"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 10:37:19.099" level="INFO">scm3.org:9894:FOLLOWER:20b51c8d-3efe-461a-b173-2cf8dda7a22b:172.25.0.118
scm4.org:9894:LEADER:af27da28-318e-4f23-a544-24ff353c0273:172.25.0.120
scm1.org:9894:FOLLOWER:efbdf6b5-6cd0-4195-946f-fda01f4ced8a:172.25.0.116
scm2.org:9894:FOLLOWER:c2683c6c-c151-4b82-a768-352378f44b9d:172.25.0.117</msg>
<status status="PASS" starttime="20230914 10:37:19.099" endtime="20230914 10:37:19.100"/>
</kw>
<kw name="Get Lines Containing String" library="String">
<var>${scm_line}</var>
<arg>${result}</arg>
<arg>${TARGET_SCM}</arg>
<doc>Returns lines of the given ``string`` that contain the ``pattern``.</doc>
<msg timestamp="20230914 10:37:19.102" level="INFO">1 out of 4 lines matched</msg>
<msg timestamp="20230914 10:37:19.103" level="INFO">${scm_line} = scm3.org:9894:FOLLOWER:20b51c8d-3efe-461a-b173-2cf8dda7a22b:172.25.0.118</msg>
<status status="PASS" starttime="20230914 10:37:19.100" endtime="20230914 10:37:19.103"/>
</kw>
<kw name="Split String" library="String">
<var>${scm_split}</var>
<arg>${scm_line}</arg>
<arg>:</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20230914 10:37:19.108" level="INFO">${scm_split} = ['scm3.org', '9894', 'FOLLOWER', '20b51c8d-3efe-461a-b173-2cf8dda7a22b', '172.25.0.118']</msg>
<status status="PASS" starttime="20230914 10:37:19.106" endtime="20230914 10:37:19.108"/>
</kw>
<kw name="Strip String" library="String">
<var>${scm_uuid}</var>
<arg>${scm_split[3]}</arg>
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<msg timestamp="20230914 10:37:19.113" level="INFO">${scm_uuid} = 20b51c8d-3efe-461a-b173-2cf8dda7a22b</msg>
<status status="PASS" starttime="20230914 10:37:19.109" endtime="20230914 10:37:19.113"/>
</kw>
<msg timestamp="20230914 10:37:19.114" level="INFO">${target_scm_uuid} = 20b51c8d-3efe-461a-b173-2cf8dda7a22b</msg>
<status status="PASS" starttime="20230914 10:37:07.245" endtime="20230914 10:37:19.114"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin scm transfer --service-id=scmservice -n ${target_scm_uuid}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230914 10:37:19.128" level="INFO">Running command 'ozone admin scm transfer --service-id=scmservice -n 20b51c8d-3efe-461a-b173-2cf8dda7a22b 2&gt;&amp;1'.</msg>
<msg timestamp="20230914 10:41:54.422" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20230914 10:37:19.120" endtime="20230914 10:41:54.422"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230914 10:41:54.423" endtime="20230914 10:41:54.423"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20230914 10:41:54.424" endtime="20230914 10:41:54.424"/>
</kw>
<status status="FAIL" starttime="20230914 10:37:19.118" endtime="20230914 10:41:54.424"/>
</kw>
<msg timestamp="20230914 10:41:54.424" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20230914 10:37:19.117" endtime="20230914 10:41:54.424"/>
</kw>
<status status="FAIL" starttime="20230914 10:37:19.115" endtime="20230914 10:41:54.425"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230914 10:41:54.425" endtime="20230914 10:41:54.425"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Transfer leadership successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230914 10:41:54.425" endtime="20230914 10:41:54.425"/>
</kw>
<kw name="Get SCM Leader Node">
<var>${newLeaderSCM}</var>
<status status="NOT RUN" starttime="20230914 10:41:54.426" endtime="20230914 10:41:54.426"/>
</kw>
<kw name="Should Not Be Equal" library="BuiltIn">
<arg>${leaderSCM}</arg>
<arg>${newLeaderSCM}</arg>
<doc>Fails if the given objects are equal.</doc>
<status status="NOT RUN" starttime="20230914 10:41:54.426" endtime="20230914 10:41:54.426"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20230914 10:36:54.420" endtime="20230914 10:41:54.427">Test timeout 5 minutes exceeded.</status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="FAIL" starttime="20230914 10:36:54.242" endtime="20230914 10:41:54.430"/>
</suite>
<status status="FAIL" starttime="N/A" endtime="N/A" elapsedtime="613793"/>
</suite>
<statistics>
<total>
<stat pass="18" fail="1" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="2" fail="0" skip="0">create-volume-and-bucket</stat>
</tag>
<suite>
<stat pass="18" fail="1" skip="0" id="s1" name="ozonesecure-ha-root-ca-rotation">ozonesecure-ha-root-ca-rotation</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1" name="Kinit">ozonesecure-ha-root-ca-rotation.Kinit</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2" name="Scm-Leader-Transfer">ozonesecure-ha-root-ca-rotation.Scm-Leader-Transfer</stat>
<stat pass="3" fail="0" skip="0" id="s1-s3" name="Root-Ca-Rotation-Client-Checks">ozonesecure-ha-root-ca-rotation.Root-Ca-Rotation-Client-Checks</stat>
<stat pass="7" fail="0" skip="0" id="s1-s4" name="Pipeline">ozonesecure-ha-root-ca-rotation.Pipeline</stat>
<stat pass="1" fail="0" skip="0" id="s1-s5" name="Kinit">ozonesecure-ha-root-ca-rotation.Kinit</stat>
<stat pass="3" fail="0" skip="0" id="s1-s6" name="Root-Ca-Rotation-Client-Checks">ozonesecure-ha-root-ca-rotation.Root-Ca-Rotation-Client-Checks</stat>
<stat pass="1" fail="0" skip="0" id="s1-s7" name="Scm-Leader-Transfer">ozonesecure-ha-root-ca-rotation.Scm-Leader-Transfer</stat>
<stat pass="1" fail="0" skip="0" id="s1-s8" name="Kinit">ozonesecure-ha-root-ca-rotation.Kinit</stat>
<stat pass="0" fail="1" skip="0" id="s1-s9" name="Scm-Leader-Transfer">ozonesecure-ha-root-ca-rotation.Scm-Leader-Transfer</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
