<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 6.1.1 (Python 3.8.10 on linux)" generated="20230914 10:52:55.869" rpa="false" schemaversion="4">
<suite id="s1" name="ozonesecure-root-ca-rotation">
<suite id="s1-s1" name="Kinit" source="/opt/hadoop/smoketest/kinit.robot">
<test id="s1-s1-t1" name="Kinit" line="27">
<kw name="Kinit test user" library="commonlib">
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230914 10:50:00.769" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230914 10:50:00.777" level="INFO">${rc} = 0</msg>
<msg timestamp="20230914 10:50:00.777" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230914 10:50:00.766" endtime="20230914 10:50:00.777"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 10:50:00.785" level="INFO">scm</msg>
<status status="PASS" starttime="20230914 10:50:00.778" endtime="20230914 10:50:00.785"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230914 10:50:00.786" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230914 10:50:00.785" endtime="20230914 10:50:00.786"/>
</kw>
<status status="PASS" starttime="20230914 10:50:00.757" endtime="20230914 10:50:00.786"/>
</kw>
<msg timestamp="20230914 10:50:00.786" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230914 10:50:00.757" endtime="20230914 10:50:00.786"/>
</kw>
<msg timestamp="20230914 10:50:00.786" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230914 10:50:00.756" endtime="20230914 10:50:00.786"/>
</kw>
<msg timestamp="20230914 10:50:00.794" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230914 10:50:00.756" endtime="20230914 10:50:00.794"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230914 10:50:00.796" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230914 10:50:00.796" endtime="20230914 10:50:00.796"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230914 10:50:00.813" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20230914 10:50:00.878" level="INFO">${rc} = 0</msg>
<msg timestamp="20230914 10:50:00.878" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230914 10:50:00.799" endtime="20230914 10:50:00.878"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 10:50:00.883" level="INFO"/>
<status status="PASS" starttime="20230914 10:50:00.878" endtime="20230914 10:50:00.884"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230914 10:50:00.884" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230914 10:50:00.884" endtime="20230914 10:50:00.889"/>
</kw>
<status status="PASS" starttime="20230914 10:50:00.798" endtime="20230914 10:50:00.889"/>
</kw>
<msg timestamp="20230914 10:50:00.889" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230914 10:50:00.798" endtime="20230914 10:50:00.889"/>
</kw>
<status status="PASS" starttime="20230914 10:50:00.797" endtime="20230914 10:50:00.889"/>
</kw>
<status status="PASS" starttime="20230914 10:50:00.796" endtime="20230914 10:50:00.889"/>
</kw>
<status status="PASS" starttime="20230914 10:50:00.755" endtime="20230914 10:50:00.899"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20230914 10:50:00.752" endtime="20230914 10:50:00.899"/>
</test>
<doc>Kinit test user</doc>
<status status="PASS" starttime="20230914 10:50:00.566" endtime="20230914 10:50:00.901"/>
</suite>
<suite id="s1-s2" name="Root-Ca-Rotation-Client-Checks" source="/opt/hadoop/smoketest/certrotation/root-ca-rotation-client-checks.robot">
<test id="s1-s2-t1" name="Create a volume and bucket" line="27">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230914 10:50:22.127" level="INFO">Running command 'ozone sh volume create rootca-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20230914 10:50:31.306" level="INFO">${rc} = 0</msg>
<msg timestamp="20230914 10:50:31.306" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230914 10:50:22.123" endtime="20230914 10:50:31.306"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 10:50:31.308" level="INFO"/>
<status status="PASS" starttime="20230914 10:50:31.307" endtime="20230914 10:50:31.308"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230914 10:50:31.309" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230914 10:50:31.308" endtime="20230914 10:50:31.309"/>
</kw>
<status status="PASS" starttime="20230914 10:50:22.122" endtime="20230914 10:50:31.309"/>
</kw>
<msg timestamp="20230914 10:50:31.309" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230914 10:50:22.122" endtime="20230914 10:50:31.309"/>
</kw>
<msg timestamp="20230914 10:50:31.310" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230914 10:50:22.121" endtime="20230914 10:50:31.310"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230914 10:50:31.310" endtime="20230914 10:50:31.311"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230914 10:50:31.317" level="INFO">Running command 'ozone sh bucket create /rootca-volume/rootca-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230914 10:50:39.271" level="INFO">${rc} = 0</msg>
<msg timestamp="20230914 10:50:39.271" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230914 10:50:31.314" endtime="20230914 10:50:39.271"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 10:50:39.273" level="INFO"/>
<status status="PASS" starttime="20230914 10:50:39.272" endtime="20230914 10:50:39.273"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230914 10:50:39.274" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230914 10:50:39.273" endtime="20230914 10:50:39.274"/>
</kw>
<status status="PASS" starttime="20230914 10:50:31.312" endtime="20230914 10:50:39.274"/>
</kw>
<msg timestamp="20230914 10:50:39.274" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230914 10:50:31.312" endtime="20230914 10:50:39.274"/>
</kw>
<msg timestamp="20230914 10:50:39.274" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230914 10:50:31.311" endtime="20230914 10:50:39.274"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230914 10:50:39.275" endtime="20230914 10:50:39.275"/>
</kw>
<tag>create-volume-and-bucket</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230914 10:50:22.119" endtime="20230914 10:50:39.275"/>
</test>
<test id="s1-s2-t2" name="Create key" line="34">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230914 10:50:39.282" level="INFO">Running command 'echo "rootca: key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20230914 10:50:39.285" level="INFO">${rc} = 0</msg>
<msg timestamp="20230914 10:50:39.285" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230914 10:50:39.279" endtime="20230914 10:50:39.285"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 10:50:39.286" level="INFO"/>
<status status="PASS" starttime="20230914 10:50:39.286" endtime="20230914 10:50:39.287"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230914 10:50:39.287" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230914 10:50:39.287" endtime="20230914 10:50:39.288"/>
</kw>
<status status="PASS" starttime="20230914 10:50:39.278" endtime="20230914 10:50:39.288"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230914 10:50:39.293" level="INFO">Running command 'ozone sh key put /rootca-volume/rootca-bucket/rootca-key /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230914 10:50:55.160" level="INFO">${rc} = 0</msg>
<msg timestamp="20230914 10:50:55.160" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230914 10:50:39.290" endtime="20230914 10:50:55.160"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 10:50:55.164" level="INFO"/>
<status status="PASS" starttime="20230914 10:50:55.161" endtime="20230914 10:50:55.166"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230914 10:50:55.169" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230914 10:50:55.168" endtime="20230914 10:50:55.170"/>
</kw>
<status status="PASS" starttime="20230914 10:50:39.289" endtime="20230914 10:50:55.171"/>
</kw>
<msg timestamp="20230914 10:50:55.171" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230914 10:50:39.289" endtime="20230914 10:50:55.173"/>
</kw>
<msg timestamp="20230914 10:50:55.174" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230914 10:50:39.288" endtime="20230914 10:50:55.174"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230914 10:50:55.174" endtime="20230914 10:50:55.179"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230914 10:50:55.187" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230914 10:50:55.191" level="INFO">${rc} = 0</msg>
<msg timestamp="20230914 10:50:55.192" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230914 10:50:55.180" endtime="20230914 10:50:55.192"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 10:50:55.193" level="INFO"/>
<status status="PASS" starttime="20230914 10:50:55.192" endtime="20230914 10:50:55.193"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230914 10:50:55.194" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230914 10:50:55.193" endtime="20230914 10:50:55.194"/>
</kw>
<status status="PASS" starttime="20230914 10:50:55.180" endtime="20230914 10:50:55.194"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230914 10:50:39.277" endtime="20230914 10:50:55.195"/>
</test>
<test id="s1-s2-t3" name="Read data from previously created key" line="40">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230914 10:50:55.203" level="INFO">${random} = 45162</msg>
<status status="PASS" starttime="20230914 10:50:55.202" endtime="20230914 10:50:55.203"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230914 10:50:55.216" level="INFO">Running command 'ozone sh key get /rootca-volume/rootca-bucket/rootca-key /tmp/key-45162 2&gt;&amp;1'.</msg>
<msg timestamp="20230914 10:51:07.805" level="INFO">${rc} = 0</msg>
<msg timestamp="20230914 10:51:07.805" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230914 10:50:55.205" endtime="20230914 10:51:07.805"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 10:51:07.807" level="INFO"/>
<status status="PASS" starttime="20230914 10:51:07.806" endtime="20230914 10:51:07.807"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230914 10:51:07.808" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230914 10:51:07.807" endtime="20230914 10:51:07.808"/>
</kw>
<status status="PASS" starttime="20230914 10:50:55.204" endtime="20230914 10:51:07.809"/>
</kw>
<msg timestamp="20230914 10:51:07.809" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230914 10:50:55.204" endtime="20230914 10:51:07.809"/>
</kw>
<msg timestamp="20230914 10:51:07.809" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230914 10:50:55.203" endtime="20230914 10:51:07.809"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230914 10:51:07.809" endtime="20230914 10:51:07.810"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230914 10:51:07.814" level="INFO">Running command 'cat /tmp/key-45162 2&gt;&amp;1'.</msg>
<msg timestamp="20230914 10:51:07.818" level="INFO">${rc} = 0</msg>
<msg timestamp="20230914 10:51:07.818" level="INFO">${output} = rootca: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230914 10:51:07.811" endtime="20230914 10:51:07.818"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 10:51:07.819" level="INFO">rootca: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230914 10:51:07.819" endtime="20230914 10:51:07.820"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230914 10:51:07.820" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230914 10:51:07.820" endtime="20230914 10:51:07.820"/>
</kw>
<msg timestamp="20230914 10:51:07.821" level="INFO">${output} = rootca: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230914 10:51:07.810" endtime="20230914 10:51:07.821"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230914 10:51:07.821" endtime="20230914 10:51:07.822"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230914 10:51:07.825" level="INFO">Running command 'rm /tmp/key-45162 2&gt;&amp;1'.</msg>
<msg timestamp="20230914 10:51:07.829" level="INFO">${rc} = 0</msg>
<msg timestamp="20230914 10:51:07.829" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230914 10:51:07.822" endtime="20230914 10:51:07.829"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 10:51:07.830" level="INFO"/>
<status status="PASS" starttime="20230914 10:51:07.830" endtime="20230914 10:51:07.830"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230914 10:51:07.831" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230914 10:51:07.831" endtime="20230914 10:51:07.831"/>
</kw>
<status status="PASS" starttime="20230914 10:51:07.822" endtime="20230914 10:51:07.832"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230914 10:50:55.201" endtime="20230914 10:51:07.832"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20230914 10:50:22.011" endtime="20230914 10:51:07.834"/>
</suite>
<suite id="s1-s3" name="Root-Ca-Rotation-Client-Checks" source="/opt/hadoop/smoketest/certrotation/root-ca-rotation-client-checks.robot">
<test id="s1-s3-t1" name="Create a volume and bucket" line="27">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230914 10:51:48.268" level="INFO">Running command 'ozone sh volume create rootca2-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20230914 10:51:56.232" level="INFO">${rc} = 0</msg>
<msg timestamp="20230914 10:51:56.232" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230914 10:51:48.265" endtime="20230914 10:51:56.232"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 10:51:56.234" level="INFO"/>
<status status="PASS" starttime="20230914 10:51:56.232" endtime="20230914 10:51:56.234"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230914 10:51:56.235" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230914 10:51:56.234" endtime="20230914 10:51:56.235"/>
</kw>
<status status="PASS" starttime="20230914 10:51:48.265" endtime="20230914 10:51:56.235"/>
</kw>
<msg timestamp="20230914 10:51:56.235" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230914 10:51:48.264" endtime="20230914 10:51:56.235"/>
</kw>
<msg timestamp="20230914 10:51:56.236" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230914 10:51:48.263" endtime="20230914 10:51:56.236"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230914 10:51:56.236" endtime="20230914 10:51:56.236"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230914 10:51:56.242" level="INFO">Running command 'ozone sh bucket create /rootca2-volume/rootca2-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230914 10:52:03.718" level="INFO">${rc} = 0</msg>
<msg timestamp="20230914 10:52:03.718" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230914 10:51:56.239" endtime="20230914 10:52:03.718"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 10:52:03.719" level="INFO"/>
<status status="PASS" starttime="20230914 10:52:03.718" endtime="20230914 10:52:03.719"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230914 10:52:03.720" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230914 10:52:03.720" endtime="20230914 10:52:03.720"/>
</kw>
<status status="PASS" starttime="20230914 10:51:56.238" endtime="20230914 10:52:03.721"/>
</kw>
<msg timestamp="20230914 10:52:03.721" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230914 10:51:56.238" endtime="20230914 10:52:03.721"/>
</kw>
<msg timestamp="20230914 10:52:03.721" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230914 10:51:56.237" endtime="20230914 10:52:03.721"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230914 10:52:03.721" endtime="20230914 10:52:03.722"/>
</kw>
<tag>create-volume-and-bucket</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230914 10:51:48.262" endtime="20230914 10:52:03.722"/>
</test>
<test id="s1-s3-t2" name="Create key" line="34">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230914 10:52:03.728" level="INFO">Running command 'echo "rootca2: key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20230914 10:52:03.731" level="INFO">${rc} = 0</msg>
<msg timestamp="20230914 10:52:03.731" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230914 10:52:03.725" endtime="20230914 10:52:03.731"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 10:52:03.732" level="INFO"/>
<status status="PASS" starttime="20230914 10:52:03.731" endtime="20230914 10:52:03.732"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230914 10:52:03.733" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230914 10:52:03.733" endtime="20230914 10:52:03.733"/>
</kw>
<status status="PASS" starttime="20230914 10:52:03.724" endtime="20230914 10:52:03.733"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230914 10:52:03.739" level="INFO">Running command 'ozone sh key put /rootca2-volume/rootca2-bucket/rootca2-key /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230914 10:52:16.068" level="INFO">${rc} = 0</msg>
<msg timestamp="20230914 10:52:16.068" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230914 10:52:03.736" endtime="20230914 10:52:16.068"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 10:52:16.069" level="INFO"/>
<status status="PASS" starttime="20230914 10:52:16.069" endtime="20230914 10:52:16.070"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230914 10:52:16.071" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230914 10:52:16.070" endtime="20230914 10:52:16.071"/>
</kw>
<status status="PASS" starttime="20230914 10:52:03.735" endtime="20230914 10:52:16.071"/>
</kw>
<msg timestamp="20230914 10:52:16.071" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230914 10:52:03.734" endtime="20230914 10:52:16.071"/>
</kw>
<msg timestamp="20230914 10:52:16.071" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230914 10:52:03.734" endtime="20230914 10:52:16.071"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230914 10:52:16.072" endtime="20230914 10:52:16.072"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230914 10:52:16.076" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230914 10:52:16.080" level="INFO">${rc} = 0</msg>
<msg timestamp="20230914 10:52:16.080" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230914 10:52:16.073" endtime="20230914 10:52:16.080"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 10:52:16.082" level="INFO"/>
<status status="PASS" starttime="20230914 10:52:16.081" endtime="20230914 10:52:16.082"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230914 10:52:16.082" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230914 10:52:16.082" endtime="20230914 10:52:16.082"/>
</kw>
<status status="PASS" starttime="20230914 10:52:16.072" endtime="20230914 10:52:16.083"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230914 10:52:03.724" endtime="20230914 10:52:16.083"/>
</test>
<test id="s1-s3-t3" name="Read data from previously created key" line="40">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230914 10:52:16.086" level="INFO">${random} = 91436</msg>
<status status="PASS" starttime="20230914 10:52:16.085" endtime="20230914 10:52:16.086"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230914 10:52:16.091" level="INFO">Running command 'ozone sh key get /rootca2-volume/rootca2-bucket/rootca2-key /tmp/key-91436 2&gt;&amp;1'.</msg>
<msg timestamp="20230914 10:52:28.477" level="INFO">${rc} = 0</msg>
<msg timestamp="20230914 10:52:28.477" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230914 10:52:16.088" endtime="20230914 10:52:28.477"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 10:52:28.479" level="INFO"/>
<status status="PASS" starttime="20230914 10:52:28.478" endtime="20230914 10:52:28.479"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230914 10:52:28.480" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230914 10:52:28.479" endtime="20230914 10:52:28.480"/>
</kw>
<status status="PASS" starttime="20230914 10:52:16.087" endtime="20230914 10:52:28.480"/>
</kw>
<msg timestamp="20230914 10:52:28.480" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230914 10:52:16.087" endtime="20230914 10:52:28.480"/>
</kw>
<msg timestamp="20230914 10:52:28.481" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230914 10:52:16.086" endtime="20230914 10:52:28.481"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230914 10:52:28.481" endtime="20230914 10:52:28.481"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230914 10:52:28.486" level="INFO">Running command 'cat /tmp/key-91436 2&gt;&amp;1'.</msg>
<msg timestamp="20230914 10:52:28.490" level="INFO">${rc} = 0</msg>
<msg timestamp="20230914 10:52:28.490" level="INFO">${output} = rootca2: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230914 10:52:28.483" endtime="20230914 10:52:28.490"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 10:52:28.491" level="INFO">rootca2: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230914 10:52:28.491" endtime="20230914 10:52:28.492"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230914 10:52:28.492" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230914 10:52:28.492" endtime="20230914 10:52:28.493"/>
</kw>
<msg timestamp="20230914 10:52:28.493" level="INFO">${output} = rootca2: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230914 10:52:28.482" endtime="20230914 10:52:28.493"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230914 10:52:28.494" endtime="20230914 10:52:28.494"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230914 10:52:28.500" level="INFO">Running command 'rm /tmp/key-91436 2&gt;&amp;1'.</msg>
<msg timestamp="20230914 10:52:28.505" level="INFO">${rc} = 0</msg>
<msg timestamp="20230914 10:52:28.505" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230914 10:52:28.497" endtime="20230914 10:52:28.505"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 10:52:28.507" level="INFO"/>
<status status="PASS" starttime="20230914 10:52:28.506" endtime="20230914 10:52:28.507"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230914 10:52:28.508" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230914 10:52:28.507" endtime="20230914 10:52:28.508"/>
</kw>
<status status="PASS" starttime="20230914 10:52:28.495" endtime="20230914 10:52:28.508"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230914 10:52:16.084" endtime="20230914 10:52:28.509"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20230914 10:51:48.192" endtime="20230914 10:52:28.511"/>
</suite>
<suite id="s1-s4" name="Root-Ca-Rotation" source="/opt/hadoop/smoketest/scmha/root-ca-rotation.robot">
<test id="s1-s4-t1" name="Verify root CA rotation metrics" line="26">
<kw name="Execute" library="os">
<var>${successRotationLine}</var>
<arg>curl -sS 'http://localhost:9876/jmx' | grep NumSuccessRotation</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230914 10:52:32.930" level="INFO">Running command 'curl -sS 'http://localhost:9876/jmx' | grep NumSuccessRotation 2&gt;&amp;1'.</msg>
<msg timestamp="20230914 10:52:33.599" level="INFO">${rc} = 0</msg>
<msg timestamp="20230914 10:52:33.599" level="INFO">${output} =     "NumSuccessRotation" : 2,</msg>
<status status="PASS" starttime="20230914 10:52:32.927" endtime="20230914 10:52:33.599"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 10:52:33.601" level="INFO">    "NumSuccessRotation" : 2,</msg>
<status status="PASS" starttime="20230914 10:52:33.600" endtime="20230914 10:52:33.601"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230914 10:52:33.602" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230914 10:52:33.601" endtime="20230914 10:52:33.602"/>
</kw>
<status status="PASS" starttime="20230914 10:52:32.926" endtime="20230914 10:52:33.602"/>
</kw>
<msg timestamp="20230914 10:52:33.602" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230914 10:52:32.925" endtime="20230914 10:52:33.602"/>
</kw>
<msg timestamp="20230914 10:52:33.603" level="INFO">${successRotationLine} =     "NumSuccessRotation" : 2,</msg>
<status status="PASS" starttime="20230914 10:52:32.925" endtime="20230914 10:52:33.603"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${successRotationLine}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 10:52:33.604" level="INFO">    "NumSuccessRotation" : 2,</msg>
<status status="PASS" starttime="20230914 10:52:33.603" endtime="20230914 10:52:33.604"/>
</kw>
<kw name="Split String" library="String">
<var>${temp_1}</var>
<arg>${successRotationLine}</arg>
<arg>:</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20230914 10:52:33.605" level="INFO">${temp_1} = ['    "NumSuccessRotation" ', ' 2,']</msg>
<status status="PASS" starttime="20230914 10:52:33.604" endtime="20230914 10:52:33.605"/>
</kw>
<kw name="Strip String" library="String">
<var>${temp_2}</var>
<arg>${temp_1[1]}</arg>
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<msg timestamp="20230914 10:52:33.606" level="INFO">${temp_2} = 2,</msg>
<status status="PASS" starttime="20230914 10:52:33.605" endtime="20230914 10:52:33.606"/>
</kw>
<kw name="Split String" library="String">
<var>${temp_3}</var>
<arg>${temp_2}</arg>
<arg>,</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20230914 10:52:33.607" level="INFO">${temp_3} = ['2', '']</msg>
<status status="PASS" starttime="20230914 10:52:33.607" endtime="20230914 10:52:33.607"/>
</kw>
<kw name="Strip String" library="String">
<var>${successRotation}</var>
<arg>${temp_3[0]}</arg>
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<msg timestamp="20230914 10:52:33.609" level="INFO">${successRotation} = 2</msg>
<status status="PASS" starttime="20230914 10:52:33.608" endtime="20230914 10:52:33.609"/>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<var>${successRotation}</var>
<arg>${successRotation}</arg>
<doc>Converts the given item to a floating point number.</doc>
<msg timestamp="20230914 10:52:33.610" level="INFO">${successRotation} = 2.0</msg>
<status status="PASS" starttime="20230914 10:52:33.609" endtime="20230914 10:52:33.610"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${successRotation} &gt;= 1</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230914 10:52:33.610" endtime="20230914 10:52:33.611"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230914 10:52:32.924" endtime="20230914 10:52:33.611"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20230914 10:52:32.845" endtime="20230914 10:52:33.614"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="87246"/>
</suite>
<statistics>
<total>
<stat pass="8" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="2" fail="0" skip="0">create-volume-and-bucket</stat>
</tag>
<suite>
<stat pass="8" fail="0" skip="0" id="s1" name="ozonesecure-root-ca-rotation">ozonesecure-root-ca-rotation</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1" name="Kinit">ozonesecure-root-ca-rotation.Kinit</stat>
<stat pass="3" fail="0" skip="0" id="s1-s2" name="Root-Ca-Rotation-Client-Checks">ozonesecure-root-ca-rotation.Root-Ca-Rotation-Client-Checks</stat>
<stat pass="3" fail="0" skip="0" id="s1-s3" name="Root-Ca-Rotation-Client-Checks">ozonesecure-root-ca-rotation.Root-Ca-Rotation-Client-Checks</stat>
<stat pass="1" fail="0" skip="0" id="s1-s4" name="Root-Ca-Rotation">ozonesecure-root-ca-rotation.Root-Ca-Rotation</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
