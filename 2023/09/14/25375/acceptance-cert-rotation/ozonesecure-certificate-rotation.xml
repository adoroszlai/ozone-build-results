<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 6.1.1 (Python 3.8.10 on linux)" generated="20230914 12:59:45.685" rpa="false" schemaversion="4">
<suite id="s1" name="ozonesecure-certificate-rotation" source="/opt/hadoop/smoketest/certrotation">
<suite id="s1-s1" name="Cert-Rotation" source="/opt/hadoop/smoketest/certrotation/cert-rotation.robot">
<kw name="Setup Test" type="SETUP">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230914 12:58:20.379" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230914 12:58:20.384" level="INFO">${rc} = 0</msg>
<msg timestamp="20230914 12:58:20.384" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230914 12:58:20.374" endtime="20230914 12:58:20.384"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 12:58:20.385" level="INFO">scm</msg>
<status status="PASS" starttime="20230914 12:58:20.385" endtime="20230914 12:58:20.385"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230914 12:58:20.386" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230914 12:58:20.385" endtime="20230914 12:58:20.386"/>
</kw>
<status status="PASS" starttime="20230914 12:58:20.373" endtime="20230914 12:58:20.386"/>
</kw>
<msg timestamp="20230914 12:58:20.386" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230914 12:58:20.373" endtime="20230914 12:58:20.386"/>
</kw>
<msg timestamp="20230914 12:58:20.386" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230914 12:58:20.372" endtime="20230914 12:58:20.386"/>
</kw>
<msg timestamp="20230914 12:58:20.386" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230914 12:58:20.371" endtime="20230914 12:58:20.386"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230914 12:58:20.387" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230914 12:58:20.387" endtime="20230914 12:58:20.387"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230914 12:58:20.394" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20230914 12:58:20.448" level="INFO">${rc} = 0</msg>
<msg timestamp="20230914 12:58:20.448" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230914 12:58:20.391" endtime="20230914 12:58:20.448"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 12:58:20.449" level="INFO"/>
<status status="PASS" starttime="20230914 12:58:20.448" endtime="20230914 12:58:20.449"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230914 12:58:20.450" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230914 12:58:20.449" endtime="20230914 12:58:20.450"/>
</kw>
<status status="PASS" starttime="20230914 12:58:20.390" endtime="20230914 12:58:20.450"/>
</kw>
<msg timestamp="20230914 12:58:20.450" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230914 12:58:20.389" endtime="20230914 12:58:20.450"/>
</kw>
<status status="PASS" starttime="20230914 12:58:20.389" endtime="20230914 12:58:20.450"/>
</kw>
<status status="PASS" starttime="20230914 12:58:20.387" endtime="20230914 12:58:20.450"/>
</kw>
<status status="PASS" starttime="20230914 12:58:20.371" endtime="20230914 12:58:20.450"/>
</kw>
<status status="PASS" starttime="20230914 12:58:20.370" endtime="20230914 12:58:20.450"/>
</kw>
<status status="PASS" starttime="20230914 12:58:20.369" endtime="20230914 12:58:20.451"/>
</kw>
<test id="s1-s1-t1" name="Test datanode functions before and after certificate rotation" line="55">
<kw name="Basic key generation and validation">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>10</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230914 12:58:20.456" level="INFO">${random} = ljZRACCs3r</msg>
<status status="PASS" starttime="20230914 12:58:20.454" endtime="20230914 12:58:20.456"/>
</kw>
<kw name="Freon OCKG" library="freon">
<arg>prefix=${random}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230914 12:58:20.468" level="INFO">Running command 'ozone freon ockg  -t 1 -n1 -p ljZRACCs3r  2&gt;&amp;1'.</msg>
<msg timestamp="20230914 12:58:32.917" level="INFO">${rc} = 0</msg>
<msg timestamp="20230914 12:58:32.917" level="INFO">${output} = 2023-09-14 12:58:23,576 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-14 12:58:23,918 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230914 12:58:20.462" endtime="20230914 12:58:32.917"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 12:58:32.918" level="INFO">2023-09-14 12:58:23,576 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-14 12:58:23,918 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-09-14 12:58:23,919 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-09-14 12:58:24,052 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ljZRACCs3r and number-of-tests 1
2023-09-14 12:58:24,306 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-14 12:58:25,320 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-14 12:58:26,320 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-14 12:58:27,161 [main] INFO rpc.RpcClient: Creating Volume: vol1, with testuser as owner and space quota set to -1 bytes, counts quota set to -1
2023-09-14 12:58:27,321 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-14 12:58:27,325 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with server-side default bucket layout, testuser as owner, Versioning false, Storage Type set to DISK and Encryption set to false, Replication Type set to server-side default replication type, Namespace Quota set to -1, Space Quota set to -1 
2023-09-14 12:58:27,932 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2023-09-14 12:58:27,979 [pool-2-thread-1] INFO netty.NettyConfigKeys$DataStream: setTlsConf GrpcTlsConfig0-
2023-09-14 12:58:28,203 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2023-09-14 12:58:28,321 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-14 12:58:29,321 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-14 12:58:30,322 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-14 12:58:31,322 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-14 12:58:32,323 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2023-09-14 12:58:32,561 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=1, min=3968.393626, max=3968.393626, mean=3968.393626, stddev=0.0, median=3968.393626, p75=3968.393626, p95=3968.393626, p98=3968.393626, p99=3968.393626, p999=3968.393626, mean_rate=0.19359156224919058, m1=0.2, m5=0.2, m15=0.2, rate_unit=events/second, duration_unit=milliseconds
2023-09-14 12:58:32,561 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 8
2023-09-14 12:58:32,561 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-09-14 12:58:32,561 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20230914 12:58:32.917" endtime="20230914 12:58:32.918"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230914 12:58:32.919" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230914 12:58:32.918" endtime="20230914 12:58:32.919"/>
</kw>
<status status="PASS" starttime="20230914 12:58:20.461" endtime="20230914 12:58:32.919"/>
</kw>
<msg timestamp="20230914 12:58:32.919" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230914 12:58:20.461" endtime="20230914 12:58:32.919"/>
</kw>
<msg timestamp="20230914 12:58:32.920" level="INFO">${result} = 2023-09-14 12:58:23,576 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-14 12:58:23,918 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230914 12:58:20.459" endtime="20230914 12:58:32.920"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230914 12:58:32.920" endtime="20230914 12:58:32.920"/>
</kw>
<status status="PASS" starttime="20230914 12:58:20.456" endtime="20230914 12:58:32.920"/>
</kw>
<kw name="Freon OCKV" library="freon">
<arg>prefix=${random}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockv ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230914 12:58:32.925" level="INFO">Running command 'ozone freon ockv  -t 1 -n1 -p ljZRACCs3r  2&gt;&amp;1'.</msg>
<msg timestamp="20230914 12:58:43.999" level="INFO">${rc} = 0</msg>
<msg timestamp="20230914 12:58:43.999" level="INFO">${output} = 2023-09-14 12:58:37,427 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-14 12:58:37,609 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230914 12:58:32.923" endtime="20230914 12:58:43.999"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 12:58:44.004" level="INFO">2023-09-14 12:58:37,427 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-14 12:58:37,609 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-09-14 12:58:37,609 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-09-14 12:58:37,707 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ljZRACCs3r and number-of-tests 1
2023-09-14 12:58:37,773 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-14 12:58:38,774 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-14 12:58:39,775 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-14 12:58:40,775 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-14 12:58:40,883 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2023-09-14 12:58:41,775 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-14 12:58:42,777 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2023-09-14 12:58:43,445 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-validate, count=1, min=47.172594, max=47.172594, mean=47.172594, stddev=0.0, median=47.172594, p75=47.172594, p95=47.172594, p98=47.172594, p99=47.172594, p999=47.172594, mean_rate=0.8014878255746539, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-09-14 12:58:43,445 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 6
2023-09-14 12:58:43,448 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-09-14 12:58:43,448 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20230914 12:58:44.000" endtime="20230914 12:58:44.004"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230914 12:58:44.005" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230914 12:58:44.004" endtime="20230914 12:58:44.005"/>
</kw>
<status status="PASS" starttime="20230914 12:58:32.922" endtime="20230914 12:58:44.005"/>
</kw>
<msg timestamp="20230914 12:58:44.005" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230914 12:58:32.922" endtime="20230914 12:58:44.005"/>
</kw>
<msg timestamp="20230914 12:58:44.006" level="INFO">${result} = 2023-09-14 12:58:37,427 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-14 12:58:37,609 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230914 12:58:32.922" endtime="20230914 12:58:44.006"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230914 12:58:44.006" endtime="20230914 12:58:44.006"/>
</kw>
<status status="PASS" starttime="20230914 12:58:32.920" endtime="20230914 12:58:44.006"/>
</kw>
<status status="PASS" starttime="20230914 12:58:20.453" endtime="20230914 12:58:44.006"/>
</kw>
<kw name="Find certificate duration">
<var>${certDuration}</var>
<kw name="Execute" library="os">
<var>${waitTime}</var>
<arg>ozone getconf confKey hdds.x509.default.duration | sed 's/PT//'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230914 12:58:44.024" level="INFO">Running command 'ozone getconf confKey hdds.x509.default.duration | sed 's/PT//' 2&gt;&amp;1'.</msg>
<msg timestamp="20230914 12:58:45.994" level="INFO">${rc} = 0</msg>
<msg timestamp="20230914 12:58:45.994" level="INFO">${output} = 40s</msg>
<status status="PASS" starttime="20230914 12:58:44.008" endtime="20230914 12:58:45.994"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 12:58:45.996" level="INFO">40s</msg>
<status status="PASS" starttime="20230914 12:58:45.995" endtime="20230914 12:58:45.996"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230914 12:58:45.997" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230914 12:58:45.996" endtime="20230914 12:58:45.997"/>
</kw>
<status status="PASS" starttime="20230914 12:58:44.008" endtime="20230914 12:58:45.997"/>
</kw>
<msg timestamp="20230914 12:58:45.997" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230914 12:58:44.007" endtime="20230914 12:58:45.997"/>
</kw>
<msg timestamp="20230914 12:58:45.997" level="INFO">${waitTime} = 40s</msg>
<status status="PASS" starttime="20230914 12:58:44.007" endtime="20230914 12:58:45.997"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>"${waitTime}" != "${EMPTY}"</arg>
<arg>${waitTime}</arg>
<arg>0s</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230914 12:58:45.999" level="INFO">${result} = 40s</msg>
<status status="PASS" starttime="20230914 12:58:45.997" endtime="20230914 12:58:45.999"/>
</kw>
<msg timestamp="20230914 12:58:45.999" level="INFO">${certDuration} = 40s</msg>
<status status="PASS" starttime="20230914 12:58:44.007" endtime="20230914 12:58:45.999"/>
</kw>
<kw name="Double duration">
<var>${doubleDuration}</var>
<arg>${certDuration}</arg>
<kw name="Add Time To Time" library="DateTime">
<var>${doubleDuration}</var>
<arg>${duration}</arg>
<arg>${duration}</arg>
<doc>Adds time to another time and returns the resulting time.</doc>
<msg timestamp="20230914 12:58:46.000" level="INFO">${doubleDuration} = 80.0</msg>
<status status="PASS" starttime="20230914 12:58:46.000" endtime="20230914 12:58:46.000"/>
</kw>
<msg timestamp="20230914 12:58:46.000" level="INFO">${doubleDuration} = 80.0</msg>
<status status="PASS" starttime="20230914 12:58:45.999" endtime="20230914 12:58:46.000"/>
</kw>
<kw name="Get datanode cert serial">
<var>${certId1}</var>
<kw name="Execute" library="os">
<var>${certSerial}</var>
<arg>openssl s_client -connect "${datanode}":"${port}" -showcerts | openssl x509 -noout -serial | grep serial | sed 's/serial=//'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230914 12:58:46.004" level="INFO">Running command 'openssl s_client -connect "datanode":"9859" -showcerts | openssl x509 -noout -serial | grep serial | sed 's/serial=//' 2&gt;&amp;1'.</msg>
<msg timestamp="20230914 12:58:46.121" level="INFO">${rc} = 0</msg>
<msg timestamp="20230914 12:58:46.121" level="INFO">${output} = 9DDDACF92C</msg>
<status status="PASS" starttime="20230914 12:58:46.002" endtime="20230914 12:58:46.121"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 12:58:46.123" level="INFO">9DDDACF92C</msg>
<status status="PASS" starttime="20230914 12:58:46.122" endtime="20230914 12:58:46.123"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230914 12:58:46.124" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230914 12:58:46.123" endtime="20230914 12:58:46.124"/>
</kw>
<status status="PASS" starttime="20230914 12:58:46.002" endtime="20230914 12:58:46.124"/>
</kw>
<msg timestamp="20230914 12:58:46.124" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230914 12:58:46.001" endtime="20230914 12:58:46.124"/>
</kw>
<msg timestamp="20230914 12:58:46.124" level="INFO">${certSerial} = 9DDDACF92C</msg>
<status status="PASS" starttime="20230914 12:58:46.001" endtime="20230914 12:58:46.124"/>
</kw>
<msg timestamp="20230914 12:58:46.124" level="INFO">${certId1} = 9DDDACF92C</msg>
<status status="PASS" starttime="20230914 12:58:46.000" endtime="20230914 12:58:46.124"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${doubleDuration}</arg>
<arg>5sec</arg>
<arg>Datanode has new certificate</arg>
<arg>${certId1}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Datanode has new certificate">
<arg>${certId1}</arg>
<kw name="Get datanode cert serial">
<var>${newCertId}</var>
<kw name="Execute" library="os">
<var>${certSerial}</var>
<arg>openssl s_client -connect "${datanode}":"${port}" -showcerts | openssl x509 -noout -serial | grep serial | sed 's/serial=//'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230914 12:58:46.129" level="INFO">Running command 'openssl s_client -connect "datanode":"9859" -showcerts | openssl x509 -noout -serial | grep serial | sed 's/serial=//' 2&gt;&amp;1'.</msg>
<msg timestamp="20230914 12:58:46.246" level="INFO">${rc} = 0</msg>
<msg timestamp="20230914 12:58:46.246" level="INFO">${output} = 9BB22FFC11</msg>
<status status="PASS" starttime="20230914 12:58:46.127" endtime="20230914 12:58:46.246"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 12:58:46.247" level="INFO">9BB22FFC11</msg>
<status status="PASS" starttime="20230914 12:58:46.247" endtime="20230914 12:58:46.248"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230914 12:58:46.248" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230914 12:58:46.248" endtime="20230914 12:58:46.248"/>
</kw>
<status status="PASS" starttime="20230914 12:58:46.127" endtime="20230914 12:58:46.249"/>
</kw>
<msg timestamp="20230914 12:58:46.249" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230914 12:58:46.126" endtime="20230914 12:58:46.249"/>
</kw>
<msg timestamp="20230914 12:58:46.249" level="INFO">${certSerial} = 9BB22FFC11</msg>
<status status="PASS" starttime="20230914 12:58:46.126" endtime="20230914 12:58:46.249"/>
</kw>
<msg timestamp="20230914 12:58:46.249" level="INFO">${newCertId} = 9BB22FFC11</msg>
<status status="PASS" starttime="20230914 12:58:46.125" endtime="20230914 12:58:46.249"/>
</kw>
<kw name="Should Not Be Equal" library="BuiltIn">
<arg>${certId}</arg>
<arg>${newCertId}</arg>
<doc>Fails if the given objects are equal.</doc>
<status status="PASS" starttime="20230914 12:58:46.249" endtime="20230914 12:58:46.250"/>
</kw>
<status status="PASS" starttime="20230914 12:58:46.125" endtime="20230914 12:58:46.250"/>
</kw>
<status status="PASS" starttime="20230914 12:58:46.125" endtime="20230914 12:58:46.250"/>
</kw>
<kw name="Basic key generation and validation">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>10</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230914 12:58:46.251" level="INFO">${random} = C1Wb4Inkjn</msg>
<status status="PASS" starttime="20230914 12:58:46.251" endtime="20230914 12:58:46.251"/>
</kw>
<kw name="Freon OCKG" library="freon">
<arg>prefix=${random}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230914 12:58:46.257" level="INFO">Running command 'ozone freon ockg  -t 1 -n1 -p C1Wb4Inkjn  2&gt;&amp;1'.</msg>
<msg timestamp="20230914 12:58:54.224" level="INFO">${rc} = 0</msg>
<msg timestamp="20230914 12:58:54.224" level="INFO">${output} = 2023-09-14 12:58:48,365 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-14 12:58:48,478 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230914 12:58:46.255" endtime="20230914 12:58:54.224"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 12:58:54.226" level="INFO">2023-09-14 12:58:48,365 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-14 12:58:48,478 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-09-14 12:58:48,478 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-09-14 12:58:48,556 [main] INFO freon.BaseFreonGenerator: Executing test with prefix C1Wb4Inkjn and number-of-tests 1
2023-09-14 12:58:48,608 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-14 12:58:49,609 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-14 12:58:50,611 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-14 12:58:51,375 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2023-09-14 12:58:51,423 [pool-2-thread-1] INFO netty.NettyConfigKeys$DataStream: setTlsConf GrpcTlsConfig0-
2023-09-14 12:58:51,611 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-14 12:58:51,700 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2023-09-14 12:58:52,611 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-14 12:58:53,612 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2023-09-14 12:58:53,834 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=1, min=1694.30057, max=1694.30057, mean=1694.30057, stddev=0.0, median=1694.30057, p75=1694.30057, p95=1694.30057, p98=1694.30057, p99=1694.30057, p999=1694.30057, mean_rate=0.3688070799352251, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-09-14 12:58:53,837 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 5
2023-09-14 12:58:53,840 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-09-14 12:58:53,840 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20230914 12:58:54.225" endtime="20230914 12:58:54.226"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230914 12:58:54.226" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230914 12:58:54.226" endtime="20230914 12:58:54.226"/>
</kw>
<status status="PASS" starttime="20230914 12:58:46.254" endtime="20230914 12:58:54.227"/>
</kw>
<msg timestamp="20230914 12:58:54.227" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230914 12:58:46.253" endtime="20230914 12:58:54.227"/>
</kw>
<msg timestamp="20230914 12:58:54.227" level="INFO">${result} = 2023-09-14 12:58:48,365 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-14 12:58:48,478 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230914 12:58:46.253" endtime="20230914 12:58:54.227"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230914 12:58:54.228" endtime="20230914 12:58:54.228"/>
</kw>
<status status="PASS" starttime="20230914 12:58:46.251" endtime="20230914 12:58:54.228"/>
</kw>
<kw name="Freon OCKV" library="freon">
<arg>prefix=${random}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockv ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230914 12:58:54.237" level="INFO">Running command 'ozone freon ockv  -t 1 -n1 -p C1Wb4Inkjn  2&gt;&amp;1'.</msg>
<msg timestamp="20230914 12:59:01.912" level="INFO">${rc} = 0</msg>
<msg timestamp="20230914 12:59:01.912" level="INFO">${output} = 2023-09-14 12:58:56,600 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-14 12:58:56,697 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230914 12:58:54.232" endtime="20230914 12:59:01.912"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 12:59:01.913" level="INFO">2023-09-14 12:58:56,600 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-14 12:58:56,697 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-09-14 12:58:56,697 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-09-14 12:58:56,772 [main] INFO freon.BaseFreonGenerator: Executing test with prefix C1Wb4Inkjn and number-of-tests 1
2023-09-14 12:58:56,823 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-14 12:58:57,825 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-14 12:58:58,825 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-14 12:58:58,980 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2023-09-14 12:58:59,825 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-09-14 12:59:00,834 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2023-09-14 12:59:01,541 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-validate, count=1, min=61.047621, max=61.047621, mean=61.047621, stddev=0.0, median=61.047621, p75=61.047621, p95=61.047621, p98=61.047621, p99=61.047621, p999=61.047621, mean_rate=0.9034057708261543, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-09-14 12:59:01,542 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 5
2023-09-14 12:59:01,543 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-09-14 12:59:01,543 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20230914 12:59:01.913" endtime="20230914 12:59:01.914"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230914 12:59:01.914" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230914 12:59:01.914" endtime="20230914 12:59:01.914"/>
</kw>
<status status="PASS" starttime="20230914 12:58:54.231" endtime="20230914 12:59:01.914"/>
</kw>
<msg timestamp="20230914 12:59:01.914" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230914 12:58:54.231" endtime="20230914 12:59:01.915"/>
</kw>
<msg timestamp="20230914 12:59:01.915" level="INFO">${result} = 2023-09-14 12:58:56,600 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-09-14 12:58:56,697 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230914 12:58:54.230" endtime="20230914 12:59:01.915"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230914 12:59:01.915" endtime="20230914 12:59:01.915"/>
</kw>
<status status="PASS" starttime="20230914 12:58:54.228" endtime="20230914 12:59:01.915"/>
</kw>
<status status="PASS" starttime="20230914 12:58:46.250" endtime="20230914 12:59:01.916"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230914 12:58:20.451" endtime="20230914 12:59:01.916"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20230914 12:58:20.301" endtime="20230914 12:59:01.917"/>
</suite>
<suite id="s1-s2" name="Root-Ca-Rotation-Client-Checks" source="/opt/hadoop/smoketest/certrotation/root-ca-rotation-client-checks.robot">
<test id="s1-s2-t1" name="Create a volume and bucket" line="27">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230914 12:59:01.939" level="INFO">Running command 'ozone sh volume create rootca-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20230914 12:59:08.413" level="INFO">${rc} = 0</msg>
<msg timestamp="20230914 12:59:08.413" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230914 12:59:01.937" endtime="20230914 12:59:08.413"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 12:59:08.416" level="INFO"/>
<status status="PASS" starttime="20230914 12:59:08.415" endtime="20230914 12:59:08.416"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230914 12:59:08.417" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230914 12:59:08.416" endtime="20230914 12:59:08.417"/>
</kw>
<status status="PASS" starttime="20230914 12:59:01.937" endtime="20230914 12:59:08.417"/>
</kw>
<msg timestamp="20230914 12:59:08.417" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230914 12:59:01.936" endtime="20230914 12:59:08.417"/>
</kw>
<msg timestamp="20230914 12:59:08.417" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230914 12:59:01.936" endtime="20230914 12:59:08.417"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230914 12:59:08.418" endtime="20230914 12:59:08.418"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230914 12:59:08.421" level="INFO">Running command 'ozone sh bucket create /rootca-volume/rootca-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230914 12:59:14.227" level="INFO">${rc} = 0</msg>
<msg timestamp="20230914 12:59:14.227" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230914 12:59:08.419" endtime="20230914 12:59:14.227"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 12:59:14.229" level="INFO"/>
<status status="PASS" starttime="20230914 12:59:14.228" endtime="20230914 12:59:14.229"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230914 12:59:14.229" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230914 12:59:14.229" endtime="20230914 12:59:14.229"/>
</kw>
<status status="PASS" starttime="20230914 12:59:08.419" endtime="20230914 12:59:14.230"/>
</kw>
<msg timestamp="20230914 12:59:14.230" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230914 12:59:08.419" endtime="20230914 12:59:14.230"/>
</kw>
<msg timestamp="20230914 12:59:14.230" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230914 12:59:08.418" endtime="20230914 12:59:14.230"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230914 12:59:14.230" endtime="20230914 12:59:14.230"/>
</kw>
<tag>create-volume-and-bucket</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230914 12:59:01.935" endtime="20230914 12:59:14.231"/>
</test>
<test id="s1-s2-t2" name="Create key" line="34">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230914 12:59:14.235" level="INFO">Running command 'echo "rootca: key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20230914 12:59:14.237" level="INFO">${rc} = 0</msg>
<msg timestamp="20230914 12:59:14.237" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230914 12:59:14.233" endtime="20230914 12:59:14.237"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 12:59:14.238" level="INFO"/>
<status status="PASS" starttime="20230914 12:59:14.238" endtime="20230914 12:59:14.239"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230914 12:59:14.239" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230914 12:59:14.239" endtime="20230914 12:59:14.239"/>
</kw>
<status status="PASS" starttime="20230914 12:59:14.233" endtime="20230914 12:59:14.239"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230914 12:59:14.243" level="INFO">Running command 'ozone sh key put /rootca-volume/rootca-bucket/rootca-key /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230914 12:59:21.656" level="INFO">${rc} = 0</msg>
<msg timestamp="20230914 12:59:21.656" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230914 12:59:14.241" endtime="20230914 12:59:21.656"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 12:59:21.657" level="INFO"/>
<status status="PASS" starttime="20230914 12:59:21.657" endtime="20230914 12:59:21.657"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230914 12:59:21.658" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230914 12:59:21.658" endtime="20230914 12:59:21.658"/>
</kw>
<status status="PASS" starttime="20230914 12:59:14.240" endtime="20230914 12:59:21.658"/>
</kw>
<msg timestamp="20230914 12:59:21.658" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230914 12:59:14.240" endtime="20230914 12:59:21.658"/>
</kw>
<msg timestamp="20230914 12:59:21.659" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230914 12:59:14.240" endtime="20230914 12:59:21.659"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230914 12:59:21.659" endtime="20230914 12:59:21.659"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230914 12:59:21.662" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230914 12:59:21.665" level="INFO">${rc} = 0</msg>
<msg timestamp="20230914 12:59:21.665" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230914 12:59:21.660" endtime="20230914 12:59:21.665"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 12:59:21.666" level="INFO"/>
<status status="PASS" starttime="20230914 12:59:21.666" endtime="20230914 12:59:21.666"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230914 12:59:21.667" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230914 12:59:21.667" endtime="20230914 12:59:21.667"/>
</kw>
<status status="PASS" starttime="20230914 12:59:21.660" endtime="20230914 12:59:21.667"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230914 12:59:14.232" endtime="20230914 12:59:21.667"/>
</test>
<test id="s1-s2-t3" name="Read data from previously created key" line="40">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230914 12:59:21.669" level="INFO">${random} = 03212</msg>
<status status="PASS" starttime="20230914 12:59:21.669" endtime="20230914 12:59:21.669"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230914 12:59:21.673" level="INFO">Running command 'ozone sh key get /rootca-volume/rootca-bucket/rootca-key /tmp/key-03212 2&gt;&amp;1'.</msg>
<msg timestamp="20230914 12:59:29.529" level="INFO">${rc} = 0</msg>
<msg timestamp="20230914 12:59:29.529" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230914 12:59:21.671" endtime="20230914 12:59:29.529"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 12:59:29.530" level="INFO"/>
<status status="PASS" starttime="20230914 12:59:29.530" endtime="20230914 12:59:29.530"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230914 12:59:29.531" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230914 12:59:29.530" endtime="20230914 12:59:29.531"/>
</kw>
<status status="PASS" starttime="20230914 12:59:21.670" endtime="20230914 12:59:29.531"/>
</kw>
<msg timestamp="20230914 12:59:29.531" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230914 12:59:21.670" endtime="20230914 12:59:29.531"/>
</kw>
<msg timestamp="20230914 12:59:29.531" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230914 12:59:21.670" endtime="20230914 12:59:29.531"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230914 12:59:29.532" endtime="20230914 12:59:29.532"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230914 12:59:29.535" level="INFO">Running command 'cat /tmp/key-03212 2&gt;&amp;1'.</msg>
<msg timestamp="20230914 12:59:29.538" level="INFO">${rc} = 0</msg>
<msg timestamp="20230914 12:59:29.538" level="INFO">${output} = rootca: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230914 12:59:29.533" endtime="20230914 12:59:29.538"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 12:59:29.539" level="INFO">rootca: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230914 12:59:29.538" endtime="20230914 12:59:29.539"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230914 12:59:29.540" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230914 12:59:29.539" endtime="20230914 12:59:29.540"/>
</kw>
<msg timestamp="20230914 12:59:29.540" level="INFO">${output} = rootca: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230914 12:59:29.532" endtime="20230914 12:59:29.540"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230914 12:59:29.540" endtime="20230914 12:59:29.540"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230914 12:59:29.543" level="INFO">Running command 'rm /tmp/key-03212 2&gt;&amp;1'.</msg>
<msg timestamp="20230914 12:59:29.546" level="INFO">${rc} = 0</msg>
<msg timestamp="20230914 12:59:29.546" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230914 12:59:29.541" endtime="20230914 12:59:29.546"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 12:59:29.547" level="INFO"/>
<status status="PASS" starttime="20230914 12:59:29.546" endtime="20230914 12:59:29.547"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230914 12:59:29.548" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230914 12:59:29.547" endtime="20230914 12:59:29.548"/>
</kw>
<status status="PASS" starttime="20230914 12:59:29.541" endtime="20230914 12:59:29.548"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230914 12:59:21.668" endtime="20230914 12:59:29.548"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20230914 12:59:01.919" endtime="20230914 12:59:29.549"/>
</suite>
<status status="PASS" starttime="20230914 12:58:20.258" endtime="20230914 12:59:29.551"/>
</suite>
<statistics>
<total>
<stat pass="4" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="1" fail="0" skip="0">create-volume-and-bucket</stat>
</tag>
<suite>
<stat pass="4" fail="0" skip="0" id="s1" name="ozonesecure-certificate-rotation">ozonesecure-certificate-rotation</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1" name="Cert-Rotation">ozonesecure-certificate-rotation.Cert-Rotation</stat>
<stat pass="3" fail="0" skip="0" id="s1-s2" name="Root-Ca-Rotation-Client-Checks">ozonesecure-certificate-rotation.Root-Ca-Rotation-Client-Checks</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
