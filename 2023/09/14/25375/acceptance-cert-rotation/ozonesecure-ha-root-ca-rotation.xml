<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 6.1.1 (Python 3.8.10 on linux)" generated="20230914 12:56:32.400" rpa="false" schemaversion="4">
<suite id="s1" name="ozonesecure-ha-root-ca-rotation">
<suite id="s1-s1" name="Kinit" source="/opt/hadoop/smoketest/kinit.robot">
<test id="s1-s1-t1" name="Kinit" line="27">
<kw name="Kinit test user" library="commonlib">
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230914 12:54:15.807" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230914 12:54:15.811" level="INFO">${rc} = 0</msg>
<msg timestamp="20230914 12:54:15.811" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230914 12:54:15.803" endtime="20230914 12:54:15.811"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 12:54:15.812" level="INFO">scm</msg>
<status status="PASS" starttime="20230914 12:54:15.811" endtime="20230914 12:54:15.812"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230914 12:54:15.813" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230914 12:54:15.812" endtime="20230914 12:54:15.813"/>
</kw>
<status status="PASS" starttime="20230914 12:54:15.802" endtime="20230914 12:54:15.813"/>
</kw>
<msg timestamp="20230914 12:54:15.813" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230914 12:54:15.802" endtime="20230914 12:54:15.813"/>
</kw>
<msg timestamp="20230914 12:54:15.814" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230914 12:54:15.802" endtime="20230914 12:54:15.814"/>
</kw>
<msg timestamp="20230914 12:54:15.814" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230914 12:54:15.801" endtime="20230914 12:54:15.814"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230914 12:54:15.815" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230914 12:54:15.814" endtime="20230914 12:54:15.815"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230914 12:54:15.820" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20230914 12:54:15.869" level="INFO">${rc} = 0</msg>
<msg timestamp="20230914 12:54:15.869" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230914 12:54:15.817" endtime="20230914 12:54:15.869"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 12:54:15.870" level="INFO"/>
<status status="PASS" starttime="20230914 12:54:15.869" endtime="20230914 12:54:15.870"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230914 12:54:15.871" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230914 12:54:15.870" endtime="20230914 12:54:15.871"/>
</kw>
<status status="PASS" starttime="20230914 12:54:15.816" endtime="20230914 12:54:15.871"/>
</kw>
<msg timestamp="20230914 12:54:15.871" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230914 12:54:15.816" endtime="20230914 12:54:15.871"/>
</kw>
<status status="PASS" starttime="20230914 12:54:15.815" endtime="20230914 12:54:15.871"/>
</kw>
<status status="PASS" starttime="20230914 12:54:15.815" endtime="20230914 12:54:15.871"/>
</kw>
<status status="PASS" starttime="20230914 12:54:15.800" endtime="20230914 12:54:15.872"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20230914 12:54:15.799" endtime="20230914 12:54:15.872"/>
</test>
<doc>Kinit test user</doc>
<status status="PASS" starttime="20230914 12:54:15.728" endtime="20230914 12:54:15.875"/>
</suite>
<suite id="s1-s2" name="Scm-Leader-Transfer" source="/opt/hadoop/smoketest/scmha/scm-leader-transfer.robot">
<test id="s1-s2-t1" name="Transfer Leadership" line="47">
<kw name="Get SCM Leader Node">
<var>${leaderSCM}</var>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin scm roles --service-id=scmservice</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230914 12:54:31.151" level="INFO">Running command 'ozone admin scm roles --service-id=scmservice 2&gt;&amp;1'.</msg>
<msg timestamp="20230914 12:54:36.338" level="INFO">${rc} = 0</msg>
<msg timestamp="20230914 12:54:36.338" level="INFO">${output} = scm1.org:9894:LEADER:9c451538-6906-411b-be9f-075e8df07813:172.25.0.116
scm3.org:9894:FOLLOWER:e763ccc6-7002-4221-a87c-4036bc1e8ea5:172.25.0.118
scm2.org:9894:FOLLOWER:3a50c337-db1d-4354-a610-2bb1403a2...</msg>
<status status="PASS" starttime="20230914 12:54:31.148" endtime="20230914 12:54:36.338"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 12:54:36.340" level="INFO">scm1.org:9894:LEADER:9c451538-6906-411b-be9f-075e8df07813:172.25.0.116
scm3.org:9894:FOLLOWER:e763ccc6-7002-4221-a87c-4036bc1e8ea5:172.25.0.118
scm2.org:9894:FOLLOWER:3a50c337-db1d-4354-a610-2bb1403a2e2b:172.25.0.117</msg>
<status status="PASS" starttime="20230914 12:54:36.339" endtime="20230914 12:54:36.340"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230914 12:54:36.341" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230914 12:54:36.340" endtime="20230914 12:54:36.341"/>
</kw>
<status status="PASS" starttime="20230914 12:54:31.147" endtime="20230914 12:54:36.341"/>
</kw>
<msg timestamp="20230914 12:54:36.341" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230914 12:54:31.146" endtime="20230914 12:54:36.341"/>
</kw>
<msg timestamp="20230914 12:54:36.341" level="INFO">${result} = scm1.org:9894:LEADER:9c451538-6906-411b-be9f-075e8df07813:172.25.0.116
scm3.org:9894:FOLLOWER:e763ccc6-7002-4221-a87c-4036bc1e8ea5:172.25.0.118
scm2.org:9894:FOLLOWER:3a50c337-db1d-4354-a610-2bb1403a2...</msg>
<status status="PASS" starttime="20230914 12:54:31.146" endtime="20230914 12:54:36.341"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 12:54:36.342" level="INFO">scm1.org:9894:LEADER:9c451538-6906-411b-be9f-075e8df07813:172.25.0.116
scm3.org:9894:FOLLOWER:e763ccc6-7002-4221-a87c-4036bc1e8ea5:172.25.0.118
scm2.org:9894:FOLLOWER:3a50c337-db1d-4354-a610-2bb1403a2e2b:172.25.0.117</msg>
<status status="PASS" starttime="20230914 12:54:36.341" endtime="20230914 12:54:36.342"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>LEADER</arg>
<arg>1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230914 12:54:36.342" endtime="20230914 12:54:36.342"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>FOLLOWER</arg>
<arg>2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230914 12:54:36.343" endtime="20230914 12:54:36.343"/>
</kw>
<kw name="Get Lines Containing String" library="String">
<var>${scmLine}</var>
<arg>${result}</arg>
<arg>LEADER</arg>
<doc>Returns lines of the given ``string`` that contain the ``pattern``.</doc>
<msg timestamp="20230914 12:54:36.343" level="INFO">1 out of 3 lines matched</msg>
<msg timestamp="20230914 12:54:36.344" level="INFO">${scmLine} = scm1.org:9894:LEADER:9c451538-6906-411b-be9f-075e8df07813:172.25.0.116</msg>
<status status="PASS" starttime="20230914 12:54:36.343" endtime="20230914 12:54:36.344"/>
</kw>
<kw name="Split String" library="String">
<var>${splits}</var>
<arg>${scmLine}</arg>
<arg>:</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20230914 12:54:36.344" level="INFO">${splits} = ['scm1.org', '9894', 'LEADER', '9c451538-6906-411b-be9f-075e8df07813', '172.25.0.116']</msg>
<status status="PASS" starttime="20230914 12:54:36.344" endtime="20230914 12:54:36.344"/>
</kw>
<kw name="Strip String" library="String">
<var>${leaderSCM}</var>
<arg>${splits[3]}</arg>
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<msg timestamp="20230914 12:54:36.345" level="INFO">${leaderSCM} = 9c451538-6906-411b-be9f-075e8df07813</msg>
<status status="PASS" starttime="20230914 12:54:36.344" endtime="20230914 12:54:36.345"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Leader SCM: ${leaderSCM}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 12:54:36.346" level="INFO">Leader SCM: 9c451538-6906-411b-be9f-075e8df07813</msg>
<status status="PASS" starttime="20230914 12:54:36.346" endtime="20230914 12:54:36.346"/>
</kw>
<msg timestamp="20230914 12:54:36.346" level="INFO">${leaderSCM} = 9c451538-6906-411b-be9f-075e8df07813</msg>
<status status="PASS" starttime="20230914 12:54:31.145" endtime="20230914 12:54:36.346"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Leader SCM: ${leaderSCM}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 12:54:36.347" level="INFO">Leader SCM: 9c451538-6906-411b-be9f-075e8df07813</msg>
<status status="PASS" starttime="20230914 12:54:36.346" endtime="20230914 12:54:36.347"/>
</kw>
<kw name="Get SCM UUID">
<var>${target_scm_uuid}</var>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin scm roles --service-id=scmservice</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230914 12:54:36.351" level="INFO">Running command 'ozone admin scm roles --service-id=scmservice 2&gt;&amp;1'.</msg>
<msg timestamp="20230914 12:54:41.828" level="INFO">${rc} = 0</msg>
<msg timestamp="20230914 12:54:41.828" level="INFO">${output} = scm1.org:9894:LEADER:9c451538-6906-411b-be9f-075e8df07813:172.25.0.116
scm3.org:9894:FOLLOWER:e763ccc6-7002-4221-a87c-4036bc1e8ea5:172.25.0.118
scm2.org:9894:FOLLOWER:3a50c337-db1d-4354-a610-2bb1403a2...</msg>
<status status="PASS" starttime="20230914 12:54:36.348" endtime="20230914 12:54:41.828"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 12:54:41.830" level="INFO">scm1.org:9894:LEADER:9c451538-6906-411b-be9f-075e8df07813:172.25.0.116
scm3.org:9894:FOLLOWER:e763ccc6-7002-4221-a87c-4036bc1e8ea5:172.25.0.118
scm2.org:9894:FOLLOWER:3a50c337-db1d-4354-a610-2bb1403a2e2b:172.25.0.117</msg>
<status status="PASS" starttime="20230914 12:54:41.829" endtime="20230914 12:54:41.830"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230914 12:54:41.831" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230914 12:54:41.830" endtime="20230914 12:54:41.831"/>
</kw>
<status status="PASS" starttime="20230914 12:54:36.348" endtime="20230914 12:54:41.831"/>
</kw>
<msg timestamp="20230914 12:54:41.831" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230914 12:54:36.348" endtime="20230914 12:54:41.831"/>
</kw>
<msg timestamp="20230914 12:54:41.832" level="INFO">${result} = scm1.org:9894:LEADER:9c451538-6906-411b-be9f-075e8df07813:172.25.0.116
scm3.org:9894:FOLLOWER:e763ccc6-7002-4221-a87c-4036bc1e8ea5:172.25.0.118
scm2.org:9894:FOLLOWER:3a50c337-db1d-4354-a610-2bb1403a2...</msg>
<status status="PASS" starttime="20230914 12:54:36.347" endtime="20230914 12:54:41.832"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 12:54:41.832" level="INFO">scm1.org:9894:LEADER:9c451538-6906-411b-be9f-075e8df07813:172.25.0.116
scm3.org:9894:FOLLOWER:e763ccc6-7002-4221-a87c-4036bc1e8ea5:172.25.0.118
scm2.org:9894:FOLLOWER:3a50c337-db1d-4354-a610-2bb1403a2e2b:172.25.0.117</msg>
<status status="PASS" starttime="20230914 12:54:41.832" endtime="20230914 12:54:41.832"/>
</kw>
<kw name="Get Lines Containing String" library="String">
<var>${scm_line}</var>
<arg>${result}</arg>
<arg>${TARGET_SCM}</arg>
<doc>Returns lines of the given ``string`` that contain the ``pattern``.</doc>
<msg timestamp="20230914 12:54:41.833" level="INFO">1 out of 3 lines matched</msg>
<msg timestamp="20230914 12:54:41.833" level="INFO">${scm_line} = scm2.org:9894:FOLLOWER:3a50c337-db1d-4354-a610-2bb1403a2e2b:172.25.0.117</msg>
<status status="PASS" starttime="20230914 12:54:41.832" endtime="20230914 12:54:41.833"/>
</kw>
<kw name="Split String" library="String">
<var>${scm_split}</var>
<arg>${scm_line}</arg>
<arg>:</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20230914 12:54:41.834" level="INFO">${scm_split} = ['scm2.org', '9894', 'FOLLOWER', '3a50c337-db1d-4354-a610-2bb1403a2e2b', '172.25.0.117']</msg>
<status status="PASS" starttime="20230914 12:54:41.833" endtime="20230914 12:54:41.834"/>
</kw>
<kw name="Strip String" library="String">
<var>${scm_uuid}</var>
<arg>${scm_split[3]}</arg>
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<msg timestamp="20230914 12:54:41.835" level="INFO">${scm_uuid} = 3a50c337-db1d-4354-a610-2bb1403a2e2b</msg>
<status status="PASS" starttime="20230914 12:54:41.834" endtime="20230914 12:54:41.835"/>
</kw>
<msg timestamp="20230914 12:54:41.835" level="INFO">${target_scm_uuid} = 3a50c337-db1d-4354-a610-2bb1403a2e2b</msg>
<status status="PASS" starttime="20230914 12:54:36.347" endtime="20230914 12:54:41.835"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin scm transfer --service-id=scmservice -n ${target_scm_uuid}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230914 12:54:41.849" level="INFO">Running command 'ozone admin scm transfer --service-id=scmservice -n 3a50c337-db1d-4354-a610-2bb1403a2e2b 2&gt;&amp;1'.</msg>
<msg timestamp="20230914 12:54:50.104" level="INFO">${rc} = 0</msg>
<msg timestamp="20230914 12:54:50.105" level="INFO">${output} = Transfer leadership successfully to 3a50c337-db1d-4354-a610-2bb1403a2e2b.</msg>
<status status="PASS" starttime="20230914 12:54:41.837" endtime="20230914 12:54:50.105"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 12:54:50.106" level="INFO">Transfer leadership successfully to 3a50c337-db1d-4354-a610-2bb1403a2e2b.</msg>
<status status="PASS" starttime="20230914 12:54:50.105" endtime="20230914 12:54:50.106"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230914 12:54:50.107" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230914 12:54:50.107" endtime="20230914 12:54:50.107"/>
</kw>
<status status="PASS" starttime="20230914 12:54:41.837" endtime="20230914 12:54:50.107"/>
</kw>
<msg timestamp="20230914 12:54:50.107" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230914 12:54:41.836" endtime="20230914 12:54:50.108"/>
</kw>
<msg timestamp="20230914 12:54:50.108" level="INFO">${result} = Transfer leadership successfully to 3a50c337-db1d-4354-a610-2bb1403a2e2b.</msg>
<status status="PASS" starttime="20230914 12:54:41.836" endtime="20230914 12:54:50.108"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 12:54:50.108" level="INFO">Transfer leadership successfully to 3a50c337-db1d-4354-a610-2bb1403a2e2b.</msg>
<status status="PASS" starttime="20230914 12:54:50.108" endtime="20230914 12:54:50.108"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Transfer leadership successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230914 12:54:50.108" endtime="20230914 12:54:50.109"/>
</kw>
<kw name="Get SCM Leader Node">
<var>${newLeaderSCM}</var>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin scm roles --service-id=scmservice</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230914 12:54:50.114" level="INFO">Running command 'ozone admin scm roles --service-id=scmservice 2&gt;&amp;1'.</msg>
<msg timestamp="20230914 12:55:00.827" level="INFO">${rc} = 0</msg>
<msg timestamp="20230914 12:55:00.827" level="INFO">${output} = scm1.org:9894:FOLLOWER:9c451538-6906-411b-be9f-075e8df07813:172.25.0.116
scm3.org:9894:FOLLOWER:e763ccc6-7002-4221-a87c-4036bc1e8ea5:172.25.0.118
scm2.org:9894:LEADER:3a50c337-db1d-4354-a610-2bb1403a2...</msg>
<status status="PASS" starttime="20230914 12:54:50.111" endtime="20230914 12:55:00.827"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 12:55:00.829" level="INFO">scm1.org:9894:FOLLOWER:9c451538-6906-411b-be9f-075e8df07813:172.25.0.116
scm3.org:9894:FOLLOWER:e763ccc6-7002-4221-a87c-4036bc1e8ea5:172.25.0.118
scm2.org:9894:LEADER:3a50c337-db1d-4354-a610-2bb1403a2e2b:172.25.0.117</msg>
<status status="PASS" starttime="20230914 12:55:00.828" endtime="20230914 12:55:00.829"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230914 12:55:00.830" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230914 12:55:00.829" endtime="20230914 12:55:00.830"/>
</kw>
<status status="PASS" starttime="20230914 12:54:50.110" endtime="20230914 12:55:00.830"/>
</kw>
<msg timestamp="20230914 12:55:00.830" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230914 12:54:50.110" endtime="20230914 12:55:00.830"/>
</kw>
<msg timestamp="20230914 12:55:00.830" level="INFO">${result} = scm1.org:9894:FOLLOWER:9c451538-6906-411b-be9f-075e8df07813:172.25.0.116
scm3.org:9894:FOLLOWER:e763ccc6-7002-4221-a87c-4036bc1e8ea5:172.25.0.118
scm2.org:9894:LEADER:3a50c337-db1d-4354-a610-2bb1403a2...</msg>
<status status="PASS" starttime="20230914 12:54:50.109" endtime="20230914 12:55:00.831"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 12:55:00.831" level="INFO">scm1.org:9894:FOLLOWER:9c451538-6906-411b-be9f-075e8df07813:172.25.0.116
scm3.org:9894:FOLLOWER:e763ccc6-7002-4221-a87c-4036bc1e8ea5:172.25.0.118
scm2.org:9894:LEADER:3a50c337-db1d-4354-a610-2bb1403a2e2b:172.25.0.117</msg>
<status status="PASS" starttime="20230914 12:55:00.831" endtime="20230914 12:55:00.831"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>LEADER</arg>
<arg>1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230914 12:55:00.831" endtime="20230914 12:55:00.832"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>FOLLOWER</arg>
<arg>2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230914 12:55:00.832" endtime="20230914 12:55:00.832"/>
</kw>
<kw name="Get Lines Containing String" library="String">
<var>${scmLine}</var>
<arg>${result}</arg>
<arg>LEADER</arg>
<doc>Returns lines of the given ``string`` that contain the ``pattern``.</doc>
<msg timestamp="20230914 12:55:00.833" level="INFO">1 out of 3 lines matched</msg>
<msg timestamp="20230914 12:55:00.833" level="INFO">${scmLine} = scm2.org:9894:LEADER:3a50c337-db1d-4354-a610-2bb1403a2e2b:172.25.0.117</msg>
<status status="PASS" starttime="20230914 12:55:00.832" endtime="20230914 12:55:00.833"/>
</kw>
<kw name="Split String" library="String">
<var>${splits}</var>
<arg>${scmLine}</arg>
<arg>:</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20230914 12:55:00.833" level="INFO">${splits} = ['scm2.org', '9894', 'LEADER', '3a50c337-db1d-4354-a610-2bb1403a2e2b', '172.25.0.117']</msg>
<status status="PASS" starttime="20230914 12:55:00.833" endtime="20230914 12:55:00.833"/>
</kw>
<kw name="Strip String" library="String">
<var>${leaderSCM}</var>
<arg>${splits[3]}</arg>
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<msg timestamp="20230914 12:55:00.835" level="INFO">${leaderSCM} = 3a50c337-db1d-4354-a610-2bb1403a2e2b</msg>
<status status="PASS" starttime="20230914 12:55:00.834" endtime="20230914 12:55:00.835"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Leader SCM: ${leaderSCM}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 12:55:00.835" level="INFO">Leader SCM: 3a50c337-db1d-4354-a610-2bb1403a2e2b</msg>
<status status="PASS" starttime="20230914 12:55:00.835" endtime="20230914 12:55:00.835"/>
</kw>
<msg timestamp="20230914 12:55:00.836" level="INFO">${newLeaderSCM} = 3a50c337-db1d-4354-a610-2bb1403a2e2b</msg>
<status status="PASS" starttime="20230914 12:54:50.109" endtime="20230914 12:55:00.836"/>
</kw>
<kw name="Should Not Be Equal" library="BuiltIn">
<arg>${leaderSCM}</arg>
<arg>${newLeaderSCM}</arg>
<doc>Fails if the given objects are equal.</doc>
<status status="PASS" starttime="20230914 12:55:00.836" endtime="20230914 12:55:00.836"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230914 12:54:31.143" endtime="20230914 12:55:00.837"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20230914 12:54:31.090" endtime="20230914 12:55:00.838"/>
</suite>
<suite id="s1-s3" name="Root-Ca-Rotation-Client-Checks" source="/opt/hadoop/smoketest/certrotation/root-ca-rotation-client-checks.robot">
<test id="s1-s3-t1" name="Create a volume and bucket" line="27">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230914 12:55:07.976" level="INFO">Running command 'ozone sh volume create rootca-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20230914 12:55:16.923" level="INFO">${rc} = 0</msg>
<msg timestamp="20230914 12:55:16.923" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230914 12:55:07.973" endtime="20230914 12:55:16.923"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 12:55:16.925" level="INFO"/>
<status status="PASS" starttime="20230914 12:55:16.924" endtime="20230914 12:55:16.925"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230914 12:55:16.928" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230914 12:55:16.925" endtime="20230914 12:55:16.928"/>
</kw>
<status status="PASS" starttime="20230914 12:55:07.973" endtime="20230914 12:55:16.930"/>
</kw>
<msg timestamp="20230914 12:55:16.930" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230914 12:55:07.972" endtime="20230914 12:55:16.930"/>
</kw>
<msg timestamp="20230914 12:55:16.930" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230914 12:55:07.972" endtime="20230914 12:55:16.930"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230914 12:55:16.931" endtime="20230914 12:55:16.933"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230914 12:55:16.947" level="INFO">Running command 'ozone sh bucket create /rootca-volume/rootca-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230914 12:55:23.992" level="INFO">${rc} = 0</msg>
<msg timestamp="20230914 12:55:23.992" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230914 12:55:16.939" endtime="20230914 12:55:23.993"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 12:55:23.994" level="INFO"/>
<status status="PASS" starttime="20230914 12:55:23.993" endtime="20230914 12:55:23.994"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230914 12:55:23.995" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230914 12:55:23.994" endtime="20230914 12:55:23.995"/>
</kw>
<status status="PASS" starttime="20230914 12:55:16.939" endtime="20230914 12:55:23.995"/>
</kw>
<msg timestamp="20230914 12:55:23.995" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230914 12:55:16.936" endtime="20230914 12:55:23.995"/>
</kw>
<msg timestamp="20230914 12:55:23.995" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230914 12:55:16.933" endtime="20230914 12:55:23.995"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230914 12:55:23.995" endtime="20230914 12:55:23.996"/>
</kw>
<tag>create-volume-and-bucket</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230914 12:55:07.971" endtime="20230914 12:55:23.996"/>
</test>
<test id="s1-s3-t2" name="Create key" line="34">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230914 12:55:24.002" level="INFO">Running command 'echo "rootca: key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20230914 12:55:24.005" level="INFO">${rc} = 0</msg>
<msg timestamp="20230914 12:55:24.005" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230914 12:55:23.999" endtime="20230914 12:55:24.005"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 12:55:24.006" level="INFO"/>
<status status="PASS" starttime="20230914 12:55:24.006" endtime="20230914 12:55:24.007"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230914 12:55:24.007" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230914 12:55:24.007" endtime="20230914 12:55:24.007"/>
</kw>
<status status="PASS" starttime="20230914 12:55:23.998" endtime="20230914 12:55:24.007"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230914 12:55:24.013" level="INFO">Running command 'ozone sh key put /rootca-volume/rootca-bucket/rootca-key /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230914 12:55:41.387" level="INFO">${rc} = 0</msg>
<msg timestamp="20230914 12:55:41.387" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230914 12:55:24.010" endtime="20230914 12:55:41.387"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 12:55:41.391" level="INFO"/>
<status status="PASS" starttime="20230914 12:55:41.388" endtime="20230914 12:55:41.391"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230914 12:55:41.394" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230914 12:55:41.393" endtime="20230914 12:55:41.394"/>
</kw>
<status status="PASS" starttime="20230914 12:55:24.009" endtime="20230914 12:55:41.397"/>
</kw>
<msg timestamp="20230914 12:55:41.398" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230914 12:55:24.008" endtime="20230914 12:55:41.398"/>
</kw>
<msg timestamp="20230914 12:55:41.398" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230914 12:55:24.008" endtime="20230914 12:55:41.399"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230914 12:55:41.399" endtime="20230914 12:55:41.399"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230914 12:55:41.411" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230914 12:55:41.417" level="INFO">${rc} = 0</msg>
<msg timestamp="20230914 12:55:41.417" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230914 12:55:41.404" endtime="20230914 12:55:41.417"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 12:55:41.423" level="INFO"/>
<status status="PASS" starttime="20230914 12:55:41.421" endtime="20230914 12:55:41.423"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230914 12:55:41.424" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230914 12:55:41.423" endtime="20230914 12:55:41.424"/>
</kw>
<status status="PASS" starttime="20230914 12:55:41.403" endtime="20230914 12:55:41.424"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230914 12:55:23.997" endtime="20230914 12:55:41.424"/>
</test>
<test id="s1-s3-t3" name="Read data from previously created key" line="40">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230914 12:55:41.427" level="INFO">${random} = 21636</msg>
<status status="PASS" starttime="20230914 12:55:41.427" endtime="20230914 12:55:41.427"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230914 12:55:41.450" level="INFO">Running command 'ozone sh key get /rootca-volume/rootca-bucket/rootca-key /tmp/key-21636 2&gt;&amp;1'.</msg>
<msg timestamp="20230914 12:55:59.093" level="INFO">${rc} = 255</msg>
<msg timestamp="20230914 12:55:59.093" level="INFO">${output} = java.util.concurrent.ExecutionException: org.apache.ratis.thirdparty.io.grpc.StatusRuntimeException: UNAVAILABLE: io exception</msg>
<status status="PASS" starttime="20230914 12:55:41.433" endtime="20230914 12:55:59.093"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 12:55:59.095" level="INFO">java.util.concurrent.ExecutionException: org.apache.ratis.thirdparty.io.grpc.StatusRuntimeException: UNAVAILABLE: io exception</msg>
<status status="PASS" starttime="20230914 12:55:59.094" endtime="20230914 12:55:59.095"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230914 12:55:59.095" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<msg timestamp="20230914 12:55:59.096" level="FAIL">255 != 0</msg>
<status status="FAIL" starttime="20230914 12:55:59.095" endtime="20230914 12:55:59.096"/>
</kw>
<status status="FAIL" starttime="20230914 12:55:41.432" endtime="20230914 12:55:59.096"/>
</kw>
<msg timestamp="20230914 12:55:59.096" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20230914 12:55:41.429" endtime="20230914 12:55:59.096"/>
</kw>
<status status="FAIL" starttime="20230914 12:55:41.428" endtime="20230914 12:55:59.096"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230914 12:55:59.097" endtime="20230914 12:55:59.097"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/key-${random}</arg>
<arg>0</arg>
<status status="NOT RUN" starttime="20230914 12:55:59.097" endtime="20230914 12:55:59.097"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230914 12:55:59.097" endtime="20230914 12:55:59.097"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/key-${random}</arg>
<arg>0</arg>
<status status="NOT RUN" starttime="20230914 12:55:59.097" endtime="20230914 12:55:59.097"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20230914 12:55:41.426" endtime="20230914 12:55:59.098">255 != 0</status>
</test>
<doc>Generate data</doc>
<status status="FAIL" starttime="20230914 12:55:07.918" endtime="20230914 12:55:59.100"/>
</suite>
<status status="FAIL" starttime="N/A" endtime="N/A" elapsedtime="81077"/>
</suite>
<statistics>
<total>
<stat pass="4" fail="1" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="1" fail="0" skip="0">create-volume-and-bucket</stat>
</tag>
<suite>
<stat pass="4" fail="1" skip="0" id="s1" name="ozonesecure-ha-root-ca-rotation">ozonesecure-ha-root-ca-rotation</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1" name="Kinit">ozonesecure-ha-root-ca-rotation.Kinit</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2" name="Scm-Leader-Transfer">ozonesecure-ha-root-ca-rotation.Scm-Leader-Transfer</stat>
<stat pass="2" fail="1" skip="0" id="s1-s3" name="Root-Ca-Rotation-Client-Checks">ozonesecure-ha-root-ca-rotation.Root-Ca-Rotation-Client-Checks</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
