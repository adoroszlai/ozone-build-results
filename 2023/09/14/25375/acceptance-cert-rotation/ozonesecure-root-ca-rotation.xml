<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 6.1.1 (Python 3.8.10 on linux)" generated="20230914 13:04:30.190" rpa="false" schemaversion="4">
<suite id="s1" name="ozonesecure-root-ca-rotation">
<suite id="s1-s1" name="Kinit" source="/opt/hadoop/smoketest/kinit.robot">
<test id="s1-s1-t1" name="Kinit" line="27">
<kw name="Kinit test user" library="commonlib">
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230914 13:01:36.669" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230914 13:01:36.672" level="INFO">${rc} = 0</msg>
<msg timestamp="20230914 13:01:36.672" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230914 13:01:36.667" endtime="20230914 13:01:36.672"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 13:01:36.674" level="INFO">scm</msg>
<status status="PASS" starttime="20230914 13:01:36.673" endtime="20230914 13:01:36.674"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230914 13:01:36.674" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230914 13:01:36.674" endtime="20230914 13:01:36.674"/>
</kw>
<status status="PASS" starttime="20230914 13:01:36.666" endtime="20230914 13:01:36.675"/>
</kw>
<msg timestamp="20230914 13:01:36.675" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230914 13:01:36.666" endtime="20230914 13:01:36.675"/>
</kw>
<msg timestamp="20230914 13:01:36.675" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230914 13:01:36.665" endtime="20230914 13:01:36.675"/>
</kw>
<msg timestamp="20230914 13:01:36.675" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230914 13:01:36.665" endtime="20230914 13:01:36.675"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230914 13:01:36.676" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230914 13:01:36.676" endtime="20230914 13:01:36.676"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230914 13:01:36.680" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20230914 13:01:36.730" level="INFO">${rc} = 0</msg>
<msg timestamp="20230914 13:01:36.730" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230914 13:01:36.678" endtime="20230914 13:01:36.730"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 13:01:36.731" level="INFO"/>
<status status="PASS" starttime="20230914 13:01:36.731" endtime="20230914 13:01:36.732"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230914 13:01:36.732" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230914 13:01:36.732" endtime="20230914 13:01:36.732"/>
</kw>
<status status="PASS" starttime="20230914 13:01:36.677" endtime="20230914 13:01:36.732"/>
</kw>
<msg timestamp="20230914 13:01:36.732" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230914 13:01:36.677" endtime="20230914 13:01:36.733"/>
</kw>
<status status="PASS" starttime="20230914 13:01:36.677" endtime="20230914 13:01:36.733"/>
</kw>
<status status="PASS" starttime="20230914 13:01:36.676" endtime="20230914 13:01:36.733"/>
</kw>
<status status="PASS" starttime="20230914 13:01:36.664" endtime="20230914 13:01:36.733"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20230914 13:01:36.663" endtime="20230914 13:01:36.733"/>
</test>
<doc>Kinit test user</doc>
<status status="PASS" starttime="20230914 13:01:36.605" endtime="20230914 13:01:36.736"/>
</suite>
<suite id="s1-s2" name="Root-Ca-Rotation-Client-Checks" source="/opt/hadoop/smoketest/certrotation/root-ca-rotation-client-checks.robot">
<test id="s1-s2-t1" name="Create a volume and bucket" line="27">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230914 13:02:11.512" level="INFO">Running command 'ozone sh volume create rootca-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20230914 13:02:17.364" level="INFO">${rc} = 0</msg>
<msg timestamp="20230914 13:02:17.365" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230914 13:02:11.510" endtime="20230914 13:02:17.365"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 13:02:17.366" level="INFO"/>
<status status="PASS" starttime="20230914 13:02:17.365" endtime="20230914 13:02:17.366"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230914 13:02:17.366" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230914 13:02:17.366" endtime="20230914 13:02:17.366"/>
</kw>
<status status="PASS" starttime="20230914 13:02:11.509" endtime="20230914 13:02:17.367"/>
</kw>
<msg timestamp="20230914 13:02:17.367" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230914 13:02:11.509" endtime="20230914 13:02:17.367"/>
</kw>
<msg timestamp="20230914 13:02:17.367" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230914 13:02:11.509" endtime="20230914 13:02:17.367"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230914 13:02:17.367" endtime="20230914 13:02:17.368"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230914 13:02:17.372" level="INFO">Running command 'ozone sh bucket create /rootca-volume/rootca-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230914 13:02:22.750" level="INFO">${rc} = 0</msg>
<msg timestamp="20230914 13:02:22.750" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230914 13:02:17.369" endtime="20230914 13:02:22.750"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 13:02:22.752" level="INFO"/>
<status status="PASS" starttime="20230914 13:02:22.751" endtime="20230914 13:02:22.752"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230914 13:02:22.752" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230914 13:02:22.752" endtime="20230914 13:02:22.752"/>
</kw>
<status status="PASS" starttime="20230914 13:02:17.369" endtime="20230914 13:02:22.752"/>
</kw>
<msg timestamp="20230914 13:02:22.753" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230914 13:02:17.368" endtime="20230914 13:02:22.753"/>
</kw>
<msg timestamp="20230914 13:02:22.753" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230914 13:02:17.368" endtime="20230914 13:02:22.753"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230914 13:02:22.753" endtime="20230914 13:02:22.753"/>
</kw>
<tag>create-volume-and-bucket</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230914 13:02:11.508" endtime="20230914 13:02:22.754"/>
</test>
<test id="s1-s2-t2" name="Create key" line="34">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230914 13:02:22.758" level="INFO">Running command 'echo "rootca: key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20230914 13:02:22.760" level="INFO">${rc} = 0</msg>
<msg timestamp="20230914 13:02:22.760" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230914 13:02:22.756" endtime="20230914 13:02:22.760"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 13:02:22.761" level="INFO"/>
<status status="PASS" starttime="20230914 13:02:22.761" endtime="20230914 13:02:22.761"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230914 13:02:22.762" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230914 13:02:22.761" endtime="20230914 13:02:22.762"/>
</kw>
<status status="PASS" starttime="20230914 13:02:22.755" endtime="20230914 13:02:22.762"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230914 13:02:22.766" level="INFO">Running command 'ozone sh key put /rootca-volume/rootca-bucket/rootca-key /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230914 13:02:33.584" level="INFO">${rc} = 0</msg>
<msg timestamp="20230914 13:02:33.584" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230914 13:02:22.764" endtime="20230914 13:02:33.584"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 13:02:33.586" level="INFO"/>
<status status="PASS" starttime="20230914 13:02:33.585" endtime="20230914 13:02:33.586"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230914 13:02:33.587" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230914 13:02:33.586" endtime="20230914 13:02:33.587"/>
</kw>
<status status="PASS" starttime="20230914 13:02:22.763" endtime="20230914 13:02:33.587"/>
</kw>
<msg timestamp="20230914 13:02:33.587" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230914 13:02:22.763" endtime="20230914 13:02:33.587"/>
</kw>
<msg timestamp="20230914 13:02:33.587" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230914 13:02:22.762" endtime="20230914 13:02:33.587"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230914 13:02:33.587" endtime="20230914 13:02:33.588"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230914 13:02:33.591" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230914 13:02:33.594" level="INFO">${rc} = 0</msg>
<msg timestamp="20230914 13:02:33.594" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230914 13:02:33.588" endtime="20230914 13:02:33.594"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 13:02:33.595" level="INFO"/>
<status status="PASS" starttime="20230914 13:02:33.594" endtime="20230914 13:02:33.595"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230914 13:02:33.595" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230914 13:02:33.595" endtime="20230914 13:02:33.595"/>
</kw>
<status status="PASS" starttime="20230914 13:02:33.588" endtime="20230914 13:02:33.596"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230914 13:02:22.754" endtime="20230914 13:02:33.596"/>
</test>
<test id="s1-s2-t3" name="Read data from previously created key" line="40">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230914 13:02:33.598" level="INFO">${random} = 54447</msg>
<status status="PASS" starttime="20230914 13:02:33.598" endtime="20230914 13:02:33.598"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230914 13:02:33.602" level="INFO">Running command 'ozone sh key get /rootca-volume/rootca-bucket/rootca-key /tmp/key-54447 2&gt;&amp;1'.</msg>
<msg timestamp="20230914 13:02:41.625" level="INFO">${rc} = 0</msg>
<msg timestamp="20230914 13:02:41.625" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230914 13:02:33.600" endtime="20230914 13:02:41.625"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 13:02:41.626" level="INFO"/>
<status status="PASS" starttime="20230914 13:02:41.625" endtime="20230914 13:02:41.626"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230914 13:02:41.627" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230914 13:02:41.626" endtime="20230914 13:02:41.627"/>
</kw>
<status status="PASS" starttime="20230914 13:02:33.599" endtime="20230914 13:02:41.627"/>
</kw>
<msg timestamp="20230914 13:02:41.627" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230914 13:02:33.599" endtime="20230914 13:02:41.627"/>
</kw>
<msg timestamp="20230914 13:02:41.627" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230914 13:02:33.598" endtime="20230914 13:02:41.627"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230914 13:02:41.627" endtime="20230914 13:02:41.628"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230914 13:02:41.630" level="INFO">Running command 'cat /tmp/key-54447 2&gt;&amp;1'.</msg>
<msg timestamp="20230914 13:02:41.633" level="INFO">${rc} = 0</msg>
<msg timestamp="20230914 13:02:41.633" level="INFO">${output} = rootca: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230914 13:02:41.628" endtime="20230914 13:02:41.633"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 13:02:41.635" level="INFO">rootca: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230914 13:02:41.634" endtime="20230914 13:02:41.635"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230914 13:02:41.635" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230914 13:02:41.635" endtime="20230914 13:02:41.635"/>
</kw>
<msg timestamp="20230914 13:02:41.636" level="INFO">${output} = rootca: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230914 13:02:41.628" endtime="20230914 13:02:41.636"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230914 13:02:41.636" endtime="20230914 13:02:41.636"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230914 13:02:41.639" level="INFO">Running command 'rm /tmp/key-54447 2&gt;&amp;1'.</msg>
<msg timestamp="20230914 13:02:41.642" level="INFO">${rc} = 0</msg>
<msg timestamp="20230914 13:02:41.642" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230914 13:02:41.637" endtime="20230914 13:02:41.642"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 13:02:41.643" level="INFO"/>
<status status="PASS" starttime="20230914 13:02:41.642" endtime="20230914 13:02:41.643"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230914 13:02:41.644" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230914 13:02:41.643" endtime="20230914 13:02:41.644"/>
</kw>
<status status="PASS" starttime="20230914 13:02:41.636" endtime="20230914 13:02:41.644"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230914 13:02:33.597" endtime="20230914 13:02:41.644"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20230914 13:02:11.461" endtime="20230914 13:02:41.646"/>
</suite>
<suite id="s1-s3" name="Root-Ca-Rotation-Client-Checks" source="/opt/hadoop/smoketest/certrotation/root-ca-rotation-client-checks.robot">
<test id="s1-s3-t1" name="Create a volume and bucket" line="27">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230914 13:03:43.208" level="INFO">Running command 'ozone sh volume create rootca2-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20230914 13:03:48.115" level="INFO">${rc} = 0</msg>
<msg timestamp="20230914 13:03:48.115" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230914 13:03:43.205" endtime="20230914 13:03:48.115"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 13:03:48.116" level="INFO"/>
<status status="PASS" starttime="20230914 13:03:48.115" endtime="20230914 13:03:48.116"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230914 13:03:48.117" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230914 13:03:48.116" endtime="20230914 13:03:48.117"/>
</kw>
<status status="PASS" starttime="20230914 13:03:43.205" endtime="20230914 13:03:48.117"/>
</kw>
<msg timestamp="20230914 13:03:48.117" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230914 13:03:43.205" endtime="20230914 13:03:48.117"/>
</kw>
<msg timestamp="20230914 13:03:48.117" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230914 13:03:43.204" endtime="20230914 13:03:48.117"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230914 13:03:48.117" endtime="20230914 13:03:48.118"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230914 13:03:48.128" level="INFO">Running command 'ozone sh bucket create /rootca2-volume/rootca2-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230914 13:03:53.055" level="INFO">${rc} = 0</msg>
<msg timestamp="20230914 13:03:53.055" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230914 13:03:48.119" endtime="20230914 13:03:53.055"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 13:03:53.056" level="INFO"/>
<status status="PASS" starttime="20230914 13:03:53.055" endtime="20230914 13:03:53.056"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230914 13:03:53.057" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230914 13:03:53.056" endtime="20230914 13:03:53.057"/>
</kw>
<status status="PASS" starttime="20230914 13:03:48.119" endtime="20230914 13:03:53.057"/>
</kw>
<msg timestamp="20230914 13:03:53.057" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230914 13:03:48.118" endtime="20230914 13:03:53.057"/>
</kw>
<msg timestamp="20230914 13:03:53.057" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230914 13:03:48.118" endtime="20230914 13:03:53.057"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230914 13:03:53.057" endtime="20230914 13:03:53.058"/>
</kw>
<tag>create-volume-and-bucket</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230914 13:03:43.203" endtime="20230914 13:03:53.058"/>
</test>
<test id="s1-s3-t2" name="Create key" line="34">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230914 13:03:53.062" level="INFO">Running command 'echo "rootca2: key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20230914 13:03:53.064" level="INFO">${rc} = 0</msg>
<msg timestamp="20230914 13:03:53.064" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230914 13:03:53.060" endtime="20230914 13:03:53.064"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 13:03:53.065" level="INFO"/>
<status status="PASS" starttime="20230914 13:03:53.065" endtime="20230914 13:03:53.066"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230914 13:03:53.066" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230914 13:03:53.066" endtime="20230914 13:03:53.066"/>
</kw>
<status status="PASS" starttime="20230914 13:03:53.059" endtime="20230914 13:03:53.066"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230914 13:03:53.071" level="INFO">Running command 'ozone sh key put /rootca2-volume/rootca2-bucket/rootca2-key /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230914 13:04:00.684" level="INFO">${rc} = 0</msg>
<msg timestamp="20230914 13:04:00.684" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230914 13:03:53.068" endtime="20230914 13:04:00.684"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 13:04:00.685" level="INFO"/>
<status status="PASS" starttime="20230914 13:04:00.684" endtime="20230914 13:04:00.685"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230914 13:04:00.686" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230914 13:04:00.685" endtime="20230914 13:04:00.686"/>
</kw>
<status status="PASS" starttime="20230914 13:03:53.068" endtime="20230914 13:04:00.686"/>
</kw>
<msg timestamp="20230914 13:04:00.686" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230914 13:03:53.067" endtime="20230914 13:04:00.686"/>
</kw>
<msg timestamp="20230914 13:04:00.687" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230914 13:03:53.067" endtime="20230914 13:04:00.687"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230914 13:04:00.687" endtime="20230914 13:04:00.687"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230914 13:04:00.690" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230914 13:04:00.693" level="INFO">${rc} = 0</msg>
<msg timestamp="20230914 13:04:00.693" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230914 13:04:00.688" endtime="20230914 13:04:00.693"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 13:04:00.694" level="INFO"/>
<status status="PASS" starttime="20230914 13:04:00.694" endtime="20230914 13:04:00.694"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230914 13:04:00.695" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230914 13:04:00.694" endtime="20230914 13:04:00.695"/>
</kw>
<status status="PASS" starttime="20230914 13:04:00.687" endtime="20230914 13:04:00.695"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230914 13:03:53.059" endtime="20230914 13:04:00.695"/>
</test>
<test id="s1-s3-t3" name="Read data from previously created key" line="40">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230914 13:04:00.697" level="INFO">${random} = 83582</msg>
<status status="PASS" starttime="20230914 13:04:00.696" endtime="20230914 13:04:00.697"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230914 13:04:00.700" level="INFO">Running command 'ozone sh key get /rootca2-volume/rootca2-bucket/rootca2-key /tmp/key-83582 2&gt;&amp;1'.</msg>
<msg timestamp="20230914 13:04:07.480" level="INFO">${rc} = 0</msg>
<msg timestamp="20230914 13:04:07.480" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230914 13:04:00.698" endtime="20230914 13:04:07.480"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 13:04:07.482" level="INFO"/>
<status status="PASS" starttime="20230914 13:04:07.481" endtime="20230914 13:04:07.482"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230914 13:04:07.482" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230914 13:04:07.482" endtime="20230914 13:04:07.482"/>
</kw>
<status status="PASS" starttime="20230914 13:04:00.698" endtime="20230914 13:04:07.483"/>
</kw>
<msg timestamp="20230914 13:04:07.483" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230914 13:04:00.698" endtime="20230914 13:04:07.483"/>
</kw>
<msg timestamp="20230914 13:04:07.483" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230914 13:04:00.697" endtime="20230914 13:04:07.483"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230914 13:04:07.483" endtime="20230914 13:04:07.483"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230914 13:04:07.492" level="INFO">Running command 'cat /tmp/key-83582 2&gt;&amp;1'.</msg>
<msg timestamp="20230914 13:04:07.495" level="INFO">${rc} = 0</msg>
<msg timestamp="20230914 13:04:07.495" level="INFO">${output} = rootca2: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230914 13:04:07.484" endtime="20230914 13:04:07.496"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 13:04:07.497" level="INFO">rootca2: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230914 13:04:07.496" endtime="20230914 13:04:07.497"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230914 13:04:07.498" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230914 13:04:07.497" endtime="20230914 13:04:07.498"/>
</kw>
<msg timestamp="20230914 13:04:07.498" level="INFO">${output} = rootca2: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230914 13:04:07.484" endtime="20230914 13:04:07.498"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230914 13:04:07.498" endtime="20230914 13:04:07.499"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230914 13:04:07.503" level="INFO">Running command 'rm /tmp/key-83582 2&gt;&amp;1'.</msg>
<msg timestamp="20230914 13:04:07.506" level="INFO">${rc} = 0</msg>
<msg timestamp="20230914 13:04:07.506" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230914 13:04:07.500" endtime="20230914 13:04:07.506"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 13:04:07.508" level="INFO"/>
<status status="PASS" starttime="20230914 13:04:07.506" endtime="20230914 13:04:07.508"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230914 13:04:07.509" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230914 13:04:07.508" endtime="20230914 13:04:07.509"/>
</kw>
<status status="PASS" starttime="20230914 13:04:07.499" endtime="20230914 13:04:07.509"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230914 13:04:00.696" endtime="20230914 13:04:07.510"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20230914 13:03:43.158" endtime="20230914 13:04:07.512"/>
</suite>
<suite id="s1-s4" name="Root-Ca-Rotation" source="/opt/hadoop/smoketest/scmha/root-ca-rotation.robot">
<test id="s1-s4-t1" name="Verify root CA rotation metrics" line="26">
<kw name="Execute" library="os">
<var>${successRotationLine}</var>
<arg>curl -sS 'http://localhost:9876/jmx' | grep NumSuccessRotation</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230914 13:04:10.972" level="INFO">Running command 'curl -sS 'http://localhost:9876/jmx' | grep NumSuccessRotation 2&gt;&amp;1'.</msg>
<msg timestamp="20230914 13:04:11.498" level="INFO">${rc} = 0</msg>
<msg timestamp="20230914 13:04:11.498" level="INFO">${output} =     "NumSuccessRotation" : 2,</msg>
<status status="PASS" starttime="20230914 13:04:10.969" endtime="20230914 13:04:11.498"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 13:04:11.499" level="INFO">    "NumSuccessRotation" : 2,</msg>
<status status="PASS" starttime="20230914 13:04:11.499" endtime="20230914 13:04:11.499"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230914 13:04:11.500" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230914 13:04:11.500" endtime="20230914 13:04:11.500"/>
</kw>
<status status="PASS" starttime="20230914 13:04:10.968" endtime="20230914 13:04:11.500"/>
</kw>
<msg timestamp="20230914 13:04:11.500" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230914 13:04:10.968" endtime="20230914 13:04:11.501"/>
</kw>
<msg timestamp="20230914 13:04:11.501" level="INFO">${successRotationLine} =     "NumSuccessRotation" : 2,</msg>
<status status="PASS" starttime="20230914 13:04:10.968" endtime="20230914 13:04:11.501"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${successRotationLine}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 13:04:11.501" level="INFO">    "NumSuccessRotation" : 2,</msg>
<status status="PASS" starttime="20230914 13:04:11.501" endtime="20230914 13:04:11.501"/>
</kw>
<kw name="Split String" library="String">
<var>${temp_1}</var>
<arg>${successRotationLine}</arg>
<arg>:</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20230914 13:04:11.502" level="INFO">${temp_1} = ['    "NumSuccessRotation" ', ' 2,']</msg>
<status status="PASS" starttime="20230914 13:04:11.502" endtime="20230914 13:04:11.502"/>
</kw>
<kw name="Strip String" library="String">
<var>${temp_2}</var>
<arg>${temp_1[1]}</arg>
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<msg timestamp="20230914 13:04:11.503" level="INFO">${temp_2} = 2,</msg>
<status status="PASS" starttime="20230914 13:04:11.502" endtime="20230914 13:04:11.503"/>
</kw>
<kw name="Split String" library="String">
<var>${temp_3}</var>
<arg>${temp_2}</arg>
<arg>,</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20230914 13:04:11.504" level="INFO">${temp_3} = ['2', '']</msg>
<status status="PASS" starttime="20230914 13:04:11.503" endtime="20230914 13:04:11.504"/>
</kw>
<kw name="Strip String" library="String">
<var>${successRotation}</var>
<arg>${temp_3[0]}</arg>
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<msg timestamp="20230914 13:04:11.505" level="INFO">${successRotation} = 2</msg>
<status status="PASS" starttime="20230914 13:04:11.504" endtime="20230914 13:04:11.505"/>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<var>${successRotation}</var>
<arg>${successRotation}</arg>
<doc>Converts the given item to a floating point number.</doc>
<msg timestamp="20230914 13:04:11.506" level="INFO">${successRotation} = 2.0</msg>
<status status="PASS" starttime="20230914 13:04:11.505" endtime="20230914 13:04:11.506"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${successRotation} &gt;= 1</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230914 13:04:11.506" endtime="20230914 13:04:11.506"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230914 13:04:10.967" endtime="20230914 13:04:11.506"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20230914 13:04:10.921" endtime="20230914 13:04:11.508"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="55257"/>
</suite>
<statistics>
<total>
<stat pass="8" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="2" fail="0" skip="0">create-volume-and-bucket</stat>
</tag>
<suite>
<stat pass="8" fail="0" skip="0" id="s1" name="ozonesecure-root-ca-rotation">ozonesecure-root-ca-rotation</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1" name="Kinit">ozonesecure-root-ca-rotation.Kinit</stat>
<stat pass="3" fail="0" skip="0" id="s1-s2" name="Root-Ca-Rotation-Client-Checks">ozonesecure-root-ca-rotation.Root-Ca-Rotation-Client-Checks</stat>
<stat pass="3" fail="0" skip="0" id="s1-s3" name="Root-Ca-Rotation-Client-Checks">ozonesecure-root-ca-rotation.Root-Ca-Rotation-Client-Checks</stat>
<stat pass="1" fail="0" skip="0" id="s1-s4" name="Root-Ca-Rotation">ozonesecure-root-ca-rotation.Root-Ca-Rotation</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
