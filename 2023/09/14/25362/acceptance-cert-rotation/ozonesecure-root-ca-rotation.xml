<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 6.1.1 (Python 3.8.10 on linux)" generated="20230914 06:19:29.176" rpa="false" schemaversion="4">
<suite id="s1" name="ozonesecure-root-ca-rotation">
<suite id="s1-s1" name="Kinit" source="/opt/hadoop/smoketest/kinit.robot">
<test id="s1-s1-t1" name="Kinit" line="27">
<kw name="Kinit test user" library="commonlib">
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230914 06:16:39.347" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230914 06:16:39.352" level="INFO">${rc} = 0</msg>
<msg timestamp="20230914 06:16:39.352" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230914 06:16:39.345" endtime="20230914 06:16:39.352"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 06:16:39.353" level="INFO">scm</msg>
<status status="PASS" starttime="20230914 06:16:39.352" endtime="20230914 06:16:39.353"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230914 06:16:39.354" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230914 06:16:39.353" endtime="20230914 06:16:39.354"/>
</kw>
<status status="PASS" starttime="20230914 06:16:39.344" endtime="20230914 06:16:39.354"/>
</kw>
<msg timestamp="20230914 06:16:39.354" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230914 06:16:39.344" endtime="20230914 06:16:39.354"/>
</kw>
<msg timestamp="20230914 06:16:39.354" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230914 06:16:39.343" endtime="20230914 06:16:39.354"/>
</kw>
<msg timestamp="20230914 06:16:39.355" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230914 06:16:39.343" endtime="20230914 06:16:39.355"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230914 06:16:39.355" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230914 06:16:39.355" endtime="20230914 06:16:39.355"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230914 06:16:39.360" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20230914 06:16:39.386" level="INFO">${rc} = 0</msg>
<msg timestamp="20230914 06:16:39.386" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230914 06:16:39.357" endtime="20230914 06:16:39.386"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 06:16:39.387" level="INFO"/>
<status status="PASS" starttime="20230914 06:16:39.387" endtime="20230914 06:16:39.387"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230914 06:16:39.388" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230914 06:16:39.388" endtime="20230914 06:16:39.388"/>
</kw>
<status status="PASS" starttime="20230914 06:16:39.357" endtime="20230914 06:16:39.388"/>
</kw>
<msg timestamp="20230914 06:16:39.388" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230914 06:16:39.356" endtime="20230914 06:16:39.389"/>
</kw>
<status status="PASS" starttime="20230914 06:16:39.356" endtime="20230914 06:16:39.389"/>
</kw>
<status status="PASS" starttime="20230914 06:16:39.355" endtime="20230914 06:16:39.389"/>
</kw>
<status status="PASS" starttime="20230914 06:16:39.337" endtime="20230914 06:16:39.389"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20230914 06:16:39.336" endtime="20230914 06:16:39.389"/>
</test>
<doc>Kinit test user</doc>
<status status="PASS" starttime="20230914 06:16:39.278" endtime="20230914 06:16:39.390"/>
</suite>
<suite id="s1-s2" name="Root-Ca-Rotation-Client-Checks" source="/opt/hadoop/smoketest/certrotation/root-ca-rotation-client-checks.robot">
<test id="s1-s2-t1" name="Create a volume and bucket" line="27">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230914 06:17:03.701" level="INFO">Running command 'ozone sh volume create rootca-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20230914 06:17:09.026" level="INFO">${rc} = 0</msg>
<msg timestamp="20230914 06:17:09.026" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230914 06:17:03.698" endtime="20230914 06:17:09.026"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 06:17:09.027" level="INFO"/>
<status status="PASS" starttime="20230914 06:17:09.027" endtime="20230914 06:17:09.027"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230914 06:17:09.028" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230914 06:17:09.028" endtime="20230914 06:17:09.028"/>
</kw>
<status status="PASS" starttime="20230914 06:17:03.698" endtime="20230914 06:17:09.028"/>
</kw>
<msg timestamp="20230914 06:17:09.028" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230914 06:17:03.697" endtime="20230914 06:17:09.029"/>
</kw>
<msg timestamp="20230914 06:17:09.029" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230914 06:17:03.697" endtime="20230914 06:17:09.029"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230914 06:17:09.029" endtime="20230914 06:17:09.029"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230914 06:17:09.034" level="INFO">Running command 'ozone sh bucket create /rootca-volume/rootca-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230914 06:17:14.446" level="INFO">${rc} = 0</msg>
<msg timestamp="20230914 06:17:14.446" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230914 06:17:09.031" endtime="20230914 06:17:14.446"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 06:17:14.448" level="INFO"/>
<status status="PASS" starttime="20230914 06:17:14.447" endtime="20230914 06:17:14.448"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230914 06:17:14.448" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230914 06:17:14.448" endtime="20230914 06:17:14.449"/>
</kw>
<status status="PASS" starttime="20230914 06:17:09.030" endtime="20230914 06:17:14.449"/>
</kw>
<msg timestamp="20230914 06:17:14.449" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230914 06:17:09.030" endtime="20230914 06:17:14.449"/>
</kw>
<msg timestamp="20230914 06:17:14.449" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230914 06:17:09.029" endtime="20230914 06:17:14.449"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230914 06:17:14.449" endtime="20230914 06:17:14.450"/>
</kw>
<tag>create-volume-and-bucket</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230914 06:17:03.696" endtime="20230914 06:17:14.450"/>
</test>
<test id="s1-s2-t2" name="Create key" line="34">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230914 06:17:14.455" level="INFO">Running command 'echo "rootca: key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20230914 06:17:14.457" level="INFO">${rc} = 0</msg>
<msg timestamp="20230914 06:17:14.457" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230914 06:17:14.452" endtime="20230914 06:17:14.457"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 06:17:14.458" level="INFO"/>
<status status="PASS" starttime="20230914 06:17:14.458" endtime="20230914 06:17:14.458"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230914 06:17:14.459" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230914 06:17:14.458" endtime="20230914 06:17:14.459"/>
</kw>
<status status="PASS" starttime="20230914 06:17:14.452" endtime="20230914 06:17:14.459"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230914 06:17:14.463" level="INFO">Running command 'ozone sh key put /rootca-volume/rootca-bucket/rootca-key /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230914 06:17:25.796" level="INFO">${rc} = 0</msg>
<msg timestamp="20230914 06:17:25.796" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230914 06:17:14.461" endtime="20230914 06:17:25.796"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 06:17:25.798" level="INFO"/>
<status status="PASS" starttime="20230914 06:17:25.797" endtime="20230914 06:17:25.798"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230914 06:17:25.799" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230914 06:17:25.798" endtime="20230914 06:17:25.799"/>
</kw>
<status status="PASS" starttime="20230914 06:17:14.460" endtime="20230914 06:17:25.799"/>
</kw>
<msg timestamp="20230914 06:17:25.799" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230914 06:17:14.460" endtime="20230914 06:17:25.799"/>
</kw>
<msg timestamp="20230914 06:17:25.800" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230914 06:17:14.459" endtime="20230914 06:17:25.800"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230914 06:17:25.800" endtime="20230914 06:17:25.800"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230914 06:17:25.804" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230914 06:17:25.807" level="INFO">${rc} = 0</msg>
<msg timestamp="20230914 06:17:25.807" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230914 06:17:25.801" endtime="20230914 06:17:25.807"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 06:17:25.808" level="INFO"/>
<status status="PASS" starttime="20230914 06:17:25.808" endtime="20230914 06:17:25.808"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230914 06:17:25.809" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230914 06:17:25.809" endtime="20230914 06:17:25.809"/>
</kw>
<status status="PASS" starttime="20230914 06:17:25.800" endtime="20230914 06:17:25.809"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230914 06:17:14.451" endtime="20230914 06:17:25.809"/>
</test>
<test id="s1-s2-t3" name="Read data from previously created key" line="40">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230914 06:17:25.812" level="INFO">${random} = 32682</msg>
<status status="PASS" starttime="20230914 06:17:25.811" endtime="20230914 06:17:25.812"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230914 06:17:25.815" level="INFO">Running command 'ozone sh key get /rootca-volume/rootca-bucket/rootca-key /tmp/key-32682 2&gt;&amp;1'.</msg>
<msg timestamp="20230914 06:17:33.830" level="INFO">${rc} = 0</msg>
<msg timestamp="20230914 06:17:33.830" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230914 06:17:25.813" endtime="20230914 06:17:33.830"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 06:17:33.832" level="INFO"/>
<status status="PASS" starttime="20230914 06:17:33.831" endtime="20230914 06:17:33.832"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230914 06:17:33.832" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230914 06:17:33.832" endtime="20230914 06:17:33.833"/>
</kw>
<status status="PASS" starttime="20230914 06:17:25.813" endtime="20230914 06:17:33.833"/>
</kw>
<msg timestamp="20230914 06:17:33.833" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230914 06:17:25.813" endtime="20230914 06:17:33.833"/>
</kw>
<msg timestamp="20230914 06:17:33.833" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230914 06:17:25.812" endtime="20230914 06:17:33.833"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230914 06:17:33.833" endtime="20230914 06:17:33.834"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230914 06:17:33.837" level="INFO">Running command 'cat /tmp/key-32682 2&gt;&amp;1'.</msg>
<msg timestamp="20230914 06:17:33.840" level="INFO">${rc} = 0</msg>
<msg timestamp="20230914 06:17:33.840" level="INFO">${output} = rootca: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230914 06:17:33.835" endtime="20230914 06:17:33.840"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 06:17:33.841" level="INFO">rootca: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230914 06:17:33.841" endtime="20230914 06:17:33.841"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230914 06:17:33.842" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230914 06:17:33.841" endtime="20230914 06:17:33.842"/>
</kw>
<msg timestamp="20230914 06:17:33.842" level="INFO">${output} = rootca: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230914 06:17:33.834" endtime="20230914 06:17:33.842"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230914 06:17:33.842" endtime="20230914 06:17:33.843"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230914 06:17:33.846" level="INFO">Running command 'rm /tmp/key-32682 2&gt;&amp;1'.</msg>
<msg timestamp="20230914 06:17:33.849" level="INFO">${rc} = 0</msg>
<msg timestamp="20230914 06:17:33.849" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230914 06:17:33.844" endtime="20230914 06:17:33.849"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 06:17:33.850" level="INFO"/>
<status status="PASS" starttime="20230914 06:17:33.849" endtime="20230914 06:17:33.850"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230914 06:17:33.851" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230914 06:17:33.850" endtime="20230914 06:17:33.851"/>
</kw>
<status status="PASS" starttime="20230914 06:17:33.843" endtime="20230914 06:17:33.851"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230914 06:17:25.810" endtime="20230914 06:17:33.851"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20230914 06:17:03.646" endtime="20230914 06:17:33.853"/>
</suite>
<suite id="s1-s3" name="Root-Ca-Rotation-Client-Checks" source="/opt/hadoop/smoketest/certrotation/root-ca-rotation-client-checks.robot">
<test id="s1-s3-t1" name="Create a volume and bucket" line="27">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230914 06:18:38.331" level="INFO">Running command 'ozone sh volume create rootca2-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20230914 06:18:43.524" level="INFO">${rc} = 0</msg>
<msg timestamp="20230914 06:18:43.524" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230914 06:18:38.328" endtime="20230914 06:18:43.524"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 06:18:43.525" level="INFO"/>
<status status="PASS" starttime="20230914 06:18:43.524" endtime="20230914 06:18:43.525"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230914 06:18:43.526" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230914 06:18:43.526" endtime="20230914 06:18:43.526"/>
</kw>
<status status="PASS" starttime="20230914 06:18:38.327" endtime="20230914 06:18:43.526"/>
</kw>
<msg timestamp="20230914 06:18:43.527" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230914 06:18:38.327" endtime="20230914 06:18:43.527"/>
</kw>
<msg timestamp="20230914 06:18:43.527" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230914 06:18:38.326" endtime="20230914 06:18:43.527"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230914 06:18:43.527" endtime="20230914 06:18:43.527"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230914 06:18:43.532" level="INFO">Running command 'ozone sh bucket create /rootca2-volume/rootca2-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230914 06:18:48.641" level="INFO">${rc} = 0</msg>
<msg timestamp="20230914 06:18:48.641" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230914 06:18:43.529" endtime="20230914 06:18:48.641"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 06:18:48.643" level="INFO"/>
<status status="PASS" starttime="20230914 06:18:48.642" endtime="20230914 06:18:48.643"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230914 06:18:48.644" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230914 06:18:48.643" endtime="20230914 06:18:48.644"/>
</kw>
<status status="PASS" starttime="20230914 06:18:43.529" endtime="20230914 06:18:48.644"/>
</kw>
<msg timestamp="20230914 06:18:48.644" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230914 06:18:43.528" endtime="20230914 06:18:48.644"/>
</kw>
<msg timestamp="20230914 06:18:48.644" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230914 06:18:43.528" endtime="20230914 06:18:48.644"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230914 06:18:48.644" endtime="20230914 06:18:48.645"/>
</kw>
<tag>create-volume-and-bucket</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230914 06:18:38.325" endtime="20230914 06:18:48.645"/>
</test>
<test id="s1-s3-t2" name="Create key" line="34">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230914 06:18:48.651" level="INFO">Running command 'echo "rootca2: key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20230914 06:18:48.653" level="INFO">${rc} = 0</msg>
<msg timestamp="20230914 06:18:48.653" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230914 06:18:48.648" endtime="20230914 06:18:48.653"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 06:18:48.654" level="INFO"/>
<status status="PASS" starttime="20230914 06:18:48.654" endtime="20230914 06:18:48.654"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230914 06:18:48.655" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230914 06:18:48.654" endtime="20230914 06:18:48.655"/>
</kw>
<status status="PASS" starttime="20230914 06:18:48.647" endtime="20230914 06:18:48.655"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230914 06:18:48.660" level="INFO">Running command 'ozone sh key put /rootca2-volume/rootca2-bucket/rootca2-key /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230914 06:18:57.791" level="INFO">${rc} = 0</msg>
<msg timestamp="20230914 06:18:57.791" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230914 06:18:48.657" endtime="20230914 06:18:57.791"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 06:18:57.792" level="INFO"/>
<status status="PASS" starttime="20230914 06:18:57.791" endtime="20230914 06:18:57.792"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230914 06:18:57.793" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230914 06:18:57.792" endtime="20230914 06:18:57.793"/>
</kw>
<status status="PASS" starttime="20230914 06:18:48.656" endtime="20230914 06:18:57.793"/>
</kw>
<msg timestamp="20230914 06:18:57.793" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230914 06:18:48.656" endtime="20230914 06:18:57.793"/>
</kw>
<msg timestamp="20230914 06:18:57.793" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230914 06:18:48.655" endtime="20230914 06:18:57.794"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230914 06:18:57.794" endtime="20230914 06:18:57.794"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230914 06:18:57.798" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230914 06:18:57.801" level="INFO">${rc} = 0</msg>
<msg timestamp="20230914 06:18:57.801" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230914 06:18:57.795" endtime="20230914 06:18:57.801"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 06:18:57.802" level="INFO"/>
<status status="PASS" starttime="20230914 06:18:57.802" endtime="20230914 06:18:57.802"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230914 06:18:57.803" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230914 06:18:57.802" endtime="20230914 06:18:57.803"/>
</kw>
<status status="PASS" starttime="20230914 06:18:57.794" endtime="20230914 06:18:57.803"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230914 06:18:48.646" endtime="20230914 06:18:57.803"/>
</test>
<test id="s1-s3-t3" name="Read data from previously created key" line="40">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230914 06:18:57.806" level="INFO">${random} = 18745</msg>
<status status="PASS" starttime="20230914 06:18:57.805" endtime="20230914 06:18:57.806"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230914 06:18:57.810" level="INFO">Running command 'ozone sh key get /rootca2-volume/rootca2-bucket/rootca2-key /tmp/key-18745 2&gt;&amp;1'.</msg>
<msg timestamp="20230914 06:19:05.453" level="INFO">${rc} = 0</msg>
<msg timestamp="20230914 06:19:05.453" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230914 06:18:57.808" endtime="20230914 06:19:05.453"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 06:19:05.454" level="INFO"/>
<status status="PASS" starttime="20230914 06:19:05.453" endtime="20230914 06:19:05.454"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230914 06:19:05.455" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230914 06:19:05.454" endtime="20230914 06:19:05.455"/>
</kw>
<status status="PASS" starttime="20230914 06:18:57.807" endtime="20230914 06:19:05.455"/>
</kw>
<msg timestamp="20230914 06:19:05.455" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230914 06:18:57.807" endtime="20230914 06:19:05.455"/>
</kw>
<msg timestamp="20230914 06:19:05.455" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230914 06:18:57.806" endtime="20230914 06:19:05.455"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230914 06:19:05.456" endtime="20230914 06:19:05.456"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230914 06:19:05.460" level="INFO">Running command 'cat /tmp/key-18745 2&gt;&amp;1'.</msg>
<msg timestamp="20230914 06:19:05.463" level="INFO">${rc} = 0</msg>
<msg timestamp="20230914 06:19:05.463" level="INFO">${output} = rootca2: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230914 06:19:05.457" endtime="20230914 06:19:05.463"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 06:19:05.464" level="INFO">rootca2: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230914 06:19:05.463" endtime="20230914 06:19:05.464"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230914 06:19:05.465" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230914 06:19:05.464" endtime="20230914 06:19:05.465"/>
</kw>
<msg timestamp="20230914 06:19:05.465" level="INFO">${output} = rootca2: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230914 06:19:05.456" endtime="20230914 06:19:05.465"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230914 06:19:05.465" endtime="20230914 06:19:05.466"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230914 06:19:05.469" level="INFO">Running command 'rm /tmp/key-18745 2&gt;&amp;1'.</msg>
<msg timestamp="20230914 06:19:05.472" level="INFO">${rc} = 0</msg>
<msg timestamp="20230914 06:19:05.472" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230914 06:19:05.466" endtime="20230914 06:19:05.472"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 06:19:05.473" level="INFO"/>
<status status="PASS" starttime="20230914 06:19:05.472" endtime="20230914 06:19:05.473"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230914 06:19:05.473" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230914 06:19:05.473" endtime="20230914 06:19:05.473"/>
</kw>
<status status="PASS" starttime="20230914 06:19:05.466" endtime="20230914 06:19:05.474"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230914 06:18:57.804" endtime="20230914 06:19:05.474"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20230914 06:18:38.276" endtime="20230914 06:19:05.475"/>
</suite>
<suite id="s1-s4" name="Root-Ca-Rotation" source="/opt/hadoop/smoketest/scmha/root-ca-rotation.robot">
<test id="s1-s4-t1" name="Verify root CA rotation metrics" line="26">
<kw name="Execute" library="os">
<var>${successRotationLine}</var>
<arg>curl -sS 'http://localhost:9876/jmx' | grep NumSuccessRotation</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230914 06:19:09.072" level="INFO">Running command 'curl -sS 'http://localhost:9876/jmx' | grep NumSuccessRotation 2&gt;&amp;1'.</msg>
<msg timestamp="20230914 06:19:09.649" level="INFO">${rc} = 0</msg>
<msg timestamp="20230914 06:19:09.649" level="INFO">${output} =     "NumSuccessRotation" : 2,</msg>
<status status="PASS" starttime="20230914 06:19:09.069" endtime="20230914 06:19:09.649"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 06:19:09.651" level="INFO">    "NumSuccessRotation" : 2,</msg>
<status status="PASS" starttime="20230914 06:19:09.650" endtime="20230914 06:19:09.651"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230914 06:19:09.651" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230914 06:19:09.651" endtime="20230914 06:19:09.652"/>
</kw>
<status status="PASS" starttime="20230914 06:19:09.068" endtime="20230914 06:19:09.652"/>
</kw>
<msg timestamp="20230914 06:19:09.652" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230914 06:19:09.068" endtime="20230914 06:19:09.652"/>
</kw>
<msg timestamp="20230914 06:19:09.652" level="INFO">${successRotationLine} =     "NumSuccessRotation" : 2,</msg>
<status status="PASS" starttime="20230914 06:19:09.067" endtime="20230914 06:19:09.652"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${successRotationLine}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230914 06:19:09.653" level="INFO">    "NumSuccessRotation" : 2,</msg>
<status status="PASS" starttime="20230914 06:19:09.653" endtime="20230914 06:19:09.653"/>
</kw>
<kw name="Split String" library="String">
<var>${temp_1}</var>
<arg>${successRotationLine}</arg>
<arg>:</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20230914 06:19:09.654" level="INFO">${temp_1} = ['    "NumSuccessRotation" ', ' 2,']</msg>
<status status="PASS" starttime="20230914 06:19:09.653" endtime="20230914 06:19:09.654"/>
</kw>
<kw name="Strip String" library="String">
<var>${temp_2}</var>
<arg>${temp_1[1]}</arg>
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<msg timestamp="20230914 06:19:09.655" level="INFO">${temp_2} = 2,</msg>
<status status="PASS" starttime="20230914 06:19:09.654" endtime="20230914 06:19:09.655"/>
</kw>
<kw name="Split String" library="String">
<var>${temp_3}</var>
<arg>${temp_2}</arg>
<arg>,</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20230914 06:19:09.656" level="INFO">${temp_3} = ['2', '']</msg>
<status status="PASS" starttime="20230914 06:19:09.655" endtime="20230914 06:19:09.656"/>
</kw>
<kw name="Strip String" library="String">
<var>${successRotation}</var>
<arg>${temp_3[0]}</arg>
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<msg timestamp="20230914 06:19:09.657" level="INFO">${successRotation} = 2</msg>
<status status="PASS" starttime="20230914 06:19:09.656" endtime="20230914 06:19:09.657"/>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<var>${successRotation}</var>
<arg>${successRotation}</arg>
<doc>Converts the given item to a floating point number.</doc>
<msg timestamp="20230914 06:19:09.658" level="INFO">${successRotation} = 2.0</msg>
<status status="PASS" starttime="20230914 06:19:09.657" endtime="20230914 06:19:09.658"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${successRotation} &gt;= 1</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230914 06:19:09.658" endtime="20230914 06:19:09.658"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230914 06:19:09.066" endtime="20230914 06:19:09.659"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20230914 06:19:09.018" endtime="20230914 06:19:09.660"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="58160"/>
</suite>
<statistics>
<total>
<stat pass="8" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="2" fail="0" skip="0">create-volume-and-bucket</stat>
</tag>
<suite>
<stat pass="8" fail="0" skip="0" id="s1" name="ozonesecure-root-ca-rotation">ozonesecure-root-ca-rotation</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1" name="Kinit">ozonesecure-root-ca-rotation.Kinit</stat>
<stat pass="3" fail="0" skip="0" id="s1-s2" name="Root-Ca-Rotation-Client-Checks">ozonesecure-root-ca-rotation.Root-Ca-Rotation-Client-Checks</stat>
<stat pass="3" fail="0" skip="0" id="s1-s3" name="Root-Ca-Rotation-Client-Checks">ozonesecure-root-ca-rotation.Root-Ca-Rotation-Client-Checks</stat>
<stat pass="1" fail="0" skip="0" id="s1-s4" name="Root-Ca-Rotation">ozonesecure-root-ca-rotation.Root-Ca-Rotation</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
