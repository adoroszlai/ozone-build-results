<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 6.0.1 (Python 3.8.10 on linux)" generated="20230103 10:42:27.249" rpa="false" schemaversion="3">
<suite id="s1" name="ozone">
<suite id="s1-s1" name="Ozone-Lib" source="/opt/hadoop/smoketest/ozone-lib">
<suite id="s1-s1-s1" name="Shell Tests" source="/opt/hadoop/smoketest/ozone-lib/shell_tests.robot">
<test id="s1-s1-s1-t1" name="Bucket Exists should not if No Such Volume" line="27">
<kw name="Bucket Exists" library="shell">
<var>${exists}</var>
<arg>o3://${OM_SERVICE_ID}/no-such-volume/any-bucket</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>timeout 15 ozone sh bucket info ${bucket}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:15:28.959" level="INFO">Running command 'timeout 15 ozone sh bucket info o3://om/no-such-volume/any-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:15:35.145" level="INFO">${rc} = 255</msg>
<msg timestamp="20230103 10:15:35.145" level="INFO">${output} = VOLUME_NOT_FOUND Volume no-such-volume is not found</msg>
<status status="PASS" starttime="20230103 10:15:28.953" endtime="20230103 10:15:35.145"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${rc} != 0</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20230103 10:15:35.147" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:15:35.146" endtime="20230103 10:15:35.157"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'VOLUME_NOT_FOUND' in '''${output}'''</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230103 10:15:35.158" endtime="20230103 10:15:35.158"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'BUCKET_NOT_FOUND' in '''${output}'''</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230103 10:15:35.158" endtime="20230103 10:15:35.158"/>
</kw>
<msg timestamp="20230103 10:15:35.159" level="INFO">${exists} = False</msg>
<status status="PASS" starttime="20230103 10:15:28.952" endtime="20230103 10:15:35.159"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${exists}</arg>
<arg>${FALSE}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230103 10:15:35.161" endtime="20230103 10:15:35.161"/>
</kw>
<status status="PASS" starttime="20230103 10:15:28.950" endtime="20230103 10:15:35.162"/>
</test>
<test id="s1-s1-s1-t2" name="Bucket Exists should not if No Such Bucket" line="31">
<kw name="Execute And Ignore Error" library="os">
<arg>ozone sh volume create o3://${OM_SERVICE_ID}/vol1</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:15:35.178" level="INFO">Running command 'ozone sh volume create o3://om/vol1 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:15:42.572" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:15:42.572" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230103 10:15:35.173" endtime="20230103 10:15:42.572"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:15:42.573" level="INFO"/>
<status status="PASS" starttime="20230103 10:15:42.573" endtime="20230103 10:15:42.574"/>
</kw>
<status status="PASS" starttime="20230103 10:15:35.172" endtime="20230103 10:15:42.574"/>
</kw>
<kw name="Bucket Exists" library="shell">
<var>${exists}</var>
<arg>o3://${OM_SERVICE_ID}/vol1/no-such-bucket</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>timeout 15 ozone sh bucket info ${bucket}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:15:42.578" level="INFO">Running command 'timeout 15 ozone sh bucket info o3://om/vol1/no-such-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:15:48.249" level="INFO">${rc} = 255</msg>
<msg timestamp="20230103 10:15:48.249" level="INFO">${output} = BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" starttime="20230103 10:15:42.575" endtime="20230103 10:15:48.249"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${rc} != 0</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20230103 10:15:48.252" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:15:48.251" endtime="20230103 10:15:48.253"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'VOLUME_NOT_FOUND' in '''${output}'''</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230103 10:15:48.253" endtime="20230103 10:15:48.253"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'BUCKET_NOT_FOUND' in '''${output}'''</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230103 10:15:48.253" endtime="20230103 10:15:48.253"/>
</kw>
<msg timestamp="20230103 10:15:48.254" level="INFO">${exists} = False</msg>
<status status="PASS" starttime="20230103 10:15:42.574" endtime="20230103 10:15:48.254"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${exists}</arg>
<arg>${FALSE}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230103 10:15:48.254" endtime="20230103 10:15:48.255"/>
</kw>
<status status="PASS" starttime="20230103 10:15:35.167" endtime="20230103 10:15:48.255"/>
</test>
<test id="s1-s1-s1-t3" name="Bucket Exists" line="36">
<kw name="Execute And Ignore Error" library="os">
<arg>ozone sh bucket create o3://${OM_SERVICE_ID}/vol1/bucket</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:15:48.263" level="INFO">Running command 'ozone sh bucket create o3://om/vol1/bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:15:54.176" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:15:54.176" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230103 10:15:48.260" endtime="20230103 10:15:54.176"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:15:54.177" level="INFO"/>
<status status="PASS" starttime="20230103 10:15:54.176" endtime="20230103 10:15:54.177"/>
</kw>
<status status="PASS" starttime="20230103 10:15:48.259" endtime="20230103 10:15:54.178"/>
</kw>
<kw name="Bucket Exists" library="shell">
<var>${exists}</var>
<arg>o3://${OM_SERVICE_ID}/vol1/bucket</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>timeout 15 ozone sh bucket info ${bucket}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:15:54.182" level="INFO">Running command 'timeout 15 ozone sh bucket info o3://om/vol1/bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:16:01.081" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:16:01.081" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "vol1",
  "name" : "bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2023-01-03T10:15:54....</msg>
<status status="PASS" starttime="20230103 10:15:54.179" endtime="20230103 10:16:01.081"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${rc} != 0</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20230103 10:16:01.082" endtime="20230103 10:16:01.083"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'VOLUME_NOT_FOUND' in '''${output}'''</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20230103 10:16:01.083" endtime="20230103 10:16:01.084"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'BUCKET_NOT_FOUND' in '''${output}'''</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20230103 10:16:01.084" endtime="20230103 10:16:01.085"/>
</kw>
<msg timestamp="20230103 10:16:01.085" level="INFO">${exists} = True</msg>
<status status="PASS" starttime="20230103 10:15:54.178" endtime="20230103 10:16:01.085"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${exists}</arg>
<arg>${TRUE}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230103 10:16:01.085" endtime="20230103 10:16:01.086"/>
</kw>
<status status="PASS" starttime="20230103 10:15:48.257" endtime="20230103 10:16:01.087"/>
</test>
<test id="s1-s1-s1-t4" name="Bucket Exists should not if No Such OM service" line="41">
<kw name="Bucket Exists" library="shell">
<var>${exists}</var>
<arg>o3://no-such-host/any-volume/any-bucket</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>timeout 15 ozone sh bucket info ${bucket}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:16:01.093" level="INFO">Running command 'timeout 15 ozone sh bucket info o3://no-such-host/any-volume/any-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:16:16.154" level="INFO">${rc} = 124</msg>
<msg timestamp="20230103 10:16:16.154" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230103 10:16:01.089" endtime="20230103 10:16:16.155"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${rc} != 0</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20230103 10:16:16.156" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:16:16.155" endtime="20230103 10:16:16.157"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'VOLUME_NOT_FOUND' in '''${output}'''</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230103 10:16:16.157" endtime="20230103 10:16:16.157"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'BUCKET_NOT_FOUND' in '''${output}'''</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230103 10:16:16.157" endtime="20230103 10:16:16.157"/>
</kw>
<msg timestamp="20230103 10:16:16.158" level="INFO">${exists} = False</msg>
<status status="PASS" starttime="20230103 10:16:01.089" endtime="20230103 10:16:16.158"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${exists}</arg>
<arg>${FALSE}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230103 10:16:16.158" endtime="20230103 10:16:16.159"/>
</kw>
<status status="PASS" starttime="20230103 10:16:01.088" endtime="20230103 10:16:16.159"/>
</test>
<test id="s1-s1-s1-t5" name="Key Should Match Local File" line="46">
<kw name="Execute" library="os" type="SETUP">
<arg>ozone sh key put o3://${OM_SERVICE_ID}/vol1/bucket/passwd /etc/passwd</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:16:16.167" level="INFO">Running command 'ozone sh key put o3://om/vol1/bucket/passwd /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:16:30.476" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:16:30.476" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230103 10:16:16.164" endtime="20230103 10:16:30.476"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:16:30.477" level="INFO"/>
<status status="PASS" starttime="20230103 10:16:30.476" endtime="20230103 10:16:30.477"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:16:30.478" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:16:30.477" endtime="20230103 10:16:30.478"/>
</kw>
<status status="PASS" starttime="20230103 10:16:16.163" endtime="20230103 10:16:30.479"/>
</kw>
<msg timestamp="20230103 10:16:30.479" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:16:16.163" endtime="20230103 10:16:30.479"/>
</kw>
<status status="PASS" starttime="20230103 10:16:16.162" endtime="20230103 10:16:30.479"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>o3://${OM_SERVICE_ID}/vol1/bucket/passwd</arg>
<arg>/etc/passwd</arg>
<kw name="Compare Key With Local File" library="shell">
<var>${matches}</var>
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230103 10:16:30.482" level="INFO">${postfix} = 03533</msg>
<status status="PASS" starttime="20230103 10:16:30.481" endtime="20230103 10:16:30.482"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${tmpfile}</var>
<arg>/tmp/tempkey-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230103 10:16:30.483" level="INFO">${tmpfile} = /tmp/tempkey-03533</msg>
<status status="PASS" starttime="20230103 10:16:30.482" endtime="20230103 10:16:30.483"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${key} ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:16:30.488" level="INFO">Running command 'ozone sh key get o3://om/vol1/bucket/passwd /tmp/tempkey-03533 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:16:40.643" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:16:40.643" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230103 10:16:30.485" endtime="20230103 10:16:40.643"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:16:40.644" level="INFO"/>
<status status="PASS" starttime="20230103 10:16:40.643" endtime="20230103 10:16:40.644"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:16:40.645" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:16:40.644" endtime="20230103 10:16:40.645"/>
</kw>
<status status="PASS" starttime="20230103 10:16:30.484" endtime="20230103 10:16:40.645"/>
</kw>
<msg timestamp="20230103 10:16:40.646" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:16:30.484" endtime="20230103 10:16:40.646"/>
</kw>
<status status="PASS" starttime="20230103 10:16:30.483" endtime="20230103 10:16:40.647"/>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<var>${rc}</var>
<arg>diff -q ${file} ${tmpfile}</arg>
<doc>Runs the given command in the system and returns the return code.</doc>
<msg timestamp="20230103 10:16:40.652" level="INFO">Running command 'diff -q /etc/passwd /tmp/tempkey-03533 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:16:40.658" level="INFO">${rc} = 0</msg>
<status status="PASS" starttime="20230103 10:16:40.647" endtime="20230103 10:16:40.659"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:16:40.665" level="INFO">Running command 'rm -f /tmp/tempkey-03533 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:16:40.668" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:16:40.668" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230103 10:16:40.662" endtime="20230103 10:16:40.669"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:16:40.670" level="INFO"/>
<status status="PASS" starttime="20230103 10:16:40.669" endtime="20230103 10:16:40.670"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:16:40.671" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:16:40.670" endtime="20230103 10:16:40.672"/>
</kw>
<status status="PASS" starttime="20230103 10:16:40.661" endtime="20230103 10:16:40.672"/>
</kw>
<msg timestamp="20230103 10:16:40.672" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:16:40.661" endtime="20230103 10:16:40.673"/>
</kw>
<status status="PASS" starttime="20230103 10:16:40.659" endtime="20230103 10:16:40.674"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230103 10:16:40.675" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20230103 10:16:40.674" endtime="20230103 10:16:40.675"/>
</kw>
<msg timestamp="20230103 10:16:40.675" level="INFO">${matches} = True</msg>
<status status="PASS" starttime="20230103 10:16:30.481" endtime="20230103 10:16:40.675"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${matches}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230103 10:16:40.676" endtime="20230103 10:16:40.676"/>
</kw>
<status status="PASS" starttime="20230103 10:16:30.480" endtime="20230103 10:16:40.676"/>
</kw>
<status status="PASS" starttime="20230103 10:16:16.161" endtime="20230103 10:16:40.677"/>
</test>
<test id="s1-s1-s1-t6" name="Compare Key With Local File with Different File" line="50">
<kw name="Create Random File" library="os">
<var>${random_file}</var>
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230103 10:16:40.681" level="INFO">${postfix} = 06050</msg>
<status status="PASS" starttime="20230103 10:16:40.680" endtime="20230103 10:16:40.681"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${tmpfile}</var>
<arg>/tmp/tempfile-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230103 10:16:40.682" level="INFO">${tmpfile} = /tmp/tempfile-06050</msg>
<status status="PASS" starttime="20230103 10:16:40.681" endtime="20230103 10:16:40.682"/>
</kw>
<kw name="File Should Not Exist" library="OperatingSystem">
<arg>${tmpfile}</arg>
<doc>Fails if the given path points to an existing file.</doc>
<msg timestamp="20230103 10:16:40.683" level="INFO" html="true">File '&lt;a href="file:///tmp/tempfile-06050"&gt;/tmp/tempfile-06050&lt;/a&gt;' does not exist.</msg>
<status status="PASS" starttime="20230103 10:16:40.682" endtime="20230103 10:16:40.683"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${content}</var>
<arg>"Random string"</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230103 10:16:40.684" level="INFO">${content} = "Random string"</msg>
<status status="PASS" starttime="20230103 10:16:40.683" endtime="20230103 10:16:40.684"/>
</kw>
<kw name="Create File" library="OperatingSystem">
<arg>${tmpfile}</arg>
<arg>${content}</arg>
<doc>Creates a file with the given content and encoding.</doc>
<msg timestamp="20230103 10:16:40.685" level="INFO" html="true">Created file '&lt;a href="file:///tmp/tempfile-06050"&gt;/tmp/tempfile-06050&lt;/a&gt;'.</msg>
<status status="PASS" starttime="20230103 10:16:40.684" endtime="20230103 10:16:40.685"/>
</kw>
<msg timestamp="20230103 10:16:40.685" level="INFO">${random_file} = /tmp/tempfile-06050</msg>
<status status="PASS" starttime="20230103 10:16:40.680" endtime="20230103 10:16:40.685"/>
</kw>
<kw name="Compare Key With Local File" library="shell">
<var>${matches}</var>
<arg>o3://${OM_SERVICE_ID}/vol1/bucket/passwd</arg>
<arg>${random_file}</arg>
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230103 10:16:40.687" level="INFO">${postfix} = 91468</msg>
<status status="PASS" starttime="20230103 10:16:40.686" endtime="20230103 10:16:40.687"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${tmpfile}</var>
<arg>/tmp/tempkey-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230103 10:16:40.687" level="INFO">${tmpfile} = /tmp/tempkey-91468</msg>
<status status="PASS" starttime="20230103 10:16:40.687" endtime="20230103 10:16:40.687"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${key} ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:16:40.693" level="INFO">Running command 'ozone sh key get o3://om/vol1/bucket/passwd /tmp/tempkey-91468 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:16:49.041" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:16:49.042" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230103 10:16:40.690" endtime="20230103 10:16:49.042"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:16:49.043" level="INFO"/>
<status status="PASS" starttime="20230103 10:16:49.042" endtime="20230103 10:16:49.043"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:16:49.045" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:16:49.043" endtime="20230103 10:16:49.045"/>
</kw>
<status status="PASS" starttime="20230103 10:16:40.689" endtime="20230103 10:16:49.046"/>
</kw>
<msg timestamp="20230103 10:16:49.046" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:16:40.688" endtime="20230103 10:16:49.046"/>
</kw>
<status status="PASS" starttime="20230103 10:16:40.688" endtime="20230103 10:16:49.047"/>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<var>${rc}</var>
<arg>diff -q ${file} ${tmpfile}</arg>
<doc>Runs the given command in the system and returns the return code.</doc>
<msg timestamp="20230103 10:16:49.050" level="INFO">Running command 'diff -q /tmp/tempfile-06050 /tmp/tempkey-91468 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:16:49.053" level="INFO">${rc} = 1</msg>
<status status="PASS" starttime="20230103 10:16:49.047" endtime="20230103 10:16:49.053"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:16:49.059" level="INFO">Running command 'rm -f /tmp/tempkey-91468 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:16:49.062" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:16:49.062" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230103 10:16:49.056" endtime="20230103 10:16:49.062"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:16:49.063" level="INFO"/>
<status status="PASS" starttime="20230103 10:16:49.062" endtime="20230103 10:16:49.063"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:16:49.064" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:16:49.063" endtime="20230103 10:16:49.064"/>
</kw>
<status status="PASS" starttime="20230103 10:16:49.055" endtime="20230103 10:16:49.065"/>
</kw>
<msg timestamp="20230103 10:16:49.065" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:16:49.055" endtime="20230103 10:16:49.065"/>
</kw>
<status status="PASS" starttime="20230103 10:16:49.054" endtime="20230103 10:16:49.066"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230103 10:16:49.066" level="INFO">${result} = False</msg>
<status status="PASS" starttime="20230103 10:16:49.066" endtime="20230103 10:16:49.067"/>
</kw>
<msg timestamp="20230103 10:16:49.067" level="INFO">${matches} = False</msg>
<status status="PASS" starttime="20230103 10:16:40.686" endtime="20230103 10:16:49.067"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${matches}</arg>
<arg>${FALSE}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230103 10:16:49.067" endtime="20230103 10:16:49.068"/>
</kw>
<kw name="Remove File" library="OperatingSystem" type="TEARDOWN">
<arg>${random_file}</arg>
<doc>Removes a file with the given path.</doc>
<msg timestamp="20230103 10:16:49.069" level="INFO" html="true">Removed file '&lt;a href="file:///tmp/tempfile-06050"&gt;/tmp/tempfile-06050&lt;/a&gt;'.</msg>
<status status="PASS" starttime="20230103 10:16:49.068" endtime="20230103 10:16:49.069"/>
</kw>
<status status="PASS" starttime="20230103 10:16:40.679" endtime="20230103 10:16:49.069"/>
</test>
<test id="s1-s1-s1-t7" name="Compare Key With Local File if File Does Not Exist" line="56">
<kw name="Compare Key With Local File" library="shell">
<var>${matches}</var>
<arg>o3://${OM_SERVICE_ID}/vol1/bucket/passwd</arg>
<arg>/no-such-file</arg>
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230103 10:16:49.073" level="INFO">${postfix} = 12409</msg>
<status status="PASS" starttime="20230103 10:16:49.072" endtime="20230103 10:16:49.073"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${tmpfile}</var>
<arg>/tmp/tempkey-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230103 10:16:49.073" level="INFO">${tmpfile} = /tmp/tempkey-12409</msg>
<status status="PASS" starttime="20230103 10:16:49.073" endtime="20230103 10:16:49.073"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${key} ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:16:49.078" level="INFO">Running command 'ozone sh key get o3://om/vol1/bucket/passwd /tmp/tempkey-12409 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:16:57.957" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:16:57.957" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230103 10:16:49.075" endtime="20230103 10:16:57.957"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:16:57.959" level="INFO"/>
<status status="PASS" starttime="20230103 10:16:57.958" endtime="20230103 10:16:57.959"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:16:57.964" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:16:57.959" endtime="20230103 10:16:57.964"/>
</kw>
<status status="PASS" starttime="20230103 10:16:49.075" endtime="20230103 10:16:57.965"/>
</kw>
<msg timestamp="20230103 10:16:57.965" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:16:49.074" endtime="20230103 10:16:57.966"/>
</kw>
<status status="PASS" starttime="20230103 10:16:49.074" endtime="20230103 10:16:57.966"/>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<var>${rc}</var>
<arg>diff -q ${file} ${tmpfile}</arg>
<doc>Runs the given command in the system and returns the return code.</doc>
<msg timestamp="20230103 10:16:57.971" level="INFO">Running command 'diff -q /no-such-file /tmp/tempkey-12409 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:16:57.975" level="INFO">${rc} = 2</msg>
<status status="PASS" starttime="20230103 10:16:57.968" endtime="20230103 10:16:57.976"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:16:57.988" level="INFO">Running command 'rm -f /tmp/tempkey-12409 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:16:57.994" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:16:57.994" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230103 10:16:57.980" endtime="20230103 10:16:57.995"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:16:57.997" level="INFO"/>
<status status="PASS" starttime="20230103 10:16:57.996" endtime="20230103 10:16:57.997"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:16:57.999" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:16:57.997" endtime="20230103 10:16:57.999"/>
</kw>
<status status="PASS" starttime="20230103 10:16:57.979" endtime="20230103 10:16:58.000"/>
</kw>
<msg timestamp="20230103 10:16:58.000" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:16:57.978" endtime="20230103 10:16:58.001"/>
</kw>
<status status="PASS" starttime="20230103 10:16:57.976" endtime="20230103 10:16:58.002"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230103 10:16:58.006" level="INFO">${result} = False</msg>
<status status="PASS" starttime="20230103 10:16:58.002" endtime="20230103 10:16:58.006"/>
</kw>
<msg timestamp="20230103 10:16:58.007" level="INFO">${matches} = False</msg>
<status status="PASS" starttime="20230103 10:16:49.072" endtime="20230103 10:16:58.007"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${matches}</arg>
<arg>${FALSE}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230103 10:16:58.007" endtime="20230103 10:16:58.008"/>
</kw>
<status status="PASS" starttime="20230103 10:16:49.071" endtime="20230103 10:16:58.008"/>
</test>
<status status="PASS" starttime="20230103 10:15:28.882" endtime="20230103 10:16:58.011"/>
</suite>
<status status="PASS" starttime="20230103 10:15:28.837" endtime="20230103 10:16:58.015"/>
</suite>
<suite id="s1-s2" name="Auditparser" source="/opt/hadoop/smoketest/auditparser">
<suite id="s1-s2-s1" name="Auditparser" source="/opt/hadoop/smoketest/auditparser/auditparser.robot">
<test id="s1-s2-s1-t1" name="Testing audit parser" line="40">
<kw name="Create data" type="SETUP">
<kw name="Freon OMBG" library="freon">
<arg>prefix=auditparser</arg>
<arg>n=${buckets}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ombg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:17:06.025" level="INFO">Running command 'ozone freon ombg  -t 1 -n5 -p auditparser  2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:17:13.011" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:17:13.011" level="INFO">${output} = 2023-01-03 10:17:09,527 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-01-03 10:17:09,749 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230103 10:17:06.020" endtime="20230103 10:17:13.011"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:17:13.013" level="INFO">2023-01-03 10:17:09,527 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-01-03 10:17:09,749 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-01-03 10:17:09,750 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-01-03 10:17:09,996 [main] INFO freon.BaseFreonGenerator: Executing test with prefix auditparser and number-of-tests 5
2023-01-03 10:17:10,114 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 5)
2023-01-03 10:17:11,121 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 5)
2023-01-03 10:17:12,122 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (5 out of 5)
2023-01-03 10:17:12,957 [shutdown-hook-0] INFO metrics: type=TIMER, name=bucket-create, count=5, min=9.994935, max=33.332414, mean=14.949711, stddev=9.20165326990071, median=10.162934, p75=11.190638, p95=33.332414, p98=33.332414, p99=33.332414, p999=33.332414, mean_rate=4.189993832320699, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-01-03 10:17:12,957 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2023-01-03 10:17:12,958 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-01-03 10:17:12,958 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 5</msg>
<status status="PASS" starttime="20230103 10:17:13.012" endtime="20230103 10:17:13.013"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:17:13.014" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:17:13.013" endtime="20230103 10:17:13.014"/>
</kw>
<status status="PASS" starttime="20230103 10:17:06.020" endtime="20230103 10:17:13.014"/>
</kw>
<msg timestamp="20230103 10:17:13.014" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:17:06.019" endtime="20230103 10:17:13.016"/>
</kw>
<msg timestamp="20230103 10:17:13.017" level="INFO">${result} = 2023-01-03 10:17:09,527 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-01-03 10:17:09,749 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230103 10:17:06.018" endtime="20230103 10:17:13.017"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230103 10:17:13.017" endtime="20230103 10:17:13.017"/>
</kw>
<status status="PASS" starttime="20230103 10:17:06.016" endtime="20230103 10:17:13.018"/>
</kw>
<kw name="Freon OCKG" library="freon">
<arg>prefix=auditparser</arg>
<arg>n=100</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:17:13.026" level="INFO">Running command 'ozone freon ockg  -t 1 -n100 -p auditparser  2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:17:36.652" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:17:36.652" level="INFO">${output} = 2023-01-03 10:17:16,252 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-01-03 10:17:16,500 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230103 10:17:13.022" endtime="20230103 10:17:36.652"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:17:36.654" level="INFO">2023-01-03 10:17:16,252 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-01-03 10:17:16,500 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-01-03 10:17:16,500 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-01-03 10:17:16,802 [main] INFO freon.BaseFreonGenerator: Executing test with prefix auditparser and number-of-tests 100
2023-01-03 10:17:16,945 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2023-01-03 10:17:17,949 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2023-01-03 10:17:18,951 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2023-01-03 10:17:19,026 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Encryption set to false 
2023-01-03 10:17:19,952 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2023-01-03 10:17:20,108 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2023-01-03 10:17:20,564 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2023-01-03 10:17:20,952 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2023-01-03 10:17:21,953 [Thread-5] INFO freon.ProgressBar: Progress: 1.00 % (1 out of 100)
2023-01-03 10:17:22,961 [Thread-5] INFO freon.ProgressBar: Progress: 7.00 % (7 out of 100)
2023-01-03 10:17:23,961 [Thread-5] INFO freon.ProgressBar: Progress: 14.00 % (14 out of 100)
2023-01-03 10:17:24,966 [Thread-5] INFO freon.ProgressBar: Progress: 22.00 % (22 out of 100)
2023-01-03 10:17:25,967 [Thread-5] INFO freon.ProgressBar: Progress: 29.00 % (29 out of 100)
2023-01-03 10:17:26,967 [Thread-5] INFO freon.ProgressBar: Progress: 29.00 % (29 out of 100)
2023-01-03 10:17:27,968 [Thread-5] INFO freon.ProgressBar: Progress: 29.00 % (29 out of 100)
2023-01-03 10:17:28,969 [Thread-5] INFO freon.ProgressBar: Progress: 34.00 % (34 out of 100)
2023-01-03 10:17:29,970 [Thread-5] INFO freon.ProgressBar: Progress: 43.00 % (43 out of 100)
2023-01-03 10:17:30,977 [Thread-5] INFO freon.ProgressBar: Progress: 52.00 % (52 out of 100)
2023-01-03 10:17:31,977 [Thread-5] INFO freon.ProgressBar: Progress: 62.00 % (62 out of 100)
2023-01-03 10:17:32,988 [Thread-5] INFO freon.ProgressBar: Progress: 71.00 % (71 out of 100)
2023-01-03 10:17:33,989 [Thread-5] INFO freon.ProgressBar: Progress: 82.00 % (82 out of 100)
2023-01-03 10:17:34,990 [Thread-5] INFO freon.ProgressBar: Progress: 94.00 % (94 out of 100)
2023-01-03 10:17:35,990 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (100 out of 100)
2023-01-03 10:17:36,262 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=100, min=61.583398, max=2790.248375, mean=158.80434725160003, stddev=349.1485997486141, median=110.067225, p75=128.54468, p95=168.764061, p98=173.159512, p99=2590.205717, p999=2790.248375, mean_rate=5.831359506582642, m1=3.6012695531851757, m5=3.1253437581169363, m15=3.042074461878656, rate_unit=events/second, duration_unit=milliseconds
2023-01-03 10:17:36,264 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 19
2023-01-03 10:17:36,267 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-01-03 10:17:36,268 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 100</msg>
<status status="PASS" starttime="20230103 10:17:36.653" endtime="20230103 10:17:36.654"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:17:36.655" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:17:36.655" endtime="20230103 10:17:36.656"/>
</kw>
<status status="PASS" starttime="20230103 10:17:13.021" endtime="20230103 10:17:36.656"/>
</kw>
<msg timestamp="20230103 10:17:36.656" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:17:13.021" endtime="20230103 10:17:36.657"/>
</kw>
<msg timestamp="20230103 10:17:36.658" level="INFO">${result} = 2023-01-03 10:17:16,252 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-01-03 10:17:16,500 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230103 10:17:13.020" endtime="20230103 10:17:36.658"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230103 10:17:36.659" endtime="20230103 10:17:36.659"/>
</kw>
<status status="PASS" starttime="20230103 10:17:13.018" endtime="20230103 10:17:36.660"/>
</kw>
<status status="PASS" starttime="20230103 10:17:06.015" endtime="20230103 10:17:36.660"/>
</kw>
<kw name="Get Environment Variable" library="OperatingSystem">
<var>${logdir}</var>
<arg>OZONE_LOG_DIR</arg>
<arg>/var/log/ozone</arg>
<doc>Returns the value of an environment variable with the given name.</doc>
<msg timestamp="20230103 10:17:36.661" level="INFO">${logdir} = /var/log/hadoop</msg>
<status status="PASS" starttime="20230103 10:17:36.660" endtime="20230103 10:17:36.661"/>
</kw>
<kw name="Execute" library="os">
<var>${logfile}</var>
<arg>ls -t "${logdir}" | grep om-audit | head -1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:17:36.666" level="INFO">Running command 'ls -t "/var/log/hadoop" | grep om-audit | head -1 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:17:36.671" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:17:36.671" level="INFO">${output} = om-audit-4be0a785e203.log</msg>
<status status="PASS" starttime="20230103 10:17:36.663" endtime="20230103 10:17:36.671"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:17:36.673" level="INFO">om-audit-4be0a785e203.log</msg>
<status status="PASS" starttime="20230103 10:17:36.672" endtime="20230103 10:17:36.673"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:17:36.674" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:17:36.673" endtime="20230103 10:17:36.674"/>
</kw>
<status status="PASS" starttime="20230103 10:17:36.662" endtime="20230103 10:17:36.674"/>
</kw>
<msg timestamp="20230103 10:17:36.674" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:17:36.662" endtime="20230103 10:17:36.675"/>
</kw>
<msg timestamp="20230103 10:17:36.675" level="INFO">${logfile} = om-audit-4be0a785e203.log</msg>
<status status="PASS" starttime="20230103 10:17:36.661" endtime="20230103 10:17:36.675"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone auditparser "${auditworkdir}/audit.db" load "${logdir}/${logfile}"</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:17:36.682" level="INFO">Running command 'ozone auditparser "/tmp/audit.db" load "/var/log/hadoop/om-audit-4be0a785e203.log" 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:17:39.821" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:17:39.821" level="INFO">${output} = /var/log/hadoop/om-audit-4be0a785e203.log has been loaded successfully</msg>
<status status="PASS" starttime="20230103 10:17:36.679" endtime="20230103 10:17:39.821"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:17:39.822" level="INFO">/var/log/hadoop/om-audit-4be0a785e203.log has been loaded successfully</msg>
<status status="PASS" starttime="20230103 10:17:39.821" endtime="20230103 10:17:39.823"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:17:39.824" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:17:39.823" endtime="20230103 10:17:39.824"/>
</kw>
<status status="PASS" starttime="20230103 10:17:36.678" endtime="20230103 10:17:39.824"/>
</kw>
<msg timestamp="20230103 10:17:39.824" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:17:36.678" endtime="20230103 10:17:39.825"/>
</kw>
<status status="PASS" starttime="20230103 10:17:36.676" endtime="20230103 10:17:39.825"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone auditparser "${auditworkdir}/audit.db" template top5cmds</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:17:39.831" level="INFO">Running command 'ozone auditparser "/tmp/audit.db" template top5cmds 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:17:41.913" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:17:41.916" level="INFO">${output} = READ_BUCKET	109	
ALLOCATE_KEY	101	
COMMIT_KEY	101	
GET_SERVICE_LIST	12	
READ_VOLUME	12	
</msg>
<status status="PASS" starttime="20230103 10:17:39.828" endtime="20230103 10:17:41.917"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:17:41.918" level="INFO">READ_BUCKET	109	
ALLOCATE_KEY	101	
COMMIT_KEY	101	
GET_SERVICE_LIST	12	
READ_VOLUME	12	
</msg>
<status status="PASS" starttime="20230103 10:17:41.917" endtime="20230103 10:17:41.919"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:17:41.920" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:17:41.919" endtime="20230103 10:17:41.920"/>
</kw>
<status status="PASS" starttime="20230103 10:17:39.827" endtime="20230103 10:17:41.920"/>
</kw>
<msg timestamp="20230103 10:17:41.921" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:17:39.826" endtime="20230103 10:17:41.921"/>
</kw>
<msg timestamp="20230103 10:17:41.922" level="INFO">${result} = READ_BUCKET	109	
ALLOCATE_KEY	101	
COMMIT_KEY	101	
GET_SERVICE_LIST	12	
READ_VOLUME	12	
</msg>
<status status="PASS" starttime="20230103 10:17:39.826" endtime="20230103 10:17:41.922"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ALLOCATE_KEY</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230103 10:17:41.922" endtime="20230103 10:17:41.922"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone auditparser "${auditworkdir}/audit.db" template top5users</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:17:41.928" level="INFO">Running command 'ozone auditparser "/tmp/audit.db" template top5users 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:17:43.677" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:17:43.677" level="INFO">${output} = hadoop	346	
</msg>
<status status="PASS" starttime="20230103 10:17:41.924" endtime="20230103 10:17:43.677"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:17:43.679" level="INFO">hadoop	346	
</msg>
<status status="PASS" starttime="20230103 10:17:43.678" endtime="20230103 10:17:43.679"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:17:43.680" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:17:43.679" endtime="20230103 10:17:43.680"/>
</kw>
<status status="PASS" starttime="20230103 10:17:41.924" endtime="20230103 10:17:43.681"/>
</kw>
<msg timestamp="20230103 10:17:43.681" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:17:41.923" endtime="20230103 10:17:43.681"/>
</kw>
<msg timestamp="20230103 10:17:43.682" level="INFO">${result} = hadoop	346	
</msg>
<status status="PASS" starttime="20230103 10:17:41.923" endtime="20230103 10:17:43.682"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Set username</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230103 10:17:43.682" endtime="20230103 10:17:43.682"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${user}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230103 10:17:43.682" endtime="20230103 10:17:43.683"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone auditparser "${auditworkdir}/audit.db" query "select count(*) from audit where op='CREATE_VOLUME' and RESULT='SUCCESS'"</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:17:43.689" level="INFO">Running command 'ozone auditparser "/tmp/audit.db" query "select count(*) from audit where op='CREATE_VOLUME' and RESULT='SUCCESS'" 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:17:45.561" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:17:45.561" level="INFO">${output} = 1	
</msg>
<status status="PASS" starttime="20230103 10:17:43.685" endtime="20230103 10:17:45.561"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:17:45.563" level="INFO">1	
</msg>
<status status="PASS" starttime="20230103 10:17:45.562" endtime="20230103 10:17:45.563"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:17:45.563" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:17:45.563" endtime="20230103 10:17:45.564"/>
</kw>
<status status="PASS" starttime="20230103 10:17:43.685" endtime="20230103 10:17:45.564"/>
</kw>
<msg timestamp="20230103 10:17:45.564" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:17:43.684" endtime="20230103 10:17:45.565"/>
</kw>
<msg timestamp="20230103 10:17:45.565" level="INFO">${result} = 1	
</msg>
<status status="PASS" starttime="20230103 10:17:43.683" endtime="20230103 10:17:45.565"/>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<var>${result}</var>
<arg>${result}</arg>
<doc>Converts the given item to a floating point number.</doc>
<msg timestamp="20230103 10:17:45.566" level="INFO">${result} = 1.0</msg>
<status status="PASS" starttime="20230103 10:17:45.566" endtime="20230103 10:17:45.566"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${result}&gt;=1</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230103 10:17:45.566" endtime="20230103 10:17:45.567"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone auditparser "${auditworkdir}/audit.db" query "select count(*) from audit where op='CREATE_BUCKET' and RESULT='SUCCESS'"</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:17:45.573" level="INFO">Running command 'ozone auditparser "/tmp/audit.db" query "select count(*) from audit where op='CREATE_BUCKET' and RESULT='SUCCESS'" 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:17:47.297" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:17:47.298" level="INFO">${output} = 7	
</msg>
<status status="PASS" starttime="20230103 10:17:45.570" endtime="20230103 10:17:47.298"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:17:47.300" level="INFO">7	
</msg>
<status status="PASS" starttime="20230103 10:17:47.299" endtime="20230103 10:17:47.300"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:17:47.301" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:17:47.300" endtime="20230103 10:17:47.302"/>
</kw>
<status status="PASS" starttime="20230103 10:17:45.569" endtime="20230103 10:17:47.303"/>
</kw>
<msg timestamp="20230103 10:17:47.303" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:17:45.569" endtime="20230103 10:17:47.304"/>
</kw>
<msg timestamp="20230103 10:17:47.306" level="INFO">${result} = 7	
</msg>
<status status="PASS" starttime="20230103 10:17:45.568" endtime="20230103 10:17:47.306"/>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<var>${result}</var>
<arg>${result}</arg>
<doc>Converts the given item to a floating point number.</doc>
<msg timestamp="20230103 10:17:47.308" level="INFO">${result} = 7.0</msg>
<status status="PASS" starttime="20230103 10:17:47.306" endtime="20230103 10:17:47.308"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${result}&gt;=${buckets}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230103 10:17:47.308" endtime="20230103 10:17:47.309"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230103 10:17:06.014" endtime="20230103 10:17:47.310"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20230103 10:17:05.959" endtime="20230103 10:17:47.314"/>
</suite>
<status status="PASS" starttime="20230103 10:17:05.918" endtime="20230103 10:17:47.316"/>
</suite>
<suite id="s1-s3" name="Basic" source="/opt/hadoop/smoketest/basic">
<suite id="s1-s3-s1" name="Basic" source="/opt/hadoop/smoketest/basic/basic.robot">
<test id="s1-s3-s1-t1" name="Check webui static resources" line="29">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230103 10:17:54.475" endtime="20230103 10:17:54.476"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -s -I http://${SCM}:9876/static/bootstrap-3.4.1/js/bootstrap.min.js</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:17:54.483" level="INFO">Running command 'curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:17:54.610" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:17:54.610" level="INFO">${output} = HTTP/1.1 200 OK
Date: Tue, 03 Jan 2023 10:17:54 GMT
X-Content-Type-Options: nosniff
X-XSS-Protection: 1; mode=block
X-FRAME-OPTIONS: SAMEORIGIN
Last-Modified: Tue, 03 Jan 2023 09:55:32 GMT
Content-Typ...</msg>
<status status="PASS" starttime="20230103 10:17:54.478" endtime="20230103 10:17:54.610"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:17:54.612" level="INFO">HTTP/1.1 200 OK
Date: Tue, 03 Jan 2023 10:17:54 GMT
X-Content-Type-Options: nosniff
X-XSS-Protection: 1; mode=block
X-FRAME-OPTIONS: SAMEORIGIN
Last-Modified: Tue, 03 Jan 2023 09:55:32 GMT
Content-Type: application/javascript
Accept-Ranges: bytes
Content-Length: 39680
</msg>
<status status="PASS" starttime="20230103 10:17:54.611" endtime="20230103 10:17:54.612"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:17:54.613" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:17:54.613" endtime="20230103 10:17:54.613"/>
</kw>
<status status="PASS" starttime="20230103 10:17:54.477" endtime="20230103 10:17:54.615"/>
</kw>
<msg timestamp="20230103 10:17:54.615" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:17:54.477" endtime="20230103 10:17:54.616"/>
</kw>
<msg timestamp="20230103 10:17:54.617" level="INFO">${result} = HTTP/1.1 200 OK
Date: Tue, 03 Jan 2023 10:17:54 GMT
X-Content-Type-Options: nosniff
X-XSS-Protection: 1; mode=block
X-FRAME-OPTIONS: SAMEORIGIN
Last-Modified: Tue, 03 Jan 2023 09:55:32 GMT
Content-Typ...</msg>
<status status="PASS" starttime="20230103 10:17:54.476" endtime="20230103 10:17:54.617"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230103 10:17:54.617" endtime="20230103 10:17:54.619"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230103 10:17:54.474" endtime="20230103 10:17:54.620"/>
</test>
<test id="s1-s3-s1-t2" name="Basic Freon smoketest" line="34">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230103 10:17:54.622" endtime="20230103 10:17:54.625"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>10</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230103 10:17:54.626" level="INFO">${random} = jIREh7pq8m</msg>
<status status="PASS" starttime="20230103 10:17:54.625" endtime="20230103 10:17:54.626"/>
</kw>
<kw name="Freon OCKG" library="freon">
<arg>prefix=${random}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:17:54.638" level="INFO">Running command 'ozone freon ockg  -t 1 -n1 -p jIREh7pq8m  2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:18:04.241" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:18:04.241" level="INFO">${output} = 2023-01-03 10:17:57,893 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-01-03 10:17:58,171 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230103 10:17:54.634" endtime="20230103 10:18:04.241"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:18:04.242" level="INFO">2023-01-03 10:17:57,893 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-01-03 10:17:58,171 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-01-03 10:17:58,171 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-01-03 10:17:58,481 [main] INFO freon.BaseFreonGenerator: Executing test with prefix jIREh7pq8m and number-of-tests 1
2023-01-03 10:17:58,621 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-01-03 10:17:59,630 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-01-03 10:18:00,631 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-01-03 10:18:01,445 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2023-01-03 10:18:01,632 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-01-03 10:18:01,903 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2023-01-03 10:18:02,633 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-01-03 10:18:03,633 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2023-01-03 10:18:03,882 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=1, min=2577.261626, max=2577.261626, mean=2577.261626, stddev=0.0, median=2577.261626, p75=2577.261626, p95=2577.261626, p98=2577.261626, p99=2577.261626, p999=2577.261626, mean_rate=0.28134990448483044, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-01-03 10:18:03,883 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 5
2023-01-03 10:18:03,883 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-01-03 10:18:03,883 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20230103 10:18:04.241" endtime="20230103 10:18:04.242"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:18:04.244" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:18:04.243" endtime="20230103 10:18:04.244"/>
</kw>
<status status="PASS" starttime="20230103 10:17:54.633" endtime="20230103 10:18:04.244"/>
</kw>
<msg timestamp="20230103 10:18:04.244" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:17:54.632" endtime="20230103 10:18:04.245"/>
</kw>
<msg timestamp="20230103 10:18:04.245" level="INFO">${result} = 2023-01-03 10:17:57,893 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-01-03 10:17:58,171 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230103 10:17:54.630" endtime="20230103 10:18:04.246"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230103 10:18:04.246" endtime="20230103 10:18:04.246"/>
</kw>
<status status="PASS" starttime="20230103 10:17:54.626" endtime="20230103 10:18:04.247"/>
</kw>
<kw name="Freon OCKV" library="freon">
<arg>prefix=${random}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockv ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:18:04.254" level="INFO">Running command 'ozone freon ockv  -t 1 -n1 -p jIREh7pq8m  2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:18:13.469" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:18:13.469" level="INFO">${output} = 2023-01-03 10:18:07,079 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-01-03 10:18:07,299 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230103 10:18:04.251" endtime="20230103 10:18:13.469"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:18:13.471" level="INFO">2023-01-03 10:18:07,079 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-01-03 10:18:07,299 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-01-03 10:18:07,299 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-01-03 10:18:07,557 [main] INFO freon.BaseFreonGenerator: Executing test with prefix jIREh7pq8m and number-of-tests 1
2023-01-03 10:18:07,676 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-01-03 10:18:08,677 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-01-03 10:18:09,678 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-01-03 10:18:10,325 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2023-01-03 10:18:10,678 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-01-03 10:18:11,679 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-01-03 10:18:12,680 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2023-01-03 10:18:12,945 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-validate, count=1, min=60.806047, max=60.806047, mean=60.806047, stddev=0.0, median=60.806047, p75=60.806047, p95=60.806047, p98=60.806047, p99=60.806047, p999=60.806047, mean_rate=0.9401191396063477, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-01-03 10:18:12,946 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 5
2023-01-03 10:18:12,946 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-01-03 10:18:12,947 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20230103 10:18:13.470" endtime="20230103 10:18:13.471"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:18:13.472" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:18:13.471" endtime="20230103 10:18:13.472"/>
</kw>
<status status="PASS" starttime="20230103 10:18:04.250" endtime="20230103 10:18:13.473"/>
</kw>
<msg timestamp="20230103 10:18:13.473" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:18:04.250" endtime="20230103 10:18:13.473"/>
</kw>
<msg timestamp="20230103 10:18:13.474" level="INFO">${result} = 2023-01-03 10:18:07,079 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-01-03 10:18:07,299 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230103 10:18:04.249" endtime="20230103 10:18:13.474"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230103 10:18:13.474" endtime="20230103 10:18:13.475"/>
</kw>
<status status="PASS" starttime="20230103 10:18:04.247" endtime="20230103 10:18:13.475"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230103 10:17:54.621" endtime="20230103 10:18:13.475"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20230103 10:17:54.424" endtime="20230103 10:18:13.478"/>
</suite>
<suite id="s1-s3-s2" name="Getconf" source="/opt/hadoop/smoketest/basic/getconf.robot">
<test id="s1-s3-s2-t1" name="Get OM" line="22">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf ozonemanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:18:13.492" level="INFO">Running command 'ozone getconf ozonemanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:18:15.638" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:18:15.638" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20230103 10:18:13.489" endtime="20230103 10:18:15.638"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:18:15.640" level="INFO">om</msg>
<status status="PASS" starttime="20230103 10:18:15.638" endtime="20230103 10:18:15.640"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:18:15.641" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:18:15.640" endtime="20230103 10:18:15.641"/>
</kw>
<status status="PASS" starttime="20230103 10:18:13.488" endtime="20230103 10:18:15.642"/>
</kw>
<msg timestamp="20230103 10:18:15.642" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:18:13.488" endtime="20230103 10:18:15.642"/>
</kw>
<msg timestamp="20230103 10:18:15.643" level="INFO">${result} = om</msg>
<status status="PASS" starttime="20230103 10:18:13.487" endtime="20230103 10:18:15.643"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230103 10:18:15.643" endtime="20230103 10:18:15.644"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf -ozonemanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:18:15.648" level="INFO">Running command 'ozone getconf -ozonemanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:18:17.921" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:18:17.921" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20230103 10:18:15.645" endtime="20230103 10:18:17.921"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:18:17.923" level="INFO">om</msg>
<status status="PASS" starttime="20230103 10:18:17.922" endtime="20230103 10:18:17.923"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:18:17.924" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:18:17.923" endtime="20230103 10:18:17.924"/>
</kw>
<status status="PASS" starttime="20230103 10:18:15.645" endtime="20230103 10:18:17.924"/>
</kw>
<msg timestamp="20230103 10:18:17.924" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:18:15.644" endtime="20230103 10:18:17.925"/>
</kw>
<msg timestamp="20230103 10:18:17.925" level="INFO">${result} = om</msg>
<status status="PASS" starttime="20230103 10:18:15.644" endtime="20230103 10:18:17.925"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230103 10:18:17.925" endtime="20230103 10:18:17.926"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230103 10:18:13.486" endtime="20230103 10:18:17.926"/>
</test>
<test id="s1-s3-s2-t2" name="Get SCM" line="28">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf storagecontainermanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:18:17.934" level="INFO">Running command 'ozone getconf storagecontainermanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:18:20.294" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:18:20.294" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230103 10:18:17.931" endtime="20230103 10:18:20.294"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:18:20.296" level="INFO">scm</msg>
<status status="PASS" starttime="20230103 10:18:20.295" endtime="20230103 10:18:20.296"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:18:20.297" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:18:20.296" endtime="20230103 10:18:20.297"/>
</kw>
<status status="PASS" starttime="20230103 10:18:17.930" endtime="20230103 10:18:20.298"/>
</kw>
<msg timestamp="20230103 10:18:20.298" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:18:17.930" endtime="20230103 10:18:20.299"/>
</kw>
<msg timestamp="20230103 10:18:20.299" level="INFO">${result} = scm</msg>
<status status="PASS" starttime="20230103 10:18:17.929" endtime="20230103 10:18:20.300"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>scm</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230103 10:18:20.300" endtime="20230103 10:18:20.300"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf -storagecontainermanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:18:20.306" level="INFO">Running command 'ozone getconf -storagecontainermanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:18:22.320" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:18:22.320" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230103 10:18:20.303" endtime="20230103 10:18:22.320"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:18:22.322" level="INFO">scm</msg>
<status status="PASS" starttime="20230103 10:18:22.321" endtime="20230103 10:18:22.322"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:18:22.323" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:18:22.322" endtime="20230103 10:18:22.323"/>
</kw>
<status status="PASS" starttime="20230103 10:18:20.302" endtime="20230103 10:18:22.324"/>
</kw>
<msg timestamp="20230103 10:18:22.324" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:18:20.301" endtime="20230103 10:18:22.325"/>
</kw>
<msg timestamp="20230103 10:18:22.325" level="INFO">${result} = scm</msg>
<status status="PASS" starttime="20230103 10:18:20.300" endtime="20230103 10:18:22.325"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>scm</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230103 10:18:22.325" endtime="20230103 10:18:22.326"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230103 10:18:17.928" endtime="20230103 10:18:22.326"/>
</test>
<test id="s1-s3-s2-t3" name="Get existing config key" line="34">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf confKey ozone.om.address</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:18:22.333" level="INFO">Running command 'ozone getconf confKey ozone.om.address 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:18:24.431" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:18:24.431" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20230103 10:18:22.330" endtime="20230103 10:18:24.431"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:18:24.433" level="INFO">om</msg>
<status status="PASS" starttime="20230103 10:18:24.432" endtime="20230103 10:18:24.433"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:18:24.434" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:18:24.433" endtime="20230103 10:18:24.434"/>
</kw>
<status status="PASS" starttime="20230103 10:18:22.329" endtime="20230103 10:18:24.435"/>
</kw>
<msg timestamp="20230103 10:18:24.435" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:18:22.329" endtime="20230103 10:18:24.435"/>
</kw>
<msg timestamp="20230103 10:18:24.436" level="INFO">${result} = om</msg>
<status status="PASS" starttime="20230103 10:18:22.328" endtime="20230103 10:18:24.436"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230103 10:18:24.436" endtime="20230103 10:18:24.436"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>is missing</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230103 10:18:24.437" endtime="20230103 10:18:24.437"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf -confKey ozone.om.address</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:18:24.442" level="INFO">Running command 'ozone getconf -confKey ozone.om.address 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:18:26.254" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:18:26.254" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20230103 10:18:24.439" endtime="20230103 10:18:26.255"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:18:26.256" level="INFO">om</msg>
<status status="PASS" starttime="20230103 10:18:26.255" endtime="20230103 10:18:26.256"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:18:26.257" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:18:26.257" endtime="20230103 10:18:26.257"/>
</kw>
<status status="PASS" starttime="20230103 10:18:24.438" endtime="20230103 10:18:26.258"/>
</kw>
<msg timestamp="20230103 10:18:26.258" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:18:24.438" endtime="20230103 10:18:26.258"/>
</kw>
<msg timestamp="20230103 10:18:26.259" level="INFO">${result} = om</msg>
<status status="PASS" starttime="20230103 10:18:24.437" endtime="20230103 10:18:26.259"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230103 10:18:26.259" endtime="20230103 10:18:26.260"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>is missing</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230103 10:18:26.260" endtime="20230103 10:18:26.260"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230103 10:18:22.327" endtime="20230103 10:18:26.261"/>
</test>
<test id="s1-s3-s2-t4" name="Get undefined config key" line="42">
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone getconf confKey no-such-config-key</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:18:26.268" level="INFO">Running command 'ozone getconf confKey no-such-config-key 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:18:28.459" level="INFO">${rc} = 255</msg>
<msg timestamp="20230103 10:18:28.459" level="INFO">${output} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20230103 10:18:26.265" endtime="20230103 10:18:28.460"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:18:28.462" level="INFO">Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20230103 10:18:28.460" endtime="20230103 10:18:28.462"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:18:28.463" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:18:28.462" endtime="20230103 10:18:28.463"/>
</kw>
<msg timestamp="20230103 10:18:28.463" level="INFO">${result} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20230103 10:18:26.265" endtime="20230103 10:18:28.463"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Configuration no-such-config-key is missing</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230103 10:18:28.464" endtime="20230103 10:18:28.464"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone getconf -confKey no-such-config-key</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:18:28.470" level="INFO">Running command 'ozone getconf -confKey no-such-config-key 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:18:30.852" level="INFO">${rc} = 255</msg>
<msg timestamp="20230103 10:18:30.852" level="INFO">${output} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20230103 10:18:28.465" endtime="20230103 10:18:30.852"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:18:30.854" level="INFO">Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20230103 10:18:30.853" endtime="20230103 10:18:30.854"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:18:30.855" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:18:30.854" endtime="20230103 10:18:30.856"/>
</kw>
<msg timestamp="20230103 10:18:30.856" level="INFO">${result} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20230103 10:18:28.464" endtime="20230103 10:18:30.856"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Configuration no-such-config-key is missing</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230103 10:18:30.856" endtime="20230103 10:18:30.857"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230103 10:18:26.263" endtime="20230103 10:18:30.858"/>
</test>
<doc>Test 'ozone getconf' command</doc>
<status status="PASS" starttime="20230103 10:18:13.480" endtime="20230103 10:18:30.859"/>
</suite>
<suite id="s1-s3-s3" name="Links" source="/opt/hadoop/smoketest/basic/links.robot">
<kw name="Create volumes" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230103 10:18:30.892" level="INFO">${random} = 37187</msg>
<status status="PASS" starttime="20230103 10:18:30.891" endtime="20230103 10:18:30.892"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${source}</arg>
<arg>${random}-source</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230103 10:18:30.897" level="INFO">${source} = 37187-source</msg>
<status status="PASS" starttime="20230103 10:18:30.892" endtime="20230103 10:18:30.897"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${target}</arg>
<arg>${random}-target</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230103 10:18:30.901" level="INFO">${target} = 37187-target</msg>
<status status="PASS" starttime="20230103 10:18:30.899" endtime="20230103 10:18:30.901"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${source}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:18:30.907" level="INFO">Running command 'ozone sh volume create 37187-source 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:18:36.768" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:18:36.768" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230103 10:18:30.903" endtime="20230103 10:18:36.768"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:18:36.770" level="INFO"/>
<status status="PASS" starttime="20230103 10:18:36.769" endtime="20230103 10:18:36.770"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:18:36.771" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:18:36.770" endtime="20230103 10:18:36.771"/>
</kw>
<status status="PASS" starttime="20230103 10:18:30.902" endtime="20230103 10:18:36.772"/>
</kw>
<msg timestamp="20230103 10:18:36.772" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:18:30.902" endtime="20230103 10:18:36.773"/>
</kw>
<status status="PASS" starttime="20230103 10:18:30.901" endtime="20230103 10:18:36.773"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:18:36.782" level="INFO">Running command 'ozone sh volume create 37187-target 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:18:43.745" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:18:43.745" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230103 10:18:36.775" endtime="20230103 10:18:43.746"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:18:43.749" level="INFO"/>
<status status="PASS" starttime="20230103 10:18:43.747" endtime="20230103 10:18:43.750"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:18:43.752" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:18:43.751" endtime="20230103 10:18:43.752"/>
</kw>
<status status="PASS" starttime="20230103 10:18:36.774" endtime="20230103 10:18:43.752"/>
</kw>
<msg timestamp="20230103 10:18:43.752" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:18:36.774" endtime="20230103 10:18:43.753"/>
</kw>
<status status="PASS" starttime="20230103 10:18:36.773" endtime="20230103 10:18:43.753"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup ACL tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230103 10:18:43.754" endtime="20230103 10:18:43.754"/>
</kw>
<status status="PASS" starttime="20230103 10:18:30.891" endtime="20230103 10:18:43.755"/>
</kw>
<test id="s1-s3-s3-t1" name="Link to non-existent bucket" line="73">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230103 10:18:43.756" endtime="20230103 10:18:43.757"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/no-such-bucket ${target}/dangling-link</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:18:43.763" level="INFO">Running command 'ozone sh bucket link 37187-source/no-such-bucket 37187-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:18:49.336" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:18:49.336" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230103 10:18:43.759" endtime="20230103 10:18:49.336"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:18:49.338" level="INFO"/>
<status status="PASS" starttime="20230103 10:18:49.337" endtime="20230103 10:18:49.338"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:18:49.339" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:18:49.338" endtime="20230103 10:18:49.339"/>
</kw>
<status status="PASS" starttime="20230103 10:18:43.758" endtime="20230103 10:18:49.340"/>
</kw>
<msg timestamp="20230103 10:18:49.340" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:18:43.758" endtime="20230103 10:18:49.340"/>
</kw>
<status status="PASS" starttime="20230103 10:18:43.757" endtime="20230103 10:18:49.340"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/dangling-link</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:18:49.345" level="INFO">Running command 'ozone sh key list 37187-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:18:54.908" level="INFO">${rc} = 255</msg>
<msg timestamp="20230103 10:18:54.908" level="INFO">${output} = BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" starttime="20230103 10:18:49.341" endtime="20230103 10:18:54.908"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:18:54.910" level="INFO">BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" starttime="20230103 10:18:54.909" endtime="20230103 10:18:54.910"/>
</kw>
<msg timestamp="20230103 10:18:54.910" level="INFO">${result} = BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" starttime="20230103 10:18:49.341" endtime="20230103 10:18:54.910"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>BUCKET_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230103 10:18:54.911" endtime="20230103 10:18:54.911"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20230103 10:18:43.755" endtime="20230103 10:18:54.912"/>
</test>
<test id="s1-s3-s3-t2" name="Key create passthrough" line="78">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230103 10:18:54.914" endtime="20230103 10:18:54.915"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:18:54.920" level="INFO">Running command 'ozone sh bucket link 37187-source/bucket1 37187-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:19:00.753" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:19:00.754" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230103 10:18:54.917" endtime="20230103 10:19:00.754"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:19:00.755" level="INFO"/>
<status status="PASS" starttime="20230103 10:19:00.754" endtime="20230103 10:19:00.755"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:19:00.756" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:19:00.756" endtime="20230103 10:19:00.756"/>
</kw>
<status status="PASS" starttime="20230103 10:18:54.916" endtime="20230103 10:19:00.757"/>
</kw>
<msg timestamp="20230103 10:19:00.757" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:18:54.916" endtime="20230103 10:19:00.758"/>
</kw>
<status status="PASS" starttime="20230103 10:18:54.915" endtime="20230103 10:19:00.758"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${source}/bucket1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:19:00.764" level="INFO">Running command 'ozone sh bucket create 37187-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:19:06.500" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:19:06.500" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230103 10:19:00.761" endtime="20230103 10:19:06.500"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:19:06.503" level="INFO"/>
<status status="PASS" starttime="20230103 10:19:06.501" endtime="20230103 10:19:06.503"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:19:06.504" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:19:06.503" endtime="20230103 10:19:06.504"/>
</kw>
<status status="PASS" starttime="20230103 10:19:00.760" endtime="20230103 10:19:06.504"/>
</kw>
<msg timestamp="20230103 10:19:06.504" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:19:00.760" endtime="20230103 10:19:06.505"/>
</kw>
<status status="PASS" starttime="20230103 10:19:00.759" endtime="20230103 10:19:06.505"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${target}/link1/key1 /etc/passwd</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:19:06.511" level="INFO">Running command 'ozone sh key put 37187-target/link1/key1 /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:19:16.895" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:19:16.895" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230103 10:19:06.508" endtime="20230103 10:19:16.896"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:19:16.898" level="INFO"/>
<status status="PASS" starttime="20230103 10:19:16.897" endtime="20230103 10:19:16.898"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:19:16.899" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:19:16.898" endtime="20230103 10:19:16.899"/>
</kw>
<status status="PASS" starttime="20230103 10:19:06.507" endtime="20230103 10:19:16.900"/>
</kw>
<msg timestamp="20230103 10:19:16.900" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:19:06.506" endtime="20230103 10:19:16.901"/>
</kw>
<status status="PASS" starttime="20230103 10:19:06.505" endtime="20230103 10:19:16.901"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${target}/link1/key1</arg>
<arg>/etc/passwd</arg>
<kw name="Compare Key With Local File" library="shell">
<var>${matches}</var>
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230103 10:19:16.903" level="INFO">${postfix} = 62443</msg>
<status status="PASS" starttime="20230103 10:19:16.903" endtime="20230103 10:19:16.904"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${tmpfile}</var>
<arg>/tmp/tempkey-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230103 10:19:16.904" level="INFO">${tmpfile} = /tmp/tempkey-62443</msg>
<status status="PASS" starttime="20230103 10:19:16.904" endtime="20230103 10:19:16.904"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${key} ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:19:16.910" level="INFO">Running command 'ozone sh key get 37187-target/link1/key1 /tmp/tempkey-62443 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:19:26.470" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:19:26.470" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230103 10:19:16.906" endtime="20230103 10:19:26.470"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:19:26.472" level="INFO"/>
<status status="PASS" starttime="20230103 10:19:26.471" endtime="20230103 10:19:26.473"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:19:26.474" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:19:26.473" endtime="20230103 10:19:26.474"/>
</kw>
<status status="PASS" starttime="20230103 10:19:16.906" endtime="20230103 10:19:26.474"/>
</kw>
<msg timestamp="20230103 10:19:26.475" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:19:16.905" endtime="20230103 10:19:26.476"/>
</kw>
<status status="PASS" starttime="20230103 10:19:16.905" endtime="20230103 10:19:26.477"/>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<var>${rc}</var>
<arg>diff -q ${file} ${tmpfile}</arg>
<doc>Runs the given command in the system and returns the return code.</doc>
<msg timestamp="20230103 10:19:26.481" level="INFO">Running command 'diff -q /etc/passwd /tmp/tempkey-62443 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:19:26.485" level="INFO">${rc} = 0</msg>
<status status="PASS" starttime="20230103 10:19:26.477" endtime="20230103 10:19:26.485"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:19:26.491" level="INFO">Running command 'rm -f /tmp/tempkey-62443 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:19:26.495" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:19:26.495" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230103 10:19:26.488" endtime="20230103 10:19:26.495"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:19:26.497" level="INFO"/>
<status status="PASS" starttime="20230103 10:19:26.496" endtime="20230103 10:19:26.497"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:19:26.498" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:19:26.497" endtime="20230103 10:19:26.498"/>
</kw>
<status status="PASS" starttime="20230103 10:19:26.487" endtime="20230103 10:19:26.498"/>
</kw>
<msg timestamp="20230103 10:19:26.498" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:19:26.487" endtime="20230103 10:19:26.499"/>
</kw>
<status status="PASS" starttime="20230103 10:19:26.485" endtime="20230103 10:19:26.500"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230103 10:19:26.500" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20230103 10:19:26.500" endtime="20230103 10:19:26.501"/>
</kw>
<msg timestamp="20230103 10:19:26.501" level="INFO">${matches} = True</msg>
<status status="PASS" starttime="20230103 10:19:16.902" endtime="20230103 10:19:26.501"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${matches}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230103 10:19:26.501" endtime="20230103 10:19:26.502"/>
</kw>
<status status="PASS" starttime="20230103 10:19:16.901" endtime="20230103 10:19:26.502"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20230103 10:18:54.913" endtime="20230103 10:19:26.502"/>
</test>
<test id="s1-s3-s3-t3" name="Key read passthrough" line="84">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230103 10:19:26.505" endtime="20230103 10:19:26.505"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${source}/bucket1/key2 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:19:26.511" level="INFO">Running command 'ozone sh key put 37187-source/bucket1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:19:35.311" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:19:35.311" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230103 10:19:26.508" endtime="20230103 10:19:35.311"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:19:35.313" level="INFO"/>
<status status="PASS" starttime="20230103 10:19:35.312" endtime="20230103 10:19:35.313"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:19:35.314" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:19:35.313" endtime="20230103 10:19:35.315"/>
</kw>
<status status="PASS" starttime="20230103 10:19:26.507" endtime="20230103 10:19:35.315"/>
</kw>
<msg timestamp="20230103 10:19:35.315" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:19:26.506" endtime="20230103 10:19:35.316"/>
</kw>
<status status="PASS" starttime="20230103 10:19:26.506" endtime="20230103 10:19:35.316"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${source}/bucket1/key2</arg>
<arg>/opt/hadoop/NOTICE.txt</arg>
<kw name="Compare Key With Local File" library="shell">
<var>${matches}</var>
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230103 10:19:35.319" level="INFO">${postfix} = 67807</msg>
<status status="PASS" starttime="20230103 10:19:35.318" endtime="20230103 10:19:35.319"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${tmpfile}</var>
<arg>/tmp/tempkey-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230103 10:19:35.320" level="INFO">${tmpfile} = /tmp/tempkey-67807</msg>
<status status="PASS" starttime="20230103 10:19:35.319" endtime="20230103 10:19:35.320"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${key} ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:19:35.325" level="INFO">Running command 'ozone sh key get 37187-source/bucket1/key2 /tmp/tempkey-67807 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:19:44.332" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:19:44.332" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230103 10:19:35.322" endtime="20230103 10:19:44.332"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:19:44.334" level="INFO"/>
<status status="PASS" starttime="20230103 10:19:44.332" endtime="20230103 10:19:44.334"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:19:44.335" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:19:44.334" endtime="20230103 10:19:44.335"/>
</kw>
<status status="PASS" starttime="20230103 10:19:35.321" endtime="20230103 10:19:44.335"/>
</kw>
<msg timestamp="20230103 10:19:44.335" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:19:35.320" endtime="20230103 10:19:44.336"/>
</kw>
<status status="PASS" starttime="20230103 10:19:35.320" endtime="20230103 10:19:44.336"/>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<var>${rc}</var>
<arg>diff -q ${file} ${tmpfile}</arg>
<doc>Runs the given command in the system and returns the return code.</doc>
<msg timestamp="20230103 10:19:44.340" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/tempkey-67807 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:19:44.344" level="INFO">${rc} = 0</msg>
<status status="PASS" starttime="20230103 10:19:44.337" endtime="20230103 10:19:44.344"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:19:44.351" level="INFO">Running command 'rm -f /tmp/tempkey-67807 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:19:44.355" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:19:44.355" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230103 10:19:44.347" endtime="20230103 10:19:44.355"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:19:44.357" level="INFO"/>
<status status="PASS" starttime="20230103 10:19:44.356" endtime="20230103 10:19:44.357"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:19:44.358" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:19:44.357" endtime="20230103 10:19:44.358"/>
</kw>
<status status="PASS" starttime="20230103 10:19:44.347" endtime="20230103 10:19:44.358"/>
</kw>
<msg timestamp="20230103 10:19:44.358" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:19:44.346" endtime="20230103 10:19:44.359"/>
</kw>
<status status="PASS" starttime="20230103 10:19:44.345" endtime="20230103 10:19:44.359"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230103 10:19:44.361" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20230103 10:19:44.360" endtime="20230103 10:19:44.361"/>
</kw>
<msg timestamp="20230103 10:19:44.361" level="INFO">${matches} = True</msg>
<status status="PASS" starttime="20230103 10:19:35.317" endtime="20230103 10:19:44.361"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${matches}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230103 10:19:44.362" endtime="20230103 10:19:44.362"/>
</kw>
<status status="PASS" starttime="20230103 10:19:35.316" endtime="20230103 10:19:44.362"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20230103 10:19:26.504" endtime="20230103 10:19:44.363"/>
</test>
<test id="s1-s3-s3-t4" name="Key list passthrough" line="88">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230103 10:19:44.365" endtime="20230103 10:19:44.366"/>
</kw>
<kw name="Execute" library="os">
<var>${target_list}</var>
<arg>ozone sh key list ${target}/link1 | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:19:44.371" level="INFO">Running command 'ozone sh key list 37187-target/link1 | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:19:50.630" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:19:50.630" level="INFO">${output} = key1
key2</msg>
<status status="PASS" starttime="20230103 10:19:44.368" endtime="20230103 10:19:50.630"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:19:50.632" level="INFO">key1
key2</msg>
<status status="PASS" starttime="20230103 10:19:50.631" endtime="20230103 10:19:50.632"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:19:50.634" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:19:50.633" endtime="20230103 10:19:50.634"/>
</kw>
<status status="PASS" starttime="20230103 10:19:44.367" endtime="20230103 10:19:50.634"/>
</kw>
<msg timestamp="20230103 10:19:50.634" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:19:44.367" endtime="20230103 10:19:50.635"/>
</kw>
<msg timestamp="20230103 10:19:50.635" level="INFO">${target_list} = key1
key2</msg>
<status status="PASS" starttime="20230103 10:19:44.366" endtime="20230103 10:19:50.635"/>
</kw>
<kw name="Execute" library="os">
<var>${source_list}</var>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:19:50.641" level="INFO">Running command 'ozone sh key list 37187-source/bucket1 | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:19:56.776" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:19:56.776" level="INFO">${output} = key1
key2</msg>
<status status="PASS" starttime="20230103 10:19:50.637" endtime="20230103 10:19:56.776"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:19:56.778" level="INFO">key1
key2</msg>
<status status="PASS" starttime="20230103 10:19:56.777" endtime="20230103 10:19:56.778"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:19:56.779" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:19:56.778" endtime="20230103 10:19:56.779"/>
</kw>
<status status="PASS" starttime="20230103 10:19:50.637" endtime="20230103 10:19:56.780"/>
</kw>
<msg timestamp="20230103 10:19:56.780" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:19:50.636" endtime="20230103 10:19:56.780"/>
</kw>
<msg timestamp="20230103 10:19:56.781" level="INFO">${source_list} = key1
key2</msg>
<status status="PASS" starttime="20230103 10:19:50.635" endtime="20230103 10:19:56.781"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${target_list}</arg>
<arg>${source_list}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230103 10:19:56.781" endtime="20230103 10:19:56.782"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230103 10:19:56.782" endtime="20230103 10:19:56.782"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230103 10:19:56.783" endtime="20230103 10:19:56.783"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20230103 10:19:44.364" endtime="20230103 10:19:56.784"/>
</test>
<test id="s1-s3-s3-t5" name="Key delete passthrough" line="95">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230103 10:19:56.788" endtime="20230103 10:19:56.789"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${target}/link1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:19:56.793" level="INFO">Running command 'ozone sh key delete 37187-target/link1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:20:02.447" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:20:02.448" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230103 10:19:56.790" endtime="20230103 10:20:02.448"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:20:02.449" level="INFO"/>
<status status="PASS" starttime="20230103 10:20:02.448" endtime="20230103 10:20:02.450"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:20:02.450" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:20:02.450" endtime="20230103 10:20:02.450"/>
</kw>
<status status="PASS" starttime="20230103 10:19:56.790" endtime="20230103 10:20:02.451"/>
</kw>
<msg timestamp="20230103 10:20:02.451" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:19:56.789" endtime="20230103 10:20:02.451"/>
</kw>
<status status="PASS" starttime="20230103 10:19:56.789" endtime="20230103 10:20:02.452"/>
</kw>
<kw name="Execute" library="os">
<var>${source_list}</var>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:20:02.456" level="INFO">Running command 'ozone sh key list 37187-source/bucket1 | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:20:08.419" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:20:08.419" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20230103 10:20:02.454" endtime="20230103 10:20:08.420"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:20:08.422" level="INFO">key1</msg>
<status status="PASS" starttime="20230103 10:20:08.420" endtime="20230103 10:20:08.422"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:20:08.424" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:20:08.422" endtime="20230103 10:20:08.424"/>
</kw>
<status status="PASS" starttime="20230103 10:20:02.453" endtime="20230103 10:20:08.425"/>
</kw>
<msg timestamp="20230103 10:20:08.426" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:20:02.453" endtime="20230103 10:20:08.427"/>
</kw>
<msg timestamp="20230103 10:20:08.428" level="INFO">${source_list} = key1</msg>
<status status="PASS" starttime="20230103 10:20:02.452" endtime="20230103 10:20:08.428"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key2</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230103 10:20:08.428" endtime="20230103 10:20:08.430"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20230103 10:19:56.787" endtime="20230103 10:20:08.431"/>
</test>
<test id="s1-s3-s3-t6" name="Bucket list contains links" line="100">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230103 10:20:08.436" endtime="20230103 10:20:08.437"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:20:08.443" level="INFO">Running command 'ozone sh bucket list 37187-target 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:20:14.038" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:20:14.038" level="INFO">${output} = [ {
  "volumeName" : "37187-target",
  "bucketName" : "dangling-link",
  "sourceVolume" : "37187-source",
  "sourceBucket" : "no-such-bucket",
  "creationTime" : "2023-01-03T10:18:49.236Z",
  "modific...</msg>
<status status="PASS" starttime="20230103 10:20:08.440" endtime="20230103 10:20:14.038"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:20:14.039" level="INFO">[ {
  "volumeName" : "37187-target",
  "bucketName" : "dangling-link",
  "sourceVolume" : "37187-source",
  "sourceBucket" : "no-such-bucket",
  "creationTime" : "2023-01-03T10:18:49.236Z",
  "modificationTime" : "2023-01-03T10:18:49.236Z",
  "owner" : "hadoop"
}, {
  "volumeName" : "37187-target",
  "bucketName" : "link1",
  "sourceVolume" : "37187-source",
  "sourceBucket" : "bucket1",
  "creationTime" : "2023-01-03T10:19:00.545Z",
  "modificationTime" : "2023-01-03T10:19:00.545Z",
  "owner" : "hadoop"
} ]</msg>
<status status="PASS" starttime="20230103 10:20:14.038" endtime="20230103 10:20:14.040"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:20:14.041" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:20:14.040" endtime="20230103 10:20:14.041"/>
</kw>
<status status="PASS" starttime="20230103 10:20:08.439" endtime="20230103 10:20:14.041"/>
</kw>
<msg timestamp="20230103 10:20:14.042" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:20:08.438" endtime="20230103 10:20:14.042"/>
</kw>
<msg timestamp="20230103 10:20:14.042" level="INFO">${result} = [ {
  "volumeName" : "37187-target",
  "bucketName" : "dangling-link",
  "sourceVolume" : "37187-source",
  "sourceBucket" : "no-such-bucket",
  "creationTime" : "2023-01-03T10:18:49.236Z",
  "modific...</msg>
<status status="PASS" starttime="20230103 10:20:08.437" endtime="20230103 10:20:14.042"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>link1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230103 10:20:14.043" endtime="20230103 10:20:14.043"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>dangling-link</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230103 10:20:14.043" endtime="20230103 10:20:14.044"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20230103 10:20:08.434" endtime="20230103 10:20:14.044"/>
</test>
<test id="s1-s3-s3-t7" name="Bucket info shows source" line="105">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230103 10:20:14.047" endtime="20230103 10:20:14.048"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:20:14.053" level="INFO">Running command 'ozone sh bucket info 37187-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:20:20.205" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:20:20.205" level="INFO">${output} = {
  "volumeName" : "37187-target",
  "bucketName" : "link1",
  "sourceVolume" : "37187-source",
  "sourceBucket" : "bucket1",
  "creationTime" : "2023-01-03T10:19:00.545Z",
  "modificationTime" : "202...</msg>
<status status="PASS" starttime="20230103 10:20:14.050" endtime="20230103 10:20:20.205"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:20:20.206" level="INFO">{
  "volumeName" : "37187-target",
  "bucketName" : "link1",
  "sourceVolume" : "37187-source",
  "sourceBucket" : "bucket1",
  "creationTime" : "2023-01-03T10:19:00.545Z",
  "modificationTime" : "2023-01-03T10:19:00.545Z",
  "owner" : "hadoop"
}</msg>
<status status="PASS" starttime="20230103 10:20:20.205" endtime="20230103 10:20:20.206"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:20:20.208" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:20:20.207" endtime="20230103 10:20:20.208"/>
</kw>
<status status="PASS" starttime="20230103 10:20:14.049" endtime="20230103 10:20:20.209"/>
</kw>
<msg timestamp="20230103 10:20:20.209" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:20:14.049" endtime="20230103 10:20:20.210"/>
</kw>
<msg timestamp="20230103 10:20:20.210" level="INFO">${result} = {
  "volumeName" : "37187-target",
  "bucketName" : "link1",
  "sourceVolume" : "37187-source",
  "sourceBucket" : "bucket1",
  "creationTime" : "2023-01-03T10:19:00.545Z",
  "modificationTime" : "202...</msg>
<status status="PASS" starttime="20230103 10:20:14.048" endtime="20230103 10:20:20.210"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${source}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230103 10:20:20.210" endtime="20230103 10:20:20.211"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>bucket1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230103 10:20:20.211" endtime="20230103 10:20:20.212"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${target}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230103 10:20:20.212" endtime="20230103 10:20:20.212"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>link1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230103 10:20:20.212" endtime="20230103 10:20:20.213"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>modificationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230103 10:20:20.213" endtime="20230103 10:20:20.214"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230103 10:20:20.214" endtime="20230103 10:20:20.214"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>metadata</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230103 10:20:20.215" endtime="20230103 10:20:20.215"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20230103 10:20:14.046" endtime="20230103 10:20:20.216"/>
</test>
<test id="s1-s3-s3-t8" name="Source and target have separate ACLs" line="115">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230103 10:20:20.218" endtime="20230103 10:20:20.219"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl user:user1:rwxy ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:20:20.225" level="INFO">Running command 'ozone sh bucket addacl --acl user:user1:rwxy 37187-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:20:26.408" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:20:26.409" level="INFO">${output} = ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20230103 10:20:20.222" endtime="20230103 10:20:26.409"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:20:26.410" level="INFO">ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20230103 10:20:26.409" endtime="20230103 10:20:26.410"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:20:26.411" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:20:26.411" endtime="20230103 10:20:26.411"/>
</kw>
<status status="PASS" starttime="20230103 10:20:20.221" endtime="20230103 10:20:26.412"/>
</kw>
<msg timestamp="20230103 10:20:26.412" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:20:20.221" endtime="20230103 10:20:26.412"/>
</kw>
<status status="PASS" starttime="20230103 10:20:20.220" endtime="20230103 10:20:26.413"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE READ_ACL WRITE_ACL</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:20:26.423" level="INFO">Running command 'ozone sh bucket getacl 37187-target/link1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:20:32.259" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:20:32.259" level="INFO">${output} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20230103 10:20:26.418" endtime="20230103 10:20:32.259"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:20:32.261" level="INFO">READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20230103 10:20:32.260" endtime="20230103 10:20:32.261"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:20:32.262" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:20:32.261" endtime="20230103 10:20:32.262"/>
</kw>
<status status="PASS" starttime="20230103 10:20:26.416" endtime="20230103 10:20:32.262"/>
</kw>
<msg timestamp="20230103 10:20:32.262" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:20:26.416" endtime="20230103 10:20:32.263"/>
</kw>
<msg timestamp="20230103 10:20:32.263" level="INFO">${actual_acls} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20230103 10:20:26.414" endtime="20230103 10:20:32.263"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230103 10:20:32.264" endtime="20230103 10:20:32.264"/>
</kw>
<status status="PASS" starttime="20230103 10:20:26.413" endtime="20230103 10:20:32.264"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>${EMPTY}</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:20:32.272" level="INFO">Running command 'ozone sh bucket getacl 37187-source/bucket1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:20:38.239" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:20:38.239" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230103 10:20:32.269" endtime="20230103 10:20:38.240"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:20:38.241" level="INFO"/>
<status status="PASS" starttime="20230103 10:20:38.240" endtime="20230103 10:20:38.242"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:20:38.242" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:20:38.242" endtime="20230103 10:20:38.243"/>
</kw>
<status status="PASS" starttime="20230103 10:20:32.268" endtime="20230103 10:20:38.243"/>
</kw>
<msg timestamp="20230103 10:20:38.243" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:20:32.268" endtime="20230103 10:20:38.244"/>
</kw>
<msg timestamp="20230103 10:20:38.245" level="INFO">${actual_acls} = </msg>
<status status="PASS" starttime="20230103 10:20:32.267" endtime="20230103 10:20:38.245"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230103 10:20:38.245" endtime="20230103 10:20:38.246"/>
</kw>
<status status="PASS" starttime="20230103 10:20:32.265" endtime="20230103 10:20:38.246"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl group:group2:r ${source}/bucket1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:20:38.252" level="INFO">Running command 'ozone sh bucket addacl --acl group:group2:r 37187-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:20:43.987" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:20:43.987" level="INFO">${output} = ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20230103 10:20:38.248" endtime="20230103 10:20:43.987"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:20:43.989" level="INFO">ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20230103 10:20:43.988" endtime="20230103 10:20:43.989"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:20:43.990" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:20:43.989" endtime="20230103 10:20:43.990"/>
</kw>
<status status="PASS" starttime="20230103 10:20:38.247" endtime="20230103 10:20:43.990"/>
</kw>
<msg timestamp="20230103 10:20:43.991" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:20:38.247" endtime="20230103 10:20:43.991"/>
</kw>
<status status="PASS" starttime="20230103 10:20:38.246" endtime="20230103 10:20:43.991"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>${EMPTY}</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:20:43.999" level="INFO">Running command 'ozone sh bucket getacl 37187-target/link1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:20:49.658" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:20:49.658" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230103 10:20:43.996" endtime="20230103 10:20:49.658"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:20:49.660" level="INFO"/>
<status status="PASS" starttime="20230103 10:20:49.658" endtime="20230103 10:20:49.660"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:20:49.662" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:20:49.661" endtime="20230103 10:20:49.662"/>
</kw>
<status status="PASS" starttime="20230103 10:20:43.995" endtime="20230103 10:20:49.662"/>
</kw>
<msg timestamp="20230103 10:20:49.663" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:20:43.995" endtime="20230103 10:20:49.663"/>
</kw>
<msg timestamp="20230103 10:20:49.664" level="INFO">${actual_acls} = </msg>
<status status="PASS" starttime="20230103 10:20:43.994" endtime="20230103 10:20:49.664"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230103 10:20:49.665" endtime="20230103 10:20:49.666"/>
</kw>
<status status="PASS" starttime="20230103 10:20:43.992" endtime="20230103 10:20:49.666"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>READ</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:20:49.674" level="INFO">Running command 'ozone sh bucket getacl 37187-source/bucket1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:20:56.017" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:20:56.017" level="INFO">${output} = READ</msg>
<status status="PASS" starttime="20230103 10:20:49.670" endtime="20230103 10:20:56.017"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:20:56.018" level="INFO">READ</msg>
<status status="PASS" starttime="20230103 10:20:56.017" endtime="20230103 10:20:56.018"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:20:56.019" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:20:56.018" endtime="20230103 10:20:56.019"/>
</kw>
<status status="PASS" starttime="20230103 10:20:49.669" endtime="20230103 10:20:56.020"/>
</kw>
<msg timestamp="20230103 10:20:56.020" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:20:49.669" endtime="20230103 10:20:56.020"/>
</kw>
<msg timestamp="20230103 10:20:56.021" level="INFO">${actual_acls} = READ</msg>
<status status="PASS" starttime="20230103 10:20:49.668" endtime="20230103 10:20:56.021"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230103 10:20:56.021" endtime="20230103 10:20:56.022"/>
</kw>
<status status="PASS" starttime="20230103 10:20:49.666" endtime="20230103 10:20:56.022"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20230103 10:20:20.217" endtime="20230103 10:20:56.022"/>
</test>
<test id="s1-s3-s3-t9" name="Buckets and links share namespace" line="124">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230103 10:20:56.025" endtime="20230103 10:20:56.026"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/bucket2 ${target}/link2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:20:56.034" level="INFO">Running command 'ozone sh bucket link 37187-source/bucket2 37187-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:21:01.698" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:21:01.698" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230103 10:20:56.028" endtime="20230103 10:21:01.698"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:21:01.699" level="INFO"/>
<status status="PASS" starttime="20230103 10:21:01.698" endtime="20230103 10:21:01.700"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:21:01.700" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:21:01.700" endtime="20230103 10:21:01.701"/>
</kw>
<status status="PASS" starttime="20230103 10:20:56.027" endtime="20230103 10:21:01.701"/>
</kw>
<msg timestamp="20230103 10:21:01.701" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:20:56.027" endtime="20230103 10:21:01.702"/>
</kw>
<status status="PASS" starttime="20230103 10:20:56.026" endtime="20230103 10:21:01.702"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh bucket create ${target}/link2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:21:01.706" level="INFO">Running command 'ozone sh bucket create 37187-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:21:07.141" level="INFO">${rc} = 255</msg>
<msg timestamp="20230103 10:21:07.141" level="INFO">${output} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20230103 10:21:01.703" endtime="20230103 10:21:07.141"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:21:07.144" level="INFO">BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20230103 10:21:07.142" endtime="20230103 10:21:07.144"/>
</kw>
<msg timestamp="20230103 10:21:07.144" level="INFO">${result} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20230103 10:21:01.703" endtime="20230103 10:21:07.144"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230103 10:21:07.145" endtime="20230103 10:21:07.145"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${target}/bucket3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:21:07.152" level="INFO">Running command 'ozone sh bucket create 37187-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:21:12.772" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:21:12.772" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230103 10:21:07.147" endtime="20230103 10:21:12.772"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:21:12.774" level="INFO"/>
<status status="PASS" starttime="20230103 10:21:12.773" endtime="20230103 10:21:12.774"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:21:12.775" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:21:12.774" endtime="20230103 10:21:12.775"/>
</kw>
<status status="PASS" starttime="20230103 10:21:07.146" endtime="20230103 10:21:12.775"/>
</kw>
<msg timestamp="20230103 10:21:12.775" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:21:07.146" endtime="20230103 10:21:12.776"/>
</kw>
<status status="PASS" starttime="20230103 10:21:07.145" endtime="20230103 10:21:12.777"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/bucket3</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:21:12.789" level="INFO">Running command 'ozone sh bucket link 37187-source/bucket1 37187-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:21:18.405" level="INFO">${rc} = 255</msg>
<msg timestamp="20230103 10:21:18.405" level="INFO">${output} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20230103 10:21:12.778" endtime="20230103 10:21:18.405"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:21:18.407" level="INFO">BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20230103 10:21:18.406" endtime="20230103 10:21:18.407"/>
</kw>
<msg timestamp="20230103 10:21:18.408" level="INFO">${result} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20230103 10:21:12.777" endtime="20230103 10:21:18.408"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230103 10:21:18.408" endtime="20230103 10:21:18.408"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20230103 10:20:56.024" endtime="20230103 10:21:18.409"/>
</test>
<test id="s1-s3-s3-t10" name="Can follow link with read access" line="133">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230103 10:21:18.411" endtime="20230103 10:21:18.412"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Can follow link with read access</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230103 10:21:18.412" endtime="20230103 10:21:18.412"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20230103 10:21:18.410" endtime="20230103 10:21:18.413"/>
</test>
<test id="s1-s3-s3-t11" name="Cannot follow link without read access" line="136">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230103 10:21:18.415" endtime="20230103 10:21:18.417"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Cannot follow link without read access</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230103 10:21:18.417" endtime="20230103 10:21:18.418"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20230103 10:21:18.414" endtime="20230103 10:21:18.418"/>
</test>
<test id="s1-s3-s3-t12" name="ACL verified on source bucket" line="139">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230103 10:21:18.420" endtime="20230103 10:21:18.421"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>ACL verified on source bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230103 10:21:18.421" endtime="20230103 10:21:18.421"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20230103 10:21:18.419" endtime="20230103 10:21:18.422"/>
</test>
<test id="s1-s3-s3-t13" name="Loop in link chain is detected" line="142">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230103 10:21:18.423" endtime="20230103 10:21:18.424"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${target}/loop1 ${target}/loop2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:21:18.428" level="INFO">Running command 'ozone sh bucket link 37187-target/loop1 37187-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:21:23.735" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:21:23.735" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230103 10:21:18.425" endtime="20230103 10:21:23.735"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:21:23.737" level="INFO"/>
<status status="PASS" starttime="20230103 10:21:23.736" endtime="20230103 10:21:23.737"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:21:23.738" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:21:23.738" endtime="20230103 10:21:23.738"/>
</kw>
<status status="PASS" starttime="20230103 10:21:18.425" endtime="20230103 10:21:23.739"/>
</kw>
<msg timestamp="20230103 10:21:23.739" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:21:18.425" endtime="20230103 10:21:23.739"/>
</kw>
<status status="PASS" starttime="20230103 10:21:18.424" endtime="20230103 10:21:23.740"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${target}/loop2 ${target}/loop3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:21:23.745" level="INFO">Running command 'ozone sh bucket link 37187-target/loop2 37187-target/loop3 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:21:29.401" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:21:29.401" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230103 10:21:23.741" endtime="20230103 10:21:29.401"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:21:29.404" level="INFO"/>
<status status="PASS" starttime="20230103 10:21:29.402" endtime="20230103 10:21:29.404"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:21:29.405" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:21:29.404" endtime="20230103 10:21:29.405"/>
</kw>
<status status="PASS" starttime="20230103 10:21:23.741" endtime="20230103 10:21:29.406"/>
</kw>
<msg timestamp="20230103 10:21:29.406" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:21:23.740" endtime="20230103 10:21:29.406"/>
</kw>
<status status="PASS" starttime="20230103 10:21:23.740" endtime="20230103 10:21:29.407"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${target}/loop3 ${target}/loop1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:21:29.414" level="INFO">Running command 'ozone sh bucket link 37187-target/loop3 37187-target/loop1 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:21:35.245" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:21:35.245" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230103 10:21:29.410" endtime="20230103 10:21:35.245"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:21:35.247" level="INFO"/>
<status status="PASS" starttime="20230103 10:21:35.246" endtime="20230103 10:21:35.247"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:21:35.248" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:21:35.247" endtime="20230103 10:21:35.248"/>
</kw>
<status status="PASS" starttime="20230103 10:21:29.409" endtime="20230103 10:21:35.249"/>
</kw>
<msg timestamp="20230103 10:21:35.249" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:21:29.408" endtime="20230103 10:21:35.249"/>
</kw>
<status status="PASS" starttime="20230103 10:21:29.407" endtime="20230103 10:21:35.249"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/loop2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:21:35.255" level="INFO">Running command 'ozone sh key list 37187-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:21:40.965" level="INFO">${rc} = 255</msg>
<msg timestamp="20230103 10:21:40.965" level="INFO">${output} = DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links. Bucket name: loop2, Volume name: 37187-target</msg>
<status status="PASS" starttime="20230103 10:21:35.251" endtime="20230103 10:21:40.965"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:21:40.967" level="INFO">DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links. Bucket name: loop2, Volume name: 37187-target</msg>
<status status="PASS" starttime="20230103 10:21:40.966" endtime="20230103 10:21:40.967"/>
</kw>
<msg timestamp="20230103 10:21:40.968" level="INFO">${result} = DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links. Bucket name: loop2, Volume name: 37187-target</msg>
<status status="PASS" starttime="20230103 10:21:35.250" endtime="20230103 10:21:40.968"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>DETECTED_LOOP</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230103 10:21:40.968" endtime="20230103 10:21:40.969"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20230103 10:21:18.422" endtime="20230103 10:21:40.969"/>
</test>
<test id="s1-s3-s3-t14" name="Multiple links to same bucket are allowed" line="149">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230103 10:21:40.973" endtime="20230103 10:21:40.975"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:21:40.981" level="INFO">Running command 'ozone sh bucket link 37187-source/bucket1 37187-target/link3 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:21:46.380" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:21:46.380" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230103 10:21:40.978" endtime="20230103 10:21:46.380"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:21:46.382" level="INFO"/>
<status status="PASS" starttime="20230103 10:21:46.381" endtime="20230103 10:21:46.382"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:21:46.382" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:21:46.382" endtime="20230103 10:21:46.383"/>
</kw>
<status status="PASS" starttime="20230103 10:21:40.977" endtime="20230103 10:21:46.383"/>
</kw>
<msg timestamp="20230103 10:21:46.383" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:21:40.976" endtime="20230103 10:21:46.384"/>
</kw>
<status status="PASS" starttime="20230103 10:21:40.975" endtime="20230103 10:21:46.384"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${target}/link3/key3 /etc/group</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:21:46.390" level="INFO">Running command 'ozone sh key put 37187-target/link3/key3 /etc/group 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:21:56.158" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:21:56.158" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230103 10:21:46.386" endtime="20230103 10:21:56.158"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:21:56.160" level="INFO"/>
<status status="PASS" starttime="20230103 10:21:56.159" endtime="20230103 10:21:56.160"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:21:56.161" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:21:56.160" endtime="20230103 10:21:56.161"/>
</kw>
<status status="PASS" starttime="20230103 10:21:46.386" endtime="20230103 10:21:56.162"/>
</kw>
<msg timestamp="20230103 10:21:56.162" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:21:46.385" endtime="20230103 10:21:56.162"/>
</kw>
<status status="PASS" starttime="20230103 10:21:46.384" endtime="20230103 10:21:56.162"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${target}/link1/key3</arg>
<arg>/etc/group</arg>
<kw name="Compare Key With Local File" library="shell">
<var>${matches}</var>
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230103 10:21:56.165" level="INFO">${postfix} = 00135</msg>
<status status="PASS" starttime="20230103 10:21:56.164" endtime="20230103 10:21:56.165"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${tmpfile}</var>
<arg>/tmp/tempkey-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230103 10:21:56.166" level="INFO">${tmpfile} = /tmp/tempkey-00135</msg>
<status status="PASS" starttime="20230103 10:21:56.165" endtime="20230103 10:21:56.166"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${key} ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:21:56.172" level="INFO">Running command 'ozone sh key get 37187-target/link1/key3 /tmp/tempkey-00135 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:22:05.372" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:22:05.372" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230103 10:21:56.169" endtime="20230103 10:22:05.372"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:22:05.374" level="INFO"/>
<status status="PASS" starttime="20230103 10:22:05.373" endtime="20230103 10:22:05.374"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:22:05.375" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:22:05.374" endtime="20230103 10:22:05.375"/>
</kw>
<status status="PASS" starttime="20230103 10:21:56.167" endtime="20230103 10:22:05.375"/>
</kw>
<msg timestamp="20230103 10:22:05.375" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:21:56.167" endtime="20230103 10:22:05.376"/>
</kw>
<status status="PASS" starttime="20230103 10:21:56.166" endtime="20230103 10:22:05.376"/>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<var>${rc}</var>
<arg>diff -q ${file} ${tmpfile}</arg>
<doc>Runs the given command in the system and returns the return code.</doc>
<msg timestamp="20230103 10:22:05.380" level="INFO">Running command 'diff -q /etc/group /tmp/tempkey-00135 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:22:05.383" level="INFO">${rc} = 0</msg>
<status status="PASS" starttime="20230103 10:22:05.376" endtime="20230103 10:22:05.383"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:22:05.390" level="INFO">Running command 'rm -f /tmp/tempkey-00135 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:22:05.396" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:22:05.396" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230103 10:22:05.386" endtime="20230103 10:22:05.396"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:22:05.398" level="INFO"/>
<status status="PASS" starttime="20230103 10:22:05.397" endtime="20230103 10:22:05.398"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:22:05.400" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:22:05.399" endtime="20230103 10:22:05.401"/>
</kw>
<status status="PASS" starttime="20230103 10:22:05.386" endtime="20230103 10:22:05.401"/>
</kw>
<msg timestamp="20230103 10:22:05.401" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:22:05.385" endtime="20230103 10:22:05.402"/>
</kw>
<status status="PASS" starttime="20230103 10:22:05.384" endtime="20230103 10:22:05.403"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230103 10:22:05.404" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20230103 10:22:05.403" endtime="20230103 10:22:05.404"/>
</kw>
<msg timestamp="20230103 10:22:05.404" level="INFO">${matches} = True</msg>
<status status="PASS" starttime="20230103 10:21:56.163" endtime="20230103 10:22:05.404"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${matches}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230103 10:22:05.404" endtime="20230103 10:22:05.405"/>
</kw>
<status status="PASS" starttime="20230103 10:21:56.163" endtime="20230103 10:22:05.405"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20230103 10:21:40.971" endtime="20230103 10:22:05.406"/>
</test>
<test id="s1-s3-s3-t15" name="Source bucket not affected by deleting link" line="154">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230103 10:22:05.408" endtime="20230103 10:22:05.409"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:22:05.415" level="INFO">Running command 'ozone sh bucket delete 37187-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:22:10.849" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:22:10.849" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230103 10:22:05.411" endtime="20230103 10:22:10.849"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:22:10.851" level="INFO"/>
<status status="PASS" starttime="20230103 10:22:10.850" endtime="20230103 10:22:10.851"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:22:10.852" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:22:10.852" endtime="20230103 10:22:10.853"/>
</kw>
<status status="PASS" starttime="20230103 10:22:05.410" endtime="20230103 10:22:10.853"/>
</kw>
<msg timestamp="20230103 10:22:10.853" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:22:05.409" endtime="20230103 10:22:10.854"/>
</kw>
<status status="PASS" starttime="20230103 10:22:05.409" endtime="20230103 10:22:10.854"/>
</kw>
<kw name="Execute" library="os">
<var>${bucket_list}</var>
<arg>ozone sh bucket list ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:22:10.859" level="INFO">Running command 'ozone sh bucket list 37187-target 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:22:16.796" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:22:16.797" level="INFO">${output} = [ {
  "metadata" : { },
  "volumeName" : "37187-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2023-01-0...</msg>
<status status="PASS" starttime="20230103 10:22:10.856" endtime="20230103 10:22:16.797"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:22:16.798" level="INFO">[ {
  "metadata" : { },
  "volumeName" : "37187-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2023-01-03T10:21:12.358Z",
  "modificationTime" : "2023-01-03T10:21:12.358Z",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY",
  "owner" : "hadoop",
  "link" : false
}, {
  "volumeName" : "37187-target",
  "bucketName" : "dangling-link",
  "sourceVolume" : "37187-source",
  "sourceBucket" : "no-such-bucket",
  "creationTime" : "2023-01-03T10:18:49.236Z",
  "modificationTime" : "2023-01-03T10:18:49.236Z",
  "owner" : "hadoop"
}, {
  "volumeName" : "37187-target",
  "bucketName" : "link2",
  "sourceVolume" : "37187-source",
  "sourceBucket" : "bucket2",
  "creationTime" : "2023-01-03T10:21:01.340Z",
  "modificationTime" : "2023-01-03T10:21:01.340Z",
  "owner" : "hadoop"
}, {
  "volumeName" : "37187-target",
  "bucketName" : "link3",
  "sourceVolume" : "37187-source",
  "sourceBucket" : "bucket1",
  "creationTime" : "2023-01-03T10:21:46.127Z",
  "modificationTime" : "2023-01-03T10:21:46.127Z",
  "owner" : "hadoop"
}, {
  "volumeName" : "37187-target",
  "bucketName" : "loop1",
  "sourceVolume" : "37187-target",
  "sourceBucket" : "loop3",
  "creationTime" : "2023-01-03T10:21:34.901Z",
  "modificationTime" : "2023-01-03T10:21:34.901Z",
  "owner" : "hadoop"
}, {
  "volumeName" : "37187-target",
  "bucketName" : "loop2",
  "sourceVolume" : "37187-target",
  "sourceBucket" : "loop1",
  "creationTime" : "2023-01-03T10:21:23.639Z",
  "modificationTime" : "2023-01-03T10:21:23.639Z",
  "owner" : "hadoop"
}, {
  "volumeName" : "37187-target",
  "bucketName" : "loop3",
  "sourceVolume" : "37187-target",
  "sourceBucket" : "loop2",
  "creationTime" : "2023-01-03T10:21:29.303Z",
  "modificationTime" : "2023-01-03T10:21:29.303Z",
  "owner" : "hadoop"
} ]</msg>
<status status="PASS" starttime="20230103 10:22:16.797" endtime="20230103 10:22:16.798"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:22:16.799" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:22:16.798" endtime="20230103 10:22:16.799"/>
</kw>
<status status="PASS" starttime="20230103 10:22:10.855" endtime="20230103 10:22:16.799"/>
</kw>
<msg timestamp="20230103 10:22:16.800" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:22:10.855" endtime="20230103 10:22:16.800"/>
</kw>
<msg timestamp="20230103 10:22:16.800" level="INFO">${bucket_list} = [ {
  "metadata" : { },
  "volumeName" : "37187-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2023-01-0...</msg>
<status status="PASS" starttime="20230103 10:22:10.854" endtime="20230103 10:22:16.800"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${bucket_list}</arg>
<arg>link1</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230103 10:22:16.801" endtime="20230103 10:22:16.801"/>
</kw>
<kw name="Execute" library="os">
<var>${source_list}</var>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:22:16.806" level="INFO">Running command 'ozone sh key list 37187-source/bucket1 | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:22:22.832" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:22:22.832" level="INFO">${output} = key1
key3</msg>
<status status="PASS" starttime="20230103 10:22:16.803" endtime="20230103 10:22:22.832"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:22:22.834" level="INFO">key1
key3</msg>
<status status="PASS" starttime="20230103 10:22:22.833" endtime="20230103 10:22:22.834"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:22:22.835" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:22:22.834" endtime="20230103 10:22:22.835"/>
</kw>
<status status="PASS" starttime="20230103 10:22:16.802" endtime="20230103 10:22:22.836"/>
</kw>
<msg timestamp="20230103 10:22:22.836" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:22:16.802" endtime="20230103 10:22:22.836"/>
</kw>
<msg timestamp="20230103 10:22:22.837" level="INFO">${source_list} = key1
key3</msg>
<status status="PASS" starttime="20230103 10:22:16.801" endtime="20230103 10:22:22.837"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230103 10:22:22.837" endtime="20230103 10:22:22.838"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20230103 10:22:05.407" endtime="20230103 10:22:22.838"/>
</test>
<test id="s1-s3-s3-t16" name="Setting bucket property on link not allowed" line="161">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230103 10:22:22.841" endtime="20230103 10:22:22.842"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:22:22.848" level="INFO">Running command 'ozone sh bucket link 37187-source/bucket1 37187-target/link4 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:22:28.752" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:22:28.752" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230103 10:22:22.845" endtime="20230103 10:22:28.752"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:22:28.754" level="INFO"/>
<status status="PASS" starttime="20230103 10:22:28.753" endtime="20230103 10:22:28.754"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:22:28.755" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:22:28.754" endtime="20230103 10:22:28.755"/>
</kw>
<status status="PASS" starttime="20230103 10:22:22.844" endtime="20230103 10:22:28.756"/>
</kw>
<msg timestamp="20230103 10:22:28.756" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:22:22.843" endtime="20230103 10:22:28.756"/>
</kw>
<status status="PASS" starttime="20230103 10:22:22.842" endtime="20230103 10:22:28.757"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh bucket setquota ${target}/link4 --quota 1GB</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:22:28.761" level="INFO">Running command 'ozone sh bucket setquota 37187-target/link4 --quota 1GB 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:22:34.467" level="INFO">${rc} = 255</msg>
<msg timestamp="20230103 10:22:34.467" level="INFO">${output} = NOT_SUPPORTED_OPERATION Cannot set property on link</msg>
<status status="PASS" starttime="20230103 10:22:28.758" endtime="20230103 10:22:34.467"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:22:34.469" level="INFO">NOT_SUPPORTED_OPERATION Cannot set property on link</msg>
<status status="PASS" starttime="20230103 10:22:34.468" endtime="20230103 10:22:34.469"/>
</kw>
<msg timestamp="20230103 10:22:34.469" level="INFO">${result} = NOT_SUPPORTED_OPERATION Cannot set property on link</msg>
<status status="PASS" starttime="20230103 10:22:28.757" endtime="20230103 10:22:34.469"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOT_SUPPORTED_OPERATION</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230103 10:22:34.469" endtime="20230103 10:22:34.470"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${target}/link4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:22:34.475" level="INFO">Running command 'ozone sh bucket info 37187-target/link4 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:22:40.794" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:22:40.794" level="INFO">${output} = {
  "volumeName" : "37187-target",
  "bucketName" : "link4",
  "sourceVolume" : "37187-source",
  "sourceBucket" : "bucket1",
  "creationTime" : "2023-01-03T10:22:28.329Z",
  "modificationTime" : "202...</msg>
<status status="PASS" starttime="20230103 10:22:34.472" endtime="20230103 10:22:40.795"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:22:40.796" level="INFO">{
  "volumeName" : "37187-target",
  "bucketName" : "link4",
  "sourceVolume" : "37187-source",
  "sourceBucket" : "bucket1",
  "creationTime" : "2023-01-03T10:22:28.329Z",
  "modificationTime" : "2023-01-03T10:22:28.329Z",
  "owner" : "hadoop"
}</msg>
<status status="PASS" starttime="20230103 10:22:40.795" endtime="20230103 10:22:40.796"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:22:40.797" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:22:40.797" endtime="20230103 10:22:40.797"/>
</kw>
<status status="PASS" starttime="20230103 10:22:34.471" endtime="20230103 10:22:40.798"/>
</kw>
<msg timestamp="20230103 10:22:40.798" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:22:34.471" endtime="20230103 10:22:40.798"/>
</kw>
<msg timestamp="20230103 10:22:40.799" level="INFO">${result} = {
  "volumeName" : "37187-target",
  "bucketName" : "link4",
  "sourceVolume" : "37187-source",
  "sourceBucket" : "bucket1",
  "creationTime" : "2023-01-03T10:22:28.329Z",
  "modificationTime" : "202...</msg>
<status status="PASS" starttime="20230103 10:22:34.470" endtime="20230103 10:22:40.799"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>sourceBucket</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230103 10:22:40.799" endtime="20230103 10:22:40.799"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20230103 10:22:22.840" endtime="20230103 10:22:40.800"/>
</test>
<doc>Test bucket links via Ozone CLI</doc>
<status status="PASS" starttime="20230103 10:18:30.862" endtime="20230103 10:22:40.802"/>
</suite>
<suite id="s1-s3-s4" name="Ozone-Shell-Single" source="/opt/hadoop/smoketest/basic/ozone-shell-single.robot">
<kw name="Generate prefix" library="ozone-shell-lib" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230103 10:22:40.840" level="INFO">${random} = 66665</msg>
<status status="PASS" starttime="20230103 10:22:40.840" endtime="20230103 10:22:40.840"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${prefix}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230103 10:22:40.841" level="INFO">${prefix} = 66665</msg>
<status status="PASS" starttime="20230103 10:22:40.841" endtime="20230103 10:22:40.841"/>
</kw>
<status status="PASS" starttime="20230103 10:22:40.839" endtime="20230103 10:22:40.842"/>
</kw>
<test id="s1-s3-s4-t1" name="Test ozone shell" line="26">
<kw name="Test ozone shell" library="ozone-shell-lib">
<arg>${EMPTY}</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-without-scheme</arg>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:22:40.849" level="INFO">Running command 'ozone sh volume info /66665-without-scheme 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:22:46.340" level="INFO">${rc} = 255</msg>
<msg timestamp="20230103 10:22:46.340" level="INFO">${output} = VOLUME_NOT_FOUND Volume 66665-without-scheme is not found</msg>
<status status="PASS" starttime="20230103 10:22:40.846" endtime="20230103 10:22:46.340"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:22:46.342" level="INFO">VOLUME_NOT_FOUND Volume 66665-without-scheme is not found</msg>
<status status="PASS" starttime="20230103 10:22:46.341" endtime="20230103 10:22:46.342"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:22:46.343" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:22:46.343" endtime="20230103 10:22:46.344"/>
</kw>
<msg timestamp="20230103 10:22:46.344" level="INFO">${result} = VOLUME_NOT_FOUND Volume 66665-without-scheme is not found</msg>
<status status="PASS" starttime="20230103 10:22:40.845" endtime="20230103 10:22:46.344"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230103 10:22:46.345" endtime="20230103 10:22:46.346"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:22:46.353" level="INFO">Running command 'ozone sh volume create /66665-without-scheme --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:22:51.878" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:22:51.878" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230103 10:22:46.350" endtime="20230103 10:22:51.878"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:22:51.880" level="INFO"/>
<status status="PASS" starttime="20230103 10:22:51.879" endtime="20230103 10:22:51.880"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:22:51.881" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:22:51.880" endtime="20230103 10:22:51.881"/>
</kw>
<status status="PASS" starttime="20230103 10:22:46.348" endtime="20230103 10:22:51.881"/>
</kw>
<msg timestamp="20230103 10:22:51.881" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:22:46.347" endtime="20230103 10:22:51.882"/>
</kw>
<msg timestamp="20230103 10:22:51.882" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230103 10:22:46.346" endtime="20230103 10:22:51.882"/>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<arg>${result}</arg>
<doc>Verifies that the given item is empty.</doc>
<msg timestamp="20230103 10:22:51.883" level="INFO">Length is 0</msg>
<status status="PASS" starttime="20230103 10:22:51.883" endtime="20230103 10:22:51.883"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '.[] | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:22:51.889" level="INFO">Running command 'ozone sh volume list / | jq -r '.[] | select(.name=="66665-without-scheme")' 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:22:58.101" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:22:58.102" level="INFO">${output} = {
  "metadata": {},
  "name": "66665-without-scheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2...</msg>
<status status="PASS" starttime="20230103 10:22:51.887" endtime="20230103 10:22:58.102"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:22:58.103" level="INFO">{
  "metadata": {},
  "name": "66665-without-scheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2023-01-03T10:22:51.800Z",
  "modificationTime": "2023-01-03T10:22:51.800Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "refCount": 0
}</msg>
<status status="PASS" starttime="20230103 10:22:58.102" endtime="20230103 10:22:58.104"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:22:58.105" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:22:58.104" endtime="20230103 10:22:58.106"/>
</kw>
<status status="PASS" starttime="20230103 10:22:51.886" endtime="20230103 10:22:58.106"/>
</kw>
<msg timestamp="20230103 10:22:58.106" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:22:51.885" endtime="20230103 10:22:58.107"/>
</kw>
<msg timestamp="20230103 10:22:58.107" level="INFO">${result} = {
  "metadata": {},
  "name": "66665-without-scheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2...</msg>
<status status="PASS" starttime="20230103 10:22:51.883" endtime="20230103 10:22:58.107"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230103 10:22:58.107" endtime="20230103 10:22:58.108"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list | jq -r '.[] | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:22:58.113" level="INFO">Running command 'ozone sh volume list | jq -r '.[] | select(.name=="66665-without-scheme")' 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:23:04.412" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:23:04.412" level="INFO">${output} = {
  "metadata": {},
  "name": "66665-without-scheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2...</msg>
<status status="PASS" starttime="20230103 10:22:58.110" endtime="20230103 10:23:04.412"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:23:04.414" level="INFO">{
  "metadata": {},
  "name": "66665-without-scheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2023-01-03T10:22:51.800Z",
  "modificationTime": "2023-01-03T10:22:51.800Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "refCount": 0
}</msg>
<status status="PASS" starttime="20230103 10:23:04.413" endtime="20230103 10:23:04.414"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:23:04.415" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:23:04.414" endtime="20230103 10:23:04.415"/>
</kw>
<status status="PASS" starttime="20230103 10:22:58.109" endtime="20230103 10:23:04.415"/>
</kw>
<msg timestamp="20230103 10:23:04.416" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:22:58.109" endtime="20230103 10:23:04.417"/>
</kw>
<msg timestamp="20230103 10:23:04.417" level="INFO">${result} = {
  "metadata": {},
  "name": "66665-without-scheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2...</msg>
<status status="PASS" starttime="20230103 10:22:58.108" endtime="20230103 10:23:04.417"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230103 10:23:04.417" endtime="20230103 10:23:04.418"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:23:04.424" level="INFO">Running command 'ozone sh volume setquota /66665-without-scheme --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:23:10.386" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:23:10.386" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230103 10:23:04.420" endtime="20230103 10:23:10.386"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:23:10.388" level="INFO"/>
<status status="PASS" starttime="20230103 10:23:10.386" endtime="20230103 10:23:10.388"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:23:10.389" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:23:10.388" endtime="20230103 10:23:10.389"/>
</kw>
<status status="PASS" starttime="20230103 10:23:04.420" endtime="20230103 10:23:10.389"/>
</kw>
<msg timestamp="20230103 10:23:10.389" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:23:04.419" endtime="20230103 10:23:10.390"/>
</kw>
<status status="PASS" starttime="20230103 10:23:04.418" endtime="20230103 10:23:10.391"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:23:10.396" level="INFO">Running command 'ozone sh volume info /66665-without-scheme | jq -r '. | select(.name=="66665-without-scheme") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:23:16.592" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:23:16.592" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20230103 10:23:10.393" endtime="20230103 10:23:16.592"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:23:16.594" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20230103 10:23:16.593" endtime="20230103 10:23:16.594"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:23:16.595" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:23:16.594" endtime="20230103 10:23:16.595"/>
</kw>
<status status="PASS" starttime="20230103 10:23:10.393" endtime="20230103 10:23:16.595"/>
</kw>
<msg timestamp="20230103 10:23:16.596" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:23:10.392" endtime="20230103 10:23:16.596"/>
</kw>
<msg timestamp="20230103 10:23:16.596" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20230103 10:23:10.391" endtime="20230103 10:23:16.596"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230103 10:23:16.597" endtime="20230103 10:23:16.597"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:23:16.603" level="INFO">Running command 'ozone sh bucket create /66665-without-scheme/bb1 --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:23:22.367" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:23:22.367" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230103 10:23:16.600" endtime="20230103 10:23:22.368"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:23:22.370" level="INFO"/>
<status status="PASS" starttime="20230103 10:23:22.368" endtime="20230103 10:23:22.370"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:23:22.371" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:23:22.370" endtime="20230103 10:23:22.371"/>
</kw>
<status status="PASS" starttime="20230103 10:23:16.599" endtime="20230103 10:23:22.372"/>
</kw>
<msg timestamp="20230103 10:23:22.372" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:23:16.598" endtime="20230103 10:23:22.373"/>
</kw>
<msg timestamp="20230103 10:23:22.373" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230103 10:23:16.598" endtime="20230103 10:23:22.373"/>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<arg>${result}</arg>
<doc>Verifies that the given item is empty.</doc>
<msg timestamp="20230103 10:23:22.374" level="INFO">Length is 0</msg>
<status status="PASS" starttime="20230103 10:23:22.373" endtime="20230103 10:23:22.374"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:23:22.382" level="INFO">Running command 'ozone sh bucket info /66665-without-scheme/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:23:28.450" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:23:28.450" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20230103 10:23:22.377" endtime="20230103 10:23:28.450"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:23:28.452" level="INFO">DISK</msg>
<status status="PASS" starttime="20230103 10:23:28.451" endtime="20230103 10:23:28.452"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:23:28.453" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:23:28.452" endtime="20230103 10:23:28.454"/>
</kw>
<status status="PASS" starttime="20230103 10:23:22.377" endtime="20230103 10:23:28.454"/>
</kw>
<msg timestamp="20230103 10:23:28.454" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:23:22.376" endtime="20230103 10:23:28.455"/>
</kw>
<msg timestamp="20230103 10:23:28.455" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20230103 10:23:22.374" endtime="20230103 10:23:28.455"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>DISK</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230103 10:23:28.456" endtime="20230103 10:23:28.457"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:23:28.463" level="INFO">Running command 'ozone sh bucket info /66665-without-scheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:23:34.582" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:23:34.582" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20230103 10:23:28.460" endtime="20230103 10:23:34.582"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:23:34.584" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20230103 10:23:34.583" endtime="20230103 10:23:34.584"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:23:34.585" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:23:34.584" endtime="20230103 10:23:34.585"/>
</kw>
<status status="PASS" starttime="20230103 10:23:28.459" endtime="20230103 10:23:34.586"/>
</kw>
<msg timestamp="20230103 10:23:34.586" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:23:28.458" endtime="20230103 10:23:34.586"/>
</kw>
<msg timestamp="20230103 10:23:34.587" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20230103 10:23:28.457" endtime="20230103 10:23:34.587"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230103 10:23:34.587" endtime="20230103 10:23:34.588"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:23:34.593" level="INFO">Running command 'ozone sh bucket info /66665-without-scheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:23:40.756" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:23:40.757" level="INFO">${output} = 100</msg>
<status status="PASS" starttime="20230103 10:23:34.590" endtime="20230103 10:23:40.757"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:23:40.758" level="INFO">100</msg>
<status status="PASS" starttime="20230103 10:23:40.757" endtime="20230103 10:23:40.759"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:23:40.760" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:23:40.759" endtime="20230103 10:23:40.760"/>
</kw>
<status status="PASS" starttime="20230103 10:23:34.589" endtime="20230103 10:23:40.760"/>
</kw>
<msg timestamp="20230103 10:23:40.760" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:23:34.589" endtime="20230103 10:23:40.761"/>
</kw>
<msg timestamp="20230103 10:23:40.762" level="INFO">${result} = 100</msg>
<status status="PASS" starttime="20230103 10:23:34.588" endtime="20230103 10:23:40.762"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>100</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230103 10:23:40.762" endtime="20230103 10:23:40.763"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:23:40.768" level="INFO">Running command 'ozone sh bucket setquota /66665-without-scheme/bb1 --space-quota 1TB --namespace-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:23:45.870" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:23:45.870" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230103 10:23:40.765" endtime="20230103 10:23:45.870"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:23:45.872" level="INFO"/>
<status status="PASS" starttime="20230103 10:23:45.871" endtime="20230103 10:23:45.873"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:23:45.873" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:23:45.873" endtime="20230103 10:23:45.874"/>
</kw>
<status status="PASS" starttime="20230103 10:23:40.764" endtime="20230103 10:23:45.874"/>
</kw>
<msg timestamp="20230103 10:23:45.874" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:23:40.764" endtime="20230103 10:23:45.875"/>
</kw>
<status status="PASS" starttime="20230103 10:23:40.763" endtime="20230103 10:23:45.875"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:23:45.881" level="INFO">Running command 'ozone sh bucket info /66665-without-scheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:23:52.046" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:23:52.047" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" starttime="20230103 10:23:45.878" endtime="20230103 10:23:52.047"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:23:52.051" level="INFO">1099511627776</msg>
<status status="PASS" starttime="20230103 10:23:52.047" endtime="20230103 10:23:52.051"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:23:52.052" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:23:52.051" endtime="20230103 10:23:52.052"/>
</kw>
<status status="PASS" starttime="20230103 10:23:45.877" endtime="20230103 10:23:52.053"/>
</kw>
<msg timestamp="20230103 10:23:52.053" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:23:45.877" endtime="20230103 10:23:52.054"/>
</kw>
<msg timestamp="20230103 10:23:52.054" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" starttime="20230103 10:23:45.875" endtime="20230103 10:23:52.054"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1099511627776</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230103 10:23:52.054" endtime="20230103 10:23:52.055"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:23:52.062" level="INFO">Running command 'ozone sh bucket info /66665-without-scheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:23:57.604" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:23:57.604" level="INFO">${output} = 1000</msg>
<status status="PASS" starttime="20230103 10:23:52.058" endtime="20230103 10:23:57.604"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:23:57.606" level="INFO">1000</msg>
<status status="PASS" starttime="20230103 10:23:57.605" endtime="20230103 10:23:57.606"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:23:57.608" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:23:57.607" endtime="20230103 10:23:57.608"/>
</kw>
<status status="PASS" starttime="20230103 10:23:52.057" endtime="20230103 10:23:57.608"/>
</kw>
<msg timestamp="20230103 10:23:57.608" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:23:52.057" endtime="20230103 10:23:57.609"/>
</kw>
<msg timestamp="20230103 10:23:57.610" level="INFO">${result} = 1000</msg>
<status status="PASS" starttime="20230103 10:23:52.056" endtime="20230103 10:23:57.610"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1000</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230103 10:23:57.610" endtime="20230103 10:23:57.611"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '.[] | select(.name=="bb1") | .volumeName'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:23:57.617" level="INFO">Running command 'ozone sh bucket list /66665-without-scheme/ | jq -r '.[] | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:24:03.735" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:24:03.735" level="INFO">${output} = 66665-without-scheme</msg>
<status status="PASS" starttime="20230103 10:23:57.614" endtime="20230103 10:24:03.735"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:24:03.737" level="INFO">66665-without-scheme</msg>
<status status="PASS" starttime="20230103 10:24:03.736" endtime="20230103 10:24:03.738"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:24:03.739" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:24:03.738" endtime="20230103 10:24:03.739"/>
</kw>
<status status="PASS" starttime="20230103 10:23:57.613" endtime="20230103 10:24:03.740"/>
</kw>
<msg timestamp="20230103 10:24:03.741" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:23:57.613" endtime="20230103 10:24:03.742"/>
</kw>
<msg timestamp="20230103 10:24:03.742" level="INFO">${result} = 66665-without-scheme</msg>
<status status="PASS" starttime="20230103 10:23:57.611" endtime="20230103 10:24:03.742"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${volume}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230103 10:24:03.743" endtime="20230103 10:24:03.744"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Test key handling" library="ozone-shell-lib">
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:24:03.751" level="INFO">Running command 'ozone sh key put /66665-without-scheme/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:24:13.036" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:24:13.036" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230103 10:24:03.748" endtime="20230103 10:24:13.036"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:24:13.038" level="INFO"/>
<status status="PASS" starttime="20230103 10:24:13.037" endtime="20230103 10:24:13.038"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:24:13.038" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:24:13.038" endtime="20230103 10:24:13.039"/>
</kw>
<status status="PASS" starttime="20230103 10:24:03.747" endtime="20230103 10:24:13.039"/>
</kw>
<msg timestamp="20230103 10:24:13.039" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:24:03.747" endtime="20230103 10:24:13.040"/>
</kw>
<status status="PASS" starttime="20230103 10:24:03.746" endtime="20230103 10:24:13.040"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:24:13.045" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:24:13.049" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:24:13.050" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230103 10:24:13.042" endtime="20230103 10:24:13.050"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:24:13.051" level="INFO"/>
<status status="PASS" starttime="20230103 10:24:13.050" endtime="20230103 10:24:13.052"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:24:13.052" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:24:13.052" endtime="20230103 10:24:13.052"/>
</kw>
<status status="PASS" starttime="20230103 10:24:13.041" endtime="20230103 10:24:13.053"/>
</kw>
<msg timestamp="20230103 10:24:13.053" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:24:13.041" endtime="20230103 10:24:13.054"/>
</kw>
<status status="PASS" starttime="20230103 10:24:13.040" endtime="20230103 10:24:13.054"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:24:13.059" level="INFO">Running command 'ozone sh key get /66665-without-scheme/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:24:22.082" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:24:22.082" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230103 10:24:13.057" endtime="20230103 10:24:22.082"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:24:22.084" level="INFO"/>
<status status="PASS" starttime="20230103 10:24:22.083" endtime="20230103 10:24:22.084"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:24:22.085" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:24:22.084" endtime="20230103 10:24:22.085"/>
</kw>
<status status="PASS" starttime="20230103 10:24:13.056" endtime="20230103 10:24:22.086"/>
</kw>
<msg timestamp="20230103 10:24:22.086" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:24:13.055" endtime="20230103 10:24:22.087"/>
</kw>
<status status="PASS" starttime="20230103 10:24:13.054" endtime="20230103 10:24:22.087"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:24:22.092" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:24:22.096" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:24:22.096" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230103 10:24:22.089" endtime="20230103 10:24:22.097"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:24:22.098" level="INFO"/>
<status status="PASS" starttime="20230103 10:24:22.097" endtime="20230103 10:24:22.098"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:24:22.099" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:24:22.098" endtime="20230103 10:24:22.099"/>
</kw>
<status status="PASS" starttime="20230103 10:24:22.088" endtime="20230103 10:24:22.099"/>
</kw>
<msg timestamp="20230103 10:24:22.099" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:24:22.088" endtime="20230103 10:24:22.100"/>
</kw>
<status status="PASS" starttime="20230103 10:24:22.087" endtime="20230103 10:24:22.100"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:24:22.106" level="INFO">Running command 'ozone sh key put -t RATIS /66665-without-scheme/bb1/key1_RATIS /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:24:30.854" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:24:30.854" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230103 10:24:22.103" endtime="20230103 10:24:30.854"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:24:30.856" level="INFO"/>
<status status="PASS" starttime="20230103 10:24:30.855" endtime="20230103 10:24:30.856"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:24:30.857" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:24:30.856" endtime="20230103 10:24:30.857"/>
</kw>
<status status="PASS" starttime="20230103 10:24:22.102" endtime="20230103 10:24:30.857"/>
</kw>
<msg timestamp="20230103 10:24:30.857" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:24:22.102" endtime="20230103 10:24:30.858"/>
</kw>
<status status="PASS" starttime="20230103 10:24:22.101" endtime="20230103 10:24:30.858"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1_RATIS</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:24:30.863" level="INFO">Running command 'rm -f /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:24:30.867" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:24:30.868" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230103 10:24:30.860" endtime="20230103 10:24:30.868"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:24:30.869" level="INFO"/>
<status status="PASS" starttime="20230103 10:24:30.868" endtime="20230103 10:24:30.870"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:24:30.870" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:24:30.870" endtime="20230103 10:24:30.871"/>
</kw>
<status status="PASS" starttime="20230103 10:24:30.859" endtime="20230103 10:24:30.871"/>
</kw>
<msg timestamp="20230103 10:24:30.871" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:24:30.859" endtime="20230103 10:24:30.872"/>
</kw>
<status status="PASS" starttime="20230103 10:24:30.858" endtime="20230103 10:24:30.872"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:24:30.879" level="INFO">Running command 'ozone sh key get /66665-without-scheme/bb1/key1_RATIS /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:24:39.835" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:24:39.835" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230103 10:24:30.875" endtime="20230103 10:24:39.836"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:24:39.837" level="INFO"/>
<status status="PASS" starttime="20230103 10:24:39.836" endtime="20230103 10:24:39.837"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:24:39.838" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:24:39.837" endtime="20230103 10:24:39.839"/>
</kw>
<status status="PASS" starttime="20230103 10:24:30.875" endtime="20230103 10:24:39.839"/>
</kw>
<msg timestamp="20230103 10:24:39.839" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:24:30.874" endtime="20230103 10:24:39.840"/>
</kw>
<status status="PASS" starttime="20230103 10:24:30.872" endtime="20230103 10:24:39.840"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:24:39.845" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:24:39.848" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:24:39.848" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230103 10:24:39.842" endtime="20230103 10:24:39.848"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:24:39.851" level="INFO"/>
<status status="PASS" starttime="20230103 10:24:39.849" endtime="20230103 10:24:39.851"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:24:39.853" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:24:39.852" endtime="20230103 10:24:39.853"/>
</kw>
<status status="PASS" starttime="20230103 10:24:39.841" endtime="20230103 10:24:39.853"/>
</kw>
<msg timestamp="20230103 10:24:39.853" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:24:39.841" endtime="20230103 10:24:39.854"/>
</kw>
<status status="PASS" starttime="20230103 10:24:39.840" endtime="20230103 10:24:39.854"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:24:39.860" level="INFO">Running command 'ozone sh key info /66665-without-scheme/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")' 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:24:46.233" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:24:46.233" level="INFO">${output} = {
  "volumeName": "66665-without-scheme",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17539,
  "creationTime": "2023-01-03T10:24:27.427Z",
  "modificationTime": "2023-01-03T10:24:30.3...</msg>
<status status="PASS" starttime="20230103 10:24:39.857" endtime="20230103 10:24:46.233"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:24:46.235" level="INFO">{
  "volumeName": "66665-without-scheme",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17539,
  "creationTime": "2023-01-03T10:24:27.427Z",
  "modificationTime": "2023-01-03T10:24:30.379Z",
  "replicationConfig": {
    "replicationFactor": "THREE",
    "requiredNodes": 3,
    "replicationType": "RATIS"
  },
  "metadata": {},
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 111677748019200110,
      "length": 17539,
      "offset": 0,
      "keyOffset": 0
    }
  ]
}</msg>
<status status="PASS" starttime="20230103 10:24:46.234" endtime="20230103 10:24:46.235"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:24:46.236" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:24:46.235" endtime="20230103 10:24:46.236"/>
</kw>
<status status="PASS" starttime="20230103 10:24:39.857" endtime="20230103 10:24:46.237"/>
</kw>
<msg timestamp="20230103 10:24:46.237" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:24:39.856" endtime="20230103 10:24:46.237"/>
</kw>
<msg timestamp="20230103 10:24:46.238" level="INFO">${result} = {
  "volumeName": "66665-without-scheme",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17539,
  "creationTime": "2023-01-03T10:24:27.427Z",
  "modificationTime": "2023-01-03T10:24:30.3...</msg>
<status status="PASS" starttime="20230103 10:24:39.855" endtime="20230103 10:24:46.238"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230103 10:24:46.238" endtime="20230103 10:24:46.238"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:24:46.244" level="INFO">Running command 'ozone sh key delete /66665-without-scheme/bb1/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:24:51.729" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:24:51.729" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230103 10:24:46.241" endtime="20230103 10:24:51.729"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:24:51.731" level="INFO"/>
<status status="PASS" starttime="20230103 10:24:51.730" endtime="20230103 10:24:51.731"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:24:51.732" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:24:51.731" endtime="20230103 10:24:51.732"/>
</kw>
<status status="PASS" starttime="20230103 10:24:46.240" endtime="20230103 10:24:51.733"/>
</kw>
<msg timestamp="20230103 10:24:51.733" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:24:46.240" endtime="20230103 10:24:51.733"/>
</kw>
<status status="PASS" starttime="20230103 10:24:46.238" endtime="20230103 10:24:51.734"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:24:51.741" level="INFO">Running command 'ozone sh key cp /66665-without-scheme/bb1 key1 key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:25:01.211" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:25:01.212" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230103 10:24:51.736" endtime="20230103 10:25:01.212"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:25:01.213" level="INFO"/>
<status status="PASS" starttime="20230103 10:25:01.212" endtime="20230103 10:25:01.213"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:25:01.214" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:25:01.214" endtime="20230103 10:25:01.214"/>
</kw>
<status status="PASS" starttime="20230103 10:24:51.736" endtime="20230103 10:25:01.215"/>
</kw>
<msg timestamp="20230103 10:25:01.215" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:24:51.735" endtime="20230103 10:25:01.216"/>
</kw>
<status status="PASS" starttime="20230103 10:24:51.734" endtime="20230103 10:25:01.216"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:25:01.223" level="INFO">Running command 'rm -f /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:25:01.227" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:25:01.227" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230103 10:25:01.219" endtime="20230103 10:25:01.227"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:25:01.228" level="INFO"/>
<status status="PASS" starttime="20230103 10:25:01.227" endtime="20230103 10:25:01.229"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:25:01.229" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:25:01.229" endtime="20230103 10:25:01.229"/>
</kw>
<status status="PASS" starttime="20230103 10:25:01.218" endtime="20230103 10:25:01.230"/>
</kw>
<msg timestamp="20230103 10:25:01.230" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:25:01.217" endtime="20230103 10:25:01.231"/>
</kw>
<status status="PASS" starttime="20230103 10:25:01.217" endtime="20230103 10:25:01.231"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:25:01.237" level="INFO">Running command 'ozone sh key get /66665-without-scheme/bb1/key1-copy /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:25:09.838" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:25:09.838" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230103 10:25:01.233" endtime="20230103 10:25:09.838"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:25:09.840" level="INFO"/>
<status status="PASS" starttime="20230103 10:25:09.838" endtime="20230103 10:25:09.840"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:25:09.841" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:25:09.840" endtime="20230103 10:25:09.841"/>
</kw>
<status status="PASS" starttime="20230103 10:25:01.232" endtime="20230103 10:25:09.842"/>
</kw>
<msg timestamp="20230103 10:25:09.842" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:25:01.232" endtime="20230103 10:25:09.843"/>
</kw>
<status status="PASS" starttime="20230103 10:25:01.231" endtime="20230103 10:25:09.844"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:25:09.850" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:25:09.854" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:25:09.854" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230103 10:25:09.846" endtime="20230103 10:25:09.855"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:25:09.857" level="INFO"/>
<status status="PASS" starttime="20230103 10:25:09.856" endtime="20230103 10:25:09.857"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:25:09.858" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:25:09.858" endtime="20230103 10:25:09.859"/>
</kw>
<status status="PASS" starttime="20230103 10:25:09.845" endtime="20230103 10:25:09.859"/>
</kw>
<msg timestamp="20230103 10:25:09.859" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:25:09.845" endtime="20230103 10:25:09.860"/>
</kw>
<status status="PASS" starttime="20230103 10:25:09.844" endtime="20230103 10:25:09.861"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:25:09.868" level="INFO">Running command 'ozone sh key delete /66665-without-scheme/bb1/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:25:15.441" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:25:15.441" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230103 10:25:09.864" endtime="20230103 10:25:15.441"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:25:15.443" level="INFO"/>
<status status="PASS" starttime="20230103 10:25:15.442" endtime="20230103 10:25:15.443"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:25:15.444" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:25:15.443" endtime="20230103 10:25:15.444"/>
</kw>
<status status="PASS" starttime="20230103 10:25:09.863" endtime="20230103 10:25:15.444"/>
</kw>
<msg timestamp="20230103 10:25:15.445" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:25:09.862" endtime="20230103 10:25:15.445"/>
</kw>
<status status="PASS" starttime="20230103 10:25:09.861" endtime="20230103 10:25:15.445"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:25:15.450" level="INFO">Running command 'ozone sh key get /66665-without-scheme/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:25:20.845" level="INFO">${rc} = 255</msg>
<msg timestamp="20230103 10:25:20.845" level="INFO">${output} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20230103 10:25:15.446" endtime="20230103 10:25:20.845"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:25:20.847" level="INFO">/tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20230103 10:25:20.845" endtime="20230103 10:25:20.847"/>
</kw>
<msg timestamp="20230103 10:25:20.848" level="INFO">${result} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20230103 10:25:15.446" endtime="20230103 10:25:20.848"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230103 10:25:20.848" endtime="20230103 10:25:20.849"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:25:20.865" level="INFO">Running command 'ozone sh key get --force /66665-without-scheme/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:25:29.507" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:25:29.507" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230103 10:25:20.851" endtime="20230103 10:25:29.507"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:25:29.509" level="INFO"/>
<status status="PASS" starttime="20230103 10:25:29.507" endtime="20230103 10:25:29.509"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:25:29.510" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:25:29.509" endtime="20230103 10:25:29.510"/>
</kw>
<status status="PASS" starttime="20230103 10:25:20.850" endtime="20230103 10:25:29.510"/>
</kw>
<msg timestamp="20230103 10:25:29.510" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:25:20.850" endtime="20230103 10:25:29.511"/>
</kw>
<msg timestamp="20230103 10:25:29.511" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230103 10:25:20.849" endtime="20230103 10:25:29.511"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230103 10:25:29.511" endtime="20230103 10:25:29.512"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:25:29.517" level="INFO">Running command 'ozone sh key info /66665-without-scheme/bb1/key1 | jq -r '. | select(.name=="key1")' 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:25:35.602" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:25:35.602" level="INFO">${output} = {
  "volumeName": "66665-without-scheme",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17539,
  "creationTime": "2023-01-03T10:24:09.356Z",
  "modificationTime": "2023-01-03T10:24:12.488Z",
...</msg>
<status status="PASS" starttime="20230103 10:25:29.514" endtime="20230103 10:25:35.602"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:25:35.603" level="INFO">{
  "volumeName": "66665-without-scheme",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17539,
  "creationTime": "2023-01-03T10:24:09.356Z",
  "modificationTime": "2023-01-03T10:24:12.488Z",
  "replicationConfig": {
    "replicationFactor": "THREE",
    "requiredNodes": 3,
    "replicationType": "RATIS"
  },
  "metadata": {},
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 111677748019200110,
      "length": 17539,
      "offset": 0,
      "keyOffset": 0
    }
  ]
}</msg>
<status status="PASS" starttime="20230103 10:25:35.602" endtime="20230103 10:25:35.604"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:25:35.604" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:25:35.604" endtime="20230103 10:25:35.605"/>
</kw>
<status status="PASS" starttime="20230103 10:25:29.514" endtime="20230103 10:25:35.605"/>
</kw>
<msg timestamp="20230103 10:25:35.605" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:25:29.513" endtime="20230103 10:25:35.606"/>
</kw>
<msg timestamp="20230103 10:25:35.606" level="INFO">${result} = {
  "volumeName": "66665-without-scheme",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17539,
  "creationTime": "2023-01-03T10:24:09.356Z",
  "modificationTime": "2023-01-03T10:24:12.488Z",
...</msg>
<status status="PASS" starttime="20230103 10:25:29.512" endtime="20230103 10:25:35.606"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230103 10:25:35.607" endtime="20230103 10:25:35.607"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.[] | select(.name=="key1") | .name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:25:35.613" level="INFO">Running command 'ozone sh key list /66665-without-scheme/bb1 | jq -r '.[] | select(.name=="key1") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:25:41.806" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:25:41.806" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20230103 10:25:35.610" endtime="20230103 10:25:41.806"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:25:41.808" level="INFO">key1</msg>
<status status="PASS" starttime="20230103 10:25:41.807" endtime="20230103 10:25:41.808"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:25:41.809" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:25:41.808" endtime="20230103 10:25:41.809"/>
</kw>
<status status="PASS" starttime="20230103 10:25:35.609" endtime="20230103 10:25:41.809"/>
</kw>
<msg timestamp="20230103 10:25:41.809" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:25:35.609" endtime="20230103 10:25:41.810"/>
</kw>
<msg timestamp="20230103 10:25:41.810" level="INFO">${result} = key1</msg>
<status status="PASS" starttime="20230103 10:25:35.608" endtime="20230103 10:25:41.810"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230103 10:25:41.811" endtime="20230103 10:25:41.811"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:25:41.817" level="INFO">Running command 'ozone sh key rename /66665-without-scheme/bb1 key1 key2 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:25:47.461" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:25:47.462" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230103 10:25:41.814" endtime="20230103 10:25:47.462"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:25:47.463" level="INFO"/>
<status status="PASS" starttime="20230103 10:25:47.462" endtime="20230103 10:25:47.463"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:25:47.465" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:25:47.464" endtime="20230103 10:25:47.465"/>
</kw>
<status status="PASS" starttime="20230103 10:25:41.813" endtime="20230103 10:25:47.466"/>
</kw>
<msg timestamp="20230103 10:25:47.466" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:25:41.813" endtime="20230103 10:25:47.466"/>
</kw>
<status status="PASS" starttime="20230103 10:25:41.812" endtime="20230103 10:25:47.467"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:25:47.472" level="INFO">Running command 'ozone sh key list /66665-without-scheme/bb1 | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:25:53.294" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:25:53.294" level="INFO">${output} = key2</msg>
<status status="PASS" starttime="20230103 10:25:47.469" endtime="20230103 10:25:53.294"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:25:53.296" level="INFO">key2</msg>
<status status="PASS" starttime="20230103 10:25:53.295" endtime="20230103 10:25:53.296"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:25:53.297" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:25:53.296" endtime="20230103 10:25:53.297"/>
</kw>
<status status="PASS" starttime="20230103 10:25:47.468" endtime="20230103 10:25:53.298"/>
</kw>
<msg timestamp="20230103 10:25:53.298" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:25:47.468" endtime="20230103 10:25:53.299"/>
</kw>
<msg timestamp="20230103 10:25:53.299" level="INFO">${result} = key2</msg>
<status status="PASS" starttime="20230103 10:25:47.467" endtime="20230103 10:25:53.299"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230103 10:25:53.299" endtime="20230103 10:25:53.300"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:25:53.305" level="INFO">Running command 'ozone sh key delete /66665-without-scheme/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:25:58.985" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:25:58.985" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230103 10:25:53.302" endtime="20230103 10:25:58.985"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:25:58.987" level="INFO"/>
<status status="PASS" starttime="20230103 10:25:58.986" endtime="20230103 10:25:58.987"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:25:58.988" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:25:58.987" endtime="20230103 10:25:58.988"/>
</kw>
<status status="PASS" starttime="20230103 10:25:53.301" endtime="20230103 10:25:58.989"/>
</kw>
<msg timestamp="20230103 10:25:58.989" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:25:53.301" endtime="20230103 10:25:58.990"/>
</kw>
<status status="PASS" starttime="20230103 10:25:53.300" endtime="20230103 10:25:58.990"/>
</kw>
<status status="PASS" starttime="20230103 10:24:03.745" endtime="20230103 10:25:58.990"/>
</kw>
<status status="PASS" starttime="20230103 10:24:03.744" endtime="20230103 10:25:58.990"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --space-quota ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:25:58.995" level="INFO">Running command 'ozone sh volume clrquota --space-quota /66665-without-scheme 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:26:04.464" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:26:04.464" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230103 10:25:58.992" endtime="20230103 10:26:04.464"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:26:04.466" level="INFO"/>
<status status="PASS" starttime="20230103 10:26:04.465" endtime="20230103 10:26:04.466"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:26:04.466" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:26:04.466" endtime="20230103 10:26:04.466"/>
</kw>
<status status="PASS" starttime="20230103 10:25:58.992" endtime="20230103 10:26:04.467"/>
</kw>
<msg timestamp="20230103 10:26:04.467" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:25:58.991" endtime="20230103 10:26:04.468"/>
</kw>
<status status="PASS" starttime="20230103 10:25:58.991" endtime="20230103 10:26:04.468"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:26:04.474" level="INFO">Running command 'ozone sh volume info /66665-without-scheme | jq -r '. | select(.name=="66665-without-scheme") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:26:10.637" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:26:10.637" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20230103 10:26:04.471" endtime="20230103 10:26:10.637"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:26:10.639" level="INFO">-1</msg>
<status status="PASS" starttime="20230103 10:26:10.638" endtime="20230103 10:26:10.639"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:26:10.640" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:26:10.640" endtime="20230103 10:26:10.640"/>
</kw>
<status status="PASS" starttime="20230103 10:26:04.470" endtime="20230103 10:26:10.641"/>
</kw>
<msg timestamp="20230103 10:26:10.641" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:26:04.470" endtime="20230103 10:26:10.642"/>
</kw>
<msg timestamp="20230103 10:26:10.642" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20230103 10:26:04.469" endtime="20230103 10:26:10.642"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230103 10:26:10.642" endtime="20230103 10:26:10.643"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --namespace-quota ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:26:10.649" level="INFO">Running command 'ozone sh volume clrquota --namespace-quota /66665-without-scheme 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:26:16.019" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:26:16.019" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230103 10:26:10.646" endtime="20230103 10:26:16.019"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:26:16.020" level="INFO"/>
<status status="PASS" starttime="20230103 10:26:16.019" endtime="20230103 10:26:16.021"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:26:16.021" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:26:16.021" endtime="20230103 10:26:16.021"/>
</kw>
<status status="PASS" starttime="20230103 10:26:10.645" endtime="20230103 10:26:16.022"/>
</kw>
<msg timestamp="20230103 10:26:16.022" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:26:10.644" endtime="20230103 10:26:16.023"/>
</kw>
<status status="PASS" starttime="20230103 10:26:10.643" endtime="20230103 10:26:16.023"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:26:16.029" level="INFO">Running command 'ozone sh volume info /66665-without-scheme | jq -r '. | select(.name=="66665-without-scheme") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:26:21.853" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:26:21.853" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20230103 10:26:16.026" endtime="20230103 10:26:21.853"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:26:21.855" level="INFO">-1</msg>
<status status="PASS" starttime="20230103 10:26:21.854" endtime="20230103 10:26:21.855"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:26:21.856" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:26:21.855" endtime="20230103 10:26:21.856"/>
</kw>
<status status="PASS" starttime="20230103 10:26:16.025" endtime="20230103 10:26:21.856"/>
</kw>
<msg timestamp="20230103 10:26:21.856" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:26:16.025" endtime="20230103 10:26:21.857"/>
</kw>
<msg timestamp="20230103 10:26:21.857" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20230103 10:26:16.023" endtime="20230103 10:26:21.857"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230103 10:26:21.858" endtime="20230103 10:26:21.858"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --space-quota ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:26:21.864" level="INFO">Running command 'ozone sh bucket clrquota --space-quota /66665-without-scheme/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:26:27.225" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:26:27.225" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230103 10:26:21.861" endtime="20230103 10:26:27.225"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:26:27.227" level="INFO"/>
<status status="PASS" starttime="20230103 10:26:27.226" endtime="20230103 10:26:27.227"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:26:27.228" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:26:27.227" endtime="20230103 10:26:27.228"/>
</kw>
<status status="PASS" starttime="20230103 10:26:21.860" endtime="20230103 10:26:27.229"/>
</kw>
<msg timestamp="20230103 10:26:27.229" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:26:21.859" endtime="20230103 10:26:27.230"/>
</kw>
<status status="PASS" starttime="20230103 10:26:21.858" endtime="20230103 10:26:27.230"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:26:27.237" level="INFO">Running command 'ozone sh bucket info /66665-without-scheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:26:33.331" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:26:33.331" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20230103 10:26:27.234" endtime="20230103 10:26:33.332"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:26:33.333" level="INFO">-1</msg>
<status status="PASS" starttime="20230103 10:26:33.332" endtime="20230103 10:26:33.333"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:26:33.335" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:26:33.334" endtime="20230103 10:26:33.335"/>
</kw>
<status status="PASS" starttime="20230103 10:26:27.233" endtime="20230103 10:26:33.335"/>
</kw>
<msg timestamp="20230103 10:26:33.336" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:26:27.232" endtime="20230103 10:26:33.336"/>
</kw>
<msg timestamp="20230103 10:26:33.337" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20230103 10:26:27.231" endtime="20230103 10:26:33.337"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230103 10:26:33.337" endtime="20230103 10:26:33.338"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --namespace-quota ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:26:33.344" level="INFO">Running command 'ozone sh bucket clrquota --namespace-quota /66665-without-scheme/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:26:38.648" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:26:38.648" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230103 10:26:33.341" endtime="20230103 10:26:38.648"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:26:38.651" level="INFO"/>
<status status="PASS" starttime="20230103 10:26:38.649" endtime="20230103 10:26:38.651"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:26:38.652" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:26:38.651" endtime="20230103 10:26:38.652"/>
</kw>
<status status="PASS" starttime="20230103 10:26:33.340" endtime="20230103 10:26:38.653"/>
</kw>
<msg timestamp="20230103 10:26:38.653" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:26:33.339" endtime="20230103 10:26:38.653"/>
</kw>
<status status="PASS" starttime="20230103 10:26:33.338" endtime="20230103 10:26:38.654"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:26:38.661" level="INFO">Running command 'ozone sh bucket info /66665-without-scheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:26:44.464" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:26:44.464" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20230103 10:26:38.657" endtime="20230103 10:26:44.465"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:26:44.466" level="INFO">-1</msg>
<status status="PASS" starttime="20230103 10:26:44.465" endtime="20230103 10:26:44.466"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:26:44.467" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:26:44.466" endtime="20230103 10:26:44.467"/>
</kw>
<status status="PASS" starttime="20230103 10:26:38.656" endtime="20230103 10:26:44.468"/>
</kw>
<msg timestamp="20230103 10:26:44.468" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:26:38.656" endtime="20230103 10:26:44.468"/>
</kw>
<msg timestamp="20230103 10:26:44.469" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20230103 10:26:38.654" endtime="20230103 10:26:44.469"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230103 10:26:44.469" endtime="20230103 10:26:44.470"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:26:44.475" level="INFO">Running command 'ozone sh bucket delete /66665-without-scheme/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:26:49.859" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:26:49.859" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230103 10:26:44.472" endtime="20230103 10:26:49.859"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:26:49.861" level="INFO"/>
<status status="PASS" starttime="20230103 10:26:49.860" endtime="20230103 10:26:49.861"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:26:49.862" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:26:49.862" endtime="20230103 10:26:49.862"/>
</kw>
<status status="PASS" starttime="20230103 10:26:44.471" endtime="20230103 10:26:49.863"/>
</kw>
<msg timestamp="20230103 10:26:49.863" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:26:44.471" endtime="20230103 10:26:49.863"/>
</kw>
<status status="PASS" starttime="20230103 10:26:44.470" endtime="20230103 10:26:49.864"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:26:49.869" level="INFO">Running command 'ozone sh volume delete /66665-without-scheme 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:26:55.100" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:26:55.101" level="INFO">${output} = Volume 66665-without-scheme is deleted</msg>
<status status="PASS" starttime="20230103 10:26:49.866" endtime="20230103 10:26:55.101"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:26:55.102" level="INFO">Volume 66665-without-scheme is deleted</msg>
<status status="PASS" starttime="20230103 10:26:55.101" endtime="20230103 10:26:55.103"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:26:55.103" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:26:55.103" endtime="20230103 10:26:55.104"/>
</kw>
<status status="PASS" starttime="20230103 10:26:49.865" endtime="20230103 10:26:55.104"/>
</kw>
<msg timestamp="20230103 10:26:55.104" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:26:49.865" endtime="20230103 10:26:55.105"/>
</kw>
<status status="PASS" starttime="20230103 10:26:49.864" endtime="20230103 10:26:55.105"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:26:55.110" level="INFO">Running command 'ozone sh volume create /66665-without-scheme 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:27:00.346" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:27:00.346" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230103 10:26:55.107" endtime="20230103 10:27:00.346"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:27:00.348" level="INFO"/>
<status status="PASS" starttime="20230103 10:27:00.347" endtime="20230103 10:27:00.348"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:27:00.349" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:27:00.348" endtime="20230103 10:27:00.349"/>
</kw>
<status status="PASS" starttime="20230103 10:26:55.107" endtime="20230103 10:27:00.350"/>
</kw>
<msg timestamp="20230103 10:27:00.350" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:26:55.106" endtime="20230103 10:27:00.351"/>
</kw>
<status status="PASS" starttime="20230103 10:26:55.105" endtime="20230103 10:27:00.351"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:27:00.357" level="INFO">Running command 'ozone sh volume info /66665-without-scheme | jq -r '. | select(.name=="66665-without-scheme") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:27:06.480" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:27:06.480" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20230103 10:27:00.354" endtime="20230103 10:27:06.480"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:27:06.482" level="INFO">-1</msg>
<status status="PASS" starttime="20230103 10:27:06.481" endtime="20230103 10:27:06.482"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:27:06.483" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:27:06.482" endtime="20230103 10:27:06.483"/>
</kw>
<status status="PASS" starttime="20230103 10:27:00.353" endtime="20230103 10:27:06.484"/>
</kw>
<msg timestamp="20230103 10:27:06.484" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:27:00.353" endtime="20230103 10:27:06.485"/>
</kw>
<msg timestamp="20230103 10:27:06.485" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20230103 10:27:00.351" endtime="20230103 10:27:06.485"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230103 10:27:06.485" endtime="20230103 10:27:06.486"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:27:06.493" level="INFO">Running command 'ozone sh volume info /66665-without-scheme | jq -r '. | select(.name=="66665-without-scheme") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:27:12.912" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:27:12.912" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20230103 10:27:06.489" endtime="20230103 10:27:12.912"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:27:12.914" level="INFO">-1</msg>
<status status="PASS" starttime="20230103 10:27:12.913" endtime="20230103 10:27:12.914"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:27:12.915" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:27:12.914" endtime="20230103 10:27:12.915"/>
</kw>
<status status="PASS" starttime="20230103 10:27:06.488" endtime="20230103 10:27:12.916"/>
</kw>
<msg timestamp="20230103 10:27:12.916" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:27:06.488" endtime="20230103 10:27:12.916"/>
</kw>
<msg timestamp="20230103 10:27:12.917" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20230103 10:27:06.486" endtime="20230103 10:27:12.917"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230103 10:27:12.917" endtime="20230103 10:27:12.918"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:27:12.923" level="INFO">Running command 'ozone sh bucket create /66665-without-scheme/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:27:18.504" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:27:18.505" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230103 10:27:12.920" endtime="20230103 10:27:18.505"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:27:18.506" level="INFO"/>
<status status="PASS" starttime="20230103 10:27:18.505" endtime="20230103 10:27:18.507"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:27:18.507" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:27:18.507" endtime="20230103 10:27:18.508"/>
</kw>
<status status="PASS" starttime="20230103 10:27:12.920" endtime="20230103 10:27:18.508"/>
</kw>
<msg timestamp="20230103 10:27:18.508" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:27:12.919" endtime="20230103 10:27:18.509"/>
</kw>
<status status="PASS" starttime="20230103 10:27:12.918" endtime="20230103 10:27:18.509"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:27:18.515" level="INFO">Running command 'ozone sh bucket info /66665-without-scheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:27:24.322" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:27:24.322" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20230103 10:27:18.512" endtime="20230103 10:27:24.322"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:27:24.324" level="INFO">-1</msg>
<status status="PASS" starttime="20230103 10:27:24.323" endtime="20230103 10:27:24.325"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:27:24.325" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:27:24.325" endtime="20230103 10:27:24.326"/>
</kw>
<status status="PASS" starttime="20230103 10:27:18.511" endtime="20230103 10:27:24.326"/>
</kw>
<msg timestamp="20230103 10:27:24.326" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:27:18.511" endtime="20230103 10:27:24.327"/>
</kw>
<msg timestamp="20230103 10:27:24.327" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20230103 10:27:18.509" endtime="20230103 10:27:24.327"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230103 10:27:24.328" endtime="20230103 10:27:24.328"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:27:24.335" level="INFO">Running command 'ozone sh bucket info /66665-without-scheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:27:30.220" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:27:30.221" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20230103 10:27:24.331" endtime="20230103 10:27:30.221"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:27:30.223" level="INFO">-1</msg>
<status status="PASS" starttime="20230103 10:27:30.221" endtime="20230103 10:27:30.223"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:27:30.224" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:27:30.223" endtime="20230103 10:27:30.224"/>
</kw>
<status status="PASS" starttime="20230103 10:27:24.330" endtime="20230103 10:27:30.224"/>
</kw>
<msg timestamp="20230103 10:27:30.225" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:27:24.330" endtime="20230103 10:27:30.225"/>
</kw>
<msg timestamp="20230103 10:27:30.226" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20230103 10:27:24.329" endtime="20230103 10:27:30.226"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230103 10:27:30.226" endtime="20230103 10:27:30.226"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:27:30.232" level="INFO">Running command 'ozone sh bucket delete /66665-without-scheme/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:27:35.969" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:27:35.969" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230103 10:27:30.229" endtime="20230103 10:27:35.969"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:27:35.972" level="INFO"/>
<status status="PASS" starttime="20230103 10:27:35.970" endtime="20230103 10:27:35.972"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:27:35.973" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:27:35.972" endtime="20230103 10:27:35.973"/>
</kw>
<status status="PASS" starttime="20230103 10:27:30.228" endtime="20230103 10:27:35.973"/>
</kw>
<msg timestamp="20230103 10:27:35.973" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:27:30.227" endtime="20230103 10:27:35.974"/>
</kw>
<status status="PASS" starttime="20230103 10:27:30.227" endtime="20230103 10:27:35.974"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:27:35.980" level="INFO">Running command 'ozone sh volume delete /66665-without-scheme 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:27:40.843" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20230103 10:27:35.977" endtime="20230103 10:27:40.843"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230103 10:27:40.844" endtime="20230103 10:27:40.844"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20230103 10:27:40.844" endtime="20230103 10:27:40.844"/>
</kw>
<status status="FAIL" starttime="20230103 10:27:35.976" endtime="20230103 10:27:40.845"/>
</kw>
<msg timestamp="20230103 10:27:40.845" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20230103 10:27:35.976" endtime="20230103 10:27:40.846"/>
</kw>
<status status="FAIL" starttime="20230103 10:27:35.975" endtime="20230103 10:27:40.847"/>
</kw>
<status status="FAIL" starttime="20230103 10:22:40.843" endtime="20230103 10:27:40.847"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20230103 10:22:40.842" endtime="20230103 10:27:40.849">Test timeout 5 minutes exceeded.</status>
</test>
<doc>Test ozone shell CLI usage</doc>
<status status="FAIL" starttime="20230103 10:22:40.806" endtime="20230103 10:27:40.851"/>
</suite>
<suite id="s1-s3-s5" name="Ozone-Shell" source="/opt/hadoop/smoketest/basic/ozone-shell.robot">
<kw name="Generate prefix" library="ozone-shell-lib" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230103 10:27:40.881" level="INFO">${random} = 74300</msg>
<status status="PASS" starttime="20230103 10:27:40.880" endtime="20230103 10:27:40.881"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${prefix}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230103 10:27:40.882" level="INFO">${prefix} = 74300</msg>
<status status="PASS" starttime="20230103 10:27:40.881" endtime="20230103 10:27:40.882"/>
</kw>
<status status="PASS" starttime="20230103 10:27:40.879" endtime="20230103 10:27:40.883"/>
</kw>
<test id="s1-s3-s5-t1" name="RpcClient with port" line="26">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230103 10:27:40.885" endtime="20230103 10:27:40.885"/>
</kw>
<kw name="Test ozone shell" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-with-host</arg>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:27:40.892" level="INFO">Running command 'ozone sh volume info o3://om:9862/74300-with-host 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:27:46.936" level="INFO">${rc} = 255</msg>
<msg timestamp="20230103 10:27:46.936" level="INFO">${output} = VOLUME_NOT_FOUND Volume 74300-with-host is not found</msg>
<status status="PASS" starttime="20230103 10:27:40.887" endtime="20230103 10:27:46.936"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:27:46.938" level="INFO">VOLUME_NOT_FOUND Volume 74300-with-host is not found</msg>
<status status="PASS" starttime="20230103 10:27:46.936" endtime="20230103 10:27:46.938"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:27:46.939" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:27:46.938" endtime="20230103 10:27:46.939"/>
</kw>
<msg timestamp="20230103 10:27:46.939" level="INFO">${result} = VOLUME_NOT_FOUND Volume 74300-with-host is not found</msg>
<status status="PASS" starttime="20230103 10:27:40.886" endtime="20230103 10:27:46.939"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230103 10:27:46.940" endtime="20230103 10:27:46.940"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:27:46.946" level="INFO">Running command 'ozone sh volume create o3://om:9862/74300-with-host --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:27:52.549" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:27:52.549" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230103 10:27:46.943" endtime="20230103 10:27:52.549"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:27:52.551" level="INFO"/>
<status status="PASS" starttime="20230103 10:27:52.550" endtime="20230103 10:27:52.551"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:27:52.552" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:27:52.552" endtime="20230103 10:27:52.552"/>
</kw>
<status status="PASS" starttime="20230103 10:27:46.942" endtime="20230103 10:27:52.553"/>
</kw>
<msg timestamp="20230103 10:27:52.553" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:27:46.941" endtime="20230103 10:27:52.554"/>
</kw>
<msg timestamp="20230103 10:27:52.554" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230103 10:27:46.940" endtime="20230103 10:27:52.554"/>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<arg>${result}</arg>
<doc>Verifies that the given item is empty.</doc>
<msg timestamp="20230103 10:27:52.555" level="INFO">Length is 0</msg>
<status status="PASS" starttime="20230103 10:27:52.554" endtime="20230103 10:27:52.555"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '.[] | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:27:52.562" level="INFO">Running command 'ozone sh volume list o3://om:9862/ | jq -r '.[] | select(.name=="74300-with-host")' 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:27:57.969" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:27:57.969" level="INFO">${output} = {
  "metadata": {},
  "name": "74300-with-host",
  "admin": "hadoop",
  "owner": "hadoop",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2023-0...</msg>
<status status="PASS" starttime="20230103 10:27:52.559" endtime="20230103 10:27:57.969"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:27:57.970" level="INFO">{
  "metadata": {},
  "name": "74300-with-host",
  "admin": "hadoop",
  "owner": "hadoop",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2023-01-03T10:27:52.464Z",
  "modificationTime": "2023-01-03T10:27:52.464Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "refCount": 0
}</msg>
<status status="PASS" starttime="20230103 10:27:57.969" endtime="20230103 10:27:57.971"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:27:57.971" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:27:57.971" endtime="20230103 10:27:57.972"/>
</kw>
<status status="PASS" starttime="20230103 10:27:52.558" endtime="20230103 10:27:57.972"/>
</kw>
<msg timestamp="20230103 10:27:57.972" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:27:52.557" endtime="20230103 10:27:57.973"/>
</kw>
<msg timestamp="20230103 10:27:57.973" level="INFO">${result} = {
  "metadata": {},
  "name": "74300-with-host",
  "admin": "hadoop",
  "owner": "hadoop",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2023-0...</msg>
<status status="PASS" starttime="20230103 10:27:52.555" endtime="20230103 10:27:57.973"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230103 10:27:57.973" endtime="20230103 10:27:57.974"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list | jq -r '.[] | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:27:57.980" level="INFO">Running command 'ozone sh volume list | jq -r '.[] | select(.name=="74300-with-host")' 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:28:03.809" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:28:03.810" level="INFO">${output} = {
  "metadata": {},
  "name": "74300-with-host",
  "admin": "hadoop",
  "owner": "hadoop",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2023-0...</msg>
<status status="PASS" starttime="20230103 10:27:57.976" endtime="20230103 10:28:03.810"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:28:03.812" level="INFO">{
  "metadata": {},
  "name": "74300-with-host",
  "admin": "hadoop",
  "owner": "hadoop",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2023-01-03T10:27:52.464Z",
  "modificationTime": "2023-01-03T10:27:52.464Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "refCount": 0
}</msg>
<status status="PASS" starttime="20230103 10:28:03.811" endtime="20230103 10:28:03.812"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:28:03.813" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:28:03.813" endtime="20230103 10:28:03.813"/>
</kw>
<status status="PASS" starttime="20230103 10:27:57.975" endtime="20230103 10:28:03.814"/>
</kw>
<msg timestamp="20230103 10:28:03.814" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:27:57.975" endtime="20230103 10:28:03.815"/>
</kw>
<msg timestamp="20230103 10:28:03.815" level="INFO">${result} = {
  "metadata": {},
  "name": "74300-with-host",
  "admin": "hadoop",
  "owner": "hadoop",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2023-0...</msg>
<status status="PASS" starttime="20230103 10:27:57.974" endtime="20230103 10:28:03.815"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230103 10:28:03.815" endtime="20230103 10:28:03.816"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:28:03.821" level="INFO">Running command 'ozone sh volume setquota o3://om:9862/74300-with-host --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:28:08.802" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:28:08.802" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230103 10:28:03.818" endtime="20230103 10:28:08.802"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:28:08.805" level="INFO"/>
<status status="PASS" starttime="20230103 10:28:08.803" endtime="20230103 10:28:08.805"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:28:08.806" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:28:08.805" endtime="20230103 10:28:08.806"/>
</kw>
<status status="PASS" starttime="20230103 10:28:03.817" endtime="20230103 10:28:08.806"/>
</kw>
<msg timestamp="20230103 10:28:08.806" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:28:03.817" endtime="20230103 10:28:08.807"/>
</kw>
<status status="PASS" starttime="20230103 10:28:03.816" endtime="20230103 10:28:08.807"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:28:08.813" level="INFO">Running command 'ozone sh volume info o3://om:9862/74300-with-host | jq -r '. | select(.name=="74300-with-host") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:28:14.726" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:28:14.726" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20230103 10:28:08.810" endtime="20230103 10:28:14.726"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:28:14.727" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20230103 10:28:14.727" endtime="20230103 10:28:14.728"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:28:14.728" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:28:14.728" endtime="20230103 10:28:14.729"/>
</kw>
<status status="PASS" starttime="20230103 10:28:08.809" endtime="20230103 10:28:14.729"/>
</kw>
<msg timestamp="20230103 10:28:14.729" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:28:08.809" endtime="20230103 10:28:14.730"/>
</kw>
<msg timestamp="20230103 10:28:14.730" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20230103 10:28:08.807" endtime="20230103 10:28:14.730"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230103 10:28:14.730" endtime="20230103 10:28:14.731"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:28:14.737" level="INFO">Running command 'ozone sh bucket create o3://om:9862/74300-with-host/bb1 --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:28:20.451" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:28:20.452" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230103 10:28:14.733" endtime="20230103 10:28:20.452"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:28:20.453" level="INFO"/>
<status status="PASS" starttime="20230103 10:28:20.452" endtime="20230103 10:28:20.453"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:28:20.454" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:28:20.453" endtime="20230103 10:28:20.454"/>
</kw>
<status status="PASS" starttime="20230103 10:28:14.732" endtime="20230103 10:28:20.455"/>
</kw>
<msg timestamp="20230103 10:28:20.455" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:28:14.732" endtime="20230103 10:28:20.456"/>
</kw>
<msg timestamp="20230103 10:28:20.456" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230103 10:28:14.731" endtime="20230103 10:28:20.456"/>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<arg>${result}</arg>
<doc>Verifies that the given item is empty.</doc>
<msg timestamp="20230103 10:28:20.457" level="INFO">Length is 0</msg>
<status status="PASS" starttime="20230103 10:28:20.457" endtime="20230103 10:28:20.457"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:28:20.464" level="INFO">Running command 'ozone sh bucket info o3://om:9862/74300-with-host/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:28:26.780" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:28:26.780" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20230103 10:28:20.460" endtime="20230103 10:28:26.780"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:28:26.782" level="INFO">DISK</msg>
<status status="PASS" starttime="20230103 10:28:26.781" endtime="20230103 10:28:26.782"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:28:26.783" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:28:26.783" endtime="20230103 10:28:26.784"/>
</kw>
<status status="PASS" starttime="20230103 10:28:20.459" endtime="20230103 10:28:26.784"/>
</kw>
<msg timestamp="20230103 10:28:26.784" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:28:20.459" endtime="20230103 10:28:26.785"/>
</kw>
<msg timestamp="20230103 10:28:26.785" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20230103 10:28:20.458" endtime="20230103 10:28:26.785"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>DISK</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230103 10:28:26.785" endtime="20230103 10:28:26.786"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:28:26.791" level="INFO">Running command 'ozone sh bucket info o3://om:9862/74300-with-host/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:28:32.352" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:28:32.352" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20230103 10:28:26.789" endtime="20230103 10:28:32.352"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:28:32.354" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20230103 10:28:32.352" endtime="20230103 10:28:32.354"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:28:32.355" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:28:32.355" endtime="20230103 10:28:32.356"/>
</kw>
<status status="PASS" starttime="20230103 10:28:26.788" endtime="20230103 10:28:32.356"/>
</kw>
<msg timestamp="20230103 10:28:32.356" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:28:26.787" endtime="20230103 10:28:32.357"/>
</kw>
<msg timestamp="20230103 10:28:32.357" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20230103 10:28:26.786" endtime="20230103 10:28:32.357"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230103 10:28:32.358" endtime="20230103 10:28:32.358"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:28:32.366" level="INFO">Running command 'ozone sh bucket info o3://om:9862/74300-with-host/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:28:37.923" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:28:37.923" level="INFO">${output} = 100</msg>
<status status="PASS" starttime="20230103 10:28:32.361" endtime="20230103 10:28:37.923"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:28:37.925" level="INFO">100</msg>
<status status="PASS" starttime="20230103 10:28:37.924" endtime="20230103 10:28:37.925"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:28:37.926" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:28:37.925" endtime="20230103 10:28:37.926"/>
</kw>
<status status="PASS" starttime="20230103 10:28:32.361" endtime="20230103 10:28:37.926"/>
</kw>
<msg timestamp="20230103 10:28:37.926" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:28:32.360" endtime="20230103 10:28:37.927"/>
</kw>
<msg timestamp="20230103 10:28:37.927" level="INFO">${result} = 100</msg>
<status status="PASS" starttime="20230103 10:28:32.359" endtime="20230103 10:28:37.927"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>100</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230103 10:28:37.928" endtime="20230103 10:28:37.928"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:28:37.935" level="INFO">Running command 'ozone sh bucket setquota o3://om:9862/74300-with-host/bb1 --space-quota 1TB --namespace-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:28:43.655" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:28:43.655" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230103 10:28:37.930" endtime="20230103 10:28:43.656"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:28:43.657" level="INFO"/>
<status status="PASS" starttime="20230103 10:28:43.656" endtime="20230103 10:28:43.657"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:28:43.658" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:28:43.657" endtime="20230103 10:28:43.658"/>
</kw>
<status status="PASS" starttime="20230103 10:28:37.929" endtime="20230103 10:28:43.659"/>
</kw>
<msg timestamp="20230103 10:28:43.659" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:28:37.929" endtime="20230103 10:28:43.660"/>
</kw>
<status status="PASS" starttime="20230103 10:28:37.928" endtime="20230103 10:28:43.660"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:28:43.667" level="INFO">Running command 'ozone sh bucket info o3://om:9862/74300-with-host/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:28:49.600" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:28:49.601" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" starttime="20230103 10:28:43.663" endtime="20230103 10:28:49.601"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:28:49.602" level="INFO">1099511627776</msg>
<status status="PASS" starttime="20230103 10:28:49.601" endtime="20230103 10:28:49.603"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:28:49.603" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:28:49.603" endtime="20230103 10:28:49.604"/>
</kw>
<status status="PASS" starttime="20230103 10:28:43.662" endtime="20230103 10:28:49.604"/>
</kw>
<msg timestamp="20230103 10:28:49.604" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:28:43.662" endtime="20230103 10:28:49.605"/>
</kw>
<msg timestamp="20230103 10:28:49.605" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" starttime="20230103 10:28:43.661" endtime="20230103 10:28:49.605"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1099511627776</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230103 10:28:49.605" endtime="20230103 10:28:49.606"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:28:49.611" level="INFO">Running command 'ozone sh bucket info o3://om:9862/74300-with-host/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:28:55.766" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:28:55.766" level="INFO">${output} = 1000</msg>
<status status="PASS" starttime="20230103 10:28:49.608" endtime="20230103 10:28:55.766"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:28:55.768" level="INFO">1000</msg>
<status status="PASS" starttime="20230103 10:28:55.767" endtime="20230103 10:28:55.768"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:28:55.769" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:28:55.768" endtime="20230103 10:28:55.769"/>
</kw>
<status status="PASS" starttime="20230103 10:28:49.608" endtime="20230103 10:28:55.770"/>
</kw>
<msg timestamp="20230103 10:28:55.770" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:28:49.607" endtime="20230103 10:28:55.770"/>
</kw>
<msg timestamp="20230103 10:28:55.771" level="INFO">${result} = 1000</msg>
<status status="PASS" starttime="20230103 10:28:49.606" endtime="20230103 10:28:55.771"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1000</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230103 10:28:55.771" endtime="20230103 10:28:55.772"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '.[] | select(.name=="bb1") | .volumeName'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:28:55.777" level="INFO">Running command 'ozone sh bucket list o3://om:9862/74300-with-host/ | jq -r '.[] | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:29:01.971" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:29:01.971" level="INFO">${output} = 74300-with-host</msg>
<status status="PASS" starttime="20230103 10:28:55.774" endtime="20230103 10:29:01.971"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:29:01.973" level="INFO">74300-with-host</msg>
<status status="PASS" starttime="20230103 10:29:01.972" endtime="20230103 10:29:01.973"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:29:01.974" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:29:01.973" endtime="20230103 10:29:01.974"/>
</kw>
<status status="PASS" starttime="20230103 10:28:55.773" endtime="20230103 10:29:01.974"/>
</kw>
<msg timestamp="20230103 10:29:01.975" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:28:55.773" endtime="20230103 10:29:01.975"/>
</kw>
<msg timestamp="20230103 10:29:01.976" level="INFO">${result} = 74300-with-host</msg>
<status status="PASS" starttime="20230103 10:28:55.772" endtime="20230103 10:29:01.976"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${volume}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230103 10:29:01.976" endtime="20230103 10:29:01.976"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Test key handling" library="ozone-shell-lib">
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:29:01.984" level="INFO">Running command 'ozone sh key put o3://om:9862/74300-with-host/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:29:10.706" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:29:10.706" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230103 10:29:01.981" endtime="20230103 10:29:10.706"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:29:10.708" level="INFO"/>
<status status="PASS" starttime="20230103 10:29:10.707" endtime="20230103 10:29:10.708"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:29:10.709" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:29:10.709" endtime="20230103 10:29:10.710"/>
</kw>
<status status="PASS" starttime="20230103 10:29:01.979" endtime="20230103 10:29:10.710"/>
</kw>
<msg timestamp="20230103 10:29:10.710" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:29:01.979" endtime="20230103 10:29:10.711"/>
</kw>
<status status="PASS" starttime="20230103 10:29:01.978" endtime="20230103 10:29:10.711"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:29:10.716" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:29:10.719" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:29:10.719" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230103 10:29:10.713" endtime="20230103 10:29:10.719"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:29:10.721" level="INFO"/>
<status status="PASS" starttime="20230103 10:29:10.720" endtime="20230103 10:29:10.721"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:29:10.722" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:29:10.721" endtime="20230103 10:29:10.722"/>
</kw>
<status status="PASS" starttime="20230103 10:29:10.713" endtime="20230103 10:29:10.722"/>
</kw>
<msg timestamp="20230103 10:29:10.722" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:29:10.712" endtime="20230103 10:29:10.723"/>
</kw>
<status status="PASS" starttime="20230103 10:29:10.712" endtime="20230103 10:29:10.724"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:29:10.729" level="INFO">Running command 'ozone sh key get o3://om:9862/74300-with-host/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:29:20.059" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:29:20.059" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230103 10:29:10.726" endtime="20230103 10:29:20.060"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:29:20.068" level="INFO"/>
<status status="PASS" starttime="20230103 10:29:20.066" endtime="20230103 10:29:20.068"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:29:20.069" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:29:20.068" endtime="20230103 10:29:20.069"/>
</kw>
<status status="PASS" starttime="20230103 10:29:10.725" endtime="20230103 10:29:20.069"/>
</kw>
<msg timestamp="20230103 10:29:20.070" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:29:10.725" endtime="20230103 10:29:20.071"/>
</kw>
<status status="PASS" starttime="20230103 10:29:10.724" endtime="20230103 10:29:20.071"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:29:20.077" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:29:20.081" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:29:20.081" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230103 10:29:20.074" endtime="20230103 10:29:20.081"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:29:20.082" level="INFO"/>
<status status="PASS" starttime="20230103 10:29:20.081" endtime="20230103 10:29:20.082"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:29:20.084" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:29:20.083" endtime="20230103 10:29:20.084"/>
</kw>
<status status="PASS" starttime="20230103 10:29:20.073" endtime="20230103 10:29:20.084"/>
</kw>
<msg timestamp="20230103 10:29:20.085" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:29:20.073" endtime="20230103 10:29:20.085"/>
</kw>
<status status="PASS" starttime="20230103 10:29:20.072" endtime="20230103 10:29:20.086"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:29:20.091" level="INFO">Running command 'ozone sh key put -t RATIS o3://om:9862/74300-with-host/bb1/key1_RATIS /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:29:29.528" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:29:29.528" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230103 10:29:20.088" endtime="20230103 10:29:29.528"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:29:29.529" level="INFO"/>
<status status="PASS" starttime="20230103 10:29:29.528" endtime="20230103 10:29:29.529"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:29:29.532" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:29:29.530" endtime="20230103 10:29:29.532"/>
</kw>
<status status="PASS" starttime="20230103 10:29:20.087" endtime="20230103 10:29:29.532"/>
</kw>
<msg timestamp="20230103 10:29:29.532" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:29:20.087" endtime="20230103 10:29:29.533"/>
</kw>
<status status="PASS" starttime="20230103 10:29:20.086" endtime="20230103 10:29:29.534"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1_RATIS</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:29:29.539" level="INFO">Running command 'rm -f /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:29:29.543" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:29:29.543" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230103 10:29:29.536" endtime="20230103 10:29:29.544"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:29:29.545" level="INFO"/>
<status status="PASS" starttime="20230103 10:29:29.544" endtime="20230103 10:29:29.546"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:29:29.546" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:29:29.546" endtime="20230103 10:29:29.546"/>
</kw>
<status status="PASS" starttime="20230103 10:29:29.535" endtime="20230103 10:29:29.547"/>
</kw>
<msg timestamp="20230103 10:29:29.547" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:29:29.535" endtime="20230103 10:29:29.548"/>
</kw>
<status status="PASS" starttime="20230103 10:29:29.534" endtime="20230103 10:29:29.548"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:29:29.553" level="INFO">Running command 'ozone sh key get o3://om:9862/74300-with-host/bb1/key1_RATIS /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:29:38.048" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:29:38.048" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230103 10:29:29.550" endtime="20230103 10:29:38.048"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:29:38.050" level="INFO"/>
<status status="PASS" starttime="20230103 10:29:38.049" endtime="20230103 10:29:38.050"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:29:38.051" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:29:38.050" endtime="20230103 10:29:38.051"/>
</kw>
<status status="PASS" starttime="20230103 10:29:29.549" endtime="20230103 10:29:38.051"/>
</kw>
<msg timestamp="20230103 10:29:38.053" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:29:29.549" endtime="20230103 10:29:38.055"/>
</kw>
<status status="PASS" starttime="20230103 10:29:29.548" endtime="20230103 10:29:38.055"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:29:38.061" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:29:38.065" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:29:38.065" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230103 10:29:38.058" endtime="20230103 10:29:38.065"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:29:38.067" level="INFO"/>
<status status="PASS" starttime="20230103 10:29:38.066" endtime="20230103 10:29:38.067"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:29:38.068" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:29:38.067" endtime="20230103 10:29:38.068"/>
</kw>
<status status="PASS" starttime="20230103 10:29:38.057" endtime="20230103 10:29:38.068"/>
</kw>
<msg timestamp="20230103 10:29:38.069" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:29:38.056" endtime="20230103 10:29:38.070"/>
</kw>
<status status="PASS" starttime="20230103 10:29:38.055" endtime="20230103 10:29:38.070"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:29:38.077" level="INFO">Running command 'ozone sh key info o3://om:9862/74300-with-host/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")' 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:29:44.534" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:29:44.534" level="INFO">${output} = {
  "volumeName": "74300-with-host",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17539,
  "creationTime": "2023-01-03T10:29:25.695Z",
  "modificationTime": "2023-01-03T10:29:28.937Z",...</msg>
<status status="PASS" starttime="20230103 10:29:38.073" endtime="20230103 10:29:44.534"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:29:44.536" level="INFO">{
  "volumeName": "74300-with-host",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17539,
  "creationTime": "2023-01-03T10:29:25.695Z",
  "modificationTime": "2023-01-03T10:29:28.937Z",
  "replicationConfig": {
    "replicationFactor": "THREE",
    "requiredNodes": 3,
    "replicationType": "RATIS"
  },
  "metadata": {},
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 111677748019200110,
      "length": 17539,
      "offset": 0,
      "keyOffset": 0
    }
  ]
}</msg>
<status status="PASS" starttime="20230103 10:29:44.535" endtime="20230103 10:29:44.536"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:29:44.537" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:29:44.536" endtime="20230103 10:29:44.537"/>
</kw>
<status status="PASS" starttime="20230103 10:29:38.072" endtime="20230103 10:29:44.538"/>
</kw>
<msg timestamp="20230103 10:29:44.538" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:29:38.072" endtime="20230103 10:29:44.539"/>
</kw>
<msg timestamp="20230103 10:29:44.539" level="INFO">${result} = {
  "volumeName": "74300-with-host",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17539,
  "creationTime": "2023-01-03T10:29:25.695Z",
  "modificationTime": "2023-01-03T10:29:28.937Z",...</msg>
<status status="PASS" starttime="20230103 10:29:38.070" endtime="20230103 10:29:44.539"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230103 10:29:44.540" endtime="20230103 10:29:44.540"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:29:44.557" level="INFO">Running command 'ozone sh key delete o3://om:9862/74300-with-host/bb1/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:29:50.377" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:29:50.377" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230103 10:29:44.555" endtime="20230103 10:29:50.378"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:29:50.379" level="INFO"/>
<status status="PASS" starttime="20230103 10:29:50.378" endtime="20230103 10:29:50.380"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:29:50.381" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:29:50.380" endtime="20230103 10:29:50.381"/>
</kw>
<status status="PASS" starttime="20230103 10:29:44.542" endtime="20230103 10:29:50.381"/>
</kw>
<msg timestamp="20230103 10:29:50.382" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:29:44.541" endtime="20230103 10:29:50.382"/>
</kw>
<status status="PASS" starttime="20230103 10:29:44.540" endtime="20230103 10:29:50.383"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:29:50.389" level="INFO">Running command 'ozone sh key cp o3://om:9862/74300-with-host/bb1 key1 key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:29:59.816" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:29:59.816" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230103 10:29:50.386" endtime="20230103 10:29:59.816"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:29:59.818" level="INFO"/>
<status status="PASS" starttime="20230103 10:29:59.817" endtime="20230103 10:29:59.818"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:29:59.819" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:29:59.818" endtime="20230103 10:29:59.819"/>
</kw>
<status status="PASS" starttime="20230103 10:29:50.385" endtime="20230103 10:29:59.819"/>
</kw>
<msg timestamp="20230103 10:29:59.819" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:29:50.384" endtime="20230103 10:29:59.820"/>
</kw>
<status status="PASS" starttime="20230103 10:29:50.383" endtime="20230103 10:29:59.820"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:29:59.826" level="INFO">Running command 'rm -f /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:29:59.829" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:29:59.830" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230103 10:29:59.822" endtime="20230103 10:29:59.830"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:29:59.832" level="INFO"/>
<status status="PASS" starttime="20230103 10:29:59.830" endtime="20230103 10:29:59.832"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:29:59.833" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:29:59.832" endtime="20230103 10:29:59.833"/>
</kw>
<status status="PASS" starttime="20230103 10:29:59.821" endtime="20230103 10:29:59.834"/>
</kw>
<msg timestamp="20230103 10:29:59.834" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:29:59.821" endtime="20230103 10:29:59.834"/>
</kw>
<status status="PASS" starttime="20230103 10:29:59.820" endtime="20230103 10:29:59.835"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:29:59.841" level="INFO">Running command 'ozone sh key get o3://om:9862/74300-with-host/bb1/key1-copy /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:30:08.193" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:30:08.193" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230103 10:29:59.838" endtime="20230103 10:30:08.193"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:30:08.195" level="INFO"/>
<status status="PASS" starttime="20230103 10:30:08.194" endtime="20230103 10:30:08.195"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:30:08.196" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:30:08.195" endtime="20230103 10:30:08.196"/>
</kw>
<status status="PASS" starttime="20230103 10:29:59.837" endtime="20230103 10:30:08.197"/>
</kw>
<msg timestamp="20230103 10:30:08.197" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:29:59.836" endtime="20230103 10:30:08.198"/>
</kw>
<status status="PASS" starttime="20230103 10:29:59.835" endtime="20230103 10:30:08.198"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:30:08.204" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:30:08.207" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:30:08.207" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230103 10:30:08.200" endtime="20230103 10:30:08.208"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:30:08.209" level="INFO"/>
<status status="PASS" starttime="20230103 10:30:08.208" endtime="20230103 10:30:08.209"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:30:08.210" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:30:08.209" endtime="20230103 10:30:08.210"/>
</kw>
<status status="PASS" starttime="20230103 10:30:08.200" endtime="20230103 10:30:08.210"/>
</kw>
<msg timestamp="20230103 10:30:08.210" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:30:08.199" endtime="20230103 10:30:08.211"/>
</kw>
<status status="PASS" starttime="20230103 10:30:08.199" endtime="20230103 10:30:08.212"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:30:08.217" level="INFO">Running command 'ozone sh key delete o3://om:9862/74300-with-host/bb1/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:30:13.668" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:30:13.668" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230103 10:30:08.214" endtime="20230103 10:30:13.668"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:30:13.670" level="INFO"/>
<status status="PASS" starttime="20230103 10:30:13.669" endtime="20230103 10:30:13.670"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:30:13.671" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:30:13.670" endtime="20230103 10:30:13.671"/>
</kw>
<status status="PASS" starttime="20230103 10:30:08.213" endtime="20230103 10:30:13.672"/>
</kw>
<msg timestamp="20230103 10:30:13.672" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:30:08.213" endtime="20230103 10:30:13.673"/>
</kw>
<status status="PASS" starttime="20230103 10:30:08.212" endtime="20230103 10:30:13.674"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:30:13.678" level="INFO">Running command 'ozone sh key get o3://om:9862/74300-with-host/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:30:19.402" level="INFO">${rc} = 255</msg>
<msg timestamp="20230103 10:30:19.403" level="INFO">${output} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20230103 10:30:13.675" endtime="20230103 10:30:19.403"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:30:19.405" level="INFO">/tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20230103 10:30:19.403" endtime="20230103 10:30:19.405"/>
</kw>
<msg timestamp="20230103 10:30:19.406" level="INFO">${result} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20230103 10:30:13.674" endtime="20230103 10:30:19.406"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230103 10:30:19.406" endtime="20230103 10:30:19.407"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:30:19.413" level="INFO">Running command 'ozone sh key get --force o3://om:9862/74300-with-host/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:30:27.684" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:30:27.684" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230103 10:30:19.410" endtime="20230103 10:30:27.685"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:30:27.687" level="INFO"/>
<status status="PASS" starttime="20230103 10:30:27.685" endtime="20230103 10:30:27.687"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:30:27.688" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:30:27.687" endtime="20230103 10:30:27.688"/>
</kw>
<status status="PASS" starttime="20230103 10:30:19.409" endtime="20230103 10:30:27.688"/>
</kw>
<msg timestamp="20230103 10:30:27.688" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:30:19.408" endtime="20230103 10:30:27.689"/>
</kw>
<msg timestamp="20230103 10:30:27.690" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230103 10:30:19.407" endtime="20230103 10:30:27.690"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230103 10:30:27.690" endtime="20230103 10:30:27.690"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:30:27.699" level="INFO">Running command 'ozone sh key info o3://om:9862/74300-with-host/bb1/key1 | jq -r '. | select(.name=="key1")' 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:30:33.850" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:30:33.850" level="INFO">${output} = {
  "volumeName": "74300-with-host",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17539,
  "creationTime": "2023-01-03T10:29:07.349Z",
  "modificationTime": "2023-01-03T10:29:10.243Z",
  "re...</msg>
<status status="PASS" starttime="20230103 10:30:27.695" endtime="20230103 10:30:33.851"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:30:33.853" level="INFO">{
  "volumeName": "74300-with-host",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17539,
  "creationTime": "2023-01-03T10:29:07.349Z",
  "modificationTime": "2023-01-03T10:29:10.243Z",
  "replicationConfig": {
    "replicationFactor": "THREE",
    "requiredNodes": 3,
    "replicationType": "RATIS"
  },
  "metadata": {},
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 111677748019200110,
      "length": 17539,
      "offset": 0,
      "keyOffset": 0
    }
  ]
}</msg>
<status status="PASS" starttime="20230103 10:30:33.852" endtime="20230103 10:30:33.853"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:30:33.854" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:30:33.853" endtime="20230103 10:30:33.854"/>
</kw>
<status status="PASS" starttime="20230103 10:30:27.694" endtime="20230103 10:30:33.855"/>
</kw>
<msg timestamp="20230103 10:30:33.855" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:30:27.693" endtime="20230103 10:30:33.855"/>
</kw>
<msg timestamp="20230103 10:30:33.856" level="INFO">${result} = {
  "volumeName": "74300-with-host",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17539,
  "creationTime": "2023-01-03T10:29:07.349Z",
  "modificationTime": "2023-01-03T10:29:10.243Z",
  "re...</msg>
<status status="PASS" starttime="20230103 10:30:27.691" endtime="20230103 10:30:33.856"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230103 10:30:33.856" endtime="20230103 10:30:33.857"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.[] | select(.name=="key1") | .name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:30:33.864" level="INFO">Running command 'ozone sh key list o3://om:9862/74300-with-host/bb1 | jq -r '.[] | select(.name=="key1") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:30:40.001" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:30:40.001" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20230103 10:30:33.861" endtime="20230103 10:30:40.001"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:30:40.003" level="INFO">key1</msg>
<status status="PASS" starttime="20230103 10:30:40.002" endtime="20230103 10:30:40.003"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:30:40.004" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:30:40.003" endtime="20230103 10:30:40.004"/>
</kw>
<status status="PASS" starttime="20230103 10:30:33.860" endtime="20230103 10:30:40.004"/>
</kw>
<msg timestamp="20230103 10:30:40.004" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:30:33.860" endtime="20230103 10:30:40.005"/>
</kw>
<msg timestamp="20230103 10:30:40.005" level="INFO">${result} = key1</msg>
<status status="PASS" starttime="20230103 10:30:33.857" endtime="20230103 10:30:40.005"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230103 10:30:40.005" endtime="20230103 10:30:40.006"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:30:40.011" level="INFO">Running command 'ozone sh key rename o3://om:9862/74300-with-host/bb1 key1 key2 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:30:45.494" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:30:45.494" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230103 10:30:40.008" endtime="20230103 10:30:45.494"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:30:45.497" level="INFO"/>
<status status="PASS" starttime="20230103 10:30:45.495" endtime="20230103 10:30:45.497"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:30:45.498" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:30:45.497" endtime="20230103 10:30:45.498"/>
</kw>
<status status="PASS" starttime="20230103 10:30:40.008" endtime="20230103 10:30:45.498"/>
</kw>
<msg timestamp="20230103 10:30:45.499" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:30:40.007" endtime="20230103 10:30:45.500"/>
</kw>
<status status="PASS" starttime="20230103 10:30:40.006" endtime="20230103 10:30:45.500"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:30:45.506" level="INFO">Running command 'ozone sh key list o3://om:9862/74300-with-host/bb1 | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:30:51.253" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:30:51.253" level="INFO">${output} = key2</msg>
<status status="PASS" starttime="20230103 10:30:45.503" endtime="20230103 10:30:51.253"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:30:51.255" level="INFO">key2</msg>
<status status="PASS" starttime="20230103 10:30:51.254" endtime="20230103 10:30:51.255"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:30:51.256" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:30:51.255" endtime="20230103 10:30:51.257"/>
</kw>
<status status="PASS" starttime="20230103 10:30:45.502" endtime="20230103 10:30:51.257"/>
</kw>
<msg timestamp="20230103 10:30:51.257" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:30:45.501" endtime="20230103 10:30:51.258"/>
</kw>
<msg timestamp="20230103 10:30:51.258" level="INFO">${result} = key2</msg>
<status status="PASS" starttime="20230103 10:30:45.500" endtime="20230103 10:30:51.259"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230103 10:30:51.259" endtime="20230103 10:30:51.260"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:30:51.266" level="INFO">Running command 'ozone sh key delete o3://om:9862/74300-with-host/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:30:56.921" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:30:56.921" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230103 10:30:51.262" endtime="20230103 10:30:56.921"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:30:56.923" level="INFO"/>
<status status="PASS" starttime="20230103 10:30:56.922" endtime="20230103 10:30:56.923"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:30:56.924" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:30:56.923" endtime="20230103 10:30:56.924"/>
</kw>
<status status="PASS" starttime="20230103 10:30:51.261" endtime="20230103 10:30:56.924"/>
</kw>
<msg timestamp="20230103 10:30:56.924" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:30:51.261" endtime="20230103 10:30:56.925"/>
</kw>
<status status="PASS" starttime="20230103 10:30:51.260" endtime="20230103 10:30:56.925"/>
</kw>
<status status="PASS" starttime="20230103 10:29:01.977" endtime="20230103 10:30:56.925"/>
</kw>
<status status="PASS" starttime="20230103 10:29:01.977" endtime="20230103 10:30:56.926"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --space-quota ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:30:56.931" level="INFO">Running command 'ozone sh volume clrquota --space-quota o3://om:9862/74300-with-host 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:31:02.738" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:31:02.738" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230103 10:30:56.928" endtime="20230103 10:31:02.738"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:31:02.740" level="INFO"/>
<status status="PASS" starttime="20230103 10:31:02.739" endtime="20230103 10:31:02.741"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:31:02.742" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:31:02.741" endtime="20230103 10:31:02.742"/>
</kw>
<status status="PASS" starttime="20230103 10:30:56.927" endtime="20230103 10:31:02.743"/>
</kw>
<msg timestamp="20230103 10:31:02.743" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:30:56.927" endtime="20230103 10:31:02.744"/>
</kw>
<status status="PASS" starttime="20230103 10:30:56.926" endtime="20230103 10:31:02.744"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:31:02.751" level="INFO">Running command 'ozone sh volume info o3://om:9862/74300-with-host | jq -r '. | select(.name=="74300-with-host") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:31:08.302" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:31:08.302" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20230103 10:31:02.747" endtime="20230103 10:31:08.302"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:31:08.304" level="INFO">-1</msg>
<status status="PASS" starttime="20230103 10:31:08.303" endtime="20230103 10:31:08.304"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:31:08.305" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:31:08.304" endtime="20230103 10:31:08.305"/>
</kw>
<status status="PASS" starttime="20230103 10:31:02.746" endtime="20230103 10:31:08.305"/>
</kw>
<msg timestamp="20230103 10:31:08.305" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:31:02.746" endtime="20230103 10:31:08.306"/>
</kw>
<msg timestamp="20230103 10:31:08.306" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20230103 10:31:02.744" endtime="20230103 10:31:08.307"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230103 10:31:08.307" endtime="20230103 10:31:08.307"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --namespace-quota ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:31:08.313" level="INFO">Running command 'ozone sh volume clrquota --namespace-quota o3://om:9862/74300-with-host 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:31:14.139" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:31:14.139" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230103 10:31:08.310" endtime="20230103 10:31:14.139"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:31:14.141" level="INFO"/>
<status status="PASS" starttime="20230103 10:31:14.140" endtime="20230103 10:31:14.141"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:31:14.142" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:31:14.141" endtime="20230103 10:31:14.142"/>
</kw>
<status status="PASS" starttime="20230103 10:31:08.309" endtime="20230103 10:31:14.144"/>
</kw>
<msg timestamp="20230103 10:31:14.144" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:31:08.308" endtime="20230103 10:31:14.145"/>
</kw>
<status status="PASS" starttime="20230103 10:31:08.307" endtime="20230103 10:31:14.145"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:31:14.157" level="INFO">Running command 'ozone sh volume info o3://om:9862/74300-with-host | jq -r '. | select(.name=="74300-with-host") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:31:19.928" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:31:19.928" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20230103 10:31:14.152" endtime="20230103 10:31:19.929"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:31:19.930" level="INFO">-1</msg>
<status status="PASS" starttime="20230103 10:31:19.929" endtime="20230103 10:31:19.930"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:31:19.931" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:31:19.930" endtime="20230103 10:31:19.931"/>
</kw>
<status status="PASS" starttime="20230103 10:31:14.150" endtime="20230103 10:31:19.931"/>
</kw>
<msg timestamp="20230103 10:31:19.931" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:31:14.147" endtime="20230103 10:31:19.932"/>
</kw>
<msg timestamp="20230103 10:31:19.932" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20230103 10:31:14.145" endtime="20230103 10:31:19.932"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230103 10:31:19.933" endtime="20230103 10:31:19.933"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --space-quota ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:31:19.939" level="INFO">Running command 'ozone sh bucket clrquota --space-quota o3://om:9862/74300-with-host/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:31:25.609" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:31:25.609" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230103 10:31:19.936" endtime="20230103 10:31:25.609"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:31:25.611" level="INFO"/>
<status status="PASS" starttime="20230103 10:31:25.610" endtime="20230103 10:31:25.611"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:31:25.612" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:31:25.612" endtime="20230103 10:31:25.612"/>
</kw>
<status status="PASS" starttime="20230103 10:31:19.935" endtime="20230103 10:31:25.613"/>
</kw>
<msg timestamp="20230103 10:31:25.613" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:31:19.935" endtime="20230103 10:31:25.614"/>
</kw>
<status status="PASS" starttime="20230103 10:31:19.933" endtime="20230103 10:31:25.614"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:31:25.622" level="INFO">Running command 'ozone sh bucket info o3://om:9862/74300-with-host/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:31:31.247" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:31:31.247" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20230103 10:31:25.616" endtime="20230103 10:31:31.247"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:31:31.249" level="INFO">-1</msg>
<status status="PASS" starttime="20230103 10:31:31.248" endtime="20230103 10:31:31.249"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:31:31.250" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:31:31.250" endtime="20230103 10:31:31.251"/>
</kw>
<status status="PASS" starttime="20230103 10:31:25.616" endtime="20230103 10:31:31.252"/>
</kw>
<msg timestamp="20230103 10:31:31.252" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:31:25.615" endtime="20230103 10:31:31.254"/>
</kw>
<msg timestamp="20230103 10:31:31.254" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20230103 10:31:25.614" endtime="20230103 10:31:31.254"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230103 10:31:31.255" endtime="20230103 10:31:31.256"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --namespace-quota ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:31:31.261" level="INFO">Running command 'ozone sh bucket clrquota --namespace-quota o3://om:9862/74300-with-host/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:31:36.899" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:31:36.899" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230103 10:31:31.258" endtime="20230103 10:31:36.899"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:31:36.901" level="INFO"/>
<status status="PASS" starttime="20230103 10:31:36.900" endtime="20230103 10:31:36.901"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:31:36.902" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:31:36.901" endtime="20230103 10:31:36.902"/>
</kw>
<status status="PASS" starttime="20230103 10:31:31.257" endtime="20230103 10:31:36.902"/>
</kw>
<msg timestamp="20230103 10:31:36.903" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:31:31.257" endtime="20230103 10:31:36.903"/>
</kw>
<status status="PASS" starttime="20230103 10:31:31.256" endtime="20230103 10:31:36.904"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:31:36.909" level="INFO">Running command 'ozone sh bucket info o3://om:9862/74300-with-host/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:31:42.896" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:31:42.896" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20230103 10:31:36.906" endtime="20230103 10:31:42.896"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:31:42.898" level="INFO">-1</msg>
<status status="PASS" starttime="20230103 10:31:42.897" endtime="20230103 10:31:42.898"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:31:42.899" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:31:42.898" endtime="20230103 10:31:42.899"/>
</kw>
<status status="PASS" starttime="20230103 10:31:36.906" endtime="20230103 10:31:42.900"/>
</kw>
<msg timestamp="20230103 10:31:42.900" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:31:36.905" endtime="20230103 10:31:42.900"/>
</kw>
<msg timestamp="20230103 10:31:42.901" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20230103 10:31:36.904" endtime="20230103 10:31:42.901"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230103 10:31:42.901" endtime="20230103 10:31:42.902"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:31:42.907" level="INFO">Running command 'ozone sh bucket delete o3://om:9862/74300-with-host/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:31:48.539" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:31:48.540" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230103 10:31:42.904" endtime="20230103 10:31:48.540"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:31:48.541" level="INFO"/>
<status status="PASS" starttime="20230103 10:31:48.540" endtime="20230103 10:31:48.541"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:31:48.542" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:31:48.541" endtime="20230103 10:31:48.542"/>
</kw>
<status status="PASS" starttime="20230103 10:31:42.903" endtime="20230103 10:31:48.543"/>
</kw>
<msg timestamp="20230103 10:31:48.543" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:31:42.903" endtime="20230103 10:31:48.543"/>
</kw>
<status status="PASS" starttime="20230103 10:31:42.902" endtime="20230103 10:31:48.544"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:31:48.548" level="INFO">Running command 'ozone sh volume delete o3://om:9862/74300-with-host 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:31:53.979" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:31:53.979" level="INFO">${output} = Volume 74300-with-host is deleted</msg>
<status status="PASS" starttime="20230103 10:31:48.546" endtime="20230103 10:31:53.979"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:31:53.980" level="INFO">Volume 74300-with-host is deleted</msg>
<status status="PASS" starttime="20230103 10:31:53.979" endtime="20230103 10:31:53.981"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:31:53.981" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:31:53.981" endtime="20230103 10:31:53.982"/>
</kw>
<status status="PASS" starttime="20230103 10:31:48.545" endtime="20230103 10:31:53.982"/>
</kw>
<msg timestamp="20230103 10:31:53.982" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:31:48.545" endtime="20230103 10:31:53.983"/>
</kw>
<status status="PASS" starttime="20230103 10:31:48.544" endtime="20230103 10:31:53.983"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:31:53.989" level="INFO">Running command 'ozone sh volume create o3://om:9862/74300-with-host 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:31:59.389" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:31:59.389" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230103 10:31:53.986" endtime="20230103 10:31:59.390"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:31:59.392" level="INFO"/>
<status status="PASS" starttime="20230103 10:31:59.390" endtime="20230103 10:31:59.392"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:31:59.393" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:31:59.392" endtime="20230103 10:31:59.393"/>
</kw>
<status status="PASS" starttime="20230103 10:31:53.985" endtime="20230103 10:31:59.393"/>
</kw>
<msg timestamp="20230103 10:31:59.393" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:31:53.985" endtime="20230103 10:31:59.394"/>
</kw>
<status status="PASS" starttime="20230103 10:31:53.983" endtime="20230103 10:31:59.395"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:31:59.400" level="INFO">Running command 'ozone sh volume info o3://om:9862/74300-with-host | jq -r '. | select(.name=="74300-with-host") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:32:04.951" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:32:04.951" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20230103 10:31:59.397" endtime="20230103 10:32:04.951"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:32:04.953" level="INFO">-1</msg>
<status status="PASS" starttime="20230103 10:32:04.952" endtime="20230103 10:32:04.953"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:32:04.954" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:32:04.953" endtime="20230103 10:32:04.954"/>
</kw>
<status status="PASS" starttime="20230103 10:31:59.396" endtime="20230103 10:32:04.955"/>
</kw>
<msg timestamp="20230103 10:32:04.955" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:31:59.396" endtime="20230103 10:32:04.956"/>
</kw>
<msg timestamp="20230103 10:32:04.956" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20230103 10:31:59.395" endtime="20230103 10:32:04.956"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230103 10:32:04.956" endtime="20230103 10:32:04.957"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:32:04.964" level="INFO">Running command 'ozone sh volume info o3://om:9862/74300-with-host | jq -r '. | select(.name=="74300-with-host") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:32:10.925" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:32:10.925" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20230103 10:32:04.960" endtime="20230103 10:32:10.925"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:32:10.927" level="INFO">-1</msg>
<status status="PASS" starttime="20230103 10:32:10.926" endtime="20230103 10:32:10.927"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:32:10.928" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:32:10.927" endtime="20230103 10:32:10.928"/>
</kw>
<status status="PASS" starttime="20230103 10:32:04.959" endtime="20230103 10:32:10.929"/>
</kw>
<msg timestamp="20230103 10:32:10.929" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:32:04.959" endtime="20230103 10:32:10.930"/>
</kw>
<msg timestamp="20230103 10:32:10.930" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20230103 10:32:04.957" endtime="20230103 10:32:10.930"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230103 10:32:10.931" endtime="20230103 10:32:10.931"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:32:10.937" level="INFO">Running command 'ozone sh bucket create o3://om:9862/74300-with-host/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:32:16.350" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:32:16.351" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230103 10:32:10.934" endtime="20230103 10:32:16.351"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:32:16.352" level="INFO"/>
<status status="PASS" starttime="20230103 10:32:16.351" endtime="20230103 10:32:16.352"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:32:16.353" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:32:16.353" endtime="20230103 10:32:16.353"/>
</kw>
<status status="PASS" starttime="20230103 10:32:10.933" endtime="20230103 10:32:16.354"/>
</kw>
<msg timestamp="20230103 10:32:16.354" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:32:10.932" endtime="20230103 10:32:16.354"/>
</kw>
<status status="PASS" starttime="20230103 10:32:10.931" endtime="20230103 10:32:16.355"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:32:16.360" level="INFO">Running command 'ozone sh bucket info o3://om:9862/74300-with-host/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:32:22.297" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:32:22.298" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20230103 10:32:16.358" endtime="20230103 10:32:22.298"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:32:22.300" level="INFO">-1</msg>
<status status="PASS" starttime="20230103 10:32:22.298" endtime="20230103 10:32:22.300"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:32:22.300" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:32:22.300" endtime="20230103 10:32:22.301"/>
</kw>
<status status="PASS" starttime="20230103 10:32:16.357" endtime="20230103 10:32:22.301"/>
</kw>
<msg timestamp="20230103 10:32:22.302" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:32:16.356" endtime="20230103 10:32:22.302"/>
</kw>
<msg timestamp="20230103 10:32:22.303" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20230103 10:32:16.355" endtime="20230103 10:32:22.303"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230103 10:32:22.303" endtime="20230103 10:32:22.304"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:32:22.311" level="INFO">Running command 'ozone sh bucket info o3://om:9862/74300-with-host/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:32:27.949" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:32:27.949" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20230103 10:32:22.307" endtime="20230103 10:32:27.949"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:32:27.951" level="INFO">-1</msg>
<status status="PASS" starttime="20230103 10:32:27.950" endtime="20230103 10:32:27.951"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:32:27.952" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:32:27.952" endtime="20230103 10:32:27.952"/>
</kw>
<status status="PASS" starttime="20230103 10:32:22.306" endtime="20230103 10:32:27.953"/>
</kw>
<msg timestamp="20230103 10:32:27.953" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:32:22.306" endtime="20230103 10:32:27.954"/>
</kw>
<msg timestamp="20230103 10:32:27.954" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20230103 10:32:22.304" endtime="20230103 10:32:27.954"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230103 10:32:27.954" endtime="20230103 10:32:27.955"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:32:27.961" level="INFO">Running command 'ozone sh bucket delete o3://om:9862/74300-with-host/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:32:33.384" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:32:33.385" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230103 10:32:27.957" endtime="20230103 10:32:33.385"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:32:33.386" level="INFO"/>
<status status="PASS" starttime="20230103 10:32:33.385" endtime="20230103 10:32:33.387"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:32:33.389" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:32:33.387" endtime="20230103 10:32:33.390"/>
</kw>
<status status="PASS" starttime="20230103 10:32:27.957" endtime="20230103 10:32:33.390"/>
</kw>
<msg timestamp="20230103 10:32:33.391" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:32:27.956" endtime="20230103 10:32:33.391"/>
</kw>
<status status="PASS" starttime="20230103 10:32:27.955" endtime="20230103 10:32:33.392"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:32:33.398" level="INFO">Running command 'ozone sh volume delete o3://om:9862/74300-with-host 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:32:38.602" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:32:38.602" level="INFO">${output} = Volume 74300-with-host is deleted</msg>
<status status="PASS" starttime="20230103 10:32:33.394" endtime="20230103 10:32:38.603"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:32:38.604" level="INFO">Volume 74300-with-host is deleted</msg>
<status status="PASS" starttime="20230103 10:32:38.603" endtime="20230103 10:32:38.604"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:32:38.605" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:32:38.604" endtime="20230103 10:32:38.605"/>
</kw>
<status status="PASS" starttime="20230103 10:32:33.394" endtime="20230103 10:32:38.606"/>
</kw>
<msg timestamp="20230103 10:32:38.606" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:32:33.393" endtime="20230103 10:32:38.606"/>
</kw>
<status status="PASS" starttime="20230103 10:32:33.392" endtime="20230103 10:32:38.607"/>
</kw>
<status status="PASS" starttime="20230103 10:27:40.886" endtime="20230103 10:32:38.607"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230103 10:27:40.883" endtime="20230103 10:32:38.607"/>
</test>
<test id="s1-s3-s5-t2" name="RpcClient with execution errors" line="29">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230103 10:32:38.610" endtime="20230103 10:32:38.610"/>
</kw>
<kw name="Test ozone shell errors" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-with-errors</arg>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota invalid</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:32:38.616" level="INFO">Running command 'ozone sh volume create o3://om:9862/74300-with-errors --space-quota invalid 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:32:43.809" level="INFO">${rc} = 255</msg>
<msg timestamp="20230103 10:32:43.809" level="INFO">${output} = Invalid values for quota, to ensure that the Quota format is legal(supported values are B, KB, MB, GB and TB). And the quota value cannot be greater than Long.MAX_VALUE BYTES</msg>
<status status="PASS" starttime="20230103 10:32:38.612" endtime="20230103 10:32:43.809"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:32:43.811" level="INFO">Invalid values for quota, to ensure that the Quota format is legal(supported values are B, KB, MB, GB and TB). And the quota value cannot be greater than Long.MAX_VALUE BYTES</msg>
<status status="PASS" starttime="20230103 10:32:43.810" endtime="20230103 10:32:43.811"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:32:43.812" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:32:43.811" endtime="20230103 10:32:43.812"/>
</kw>
<msg timestamp="20230103 10:32:43.813" level="INFO">${result} = Invalid values for quota, to ensure that the Quota format is legal(supported values are B, KB, MB, GB and TB). And the quota value cannot be greater than Long.MAX_VALUE BYTES</msg>
<status status="PASS" starttime="20230103 10:32:38.611" endtime="20230103 10:32:43.813"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Invalid</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230103 10:32:43.813" endtime="20230103 10:32:43.814"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:32:43.818" level="INFO">Running command 'ozone sh volume create o3://om:9862/74300-with-errors 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:32:50.303" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:32:50.303" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230103 10:32:43.815" endtime="20230103 10:32:50.303"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:32:50.305" level="INFO"/>
<status status="PASS" starttime="20230103 10:32:50.304" endtime="20230103 10:32:50.305"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:32:50.306" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:32:50.305" endtime="20230103 10:32:50.306"/>
</kw>
<status status="PASS" starttime="20230103 10:32:43.814" endtime="20230103 10:32:50.306"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bucket_1</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:32:50.311" level="INFO">Running command 'ozone sh bucket create o3://om:9862/74300-with-errors/bucket_1 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:32:55.862" level="INFO">${rc} = 255</msg>
<msg timestamp="20230103 10:32:55.862" level="INFO">${output} = INVALID_BUCKET_NAME Bucket or Volume name has an unsupported character : _</msg>
<status status="PASS" starttime="20230103 10:32:50.308" endtime="20230103 10:32:55.862"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:32:55.864" level="INFO">INVALID_BUCKET_NAME Bucket or Volume name has an unsupported character : _</msg>
<status status="PASS" starttime="20230103 10:32:55.863" endtime="20230103 10:32:55.864"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:32:55.865" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:32:55.865" endtime="20230103 10:32:55.866"/>
</kw>
<msg timestamp="20230103 10:32:55.866" level="INFO">${result} = INVALID_BUCKET_NAME Bucket or Volume name has an unsupported character : _</msg>
<status status="PASS" starttime="20230103 10:32:50.307" endtime="20230103 10:32:55.866"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>INVALID_BUCKET_NAME</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230103 10:32:55.867" endtime="20230103 10:32:55.867"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bucket1 --layout Invalid</arg>
<arg>2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:32:55.873" level="INFO">Running command 'ozone sh bucket create o3://om:9862/74300-with-errors/bucket1 --layout Invalid 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:32:58.835" level="INFO">${rc} = 2</msg>
<msg timestamp="20230103 10:32:58.836" level="INFO">${output} = Invalid value for option '--layout': expected one of [FILE_SYSTEM_OPTIMIZED, OBJECT_STORE, LEGACY] (case-sensitive) but was 'Invalid'
Usage: ozone sh bucket create [-ghV] [-k=&lt;bekName&gt;] [-l=&lt;allowedBu...</msg>
<status status="PASS" starttime="20230103 10:32:55.869" endtime="20230103 10:32:58.836"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:32:58.837" level="INFO">Invalid value for option '--layout': expected one of [FILE_SYSTEM_OPTIMIZED, OBJECT_STORE, LEGACY] (case-sensitive) but was 'Invalid'
Usage: ozone sh bucket create [-ghV] [-k=&lt;bekName&gt;] [-l=&lt;allowedBucketLayout&gt;]
                              [--namespace-quota=&lt;quotaInNamespace&gt;]
                              [--quota=&lt;quotaInBytes&gt;] [-r=&lt;replication&gt;]
                              [-t=&lt;type&gt;] [-u=&lt;ownerName&gt;] &lt;value&gt;
creates a bucket in a given volume
      &lt;value&gt;              URI of the volume/bucket.
                           Ozone URI could either be a full URI or short URI.
                           Full URI should start with o3://, in case of non-HA
                           clusters it should be followed by the host name and
                           optionally the port number. In case of HA clusters
                           the service id should be used. Service id provides a
                           logical name for multiple hosts and it is defined
                           in the property ozone.om.service.ids.
                           Example of a full URI with host name and port number
                           for a key:
                           o3://omhostname:9862/vol1/bucket1/key1
                           With a service id for a volume:
                           o3://omserviceid/vol1/
                           Short URI should start from the volume.
                           Example of a short URI for a bucket:
                           vol1/bucket1
                           Any unspecified information will be identified from
                           the config files.

  -g, --enforcegdpr        if true, indicates GDPR enforced bucket,
                             false/unspecified indicates otherwise
  -h, --help               Show this help message and exit.
  -k, --bucketkey=&lt;bekName&gt;
                           bucket encryption key name
  -l, --layout=&lt;allowedBucketLayout&gt;
                           Allowed Bucket Layouts: FILE_SYSTEM_OPTIMIZED,
                             OBJECT_STORE, LEGACY
      --namespace-quota=&lt;quotaInNamespace&gt;
                           For volume this parameter represents the number of
                             buckets, and for buckets represents the number of
                             keys (eg. 5)
      --quota, --space-quota=&lt;quotaInBytes&gt;
                           The maximum space quota can be used (eg. 1GB)
  -r, --replication=&lt;replication&gt;
                           Replication definition. Valid values are replication
                             type-specific.  For RATIS: ONE or THREE. In case
                             of EC, pass CODEC-DATA-PARITY-CHUNKSIZE,  e.g.
                             rs-3-2-1024k, rs-6-3-1024k, rs-10-4-1024k
  -t, --type, --replication-type=&lt;type&gt;
                           Replication type. Supported types are: RATIS, EC
  -u, --user=&lt;ownerName&gt;   Owner of the bucket. Defaults to current user if not
                             specified
  -V, --version            Print version information and exit.</msg>
<status status="PASS" starttime="20230103 10:32:58.836" endtime="20230103 10:32:58.837"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:32:58.838" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:32:58.838" endtime="20230103 10:32:58.838"/>
</kw>
<msg timestamp="20230103 10:32:58.839" level="INFO">${result} = Invalid value for option '--layout': expected one of [FILE_SYSTEM_OPTIMIZED, OBJECT_STORE, LEGACY] (case-sensitive) but was 'Invalid'
Usage: ozone sh bucket create [-ghV] [-k=&lt;bekName&gt;] [-l=&lt;allowedBu...</msg>
<status status="PASS" starttime="20230103 10:32:55.867" endtime="20230103 10:32:58.839"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Usage</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230103 10:32:58.839" endtime="20230103 10:32:58.840"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bucket1</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:32:58.845" level="INFO">Running command 'ozone sh bucket create o3://om:9862/74300-with-errors/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:33:03.852" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:33:03.852" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230103 10:32:58.841" endtime="20230103 10:33:03.852"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:33:03.854" level="INFO"/>
<status status="PASS" starttime="20230103 10:33:03.853" endtime="20230103 10:33:03.854"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:33:03.854" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:33:03.854" endtime="20230103 10:33:03.855"/>
</kw>
<status status="PASS" starttime="20230103 10:32:58.840" endtime="20230103 10:33:03.855"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bucket1/non-existing</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:33:03.859" level="INFO">Running command 'ozone sh key info o3://om:9862/74300-with-errors/bucket1/non-existing 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:33:09.349" level="INFO">${rc} = 255</msg>
<msg timestamp="20230103 10:33:09.349" level="INFO">${output} = KEY_NOT_FOUND Key:non-existing not found</msg>
<status status="PASS" starttime="20230103 10:33:03.856" endtime="20230103 10:33:09.349"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:33:09.351" level="INFO">KEY_NOT_FOUND Key:non-existing not found</msg>
<status status="PASS" starttime="20230103 10:33:09.350" endtime="20230103 10:33:09.352"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:33:09.352" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:33:09.352" endtime="20230103 10:33:09.353"/>
</kw>
<msg timestamp="20230103 10:33:09.353" level="INFO">${result} = KEY_NOT_FOUND Key:non-existing not found</msg>
<status status="PASS" starttime="20230103 10:33:03.855" endtime="20230103 10:33:09.353"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>KEY_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230103 10:33:09.354" endtime="20230103 10:33:09.354"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh key put ${protocol}${server}/${volume}/bucket1/key1 unexisting --type invalid</arg>
<arg>2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:33:09.358" level="INFO">Running command 'ozone sh key put o3://om:9862/74300-with-errors/bucket1/key1 unexisting --type invalid 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:33:12.308" level="INFO">${rc} = 2</msg>
<msg timestamp="20230103 10:33:12.308" level="INFO">${output} = Could not invoke public void org.apache.hadoop.ozone.shell.ShellReplicationOptions.setType(java.lang.String) with invalid (java.lang.IllegalArgumentException: Invalid value 'invalid' for option '--typ...</msg>
<status status="PASS" starttime="20230103 10:33:09.355" endtime="20230103 10:33:12.308"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:33:12.310" level="INFO">Could not invoke public void org.apache.hadoop.ozone.shell.ShellReplicationOptions.setType(java.lang.String) with invalid (java.lang.IllegalArgumentException: Invalid value 'invalid' for option '--type'. No enum constant org.apache.hadoop.hdds.client.ReplicationType.invalid. Supported values are: RATIS, EC.)
Usage: ozone sh key put [-hV] [--stream] [-r=&lt;replication&gt;] [-t=&lt;type&gt;] &lt;value&gt;
                        &lt;fileName&gt;
creates or overwrites an existing key
      &lt;value&gt;      URI of the volume/bucket/key.
                   Ozone URI could either be a full URI or short URI.
                   Full URI should start with o3://, in case of non-HA
                   clusters it should be followed by the host name and
                   optionally the port number. In case of HA clusters
                   the service id should be used. Service id provides a
                   logical name for multiple hosts and it is defined
                   in the property ozone.om.service.ids.
                   Example of a full URI with host name and port number
                   for a key:
                   o3://omhostname:9862/vol1/bucket1/key1
                   With a service id for a volume:
                   o3://omserviceid/vol1/
                   Short URI should start from the volume.
                   Example of a short URI for a bucket:
                   vol1/bucket1
                   Any unspecified information will be identified from
                   the config files.

      &lt;fileName&gt;   File to upload
  -h, --help       Show this help message and exit.
  -r, --replication=&lt;replication&gt;
                   Replication definition. Valid values are replication
                     type-specific.  For RATIS: ONE or THREE. In case of EC,
                     pass CODEC-DATA-PARITY-CHUNKSIZE,  e.g. rs-3-2-1024k,
                     rs-6-3-1024k, rs-10-4-1024k
      --stream
  -t, --type, --replication-type=&lt;type&gt;
                   Replication type. Supported types are: RATIS, EC
  -V, --version    Print version information and exit.</msg>
<status status="PASS" starttime="20230103 10:33:12.309" endtime="20230103 10:33:12.311"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:33:12.312" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:33:12.311" endtime="20230103 10:33:12.313"/>
</kw>
<msg timestamp="20230103 10:33:12.313" level="INFO">${result} = Could not invoke public void org.apache.hadoop.ozone.shell.ShellReplicationOptions.setType(java.lang.String) with invalid (java.lang.IllegalArgumentException: Invalid value 'invalid' for option '--typ...</msg>
<status status="PASS" starttime="20230103 10:33:09.354" endtime="20230103 10:33:12.313"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bucket1</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:33:12.317" level="INFO">Running command 'ozone sh bucket delete o3://om:9862/74300-with-errors/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:33:17.886" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:33:17.886" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230103 10:33:12.314" endtime="20230103 10:33:17.886"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:33:17.888" level="INFO"/>
<status status="PASS" starttime="20230103 10:33:17.887" endtime="20230103 10:33:17.888"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:33:17.889" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:33:17.888" endtime="20230103 10:33:17.889"/>
</kw>
<status status="PASS" starttime="20230103 10:33:12.313" endtime="20230103 10:33:17.890"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:33:17.894" level="INFO">Running command 'ozone sh volume delete o3://om:9862/74300-with-errors 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:33:23.273" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:33:23.273" level="INFO">${output} = Volume 74300-with-errors is deleted</msg>
<status status="PASS" starttime="20230103 10:33:17.891" endtime="20230103 10:33:23.273"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:33:23.275" level="INFO">Volume 74300-with-errors is deleted</msg>
<status status="PASS" starttime="20230103 10:33:23.274" endtime="20230103 10:33:23.275"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:33:23.276" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:33:23.275" endtime="20230103 10:33:23.276"/>
</kw>
<status status="PASS" starttime="20230103 10:33:17.890" endtime="20230103 10:33:23.276"/>
</kw>
<status status="PASS" starttime="20230103 10:32:38.610" endtime="20230103 10:33:23.277"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230103 10:32:38.609" endtime="20230103 10:33:23.277"/>
</test>
<test id="s1-s3-s5-t3" name="RpcClient volume acls" line="32">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230103 10:33:23.280" endtime="20230103 10:33:23.281"/>
</kw>
<kw name="Test Volume Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-acls</arg>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:33:23.286" level="INFO">Running command 'ozone sh volume create o3://om:9862/74300-acls 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:33:28.907" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:33:28.907" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230103 10:33:23.284" endtime="20230103 10:33:28.907"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:33:28.909" level="INFO"/>
<status status="PASS" starttime="20230103 10:33:28.908" endtime="20230103 10:33:28.909"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:33:28.916" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:33:28.909" endtime="20230103 10:33:28.916"/>
</kw>
<status status="PASS" starttime="20230103 10:33:23.283" endtime="20230103 10:33:28.916"/>
</kw>
<msg timestamp="20230103 10:33:28.916" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:33:23.282" endtime="20230103 10:33:28.917"/>
</kw>
<status status="PASS" starttime="20230103 10:33:23.282" endtime="20230103 10:33:28.917"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:33:28.926" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/74300-acls 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:33:34.920" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:33:34.920" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20230103 10:33:28.923" endtime="20230103 10:33:34.920"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:33:34.922" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20230103 10:33:34.921" endtime="20230103 10:33:34.922"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:33:34.923" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:33:34.922" endtime="20230103 10:33:34.923"/>
</kw>
<status status="PASS" starttime="20230103 10:33:28.919" endtime="20230103 10:33:34.924"/>
</kw>
<msg timestamp="20230103 10:33:34.924" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:33:28.918" endtime="20230103 10:33:34.925"/>
</kw>
<msg timestamp="20230103 10:33:34.925" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20230103 10:33:28.917" endtime="20230103 10:33:34.925"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20230103 10:33:34.925" endtime="20230103 10:33:34.927"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume addacl ${protocol}${server}/${volume} -a user:superuser1:rwxy[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:33:34.933" level="INFO">Running command 'ozone sh volume addacl o3://om:9862/74300-acls -a user:superuser1:rwxy[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:33:40.362" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:33:40.362" level="INFO">${output} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20230103 10:33:34.930" endtime="20230103 10:33:40.362"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:33:40.364" level="INFO">ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20230103 10:33:40.363" endtime="20230103 10:33:40.364"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:33:40.365" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:33:40.364" endtime="20230103 10:33:40.365"/>
</kw>
<status status="PASS" starttime="20230103 10:33:34.928" endtime="20230103 10:33:40.365"/>
</kw>
<msg timestamp="20230103 10:33:40.365" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:33:34.928" endtime="20230103 10:33:40.366"/>
</kw>
<msg timestamp="20230103 10:33:40.366" level="INFO">${result} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20230103 10:33:34.927" endtime="20230103 10:33:40.366"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:33:40.371" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/74300-acls 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:33:45.853" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:33:45.853" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type...</msg>
<status status="PASS" starttime="20230103 10:33:40.369" endtime="20230103 10:33:45.853"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:33:45.855" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20230103 10:33:45.854" endtime="20230103 10:33:45.855"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:33:45.856" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:33:45.855" endtime="20230103 10:33:45.856"/>
</kw>
<status status="PASS" starttime="20230103 10:33:40.368" endtime="20230103 10:33:45.857"/>
</kw>
<msg timestamp="20230103 10:33:45.857" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:33:40.368" endtime="20230103 10:33:45.857"/>
</kw>
<msg timestamp="20230103 10:33:45.858" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type...</msg>
<status status="PASS" starttime="20230103 10:33:40.367" endtime="20230103 10:33:45.858"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20230103 10:33:45.858" endtime="20230103 10:33:45.860"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume removeacl ${protocol}${server}/${volume} -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:33:45.865" level="INFO">Running command 'ozone sh volume removeacl o3://om:9862/74300-acls -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:33:51.630" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:33:51.630" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20230103 10:33:45.862" endtime="20230103 10:33:51.631"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:33:51.632" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20230103 10:33:51.631" endtime="20230103 10:33:51.632"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:33:51.633" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:33:51.633" endtime="20230103 10:33:51.633"/>
</kw>
<status status="PASS" starttime="20230103 10:33:45.861" endtime="20230103 10:33:51.634"/>
</kw>
<msg timestamp="20230103 10:33:51.634" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:33:45.861" endtime="20230103 10:33:51.635"/>
</kw>
<msg timestamp="20230103 10:33:51.635" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20230103 10:33:45.860" endtime="20230103 10:33:51.635"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:33:51.641" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/74300-acls 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:33:57.758" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:33:57.758" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type...</msg>
<status status="PASS" starttime="20230103 10:33:51.637" endtime="20230103 10:33:57.758"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:33:57.760" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20230103 10:33:57.759" endtime="20230103 10:33:57.760"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:33:57.761" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:33:57.760" endtime="20230103 10:33:57.761"/>
</kw>
<status status="PASS" starttime="20230103 10:33:51.637" endtime="20230103 10:33:57.761"/>
</kw>
<msg timestamp="20230103 10:33:57.761" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:33:51.636" endtime="20230103 10:33:57.762"/>
</kw>
<msg timestamp="20230103 10:33:57.762" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type...</msg>
<status status="PASS" starttime="20230103 10:33:51.635" endtime="20230103 10:33:57.762"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20230103 10:33:57.763" endtime="20230103 10:33:57.764"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume setacl ${protocol}${server}/${volume} -al user:superuser1:rwxy[DEFAULT],group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:33:57.769" level="INFO">Running command 'ozone sh volume setacl o3://om:9862/74300-acls -al user:superuser1:rwxy[DEFAULT],group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:34:03.006" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:34:03.006" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20230103 10:33:57.766" endtime="20230103 10:34:03.006"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:34:03.008" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20230103 10:34:03.007" endtime="20230103 10:34:03.008"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:34:03.009" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:34:03.008" endtime="20230103 10:34:03.009"/>
</kw>
<status status="PASS" starttime="20230103 10:33:57.765" endtime="20230103 10:34:03.009"/>
</kw>
<msg timestamp="20230103 10:34:03.009" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:33:57.765" endtime="20230103 10:34:03.010"/>
</kw>
<msg timestamp="20230103 10:34:03.010" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20230103 10:33:57.764" endtime="20230103 10:34:03.011"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:34:03.017" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/74300-acls 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:34:09.004" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:34:09.004" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20230103 10:34:03.013" endtime="20230103 10:34:09.004"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:34:09.006" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20230103 10:34:09.004" endtime="20230103 10:34:09.006"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:34:09.007" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:34:09.006" endtime="20230103 10:34:09.007"/>
</kw>
<status status="PASS" starttime="20230103 10:34:03.012" endtime="20230103 10:34:09.008"/>
</kw>
<msg timestamp="20230103 10:34:09.008" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:34:03.012" endtime="20230103 10:34:09.009"/>
</kw>
<msg timestamp="20230103 10:34:09.009" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20230103 10:34:03.011" endtime="20230103 10:34:09.009"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20230103 10:34:09.009" endtime="20230103 10:34:09.010"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20230103 10:34:09.010" endtime="20230103 10:34:09.012"/>
</kw>
<status status="PASS" starttime="20230103 10:33:23.281" endtime="20230103 10:34:09.012"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230103 10:33:23.279" endtime="20230103 10:34:09.012"/>
</test>
<test id="s1-s3-s5-t4" name="RpcClient bucket acls" line="35">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230103 10:34:09.014" endtime="20230103 10:34:09.015"/>
</kw>
<kw name="Test Bucket Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-acls</arg>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:34:09.022" level="INFO">Running command 'ozone sh bucket create o3://om:9862/74300-acls/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:34:14.910" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:34:14.910" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230103 10:34:09.018" endtime="20230103 10:34:14.910"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:34:14.912" level="INFO"/>
<status status="PASS" starttime="20230103 10:34:14.911" endtime="20230103 10:34:14.912"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:34:14.913" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:34:14.913" endtime="20230103 10:34:14.913"/>
</kw>
<status status="PASS" starttime="20230103 10:34:09.017" endtime="20230103 10:34:14.914"/>
</kw>
<msg timestamp="20230103 10:34:14.914" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:34:09.017" endtime="20230103 10:34:14.915"/>
</kw>
<status status="PASS" starttime="20230103 10:34:09.016" endtime="20230103 10:34:14.915"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:34:14.926" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/74300-acls/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:34:20.826" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:34:20.827" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type...</msg>
<status status="PASS" starttime="20230103 10:34:14.918" endtime="20230103 10:34:20.827"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:34:20.828" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20230103 10:34:20.827" endtime="20230103 10:34:20.828"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:34:20.829" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:34:20.829" endtime="20230103 10:34:20.829"/>
</kw>
<status status="PASS" starttime="20230103 10:34:14.917" endtime="20230103 10:34:20.830"/>
</kw>
<msg timestamp="20230103 10:34:20.830" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:34:14.917" endtime="20230103 10:34:20.831"/>
</kw>
<msg timestamp="20230103 10:34:20.833" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type...</msg>
<status status="PASS" starttime="20230103 10:34:14.915" endtime="20230103 10:34:20.833"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20230103 10:34:20.833" endtime="20230103 10:34:20.834"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket addacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:rwxy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:34:20.840" level="INFO">Running command 'ozone sh bucket addacl o3://om:9862/74300-acls/bb1 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:34:25.988" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:34:25.989" level="INFO">${output} = ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20230103 10:34:20.837" endtime="20230103 10:34:25.989"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:34:25.991" level="INFO">ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20230103 10:34:25.990" endtime="20230103 10:34:25.991"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:34:25.992" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:34:25.991" endtime="20230103 10:34:25.992"/>
</kw>
<status status="PASS" starttime="20230103 10:34:20.836" endtime="20230103 10:34:25.992"/>
</kw>
<msg timestamp="20230103 10:34:25.992" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:34:20.835" endtime="20230103 10:34:25.993"/>
</kw>
<msg timestamp="20230103 10:34:25.993" level="INFO">${result} = ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20230103 10:34:20.834" endtime="20230103 10:34:25.993"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:34:26.000" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/74300-acls/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:34:31.460" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:34:31.461" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type...</msg>
<status status="PASS" starttime="20230103 10:34:25.996" endtime="20230103 10:34:31.461"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:34:31.462" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20230103 10:34:31.461" endtime="20230103 10:34:31.462"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:34:31.463" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:34:31.462" endtime="20230103 10:34:31.463"/>
</kw>
<status status="PASS" starttime="20230103 10:34:25.996" endtime="20230103 10:34:31.464"/>
</kw>
<msg timestamp="20230103 10:34:31.464" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:34:25.995" endtime="20230103 10:34:31.464"/>
</kw>
<msg timestamp="20230103 10:34:31.465" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type...</msg>
<status status="PASS" starttime="20230103 10:34:25.994" endtime="20230103 10:34:31.465"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20230103 10:34:31.465" endtime="20230103 10:34:31.466"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket removeacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:34:31.472" level="INFO">Running command 'ozone sh bucket removeacl o3://om:9862/74300-acls/bb1 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:34:37.173" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:34:37.173" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20230103 10:34:31.469" endtime="20230103 10:34:37.173"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:34:37.175" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20230103 10:34:37.174" endtime="20230103 10:34:37.175"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:34:37.176" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:34:37.175" endtime="20230103 10:34:37.176"/>
</kw>
<status status="PASS" starttime="20230103 10:34:31.468" endtime="20230103 10:34:37.176"/>
</kw>
<msg timestamp="20230103 10:34:37.176" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:34:31.468" endtime="20230103 10:34:37.177"/>
</kw>
<msg timestamp="20230103 10:34:37.177" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20230103 10:34:31.466" endtime="20230103 10:34:37.177"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:34:37.182" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/74300-acls/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:34:42.639" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:34:42.639" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type...</msg>
<status status="PASS" starttime="20230103 10:34:37.180" endtime="20230103 10:34:42.639"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:34:42.641" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20230103 10:34:42.640" endtime="20230103 10:34:42.641"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:34:42.642" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:34:42.641" endtime="20230103 10:34:42.642"/>
</kw>
<status status="PASS" starttime="20230103 10:34:37.179" endtime="20230103 10:34:42.643"/>
</kw>
<msg timestamp="20230103 10:34:42.643" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:34:37.179" endtime="20230103 10:34:42.644"/>
</kw>
<msg timestamp="20230103 10:34:42.645" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type...</msg>
<status status="PASS" starttime="20230103 10:34:37.178" endtime="20230103 10:34:42.645"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20230103 10:34:42.645" endtime="20230103 10:34:42.646"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket setacl ${protocol}${server}/${volume}/bb1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:34:42.653" level="INFO">Running command 'ozone sh bucket setacl o3://om:9862/74300-acls/bb1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:34:48.387" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:34:48.388" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20230103 10:34:42.649" endtime="20230103 10:34:48.388"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:34:48.406" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20230103 10:34:48.388" endtime="20230103 10:34:48.407"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:34:48.408" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:34:48.407" endtime="20230103 10:34:48.408"/>
</kw>
<status status="PASS" starttime="20230103 10:34:42.648" endtime="20230103 10:34:48.409"/>
</kw>
<msg timestamp="20230103 10:34:48.409" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:34:42.647" endtime="20230103 10:34:48.410"/>
</kw>
<msg timestamp="20230103 10:34:48.411" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20230103 10:34:42.646" endtime="20230103 10:34:48.411"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:34:48.424" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/74300-acls/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:34:54.526" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:34:54.526" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20230103 10:34:48.414" endtime="20230103 10:34:54.526"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:34:54.528" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20230103 10:34:54.527" endtime="20230103 10:34:54.528"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:34:54.530" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:34:54.529" endtime="20230103 10:34:54.530"/>
</kw>
<status status="PASS" starttime="20230103 10:34:48.413" endtime="20230103 10:34:54.530"/>
</kw>
<msg timestamp="20230103 10:34:54.530" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:34:48.412" endtime="20230103 10:34:54.531"/>
</kw>
<msg timestamp="20230103 10:34:54.532" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20230103 10:34:48.411" endtime="20230103 10:34:54.532"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20230103 10:34:54.532" endtime="20230103 10:34:54.533"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20230103 10:34:54.533" endtime="20230103 10:34:54.534"/>
</kw>
<status status="PASS" starttime="20230103 10:34:09.015" endtime="20230103 10:34:54.534"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230103 10:34:09.013" endtime="20230103 10:34:54.534"/>
</test>
<test id="s1-s3-s5-t5" name="RpcClient key acls" line="38">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230103 10:34:54.537" endtime="20230103 10:34:54.538"/>
</kw>
<kw name="Test key Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-acls</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key2 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:34:54.544" level="INFO">Running command 'ozone sh key put o3://om:9862/74300-acls/bb1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:35:04.414" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:35:04.414" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230103 10:34:54.541" endtime="20230103 10:35:04.414"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:35:04.416" level="INFO"/>
<status status="PASS" starttime="20230103 10:35:04.415" endtime="20230103 10:35:04.416"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:35:04.417" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:35:04.416" endtime="20230103 10:35:04.417"/>
</kw>
<status status="PASS" starttime="20230103 10:34:54.540" endtime="20230103 10:35:04.417"/>
</kw>
<msg timestamp="20230103 10:35:04.417" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:34:54.540" endtime="20230103 10:35:04.418"/>
</kw>
<status status="PASS" starttime="20230103 10:34:54.539" endtime="20230103 10:35:04.418"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:35:04.424" level="INFO">Running command 'ozone sh key getacl o3://om:9862/74300-acls/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:35:10.579" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:35:10.580" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type...</msg>
<status status="PASS" starttime="20230103 10:35:04.421" endtime="20230103 10:35:10.580"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:35:10.581" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20230103 10:35:10.580" endtime="20230103 10:35:10.582"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:35:10.583" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:35:10.582" endtime="20230103 10:35:10.583"/>
</kw>
<status status="PASS" starttime="20230103 10:35:04.420" endtime="20230103 10:35:10.584"/>
</kw>
<msg timestamp="20230103 10:35:10.584" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:35:04.420" endtime="20230103 10:35:10.585"/>
</kw>
<msg timestamp="20230103 10:35:10.585" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type...</msg>
<status status="PASS" starttime="20230103 10:35:04.419" endtime="20230103 10:35:10.586"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20230103 10:35:10.586" endtime="20230103 10:35:10.588"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key addacl ${protocol}${server}/${volume}/bb1/key2 -a user:superuser1:rwxy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:35:10.597" level="INFO">Running command 'ozone sh key addacl o3://om:9862/74300-acls/bb1/key2 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:35:16.357" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:35:16.357" level="INFO">${output} = ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20230103 10:35:10.591" endtime="20230103 10:35:16.357"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:35:16.359" level="INFO">ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20230103 10:35:16.358" endtime="20230103 10:35:16.359"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:35:16.360" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:35:16.360" endtime="20230103 10:35:16.361"/>
</kw>
<status status="PASS" starttime="20230103 10:35:10.590" endtime="20230103 10:35:16.361"/>
</kw>
<msg timestamp="20230103 10:35:16.361" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:35:10.589" endtime="20230103 10:35:16.362"/>
</kw>
<msg timestamp="20230103 10:35:16.362" level="INFO">${result} = ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20230103 10:35:10.588" endtime="20230103 10:35:16.363"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:35:16.369" level="INFO">Running command 'ozone sh key getacl o3://om:9862/74300-acls/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:35:22.272" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:35:22.272" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type...</msg>
<status status="PASS" starttime="20230103 10:35:16.366" endtime="20230103 10:35:22.272"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:35:22.274" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20230103 10:35:22.273" endtime="20230103 10:35:22.274"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:35:22.275" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:35:22.274" endtime="20230103 10:35:22.275"/>
</kw>
<status status="PASS" starttime="20230103 10:35:16.365" endtime="20230103 10:35:22.275"/>
</kw>
<msg timestamp="20230103 10:35:22.275" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:35:16.364" endtime="20230103 10:35:22.276"/>
</kw>
<msg timestamp="20230103 10:35:22.277" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type...</msg>
<status status="PASS" starttime="20230103 10:35:16.363" endtime="20230103 10:35:22.277"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20230103 10:35:22.277" endtime="20230103 10:35:22.278"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key removeacl ${protocol}${server}/${volume}/bb1/key2 -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:35:22.284" level="INFO">Running command 'ozone sh key removeacl o3://om:9862/74300-acls/bb1/key2 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:35:27.825" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:35:27.825" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20230103 10:35:22.281" endtime="20230103 10:35:27.825"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:35:27.827" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20230103 10:35:27.826" endtime="20230103 10:35:27.827"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:35:27.829" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:35:27.828" endtime="20230103 10:35:27.829"/>
</kw>
<status status="PASS" starttime="20230103 10:35:22.280" endtime="20230103 10:35:27.829"/>
</kw>
<msg timestamp="20230103 10:35:27.829" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:35:22.280" endtime="20230103 10:35:27.830"/>
</kw>
<msg timestamp="20230103 10:35:27.830" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20230103 10:35:22.279" endtime="20230103 10:35:27.830"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:35:27.836" level="INFO">Running command 'ozone sh key getacl o3://om:9862/74300-acls/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:35:33.780" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:35:33.780" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type...</msg>
<status status="PASS" starttime="20230103 10:35:27.833" endtime="20230103 10:35:33.780"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:35:33.782" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
} ]</msg>
<status status="PASS" starttime="20230103 10:35:33.781" endtime="20230103 10:35:33.782"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:35:33.783" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:35:33.782" endtime="20230103 10:35:33.783"/>
</kw>
<status status="PASS" starttime="20230103 10:35:27.832" endtime="20230103 10:35:33.783"/>
</kw>
<msg timestamp="20230103 10:35:33.783" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:35:27.832" endtime="20230103 10:35:33.784"/>
</kw>
<msg timestamp="20230103 10:35:33.784" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type...</msg>
<status status="PASS" starttime="20230103 10:35:27.831" endtime="20230103 10:35:33.784"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20230103 10:35:33.785" endtime="20230103 10:35:33.785"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key setacl ${protocol}${server}/${volume}/bb1/key2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:35:33.790" level="INFO">Running command 'ozone sh key setacl o3://om:9862/74300-acls/bb1/key2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:35:39.334" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:35:39.334" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20230103 10:35:33.788" endtime="20230103 10:35:39.334"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:35:39.336" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20230103 10:35:39.335" endtime="20230103 10:35:39.337"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:35:39.338" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:35:39.337" endtime="20230103 10:35:39.339"/>
</kw>
<status status="PASS" starttime="20230103 10:35:33.787" endtime="20230103 10:35:39.339"/>
</kw>
<msg timestamp="20230103 10:35:39.340" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:35:33.786" endtime="20230103 10:35:39.341"/>
</kw>
<msg timestamp="20230103 10:35:39.341" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20230103 10:35:33.785" endtime="20230103 10:35:39.341"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:35:39.354" level="INFO">Running command 'ozone sh key getacl o3://om:9862/74300-acls/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:35:45.094" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:35:45.094" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20230103 10:35:39.347" endtime="20230103 10:35:45.094"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:35:45.096" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20230103 10:35:45.095" endtime="20230103 10:35:45.096"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:35:45.096" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:35:45.096" endtime="20230103 10:35:45.097"/>
</kw>
<status status="PASS" starttime="20230103 10:35:39.346" endtime="20230103 10:35:45.097"/>
</kw>
<msg timestamp="20230103 10:35:45.097" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:35:39.343" endtime="20230103 10:35:45.098"/>
</kw>
<msg timestamp="20230103 10:35:45.098" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20230103 10:35:39.342" endtime="20230103 10:35:45.098"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20230103 10:35:45.098" endtime="20230103 10:35:45.099"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20230103 10:35:45.099" endtime="20230103 10:35:45.100"/>
</kw>
<status status="PASS" starttime="20230103 10:34:54.538" endtime="20230103 10:35:45.100"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230103 10:34:54.536" endtime="20230103 10:35:45.101"/>
</test>
<test id="s1-s3-s5-t6" name="RpcClient prefix acls" line="41">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230103 10:35:45.104" endtime="20230103 10:35:45.104"/>
</kw>
<kw name="Test prefix Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-acls</arg>
<kw name="Execute" library="os">
<arg>ozone sh prefix addacl ${protocol}${server}/${volume}/bb1/prefix1/ -a user:superuser1:rwxy[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:35:45.110" level="INFO">Running command 'ozone sh prefix addacl o3://om:9862/74300-acls/bb1/prefix1/ -a user:superuser1:rwxy[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:35:50.538" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:35:50.538" level="INFO">${output} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20230103 10:35:45.107" endtime="20230103 10:35:50.538"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:35:50.540" level="INFO">ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20230103 10:35:50.539" endtime="20230103 10:35:50.540"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:35:50.541" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:35:50.541" endtime="20230103 10:35:50.542"/>
</kw>
<status status="PASS" starttime="20230103 10:35:45.106" endtime="20230103 10:35:50.542"/>
</kw>
<msg timestamp="20230103 10:35:50.542" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:35:45.106" endtime="20230103 10:35:50.543"/>
</kw>
<status status="PASS" starttime="20230103 10:35:45.105" endtime="20230103 10:35:50.543"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix getacl ${protocol}${server}/${volume}/bb1/prefix1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:35:50.549" level="INFO">Running command 'ozone sh prefix getacl o3://om:9862/74300-acls/bb1/prefix1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:35:56.377" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:35:56.377" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20230103 10:35:50.546" endtime="20230103 10:35:56.377"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:35:56.379" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20230103 10:35:56.378" endtime="20230103 10:35:56.379"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:35:56.380" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:35:56.379" endtime="20230103 10:35:56.380"/>
</kw>
<status status="PASS" starttime="20230103 10:35:50.545" endtime="20230103 10:35:56.380"/>
</kw>
<msg timestamp="20230103 10:35:56.381" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:35:50.545" endtime="20230103 10:35:56.381"/>
</kw>
<msg timestamp="20230103 10:35:56.382" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20230103 10:35:50.544" endtime="20230103 10:35:56.382"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20230103 10:35:56.383" endtime="20230103 10:35:56.384"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix removeacl ${protocol}${server}/${volume}/bb1/prefix1/ -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:35:56.391" level="INFO">Running command 'ozone sh prefix removeacl o3://om:9862/74300-acls/bb1/prefix1/ -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:36:02.150" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:36:02.150" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20230103 10:35:56.387" endtime="20230103 10:36:02.150"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:36:02.151" level="INFO">ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20230103 10:36:02.150" endtime="20230103 10:36:02.152"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:36:02.152" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:36:02.152" endtime="20230103 10:36:02.153"/>
</kw>
<status status="PASS" starttime="20230103 10:35:56.386" endtime="20230103 10:36:02.153"/>
</kw>
<msg timestamp="20230103 10:36:02.153" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:35:56.385" endtime="20230103 10:36:02.154"/>
</kw>
<msg timestamp="20230103 10:36:02.155" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20230103 10:35:56.384" endtime="20230103 10:36:02.155"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix getacl ${protocol}${server}/${volume}/bb1/prefix1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:36:02.161" level="INFO">Running command 'ozone sh prefix getacl o3://om:9862/74300-acls/bb1/prefix1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:36:07.736" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:36:07.736" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20230103 10:36:02.158" endtime="20230103 10:36:07.736"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:36:07.738" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20230103 10:36:07.737" endtime="20230103 10:36:07.738"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:36:07.739" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:36:07.739" endtime="20230103 10:36:07.740"/>
</kw>
<status status="PASS" starttime="20230103 10:36:02.157" endtime="20230103 10:36:07.740"/>
</kw>
<msg timestamp="20230103 10:36:07.740" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:36:02.156" endtime="20230103 10:36:07.741"/>
</kw>
<msg timestamp="20230103 10:36:07.742" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20230103 10:36:02.155" endtime="20230103 10:36:07.742"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20230103 10:36:07.742" endtime="20230103 10:36:07.743"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix setacl ${protocol}${server}/${volume}/bb1/prefix1/ -al user:superuser1:rwxy[DEFAULT],group:superuser1:a[DEFAULT],user:testuser/scm@EXAMPLE.COM:rwxyc</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:36:07.750" level="INFO">Running command 'ozone sh prefix setacl o3://om:9862/74300-acls/bb1/prefix1/ -al user:superuser1:rwxy[DEFAULT],group:superuser1:a[DEFAULT],user:testuser/scm@EXAMPLE.COM:rwxyc 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:36:12.949" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:36:12.949" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20230103 10:36:07.747" endtime="20230103 10:36:12.949"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:36:12.951" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20230103 10:36:12.950" endtime="20230103 10:36:12.951"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:36:12.952" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:36:12.952" endtime="20230103 10:36:12.952"/>
</kw>
<status status="PASS" starttime="20230103 10:36:07.745" endtime="20230103 10:36:12.953"/>
</kw>
<msg timestamp="20230103 10:36:12.953" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:36:07.745" endtime="20230103 10:36:12.954"/>
</kw>
<msg timestamp="20230103 10:36:12.954" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20230103 10:36:07.743" endtime="20230103 10:36:12.954"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix getacl ${protocol}${server}/${volume}/bb1/prefix1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:36:12.959" level="INFO">Running command 'ozone sh prefix getacl o3://om:9862/74300-acls/bb1/prefix1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:36:18.944" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:36:18.944" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "D...</msg>
<status status="PASS" starttime="20230103 10:36:12.956" endtime="20230103 10:36:18.944"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:36:18.946" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20230103 10:36:18.945" endtime="20230103 10:36:18.946"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:36:18.947" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:36:18.947" endtime="20230103 10:36:18.947"/>
</kw>
<status status="PASS" starttime="20230103 10:36:12.956" endtime="20230103 10:36:18.948"/>
</kw>
<msg timestamp="20230103 10:36:18.948" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:36:12.955" endtime="20230103 10:36:18.949"/>
</kw>
<msg timestamp="20230103 10:36:18.949" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "D...</msg>
<status status="PASS" starttime="20230103 10:36:12.954" endtime="20230103 10:36:18.949"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20230103 10:36:18.950" endtime="20230103 10:36:18.950"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20230103 10:36:18.951" endtime="20230103 10:36:18.951"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/prefix1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:36:18.957" level="INFO">Running command 'ozone sh key put o3://om:9862/74300-acls/bb1/prefix1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:36:28.076" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:36:28.076" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230103 10:36:18.954" endtime="20230103 10:36:28.076"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:36:28.078" level="INFO"/>
<status status="PASS" starttime="20230103 10:36:28.077" endtime="20230103 10:36:28.078"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:36:28.079" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:36:28.078" endtime="20230103 10:36:28.079"/>
</kw>
<status status="PASS" starttime="20230103 10:36:18.953" endtime="20230103 10:36:28.079"/>
</kw>
<msg timestamp="20230103 10:36:28.079" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:36:18.952" endtime="20230103 10:36:28.080"/>
</kw>
<status status="PASS" starttime="20230103 10:36:18.951" endtime="20230103 10:36:28.081"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/prefix1/key1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:36:28.087" level="INFO">Running command 'ozone sh key getacl o3://om:9862/74300-acls/bb1/prefix1/key1 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:36:33.794" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:36:33.794" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type...</msg>
<status status="PASS" starttime="20230103 10:36:28.083" endtime="20230103 10:36:33.795"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:36:33.796" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20230103 10:36:33.795" endtime="20230103 10:36:33.796"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:36:33.797" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:36:33.796" endtime="20230103 10:36:33.797"/>
</kw>
<status status="PASS" starttime="20230103 10:36:28.082" endtime="20230103 10:36:33.798"/>
</kw>
<msg timestamp="20230103 10:36:33.798" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:36:28.082" endtime="20230103 10:36:33.798"/>
</kw>
<msg timestamp="20230103 10:36:33.799" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type...</msg>
<status status="PASS" starttime="20230103 10:36:28.081" endtime="20230103 10:36:33.799"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20230103 10:36:33.799" endtime="20230103 10:36:33.800"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20230103 10:36:33.800" endtime="20230103 10:36:33.800"/>
</kw>
<status status="PASS" starttime="20230103 10:35:45.104" endtime="20230103 10:36:33.800"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230103 10:35:45.103" endtime="20230103 10:36:33.801"/>
</test>
<test id="s1-s3-s5-t7" name="RpcClient without host" line="44">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230103 10:36:33.803" endtime="20230103 10:36:33.804"/>
</kw>
<kw name="Test ozone shell" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-without-host</arg>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:36:33.809" level="INFO">Running command 'ozone sh volume info o3:///74300-without-host 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:36:38.815" level="INFO">${rc} = 255</msg>
<msg timestamp="20230103 10:36:38.815" level="INFO">${output} = VOLUME_NOT_FOUND Volume 74300-without-host is not found</msg>
<status status="PASS" starttime="20230103 10:36:33.806" endtime="20230103 10:36:38.815"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:36:38.817" level="INFO">VOLUME_NOT_FOUND Volume 74300-without-host is not found</msg>
<status status="PASS" starttime="20230103 10:36:38.816" endtime="20230103 10:36:38.817"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:36:38.818" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:36:38.817" endtime="20230103 10:36:38.818"/>
</kw>
<msg timestamp="20230103 10:36:38.818" level="INFO">${result} = VOLUME_NOT_FOUND Volume 74300-without-host is not found</msg>
<status status="PASS" starttime="20230103 10:36:33.806" endtime="20230103 10:36:38.818"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230103 10:36:38.819" endtime="20230103 10:36:38.819"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:36:38.830" level="INFO">Running command 'ozone sh volume create o3:///74300-without-host --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:36:44.800" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:36:44.800" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230103 10:36:38.827" endtime="20230103 10:36:44.800"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:36:44.801" level="INFO"/>
<status status="PASS" starttime="20230103 10:36:44.800" endtime="20230103 10:36:44.802"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:36:44.802" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:36:44.802" endtime="20230103 10:36:44.803"/>
</kw>
<status status="PASS" starttime="20230103 10:36:38.821" endtime="20230103 10:36:44.803"/>
</kw>
<msg timestamp="20230103 10:36:44.803" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:36:38.821" endtime="20230103 10:36:44.804"/>
</kw>
<msg timestamp="20230103 10:36:44.805" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230103 10:36:38.819" endtime="20230103 10:36:44.805"/>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<arg>${result}</arg>
<doc>Verifies that the given item is empty.</doc>
<msg timestamp="20230103 10:36:44.805" level="INFO">Length is 0</msg>
<status status="PASS" starttime="20230103 10:36:44.805" endtime="20230103 10:36:44.806"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '.[] | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:36:44.812" level="INFO">Running command 'ozone sh volume list o3:/// | jq -r '.[] | select(.name=="74300-without-host")' 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:36:51.394" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:36:51.394" level="INFO">${output} = {
  "metadata": {},
  "name": "74300-without-host",
  "admin": "hadoop",
  "owner": "hadoop",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "202...</msg>
<status status="PASS" starttime="20230103 10:36:44.808" endtime="20230103 10:36:51.394"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:36:51.396" level="INFO">{
  "metadata": {},
  "name": "74300-without-host",
  "admin": "hadoop",
  "owner": "hadoop",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2023-01-03T10:36:44.509Z",
  "modificationTime": "2023-01-03T10:36:44.509Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "refCount": 0
}</msg>
<status status="PASS" starttime="20230103 10:36:51.395" endtime="20230103 10:36:51.396"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:36:51.397" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:36:51.397" endtime="20230103 10:36:51.397"/>
</kw>
<status status="PASS" starttime="20230103 10:36:44.808" endtime="20230103 10:36:51.398"/>
</kw>
<msg timestamp="20230103 10:36:51.398" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:36:44.807" endtime="20230103 10:36:51.399"/>
</kw>
<msg timestamp="20230103 10:36:51.399" level="INFO">${result} = {
  "metadata": {},
  "name": "74300-without-host",
  "admin": "hadoop",
  "owner": "hadoop",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "202...</msg>
<status status="PASS" starttime="20230103 10:36:44.806" endtime="20230103 10:36:51.399"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230103 10:36:51.399" endtime="20230103 10:36:51.401"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list | jq -r '.[] | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:36:51.407" level="INFO">Running command 'ozone sh volume list | jq -r '.[] | select(.name=="74300-without-host")' 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:36:57.373" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:36:57.373" level="INFO">${output} = {
  "metadata": {},
  "name": "74300-without-host",
  "admin": "hadoop",
  "owner": "hadoop",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "202...</msg>
<status status="PASS" starttime="20230103 10:36:51.403" endtime="20230103 10:36:57.373"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:36:57.376" level="INFO">{
  "metadata": {},
  "name": "74300-without-host",
  "admin": "hadoop",
  "owner": "hadoop",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2023-01-03T10:36:44.509Z",
  "modificationTime": "2023-01-03T10:36:44.509Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "refCount": 0
}</msg>
<status status="PASS" starttime="20230103 10:36:57.374" endtime="20230103 10:36:57.376"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:36:57.377" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:36:57.376" endtime="20230103 10:36:57.377"/>
</kw>
<status status="PASS" starttime="20230103 10:36:51.402" endtime="20230103 10:36:57.377"/>
</kw>
<msg timestamp="20230103 10:36:57.378" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:36:51.402" endtime="20230103 10:36:57.378"/>
</kw>
<msg timestamp="20230103 10:36:57.379" level="INFO">${result} = {
  "metadata": {},
  "name": "74300-without-host",
  "admin": "hadoop",
  "owner": "hadoop",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "202...</msg>
<status status="PASS" starttime="20230103 10:36:51.401" endtime="20230103 10:36:57.379"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230103 10:36:57.379" endtime="20230103 10:36:57.379"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:36:57.385" level="INFO">Running command 'ozone sh volume setquota o3:///74300-without-host --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:37:02.965" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:37:02.965" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230103 10:36:57.382" endtime="20230103 10:37:02.965"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:37:02.967" level="INFO"/>
<status status="PASS" starttime="20230103 10:37:02.966" endtime="20230103 10:37:02.968"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:37:02.968" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:37:02.968" endtime="20230103 10:37:02.969"/>
</kw>
<status status="PASS" starttime="20230103 10:36:57.381" endtime="20230103 10:37:02.969"/>
</kw>
<msg timestamp="20230103 10:37:02.969" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:36:57.381" endtime="20230103 10:37:02.970"/>
</kw>
<status status="PASS" starttime="20230103 10:36:57.380" endtime="20230103 10:37:02.971"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:37:02.977" level="INFO">Running command 'ozone sh volume info o3:///74300-without-host | jq -r '. | select(.name=="74300-without-host") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:37:08.879" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:37:08.879" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20230103 10:37:02.973" endtime="20230103 10:37:08.879"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:37:08.881" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20230103 10:37:08.880" endtime="20230103 10:37:08.881"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:37:08.882" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:37:08.881" endtime="20230103 10:37:08.882"/>
</kw>
<status status="PASS" starttime="20230103 10:37:02.973" endtime="20230103 10:37:08.883"/>
</kw>
<msg timestamp="20230103 10:37:08.883" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:37:02.972" endtime="20230103 10:37:08.884"/>
</kw>
<msg timestamp="20230103 10:37:08.884" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20230103 10:37:02.971" endtime="20230103 10:37:08.884"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230103 10:37:08.885" endtime="20230103 10:37:08.886"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:37:08.892" level="INFO">Running command 'ozone sh bucket create o3:///74300-without-host/bb1 --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:37:14.104" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:37:14.104" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230103 10:37:08.889" endtime="20230103 10:37:14.104"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:37:14.106" level="INFO"/>
<status status="PASS" starttime="20230103 10:37:14.105" endtime="20230103 10:37:14.106"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:37:14.107" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:37:14.106" endtime="20230103 10:37:14.107"/>
</kw>
<status status="PASS" starttime="20230103 10:37:08.888" endtime="20230103 10:37:14.108"/>
</kw>
<msg timestamp="20230103 10:37:14.108" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:37:08.888" endtime="20230103 10:37:14.108"/>
</kw>
<msg timestamp="20230103 10:37:14.109" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230103 10:37:08.887" endtime="20230103 10:37:14.109"/>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<arg>${result}</arg>
<doc>Verifies that the given item is empty.</doc>
<msg timestamp="20230103 10:37:14.110" level="INFO">Length is 0</msg>
<status status="PASS" starttime="20230103 10:37:14.109" endtime="20230103 10:37:14.110"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:37:14.116" level="INFO">Running command 'ozone sh bucket info o3:///74300-without-host/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:37:19.993" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:37:19.993" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20230103 10:37:14.112" endtime="20230103 10:37:19.993"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:37:19.995" level="INFO">DISK</msg>
<status status="PASS" starttime="20230103 10:37:19.994" endtime="20230103 10:37:19.995"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:37:19.997" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:37:19.996" endtime="20230103 10:37:19.997"/>
</kw>
<status status="PASS" starttime="20230103 10:37:14.112" endtime="20230103 10:37:19.998"/>
</kw>
<msg timestamp="20230103 10:37:19.999" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:37:14.111" endtime="20230103 10:37:19.999"/>
</kw>
<msg timestamp="20230103 10:37:20.000" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20230103 10:37:14.110" endtime="20230103 10:37:20.000"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>DISK</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230103 10:37:20.000" endtime="20230103 10:37:20.001"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:37:20.007" level="INFO">Running command 'ozone sh bucket info o3:///74300-without-host/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:37:25.696" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:37:25.696" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20230103 10:37:20.004" endtime="20230103 10:37:25.696"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:37:25.698" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20230103 10:37:25.697" endtime="20230103 10:37:25.698"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:37:25.699" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:37:25.698" endtime="20230103 10:37:25.699"/>
</kw>
<status status="PASS" starttime="20230103 10:37:20.003" endtime="20230103 10:37:25.699"/>
</kw>
<msg timestamp="20230103 10:37:25.699" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:37:20.003" endtime="20230103 10:37:25.700"/>
</kw>
<msg timestamp="20230103 10:37:25.701" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20230103 10:37:20.001" endtime="20230103 10:37:25.701"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230103 10:37:25.701" endtime="20230103 10:37:25.702"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:37:25.708" level="INFO">Running command 'ozone sh bucket info o3:///74300-without-host/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:37:31.286" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:37:31.286" level="INFO">${output} = 100</msg>
<status status="PASS" starttime="20230103 10:37:25.705" endtime="20230103 10:37:31.286"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:37:31.289" level="INFO">100</msg>
<status status="PASS" starttime="20230103 10:37:31.287" endtime="20230103 10:37:31.289"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:37:31.290" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:37:31.289" endtime="20230103 10:37:31.290"/>
</kw>
<status status="PASS" starttime="20230103 10:37:25.704" endtime="20230103 10:37:31.291"/>
</kw>
<msg timestamp="20230103 10:37:31.291" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:37:25.703" endtime="20230103 10:37:31.292"/>
</kw>
<msg timestamp="20230103 10:37:31.292" level="INFO">${result} = 100</msg>
<status status="PASS" starttime="20230103 10:37:25.702" endtime="20230103 10:37:31.292"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>100</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230103 10:37:31.293" endtime="20230103 10:37:31.295"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:37:31.302" level="INFO">Running command 'ozone sh bucket setquota o3:///74300-without-host/bb1 --space-quota 1TB --namespace-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:37:37.375" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:37:37.376" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230103 10:37:31.297" endtime="20230103 10:37:37.376"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:37:37.378" level="INFO"/>
<status status="PASS" starttime="20230103 10:37:37.377" endtime="20230103 10:37:37.378"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:37:37.379" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:37:37.378" endtime="20230103 10:37:37.379"/>
</kw>
<status status="PASS" starttime="20230103 10:37:31.296" endtime="20230103 10:37:37.380"/>
</kw>
<msg timestamp="20230103 10:37:37.380" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:37:31.296" endtime="20230103 10:37:37.381"/>
</kw>
<status status="PASS" starttime="20230103 10:37:31.295" endtime="20230103 10:37:37.382"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:37:37.388" level="INFO">Running command 'ozone sh bucket info o3:///74300-without-host/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:37:43.356" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:37:43.356" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" starttime="20230103 10:37:37.385" endtime="20230103 10:37:43.356"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:37:43.359" level="INFO">1099511627776</msg>
<status status="PASS" starttime="20230103 10:37:43.357" endtime="20230103 10:37:43.359"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:37:43.360" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:37:43.359" endtime="20230103 10:37:43.361"/>
</kw>
<status status="PASS" starttime="20230103 10:37:37.384" endtime="20230103 10:37:43.361"/>
</kw>
<msg timestamp="20230103 10:37:43.361" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:37:37.383" endtime="20230103 10:37:43.362"/>
</kw>
<msg timestamp="20230103 10:37:43.362" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" starttime="20230103 10:37:37.382" endtime="20230103 10:37:43.362"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1099511627776</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230103 10:37:43.362" endtime="20230103 10:37:43.363"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:37:43.369" level="INFO">Running command 'ozone sh bucket info o3:///74300-without-host/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:37:49.022" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:37:49.022" level="INFO">${output} = 1000</msg>
<status status="PASS" starttime="20230103 10:37:43.366" endtime="20230103 10:37:49.023"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:37:49.024" level="INFO">1000</msg>
<status status="PASS" starttime="20230103 10:37:49.023" endtime="20230103 10:37:49.024"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:37:49.025" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:37:49.025" endtime="20230103 10:37:49.025"/>
</kw>
<status status="PASS" starttime="20230103 10:37:43.365" endtime="20230103 10:37:49.026"/>
</kw>
<msg timestamp="20230103 10:37:49.026" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:37:43.364" endtime="20230103 10:37:49.027"/>
</kw>
<msg timestamp="20230103 10:37:49.027" level="INFO">${result} = 1000</msg>
<status status="PASS" starttime="20230103 10:37:43.363" endtime="20230103 10:37:49.027"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1000</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230103 10:37:49.027" endtime="20230103 10:37:49.028"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '.[] | select(.name=="bb1") | .volumeName'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:37:49.033" level="INFO">Running command 'ozone sh bucket list o3:///74300-without-host/ | jq -r '.[] | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:37:54.728" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:37:54.728" level="INFO">${output} = 74300-without-host</msg>
<status status="PASS" starttime="20230103 10:37:49.030" endtime="20230103 10:37:54.728"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:37:54.730" level="INFO">74300-without-host</msg>
<status status="PASS" starttime="20230103 10:37:54.729" endtime="20230103 10:37:54.730"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:37:54.731" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:37:54.730" endtime="20230103 10:37:54.731"/>
</kw>
<status status="PASS" starttime="20230103 10:37:49.030" endtime="20230103 10:37:54.731"/>
</kw>
<msg timestamp="20230103 10:37:54.732" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:37:49.029" endtime="20230103 10:37:54.732"/>
</kw>
<msg timestamp="20230103 10:37:54.733" level="INFO">${result} = 74300-without-host</msg>
<status status="PASS" starttime="20230103 10:37:49.028" endtime="20230103 10:37:54.733"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${volume}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230103 10:37:54.733" endtime="20230103 10:37:54.734"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Test key handling" library="ozone-shell-lib">
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:37:54.740" level="INFO">Running command 'ozone sh key put o3:///74300-without-host/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:38:03.851" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:38:03.851" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230103 10:37:54.737" endtime="20230103 10:38:03.851"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:38:03.853" level="INFO"/>
<status status="PASS" starttime="20230103 10:38:03.852" endtime="20230103 10:38:03.853"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:38:03.854" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:38:03.853" endtime="20230103 10:38:03.854"/>
</kw>
<status status="PASS" starttime="20230103 10:37:54.736" endtime="20230103 10:38:03.854"/>
</kw>
<msg timestamp="20230103 10:38:03.854" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:37:54.736" endtime="20230103 10:38:03.855"/>
</kw>
<status status="PASS" starttime="20230103 10:37:54.735" endtime="20230103 10:38:03.855"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:38:03.860" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:38:03.864" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:38:03.864" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230103 10:38:03.857" endtime="20230103 10:38:03.864"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:38:03.865" level="INFO"/>
<status status="PASS" starttime="20230103 10:38:03.865" endtime="20230103 10:38:03.866"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:38:03.866" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:38:03.866" endtime="20230103 10:38:03.866"/>
</kw>
<status status="PASS" starttime="20230103 10:38:03.856" endtime="20230103 10:38:03.867"/>
</kw>
<msg timestamp="20230103 10:38:03.867" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:38:03.856" endtime="20230103 10:38:03.868"/>
</kw>
<status status="PASS" starttime="20230103 10:38:03.855" endtime="20230103 10:38:03.868"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:38:03.874" level="INFO">Running command 'ozone sh key get o3:///74300-without-host/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:38:12.677" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:38:12.678" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230103 10:38:03.871" endtime="20230103 10:38:12.678"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:38:12.679" level="INFO"/>
<status status="PASS" starttime="20230103 10:38:12.678" endtime="20230103 10:38:12.679"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:38:12.680" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:38:12.680" endtime="20230103 10:38:12.680"/>
</kw>
<status status="PASS" starttime="20230103 10:38:03.870" endtime="20230103 10:38:12.681"/>
</kw>
<msg timestamp="20230103 10:38:12.681" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:38:03.869" endtime="20230103 10:38:12.682"/>
</kw>
<status status="PASS" starttime="20230103 10:38:03.868" endtime="20230103 10:38:12.682"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:38:12.687" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:38:12.691" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:38:12.691" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230103 10:38:12.684" endtime="20230103 10:38:12.691"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:38:12.693" level="INFO"/>
<status status="PASS" starttime="20230103 10:38:12.692" endtime="20230103 10:38:12.693"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:38:12.693" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:38:12.693" endtime="20230103 10:38:12.694"/>
</kw>
<status status="PASS" starttime="20230103 10:38:12.683" endtime="20230103 10:38:12.694"/>
</kw>
<msg timestamp="20230103 10:38:12.694" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:38:12.683" endtime="20230103 10:38:12.695"/>
</kw>
<status status="PASS" starttime="20230103 10:38:12.682" endtime="20230103 10:38:12.696"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:38:12.701" level="INFO">Running command 'ozone sh key put -t RATIS o3:///74300-without-host/bb1/key1_RATIS /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:38:21.649" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:38:21.650" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230103 10:38:12.698" endtime="20230103 10:38:21.650"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:38:21.651" level="INFO"/>
<status status="PASS" starttime="20230103 10:38:21.650" endtime="20230103 10:38:21.651"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:38:21.652" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:38:21.652" endtime="20230103 10:38:21.652"/>
</kw>
<status status="PASS" starttime="20230103 10:38:12.697" endtime="20230103 10:38:21.653"/>
</kw>
<msg timestamp="20230103 10:38:21.653" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:38:12.697" endtime="20230103 10:38:21.653"/>
</kw>
<status status="PASS" starttime="20230103 10:38:12.696" endtime="20230103 10:38:21.654"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1_RATIS</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:38:21.660" level="INFO">Running command 'rm -f /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:38:21.663" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:38:21.664" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230103 10:38:21.656" endtime="20230103 10:38:21.664"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:38:21.665" level="INFO"/>
<status status="PASS" starttime="20230103 10:38:21.664" endtime="20230103 10:38:21.665"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:38:21.666" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:38:21.665" endtime="20230103 10:38:21.666"/>
</kw>
<status status="PASS" starttime="20230103 10:38:21.656" endtime="20230103 10:38:21.667"/>
</kw>
<msg timestamp="20230103 10:38:21.667" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:38:21.655" endtime="20230103 10:38:21.668"/>
</kw>
<status status="PASS" starttime="20230103 10:38:21.654" endtime="20230103 10:38:21.668"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:38:21.676" level="INFO">Running command 'ozone sh key get o3:///74300-without-host/bb1/key1_RATIS /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:38:29.837" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:38:29.837" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230103 10:38:21.670" endtime="20230103 10:38:29.837"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:38:29.839" level="INFO"/>
<status status="PASS" starttime="20230103 10:38:29.838" endtime="20230103 10:38:29.839"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:38:29.840" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:38:29.839" endtime="20230103 10:38:29.840"/>
</kw>
<status status="PASS" starttime="20230103 10:38:21.669" endtime="20230103 10:38:29.840"/>
</kw>
<msg timestamp="20230103 10:38:29.840" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:38:21.669" endtime="20230103 10:38:29.841"/>
</kw>
<status status="PASS" starttime="20230103 10:38:21.668" endtime="20230103 10:38:29.841"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:38:29.848" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:38:29.852" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:38:29.852" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230103 10:38:29.844" endtime="20230103 10:38:29.852"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:38:29.854" level="INFO"/>
<status status="PASS" starttime="20230103 10:38:29.853" endtime="20230103 10:38:29.854"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:38:29.855" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:38:29.855" endtime="20230103 10:38:29.855"/>
</kw>
<status status="PASS" starttime="20230103 10:38:29.844" endtime="20230103 10:38:29.856"/>
</kw>
<msg timestamp="20230103 10:38:29.856" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:38:29.842" endtime="20230103 10:38:29.857"/>
</kw>
<status status="PASS" starttime="20230103 10:38:29.841" endtime="20230103 10:38:29.857"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:38:29.864" level="INFO">Running command 'ozone sh key info o3:///74300-without-host/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")' 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:38:35.635" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:38:35.635" level="INFO">${output} = {
  "volumeName": "74300-without-host",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17539,
  "creationTime": "2023-01-03T10:38:18.066Z",
  "modificationTime": "2023-01-03T10:38:21.216...</msg>
<status status="PASS" starttime="20230103 10:38:29.860" endtime="20230103 10:38:35.636"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:38:35.637" level="INFO">{
  "volumeName": "74300-without-host",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17539,
  "creationTime": "2023-01-03T10:38:18.066Z",
  "modificationTime": "2023-01-03T10:38:21.216Z",
  "replicationConfig": {
    "replicationFactor": "THREE",
    "requiredNodes": 3,
    "replicationType": "RATIS"
  },
  "metadata": {},
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 111677748019200110,
      "length": 17539,
      "offset": 0,
      "keyOffset": 0
    }
  ]
}</msg>
<status status="PASS" starttime="20230103 10:38:35.636" endtime="20230103 10:38:35.637"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:38:35.638" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:38:35.638" endtime="20230103 10:38:35.638"/>
</kw>
<status status="PASS" starttime="20230103 10:38:29.859" endtime="20230103 10:38:35.639"/>
</kw>
<msg timestamp="20230103 10:38:35.639" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:38:29.859" endtime="20230103 10:38:35.640"/>
</kw>
<msg timestamp="20230103 10:38:35.640" level="INFO">${result} = {
  "volumeName": "74300-without-host",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17539,
  "creationTime": "2023-01-03T10:38:18.066Z",
  "modificationTime": "2023-01-03T10:38:21.216...</msg>
<status status="PASS" starttime="20230103 10:38:29.857" endtime="20230103 10:38:35.640"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230103 10:38:35.640" endtime="20230103 10:38:35.641"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:38:35.646" level="INFO">Running command 'ozone sh key delete o3:///74300-without-host/bb1/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:38:41.406" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:38:41.407" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230103 10:38:35.643" endtime="20230103 10:38:41.407"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:38:41.408" level="INFO"/>
<status status="PASS" starttime="20230103 10:38:41.407" endtime="20230103 10:38:41.408"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:38:41.409" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:38:41.409" endtime="20230103 10:38:41.410"/>
</kw>
<status status="PASS" starttime="20230103 10:38:35.642" endtime="20230103 10:38:41.410"/>
</kw>
<msg timestamp="20230103 10:38:41.410" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:38:35.642" endtime="20230103 10:38:41.411"/>
</kw>
<status status="PASS" starttime="20230103 10:38:35.641" endtime="20230103 10:38:41.412"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:38:41.418" level="INFO">Running command 'ozone sh key cp o3:///74300-without-host/bb1 key1 key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:38:50.841" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:38:50.842" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230103 10:38:41.414" endtime="20230103 10:38:50.842"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:38:50.844" level="INFO"/>
<status status="PASS" starttime="20230103 10:38:50.842" endtime="20230103 10:38:50.844"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:38:50.845" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:38:50.844" endtime="20230103 10:38:50.845"/>
</kw>
<status status="PASS" starttime="20230103 10:38:41.414" endtime="20230103 10:38:50.845"/>
</kw>
<msg timestamp="20230103 10:38:50.845" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:38:41.413" endtime="20230103 10:38:50.846"/>
</kw>
<status status="PASS" starttime="20230103 10:38:41.412" endtime="20230103 10:38:50.847"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:38:50.852" level="INFO">Running command 'rm -f /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:38:50.856" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:38:50.856" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230103 10:38:50.849" endtime="20230103 10:38:50.856"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:38:50.858" level="INFO"/>
<status status="PASS" starttime="20230103 10:38:50.857" endtime="20230103 10:38:50.859"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:38:50.859" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:38:50.859" endtime="20230103 10:38:50.860"/>
</kw>
<status status="PASS" starttime="20230103 10:38:50.848" endtime="20230103 10:38:50.860"/>
</kw>
<msg timestamp="20230103 10:38:50.860" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:38:50.848" endtime="20230103 10:38:50.861"/>
</kw>
<status status="PASS" starttime="20230103 10:38:50.847" endtime="20230103 10:38:50.862"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:38:50.867" level="INFO">Running command 'ozone sh key get o3:///74300-without-host/bb1/key1-copy /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:38:59.420" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:38:59.421" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230103 10:38:50.864" endtime="20230103 10:38:59.421"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:38:59.422" level="INFO"/>
<status status="PASS" starttime="20230103 10:38:59.421" endtime="20230103 10:38:59.423"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:38:59.424" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:38:59.423" endtime="20230103 10:38:59.424"/>
</kw>
<status status="PASS" starttime="20230103 10:38:50.863" endtime="20230103 10:38:59.425"/>
</kw>
<msg timestamp="20230103 10:38:59.425" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:38:50.863" endtime="20230103 10:38:59.426"/>
</kw>
<status status="PASS" starttime="20230103 10:38:50.862" endtime="20230103 10:38:59.426"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:38:59.432" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:38:59.439" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:38:59.439" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230103 10:38:59.429" endtime="20230103 10:38:59.439"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:38:59.442" level="INFO"/>
<status status="PASS" starttime="20230103 10:38:59.440" endtime="20230103 10:38:59.442"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:38:59.443" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:38:59.442" endtime="20230103 10:38:59.444"/>
</kw>
<status status="PASS" starttime="20230103 10:38:59.428" endtime="20230103 10:38:59.444"/>
</kw>
<msg timestamp="20230103 10:38:59.444" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:38:59.428" endtime="20230103 10:38:59.445"/>
</kw>
<status status="PASS" starttime="20230103 10:38:59.427" endtime="20230103 10:38:59.445"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:38:59.454" level="INFO">Running command 'ozone sh key delete o3:///74300-without-host/bb1/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:39:04.895" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:39:04.895" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230103 10:38:59.448" endtime="20230103 10:39:04.895"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:39:04.897" level="INFO"/>
<status status="PASS" starttime="20230103 10:39:04.896" endtime="20230103 10:39:04.897"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:39:04.898" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:39:04.897" endtime="20230103 10:39:04.898"/>
</kw>
<status status="PASS" starttime="20230103 10:38:59.447" endtime="20230103 10:39:04.898"/>
</kw>
<msg timestamp="20230103 10:39:04.898" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:38:59.447" endtime="20230103 10:39:04.899"/>
</kw>
<status status="PASS" starttime="20230103 10:38:59.445" endtime="20230103 10:39:04.900"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:39:04.904" level="INFO">Running command 'ozone sh key get o3:///74300-without-host/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:39:11.130" level="INFO">${rc} = 255</msg>
<msg timestamp="20230103 10:39:11.131" level="INFO">${output} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20230103 10:39:04.901" endtime="20230103 10:39:11.131"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:39:11.133" level="INFO">/tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20230103 10:39:11.131" endtime="20230103 10:39:11.133"/>
</kw>
<msg timestamp="20230103 10:39:11.134" level="INFO">${result} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20230103 10:39:04.900" endtime="20230103 10:39:11.134"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230103 10:39:11.134" endtime="20230103 10:39:11.134"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:39:11.140" level="INFO">Running command 'ozone sh key get --force o3:///74300-without-host/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:39:20.098" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:39:20.098" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230103 10:39:11.137" endtime="20230103 10:39:20.098"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:39:20.100" level="INFO"/>
<status status="PASS" starttime="20230103 10:39:20.099" endtime="20230103 10:39:20.100"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:39:20.101" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:39:20.100" endtime="20230103 10:39:20.101"/>
</kw>
<status status="PASS" starttime="20230103 10:39:11.136" endtime="20230103 10:39:20.103"/>
</kw>
<msg timestamp="20230103 10:39:20.103" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:39:11.136" endtime="20230103 10:39:20.104"/>
</kw>
<msg timestamp="20230103 10:39:20.104" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230103 10:39:11.135" endtime="20230103 10:39:20.104"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230103 10:39:20.106" endtime="20230103 10:39:20.106"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:39:20.114" level="INFO">Running command 'ozone sh key info o3:///74300-without-host/bb1/key1 | jq -r '. | select(.name=="key1")' 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:39:26.363" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:39:26.363" level="INFO">${output} = {
  "volumeName": "74300-without-host",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17539,
  "creationTime": "2023-01-03T10:38:00.317Z",
  "modificationTime": "2023-01-03T10:38:03.177Z",
  ...</msg>
<status status="PASS" starttime="20230103 10:39:20.109" endtime="20230103 10:39:26.363"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:39:26.365" level="INFO">{
  "volumeName": "74300-without-host",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17539,
  "creationTime": "2023-01-03T10:38:00.317Z",
  "modificationTime": "2023-01-03T10:38:03.177Z",
  "replicationConfig": {
    "replicationFactor": "THREE",
    "requiredNodes": 3,
    "replicationType": "RATIS"
  },
  "metadata": {},
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 111677748019200110,
      "length": 17539,
      "offset": 0,
      "keyOffset": 0
    }
  ]
}</msg>
<status status="PASS" starttime="20230103 10:39:26.364" endtime="20230103 10:39:26.365"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:39:26.366" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:39:26.365" endtime="20230103 10:39:26.366"/>
</kw>
<status status="PASS" starttime="20230103 10:39:20.108" endtime="20230103 10:39:26.367"/>
</kw>
<msg timestamp="20230103 10:39:26.367" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:39:20.108" endtime="20230103 10:39:26.368"/>
</kw>
<msg timestamp="20230103 10:39:26.368" level="INFO">${result} = {
  "volumeName": "74300-without-host",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17539,
  "creationTime": "2023-01-03T10:38:00.317Z",
  "modificationTime": "2023-01-03T10:38:03.177Z",
  ...</msg>
<status status="PASS" starttime="20230103 10:39:20.106" endtime="20230103 10:39:26.368"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230103 10:39:26.369" endtime="20230103 10:39:26.369"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.[] | select(.name=="key1") | .name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:39:26.376" level="INFO">Running command 'ozone sh key list o3:///74300-without-host/bb1 | jq -r '.[] | select(.name=="key1") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:39:32.777" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:39:32.777" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20230103 10:39:26.372" endtime="20230103 10:39:32.777"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:39:32.779" level="INFO">key1</msg>
<status status="PASS" starttime="20230103 10:39:32.778" endtime="20230103 10:39:32.779"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:39:32.780" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:39:32.779" endtime="20230103 10:39:32.780"/>
</kw>
<status status="PASS" starttime="20230103 10:39:26.372" endtime="20230103 10:39:32.780"/>
</kw>
<msg timestamp="20230103 10:39:32.780" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:39:26.371" endtime="20230103 10:39:32.781"/>
</kw>
<msg timestamp="20230103 10:39:32.782" level="INFO">${result} = key1</msg>
<status status="PASS" starttime="20230103 10:39:26.370" endtime="20230103 10:39:32.782"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230103 10:39:32.782" endtime="20230103 10:39:32.783"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:39:32.788" level="INFO">Running command 'ozone sh key rename o3:///74300-without-host/bb1 key1 key2 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:39:37.920" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:39:37.920" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230103 10:39:32.785" endtime="20230103 10:39:37.920"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:39:37.922" level="INFO"/>
<status status="PASS" starttime="20230103 10:39:37.921" endtime="20230103 10:39:37.922"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:39:37.923" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:39:37.922" endtime="20230103 10:39:37.923"/>
</kw>
<status status="PASS" starttime="20230103 10:39:32.784" endtime="20230103 10:39:37.924"/>
</kw>
<msg timestamp="20230103 10:39:37.924" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:39:32.784" endtime="20230103 10:39:37.925"/>
</kw>
<status status="PASS" starttime="20230103 10:39:32.783" endtime="20230103 10:39:37.925"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:39:37.932" level="INFO">Running command 'ozone sh key list o3:///74300-without-host/bb1 | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:39:44.121" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:39:44.121" level="INFO">${output} = key2</msg>
<status status="PASS" starttime="20230103 10:39:37.929" endtime="20230103 10:39:44.121"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:39:44.124" level="INFO">key2</msg>
<status status="PASS" starttime="20230103 10:39:44.122" endtime="20230103 10:39:44.124"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:39:44.126" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:39:44.124" endtime="20230103 10:39:44.127"/>
</kw>
<status status="PASS" starttime="20230103 10:39:37.928" endtime="20230103 10:39:44.128"/>
</kw>
<msg timestamp="20230103 10:39:44.128" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:39:37.927" endtime="20230103 10:39:44.129"/>
</kw>
<msg timestamp="20230103 10:39:44.130" level="INFO">${result} = key2</msg>
<status status="PASS" starttime="20230103 10:39:37.925" endtime="20230103 10:39:44.130"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230103 10:39:44.131" endtime="20230103 10:39:44.132"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:39:44.141" level="INFO">Running command 'ozone sh key delete o3:///74300-without-host/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:39:50.224" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:39:50.224" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230103 10:39:44.136" endtime="20230103 10:39:50.224"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:39:50.226" level="INFO"/>
<status status="PASS" starttime="20230103 10:39:50.225" endtime="20230103 10:39:50.226"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:39:50.228" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:39:50.227" endtime="20230103 10:39:50.228"/>
</kw>
<status status="PASS" starttime="20230103 10:39:44.135" endtime="20230103 10:39:50.228"/>
</kw>
<msg timestamp="20230103 10:39:50.229" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:39:44.134" endtime="20230103 10:39:50.230"/>
</kw>
<status status="PASS" starttime="20230103 10:39:44.133" endtime="20230103 10:39:50.230"/>
</kw>
<status status="PASS" starttime="20230103 10:37:54.734" endtime="20230103 10:39:50.230"/>
</kw>
<status status="PASS" starttime="20230103 10:37:54.734" endtime="20230103 10:39:50.230"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --space-quota ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:39:50.237" level="INFO">Running command 'ozone sh volume clrquota --space-quota o3:///74300-without-host 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:39:56.190" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:39:56.190" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230103 10:39:50.233" endtime="20230103 10:39:56.190"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:39:56.192" level="INFO"/>
<status status="PASS" starttime="20230103 10:39:56.191" endtime="20230103 10:39:56.192"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:39:56.193" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:39:56.192" endtime="20230103 10:39:56.193"/>
</kw>
<status status="PASS" starttime="20230103 10:39:50.232" endtime="20230103 10:39:56.194"/>
</kw>
<msg timestamp="20230103 10:39:56.194" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:39:50.232" endtime="20230103 10:39:56.195"/>
</kw>
<status status="PASS" starttime="20230103 10:39:50.231" endtime="20230103 10:39:56.196"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:39:56.201" level="INFO">Running command 'ozone sh volume info o3:///74300-without-host | jq -r '. | select(.name=="74300-without-host") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:40:02.532" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:40:02.532" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20230103 10:39:56.198" endtime="20230103 10:40:02.532"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:40:02.534" level="INFO">-1</msg>
<status status="PASS" starttime="20230103 10:40:02.533" endtime="20230103 10:40:02.535"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:40:02.536" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:40:02.535" endtime="20230103 10:40:02.536"/>
</kw>
<status status="PASS" starttime="20230103 10:39:56.198" endtime="20230103 10:40:02.536"/>
</kw>
<msg timestamp="20230103 10:40:02.536" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:39:56.197" endtime="20230103 10:40:02.537"/>
</kw>
<msg timestamp="20230103 10:40:02.537" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20230103 10:39:56.196" endtime="20230103 10:40:02.537"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230103 10:40:02.538" endtime="20230103 10:40:02.539"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --namespace-quota ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:40:02.546" level="INFO">Running command 'ozone sh volume clrquota --namespace-quota o3:///74300-without-host 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:40:08.383" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:40:08.383" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230103 10:40:02.541" endtime="20230103 10:40:08.383"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:40:08.386" level="INFO"/>
<status status="PASS" starttime="20230103 10:40:08.384" endtime="20230103 10:40:08.386"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:40:08.387" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:40:08.386" endtime="20230103 10:40:08.387"/>
</kw>
<status status="PASS" starttime="20230103 10:40:02.541" endtime="20230103 10:40:08.388"/>
</kw>
<msg timestamp="20230103 10:40:08.388" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:40:02.540" endtime="20230103 10:40:08.389"/>
</kw>
<status status="PASS" starttime="20230103 10:40:02.539" endtime="20230103 10:40:08.389"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:40:08.396" level="INFO">Running command 'ozone sh volume info o3:///74300-without-host | jq -r '. | select(.name=="74300-without-host") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:40:14.398" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:40:14.398" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20230103 10:40:08.393" endtime="20230103 10:40:14.399"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:40:14.401" level="INFO">-1</msg>
<status status="PASS" starttime="20230103 10:40:14.400" endtime="20230103 10:40:14.402"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:40:14.403" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:40:14.402" endtime="20230103 10:40:14.403"/>
</kw>
<status status="PASS" starttime="20230103 10:40:08.391" endtime="20230103 10:40:14.403"/>
</kw>
<msg timestamp="20230103 10:40:14.404" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:40:08.391" endtime="20230103 10:40:14.404"/>
</kw>
<msg timestamp="20230103 10:40:14.405" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20230103 10:40:08.390" endtime="20230103 10:40:14.405"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230103 10:40:14.405" endtime="20230103 10:40:14.406"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --space-quota ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:40:14.412" level="INFO">Running command 'ozone sh bucket clrquota --space-quota o3:///74300-without-host/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:40:20.379" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:40:20.379" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230103 10:40:14.409" endtime="20230103 10:40:20.379"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:40:20.381" level="INFO"/>
<status status="PASS" starttime="20230103 10:40:20.380" endtime="20230103 10:40:20.381"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:40:20.382" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:40:20.381" endtime="20230103 10:40:20.382"/>
</kw>
<status status="PASS" starttime="20230103 10:40:14.408" endtime="20230103 10:40:20.383"/>
</kw>
<msg timestamp="20230103 10:40:20.383" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:40:14.407" endtime="20230103 10:40:20.384"/>
</kw>
<status status="PASS" starttime="20230103 10:40:14.406" endtime="20230103 10:40:20.384"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:40:20.390" level="INFO">Running command 'ozone sh bucket info o3:///74300-without-host/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:40:26.885" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:40:26.886" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20230103 10:40:20.387" endtime="20230103 10:40:26.886"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:40:26.889" level="INFO">-1</msg>
<status status="PASS" starttime="20230103 10:40:26.888" endtime="20230103 10:40:26.889"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:40:26.890" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:40:26.889" endtime="20230103 10:40:26.890"/>
</kw>
<status status="PASS" starttime="20230103 10:40:20.386" endtime="20230103 10:40:26.891"/>
</kw>
<msg timestamp="20230103 10:40:26.891" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:40:20.386" endtime="20230103 10:40:26.891"/>
</kw>
<msg timestamp="20230103 10:40:26.892" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20230103 10:40:20.384" endtime="20230103 10:40:26.892"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230103 10:40:26.892" endtime="20230103 10:40:26.893"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --namespace-quota ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:40:26.899" level="INFO">Running command 'ozone sh bucket clrquota --namespace-quota o3:///74300-without-host/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:40:32.470" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:40:32.470" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230103 10:40:26.896" endtime="20230103 10:40:32.470"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:40:32.472" level="INFO"/>
<status status="PASS" starttime="20230103 10:40:32.471" endtime="20230103 10:40:32.472"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:40:32.473" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:40:32.472" endtime="20230103 10:40:32.473"/>
</kw>
<status status="PASS" starttime="20230103 10:40:26.895" endtime="20230103 10:40:32.474"/>
</kw>
<msg timestamp="20230103 10:40:32.474" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:40:26.894" endtime="20230103 10:40:32.474"/>
</kw>
<status status="PASS" starttime="20230103 10:40:26.893" endtime="20230103 10:40:32.475"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:40:32.481" level="INFO">Running command 'ozone sh bucket info o3:///74300-without-host/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:40:37.756" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:40:37.756" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20230103 10:40:32.478" endtime="20230103 10:40:37.756"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:40:37.758" level="INFO">-1</msg>
<status status="PASS" starttime="20230103 10:40:37.757" endtime="20230103 10:40:37.758"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:40:37.759" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:40:37.758" endtime="20230103 10:40:37.759"/>
</kw>
<status status="PASS" starttime="20230103 10:40:32.477" endtime="20230103 10:40:37.760"/>
</kw>
<msg timestamp="20230103 10:40:37.760" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:40:32.476" endtime="20230103 10:40:37.761"/>
</kw>
<msg timestamp="20230103 10:40:37.761" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20230103 10:40:32.475" endtime="20230103 10:40:37.762"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230103 10:40:37.762" endtime="20230103 10:40:37.762"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:40:37.768" level="INFO">Running command 'ozone sh bucket delete o3:///74300-without-host/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:40:43.027" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:40:43.027" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230103 10:40:37.765" endtime="20230103 10:40:43.027"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:40:43.029" level="INFO"/>
<status status="PASS" starttime="20230103 10:40:43.028" endtime="20230103 10:40:43.029"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:40:43.030" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:40:43.030" endtime="20230103 10:40:43.030"/>
</kw>
<status status="PASS" starttime="20230103 10:40:37.764" endtime="20230103 10:40:43.031"/>
</kw>
<msg timestamp="20230103 10:40:43.031" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:40:37.764" endtime="20230103 10:40:43.032"/>
</kw>
<status status="PASS" starttime="20230103 10:40:37.762" endtime="20230103 10:40:43.032"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:40:43.038" level="INFO">Running command 'ozone sh volume delete o3:///74300-without-host 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:40:48.623" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:40:48.623" level="INFO">${output} = Volume 74300-without-host is deleted</msg>
<status status="PASS" starttime="20230103 10:40:43.035" endtime="20230103 10:40:48.623"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:40:48.625" level="INFO">Volume 74300-without-host is deleted</msg>
<status status="PASS" starttime="20230103 10:40:48.624" endtime="20230103 10:40:48.625"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:40:48.626" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:40:48.625" endtime="20230103 10:40:48.626"/>
</kw>
<status status="PASS" starttime="20230103 10:40:43.034" endtime="20230103 10:40:48.626"/>
</kw>
<msg timestamp="20230103 10:40:48.626" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:40:43.033" endtime="20230103 10:40:48.627"/>
</kw>
<status status="PASS" starttime="20230103 10:40:43.032" endtime="20230103 10:40:48.627"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:40:48.633" level="INFO">Running command 'ozone sh volume create o3:///74300-without-host 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:40:53.835" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:40:53.835" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230103 10:40:48.630" endtime="20230103 10:40:53.835"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:40:53.836" level="INFO"/>
<status status="PASS" starttime="20230103 10:40:53.836" endtime="20230103 10:40:53.837"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:40:53.837" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:40:53.837" endtime="20230103 10:40:53.837"/>
</kw>
<status status="PASS" starttime="20230103 10:40:48.629" endtime="20230103 10:40:53.838"/>
</kw>
<msg timestamp="20230103 10:40:53.838" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:40:48.628" endtime="20230103 10:40:53.839"/>
</kw>
<status status="PASS" starttime="20230103 10:40:48.627" endtime="20230103 10:40:53.839"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:40:53.845" level="INFO">Running command 'ozone sh volume info o3:///74300-without-host | jq -r '. | select(.name=="74300-without-host") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:40:59.871" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:40:59.871" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20230103 10:40:53.842" endtime="20230103 10:40:59.871"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:40:59.872" level="INFO">-1</msg>
<status status="PASS" starttime="20230103 10:40:59.872" endtime="20230103 10:40:59.873"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:40:59.873" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:40:59.873" endtime="20230103 10:40:59.873"/>
</kw>
<status status="PASS" starttime="20230103 10:40:53.841" endtime="20230103 10:40:59.874"/>
</kw>
<msg timestamp="20230103 10:40:59.874" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:40:53.840" endtime="20230103 10:40:59.874"/>
</kw>
<msg timestamp="20230103 10:40:59.875" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20230103 10:40:53.839" endtime="20230103 10:40:59.875"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230103 10:40:59.875" endtime="20230103 10:40:59.876"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:40:59.883" level="INFO">Running command 'ozone sh volume info o3:///74300-without-host | jq -r '. | select(.name=="74300-without-host") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:41:05.980" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:41:05.980" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20230103 10:40:59.880" endtime="20230103 10:41:05.980"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:41:05.982" level="INFO">-1</msg>
<status status="PASS" starttime="20230103 10:41:05.981" endtime="20230103 10:41:05.982"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:41:05.983" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:41:05.982" endtime="20230103 10:41:05.983"/>
</kw>
<status status="PASS" starttime="20230103 10:40:59.879" endtime="20230103 10:41:05.984"/>
</kw>
<msg timestamp="20230103 10:41:05.984" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:40:59.878" endtime="20230103 10:41:05.984"/>
</kw>
<msg timestamp="20230103 10:41:05.985" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20230103 10:40:59.876" endtime="20230103 10:41:05.985"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230103 10:41:05.985" endtime="20230103 10:41:05.985"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:41:05.990" level="INFO">Running command 'ozone sh bucket create o3:///74300-without-host/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:41:11.862" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:41:11.862" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230103 10:41:05.987" endtime="20230103 10:41:11.862"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:41:11.864" level="INFO"/>
<status status="PASS" starttime="20230103 10:41:11.863" endtime="20230103 10:41:11.864"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:41:11.864" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:41:11.864" endtime="20230103 10:41:11.865"/>
</kw>
<status status="PASS" starttime="20230103 10:41:05.987" endtime="20230103 10:41:11.865"/>
</kw>
<msg timestamp="20230103 10:41:11.865" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:41:05.986" endtime="20230103 10:41:11.866"/>
</kw>
<status status="PASS" starttime="20230103 10:41:05.985" endtime="20230103 10:41:11.866"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:41:11.872" level="INFO">Running command 'ozone sh bucket info o3:///74300-without-host/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:41:17.632" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:41:17.633" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20230103 10:41:11.868" endtime="20230103 10:41:17.633"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:41:17.634" level="INFO">-1</msg>
<status status="PASS" starttime="20230103 10:41:17.633" endtime="20230103 10:41:17.634"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:41:17.635" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:41:17.634" endtime="20230103 10:41:17.635"/>
</kw>
<status status="PASS" starttime="20230103 10:41:11.868" endtime="20230103 10:41:17.636"/>
</kw>
<msg timestamp="20230103 10:41:17.636" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:41:11.867" endtime="20230103 10:41:17.636"/>
</kw>
<msg timestamp="20230103 10:41:17.637" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20230103 10:41:11.866" endtime="20230103 10:41:17.637"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230103 10:41:17.637" endtime="20230103 10:41:17.638"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:41:17.643" level="INFO">Running command 'ozone sh bucket info o3:///74300-without-host/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:41:23.633" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:41:23.634" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20230103 10:41:17.640" endtime="20230103 10:41:23.634"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:41:23.635" level="INFO">-1</msg>
<status status="PASS" starttime="20230103 10:41:23.634" endtime="20230103 10:41:23.635"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:41:23.636" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:41:23.635" endtime="20230103 10:41:23.636"/>
</kw>
<status status="PASS" starttime="20230103 10:41:17.640" endtime="20230103 10:41:23.637"/>
</kw>
<msg timestamp="20230103 10:41:23.637" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:41:17.639" endtime="20230103 10:41:23.637"/>
</kw>
<msg timestamp="20230103 10:41:23.638" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20230103 10:41:17.638" endtime="20230103 10:41:23.638"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230103 10:41:23.638" endtime="20230103 10:41:23.638"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:41:23.644" level="INFO">Running command 'ozone sh bucket delete o3:///74300-without-host/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:41:29.109" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:41:29.109" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230103 10:41:23.641" endtime="20230103 10:41:29.110"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:41:29.111" level="INFO"/>
<status status="PASS" starttime="20230103 10:41:29.110" endtime="20230103 10:41:29.112"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:41:29.113" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:41:29.112" endtime="20230103 10:41:29.113"/>
</kw>
<status status="PASS" starttime="20230103 10:41:23.640" endtime="20230103 10:41:29.113"/>
</kw>
<msg timestamp="20230103 10:41:29.113" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:41:23.639" endtime="20230103 10:41:29.114"/>
</kw>
<status status="PASS" starttime="20230103 10:41:23.639" endtime="20230103 10:41:29.114"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:41:29.121" level="INFO">Running command 'ozone sh volume delete o3:///74300-without-host 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:41:33.803" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20230103 10:41:29.117" endtime="20230103 10:41:33.803"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230103 10:41:33.804" endtime="20230103 10:41:33.804"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20230103 10:41:33.804" endtime="20230103 10:41:33.804"/>
</kw>
<status status="FAIL" starttime="20230103 10:41:29.117" endtime="20230103 10:41:33.805"/>
</kw>
<msg timestamp="20230103 10:41:33.805" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20230103 10:41:29.116" endtime="20230103 10:41:33.806"/>
</kw>
<status status="FAIL" starttime="20230103 10:41:29.115" endtime="20230103 10:41:33.806"/>
</kw>
<status status="FAIL" starttime="20230103 10:36:33.804" endtime="20230103 10:41:33.807"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20230103 10:36:33.802" endtime="20230103 10:41:33.808">Test timeout 5 minutes exceeded.</status>
</test>
<doc>Test ozone shell CLI usage</doc>
<status status="FAIL" starttime="20230103 10:27:40.863" endtime="20230103 10:41:33.811"/>
</suite>
<suite id="s1-s3-s6" name="Single Node" source="/opt/hadoop/smoketest/basic/single_node.robot">
<test id="s1-s3-s6-t1" name="Basic Freon smoketest for one datanode" line="25">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230103 10:41:33.856" endtime="20230103 10:41:33.858"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>10</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230103 10:41:33.861" level="INFO">${random} = wUxgCDpBPX</msg>
<status status="PASS" starttime="20230103 10:41:33.859" endtime="20230103 10:41:33.861"/>
</kw>
<kw name="Freon OCKG" library="freon">
<arg>prefix=${random}</arg>
<arg>args=--replication ONE --replication-type RATIS</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:41:33.872" level="INFO">Running command 'ozone freon ockg  -t 1 -n1 -p wUxgCDpBPX --replication ONE --replication-type RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:41:43.909" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:41:43.909" level="INFO">${output} = 2023-01-03 10:41:37,580 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-01-03 10:41:37,755 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230103 10:41:33.869" endtime="20230103 10:41:43.909"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:41:43.911" level="INFO">2023-01-03 10:41:37,580 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-01-03 10:41:37,755 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-01-03 10:41:37,759 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-01-03 10:41:38,020 [main] INFO freon.BaseFreonGenerator: Executing test with prefix wUxgCDpBPX and number-of-tests 1
2023-01-03 10:41:38,197 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-01-03 10:41:39,203 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-01-03 10:41:40,204 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-01-03 10:41:41,116 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2023-01-03 10:41:41,204 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-01-03 10:41:41,581 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2023-01-03 10:41:42,204 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-01-03 10:41:43,205 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2023-01-03 10:41:43,526 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=1, min=2724.146044, max=2724.146044, mean=2724.146044, stddev=0.0, median=2724.146044, p75=2724.146044, p95=2724.146044, p98=2724.146044, p99=2724.146044, p999=2724.146044, mean_rate=0.2912613215500195, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-01-03 10:41:43,529 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 5
2023-01-03 10:41:43,530 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-01-03 10:41:43,530 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20230103 10:41:43.910" endtime="20230103 10:41:43.911"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:41:43.912" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:41:43.911" endtime="20230103 10:41:43.912"/>
</kw>
<status status="PASS" starttime="20230103 10:41:33.867" endtime="20230103 10:41:43.913"/>
</kw>
<msg timestamp="20230103 10:41:43.913" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:41:33.867" endtime="20230103 10:41:43.914"/>
</kw>
<msg timestamp="20230103 10:41:43.914" level="INFO">${result} = 2023-01-03 10:41:37,580 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-01-03 10:41:37,755 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230103 10:41:33.864" endtime="20230103 10:41:43.914"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230103 10:41:43.915" endtime="20230103 10:41:43.915"/>
</kw>
<status status="PASS" starttime="20230103 10:41:33.862" endtime="20230103 10:41:43.915"/>
</kw>
<kw name="Freon OCKV" library="freon">
<arg>prefix=${random}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockv ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:41:43.923" level="INFO">Running command 'ozone freon ockv  -t 1 -n1 -p wUxgCDpBPX  2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:41:54.033" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:41:54.034" level="INFO">${output} = 2023-01-03 10:41:47,516 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-01-03 10:41:47,809 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230103 10:41:43.920" endtime="20230103 10:41:54.034"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:41:54.036" level="INFO">2023-01-03 10:41:47,516 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-01-03 10:41:47,809 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-01-03 10:41:47,813 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-01-03 10:41:48,139 [main] INFO freon.BaseFreonGenerator: Executing test with prefix wUxgCDpBPX and number-of-tests 1
2023-01-03 10:41:48,290 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-01-03 10:41:49,297 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-01-03 10:41:50,298 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-01-03 10:41:51,002 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2023-01-03 10:41:51,298 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-01-03 10:41:52,299 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-01-03 10:41:53,300 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2023-01-03 10:41:53,653 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-validate, count=1, min=48.347162, max=48.347162, mean=48.347162, stddev=0.0, median=48.347162, p75=48.347162, p95=48.347162, p98=48.347162, p99=48.347162, p999=48.347162, mean_rate=0.7695550324910521, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-01-03 10:41:53,653 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 5
2023-01-03 10:41:53,655 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-01-03 10:41:53,655 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20230103 10:41:54.034" endtime="20230103 10:41:54.036"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:41:54.037" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:41:54.036" endtime="20230103 10:41:54.037"/>
</kw>
<status status="PASS" starttime="20230103 10:41:43.919" endtime="20230103 10:41:54.038"/>
</kw>
<msg timestamp="20230103 10:41:54.039" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:41:43.918" endtime="20230103 10:41:54.040"/>
</kw>
<msg timestamp="20230103 10:41:54.040" level="INFO">${result} = 2023-01-03 10:41:47,516 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-01-03 10:41:47,809 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230103 10:41:43.917" endtime="20230103 10:41:54.040"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230103 10:41:54.041" endtime="20230103 10:41:54.042"/>
</kw>
<status status="PASS" starttime="20230103 10:41:43.916" endtime="20230103 10:41:54.042"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230103 10:41:33.854" endtime="20230103 10:41:54.042"/>
</test>
<doc>Smoketest for one datanode</doc>
<status status="PASS" starttime="20230103 10:41:33.819" endtime="20230103 10:41:54.044"/>
</suite>
<status status="FAIL" starttime="20230103 10:17:54.387" endtime="20230103 10:41:54.047"/>
</suite>
<suite id="s1-s4" name="Lib" source="/opt/hadoop/smoketest/lib">
<suite id="s1-s4-s1" name="Fs Tests" source="/opt/hadoop/smoketest/lib/fs_tests.robot">
<test id="s1-s4-s1-t1" name="Format o3fs URL without path" line="22">
<kw name="Format o3fs URL" library="fs">
<var>${result}</var>
<arg>vol1</arg>
<arg>bucket1</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20230103 10:15:20.731" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20230103 10:15:20.730" endtime="20230103 10:15:20.731"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230103 10:15:20.732" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20230103 10:15:20.731" endtime="20230103 10:15:20.733"/>
</kw>
<status status="PASS" starttime="20230103 10:15:20.729" endtime="20230103 10:15:20.733"/>
</kw>
<msg timestamp="20230103 10:15:20.733" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20230103 10:15:20.726" endtime="20230103 10:15:20.734"/>
</kw>
<msg timestamp="20230103 10:15:20.735" level="INFO">${result} = o3fs://bucket1.vol1.om/</msg>
<status status="PASS" starttime="20230103 10:15:20.722" endtime="20230103 10:15:20.735"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>o3fs://bucket1.vol1.om/</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230103 10:15:20.735" endtime="20230103 10:15:20.736"/>
</kw>
<status status="PASS" starttime="20230103 10:15:20.720" endtime="20230103 10:15:20.736"/>
</test>
<test id="s1-s4-s1-t2" name="Format o3fs URL with path" line="26">
<kw name="Format o3fs URL" library="fs">
<var>${result}</var>
<arg>vol1</arg>
<arg>bucket1</arg>
<arg>dir/file</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20230103 10:15:20.747" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20230103 10:15:20.747" endtime="20230103 10:15:20.747"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230103 10:15:20.748" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20230103 10:15:20.748" endtime="20230103 10:15:20.748"/>
</kw>
<status status="PASS" starttime="20230103 10:15:20.745" endtime="20230103 10:15:20.749"/>
</kw>
<msg timestamp="20230103 10:15:20.749" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20230103 10:15:20.743" endtime="20230103 10:15:20.750"/>
</kw>
<msg timestamp="20230103 10:15:20.751" level="INFO">${result} = o3fs://bucket1.vol1.om/dir/file</msg>
<status status="PASS" starttime="20230103 10:15:20.741" endtime="20230103 10:15:20.751"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>o3fs://bucket1.vol1.om/dir/file</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230103 10:15:20.751" endtime="20230103 10:15:20.752"/>
</kw>
<status status="PASS" starttime="20230103 10:15:20.740" endtime="20230103 10:15:20.752"/>
</test>
<test id="s1-s4-s1-t3" name="Format o3fs URL with OM" line="30">
<kw name="Format o3fs URL" library="fs">
<var>${result}</var>
<arg>vol1</arg>
<arg>bucket1</arg>
<arg>dir/file</arg>
<arg>omservice</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20230103 10:15:20.760" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20230103 10:15:20.759" endtime="20230103 10:15:20.760"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230103 10:15:20.761" level="INFO">${result} = .omservice</msg>
<status status="PASS" starttime="20230103 10:15:20.760" endtime="20230103 10:15:20.761"/>
</kw>
<status status="PASS" starttime="20230103 10:15:20.758" endtime="20230103 10:15:20.761"/>
</kw>
<msg timestamp="20230103 10:15:20.761" level="INFO">${om_with_leading} = .omservice</msg>
<status status="PASS" starttime="20230103 10:15:20.757" endtime="20230103 10:15:20.762"/>
</kw>
<msg timestamp="20230103 10:15:20.762" level="INFO">${result} = o3fs://bucket1.vol1.omservice/dir/file</msg>
<status status="PASS" starttime="20230103 10:15:20.756" endtime="20230103 10:15:20.762"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>o3fs://bucket1.vol1.omservice/dir/file</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230103 10:15:20.763" endtime="20230103 10:15:20.763"/>
</kw>
<status status="PASS" starttime="20230103 10:15:20.754" endtime="20230103 10:15:20.764"/>
</test>
<test id="s1-s4-s1-t4" name="Format ofs URL without path" line="35">
<kw name="Format ofs URL" library="fs">
<var>${result}</var>
<arg>vol1</arg>
<arg>bucket1</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20230103 10:15:20.773" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20230103 10:15:20.773" endtime="20230103 10:15:20.774"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230103 10:15:20.775" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20230103 10:15:20.774" endtime="20230103 10:15:20.775"/>
</kw>
<status status="PASS" starttime="20230103 10:15:20.772" endtime="20230103 10:15:20.775"/>
</kw>
<msg timestamp="20230103 10:15:20.775" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20230103 10:15:20.769" endtime="20230103 10:15:20.776"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20230103 10:15:20.778" endtime="20230103 10:15:20.780"/>
</kw>
<msg timestamp="20230103 10:15:20.780" level="INFO">${path_with_leading} = </msg>
<status status="PASS" starttime="20230103 10:15:20.777" endtime="20230103 10:15:20.780"/>
</kw>
<msg timestamp="20230103 10:15:20.782" level="INFO">${result} = ofs://om/vol1/bucket1</msg>
<status status="PASS" starttime="20230103 10:15:20.767" endtime="20230103 10:15:20.782"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>ofs://om/vol1/bucket1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230103 10:15:20.783" endtime="20230103 10:15:20.783"/>
</kw>
<status status="PASS" starttime="20230103 10:15:20.766" endtime="20230103 10:15:20.784"/>
</test>
<test id="s1-s4-s1-t5" name="Format ofs URL with path" line="39">
<kw name="Format ofs URL" library="fs">
<var>${result}</var>
<arg>vol1</arg>
<arg>bucket1</arg>
<arg>dir/file</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20230103 10:15:20.792" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20230103 10:15:20.791" endtime="20230103 10:15:20.792"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230103 10:15:20.793" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20230103 10:15:20.792" endtime="20230103 10:15:20.793"/>
</kw>
<status status="PASS" starttime="20230103 10:15:20.791" endtime="20230103 10:15:20.794"/>
</kw>
<msg timestamp="20230103 10:15:20.794" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20230103 10:15:20.788" endtime="20230103 10:15:20.794"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>/</arg>
<arg>${path}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20230103 10:15:20.798" level="INFO">${first} = d</msg>
<status status="PASS" starttime="20230103 10:15:20.797" endtime="20230103 10:15:20.798"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230103 10:15:20.801" level="INFO">${result} = /dir/file</msg>
<status status="PASS" starttime="20230103 10:15:20.798" endtime="20230103 10:15:20.801"/>
</kw>
<status status="PASS" starttime="20230103 10:15:20.796" endtime="20230103 10:15:20.802"/>
</kw>
<msg timestamp="20230103 10:15:20.802" level="INFO">${path_with_leading} = /dir/file</msg>
<status status="PASS" starttime="20230103 10:15:20.794" endtime="20230103 10:15:20.802"/>
</kw>
<msg timestamp="20230103 10:15:20.803" level="INFO">${result} = ofs://om/vol1/bucket1/dir/file</msg>
<status status="PASS" starttime="20230103 10:15:20.787" endtime="20230103 10:15:20.803"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>ofs://om/vol1/bucket1/dir/file</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230103 10:15:20.804" endtime="20230103 10:15:20.804"/>
</kw>
<status status="PASS" starttime="20230103 10:15:20.786" endtime="20230103 10:15:20.805"/>
</test>
<test id="s1-s4-s1-t6" name="Format ofs URL with OM" line="43">
<kw name="Format ofs URL" library="fs">
<var>${result}</var>
<arg>vol1</arg>
<arg>bucket1</arg>
<arg>dir/file</arg>
<arg>om:1234</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20230103 10:15:20.814" level="INFO">${last} = 4</msg>
<status status="PASS" starttime="20230103 10:15:20.814" endtime="20230103 10:15:20.815"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230103 10:15:20.816" level="INFO">${result} = om:1234/</msg>
<status status="PASS" starttime="20230103 10:15:20.815" endtime="20230103 10:15:20.816"/>
</kw>
<status status="PASS" starttime="20230103 10:15:20.811" endtime="20230103 10:15:20.816"/>
</kw>
<msg timestamp="20230103 10:15:20.816" level="INFO">${om_with_trailing} = om:1234/</msg>
<status status="PASS" starttime="20230103 10:15:20.809" endtime="20230103 10:15:20.816"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>/</arg>
<arg>${path}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20230103 10:15:20.821" level="INFO">${first} = d</msg>
<status status="PASS" starttime="20230103 10:15:20.820" endtime="20230103 10:15:20.821"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230103 10:15:20.822" level="INFO">${result} = /dir/file</msg>
<status status="PASS" starttime="20230103 10:15:20.821" endtime="20230103 10:15:20.822"/>
</kw>
<status status="PASS" starttime="20230103 10:15:20.819" endtime="20230103 10:15:20.823"/>
</kw>
<msg timestamp="20230103 10:15:20.823" level="INFO">${path_with_leading} = /dir/file</msg>
<status status="PASS" starttime="20230103 10:15:20.817" endtime="20230103 10:15:20.823"/>
</kw>
<msg timestamp="20230103 10:15:20.824" level="INFO">${result} = ofs://om:1234/vol1/bucket1/dir/file</msg>
<status status="PASS" starttime="20230103 10:15:20.808" endtime="20230103 10:15:20.824"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>ofs://om:1234/vol1/bucket1/dir/file</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230103 10:15:20.824" endtime="20230103 10:15:20.825"/>
</kw>
<status status="PASS" starttime="20230103 10:15:20.807" endtime="20230103 10:15:20.825"/>
</test>
<test id="s1-s4-s1-t7" name="Format FS URL with ofs scheme" line="48">
<kw name="Format FS URL" library="fs">
<var>${result}</var>
<arg>ofs</arg>
<arg>vol1</arg>
<arg>bucket1</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20230103 10:15:20.840" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20230103 10:15:20.839" endtime="20230103 10:15:20.840"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230103 10:15:20.842" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20230103 10:15:20.840" endtime="20230103 10:15:20.842"/>
</kw>
<status status="PASS" starttime="20230103 10:15:20.838" endtime="20230103 10:15:20.843"/>
</kw>
<msg timestamp="20230103 10:15:20.843" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20230103 10:15:20.835" endtime="20230103 10:15:20.843"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20230103 10:15:20.845" endtime="20230103 10:15:20.846"/>
</kw>
<msg timestamp="20230103 10:15:20.846" level="INFO">${path_with_leading} = </msg>
<status status="PASS" starttime="20230103 10:15:20.843" endtime="20230103 10:15:20.847"/>
</kw>
<status status="PASS" starttime="20230103 10:15:20.834" endtime="20230103 10:15:20.848"/>
</kw>
<msg timestamp="20230103 10:15:20.848" level="INFO">${url} = ofs://om/vol1/bucket1</msg>
<status status="PASS" starttime="20230103 10:15:20.833" endtime="20230103 10:15:20.848"/>
</kw>
<msg timestamp="20230103 10:15:20.849" level="INFO">${result} = ofs://om/vol1/bucket1</msg>
<status status="PASS" starttime="20230103 10:15:20.830" endtime="20230103 10:15:20.850"/>
</kw>
<kw name="Format ofs URL" library="fs">
<var>${expected}</var>
<arg>vol1</arg>
<arg>bucket1</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20230103 10:15:20.856" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20230103 10:15:20.855" endtime="20230103 10:15:20.857"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230103 10:15:20.858" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20230103 10:15:20.857" endtime="20230103 10:15:20.858"/>
</kw>
<status status="PASS" starttime="20230103 10:15:20.854" endtime="20230103 10:15:20.858"/>
</kw>
<msg timestamp="20230103 10:15:20.859" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20230103 10:15:20.852" endtime="20230103 10:15:20.859"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20230103 10:15:20.860" endtime="20230103 10:15:20.863"/>
</kw>
<msg timestamp="20230103 10:15:20.863" level="INFO">${path_with_leading} = </msg>
<status status="PASS" starttime="20230103 10:15:20.859" endtime="20230103 10:15:20.864"/>
</kw>
<msg timestamp="20230103 10:15:20.864" level="INFO">${expected} = ofs://om/vol1/bucket1</msg>
<status status="PASS" starttime="20230103 10:15:20.850" endtime="20230103 10:15:20.865"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230103 10:15:20.865" endtime="20230103 10:15:20.866"/>
</kw>
<status status="PASS" starttime="20230103 10:15:20.828" endtime="20230103 10:15:20.866"/>
</test>
<test id="s1-s4-s1-t8" name="Format FS URL with o3fs scheme" line="53">
<kw name="Format FS URL" library="fs">
<var>${result}</var>
<arg>o3fs</arg>
<arg>vol1</arg>
<arg>bucket1</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20230103 10:15:20.882" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20230103 10:15:20.881" endtime="20230103 10:15:20.882"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230103 10:15:20.884" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20230103 10:15:20.883" endtime="20230103 10:15:20.884"/>
</kw>
<status status="PASS" starttime="20230103 10:15:20.879" endtime="20230103 10:15:20.884"/>
</kw>
<msg timestamp="20230103 10:15:20.885" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20230103 10:15:20.876" endtime="20230103 10:15:20.886"/>
</kw>
<status status="PASS" starttime="20230103 10:15:20.875" endtime="20230103 10:15:20.886"/>
</kw>
<msg timestamp="20230103 10:15:20.887" level="INFO">${url} = o3fs://bucket1.vol1.om/</msg>
<status status="PASS" starttime="20230103 10:15:20.873" endtime="20230103 10:15:20.887"/>
</kw>
<msg timestamp="20230103 10:15:20.887" level="INFO">${result} = o3fs://bucket1.vol1.om/</msg>
<status status="PASS" starttime="20230103 10:15:20.871" endtime="20230103 10:15:20.887"/>
</kw>
<kw name="Format o3fs URL" library="fs">
<var>${expected}</var>
<arg>vol1</arg>
<arg>bucket1</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20230103 10:15:20.894" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20230103 10:15:20.893" endtime="20230103 10:15:20.894"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230103 10:15:20.896" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20230103 10:15:20.894" endtime="20230103 10:15:20.896"/>
</kw>
<status status="PASS" starttime="20230103 10:15:20.892" endtime="20230103 10:15:20.897"/>
</kw>
<msg timestamp="20230103 10:15:20.897" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20230103 10:15:20.891" endtime="20230103 10:15:20.897"/>
</kw>
<msg timestamp="20230103 10:15:20.898" level="INFO">${expected} = o3fs://bucket1.vol1.om/</msg>
<status status="PASS" starttime="20230103 10:15:20.888" endtime="20230103 10:15:20.898"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230103 10:15:20.898" endtime="20230103 10:15:20.899"/>
</kw>
<status status="PASS" starttime="20230103 10:15:20.869" endtime="20230103 10:15:20.900"/>
</test>
<test id="s1-s4-s1-t9" name="Format FS URL with unsupported scheme" line="58">
<kw name="Run Keyword And Expect Error" library="BuiltIn">
<var>${result}</var>
<arg>*</arg>
<arg>Format FS URL</arg>
<arg>http</arg>
<arg>org</arg>
<arg>apache</arg>
<doc>Runs the keyword and checks that the expected error occurred.</doc>
<kw name="Format FS URL" library="fs">
<arg>http</arg>
<arg>org</arg>
<arg>apache</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Fail" library="BuiltIn">
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<msg timestamp="20230103 10:15:20.916" level="FAIL">Unsupported FS scheme: http</msg>
<status status="FAIL" starttime="20230103 10:15:20.912" endtime="20230103 10:15:20.916"/>
</kw>
<status status="FAIL" starttime="20230103 10:15:20.910" endtime="20230103 10:15:20.917"/>
</kw>
<status status="FAIL" starttime="20230103 10:15:20.905" endtime="20230103 10:15:20.919"/>
</kw>
<msg timestamp="20230103 10:15:20.920" level="INFO">${result} = Unsupported FS scheme: http</msg>
<status status="PASS" starttime="20230103 10:15:20.905" endtime="20230103 10:15:20.920"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>http</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230103 10:15:20.920" endtime="20230103 10:15:20.921"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>nsupported</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230103 10:15:20.922" endtime="20230103 10:15:20.923"/>
</kw>
<status status="PASS" starttime="20230103 10:15:20.902" endtime="20230103 10:15:20.923"/>
</test>
<status status="PASS" starttime="20230103 10:15:20.668" endtime="20230103 10:15:20.927"/>
</suite>
<suite id="s1-s4-s2" name="Os Tests" source="/opt/hadoop/smoketest/lib/os_tests.robot">
<test id="s1-s4-s2-t1" name="Execute" line="22">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>echo 42</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:15:20.982" level="INFO">Running command 'echo 42 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:15:20.984" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:15:20.984" level="INFO">${output} = 42</msg>
<status status="PASS" starttime="20230103 10:15:20.974" endtime="20230103 10:15:20.984"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:15:20.985" level="INFO">42</msg>
<status status="PASS" starttime="20230103 10:15:20.984" endtime="20230103 10:15:20.986"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:15:20.986" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:15:20.986" endtime="20230103 10:15:20.987"/>
</kw>
<status status="PASS" starttime="20230103 10:15:20.973" endtime="20230103 10:15:20.988"/>
</kw>
<msg timestamp="20230103 10:15:20.988" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:15:20.973" endtime="20230103 10:15:20.989"/>
</kw>
<msg timestamp="20230103 10:15:20.989" level="INFO">${output} = 42</msg>
<status status="PASS" starttime="20230103 10:15:20.969" endtime="20230103 10:15:20.989"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${output}</arg>
<arg>42</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230103 10:15:20.990" endtime="20230103 10:15:20.991"/>
</kw>
<status status="PASS" starttime="20230103 10:15:20.968" endtime="20230103 10:15:20.992"/>
</test>
<test id="s1-s4-s2-t2" name="Execute failing command" line="26">
<kw name="Run Keyword And Expect Error" library="BuiltIn">
<arg>*</arg>
<arg>Execute</arg>
<arg>false</arg>
<doc>Runs the keyword and checks that the expected error occurred.</doc>
<kw name="Execute" library="os">
<arg>false</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:15:21.005" level="INFO">Running command 'false 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:15:21.007" level="INFO">${rc} = 1</msg>
<msg timestamp="20230103 10:15:21.007" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230103 10:15:21.002" endtime="20230103 10:15:21.008"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:15:21.010" level="INFO"/>
<status status="PASS" starttime="20230103 10:15:21.009" endtime="20230103 10:15:21.010"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:15:21.012" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<msg timestamp="20230103 10:15:21.014" level="FAIL">1 != 0</msg>
<status status="FAIL" starttime="20230103 10:15:21.011" endtime="20230103 10:15:21.015"/>
</kw>
<status status="FAIL" starttime="20230103 10:15:21.000" endtime="20230103 10:15:21.017"/>
</kw>
<msg timestamp="20230103 10:15:21.017" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20230103 10:15:20.999" endtime="20230103 10:15:21.017"/>
</kw>
<status status="FAIL" starttime="20230103 10:15:20.998" endtime="20230103 10:15:21.020"/>
</kw>
<status status="PASS" starttime="20230103 10:15:20.997" endtime="20230103 10:15:21.020"/>
</kw>
<status status="PASS" starttime="20230103 10:15:20.996" endtime="20230103 10:15:21.021"/>
</test>
<test id="s1-s4-s2-t3" name="Execute And Ignore Error" line="29">
<kw name="Execute And Ignore Error" library="os">
<var>${output}</var>
<arg>echo 123 &amp;&amp; false</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:15:21.034" level="INFO">Running command 'echo 123 &amp;&amp; false 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:15:21.036" level="INFO">${rc} = 1</msg>
<msg timestamp="20230103 10:15:21.036" level="INFO">${output} = 123</msg>
<status status="PASS" starttime="20230103 10:15:21.029" endtime="20230103 10:15:21.036"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:15:21.038" level="INFO">123</msg>
<status status="PASS" starttime="20230103 10:15:21.037" endtime="20230103 10:15:21.038"/>
</kw>
<msg timestamp="20230103 10:15:21.039" level="INFO">${output} = 123</msg>
<status status="PASS" starttime="20230103 10:15:21.026" endtime="20230103 10:15:21.039"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${output}</arg>
<arg>123</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230103 10:15:21.040" endtime="20230103 10:15:21.040"/>
</kw>
<status status="PASS" starttime="20230103 10:15:21.024" endtime="20230103 10:15:21.041"/>
</test>
<test id="s1-s4-s2-t4" name="Execute and checkrc" line="33">
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>echo failure &amp;&amp; exit 1</arg>
<arg>1</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:15:21.054" level="INFO">Running command 'echo failure &amp;&amp; exit 1 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:15:21.058" level="INFO">${rc} = 1</msg>
<msg timestamp="20230103 10:15:21.059" level="INFO">${output} = failure</msg>
<status status="PASS" starttime="20230103 10:15:21.048" endtime="20230103 10:15:21.059"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:15:21.061" level="INFO">failure</msg>
<status status="PASS" starttime="20230103 10:15:21.060" endtime="20230103 10:15:21.062"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:15:21.062" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:15:21.062" endtime="20230103 10:15:21.063"/>
</kw>
<msg timestamp="20230103 10:15:21.063" level="INFO">${output} = failure</msg>
<status status="PASS" starttime="20230103 10:15:21.047" endtime="20230103 10:15:21.063"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${output}</arg>
<arg>failure</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230103 10:15:21.063" endtime="20230103 10:15:21.064"/>
</kw>
<status status="PASS" starttime="20230103 10:15:21.045" endtime="20230103 10:15:21.064"/>
</test>
<test id="s1-s4-s2-t5" name="Execute and checkrc RC mismatch" line="37">
<kw name="Run Keyword And Expect Error" library="BuiltIn">
<arg>*</arg>
<arg>Execute and checkrc</arg>
<arg>echo failure &amp;&amp; exit 3</arg>
<arg>1</arg>
<doc>Runs the keyword and checks that the expected error occurred.</doc>
<kw name="Execute and checkrc" library="os">
<arg>echo failure &amp;&amp; exit 3</arg>
<arg>1</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:15:21.076" level="INFO">Running command 'echo failure &amp;&amp; exit 3 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:15:21.080" level="INFO">${rc} = 3</msg>
<msg timestamp="20230103 10:15:21.080" level="INFO">${output} = failure</msg>
<status status="PASS" starttime="20230103 10:15:21.071" endtime="20230103 10:15:21.080"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:15:21.083" level="INFO">failure</msg>
<status status="PASS" starttime="20230103 10:15:21.081" endtime="20230103 10:15:21.083"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:15:21.084" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<msg timestamp="20230103 10:15:21.085" level="FAIL">3 != 1</msg>
<status status="FAIL" starttime="20230103 10:15:21.084" endtime="20230103 10:15:21.085"/>
</kw>
<status status="FAIL" starttime="20230103 10:15:21.070" endtime="20230103 10:15:21.088"/>
</kw>
<status status="PASS" starttime="20230103 10:15:21.069" endtime="20230103 10:15:21.088"/>
</kw>
<status status="PASS" starttime="20230103 10:15:21.068" endtime="20230103 10:15:21.089"/>
</test>
<status status="PASS" starttime="20230103 10:15:20.931" endtime="20230103 10:15:21.092"/>
</suite>
<suite id="s1-s4-s3" name="String Tests" source="/opt/hadoop/smoketest/lib/string_tests.robot">
<test id="s1-s4-s3-t1" name="Ensure Leading without Leading" line="22">
<kw name="Ensure Leading" library="string">
<var>${result}</var>
<arg>/</arg>
<arg>a/b</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20230103 10:15:21.113" level="INFO">${first} = a</msg>
<status status="PASS" starttime="20230103 10:15:21.111" endtime="20230103 10:15:21.113"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230103 10:15:21.114" level="INFO">${result} = /a/b</msg>
<status status="PASS" starttime="20230103 10:15:21.113" endtime="20230103 10:15:21.114"/>
</kw>
<msg timestamp="20230103 10:15:21.116" level="INFO">${result} = /a/b</msg>
<status status="PASS" starttime="20230103 10:15:21.109" endtime="20230103 10:15:21.116"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>/a/b</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230103 10:15:21.116" endtime="20230103 10:15:21.116"/>
</kw>
<status status="PASS" starttime="20230103 10:15:21.108" endtime="20230103 10:15:21.117"/>
</test>
<test id="s1-s4-s3-t2" name="Ensure Leading with Leading" line="26">
<kw name="Ensure Leading" library="string">
<var>${result}</var>
<arg>_</arg>
<arg>_a_b_c</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20230103 10:15:21.124" level="INFO">${first} = _</msg>
<status status="PASS" starttime="20230103 10:15:21.123" endtime="20230103 10:15:21.124"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230103 10:15:21.125" level="INFO">${result} = _a_b_c</msg>
<status status="PASS" starttime="20230103 10:15:21.124" endtime="20230103 10:15:21.125"/>
</kw>
<msg timestamp="20230103 10:15:21.125" level="INFO">${result} = _a_b_c</msg>
<status status="PASS" starttime="20230103 10:15:21.122" endtime="20230103 10:15:21.125"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>_a_b_c</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230103 10:15:21.126" endtime="20230103 10:15:21.127"/>
</kw>
<status status="PASS" starttime="20230103 10:15:21.120" endtime="20230103 10:15:21.127"/>
</test>
<test id="s1-s4-s3-t3" name="Ensure Leading for empty" line="30">
<kw name="Ensure Leading" library="string">
<var>${result}</var>
<arg>|</arg>
<arg>${EMPTY}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20230103 10:15:21.134" level="INFO">${first} = </msg>
<status status="PASS" starttime="20230103 10:15:21.133" endtime="20230103 10:15:21.134"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230103 10:15:21.136" level="INFO">${result} = |</msg>
<status status="PASS" starttime="20230103 10:15:21.134" endtime="20230103 10:15:21.136"/>
</kw>
<msg timestamp="20230103 10:15:21.136" level="INFO">${result} = |</msg>
<status status="PASS" starttime="20230103 10:15:21.132" endtime="20230103 10:15:21.137"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>|</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230103 10:15:21.137" endtime="20230103 10:15:21.137"/>
</kw>
<status status="PASS" starttime="20230103 10:15:21.130" endtime="20230103 10:15:21.138"/>
</test>
<test id="s1-s4-s3-t4" name="Ensure Trailing without Trailing" line="35">
<kw name="Ensure Trailing" library="string">
<var>${result}</var>
<arg>.</arg>
<arg>x.y.z</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20230103 10:15:21.143" level="INFO">${last} = z</msg>
<status status="PASS" starttime="20230103 10:15:21.143" endtime="20230103 10:15:21.143"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230103 10:15:21.146" level="INFO">${result} = x.y.z.</msg>
<status status="PASS" starttime="20230103 10:15:21.144" endtime="20230103 10:15:21.146"/>
</kw>
<msg timestamp="20230103 10:15:21.146" level="INFO">${result} = x.y.z.</msg>
<status status="PASS" starttime="20230103 10:15:21.142" endtime="20230103 10:15:21.146"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>x.y.z.</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230103 10:15:21.146" endtime="20230103 10:15:21.147"/>
</kw>
<status status="PASS" starttime="20230103 10:15:21.141" endtime="20230103 10:15:21.147"/>
</test>
<test id="s1-s4-s3-t5" name="Ensure Trailing with Trailing" line="39">
<kw name="Ensure Trailing" library="string">
<var>${result}</var>
<arg>x</arg>
<arg>axbxcx</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20230103 10:15:21.154" level="INFO">${last} = x</msg>
<status status="PASS" starttime="20230103 10:15:21.153" endtime="20230103 10:15:21.154"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230103 10:15:21.155" level="INFO">${result} = axbxcx</msg>
<status status="PASS" starttime="20230103 10:15:21.154" endtime="20230103 10:15:21.155"/>
</kw>
<msg timestamp="20230103 10:15:21.156" level="INFO">${result} = axbxcx</msg>
<status status="PASS" starttime="20230103 10:15:21.152" endtime="20230103 10:15:21.156"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>axbxcx</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230103 10:15:21.157" endtime="20230103 10:15:21.157"/>
</kw>
<status status="PASS" starttime="20230103 10:15:21.151" endtime="20230103 10:15:21.158"/>
</test>
<test id="s1-s4-s3-t6" name="Ensure Trailing for empty" line="43">
<kw name="Ensure Trailing" library="string">
<var>${result}</var>
<arg>=</arg>
<arg>${EMPTY}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20230103 10:15:21.164" level="INFO">${last} = </msg>
<status status="PASS" starttime="20230103 10:15:21.163" endtime="20230103 10:15:21.164"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230103 10:15:21.165" level="INFO">${result} = =</msg>
<status status="PASS" starttime="20230103 10:15:21.164" endtime="20230103 10:15:21.165"/>
</kw>
<msg timestamp="20230103 10:15:21.165" level="INFO">${result} = =</msg>
<status status="PASS" starttime="20230103 10:15:21.161" endtime="20230103 10:15:21.165"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>=</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230103 10:15:21.165" endtime="20230103 10:15:21.166"/>
</kw>
<status status="PASS" starttime="20230103 10:15:21.160" endtime="20230103 10:15:21.166"/>
</test>
<status status="PASS" starttime="20230103 10:15:21.097" endtime="20230103 10:15:21.169"/>
</suite>
<status status="PASS" starttime="20230103 10:15:20.605" endtime="20230103 10:15:21.174"/>
</suite>
<status status="FAIL" starttime="N/A" endtime="N/A" elapsedtime="1570805"/>
</suite>
<statistics>
<total>
<stat pass="57" fail="2" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="57" fail="2" skip="0" id="s1" name="ozone">ozone</stat>
<stat pass="7" fail="0" skip="0" id="s1-s1" name="Ozone-Lib">ozone.Ozone-Lib</stat>
<stat pass="7" fail="0" skip="0" id="s1-s1-s1" name="Shell Tests">ozone.Ozone-Lib.Shell Tests</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2" name="Auditparser">ozone.Auditparser</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s1" name="Auditparser">ozone.Auditparser.Auditparser</stat>
<stat pass="29" fail="2" skip="0" id="s1-s3" name="Basic">ozone.Basic</stat>
<stat pass="2" fail="0" skip="0" id="s1-s3-s1" name="Basic">ozone.Basic.Basic</stat>
<stat pass="4" fail="0" skip="0" id="s1-s3-s2" name="Getconf">ozone.Basic.Getconf</stat>
<stat pass="16" fail="0" skip="0" id="s1-s3-s3" name="Links">ozone.Basic.Links</stat>
<stat pass="0" fail="1" skip="0" id="s1-s3-s4" name="Ozone-Shell-Single">ozone.Basic.Ozone-Shell-Single</stat>
<stat pass="6" fail="1" skip="0" id="s1-s3-s5" name="Ozone-Shell">ozone.Basic.Ozone-Shell</stat>
<stat pass="1" fail="0" skip="0" id="s1-s3-s6" name="Single Node">ozone.Basic.Single Node</stat>
<stat pass="20" fail="0" skip="0" id="s1-s4" name="Lib">ozone.Lib</stat>
<stat pass="9" fail="0" skip="0" id="s1-s4-s1" name="Fs Tests">ozone.Lib.Fs Tests</stat>
<stat pass="5" fail="0" skip="0" id="s1-s4-s2" name="Os Tests">ozone.Lib.Os Tests</stat>
<stat pass="6" fail="0" skip="0" id="s1-s4-s3" name="String Tests">ozone.Lib.String Tests</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
