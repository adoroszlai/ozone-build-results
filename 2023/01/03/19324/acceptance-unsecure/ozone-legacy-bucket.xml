<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 6.0.1 (Python 3.8.10 on linux)" generated="20230103 10:13:12.152" rpa="false" schemaversion="3">
<suite id="s1" name="ozone-legacy-bucket" source="/opt/hadoop/smoketest/recon/recon-nssummary.robot">
<test id="s1-t1" name="Check volume creation" line="99">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:11:34.894" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:11:34.902" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:11:34.902" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230103 10:11:34.888" endtime="20230103 10:11:34.902"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:11:34.904" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230103 10:11:34.903" endtime="20230103 10:11:34.905"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:11:34.906" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:11:34.905" endtime="20230103 10:11:34.906"/>
</kw>
<status status="PASS" starttime="20230103 10:11:34.887" endtime="20230103 10:11:34.906"/>
</kw>
<msg timestamp="20230103 10:11:34.907" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:11:34.886" endtime="20230103 10:11:34.909"/>
</kw>
<status status="PASS" starttime="20230103 10:11:34.885" endtime="20230103 10:11:34.909"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230103 10:11:34.910" endtime="20230103 10:11:34.911"/>
</kw>
<status status="PASS" starttime="20230103 10:11:34.909" endtime="20230103 10:11:34.911"/>
</kw>
<kw name="Create volume">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[LOWER]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230103 10:11:34.913" level="INFO">${random} = yhcxp</msg>
<status status="PASS" starttime="20230103 10:11:34.912" endtime="20230103 10:11:34.913"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${VOLUME}</arg>
<arg>vol-${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230103 10:11:34.914" level="INFO">${VOLUME} = vol-yhcxp</msg>
<status status="PASS" starttime="20230103 10:11:34.913" endtime="20230103 10:11:34.914"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create /${VOLUME}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:11:34.921" level="INFO">Running command 'ozone sh volume create /vol-yhcxp 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:11:41.440" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:11:41.440" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230103 10:11:34.917" endtime="20230103 10:11:41.440"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:11:41.442" level="INFO"/>
<status status="PASS" starttime="20230103 10:11:41.441" endtime="20230103 10:11:41.442"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:11:41.443" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:11:41.442" endtime="20230103 10:11:41.443"/>
</kw>
<status status="PASS" starttime="20230103 10:11:34.916" endtime="20230103 10:11:41.443"/>
</kw>
<msg timestamp="20230103 10:11:41.443" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:11:34.916" endtime="20230103 10:11:41.448"/>
</kw>
<msg timestamp="20230103 10:11:41.448" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230103 10:11:34.915" endtime="20230103 10:11:41.448"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230103 10:11:41.448" endtime="20230103 10:11:41.449"/>
</kw>
<status status="PASS" starttime="20230103 10:11:34.911" endtime="20230103 10:11:41.449"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230103 10:11:34.884" endtime="20230103 10:11:41.456"/>
</test>
<test id="s1-t2" name="Check bucket creation" line="104">
<kw name="Create bucket">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[LOWER]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230103 10:11:41.464" level="INFO">${random} = vkweg</msg>
<status status="PASS" starttime="20230103 10:11:41.463" endtime="20230103 10:11:41.464"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${BUCKET}</arg>
<arg>buc-${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230103 10:11:41.465" level="INFO">${BUCKET} = buc-vkweg</msg>
<status status="PASS" starttime="20230103 10:11:41.465" endtime="20230103 10:11:41.465"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket create -l ${BUCKET_LAYOUT} /${VOLUME}/${BUCKET}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:11:41.481" level="INFO">Running command 'ozone sh bucket create -l LEGACY /vol-yhcxp/buc-vkweg 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:11:48.791" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:11:48.792" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230103 10:11:41.471" endtime="20230103 10:11:48.792"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:11:48.793" level="INFO"/>
<status status="PASS" starttime="20230103 10:11:48.792" endtime="20230103 10:11:48.793"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:11:48.794" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:11:48.794" endtime="20230103 10:11:48.795"/>
</kw>
<status status="PASS" starttime="20230103 10:11:41.470" endtime="20230103 10:11:48.795"/>
</kw>
<msg timestamp="20230103 10:11:48.796" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:11:41.470" endtime="20230103 10:11:48.796"/>
</kw>
<msg timestamp="20230103 10:11:48.797" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230103 10:11:41.466" endtime="20230103 10:11:48.797"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230103 10:11:48.797" endtime="20230103 10:11:48.798"/>
</kw>
<status status="PASS" starttime="20230103 10:11:41.462" endtime="20230103 10:11:48.798"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230103 10:11:41.458" endtime="20230103 10:11:48.798"/>
</test>
<test id="s1-t3" name="Check keys creation" line="107">
<kw name="Create keys">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key put /${VOLUME}/${BUCKET}/file1 README.md</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:11:48.807" level="INFO">Running command 'ozone sh key put /vol-yhcxp/buc-vkweg/file1 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:12:01.420" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:12:01.420" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230103 10:11:48.804" endtime="20230103 10:12:01.420"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:12:01.421" level="INFO"/>
<status status="PASS" starttime="20230103 10:12:01.420" endtime="20230103 10:12:01.421"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:12:01.422" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:12:01.422" endtime="20230103 10:12:01.422"/>
</kw>
<status status="PASS" starttime="20230103 10:11:48.803" endtime="20230103 10:12:01.423"/>
</kw>
<msg timestamp="20230103 10:12:01.423" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:11:48.803" endtime="20230103 10:12:01.424"/>
</kw>
<msg timestamp="20230103 10:12:01.424" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230103 10:11:48.802" endtime="20230103 10:12:01.424"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230103 10:12:01.424" endtime="20230103 10:12:01.425"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key put /${VOLUME}/${BUCKET}/dir1/dir2/file2 HISTORY.md</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:12:01.435" level="INFO">Running command 'ozone sh key put /vol-yhcxp/buc-vkweg/dir1/dir2/file2 HISTORY.md 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:12:11.581" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:12:11.581" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230103 10:12:01.427" endtime="20230103 10:12:11.581"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:12:11.583" level="INFO"/>
<status status="PASS" starttime="20230103 10:12:11.582" endtime="20230103 10:12:11.583"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:12:11.583" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:12:11.583" endtime="20230103 10:12:11.584"/>
</kw>
<status status="PASS" starttime="20230103 10:12:01.426" endtime="20230103 10:12:11.584"/>
</kw>
<msg timestamp="20230103 10:12:11.584" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:12:01.426" endtime="20230103 10:12:11.585"/>
</kw>
<msg timestamp="20230103 10:12:11.585" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230103 10:12:01.425" endtime="20230103 10:12:11.585"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230103 10:12:11.586" endtime="20230103 10:12:11.587"/>
</kw>
<status status="PASS" starttime="20230103 10:11:48.801" endtime="20230103 10:12:11.587"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230103 10:11:48.800" endtime="20230103 10:12:11.587"/>
</test>
<test id="s1-t4" name="Check Summary api access" line="110">
<kw name="Check Access">
<arg>${SUMMARY_URL}?path=/</arg>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:12:11.601" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:12:11.605" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:12:11.605" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230103 10:12:11.593" endtime="20230103 10:12:11.605"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:12:11.607" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230103 10:12:11.606" endtime="20230103 10:12:11.607"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:12:11.608" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:12:11.608" endtime="20230103 10:12:11.608"/>
</kw>
<status status="PASS" starttime="20230103 10:12:11.592" endtime="20230103 10:12:11.609"/>
</kw>
<msg timestamp="20230103 10:12:11.609" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:12:11.592" endtime="20230103 10:12:11.610"/>
</kw>
<status status="PASS" starttime="20230103 10:12:11.591" endtime="20230103 10:12:11.610"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:12:11.616" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:12:11.988" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:12:11.989" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230103 10:12:11.613" endtime="20230103 10:12:11.989"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:12:11.991" level="INFO">200</msg>
<status status="PASS" starttime="20230103 10:12:11.989" endtime="20230103 10:12:11.991"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:12:11.992" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:12:11.991" endtime="20230103 10:12:11.992"/>
</kw>
<status status="PASS" starttime="20230103 10:12:11.612" endtime="20230103 10:12:11.992"/>
</kw>
<msg timestamp="20230103 10:12:11.992" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:12:11.612" endtime="20230103 10:12:11.993"/>
</kw>
<msg timestamp="20230103 10:12:11.993" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230103 10:12:11.611" endtime="20230103 10:12:11.993"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230103 10:12:11.994" endtime="20230103 10:12:11.995"/>
</kw>
<status status="NOT RUN" starttime="20230103 10:12:11.994" endtime="20230103 10:12:11.995"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230103 10:12:11.995" endtime="20230103 10:12:11.996"/>
</kw>
<status status="PASS" starttime="20230103 10:12:11.995" endtime="20230103 10:12:11.996"/>
</branch>
<status status="PASS" starttime="20230103 10:12:11.994" endtime="20230103 10:12:11.996"/>
</if>
<status status="PASS" starttime="20230103 10:12:11.610" endtime="20230103 10:12:11.996"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230103 10:12:11.997" endtime="20230103 10:12:11.998"/>
</kw>
<status status="PASS" starttime="20230103 10:12:11.997" endtime="20230103 10:12:11.998"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>403</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:12:12.005" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:12:12.030" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:12:12.030" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230103 10:12:12.002" endtime="20230103 10:12:12.030"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:12:12.032" level="INFO">200</msg>
<status status="PASS" starttime="20230103 10:12:12.031" endtime="20230103 10:12:12.032"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:12:12.033" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:12:12.033" endtime="20230103 10:12:12.034"/>
</kw>
<status status="PASS" starttime="20230103 10:12:12.001" endtime="20230103 10:12:12.035"/>
</kw>
<msg timestamp="20230103 10:12:12.035" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:12:12.001" endtime="20230103 10:12:12.036"/>
</kw>
<msg timestamp="20230103 10:12:12.037" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230103 10:12:11.999" endtime="20230103 10:12:12.037"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230103 10:12:12.038" endtime="20230103 10:12:12.038"/>
</kw>
<status status="NOT RUN" starttime="20230103 10:12:12.038" endtime="20230103 10:12:12.038"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230103 10:12:12.038" endtime="20230103 10:12:12.039"/>
</kw>
<status status="PASS" starttime="20230103 10:12:12.038" endtime="20230103 10:12:12.039"/>
</branch>
<status status="PASS" starttime="20230103 10:12:12.037" endtime="20230103 10:12:12.039"/>
</if>
<status status="PASS" starttime="20230103 10:12:11.998" endtime="20230103 10:12:12.039"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230103 10:12:12.041" endtime="20230103 10:12:12.043"/>
</kw>
<status status="PASS" starttime="20230103 10:12:12.040" endtime="20230103 10:12:12.043"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:12:12.051" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:12:12.072" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:12:12.072" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230103 10:12:12.046" endtime="20230103 10:12:12.072"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:12:12.074" level="INFO">200</msg>
<status status="PASS" starttime="20230103 10:12:12.073" endtime="20230103 10:12:12.074"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:12:12.074" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:12:12.074" endtime="20230103 10:12:12.075"/>
</kw>
<status status="PASS" starttime="20230103 10:12:12.045" endtime="20230103 10:12:12.075"/>
</kw>
<msg timestamp="20230103 10:12:12.075" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:12:12.045" endtime="20230103 10:12:12.077"/>
</kw>
<msg timestamp="20230103 10:12:12.077" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230103 10:12:12.044" endtime="20230103 10:12:12.078"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230103 10:12:12.078" endtime="20230103 10:12:12.078"/>
</kw>
<status status="NOT RUN" starttime="20230103 10:12:12.078" endtime="20230103 10:12:12.079"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230103 10:12:12.079" endtime="20230103 10:12:12.080"/>
</kw>
<status status="PASS" starttime="20230103 10:12:12.079" endtime="20230103 10:12:12.080"/>
</branch>
<status status="PASS" starttime="20230103 10:12:12.078" endtime="20230103 10:12:12.080"/>
</if>
<status status="PASS" starttime="20230103 10:12:12.043" endtime="20230103 10:12:12.080"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230103 10:12:12.081" endtime="20230103 10:12:12.082"/>
</kw>
<status status="PASS" starttime="20230103 10:12:12.080" endtime="20230103 10:12:12.082"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:12:12.089" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:12:12.109" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:12:12.109" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230103 10:12:12.085" endtime="20230103 10:12:12.109"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:12:12.111" level="INFO">200</msg>
<status status="PASS" starttime="20230103 10:12:12.109" endtime="20230103 10:12:12.111"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:12:12.112" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:12:12.111" endtime="20230103 10:12:12.113"/>
</kw>
<status status="PASS" starttime="20230103 10:12:12.085" endtime="20230103 10:12:12.113"/>
</kw>
<msg timestamp="20230103 10:12:12.113" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:12:12.084" endtime="20230103 10:12:12.114"/>
</kw>
<msg timestamp="20230103 10:12:12.115" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230103 10:12:12.083" endtime="20230103 10:12:12.115"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230103 10:12:12.116" endtime="20230103 10:12:12.116"/>
</kw>
<status status="NOT RUN" starttime="20230103 10:12:12.116" endtime="20230103 10:12:12.116"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230103 10:12:12.116" endtime="20230103 10:12:12.117"/>
</kw>
<status status="PASS" starttime="20230103 10:12:12.116" endtime="20230103 10:12:12.117"/>
</branch>
<status status="PASS" starttime="20230103 10:12:12.115" endtime="20230103 10:12:12.117"/>
</if>
<status status="PASS" starttime="20230103 10:12:12.083" endtime="20230103 10:12:12.117"/>
</kw>
<status status="PASS" starttime="20230103 10:12:11.590" endtime="20230103 10:12:12.118"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230103 10:12:11.589" endtime="20230103 10:12:12.118"/>
</test>
<test id="s1-t5" name="Check Disk Usage api access" line="113">
<kw name="Check Access">
<arg>${DISK_USAGE_URL}?path=/</arg>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:12:12.131" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:12:12.137" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:12:12.138" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230103 10:12:12.127" endtime="20230103 10:12:12.138"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:12:12.141" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230103 10:12:12.139" endtime="20230103 10:12:12.141"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:12:12.142" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:12:12.141" endtime="20230103 10:12:12.142"/>
</kw>
<status status="PASS" starttime="20230103 10:12:12.126" endtime="20230103 10:12:12.143"/>
</kw>
<msg timestamp="20230103 10:12:12.143" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:12:12.126" endtime="20230103 10:12:12.144"/>
</kw>
<status status="PASS" starttime="20230103 10:12:12.125" endtime="20230103 10:12:12.144"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:12:12.152" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/du?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:12:12.197" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:12:12.197" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230103 10:12:12.148" endtime="20230103 10:12:12.197"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:12:12.199" level="INFO">200</msg>
<status status="PASS" starttime="20230103 10:12:12.198" endtime="20230103 10:12:12.199"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:12:12.200" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:12:12.200" endtime="20230103 10:12:12.200"/>
</kw>
<status status="PASS" starttime="20230103 10:12:12.147" endtime="20230103 10:12:12.201"/>
</kw>
<msg timestamp="20230103 10:12:12.201" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:12:12.146" endtime="20230103 10:12:12.202"/>
</kw>
<msg timestamp="20230103 10:12:12.203" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230103 10:12:12.145" endtime="20230103 10:12:12.203"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230103 10:12:12.203" endtime="20230103 10:12:12.204"/>
</kw>
<status status="NOT RUN" starttime="20230103 10:12:12.203" endtime="20230103 10:12:12.204"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230103 10:12:12.204" endtime="20230103 10:12:12.205"/>
</kw>
<status status="PASS" starttime="20230103 10:12:12.204" endtime="20230103 10:12:12.205"/>
</branch>
<status status="PASS" starttime="20230103 10:12:12.203" endtime="20230103 10:12:12.205"/>
</if>
<status status="PASS" starttime="20230103 10:12:12.145" endtime="20230103 10:12:12.205"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230103 10:12:12.207" endtime="20230103 10:12:12.207"/>
</kw>
<status status="PASS" starttime="20230103 10:12:12.206" endtime="20230103 10:12:12.207"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>403</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:12:12.215" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/du?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:12:12.238" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:12:12.238" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230103 10:12:12.211" endtime="20230103 10:12:12.238"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:12:12.241" level="INFO">200</msg>
<status status="PASS" starttime="20230103 10:12:12.240" endtime="20230103 10:12:12.241"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:12:12.242" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:12:12.241" endtime="20230103 10:12:12.242"/>
</kw>
<status status="PASS" starttime="20230103 10:12:12.210" endtime="20230103 10:12:12.242"/>
</kw>
<msg timestamp="20230103 10:12:12.242" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:12:12.209" endtime="20230103 10:12:12.243"/>
</kw>
<msg timestamp="20230103 10:12:12.243" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230103 10:12:12.208" endtime="20230103 10:12:12.244"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230103 10:12:12.245" endtime="20230103 10:12:12.245"/>
</kw>
<status status="NOT RUN" starttime="20230103 10:12:12.244" endtime="20230103 10:12:12.245"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230103 10:12:12.246" endtime="20230103 10:12:12.247"/>
</kw>
<status status="PASS" starttime="20230103 10:12:12.246" endtime="20230103 10:12:12.247"/>
</branch>
<status status="PASS" starttime="20230103 10:12:12.244" endtime="20230103 10:12:12.247"/>
</if>
<status status="PASS" starttime="20230103 10:12:12.207" endtime="20230103 10:12:12.247"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230103 10:12:12.248" endtime="20230103 10:12:12.249"/>
</kw>
<status status="PASS" starttime="20230103 10:12:12.247" endtime="20230103 10:12:12.249"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:12:12.257" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/du?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:12:12.280" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:12:12.280" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230103 10:12:12.253" endtime="20230103 10:12:12.280"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:12:12.282" level="INFO">200</msg>
<status status="PASS" starttime="20230103 10:12:12.281" endtime="20230103 10:12:12.282"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:12:12.283" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:12:12.282" endtime="20230103 10:12:12.283"/>
</kw>
<status status="PASS" starttime="20230103 10:12:12.252" endtime="20230103 10:12:12.284"/>
</kw>
<msg timestamp="20230103 10:12:12.284" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:12:12.251" endtime="20230103 10:12:12.285"/>
</kw>
<msg timestamp="20230103 10:12:12.285" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230103 10:12:12.250" endtime="20230103 10:12:12.285"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230103 10:12:12.286" endtime="20230103 10:12:12.286"/>
</kw>
<status status="NOT RUN" starttime="20230103 10:12:12.285" endtime="20230103 10:12:12.286"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230103 10:12:12.286" endtime="20230103 10:12:12.287"/>
</kw>
<status status="PASS" starttime="20230103 10:12:12.286" endtime="20230103 10:12:12.287"/>
</branch>
<status status="PASS" starttime="20230103 10:12:12.285" endtime="20230103 10:12:12.287"/>
</if>
<status status="PASS" starttime="20230103 10:12:12.250" endtime="20230103 10:12:12.287"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230103 10:12:12.288" endtime="20230103 10:12:12.288"/>
</kw>
<status status="PASS" starttime="20230103 10:12:12.287" endtime="20230103 10:12:12.289"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:12:12.295" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/du?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:12:12.315" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:12:12.315" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230103 10:12:12.292" endtime="20230103 10:12:12.315"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:12:12.317" level="INFO">200</msg>
<status status="PASS" starttime="20230103 10:12:12.316" endtime="20230103 10:12:12.317"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:12:12.320" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:12:12.317" endtime="20230103 10:12:12.321"/>
</kw>
<status status="PASS" starttime="20230103 10:12:12.291" endtime="20230103 10:12:12.321"/>
</kw>
<msg timestamp="20230103 10:12:12.321" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:12:12.290" endtime="20230103 10:12:12.323"/>
</kw>
<msg timestamp="20230103 10:12:12.323" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230103 10:12:12.290" endtime="20230103 10:12:12.323"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230103 10:12:12.324" endtime="20230103 10:12:12.324"/>
</kw>
<status status="NOT RUN" starttime="20230103 10:12:12.324" endtime="20230103 10:12:12.324"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230103 10:12:12.325" endtime="20230103 10:12:12.325"/>
</kw>
<status status="PASS" starttime="20230103 10:12:12.324" endtime="20230103 10:12:12.326"/>
</branch>
<status status="PASS" starttime="20230103 10:12:12.323" endtime="20230103 10:12:12.326"/>
</if>
<status status="PASS" starttime="20230103 10:12:12.289" endtime="20230103 10:12:12.326"/>
</kw>
<status status="PASS" starttime="20230103 10:12:12.124" endtime="20230103 10:12:12.326"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230103 10:12:12.122" endtime="20230103 10:12:12.327"/>
</test>
<test id="s1-t6" name="Check Quota Usage api access" line="116">
<kw name="Check Access">
<arg>${QUOTA_USAGE_URL}?path=/</arg>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:12:12.337" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:12:12.343" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:12:12.343" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230103 10:12:12.333" endtime="20230103 10:12:12.343"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:12:12.345" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230103 10:12:12.344" endtime="20230103 10:12:12.345"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:12:12.346" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:12:12.345" endtime="20230103 10:12:12.346"/>
</kw>
<status status="PASS" starttime="20230103 10:12:12.333" endtime="20230103 10:12:12.347"/>
</kw>
<msg timestamp="20230103 10:12:12.347" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:12:12.332" endtime="20230103 10:12:12.348"/>
</kw>
<status status="PASS" starttime="20230103 10:12:12.331" endtime="20230103 10:12:12.348"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:12:12.357" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/quota?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:12:12.389" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:12:12.390" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230103 10:12:12.353" endtime="20230103 10:12:12.390"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:12:12.391" level="INFO">200</msg>
<status status="PASS" starttime="20230103 10:12:12.390" endtime="20230103 10:12:12.391"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:12:12.392" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:12:12.392" endtime="20230103 10:12:12.392"/>
</kw>
<status status="PASS" starttime="20230103 10:12:12.351" endtime="20230103 10:12:12.394"/>
</kw>
<msg timestamp="20230103 10:12:12.395" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:12:12.350" endtime="20230103 10:12:12.396"/>
</kw>
<msg timestamp="20230103 10:12:12.396" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230103 10:12:12.349" endtime="20230103 10:12:12.396"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230103 10:12:12.397" endtime="20230103 10:12:12.397"/>
</kw>
<status status="NOT RUN" starttime="20230103 10:12:12.397" endtime="20230103 10:12:12.398"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230103 10:12:12.398" endtime="20230103 10:12:12.399"/>
</kw>
<status status="PASS" starttime="20230103 10:12:12.398" endtime="20230103 10:12:12.399"/>
</branch>
<status status="PASS" starttime="20230103 10:12:12.397" endtime="20230103 10:12:12.399"/>
</if>
<status status="PASS" starttime="20230103 10:12:12.349" endtime="20230103 10:12:12.399"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230103 10:12:12.400" endtime="20230103 10:12:12.401"/>
</kw>
<status status="PASS" starttime="20230103 10:12:12.399" endtime="20230103 10:12:12.402"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>403</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:12:12.409" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/quota?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:12:12.435" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:12:12.435" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230103 10:12:12.406" endtime="20230103 10:12:12.435"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:12:12.438" level="INFO">200</msg>
<status status="PASS" starttime="20230103 10:12:12.435" endtime="20230103 10:12:12.438"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:12:12.438" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:12:12.438" endtime="20230103 10:12:12.439"/>
</kw>
<status status="PASS" starttime="20230103 10:12:12.405" endtime="20230103 10:12:12.439"/>
</kw>
<msg timestamp="20230103 10:12:12.439" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:12:12.405" endtime="20230103 10:12:12.440"/>
</kw>
<msg timestamp="20230103 10:12:12.441" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230103 10:12:12.404" endtime="20230103 10:12:12.441"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230103 10:12:12.442" endtime="20230103 10:12:12.442"/>
</kw>
<status status="NOT RUN" starttime="20230103 10:12:12.441" endtime="20230103 10:12:12.442"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230103 10:12:12.442" endtime="20230103 10:12:12.443"/>
</kw>
<status status="PASS" starttime="20230103 10:12:12.442" endtime="20230103 10:12:12.443"/>
</branch>
<status status="PASS" starttime="20230103 10:12:12.441" endtime="20230103 10:12:12.444"/>
</if>
<status status="PASS" starttime="20230103 10:12:12.402" endtime="20230103 10:12:12.444"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230103 10:12:12.445" endtime="20230103 10:12:12.445"/>
</kw>
<status status="PASS" starttime="20230103 10:12:12.444" endtime="20230103 10:12:12.446"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:12:12.453" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/quota?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:12:12.473" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:12:12.473" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230103 10:12:12.449" endtime="20230103 10:12:12.473"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:12:12.475" level="INFO">200</msg>
<status status="PASS" starttime="20230103 10:12:12.474" endtime="20230103 10:12:12.475"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:12:12.476" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:12:12.475" endtime="20230103 10:12:12.476"/>
</kw>
<status status="PASS" starttime="20230103 10:12:12.448" endtime="20230103 10:12:12.477"/>
</kw>
<msg timestamp="20230103 10:12:12.477" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:12:12.448" endtime="20230103 10:12:12.478"/>
</kw>
<msg timestamp="20230103 10:12:12.478" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230103 10:12:12.446" endtime="20230103 10:12:12.478"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230103 10:12:12.479" endtime="20230103 10:12:12.479"/>
</kw>
<status status="NOT RUN" starttime="20230103 10:12:12.479" endtime="20230103 10:12:12.479"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230103 10:12:12.480" endtime="20230103 10:12:12.480"/>
</kw>
<status status="PASS" starttime="20230103 10:12:12.479" endtime="20230103 10:12:12.480"/>
</branch>
<status status="PASS" starttime="20230103 10:12:12.478" endtime="20230103 10:12:12.480"/>
</if>
<status status="PASS" starttime="20230103 10:12:12.446" endtime="20230103 10:12:12.481"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230103 10:12:12.482" endtime="20230103 10:12:12.483"/>
</kw>
<status status="PASS" starttime="20230103 10:12:12.481" endtime="20230103 10:12:12.483"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:12:12.490" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/quota?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:12:12.519" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:12:12.519" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230103 10:12:12.487" endtime="20230103 10:12:12.519"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:12:12.521" level="INFO">200</msg>
<status status="PASS" starttime="20230103 10:12:12.520" endtime="20230103 10:12:12.521"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:12:12.521" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:12:12.521" endtime="20230103 10:12:12.522"/>
</kw>
<status status="PASS" starttime="20230103 10:12:12.485" endtime="20230103 10:12:12.522"/>
</kw>
<msg timestamp="20230103 10:12:12.522" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:12:12.485" endtime="20230103 10:12:12.523"/>
</kw>
<msg timestamp="20230103 10:12:12.523" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230103 10:12:12.484" endtime="20230103 10:12:12.525"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230103 10:12:12.526" endtime="20230103 10:12:12.526"/>
</kw>
<status status="NOT RUN" starttime="20230103 10:12:12.525" endtime="20230103 10:12:12.526"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230103 10:12:12.526" endtime="20230103 10:12:12.527"/>
</kw>
<status status="PASS" starttime="20230103 10:12:12.526" endtime="20230103 10:12:12.527"/>
</branch>
<status status="PASS" starttime="20230103 10:12:12.525" endtime="20230103 10:12:12.527"/>
</if>
<status status="PASS" starttime="20230103 10:12:12.483" endtime="20230103 10:12:12.527"/>
</kw>
<status status="PASS" starttime="20230103 10:12:12.330" endtime="20230103 10:12:12.528"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230103 10:12:12.329" endtime="20230103 10:12:12.529"/>
</test>
<test id="s1-t7" name="Check File Size Distribution api access" line="119">
<kw name="Check Access">
<arg>${FILE_SIZE_DIST_URL}?path=/</arg>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:12:12.551" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:12:12.555" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:12:12.555" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230103 10:12:12.537" endtime="20230103 10:12:12.555"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:12:12.557" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230103 10:12:12.556" endtime="20230103 10:12:12.557"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:12:12.558" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:12:12.557" endtime="20230103 10:12:12.558"/>
</kw>
<status status="PASS" starttime="20230103 10:12:12.535" endtime="20230103 10:12:12.559"/>
</kw>
<msg timestamp="20230103 10:12:12.559" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:12:12.534" endtime="20230103 10:12:12.560"/>
</kw>
<status status="PASS" starttime="20230103 10:12:12.534" endtime="20230103 10:12:12.560"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:12:12.568" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/dist?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:12:12.600" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:12:12.600" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230103 10:12:12.564" endtime="20230103 10:12:12.600"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:12:12.602" level="INFO">200</msg>
<status status="PASS" starttime="20230103 10:12:12.601" endtime="20230103 10:12:12.602"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:12:12.603" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:12:12.602" endtime="20230103 10:12:12.603"/>
</kw>
<status status="PASS" starttime="20230103 10:12:12.563" endtime="20230103 10:12:12.604"/>
</kw>
<msg timestamp="20230103 10:12:12.604" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:12:12.562" endtime="20230103 10:12:12.605"/>
</kw>
<msg timestamp="20230103 10:12:12.605" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230103 10:12:12.561" endtime="20230103 10:12:12.605"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230103 10:12:12.606" endtime="20230103 10:12:12.606"/>
</kw>
<status status="NOT RUN" starttime="20230103 10:12:12.606" endtime="20230103 10:12:12.606"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230103 10:12:12.609" endtime="20230103 10:12:12.610"/>
</kw>
<status status="PASS" starttime="20230103 10:12:12.609" endtime="20230103 10:12:12.610"/>
</branch>
<status status="PASS" starttime="20230103 10:12:12.606" endtime="20230103 10:12:12.610"/>
</if>
<status status="PASS" starttime="20230103 10:12:12.560" endtime="20230103 10:12:12.610"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230103 10:12:12.612" endtime="20230103 10:12:12.612"/>
</kw>
<status status="PASS" starttime="20230103 10:12:12.611" endtime="20230103 10:12:12.612"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>403</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:12:12.620" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/dist?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:12:12.641" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:12:12.642" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230103 10:12:12.617" endtime="20230103 10:12:12.642"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:12:12.643" level="INFO">200</msg>
<status status="PASS" starttime="20230103 10:12:12.642" endtime="20230103 10:12:12.643"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:12:12.647" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:12:12.644" endtime="20230103 10:12:12.647"/>
</kw>
<status status="PASS" starttime="20230103 10:12:12.615" endtime="20230103 10:12:12.647"/>
</kw>
<msg timestamp="20230103 10:12:12.648" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:12:12.615" endtime="20230103 10:12:12.648"/>
</kw>
<msg timestamp="20230103 10:12:12.649" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230103 10:12:12.613" endtime="20230103 10:12:12.649"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230103 10:12:12.650" endtime="20230103 10:12:12.650"/>
</kw>
<status status="NOT RUN" starttime="20230103 10:12:12.650" endtime="20230103 10:12:12.650"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230103 10:12:12.650" endtime="20230103 10:12:12.651"/>
</kw>
<status status="PASS" starttime="20230103 10:12:12.650" endtime="20230103 10:12:12.651"/>
</branch>
<status status="PASS" starttime="20230103 10:12:12.649" endtime="20230103 10:12:12.651"/>
</if>
<status status="PASS" starttime="20230103 10:12:12.613" endtime="20230103 10:12:12.651"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230103 10:12:12.653" endtime="20230103 10:12:12.653"/>
</kw>
<status status="PASS" starttime="20230103 10:12:12.652" endtime="20230103 10:12:12.653"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:12:12.660" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/dist?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:12:12.686" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:12:12.686" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230103 10:12:12.657" endtime="20230103 10:12:12.686"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:12:12.693" level="INFO">200</msg>
<status status="PASS" starttime="20230103 10:12:12.687" endtime="20230103 10:12:12.693"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:12:12.698" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:12:12.694" endtime="20230103 10:12:12.698"/>
</kw>
<status status="PASS" starttime="20230103 10:12:12.656" endtime="20230103 10:12:12.699"/>
</kw>
<msg timestamp="20230103 10:12:12.699" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:12:12.656" endtime="20230103 10:12:12.701"/>
</kw>
<msg timestamp="20230103 10:12:12.701" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230103 10:12:12.655" endtime="20230103 10:12:12.701"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230103 10:12:12.711" endtime="20230103 10:12:12.713"/>
</kw>
<status status="NOT RUN" starttime="20230103 10:12:12.702" endtime="20230103 10:12:12.713"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230103 10:12:12.714" endtime="20230103 10:12:12.715"/>
</kw>
<status status="PASS" starttime="20230103 10:12:12.713" endtime="20230103 10:12:12.715"/>
</branch>
<status status="PASS" starttime="20230103 10:12:12.701" endtime="20230103 10:12:12.715"/>
</if>
<status status="PASS" starttime="20230103 10:12:12.653" endtime="20230103 10:12:12.715"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230103 10:12:12.717" endtime="20230103 10:12:12.718"/>
</kw>
<status status="PASS" starttime="20230103 10:12:12.715" endtime="20230103 10:12:12.719"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:12:12.727" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/dist?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:12:12.750" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:12:12.750" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230103 10:12:12.723" endtime="20230103 10:12:12.750"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:12:12.753" level="INFO">200</msg>
<status status="PASS" starttime="20230103 10:12:12.752" endtime="20230103 10:12:12.753"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:12:12.754" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:12:12.753" endtime="20230103 10:12:12.754"/>
</kw>
<status status="PASS" starttime="20230103 10:12:12.722" endtime="20230103 10:12:12.755"/>
</kw>
<msg timestamp="20230103 10:12:12.755" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:12:12.721" endtime="20230103 10:12:12.756"/>
</kw>
<msg timestamp="20230103 10:12:12.756" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230103 10:12:12.720" endtime="20230103 10:12:12.756"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230103 10:12:12.757" endtime="20230103 10:12:12.757"/>
</kw>
<status status="NOT RUN" starttime="20230103 10:12:12.757" endtime="20230103 10:12:12.757"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230103 10:12:12.758" endtime="20230103 10:12:12.759"/>
</kw>
<status status="PASS" starttime="20230103 10:12:12.758" endtime="20230103 10:12:12.759"/>
</branch>
<status status="PASS" starttime="20230103 10:12:12.757" endtime="20230103 10:12:12.759"/>
</if>
<status status="PASS" starttime="20230103 10:12:12.719" endtime="20230103 10:12:12.759"/>
</kw>
<status status="PASS" starttime="20230103 10:12:12.533" endtime="20230103 10:12:12.760"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230103 10:12:12.531" endtime="20230103 10:12:12.760"/>
</test>
<test id="s1-t8" name="Check Recon Namespace Summary Root" line="122">
<kw name="Wait For Summary">
<arg>${SUMMARY_URL}?path=/</arg>
<arg>ROOT</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:12:12.774" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:12:12.798" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:12:12.798" level="INFO">${output} = {"type":"ROOT","numVolume":2,"numBucket":0,"numDir":0,"numKey":0,"status":"OK"}</msg>
<status status="PASS" starttime="20230103 10:12:12.770" endtime="20230103 10:12:12.798"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:12:12.800" level="INFO">{"type":"ROOT","numVolume":2,"numBucket":0,"numDir":0,"numKey":0,"status":"OK"}</msg>
<status status="PASS" starttime="20230103 10:12:12.799" endtime="20230103 10:12:12.800"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:12:12.801" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:12:12.800" endtime="20230103 10:12:12.801"/>
</kw>
<status status="PASS" starttime="20230103 10:12:12.769" endtime="20230103 10:12:12.802"/>
</kw>
<msg timestamp="20230103 10:12:12.802" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:12:12.768" endtime="20230103 10:12:12.803"/>
</kw>
<msg timestamp="20230103 10:12:12.804" level="INFO">${result} = {"type":"ROOT","numVolume":2,"numBucket":0,"numDir":0,"numKey":0,"status":"OK"}</msg>
<status status="PASS" starttime="20230103 10:12:12.767" endtime="20230103 10:12:12.804"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230103 10:12:12.804" endtime="20230103 10:12:12.805"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230103 10:12:12.806" endtime="20230103 10:12:12.806"/>
</kw>
<status status="PASS" starttime="20230103 10:12:12.766" endtime="20230103 10:12:12.807"/>
</kw>
<status status="PASS" starttime="20230103 10:12:12.765" endtime="20230103 10:12:12.807"/>
</kw>
<status status="PASS" starttime="20230103 10:12:12.764" endtime="20230103 10:12:12.807"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230103 10:12:12.763" endtime="20230103 10:12:12.808"/>
</test>
<test id="s1-t9" name="Check Recon Namespace Summary Volume" line="125">
<kw name="Wait For Summary">
<arg>${SUMMARY_URL}?path=/${VOLUME}</arg>
<arg>VOLUME</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:12:12.820" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-yhcxp 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:12:12.851" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:12:12.851" level="INFO">${output} = {"type":"VOLUME","numVolume":-1,"numBucket":0,"numDir":0,"numKey":0,"status":"OK"}</msg>
<status status="PASS" starttime="20230103 10:12:12.816" endtime="20230103 10:12:12.851"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:12:12.854" level="INFO">{"type":"VOLUME","numVolume":-1,"numBucket":0,"numDir":0,"numKey":0,"status":"OK"}</msg>
<status status="PASS" starttime="20230103 10:12:12.852" endtime="20230103 10:12:12.854"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:12:12.855" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:12:12.854" endtime="20230103 10:12:12.855"/>
</kw>
<status status="PASS" starttime="20230103 10:12:12.815" endtime="20230103 10:12:12.856"/>
</kw>
<msg timestamp="20230103 10:12:12.856" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:12:12.815" endtime="20230103 10:12:12.857"/>
</kw>
<msg timestamp="20230103 10:12:12.858" level="INFO">${result} = {"type":"VOLUME","numVolume":-1,"numBucket":0,"numDir":0,"numKey":0,"status":"OK"}</msg>
<status status="PASS" starttime="20230103 10:12:12.814" endtime="20230103 10:12:12.859"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230103 10:12:12.859" endtime="20230103 10:12:12.860"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230103 10:12:12.860" endtime="20230103 10:12:12.864"/>
</kw>
<status status="PASS" starttime="20230103 10:12:12.813" endtime="20230103 10:12:12.864"/>
</kw>
<status status="PASS" starttime="20230103 10:12:12.812" endtime="20230103 10:12:12.864"/>
</kw>
<status status="PASS" starttime="20230103 10:12:12.811" endtime="20230103 10:12:12.864"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230103 10:12:12.810" endtime="20230103 10:12:12.865"/>
</test>
<test id="s1-t10" name="Check Recon Namespace Summary Bucket" line="128">
<kw name="Wait For Summary">
<arg>${SUMMARY_URL}?path=/${VOLUME}/${BUCKET}</arg>
<arg>BUCKET</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:12:12.880" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-yhcxp/buc-vkweg 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:12:12.919" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:12:12.920" level="INFO">${output} = {"type":"UNKNOWN","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20230103 10:12:12.876" endtime="20230103 10:12:12.920"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:12:12.923" level="INFO">{"type":"UNKNOWN","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20230103 10:12:12.921" endtime="20230103 10:12:12.923"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:12:12.924" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:12:12.923" endtime="20230103 10:12:12.924"/>
</kw>
<status status="PASS" starttime="20230103 10:12:12.875" endtime="20230103 10:12:12.924"/>
</kw>
<msg timestamp="20230103 10:12:12.924" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:12:12.875" endtime="20230103 10:12:12.930"/>
</kw>
<msg timestamp="20230103 10:12:12.932" level="INFO">${result} = {"type":"UNKNOWN","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20230103 10:12:12.874" endtime="20230103 10:12:12.932"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20230103 10:12:12.936" level="FAIL">'{"type":"UNKNOWN","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"PATH_NOT_FOUND"}' does not contain '"status":"OK"'</msg>
<status status="FAIL" starttime="20230103 10:12:12.934" endtime="20230103 10:12:12.936"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230103 10:12:12.936" endtime="20230103 10:12:12.937"/>
</kw>
<status status="FAIL" starttime="20230103 10:12:12.873" endtime="20230103 10:12:12.938"/>
</kw>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:12:22.945" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-yhcxp/buc-vkweg 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:12:22.966" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:12:22.966" level="INFO">${output} = {"type":"UNKNOWN","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20230103 10:12:22.942" endtime="20230103 10:12:22.966"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:12:22.968" level="INFO">{"type":"UNKNOWN","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20230103 10:12:22.967" endtime="20230103 10:12:22.968"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:12:22.969" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:12:22.969" endtime="20230103 10:12:22.969"/>
</kw>
<status status="PASS" starttime="20230103 10:12:22.941" endtime="20230103 10:12:22.970"/>
</kw>
<msg timestamp="20230103 10:12:22.970" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:12:22.941" endtime="20230103 10:12:22.971"/>
</kw>
<msg timestamp="20230103 10:12:22.971" level="INFO">${result} = {"type":"UNKNOWN","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20230103 10:12:22.940" endtime="20230103 10:12:22.971"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20230103 10:12:22.973" level="FAIL">'{"type":"UNKNOWN","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"PATH_NOT_FOUND"}' does not contain '"status":"OK"'</msg>
<status status="FAIL" starttime="20230103 10:12:22.972" endtime="20230103 10:12:22.973"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230103 10:12:22.974" endtime="20230103 10:12:22.974"/>
</kw>
<status status="FAIL" starttime="20230103 10:12:22.938" endtime="20230103 10:12:22.975"/>
</kw>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:12:32.982" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-yhcxp/buc-vkweg 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:12:33.004" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:12:33.004" level="INFO">${output} = {"type":"UNKNOWN","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20230103 10:12:32.979" endtime="20230103 10:12:33.004"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:12:33.007" level="INFO">{"type":"UNKNOWN","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20230103 10:12:33.006" endtime="20230103 10:12:33.008"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:12:33.008" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:12:33.008" endtime="20230103 10:12:33.009"/>
</kw>
<status status="PASS" starttime="20230103 10:12:32.978" endtime="20230103 10:12:33.009"/>
</kw>
<msg timestamp="20230103 10:12:33.009" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:12:32.978" endtime="20230103 10:12:33.010"/>
</kw>
<msg timestamp="20230103 10:12:33.010" level="INFO">${result} = {"type":"UNKNOWN","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20230103 10:12:32.977" endtime="20230103 10:12:33.010"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20230103 10:12:33.012" level="FAIL">'{"type":"UNKNOWN","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"PATH_NOT_FOUND"}' does not contain '"status":"OK"'</msg>
<status status="FAIL" starttime="20230103 10:12:33.011" endtime="20230103 10:12:33.012"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230103 10:12:33.013" endtime="20230103 10:12:33.013"/>
</kw>
<status status="FAIL" starttime="20230103 10:12:32.976" endtime="20230103 10:12:33.014"/>
</kw>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:12:43.021" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-yhcxp/buc-vkweg 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:12:43.042" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:12:43.042" level="INFO">${output} = {"type":"UNKNOWN","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20230103 10:12:43.017" endtime="20230103 10:12:43.042"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:12:43.044" level="INFO">{"type":"UNKNOWN","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20230103 10:12:43.043" endtime="20230103 10:12:43.044"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:12:43.045" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:12:43.044" endtime="20230103 10:12:43.045"/>
</kw>
<status status="PASS" starttime="20230103 10:12:43.017" endtime="20230103 10:12:43.045"/>
</kw>
<msg timestamp="20230103 10:12:43.046" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:12:43.016" endtime="20230103 10:12:43.046"/>
</kw>
<msg timestamp="20230103 10:12:43.047" level="INFO">${result} = {"type":"UNKNOWN","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20230103 10:12:43.016" endtime="20230103 10:12:43.047"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20230103 10:12:43.048" level="FAIL">'{"type":"UNKNOWN","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"PATH_NOT_FOUND"}' does not contain '"status":"OK"'</msg>
<status status="FAIL" starttime="20230103 10:12:43.047" endtime="20230103 10:12:43.049"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230103 10:12:43.050" endtime="20230103 10:12:43.050"/>
</kw>
<status status="FAIL" starttime="20230103 10:12:43.014" endtime="20230103 10:12:43.051"/>
</kw>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:12:53.058" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-yhcxp/buc-vkweg 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:12:53.084" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:12:53.084" level="INFO">${output} = {"type":"BUCKET","numVolume":-1,"numBucket":-1,"numDir":2,"numKey":2,"status":"OK"}</msg>
<status status="PASS" starttime="20230103 10:12:53.055" endtime="20230103 10:12:53.084"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:12:53.087" level="INFO">{"type":"BUCKET","numVolume":-1,"numBucket":-1,"numDir":2,"numKey":2,"status":"OK"}</msg>
<status status="PASS" starttime="20230103 10:12:53.085" endtime="20230103 10:12:53.087"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:12:53.088" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:12:53.087" endtime="20230103 10:12:53.088"/>
</kw>
<status status="PASS" starttime="20230103 10:12:53.054" endtime="20230103 10:12:53.089"/>
</kw>
<msg timestamp="20230103 10:12:53.089" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:12:53.054" endtime="20230103 10:12:53.090"/>
</kw>
<msg timestamp="20230103 10:12:53.090" level="INFO">${result} = {"type":"BUCKET","numVolume":-1,"numBucket":-1,"numDir":2,"numKey":2,"status":"OK"}</msg>
<status status="PASS" starttime="20230103 10:12:53.053" endtime="20230103 10:12:53.090"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230103 10:12:53.091" endtime="20230103 10:12:53.092"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230103 10:12:53.092" endtime="20230103 10:12:53.093"/>
</kw>
<status status="PASS" starttime="20230103 10:12:53.052" endtime="20230103 10:12:53.093"/>
</kw>
<status status="PASS" starttime="20230103 10:12:12.872" endtime="20230103 10:12:53.094"/>
</kw>
<status status="PASS" starttime="20230103 10:12:12.870" endtime="20230103 10:12:53.094"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230103 10:12:12.868" endtime="20230103 10:12:53.094"/>
</test>
<test id="s1-t11" name="Check Recon Namespace Summary Key" line="131">
<kw name="Wait For Summary">
<arg>${SUMMARY_URL}?path=/${VOLUME}/${BUCKET}/file1</arg>
<arg>KEY</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:12:53.106" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-yhcxp/buc-vkweg/file1 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:12:53.127" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:12:53.127" level="INFO">${output} = {"type":"KEY","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"OK"}</msg>
<status status="PASS" starttime="20230103 10:12:53.102" endtime="20230103 10:12:53.127"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:12:53.129" level="INFO">{"type":"KEY","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"OK"}</msg>
<status status="PASS" starttime="20230103 10:12:53.128" endtime="20230103 10:12:53.129"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:12:53.130" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:12:53.129" endtime="20230103 10:12:53.130"/>
</kw>
<status status="PASS" starttime="20230103 10:12:53.101" endtime="20230103 10:12:53.131"/>
</kw>
<msg timestamp="20230103 10:12:53.131" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:12:53.101" endtime="20230103 10:12:53.132"/>
</kw>
<msg timestamp="20230103 10:12:53.132" level="INFO">${result} = {"type":"KEY","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"OK"}</msg>
<status status="PASS" starttime="20230103 10:12:53.100" endtime="20230103 10:12:53.132"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230103 10:12:53.132" endtime="20230103 10:12:53.133"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230103 10:12:53.133" endtime="20230103 10:12:53.134"/>
</kw>
<status status="PASS" starttime="20230103 10:12:53.099" endtime="20230103 10:12:53.134"/>
</kw>
<status status="PASS" starttime="20230103 10:12:53.099" endtime="20230103 10:12:53.134"/>
</kw>
<status status="PASS" starttime="20230103 10:12:53.097" endtime="20230103 10:12:53.134"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230103 10:12:53.096" endtime="20230103 10:12:53.135"/>
</test>
<test id="s1-t12" name="Check Recon Namespace Summary Directory" line="134">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET_LAYOUT}' == 'LEGACY'</arg>
<arg>Wait For Summary</arg>
<arg>${SUMMARY_URL}?path=/${VOLUME}/${BUCKET}/dir1/dir2/</arg>
<arg>DIRECTORY</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Wait For Summary">
<arg>${SUMMARY_URL}?path=/${VOLUME}/${BUCKET}/dir1/dir2/</arg>
<arg>DIRECTORY</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:12:53.148" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-yhcxp/buc-vkweg/dir1/dir2/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:12:53.166" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:12:53.166" level="INFO">${output} = {"type":"DIRECTORY","numVolume":-1,"numBucket":-1,"numDir":0,"numKey":1,"status":"OK"}</msg>
<status status="PASS" starttime="20230103 10:12:53.143" endtime="20230103 10:12:53.166"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:12:53.168" level="INFO">{"type":"DIRECTORY","numVolume":-1,"numBucket":-1,"numDir":0,"numKey":1,"status":"OK"}</msg>
<status status="PASS" starttime="20230103 10:12:53.167" endtime="20230103 10:12:53.168"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:12:53.169" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:12:53.168" endtime="20230103 10:12:53.169"/>
</kw>
<status status="PASS" starttime="20230103 10:12:53.142" endtime="20230103 10:12:53.169"/>
</kw>
<msg timestamp="20230103 10:12:53.170" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:12:53.142" endtime="20230103 10:12:53.170"/>
</kw>
<msg timestamp="20230103 10:12:53.171" level="INFO">${result} = {"type":"DIRECTORY","numVolume":-1,"numBucket":-1,"numDir":0,"numKey":1,"status":"OK"}</msg>
<status status="PASS" starttime="20230103 10:12:53.141" endtime="20230103 10:12:53.171"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230103 10:12:53.171" endtime="20230103 10:12:53.172"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230103 10:12:53.172" endtime="20230103 10:12:53.173"/>
</kw>
<status status="PASS" starttime="20230103 10:12:53.140" endtime="20230103 10:12:53.173"/>
</kw>
<status status="PASS" starttime="20230103 10:12:53.140" endtime="20230103 10:12:53.173"/>
</kw>
<status status="PASS" starttime="20230103 10:12:53.139" endtime="20230103 10:12:53.174"/>
</kw>
<status status="PASS" starttime="20230103 10:12:53.138" endtime="20230103 10:12:53.174"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET_LAYOUT}' == 'FILE_SYSTEM_OPTIMIZED'</arg>
<arg>Wait For Summary</arg>
<arg>${SUMMARY_URL}?path=/${VOLUME}/${BUCKET}/dir1/dir2</arg>
<arg>DIRECTORY</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230103 10:12:53.174" endtime="20230103 10:12:53.175"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230103 10:12:53.137" endtime="20230103 10:12:53.175"/>
</test>
<test id="s1-t13" name="Check Recon Namespace Disk Usage" line="138">
<kw name="Wait For Summary">
<arg>${DISK_USAGE_URL}?path=/${VOLUME}/${BUCKET}&amp;files=true&amp;replica=true</arg>
<arg>\"sizeWithReplica\"</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:12:53.185" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/du?path=/vol-yhcxp/buc-vkweg&amp;files=true&amp;replica=true 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:12:53.205" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:12:53.205" level="INFO">${output} = {"status":"OK","path":"/vol-yhcxp/buc-vkweg","size":9917,"sizeWithReplica":-1,"subPathCount":1,"subPaths":[{"key":false,"path":"/vol-yhcxp/buc-vkweg/dir1","size":6038,"sizeWithReplica":-1,"isKey":fals...</msg>
<status status="PASS" starttime="20230103 10:12:53.182" endtime="20230103 10:12:53.206"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:12:53.207" level="INFO">{"status":"OK","path":"/vol-yhcxp/buc-vkweg","size":9917,"sizeWithReplica":-1,"subPathCount":1,"subPaths":[{"key":false,"path":"/vol-yhcxp/buc-vkweg/dir1","size":6038,"sizeWithReplica":-1,"isKey":false}],"sizeDirectKey":3879}</msg>
<status status="PASS" starttime="20230103 10:12:53.206" endtime="20230103 10:12:53.208"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:12:53.208" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:12:53.208" endtime="20230103 10:12:53.209"/>
</kw>
<status status="PASS" starttime="20230103 10:12:53.182" endtime="20230103 10:12:53.209"/>
</kw>
<msg timestamp="20230103 10:12:53.209" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:12:53.181" endtime="20230103 10:12:53.210"/>
</kw>
<msg timestamp="20230103 10:12:53.211" level="INFO">${result} = {"status":"OK","path":"/vol-yhcxp/buc-vkweg","size":9917,"sizeWithReplica":-1,"subPathCount":1,"subPaths":[{"key":false,"path":"/vol-yhcxp/buc-vkweg/dir1","size":6038,"sizeWithReplica":-1,"isKey":fals...</msg>
<status status="PASS" starttime="20230103 10:12:53.181" endtime="20230103 10:12:53.211"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230103 10:12:53.212" endtime="20230103 10:12:53.213"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230103 10:12:53.213" endtime="20230103 10:12:53.214"/>
</kw>
<status status="PASS" starttime="20230103 10:12:53.180" endtime="20230103 10:12:53.214"/>
</kw>
<status status="PASS" starttime="20230103 10:12:53.179" endtime="20230103 10:12:53.214"/>
</kw>
<status status="PASS" starttime="20230103 10:12:53.178" endtime="20230103 10:12:53.215"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230103 10:12:53.177" endtime="20230103 10:12:53.215"/>
</test>
<test id="s1-t14" name="Check Recon Namespace Volume Quota Usage" line="141">
<kw name="Wait For Summary">
<arg>${QUOTA_USAGE_URL}?path=/${VOLUME}</arg>
<arg>\"used\"</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:12:53.240" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/quota?path=/vol-yhcxp 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:12:53.272" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:12:53.272" level="INFO">${output} = {"allowed":-1,"used":9917,"status":"OK"}</msg>
<status status="PASS" starttime="20230103 10:12:53.237" endtime="20230103 10:12:53.272"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:12:53.280" level="INFO">{"allowed":-1,"used":9917,"status":"OK"}</msg>
<status status="PASS" starttime="20230103 10:12:53.272" endtime="20230103 10:12:53.280"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:12:53.281" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:12:53.281" endtime="20230103 10:12:53.282"/>
</kw>
<status status="PASS" starttime="20230103 10:12:53.236" endtime="20230103 10:12:53.282"/>
</kw>
<msg timestamp="20230103 10:12:53.282" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:12:53.233" endtime="20230103 10:12:53.283"/>
</kw>
<msg timestamp="20230103 10:12:53.283" level="INFO">${result} = {"allowed":-1,"used":9917,"status":"OK"}</msg>
<status status="PASS" starttime="20230103 10:12:53.233" endtime="20230103 10:12:53.283"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230103 10:12:53.284" endtime="20230103 10:12:53.288"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230103 10:12:53.288" endtime="20230103 10:12:53.289"/>
</kw>
<status status="PASS" starttime="20230103 10:12:53.232" endtime="20230103 10:12:53.290"/>
</kw>
<status status="PASS" starttime="20230103 10:12:53.231" endtime="20230103 10:12:53.290"/>
</kw>
<status status="PASS" starttime="20230103 10:12:53.229" endtime="20230103 10:12:53.290"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230103 10:12:53.218" endtime="20230103 10:12:53.290"/>
</test>
<test id="s1-t15" name="Check Recon Namespace Bucket Quota Usage" line="144">
<kw name="Wait For Summary">
<arg>${QUOTA_USAGE_URL}?path=/${VOLUME}/${BUCKET}</arg>
<arg>\"used\"</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:12:53.315" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/quota?path=/vol-yhcxp/buc-vkweg 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:12:53.348" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:12:53.348" level="INFO">${output} = {"allowed":-1,"used":9917,"status":"OK"}</msg>
<status status="PASS" starttime="20230103 10:12:53.306" endtime="20230103 10:12:53.348"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:12:53.350" level="INFO">{"allowed":-1,"used":9917,"status":"OK"}</msg>
<status status="PASS" starttime="20230103 10:12:53.349" endtime="20230103 10:12:53.350"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:12:53.351" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:12:53.350" endtime="20230103 10:12:53.351"/>
</kw>
<status status="PASS" starttime="20230103 10:12:53.304" endtime="20230103 10:12:53.352"/>
</kw>
<msg timestamp="20230103 10:12:53.352" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:12:53.304" endtime="20230103 10:12:53.353"/>
</kw>
<msg timestamp="20230103 10:12:53.353" level="INFO">${result} = {"allowed":-1,"used":9917,"status":"OK"}</msg>
<status status="PASS" starttime="20230103 10:12:53.303" endtime="20230103 10:12:53.354"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230103 10:12:53.354" endtime="20230103 10:12:53.355"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230103 10:12:53.355" endtime="20230103 10:12:53.356"/>
</kw>
<status status="PASS" starttime="20230103 10:12:53.302" endtime="20230103 10:12:53.356"/>
</kw>
<status status="PASS" starttime="20230103 10:12:53.301" endtime="20230103 10:12:53.356"/>
</kw>
<status status="PASS" starttime="20230103 10:12:53.298" endtime="20230103 10:12:53.357"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230103 10:12:53.297" endtime="20230103 10:12:53.357"/>
</test>
<test id="s1-t16" name="Check Recon Namespace File Size Distribution Root" line="147">
<kw name="Wait For Summary">
<arg>${FILE_SIZE_DIST_URL}?path=/</arg>
<arg>\"dist\"</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230103 10:12:53.373" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/dist?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230103 10:12:53.395" level="INFO">${rc} = 0</msg>
<msg timestamp="20230103 10:12:53.395" level="INFO">${output} = {"dist":[0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"status":"OK"}</msg>
<status status="PASS" starttime="20230103 10:12:53.368" endtime="20230103 10:12:53.395"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230103 10:12:53.397" level="INFO">{"dist":[0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"status":"OK"}</msg>
<status status="PASS" starttime="20230103 10:12:53.395" endtime="20230103 10:12:53.397"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230103 10:12:53.401" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230103 10:12:53.397" endtime="20230103 10:12:53.401"/>
</kw>
<status status="PASS" starttime="20230103 10:12:53.367" endtime="20230103 10:12:53.402"/>
</kw>
<msg timestamp="20230103 10:12:53.402" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230103 10:12:53.366" endtime="20230103 10:12:53.403"/>
</kw>
<msg timestamp="20230103 10:12:53.404" level="INFO">${result} = {"dist":[0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"status":"OK"}</msg>
<status status="PASS" starttime="20230103 10:12:53.365" endtime="20230103 10:12:53.404"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230103 10:12:53.404" endtime="20230103 10:12:53.405"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230103 10:12:53.405" endtime="20230103 10:12:53.406"/>
</kw>
<status status="PASS" starttime="20230103 10:12:53.364" endtime="20230103 10:12:53.406"/>
</kw>
<status status="PASS" starttime="20230103 10:12:53.363" endtime="20230103 10:12:53.407"/>
</kw>
<status status="PASS" starttime="20230103 10:12:53.362" endtime="20230103 10:12:53.407"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230103 10:12:53.360" endtime="20230103 10:12:53.408"/>
</test>
<doc>Smoke test for Recon Namespace Summary Endpoint for LEGACY buckets.</doc>
<status status="PASS" starttime="20230103 10:11:34.790" endtime="20230103 10:12:53.411"/>
</suite>
<statistics>
<total>
<stat pass="16" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="16" fail="0" skip="0" id="s1" name="ozone-legacy-bucket">ozone-legacy-bucket</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
