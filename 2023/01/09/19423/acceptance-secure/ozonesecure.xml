<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 6.0.2 (Python 3.8.10 on linux)" generated="20230109 03:33:57.282" rpa="false" schemaversion="3">
<suite id="s1" name="ozonesecure">
<suite id="s1-s1" name="Basic" source="/opt/hadoop/smoketest/basic">
<suite id="s1-s1-s1" name="Basic" source="/opt/hadoop/smoketest/basic/basic.robot">
<test id="s1-s1-s1-t1" name="Check webui static resources" line="29">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit HTTP user" library="commonlib">
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:06:41.250" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:06:41.255" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:06:41.255" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230109 03:06:41.243" endtime="20230109 03:06:41.255"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:06:41.256" level="INFO">scm</msg>
<status status="PASS" starttime="20230109 03:06:41.255" endtime="20230109 03:06:41.256"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:06:41.257" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:06:41.257" endtime="20230109 03:06:41.257"/>
</kw>
<status status="PASS" starttime="20230109 03:06:41.242" endtime="20230109 03:06:41.258"/>
</kw>
<msg timestamp="20230109 03:06:41.258" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:06:41.242" endtime="20230109 03:06:41.262"/>
</kw>
<msg timestamp="20230109 03:06:41.262" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20230109 03:06:41.241" endtime="20230109 03:06:41.262"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:06:41.268" level="INFO">Running command 'kinit -k HTTP/scm@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:06:41.396" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:06:41.396" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230109 03:06:41.265" endtime="20230109 03:06:41.396"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:06:41.398" level="INFO"/>
<status status="PASS" starttime="20230109 03:06:41.397" endtime="20230109 03:06:41.398"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:06:41.399" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:06:41.398" endtime="20230109 03:06:41.399"/>
</kw>
<status status="PASS" starttime="20230109 03:06:41.264" endtime="20230109 03:06:41.400"/>
</kw>
<msg timestamp="20230109 03:06:41.400" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:06:41.264" endtime="20230109 03:06:41.401"/>
</kw>
<status status="PASS" starttime="20230109 03:06:41.263" endtime="20230109 03:06:41.401"/>
</kw>
<status status="PASS" starttime="20230109 03:06:41.262" endtime="20230109 03:06:41.401"/>
</kw>
<status status="PASS" starttime="20230109 03:06:41.241" endtime="20230109 03:06:41.402"/>
</kw>
<status status="PASS" starttime="20230109 03:06:41.240" endtime="20230109 03:06:41.402"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -s -I http://${SCM}:9876/static/bootstrap-3.4.1/js/bootstrap.min.js</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:06:41.410" level="INFO">Running command 'curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:06:41.721" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:06:41.721" level="INFO">${output} = HTTP/1.1 401 Authentication required
X-Content-Type-Options: nosniff
X-XSS-Protection: 1; mode=block
X-FRAME-OPTIONS: SAMEORIGIN
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
...</msg>
<status status="PASS" starttime="20230109 03:06:41.404" endtime="20230109 03:06:41.721"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:06:41.723" level="INFO">HTTP/1.1 401 Authentication required
X-Content-Type-Options: nosniff
X-XSS-Protection: 1; mode=block
X-FRAME-OPTIONS: SAMEORIGIN
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 489

HTTP/1.1 200 OK
Date: Mon, 09 Jan 2023 03:06:41 GMT
X-Content-Type-Options: nosniff
X-XSS-Protection: 1; mode=block
X-FRAME-OPTIONS: SAMEORIGIN
WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCNcT55zUNZ5EZ0+IvHEhRtVllziZd5up9eT49BW7map75AOiowVfMJkqeMlD0iBbQVHmpxLSCfYodxz8Sp5s913sC
Set-Cookie: hadoop.auth="u=HTTP&amp;p=HTTP/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1673269601701&amp;s=MuaX6aInJibyzPv7iWPZAKLSsg3lhkOQVDcBjq/q96I="; Path=/; HttpOnly
Last-Modified: Mon, 09 Jan 2023 02:45:58 GMT
Content-Type: application/javascript
Accept-Ranges: bytes
Content-Length: 39680
</msg>
<status status="PASS" starttime="20230109 03:06:41.722" endtime="20230109 03:06:41.723"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:06:41.724" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:06:41.723" endtime="20230109 03:06:41.724"/>
</kw>
<status status="PASS" starttime="20230109 03:06:41.403" endtime="20230109 03:06:41.724"/>
</kw>
<msg timestamp="20230109 03:06:41.724" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:06:41.403" endtime="20230109 03:06:41.725"/>
</kw>
<msg timestamp="20230109 03:06:41.725" level="INFO">${result} = HTTP/1.1 401 Authentication required
X-Content-Type-Options: nosniff
X-XSS-Protection: 1; mode=block
X-FRAME-OPTIONS: SAMEORIGIN
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
...</msg>
<status status="PASS" starttime="20230109 03:06:41.402" endtime="20230109 03:06:41.726"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230109 03:06:41.726" endtime="20230109 03:06:41.726"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230109 03:06:41.238" endtime="20230109 03:06:41.727"/>
</test>
<test id="s1-s1-s1-t2" name="Basic Freon smoketest" line="34">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:06:41.745" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:06:41.754" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:06:41.754" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230109 03:06:41.738" endtime="20230109 03:06:41.754"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:06:41.755" level="INFO">scm</msg>
<status status="PASS" starttime="20230109 03:06:41.754" endtime="20230109 03:06:41.755"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:06:41.756" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:06:41.756" endtime="20230109 03:06:41.757"/>
</kw>
<status status="PASS" starttime="20230109 03:06:41.738" endtime="20230109 03:06:41.757"/>
</kw>
<msg timestamp="20230109 03:06:41.757" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:06:41.736" endtime="20230109 03:06:41.758"/>
</kw>
<msg timestamp="20230109 03:06:41.758" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230109 03:06:41.733" endtime="20230109 03:06:41.758"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230109 03:06:41.761" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230109 03:06:41.758" endtime="20230109 03:06:41.761"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:06:41.767" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:06:41.920" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:06:41.920" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230109 03:06:41.764" endtime="20230109 03:06:41.920"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:06:41.922" level="INFO"/>
<status status="PASS" starttime="20230109 03:06:41.921" endtime="20230109 03:06:41.922"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:06:41.923" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:06:41.922" endtime="20230109 03:06:41.923"/>
</kw>
<status status="PASS" starttime="20230109 03:06:41.763" endtime="20230109 03:06:41.924"/>
</kw>
<msg timestamp="20230109 03:06:41.924" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:06:41.763" endtime="20230109 03:06:41.925"/>
</kw>
<status status="PASS" starttime="20230109 03:06:41.762" endtime="20230109 03:06:41.925"/>
</kw>
<status status="PASS" starttime="20230109 03:06:41.761" endtime="20230109 03:06:41.925"/>
</kw>
<status status="PASS" starttime="20230109 03:06:41.732" endtime="20230109 03:06:41.926"/>
</kw>
<status status="PASS" starttime="20230109 03:06:41.732" endtime="20230109 03:06:41.926"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>10</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230109 03:06:41.927" level="INFO">${random} = qP8jDuNuuy</msg>
<status status="PASS" starttime="20230109 03:06:41.926" endtime="20230109 03:06:41.927"/>
</kw>
<kw name="Freon OCKG" library="freon">
<arg>prefix=${random}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:06:41.937" level="INFO">Running command 'ozone freon ockg  -t 1 -n1 -p qP8jDuNuuy  2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:06:55.360" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:06:55.361" level="INFO">${output} = 2023-01-09 03:06:45,134 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-01-09 03:06:45,388 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230109 03:06:41.932" endtime="20230109 03:06:55.361"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:06:55.362" level="INFO">2023-01-09 03:06:45,134 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-01-09 03:06:45,388 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-01-09 03:06:45,389 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-01-09 03:06:45,744 [main] INFO freon.BaseFreonGenerator: Executing test with prefix qP8jDuNuuy and number-of-tests 1
2023-01-09 03:06:45,866 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-01-09 03:06:46,868 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-01-09 03:06:47,869 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-01-09 03:06:48,506 [main] INFO rpc.RpcClient: Creating Volume: vol1, with testuser as owner and space quota set to -1 bytes, counts quota set to -1
2023-01-09 03:06:48,593 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with server-side default bucket layout, testuser as owner, Versioning false, Storage Type set to DISK and Encryption set to false 
2023-01-09 03:06:48,870 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-01-09 03:06:49,871 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-01-09 03:06:49,946 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2023-01-09 03:06:50,022 [pool-2-thread-1] INFO netty.NettyConfigKeys$DataStream: setTlsConf GrpcTlsConfig0-
2023-01-09 03:06:50,498 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2023-01-09 03:06:50,872 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-01-09 03:06:51,872 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-01-09 03:06:52,879 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-01-09 03:06:53,879 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2023-01-09 03:06:54,932 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=1, min=5068.763805, max=5068.763805, mean=5068.763805, stddev=0.0, median=5068.763805, p75=5068.763805, p95=5068.763805, p98=5068.763805, p99=5068.763805, p999=5068.763805, mean_rate=0.1596369379419159, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-01-09 03:06:54,939 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 9
2023-01-09 03:06:54,940 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-01-09 03:06:54,940 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20230109 03:06:55.361" endtime="20230109 03:06:55.362"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:06:55.363" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:06:55.363" endtime="20230109 03:06:55.364"/>
</kw>
<status status="PASS" starttime="20230109 03:06:41.931" endtime="20230109 03:06:55.364"/>
</kw>
<msg timestamp="20230109 03:06:55.364" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:06:41.931" endtime="20230109 03:06:55.365"/>
</kw>
<msg timestamp="20230109 03:06:55.365" level="INFO">${result} = 2023-01-09 03:06:45,134 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-01-09 03:06:45,388 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230109 03:06:41.930" endtime="20230109 03:06:55.366"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230109 03:06:55.366" endtime="20230109 03:06:55.367"/>
</kw>
<status status="PASS" starttime="20230109 03:06:41.927" endtime="20230109 03:06:55.367"/>
</kw>
<kw name="Freon OCKV" library="freon">
<arg>prefix=${random}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockv ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:06:55.374" level="INFO">Running command 'ozone freon ockv  -t 1 -n1 -p qP8jDuNuuy  2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:07:06.648" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:07:06.648" level="INFO">${output} = 2023-01-09 03:06:58,906 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-01-09 03:06:59,050 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230109 03:06:55.371" endtime="20230109 03:07:06.648"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:07:06.650" level="INFO">2023-01-09 03:06:58,906 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-01-09 03:06:59,050 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-01-09 03:06:59,051 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-01-09 03:06:59,405 [main] INFO freon.BaseFreonGenerator: Executing test with prefix qP8jDuNuuy and number-of-tests 1
2023-01-09 03:06:59,527 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-01-09 03:07:00,529 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-01-09 03:07:01,529 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-01-09 03:07:02,530 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-01-09 03:07:02,878 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2023-01-09 03:07:03,530 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-01-09 03:07:04,531 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-01-09 03:07:05,531 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2023-01-09 03:07:06,076 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-validate, count=1, min=111.198449, max=111.198449, mean=111.198449, stddev=0.0, median=111.198449, p75=111.198449, p95=111.198449, p98=111.198449, p99=111.198449, p999=111.198449, mean_rate=0.9425730302591174, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-01-09 03:07:06,077 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 7
2023-01-09 03:07:06,085 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-01-09 03:07:06,086 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20230109 03:07:06.648" endtime="20230109 03:07:06.650"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:07:06.651" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:07:06.650" endtime="20230109 03:07:06.651"/>
</kw>
<status status="PASS" starttime="20230109 03:06:55.370" endtime="20230109 03:07:06.651"/>
</kw>
<msg timestamp="20230109 03:07:06.651" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:06:55.370" endtime="20230109 03:07:06.652"/>
</kw>
<msg timestamp="20230109 03:07:06.652" level="INFO">${result} = 2023-01-09 03:06:58,906 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-01-09 03:06:59,050 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230109 03:06:55.369" endtime="20230109 03:07:06.653"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230109 03:07:06.653" endtime="20230109 03:07:06.653"/>
</kw>
<status status="PASS" starttime="20230109 03:06:55.367" endtime="20230109 03:07:06.653"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230109 03:06:41.730" endtime="20230109 03:07:06.654"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20230109 03:06:41.179" endtime="20230109 03:07:06.657"/>
</suite>
<suite id="s1-s1-s2" name="Getconf" source="/opt/hadoop/smoketest/basic/getconf.robot">
<test id="s1-s1-s2-t1" name="Get OM" line="22">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf ozonemanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:07:06.672" level="INFO">Running command 'ozone getconf ozonemanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:07:09.022" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:07:09.022" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20230109 03:07:06.669" endtime="20230109 03:07:09.023"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:07:09.024" level="INFO">om</msg>
<status status="PASS" starttime="20230109 03:07:09.023" endtime="20230109 03:07:09.024"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:07:09.026" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:07:09.025" endtime="20230109 03:07:09.027"/>
</kw>
<status status="PASS" starttime="20230109 03:07:06.668" endtime="20230109 03:07:09.027"/>
</kw>
<msg timestamp="20230109 03:07:09.027" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:07:06.667" endtime="20230109 03:07:09.028"/>
</kw>
<msg timestamp="20230109 03:07:09.028" level="INFO">${result} = om</msg>
<status status="PASS" starttime="20230109 03:07:06.666" endtime="20230109 03:07:09.028"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230109 03:07:09.029" endtime="20230109 03:07:09.030"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf -ozonemanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:07:09.035" level="INFO">Running command 'ozone getconf -ozonemanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:07:11.464" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:07:11.464" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20230109 03:07:09.032" endtime="20230109 03:07:11.464"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:07:11.467" level="INFO">om</msg>
<status status="PASS" starttime="20230109 03:07:11.464" endtime="20230109 03:07:11.467"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:07:11.468" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:07:11.467" endtime="20230109 03:07:11.468"/>
</kw>
<status status="PASS" starttime="20230109 03:07:09.031" endtime="20230109 03:07:11.469"/>
</kw>
<msg timestamp="20230109 03:07:11.469" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:07:09.030" endtime="20230109 03:07:11.469"/>
</kw>
<msg timestamp="20230109 03:07:11.470" level="INFO">${result} = om</msg>
<status status="PASS" starttime="20230109 03:07:09.030" endtime="20230109 03:07:11.470"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230109 03:07:11.470" endtime="20230109 03:07:11.471"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230109 03:07:06.665" endtime="20230109 03:07:11.471"/>
</test>
<test id="s1-s1-s2-t2" name="Get SCM" line="28">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf storagecontainermanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:07:11.480" level="INFO">Running command 'ozone getconf storagecontainermanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:07:13.662" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:07:13.662" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230109 03:07:11.476" endtime="20230109 03:07:13.663"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:07:13.664" level="INFO">scm</msg>
<status status="PASS" starttime="20230109 03:07:13.663" endtime="20230109 03:07:13.664"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:07:13.665" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:07:13.665" endtime="20230109 03:07:13.666"/>
</kw>
<status status="PASS" starttime="20230109 03:07:11.475" endtime="20230109 03:07:13.666"/>
</kw>
<msg timestamp="20230109 03:07:13.666" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:07:11.475" endtime="20230109 03:07:13.667"/>
</kw>
<msg timestamp="20230109 03:07:13.667" level="INFO">${result} = scm</msg>
<status status="PASS" starttime="20230109 03:07:11.474" endtime="20230109 03:07:13.668"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>scm</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230109 03:07:13.668" endtime="20230109 03:07:13.669"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf -storagecontainermanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:07:13.675" level="INFO">Running command 'ozone getconf -storagecontainermanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:07:16.294" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:07:16.295" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230109 03:07:13.671" endtime="20230109 03:07:16.295"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:07:16.297" level="INFO">scm</msg>
<status status="PASS" starttime="20230109 03:07:16.295" endtime="20230109 03:07:16.298"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:07:16.298" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:07:16.298" endtime="20230109 03:07:16.299"/>
</kw>
<status status="PASS" starttime="20230109 03:07:13.671" endtime="20230109 03:07:16.299"/>
</kw>
<msg timestamp="20230109 03:07:16.299" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:07:13.670" endtime="20230109 03:07:16.300"/>
</kw>
<msg timestamp="20230109 03:07:16.300" level="INFO">${result} = scm</msg>
<status status="PASS" starttime="20230109 03:07:13.669" endtime="20230109 03:07:16.300"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>scm</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230109 03:07:16.301" endtime="20230109 03:07:16.302"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230109 03:07:11.473" endtime="20230109 03:07:16.302"/>
</test>
<test id="s1-s1-s2-t3" name="Get existing config key" line="34">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf confKey ozone.om.address</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:07:16.311" level="INFO">Running command 'ozone getconf confKey ozone.om.address 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:07:18.400" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:07:18.400" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20230109 03:07:16.307" endtime="20230109 03:07:18.400"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:07:18.402" level="INFO">om</msg>
<status status="PASS" starttime="20230109 03:07:18.401" endtime="20230109 03:07:18.402"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:07:18.403" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:07:18.403" endtime="20230109 03:07:18.403"/>
</kw>
<status status="PASS" starttime="20230109 03:07:16.306" endtime="20230109 03:07:18.404"/>
</kw>
<msg timestamp="20230109 03:07:18.404" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:07:16.306" endtime="20230109 03:07:18.405"/>
</kw>
<msg timestamp="20230109 03:07:18.405" level="INFO">${result} = om</msg>
<status status="PASS" starttime="20230109 03:07:16.305" endtime="20230109 03:07:18.405"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230109 03:07:18.406" endtime="20230109 03:07:18.406"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>is missing</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230109 03:07:18.407" endtime="20230109 03:07:18.407"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf -confKey ozone.om.address</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:07:18.415" level="INFO">Running command 'ozone getconf -confKey ozone.om.address 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:07:20.694" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:07:20.694" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20230109 03:07:18.411" endtime="20230109 03:07:20.694"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:07:20.696" level="INFO">om</msg>
<status status="PASS" starttime="20230109 03:07:20.695" endtime="20230109 03:07:20.696"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:07:20.697" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:07:20.696" endtime="20230109 03:07:20.697"/>
</kw>
<status status="PASS" starttime="20230109 03:07:18.411" endtime="20230109 03:07:20.699"/>
</kw>
<msg timestamp="20230109 03:07:20.699" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:07:18.410" endtime="20230109 03:07:20.700"/>
</kw>
<msg timestamp="20230109 03:07:20.701" level="INFO">${result} = om</msg>
<status status="PASS" starttime="20230109 03:07:18.408" endtime="20230109 03:07:20.701"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230109 03:07:20.701" endtime="20230109 03:07:20.702"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>is missing</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230109 03:07:20.702" endtime="20230109 03:07:20.703"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230109 03:07:16.304" endtime="20230109 03:07:20.703"/>
</test>
<test id="s1-s1-s2-t4" name="Get undefined config key" line="42">
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone getconf confKey no-such-config-key</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:07:20.709" level="INFO">Running command 'ozone getconf confKey no-such-config-key 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:07:23.047" level="INFO">${rc} = 255</msg>
<msg timestamp="20230109 03:07:23.047" level="INFO">${output} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20230109 03:07:20.706" endtime="20230109 03:07:23.047"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:07:23.049" level="INFO">Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20230109 03:07:23.048" endtime="20230109 03:07:23.049"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:07:23.050" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:07:23.049" endtime="20230109 03:07:23.050"/>
</kw>
<msg timestamp="20230109 03:07:23.050" level="INFO">${result} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20230109 03:07:20.705" endtime="20230109 03:07:23.050"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Configuration no-such-config-key is missing</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230109 03:07:23.050" endtime="20230109 03:07:23.051"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone getconf -confKey no-such-config-key</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:07:23.056" level="INFO">Running command 'ozone getconf -confKey no-such-config-key 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:07:25.485" level="INFO">${rc} = 255</msg>
<msg timestamp="20230109 03:07:25.485" level="INFO">${output} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20230109 03:07:23.052" endtime="20230109 03:07:25.486"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:07:25.487" level="INFO">Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20230109 03:07:25.486" endtime="20230109 03:07:25.487"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:07:25.488" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:07:25.487" endtime="20230109 03:07:25.488"/>
</kw>
<msg timestamp="20230109 03:07:25.489" level="INFO">${result} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20230109 03:07:23.051" endtime="20230109 03:07:25.489"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Configuration no-such-config-key is missing</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230109 03:07:25.489" endtime="20230109 03:07:25.490"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230109 03:07:20.704" endtime="20230109 03:07:25.490"/>
</test>
<doc>Test 'ozone getconf' command</doc>
<status status="PASS" starttime="20230109 03:07:06.660" endtime="20230109 03:07:25.492"/>
</suite>
<suite id="s1-s1-s3" name="Links" source="/opt/hadoop/smoketest/basic/links.robot">
<kw name="Create volumes" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230109 03:07:25.522" level="INFO">${random} = 93750</msg>
<status status="PASS" starttime="20230109 03:07:25.521" endtime="20230109 03:07:25.522"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${source}</arg>
<arg>${random}-source</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230109 03:07:25.524" level="INFO">${source} = 93750-source</msg>
<status status="PASS" starttime="20230109 03:07:25.522" endtime="20230109 03:07:25.524"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${target}</arg>
<arg>${random}-target</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230109 03:07:25.526" level="INFO">${target} = 93750-target</msg>
<status status="PASS" starttime="20230109 03:07:25.525" endtime="20230109 03:07:25.526"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${source}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:07:25.531" level="INFO">Running command 'ozone sh volume create 93750-source 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:07:32.284" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:07:32.285" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230109 03:07:25.528" endtime="20230109 03:07:32.285"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:07:32.286" level="INFO"/>
<status status="PASS" starttime="20230109 03:07:32.285" endtime="20230109 03:07:32.286"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:07:32.287" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:07:32.286" endtime="20230109 03:07:32.287"/>
</kw>
<status status="PASS" starttime="20230109 03:07:25.527" endtime="20230109 03:07:32.287"/>
</kw>
<msg timestamp="20230109 03:07:32.287" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:07:25.527" endtime="20230109 03:07:32.288"/>
</kw>
<status status="PASS" starttime="20230109 03:07:25.527" endtime="20230109 03:07:32.288"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:07:32.295" level="INFO">Running command 'ozone sh volume create 93750-target 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:07:38.861" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:07:38.861" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230109 03:07:32.291" endtime="20230109 03:07:38.861"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:07:38.865" level="INFO"/>
<status status="PASS" starttime="20230109 03:07:38.862" endtime="20230109 03:07:38.865"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:07:38.866" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:07:38.865" endtime="20230109 03:07:38.866"/>
</kw>
<status status="PASS" starttime="20230109 03:07:32.290" endtime="20230109 03:07:38.867"/>
</kw>
<msg timestamp="20230109 03:07:38.867" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:07:32.289" endtime="20230109 03:07:38.867"/>
</kw>
<status status="PASS" starttime="20230109 03:07:32.289" endtime="20230109 03:07:38.868"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup ACL tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup ACL tests">
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${source}/readable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:07:38.874" level="INFO">Running command 'ozone sh bucket create 93750-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:07:45.538" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:07:45.539" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230109 03:07:38.871" endtime="20230109 03:07:45.539"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:07:45.540" level="INFO"/>
<status status="PASS" starttime="20230109 03:07:45.539" endtime="20230109 03:07:45.540"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:07:45.541" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:07:45.540" endtime="20230109 03:07:45.541"/>
</kw>
<status status="PASS" starttime="20230109 03:07:38.871" endtime="20230109 03:07:45.541"/>
</kw>
<msg timestamp="20230109 03:07:45.542" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:07:38.870" endtime="20230109 03:07:45.542"/>
</kw>
<status status="PASS" starttime="20230109 03:07:38.869" endtime="20230109 03:07:45.542"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${source}/readable-bucket/key-in-readable-bucket /etc/passwd</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:07:45.547" level="INFO">Running command 'ozone sh key put 93750-source/readable-bucket/key-in-readable-bucket /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:07:56.189" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:07:56.189" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230109 03:07:45.544" endtime="20230109 03:07:56.190"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:07:56.192" level="INFO"/>
<status status="PASS" starttime="20230109 03:07:56.191" endtime="20230109 03:07:56.192"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:07:56.193" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:07:56.192" endtime="20230109 03:07:56.193"/>
</kw>
<status status="PASS" starttime="20230109 03:07:45.544" endtime="20230109 03:07:56.194"/>
</kw>
<msg timestamp="20230109 03:07:56.194" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:07:45.543" endtime="20230109 03:07:56.195"/>
</kw>
<status status="PASS" starttime="20230109 03:07:45.543" endtime="20230109 03:07:56.195"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${source}/unreadable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:07:56.201" level="INFO">Running command 'ozone sh bucket create 93750-source/unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:08:02.339" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:08:02.339" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230109 03:07:56.197" endtime="20230109 03:08:02.339"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:08:02.341" level="INFO"/>
<status status="PASS" starttime="20230109 03:08:02.340" endtime="20230109 03:08:02.341"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:08:02.342" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:08:02.341" endtime="20230109 03:08:02.342"/>
</kw>
<status status="PASS" starttime="20230109 03:07:56.196" endtime="20230109 03:08:02.343"/>
</kw>
<msg timestamp="20230109 03:08:02.343" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:07:56.196" endtime="20230109 03:08:02.344"/>
</kw>
<status status="PASS" starttime="20230109 03:07:56.195" endtime="20230109 03:08:02.344"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/readable-link</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:08:02.351" level="INFO">Running command 'ozone sh bucket link 93750-source/readable-bucket 93750-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:08:08.705" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:08:08.705" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230109 03:08:02.348" endtime="20230109 03:08:08.705"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:08:08.708" level="INFO"/>
<status status="PASS" starttime="20230109 03:08:08.706" endtime="20230109 03:08:08.708"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:08:08.708" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:08:08.708" endtime="20230109 03:08:08.708"/>
</kw>
<status status="PASS" starttime="20230109 03:08:02.347" endtime="20230109 03:08:08.709"/>
</kw>
<msg timestamp="20230109 03:08:08.709" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:08:02.346" endtime="20230109 03:08:08.709"/>
</kw>
<status status="PASS" starttime="20230109 03:08:02.345" endtime="20230109 03:08:08.710"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/unreadable-link</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:08:08.716" level="INFO">Running command 'ozone sh bucket link 93750-source/readable-bucket 93750-target/unreadable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:08:14.551" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:08:14.551" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230109 03:08:08.712" endtime="20230109 03:08:14.551"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:08:14.552" level="INFO"/>
<status status="PASS" starttime="20230109 03:08:14.551" endtime="20230109 03:08:14.552"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:08:14.553" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:08:14.553" endtime="20230109 03:08:14.553"/>
</kw>
<status status="PASS" starttime="20230109 03:08:08.711" endtime="20230109 03:08:14.554"/>
</kw>
<msg timestamp="20230109 03:08:14.554" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:08:08.711" endtime="20230109 03:08:14.555"/>
</kw>
<status status="PASS" starttime="20230109 03:08:08.710" endtime="20230109 03:08:14.555"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/unreadable-bucket ${target}/link-to-unreadable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:08:14.560" level="INFO">Running command 'ozone sh bucket link 93750-source/unreadable-bucket 93750-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:08:21.003" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:08:21.003" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230109 03:08:14.557" endtime="20230109 03:08:21.003"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:08:21.005" level="INFO"/>
<status status="PASS" starttime="20230109 03:08:21.004" endtime="20230109 03:08:21.005"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:08:21.006" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:08:21.005" endtime="20230109 03:08:21.006"/>
</kw>
<status status="PASS" starttime="20230109 03:08:14.557" endtime="20230109 03:08:21.006"/>
</kw>
<msg timestamp="20230109 03:08:21.006" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:08:14.556" endtime="20230109 03:08:21.007"/>
</kw>
<status status="PASS" starttime="20230109 03:08:14.555" endtime="20230109 03:08:21.007"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:08:21.014" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:r 93750-target 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:08:27.300" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:08:27.301" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20230109 03:08:21.010" endtime="20230109 03:08:27.301"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:08:27.302" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20230109 03:08:27.301" endtime="20230109 03:08:27.302"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:08:27.303" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:08:27.303" endtime="20230109 03:08:27.303"/>
</kw>
<status status="PASS" starttime="20230109 03:08:21.010" endtime="20230109 03:08:27.304"/>
</kw>
<msg timestamp="20230109 03:08:27.304" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:08:21.009" endtime="20230109 03:08:27.305"/>
</kw>
<status status="PASS" starttime="20230109 03:08:21.008" endtime="20230109 03:08:27.305"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:rl ${source}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:08:27.311" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:rl 93750-source 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:08:33.265" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:08:33.266" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20230109 03:08:27.307" endtime="20230109 03:08:33.266"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:08:33.267" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20230109 03:08:33.266" endtime="20230109 03:08:33.267"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:08:33.268" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:08:33.267" endtime="20230109 03:08:33.268"/>
</kw>
<status status="PASS" starttime="20230109 03:08:27.306" endtime="20230109 03:08:33.269"/>
</kw>
<msg timestamp="20230109 03:08:33.269" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:08:27.306" endtime="20230109 03:08:33.269"/>
</kw>
<status status="PASS" starttime="20230109 03:08:27.305" endtime="20230109 03:08:33.270"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:rl ${source}/readable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:08:33.274" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:rl 93750-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:08:39.824" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:08:39.825" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20230109 03:08:33.271" endtime="20230109 03:08:39.825"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:08:39.826" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20230109 03:08:39.826" endtime="20230109 03:08:39.826"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:08:39.828" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:08:39.827" endtime="20230109 03:08:39.828"/>
</kw>
<status status="PASS" starttime="20230109 03:08:33.271" endtime="20230109 03:08:39.828"/>
</kw>
<msg timestamp="20230109 03:08:39.828" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:08:33.270" endtime="20230109 03:08:39.829"/>
</kw>
<status status="PASS" starttime="20230109 03:08:33.270" endtime="20230109 03:08:39.830"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}/readable-link</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:08:39.837" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r 93750-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:08:45.610" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:08:45.610" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20230109 03:08:39.833" endtime="20230109 03:08:45.610"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:08:45.612" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20230109 03:08:45.611" endtime="20230109 03:08:45.612"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:08:45.613" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:08:45.612" endtime="20230109 03:08:45.613"/>
</kw>
<status status="PASS" starttime="20230109 03:08:39.833" endtime="20230109 03:08:45.613"/>
</kw>
<msg timestamp="20230109 03:08:45.614" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:08:39.831" endtime="20230109 03:08:45.614"/>
</kw>
<status status="PASS" starttime="20230109 03:08:39.830" endtime="20230109 03:08:45.614"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}/link-to-unreadable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:08:45.619" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r 93750-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:08:51.681" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:08:51.682" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20230109 03:08:45.616" endtime="20230109 03:08:51.682"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:08:51.684" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20230109 03:08:51.683" endtime="20230109 03:08:51.684"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:08:51.685" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:08:51.684" endtime="20230109 03:08:51.685"/>
</kw>
<status status="PASS" starttime="20230109 03:08:45.616" endtime="20230109 03:08:51.686"/>
</kw>
<msg timestamp="20230109 03:08:51.686" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:08:45.615" endtime="20230109 03:08:51.687"/>
</kw>
<status status="PASS" starttime="20230109 03:08:45.615" endtime="20230109 03:08:51.687"/>
</kw>
<status status="PASS" starttime="20230109 03:07:38.869" endtime="20230109 03:08:51.687"/>
</kw>
<status status="PASS" starttime="20230109 03:07:38.868" endtime="20230109 03:08:51.687"/>
</kw>
<status status="PASS" starttime="20230109 03:07:25.519" endtime="20230109 03:08:51.688"/>
</kw>
<test id="s1-s1-s3-t1" name="Link to non-existent bucket" line="73">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:08:51.703" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:08:51.707" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:08:51.707" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230109 03:08:51.698" endtime="20230109 03:08:51.707"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:08:51.710" level="INFO">scm</msg>
<status status="PASS" starttime="20230109 03:08:51.708" endtime="20230109 03:08:51.710"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:08:51.711" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:08:51.710" endtime="20230109 03:08:51.711"/>
</kw>
<status status="PASS" starttime="20230109 03:08:51.694" endtime="20230109 03:08:51.711"/>
</kw>
<msg timestamp="20230109 03:08:51.711" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:08:51.694" endtime="20230109 03:08:51.712"/>
</kw>
<msg timestamp="20230109 03:08:51.713" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230109 03:08:51.693" endtime="20230109 03:08:51.713"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230109 03:08:51.716" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230109 03:08:51.713" endtime="20230109 03:08:51.716"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:08:51.722" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:08:51.842" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:08:51.842" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230109 03:08:51.719" endtime="20230109 03:08:51.842"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:08:51.844" level="INFO"/>
<status status="PASS" starttime="20230109 03:08:51.843" endtime="20230109 03:08:51.844"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:08:51.845" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:08:51.845" endtime="20230109 03:08:51.845"/>
</kw>
<status status="PASS" starttime="20230109 03:08:51.718" endtime="20230109 03:08:51.846"/>
</kw>
<msg timestamp="20230109 03:08:51.846" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:08:51.717" endtime="20230109 03:08:51.847"/>
</kw>
<status status="PASS" starttime="20230109 03:08:51.717" endtime="20230109 03:08:51.847"/>
</kw>
<status status="PASS" starttime="20230109 03:08:51.716" endtime="20230109 03:08:51.847"/>
</kw>
<status status="PASS" starttime="20230109 03:08:51.692" endtime="20230109 03:08:51.848"/>
</kw>
<status status="PASS" starttime="20230109 03:08:51.691" endtime="20230109 03:08:51.848"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/no-such-bucket ${target}/dangling-link</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:08:51.854" level="INFO">Running command 'ozone sh bucket link 93750-source/no-such-bucket 93750-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:08:58.289" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:08:58.289" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230109 03:08:51.851" endtime="20230109 03:08:58.289"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:08:58.291" level="INFO"/>
<status status="PASS" starttime="20230109 03:08:58.289" endtime="20230109 03:08:58.291"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:08:58.292" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:08:58.291" endtime="20230109 03:08:58.292"/>
</kw>
<status status="PASS" starttime="20230109 03:08:51.850" endtime="20230109 03:08:58.292"/>
</kw>
<msg timestamp="20230109 03:08:58.293" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:08:51.849" endtime="20230109 03:08:58.293"/>
</kw>
<status status="PASS" starttime="20230109 03:08:51.848" endtime="20230109 03:08:58.294"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/dangling-link</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:08:58.298" level="INFO">Running command 'ozone sh key list 93750-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:09:05.370" level="INFO">${rc} = 255</msg>
<msg timestamp="20230109 03:09:05.370" level="INFO">${output} = BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" starttime="20230109 03:08:58.295" endtime="20230109 03:09:05.370"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:09:05.372" level="INFO">BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" starttime="20230109 03:09:05.371" endtime="20230109 03:09:05.372"/>
</kw>
<msg timestamp="20230109 03:09:05.373" level="INFO">${result} = BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" starttime="20230109 03:08:58.294" endtime="20230109 03:09:05.373"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>BUCKET_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230109 03:09:05.373" endtime="20230109 03:09:05.373"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20230109 03:08:51.690" endtime="20230109 03:09:05.374"/>
</test>
<test id="s1-s1-s3-t2" name="Key create passthrough" line="78">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:09:05.382" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:09:05.387" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:09:05.387" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230109 03:09:05.379" endtime="20230109 03:09:05.387"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:09:05.389" level="INFO">scm</msg>
<status status="PASS" starttime="20230109 03:09:05.388" endtime="20230109 03:09:05.389"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:09:05.389" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:09:05.389" endtime="20230109 03:09:05.389"/>
</kw>
<status status="PASS" starttime="20230109 03:09:05.378" endtime="20230109 03:09:05.390"/>
</kw>
<msg timestamp="20230109 03:09:05.390" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:09:05.378" endtime="20230109 03:09:05.390"/>
</kw>
<msg timestamp="20230109 03:09:05.391" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230109 03:09:05.377" endtime="20230109 03:09:05.391"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230109 03:09:05.392" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230109 03:09:05.391" endtime="20230109 03:09:05.392"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:09:05.397" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:09:05.510" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:09:05.510" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230109 03:09:05.394" endtime="20230109 03:09:05.510"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:09:05.512" level="INFO"/>
<status status="PASS" starttime="20230109 03:09:05.511" endtime="20230109 03:09:05.512"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:09:05.513" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:09:05.512" endtime="20230109 03:09:05.513"/>
</kw>
<status status="PASS" starttime="20230109 03:09:05.394" endtime="20230109 03:09:05.514"/>
</kw>
<msg timestamp="20230109 03:09:05.514" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:09:05.393" endtime="20230109 03:09:05.515"/>
</kw>
<status status="PASS" starttime="20230109 03:09:05.393" endtime="20230109 03:09:05.515"/>
</kw>
<status status="PASS" starttime="20230109 03:09:05.392" endtime="20230109 03:09:05.515"/>
</kw>
<status status="PASS" starttime="20230109 03:09:05.377" endtime="20230109 03:09:05.515"/>
</kw>
<status status="PASS" starttime="20230109 03:09:05.376" endtime="20230109 03:09:05.516"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:09:05.523" level="INFO">Running command 'ozone sh bucket link 93750-source/bucket1 93750-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:09:12.224" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:09:12.224" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230109 03:09:05.519" endtime="20230109 03:09:12.224"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:09:12.225" level="INFO"/>
<status status="PASS" starttime="20230109 03:09:12.224" endtime="20230109 03:09:12.226"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:09:12.227" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:09:12.226" endtime="20230109 03:09:12.227"/>
</kw>
<status status="PASS" starttime="20230109 03:09:05.517" endtime="20230109 03:09:12.227"/>
</kw>
<msg timestamp="20230109 03:09:12.227" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:09:05.517" endtime="20230109 03:09:12.228"/>
</kw>
<status status="PASS" starttime="20230109 03:09:05.516" endtime="20230109 03:09:12.229"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${source}/bucket1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:09:12.234" level="INFO">Running command 'ozone sh bucket create 93750-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:09:18.140" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:09:18.140" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230109 03:09:12.231" endtime="20230109 03:09:18.140"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:09:18.141" level="INFO"/>
<status status="PASS" starttime="20230109 03:09:18.140" endtime="20230109 03:09:18.141"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:09:18.142" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:09:18.141" endtime="20230109 03:09:18.142"/>
</kw>
<status status="PASS" starttime="20230109 03:09:12.230" endtime="20230109 03:09:18.143"/>
</kw>
<msg timestamp="20230109 03:09:18.143" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:09:12.230" endtime="20230109 03:09:18.143"/>
</kw>
<status status="PASS" starttime="20230109 03:09:12.229" endtime="20230109 03:09:18.144"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${target}/link1/key1 /etc/passwd</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:09:18.150" level="INFO">Running command 'ozone sh key put 93750-target/link1/key1 /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:09:27.795" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:09:27.795" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230109 03:09:18.146" endtime="20230109 03:09:27.795"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:09:27.798" level="INFO"/>
<status status="PASS" starttime="20230109 03:09:27.796" endtime="20230109 03:09:27.798"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:09:27.798" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:09:27.798" endtime="20230109 03:09:27.799"/>
</kw>
<status status="PASS" starttime="20230109 03:09:18.146" endtime="20230109 03:09:27.799"/>
</kw>
<msg timestamp="20230109 03:09:27.799" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:09:18.145" endtime="20230109 03:09:27.800"/>
</kw>
<status status="PASS" starttime="20230109 03:09:18.144" endtime="20230109 03:09:27.800"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${target}/link1/key1</arg>
<arg>/etc/passwd</arg>
<kw name="Compare Key With Local File" library="shell">
<var>${matches}</var>
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230109 03:09:27.803" level="INFO">${postfix} = 93755</msg>
<status status="PASS" starttime="20230109 03:09:27.802" endtime="20230109 03:09:27.803"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${tmpfile}</var>
<arg>/tmp/tempkey-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230109 03:09:27.804" level="INFO">${tmpfile} = /tmp/tempkey-93755</msg>
<status status="PASS" starttime="20230109 03:09:27.803" endtime="20230109 03:09:27.804"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${key} ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:09:27.810" level="INFO">Running command 'ozone sh key get 93750-target/link1/key1 /tmp/tempkey-93755 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:09:37.417" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:09:37.417" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230109 03:09:27.806" endtime="20230109 03:09:37.417"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:09:37.419" level="INFO"/>
<status status="PASS" starttime="20230109 03:09:37.417" endtime="20230109 03:09:37.419"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:09:37.420" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:09:37.419" endtime="20230109 03:09:37.420"/>
</kw>
<status status="PASS" starttime="20230109 03:09:27.805" endtime="20230109 03:09:37.420"/>
</kw>
<msg timestamp="20230109 03:09:37.421" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:09:27.805" endtime="20230109 03:09:37.421"/>
</kw>
<status status="PASS" starttime="20230109 03:09:27.804" endtime="20230109 03:09:37.422"/>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<var>${rc}</var>
<arg>diff -q ${file} ${tmpfile}</arg>
<doc>Runs the given command in the system and returns the return code.</doc>
<msg timestamp="20230109 03:09:37.426" level="INFO">Running command 'diff -q /etc/passwd /tmp/tempkey-93755 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:09:37.445" level="INFO">${rc} = 0</msg>
<status status="PASS" starttime="20230109 03:09:37.422" endtime="20230109 03:09:37.445"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:09:37.454" level="INFO">Running command 'rm -f /tmp/tempkey-93755 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:09:37.464" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:09:37.464" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230109 03:09:37.450" endtime="20230109 03:09:37.464"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:09:37.466" level="INFO"/>
<status status="PASS" starttime="20230109 03:09:37.465" endtime="20230109 03:09:37.466"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:09:37.467" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:09:37.466" endtime="20230109 03:09:37.467"/>
</kw>
<status status="PASS" starttime="20230109 03:09:37.449" endtime="20230109 03:09:37.468"/>
</kw>
<msg timestamp="20230109 03:09:37.468" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:09:37.447" endtime="20230109 03:09:37.469"/>
</kw>
<status status="PASS" starttime="20230109 03:09:37.445" endtime="20230109 03:09:37.469"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230109 03:09:37.470" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20230109 03:09:37.469" endtime="20230109 03:09:37.470"/>
</kw>
<msg timestamp="20230109 03:09:37.471" level="INFO">${matches} = True</msg>
<status status="PASS" starttime="20230109 03:09:27.801" endtime="20230109 03:09:37.471"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${matches}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230109 03:09:37.471" endtime="20230109 03:09:37.472"/>
</kw>
<status status="PASS" starttime="20230109 03:09:27.800" endtime="20230109 03:09:37.472"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20230109 03:09:05.375" endtime="20230109 03:09:37.472"/>
</test>
<test id="s1-s1-s3-t3" name="Key read passthrough" line="84">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:09:37.482" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:09:37.488" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:09:37.488" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230109 03:09:37.478" endtime="20230109 03:09:37.488"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:09:37.490" level="INFO">scm</msg>
<status status="PASS" starttime="20230109 03:09:37.489" endtime="20230109 03:09:37.490"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:09:37.491" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:09:37.490" endtime="20230109 03:09:37.491"/>
</kw>
<status status="PASS" starttime="20230109 03:09:37.478" endtime="20230109 03:09:37.491"/>
</kw>
<msg timestamp="20230109 03:09:37.492" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:09:37.477" endtime="20230109 03:09:37.492"/>
</kw>
<msg timestamp="20230109 03:09:37.494" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230109 03:09:37.477" endtime="20230109 03:09:37.494"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230109 03:09:37.500" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230109 03:09:37.495" endtime="20230109 03:09:37.500"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:09:37.515" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:09:37.705" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:09:37.705" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230109 03:09:37.511" endtime="20230109 03:09:37.705"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:09:37.707" level="INFO"/>
<status status="PASS" starttime="20230109 03:09:37.706" endtime="20230109 03:09:37.707"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:09:37.708" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:09:37.707" endtime="20230109 03:09:37.708"/>
</kw>
<status status="PASS" starttime="20230109 03:09:37.502" endtime="20230109 03:09:37.709"/>
</kw>
<msg timestamp="20230109 03:09:37.709" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:09:37.502" endtime="20230109 03:09:37.709"/>
</kw>
<status status="PASS" starttime="20230109 03:09:37.501" endtime="20230109 03:09:37.710"/>
</kw>
<status status="PASS" starttime="20230109 03:09:37.500" endtime="20230109 03:09:37.710"/>
</kw>
<status status="PASS" starttime="20230109 03:09:37.476" endtime="20230109 03:09:37.710"/>
</kw>
<status status="PASS" starttime="20230109 03:09:37.475" endtime="20230109 03:09:37.710"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${source}/bucket1/key2 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:09:37.716" level="INFO">Running command 'ozone sh key put 93750-source/bucket1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:09:47.969" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:09:47.969" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230109 03:09:37.713" endtime="20230109 03:09:47.969"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:09:47.971" level="INFO"/>
<status status="PASS" starttime="20230109 03:09:47.969" endtime="20230109 03:09:47.971"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:09:47.972" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:09:47.971" endtime="20230109 03:09:47.972"/>
</kw>
<status status="PASS" starttime="20230109 03:09:37.712" endtime="20230109 03:09:47.973"/>
</kw>
<msg timestamp="20230109 03:09:47.973" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:09:37.711" endtime="20230109 03:09:47.973"/>
</kw>
<status status="PASS" starttime="20230109 03:09:37.710" endtime="20230109 03:09:47.974"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${source}/bucket1/key2</arg>
<arg>/opt/hadoop/NOTICE.txt</arg>
<kw name="Compare Key With Local File" library="shell">
<var>${matches}</var>
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230109 03:09:47.980" level="INFO">${postfix} = 46911</msg>
<status status="PASS" starttime="20230109 03:09:47.979" endtime="20230109 03:09:47.980"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${tmpfile}</var>
<arg>/tmp/tempkey-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230109 03:09:47.981" level="INFO">${tmpfile} = /tmp/tempkey-46911</msg>
<status status="PASS" starttime="20230109 03:09:47.980" endtime="20230109 03:09:47.981"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${key} ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:09:47.987" level="INFO">Running command 'ozone sh key get 93750-source/bucket1/key2 /tmp/tempkey-46911 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:09:57.248" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:09:57.249" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230109 03:09:47.983" endtime="20230109 03:09:57.249"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:09:57.250" level="INFO"/>
<status status="PASS" starttime="20230109 03:09:57.249" endtime="20230109 03:09:57.250"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:09:57.251" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:09:57.251" endtime="20230109 03:09:57.251"/>
</kw>
<status status="PASS" starttime="20230109 03:09:47.983" endtime="20230109 03:09:57.252"/>
</kw>
<msg timestamp="20230109 03:09:57.252" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:09:47.982" endtime="20230109 03:09:57.253"/>
</kw>
<status status="PASS" starttime="20230109 03:09:47.982" endtime="20230109 03:09:57.253"/>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<var>${rc}</var>
<arg>diff -q ${file} ${tmpfile}</arg>
<doc>Runs the given command in the system and returns the return code.</doc>
<msg timestamp="20230109 03:09:57.256" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/tempkey-46911 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:09:57.260" level="INFO">${rc} = 0</msg>
<status status="PASS" starttime="20230109 03:09:57.253" endtime="20230109 03:09:57.260"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:09:57.266" level="INFO">Running command 'rm -f /tmp/tempkey-46911 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:09:57.270" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:09:57.270" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230109 03:09:57.264" endtime="20230109 03:09:57.271"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:09:57.272" level="INFO"/>
<status status="PASS" starttime="20230109 03:09:57.271" endtime="20230109 03:09:57.272"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:09:57.273" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:09:57.272" endtime="20230109 03:09:57.273"/>
</kw>
<status status="PASS" starttime="20230109 03:09:57.263" endtime="20230109 03:09:57.274"/>
</kw>
<msg timestamp="20230109 03:09:57.274" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:09:57.262" endtime="20230109 03:09:57.275"/>
</kw>
<status status="PASS" starttime="20230109 03:09:57.261" endtime="20230109 03:09:57.275"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230109 03:09:57.276" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20230109 03:09:57.275" endtime="20230109 03:09:57.277"/>
</kw>
<msg timestamp="20230109 03:09:57.277" level="INFO">${matches} = True</msg>
<status status="PASS" starttime="20230109 03:09:47.975" endtime="20230109 03:09:57.277"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${matches}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230109 03:09:57.277" endtime="20230109 03:09:57.278"/>
</kw>
<status status="PASS" starttime="20230109 03:09:47.974" endtime="20230109 03:09:57.278"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20230109 03:09:37.474" endtime="20230109 03:09:57.279"/>
</test>
<test id="s1-s1-s3-t4" name="Key list passthrough" line="88">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:09:57.288" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:09:57.292" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:09:57.293" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230109 03:09:57.285" endtime="20230109 03:09:57.293"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:09:57.294" level="INFO">scm</msg>
<status status="PASS" starttime="20230109 03:09:57.293" endtime="20230109 03:09:57.294"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:09:57.295" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:09:57.294" endtime="20230109 03:09:57.295"/>
</kw>
<status status="PASS" starttime="20230109 03:09:57.284" endtime="20230109 03:09:57.296"/>
</kw>
<msg timestamp="20230109 03:09:57.296" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:09:57.283" endtime="20230109 03:09:57.296"/>
</kw>
<msg timestamp="20230109 03:09:57.297" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230109 03:09:57.282" endtime="20230109 03:09:57.297"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230109 03:09:57.298" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230109 03:09:57.297" endtime="20230109 03:09:57.298"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:09:57.305" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:09:57.403" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:09:57.404" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230109 03:09:57.302" endtime="20230109 03:09:57.404"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:09:57.406" level="INFO"/>
<status status="PASS" starttime="20230109 03:09:57.405" endtime="20230109 03:09:57.407"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:09:57.408" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:09:57.407" endtime="20230109 03:09:57.408"/>
</kw>
<status status="PASS" starttime="20230109 03:09:57.301" endtime="20230109 03:09:57.409"/>
</kw>
<msg timestamp="20230109 03:09:57.413" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:09:57.300" endtime="20230109 03:09:57.414"/>
</kw>
<status status="PASS" starttime="20230109 03:09:57.299" endtime="20230109 03:09:57.414"/>
</kw>
<status status="PASS" starttime="20230109 03:09:57.298" endtime="20230109 03:09:57.414"/>
</kw>
<status status="PASS" starttime="20230109 03:09:57.282" endtime="20230109 03:09:57.414"/>
</kw>
<status status="PASS" starttime="20230109 03:09:57.281" endtime="20230109 03:09:57.415"/>
</kw>
<kw name="Execute" library="os">
<var>${target_list}</var>
<arg>ozone sh key list ${target}/link1 | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:09:57.421" level="INFO">Running command 'ozone sh key list 93750-target/link1 | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:10:04.025" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:10:04.025" level="INFO">${output} = key1
key2</msg>
<status status="PASS" starttime="20230109 03:09:57.417" endtime="20230109 03:10:04.025"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:10:04.027" level="INFO">key1
key2</msg>
<status status="PASS" starttime="20230109 03:10:04.026" endtime="20230109 03:10:04.028"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:10:04.029" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:10:04.028" endtime="20230109 03:10:04.029"/>
</kw>
<status status="PASS" starttime="20230109 03:09:57.416" endtime="20230109 03:10:04.029"/>
</kw>
<msg timestamp="20230109 03:10:04.029" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:09:57.416" endtime="20230109 03:10:04.030"/>
</kw>
<msg timestamp="20230109 03:10:04.031" level="INFO">${target_list} = key1
key2</msg>
<status status="PASS" starttime="20230109 03:09:57.415" endtime="20230109 03:10:04.031"/>
</kw>
<kw name="Execute" library="os">
<var>${source_list}</var>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:10:04.036" level="INFO">Running command 'ozone sh key list 93750-source/bucket1 | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:10:10.626" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:10:10.626" level="INFO">${output} = key1
key2</msg>
<status status="PASS" starttime="20230109 03:10:04.033" endtime="20230109 03:10:10.626"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:10:10.628" level="INFO">key1
key2</msg>
<status status="PASS" starttime="20230109 03:10:10.626" endtime="20230109 03:10:10.628"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:10:10.629" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:10:10.628" endtime="20230109 03:10:10.629"/>
</kw>
<status status="PASS" starttime="20230109 03:10:04.032" endtime="20230109 03:10:10.629"/>
</kw>
<msg timestamp="20230109 03:10:10.629" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:10:04.032" endtime="20230109 03:10:10.630"/>
</kw>
<msg timestamp="20230109 03:10:10.631" level="INFO">${source_list} = key1
key2</msg>
<status status="PASS" starttime="20230109 03:10:04.031" endtime="20230109 03:10:10.631"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${target_list}</arg>
<arg>${source_list}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230109 03:10:10.631" endtime="20230109 03:10:10.632"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230109 03:10:10.632" endtime="20230109 03:10:10.632"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230109 03:10:10.632" endtime="20230109 03:10:10.633"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20230109 03:09:57.280" endtime="20230109 03:10:10.633"/>
</test>
<test id="s1-s1-s3-t5" name="Key delete passthrough" line="95">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:10:10.642" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:10:10.646" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:10:10.646" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230109 03:10:10.639" endtime="20230109 03:10:10.647"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:10:10.648" level="INFO">scm</msg>
<status status="PASS" starttime="20230109 03:10:10.647" endtime="20230109 03:10:10.648"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:10:10.650" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:10:10.648" endtime="20230109 03:10:10.650"/>
</kw>
<status status="PASS" starttime="20230109 03:10:10.638" endtime="20230109 03:10:10.650"/>
</kw>
<msg timestamp="20230109 03:10:10.650" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:10:10.637" endtime="20230109 03:10:10.651"/>
</kw>
<msg timestamp="20230109 03:10:10.652" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230109 03:10:10.637" endtime="20230109 03:10:10.652"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230109 03:10:10.653" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230109 03:10:10.652" endtime="20230109 03:10:10.653"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:10:10.658" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:10:10.742" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:10:10.742" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230109 03:10:10.655" endtime="20230109 03:10:10.742"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:10:10.744" level="INFO"/>
<status status="PASS" starttime="20230109 03:10:10.742" endtime="20230109 03:10:10.744"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:10:10.745" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:10:10.744" endtime="20230109 03:10:10.745"/>
</kw>
<status status="PASS" starttime="20230109 03:10:10.655" endtime="20230109 03:10:10.745"/>
</kw>
<msg timestamp="20230109 03:10:10.745" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:10:10.654" endtime="20230109 03:10:10.746"/>
</kw>
<status status="PASS" starttime="20230109 03:10:10.654" endtime="20230109 03:10:10.747"/>
</kw>
<status status="PASS" starttime="20230109 03:10:10.653" endtime="20230109 03:10:10.747"/>
</kw>
<status status="PASS" starttime="20230109 03:10:10.636" endtime="20230109 03:10:10.747"/>
</kw>
<status status="PASS" starttime="20230109 03:10:10.636" endtime="20230109 03:10:10.747"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${target}/link1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:10:10.752" level="INFO">Running command 'ozone sh key delete 93750-target/link1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:10:17.203" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:10:17.203" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230109 03:10:10.749" endtime="20230109 03:10:17.203"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:10:17.205" level="INFO"/>
<status status="PASS" starttime="20230109 03:10:17.204" endtime="20230109 03:10:17.205"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:10:17.206" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:10:17.205" endtime="20230109 03:10:17.206"/>
</kw>
<status status="PASS" starttime="20230109 03:10:10.749" endtime="20230109 03:10:17.207"/>
</kw>
<msg timestamp="20230109 03:10:17.207" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:10:10.748" endtime="20230109 03:10:17.207"/>
</kw>
<status status="PASS" starttime="20230109 03:10:10.747" endtime="20230109 03:10:17.208"/>
</kw>
<kw name="Execute" library="os">
<var>${source_list}</var>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:10:17.213" level="INFO">Running command 'ozone sh key list 93750-source/bucket1 | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:10:23.554" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:10:23.554" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20230109 03:10:17.210" endtime="20230109 03:10:23.554"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:10:23.556" level="INFO">key1</msg>
<status status="PASS" starttime="20230109 03:10:23.555" endtime="20230109 03:10:23.556"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:10:23.557" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:10:23.556" endtime="20230109 03:10:23.557"/>
</kw>
<status status="PASS" starttime="20230109 03:10:17.209" endtime="20230109 03:10:23.558"/>
</kw>
<msg timestamp="20230109 03:10:23.558" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:10:17.209" endtime="20230109 03:10:23.559"/>
</kw>
<msg timestamp="20230109 03:10:23.559" level="INFO">${source_list} = key1</msg>
<status status="PASS" starttime="20230109 03:10:17.208" endtime="20230109 03:10:23.559"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key2</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230109 03:10:23.559" endtime="20230109 03:10:23.560"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20230109 03:10:10.635" endtime="20230109 03:10:23.561"/>
</test>
<test id="s1-s1-s3-t6" name="Bucket list contains links" line="100">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:10:23.572" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:10:23.576" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:10:23.577" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230109 03:10:23.568" endtime="20230109 03:10:23.577"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:10:23.578" level="INFO">scm</msg>
<status status="PASS" starttime="20230109 03:10:23.577" endtime="20230109 03:10:23.578"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:10:23.579" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:10:23.579" endtime="20230109 03:10:23.580"/>
</kw>
<status status="PASS" starttime="20230109 03:10:23.567" endtime="20230109 03:10:23.580"/>
</kw>
<msg timestamp="20230109 03:10:23.580" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:10:23.566" endtime="20230109 03:10:23.581"/>
</kw>
<msg timestamp="20230109 03:10:23.581" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230109 03:10:23.566" endtime="20230109 03:10:23.582"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230109 03:10:23.583" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230109 03:10:23.582" endtime="20230109 03:10:23.583"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:10:23.589" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:10:23.640" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:10:23.640" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230109 03:10:23.585" endtime="20230109 03:10:23.640"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:10:23.642" level="INFO"/>
<status status="PASS" starttime="20230109 03:10:23.641" endtime="20230109 03:10:23.642"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:10:23.643" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:10:23.642" endtime="20230109 03:10:23.643"/>
</kw>
<status status="PASS" starttime="20230109 03:10:23.585" endtime="20230109 03:10:23.643"/>
</kw>
<msg timestamp="20230109 03:10:23.643" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:10:23.584" endtime="20230109 03:10:23.644"/>
</kw>
<status status="PASS" starttime="20230109 03:10:23.583" endtime="20230109 03:10:23.644"/>
</kw>
<status status="PASS" starttime="20230109 03:10:23.583" endtime="20230109 03:10:23.644"/>
</kw>
<status status="PASS" starttime="20230109 03:10:23.565" endtime="20230109 03:10:23.645"/>
</kw>
<status status="PASS" starttime="20230109 03:10:23.564" endtime="20230109 03:10:23.645"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:10:23.650" level="INFO">Running command 'ozone sh bucket list 93750-target 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:10:30.171" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:10:30.171" level="INFO">${output} = [ {
  "volumeName" : "93750-target",
  "bucketName" : "dangling-link",
  "sourceVolume" : "93750-source",
  "sourceBucket" : "no-such-bucket",
  "creationTime" : "2023-01-09T03:08:58.083Z",
  "modific...</msg>
<status status="PASS" starttime="20230109 03:10:23.647" endtime="20230109 03:10:30.171"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:10:30.174" level="INFO">[ {
  "volumeName" : "93750-target",
  "bucketName" : "dangling-link",
  "sourceVolume" : "93750-source",
  "sourceBucket" : "no-such-bucket",
  "creationTime" : "2023-01-09T03:08:58.083Z",
  "modificationTime" : "2023-01-09T03:08:58.083Z",
  "owner" : "testuser"
}, {
  "volumeName" : "93750-target",
  "bucketName" : "link-to-unreadable-bucket",
  "sourceVolume" : "93750-source",
  "sourceBucket" : "unreadable-bucket",
  "creationTime" : "2023-01-09T03:08:20.775Z",
  "modificationTime" : "2023-01-09T03:08:51.551Z",
  "owner" : "testuser"
}, {
  "volumeName" : "93750-target",
  "bucketName" : "link1",
  "sourceVolume" : "93750-source",
  "sourceBucket" : "bucket1",
  "creationTime" : "2023-01-09T03:09:12.101Z",
  "modificationTime" : "2023-01-09T03:09:12.101Z",
  "owner" : "testuser"
}, {
  "volumeName" : "93750-target",
  "bucketName" : "readable-link",
  "sourceVolume" : "93750-source",
  "sourceBucket" : "readable-bucket",
  "creationTime" : "2023-01-09T03:08:08.572Z",
  "modificationTime" : "2023-01-09T03:08:45.486Z",
  "owner" : "testuser"
}, {
  "volumeName" : "93750-target",
  "bucketName" : "unreadable-link",
  "sourceVolume" : "93750-source",
  "sourceBucket" : "readable-bucket",
  "creationTime" : "2023-01-09T03:08:14.450Z",
  "modificationTime" : "2023-01-09T03:08:14.450Z",
  "owner" : "testuser"
} ]</msg>
<status status="PASS" starttime="20230109 03:10:30.172" endtime="20230109 03:10:30.174"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:10:30.175" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:10:30.174" endtime="20230109 03:10:30.175"/>
</kw>
<status status="PASS" starttime="20230109 03:10:23.646" endtime="20230109 03:10:30.178"/>
</kw>
<msg timestamp="20230109 03:10:30.180" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:10:23.646" endtime="20230109 03:10:30.180"/>
</kw>
<msg timestamp="20230109 03:10:30.181" level="INFO">${result} = [ {
  "volumeName" : "93750-target",
  "bucketName" : "dangling-link",
  "sourceVolume" : "93750-source",
  "sourceBucket" : "no-such-bucket",
  "creationTime" : "2023-01-09T03:08:58.083Z",
  "modific...</msg>
<status status="PASS" starttime="20230109 03:10:23.645" endtime="20230109 03:10:30.181"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>link1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230109 03:10:30.181" endtime="20230109 03:10:30.182"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>dangling-link</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230109 03:10:30.182" endtime="20230109 03:10:30.182"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20230109 03:10:23.562" endtime="20230109 03:10:30.183"/>
</test>
<test id="s1-s1-s3-t7" name="Bucket info shows source" line="105">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:10:30.192" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:10:30.198" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:10:30.198" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230109 03:10:30.189" endtime="20230109 03:10:30.198"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:10:30.201" level="INFO">scm</msg>
<status status="PASS" starttime="20230109 03:10:30.199" endtime="20230109 03:10:30.201"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:10:30.202" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:10:30.201" endtime="20230109 03:10:30.202"/>
</kw>
<status status="PASS" starttime="20230109 03:10:30.188" endtime="20230109 03:10:30.203"/>
</kw>
<msg timestamp="20230109 03:10:30.203" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:10:30.188" endtime="20230109 03:10:30.204"/>
</kw>
<msg timestamp="20230109 03:10:30.204" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230109 03:10:30.187" endtime="20230109 03:10:30.204"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230109 03:10:30.205" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230109 03:10:30.204" endtime="20230109 03:10:30.205"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:10:30.212" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:10:30.267" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:10:30.267" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230109 03:10:30.209" endtime="20230109 03:10:30.267"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:10:30.268" level="INFO"/>
<status status="PASS" starttime="20230109 03:10:30.268" endtime="20230109 03:10:30.269"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:10:30.269" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:10:30.269" endtime="20230109 03:10:30.269"/>
</kw>
<status status="PASS" starttime="20230109 03:10:30.208" endtime="20230109 03:10:30.270"/>
</kw>
<msg timestamp="20230109 03:10:30.270" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:10:30.207" endtime="20230109 03:10:30.270"/>
</kw>
<status status="PASS" starttime="20230109 03:10:30.206" endtime="20230109 03:10:30.271"/>
</kw>
<status status="PASS" starttime="20230109 03:10:30.206" endtime="20230109 03:10:30.271"/>
</kw>
<status status="PASS" starttime="20230109 03:10:30.186" endtime="20230109 03:10:30.271"/>
</kw>
<status status="PASS" starttime="20230109 03:10:30.185" endtime="20230109 03:10:30.272"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:10:30.278" level="INFO">Running command 'ozone sh bucket info 93750-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:10:36.873" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:10:36.873" level="INFO">${output} = {
  "volumeName" : "93750-target",
  "bucketName" : "link1",
  "sourceVolume" : "93750-source",
  "sourceBucket" : "bucket1",
  "creationTime" : "2023-01-09T03:09:12.101Z",
  "modificationTime" : "202...</msg>
<status status="PASS" starttime="20230109 03:10:30.274" endtime="20230109 03:10:36.873"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:10:36.875" level="INFO">{
  "volumeName" : "93750-target",
  "bucketName" : "link1",
  "sourceVolume" : "93750-source",
  "sourceBucket" : "bucket1",
  "creationTime" : "2023-01-09T03:09:12.101Z",
  "modificationTime" : "2023-01-09T03:09:12.101Z",
  "owner" : "testuser"
}</msg>
<status status="PASS" starttime="20230109 03:10:36.874" endtime="20230109 03:10:36.875"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:10:36.876" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:10:36.875" endtime="20230109 03:10:36.876"/>
</kw>
<status status="PASS" starttime="20230109 03:10:30.273" endtime="20230109 03:10:36.877"/>
</kw>
<msg timestamp="20230109 03:10:36.877" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:10:30.273" endtime="20230109 03:10:36.877"/>
</kw>
<msg timestamp="20230109 03:10:36.878" level="INFO">${result} = {
  "volumeName" : "93750-target",
  "bucketName" : "link1",
  "sourceVolume" : "93750-source",
  "sourceBucket" : "bucket1",
  "creationTime" : "2023-01-09T03:09:12.101Z",
  "modificationTime" : "202...</msg>
<status status="PASS" starttime="20230109 03:10:30.272" endtime="20230109 03:10:36.878"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${source}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230109 03:10:36.878" endtime="20230109 03:10:36.878"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>bucket1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230109 03:10:36.878" endtime="20230109 03:10:36.879"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${target}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230109 03:10:36.879" endtime="20230109 03:10:36.880"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>link1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230109 03:10:36.880" endtime="20230109 03:10:36.880"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>modificationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230109 03:10:36.881" endtime="20230109 03:10:36.881"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230109 03:10:36.881" endtime="20230109 03:10:36.882"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>metadata</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230109 03:10:36.882" endtime="20230109 03:10:36.883"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20230109 03:10:30.184" endtime="20230109 03:10:36.883"/>
</test>
<test id="s1-s1-s3-t8" name="Source and target have separate ACLs" line="115">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:10:36.895" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:10:36.899" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:10:36.899" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230109 03:10:36.891" endtime="20230109 03:10:36.899"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:10:36.901" level="INFO">scm</msg>
<status status="PASS" starttime="20230109 03:10:36.900" endtime="20230109 03:10:36.901"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:10:36.902" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:10:36.901" endtime="20230109 03:10:36.902"/>
</kw>
<status status="PASS" starttime="20230109 03:10:36.890" endtime="20230109 03:10:36.903"/>
</kw>
<msg timestamp="20230109 03:10:36.903" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:10:36.889" endtime="20230109 03:10:36.903"/>
</kw>
<msg timestamp="20230109 03:10:36.904" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230109 03:10:36.889" endtime="20230109 03:10:36.904"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230109 03:10:36.905" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230109 03:10:36.904" endtime="20230109 03:10:36.905"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:10:36.911" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:10:36.963" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:10:36.963" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230109 03:10:36.909" endtime="20230109 03:10:36.963"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:10:36.965" level="INFO"/>
<status status="PASS" starttime="20230109 03:10:36.964" endtime="20230109 03:10:36.965"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:10:36.966" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:10:36.965" endtime="20230109 03:10:36.966"/>
</kw>
<status status="PASS" starttime="20230109 03:10:36.908" endtime="20230109 03:10:36.966"/>
</kw>
<msg timestamp="20230109 03:10:36.966" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:10:36.907" endtime="20230109 03:10:36.967"/>
</kw>
<status status="PASS" starttime="20230109 03:10:36.906" endtime="20230109 03:10:36.967"/>
</kw>
<status status="PASS" starttime="20230109 03:10:36.905" endtime="20230109 03:10:36.967"/>
</kw>
<status status="PASS" starttime="20230109 03:10:36.887" endtime="20230109 03:10:36.968"/>
</kw>
<status status="PASS" starttime="20230109 03:10:36.885" endtime="20230109 03:10:36.968"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl user:user1:rwxy ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:10:36.974" level="INFO">Running command 'ozone sh bucket addacl --acl user:user1:rwxy 93750-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:10:43.356" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:10:43.356" level="INFO">${output} = ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20230109 03:10:36.970" endtime="20230109 03:10:43.356"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:10:43.359" level="INFO">ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20230109 03:10:43.357" endtime="20230109 03:10:43.359"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:10:43.360" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:10:43.359" endtime="20230109 03:10:43.360"/>
</kw>
<status status="PASS" starttime="20230109 03:10:36.969" endtime="20230109 03:10:43.361"/>
</kw>
<msg timestamp="20230109 03:10:43.361" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:10:36.969" endtime="20230109 03:10:43.362"/>
</kw>
<status status="PASS" starttime="20230109 03:10:36.968" endtime="20230109 03:10:43.362"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE READ_ACL WRITE_ACL</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:10:43.369" level="INFO">Running command 'ozone sh bucket getacl 93750-target/link1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:10:49.980" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:10:49.980" level="INFO">${output} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20230109 03:10:43.365" endtime="20230109 03:10:49.980"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:10:49.982" level="INFO">READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20230109 03:10:49.981" endtime="20230109 03:10:49.982"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:10:49.983" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:10:49.982" endtime="20230109 03:10:49.983"/>
</kw>
<status status="PASS" starttime="20230109 03:10:43.365" endtime="20230109 03:10:49.984"/>
</kw>
<msg timestamp="20230109 03:10:49.984" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:10:43.364" endtime="20230109 03:10:49.984"/>
</kw>
<msg timestamp="20230109 03:10:49.985" level="INFO">${actual_acls} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20230109 03:10:43.363" endtime="20230109 03:10:49.985"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230109 03:10:49.985" endtime="20230109 03:10:49.986"/>
</kw>
<status status="PASS" starttime="20230109 03:10:43.362" endtime="20230109 03:10:49.986"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>${EMPTY}</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:10:49.994" level="INFO">Running command 'ozone sh bucket getacl 93750-source/bucket1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:10:56.374" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:10:56.374" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230109 03:10:49.991" endtime="20230109 03:10:56.374"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:10:56.377" level="INFO"/>
<status status="PASS" starttime="20230109 03:10:56.375" endtime="20230109 03:10:56.377"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:10:56.378" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:10:56.377" endtime="20230109 03:10:56.378"/>
</kw>
<status status="PASS" starttime="20230109 03:10:49.990" endtime="20230109 03:10:56.379"/>
</kw>
<msg timestamp="20230109 03:10:56.379" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:10:49.990" endtime="20230109 03:10:56.380"/>
</kw>
<msg timestamp="20230109 03:10:56.380" level="INFO">${actual_acls} = </msg>
<status status="PASS" starttime="20230109 03:10:49.989" endtime="20230109 03:10:56.380"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230109 03:10:56.380" endtime="20230109 03:10:56.381"/>
</kw>
<status status="PASS" starttime="20230109 03:10:49.987" endtime="20230109 03:10:56.381"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl group:group2:r ${source}/bucket1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:10:56.387" level="INFO">Running command 'ozone sh bucket addacl --acl group:group2:r 93750-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:11:02.705" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:11:02.705" level="INFO">${output} = ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20230109 03:10:56.384" endtime="20230109 03:11:02.705"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:11:02.707" level="INFO">ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20230109 03:11:02.705" endtime="20230109 03:11:02.707"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:11:02.708" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:11:02.707" endtime="20230109 03:11:02.708"/>
</kw>
<status status="PASS" starttime="20230109 03:10:56.383" endtime="20230109 03:11:02.708"/>
</kw>
<msg timestamp="20230109 03:11:02.708" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:10:56.382" endtime="20230109 03:11:02.709"/>
</kw>
<status status="PASS" starttime="20230109 03:10:56.381" endtime="20230109 03:11:02.710"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>${EMPTY}</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:11:02.718" level="INFO">Running command 'ozone sh bucket getacl 93750-target/link1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:11:09.281" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:11:09.281" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230109 03:11:02.716" endtime="20230109 03:11:09.281"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:11:09.284" level="INFO"/>
<status status="PASS" starttime="20230109 03:11:09.283" endtime="20230109 03:11:09.284"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:11:09.285" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:11:09.284" endtime="20230109 03:11:09.285"/>
</kw>
<status status="PASS" starttime="20230109 03:11:02.715" endtime="20230109 03:11:09.286"/>
</kw>
<msg timestamp="20230109 03:11:09.286" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:11:02.714" endtime="20230109 03:11:09.287"/>
</kw>
<msg timestamp="20230109 03:11:09.287" level="INFO">${actual_acls} = </msg>
<status status="PASS" starttime="20230109 03:11:02.713" endtime="20230109 03:11:09.287"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230109 03:11:09.287" endtime="20230109 03:11:09.288"/>
</kw>
<status status="PASS" starttime="20230109 03:11:02.710" endtime="20230109 03:11:09.288"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>READ</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:11:09.296" level="INFO">Running command 'ozone sh bucket getacl 93750-source/bucket1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:11:15.458" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:11:15.458" level="INFO">${output} = READ</msg>
<status status="PASS" starttime="20230109 03:11:09.292" endtime="20230109 03:11:15.458"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:11:15.460" level="INFO">READ</msg>
<status status="PASS" starttime="20230109 03:11:15.459" endtime="20230109 03:11:15.460"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:11:15.461" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:11:15.460" endtime="20230109 03:11:15.461"/>
</kw>
<status status="PASS" starttime="20230109 03:11:09.291" endtime="20230109 03:11:15.462"/>
</kw>
<msg timestamp="20230109 03:11:15.462" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:11:09.290" endtime="20230109 03:11:15.462"/>
</kw>
<msg timestamp="20230109 03:11:15.463" level="INFO">${actual_acls} = READ</msg>
<status status="PASS" starttime="20230109 03:11:09.289" endtime="20230109 03:11:15.463"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230109 03:11:15.463" endtime="20230109 03:11:15.464"/>
</kw>
<status status="PASS" starttime="20230109 03:11:09.288" endtime="20230109 03:11:15.464"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20230109 03:10:36.884" endtime="20230109 03:11:15.464"/>
</test>
<test id="s1-s1-s3-t9" name="Buckets and links share namespace" line="124">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:11:15.477" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:11:15.483" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:11:15.483" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230109 03:11:15.472" endtime="20230109 03:11:15.483"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:11:15.485" level="INFO">scm</msg>
<status status="PASS" starttime="20230109 03:11:15.484" endtime="20230109 03:11:15.485"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:11:15.486" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:11:15.485" endtime="20230109 03:11:15.486"/>
</kw>
<status status="PASS" starttime="20230109 03:11:15.471" endtime="20230109 03:11:15.486"/>
</kw>
<msg timestamp="20230109 03:11:15.487" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:11:15.470" endtime="20230109 03:11:15.487"/>
</kw>
<msg timestamp="20230109 03:11:15.488" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230109 03:11:15.470" endtime="20230109 03:11:15.488"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230109 03:11:15.489" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230109 03:11:15.489" endtime="20230109 03:11:15.490"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:11:15.497" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:11:15.590" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:11:15.591" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230109 03:11:15.494" endtime="20230109 03:11:15.591"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:11:15.593" level="INFO"/>
<status status="PASS" starttime="20230109 03:11:15.592" endtime="20230109 03:11:15.593"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:11:15.594" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:11:15.594" endtime="20230109 03:11:15.595"/>
</kw>
<status status="PASS" starttime="20230109 03:11:15.493" endtime="20230109 03:11:15.595"/>
</kw>
<msg timestamp="20230109 03:11:15.595" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:11:15.492" endtime="20230109 03:11:15.596"/>
</kw>
<status status="PASS" starttime="20230109 03:11:15.491" endtime="20230109 03:11:15.597"/>
</kw>
<status status="PASS" starttime="20230109 03:11:15.490" endtime="20230109 03:11:15.597"/>
</kw>
<status status="PASS" starttime="20230109 03:11:15.469" endtime="20230109 03:11:15.597"/>
</kw>
<status status="PASS" starttime="20230109 03:11:15.468" endtime="20230109 03:11:15.597"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/bucket2 ${target}/link2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:11:15.603" level="INFO">Running command 'ozone sh bucket link 93750-source/bucket2 93750-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:11:21.688" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:11:21.688" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230109 03:11:15.600" endtime="20230109 03:11:21.688"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:11:21.690" level="INFO"/>
<status status="PASS" starttime="20230109 03:11:21.689" endtime="20230109 03:11:21.690"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:11:21.692" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:11:21.691" endtime="20230109 03:11:21.692"/>
</kw>
<status status="PASS" starttime="20230109 03:11:15.599" endtime="20230109 03:11:21.692"/>
</kw>
<msg timestamp="20230109 03:11:21.692" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:11:15.598" endtime="20230109 03:11:21.693"/>
</kw>
<status status="PASS" starttime="20230109 03:11:15.598" endtime="20230109 03:11:21.693"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh bucket create ${target}/link2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:11:21.697" level="INFO">Running command 'ozone sh bucket create 93750-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:11:27.892" level="INFO">${rc} = 255</msg>
<msg timestamp="20230109 03:11:27.892" level="INFO">${output} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20230109 03:11:21.694" endtime="20230109 03:11:27.892"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:11:27.894" level="INFO">BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20230109 03:11:27.893" endtime="20230109 03:11:27.894"/>
</kw>
<msg timestamp="20230109 03:11:27.894" level="INFO">${result} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20230109 03:11:21.694" endtime="20230109 03:11:27.895"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230109 03:11:27.895" endtime="20230109 03:11:27.895"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${target}/bucket3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:11:27.900" level="INFO">Running command 'ozone sh bucket create 93750-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:11:33.625" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:11:33.625" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230109 03:11:27.897" endtime="20230109 03:11:33.625"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:11:33.627" level="INFO"/>
<status status="PASS" starttime="20230109 03:11:33.626" endtime="20230109 03:11:33.627"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:11:33.628" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:11:33.627" endtime="20230109 03:11:33.628"/>
</kw>
<status status="PASS" starttime="20230109 03:11:27.897" endtime="20230109 03:11:33.628"/>
</kw>
<msg timestamp="20230109 03:11:33.628" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:11:27.896" endtime="20230109 03:11:33.629"/>
</kw>
<status status="PASS" starttime="20230109 03:11:27.896" endtime="20230109 03:11:33.629"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/bucket3</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:11:33.633" level="INFO">Running command 'ozone sh bucket link 93750-source/bucket1 93750-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:11:39.422" level="INFO">${rc} = 255</msg>
<msg timestamp="20230109 03:11:39.422" level="INFO">${output} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20230109 03:11:33.630" endtime="20230109 03:11:39.422"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:11:39.424" level="INFO">BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20230109 03:11:39.423" endtime="20230109 03:11:39.424"/>
</kw>
<msg timestamp="20230109 03:11:39.425" level="INFO">${result} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20230109 03:11:33.629" endtime="20230109 03:11:39.425"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230109 03:11:39.425" endtime="20230109 03:11:39.426"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20230109 03:11:15.466" endtime="20230109 03:11:39.427"/>
</test>
<test id="s1-s1-s3-t10" name="Can follow link with read access" line="133">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:11:39.436" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:11:39.441" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:11:39.441" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230109 03:11:39.433" endtime="20230109 03:11:39.441"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:11:39.443" level="INFO">scm</msg>
<status status="PASS" starttime="20230109 03:11:39.442" endtime="20230109 03:11:39.443"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:11:39.444" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:11:39.443" endtime="20230109 03:11:39.444"/>
</kw>
<status status="PASS" starttime="20230109 03:11:39.433" endtime="20230109 03:11:39.445"/>
</kw>
<msg timestamp="20230109 03:11:39.445" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:11:39.432" endtime="20230109 03:11:39.448"/>
</kw>
<msg timestamp="20230109 03:11:39.449" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230109 03:11:39.432" endtime="20230109 03:11:39.449"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230109 03:11:39.450" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230109 03:11:39.449" endtime="20230109 03:11:39.450"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:11:39.455" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:11:39.572" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:11:39.572" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230109 03:11:39.452" endtime="20230109 03:11:39.572"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:11:39.574" level="INFO"/>
<status status="PASS" starttime="20230109 03:11:39.573" endtime="20230109 03:11:39.574"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:11:39.575" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:11:39.574" endtime="20230109 03:11:39.575"/>
</kw>
<status status="PASS" starttime="20230109 03:11:39.452" endtime="20230109 03:11:39.575"/>
</kw>
<msg timestamp="20230109 03:11:39.576" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:11:39.451" endtime="20230109 03:11:39.576"/>
</kw>
<status status="PASS" starttime="20230109 03:11:39.450" endtime="20230109 03:11:39.576"/>
</kw>
<status status="PASS" starttime="20230109 03:11:39.450" endtime="20230109 03:11:39.577"/>
</kw>
<status status="PASS" starttime="20230109 03:11:39.431" endtime="20230109 03:11:39.577"/>
</kw>
<status status="PASS" starttime="20230109 03:11:39.430" endtime="20230109 03:11:39.577"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Can follow link with read access</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Can follow link with read access">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:11:39.583" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:11:39.588" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:11:39.588" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230109 03:11:39.580" endtime="20230109 03:11:39.588"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:11:39.590" level="INFO"/>
<status status="PASS" starttime="20230109 03:11:39.589" endtime="20230109 03:11:39.590"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:11:39.591" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:11:39.590" endtime="20230109 03:11:39.591"/>
</kw>
<status status="PASS" starttime="20230109 03:11:39.579" endtime="20230109 03:11:39.591"/>
</kw>
<msg timestamp="20230109 03:11:39.592" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:11:39.579" endtime="20230109 03:11:39.592"/>
</kw>
<status status="PASS" starttime="20230109 03:11:39.578" endtime="20230109 03:11:39.593"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:11:39.602" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:11:39.608" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:11:39.608" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230109 03:11:39.599" endtime="20230109 03:11:39.608"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:11:39.609" level="INFO">scm</msg>
<status status="PASS" starttime="20230109 03:11:39.608" endtime="20230109 03:11:39.609"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:11:39.610" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:11:39.609" endtime="20230109 03:11:39.610"/>
</kw>
<status status="PASS" starttime="20230109 03:11:39.597" endtime="20230109 03:11:39.611"/>
</kw>
<msg timestamp="20230109 03:11:39.611" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:11:39.596" endtime="20230109 03:11:39.612"/>
</kw>
<msg timestamp="20230109 03:11:39.612" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230109 03:11:39.595" endtime="20230109 03:11:39.612"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230109 03:11:39.613" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230109 03:11:39.612" endtime="20230109 03:11:39.613"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:11:39.620" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:11:39.708" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:11:39.708" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230109 03:11:39.617" endtime="20230109 03:11:39.708"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:11:39.709" level="INFO"/>
<status status="PASS" starttime="20230109 03:11:39.708" endtime="20230109 03:11:39.710"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:11:39.710" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:11:39.710" endtime="20230109 03:11:39.711"/>
</kw>
<status status="PASS" starttime="20230109 03:11:39.616" endtime="20230109 03:11:39.711"/>
</kw>
<msg timestamp="20230109 03:11:39.711" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:11:39.615" endtime="20230109 03:11:39.712"/>
</kw>
<status status="PASS" starttime="20230109 03:11:39.614" endtime="20230109 03:11:39.712"/>
</kw>
<status status="PASS" starttime="20230109 03:11:39.614" endtime="20230109 03:11:39.712"/>
</kw>
<status status="PASS" starttime="20230109 03:11:39.594" endtime="20230109 03:11:39.712"/>
</kw>
<status status="PASS" starttime="20230109 03:11:39.593" endtime="20230109 03:11:39.713"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/readable-link</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:11:39.716" level="INFO">Running command 'ozone sh key list 93750-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:11:45.981" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:11:45.982" level="INFO">${output} = [ {
  "volumeName" : "93750-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 946,
  "creationTime" : "2023-01-09T03:07:52.058Z",
  "modificationTime" : ...</msg>
<status status="PASS" starttime="20230109 03:11:39.713" endtime="20230109 03:11:45.982"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:11:45.984" level="INFO">[ {
  "volumeName" : "93750-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 946,
  "creationTime" : "2023-01-09T03:07:52.058Z",
  "modificationTime" : "2023-01-09T03:07:55.442Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "replicationType" : "RATIS"
  },
  "metadata" : { }
} ]</msg>
<status status="PASS" starttime="20230109 03:11:45.983" endtime="20230109 03:11:45.984"/>
</kw>
<msg timestamp="20230109 03:11:45.984" level="INFO">${result} = [ {
  "volumeName" : "93750-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 946,
  "creationTime" : "2023-01-09T03:07:52.058Z",
  "modificationTime" : ...</msg>
<status status="PASS" starttime="20230109 03:11:39.713" endtime="20230109 03:11:45.985"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>key-in-readable-bucket</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230109 03:11:45.985" endtime="20230109 03:11:45.986"/>
</kw>
<status status="PASS" starttime="20230109 03:11:39.578" endtime="20230109 03:11:45.986"/>
</kw>
<status status="PASS" starttime="20230109 03:11:39.577" endtime="20230109 03:11:45.986"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20230109 03:11:39.429" endtime="20230109 03:11:45.986"/>
</test>
<test id="s1-s1-s3-t11" name="Cannot follow link without read access" line="136">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:11:45.996" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:11:46.001" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:11:46.001" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230109 03:11:45.993" endtime="20230109 03:11:46.001"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:11:46.003" level="INFO">scm</msg>
<status status="PASS" starttime="20230109 03:11:46.002" endtime="20230109 03:11:46.003"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:11:46.004" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:11:46.003" endtime="20230109 03:11:46.004"/>
</kw>
<status status="PASS" starttime="20230109 03:11:45.992" endtime="20230109 03:11:46.005"/>
</kw>
<msg timestamp="20230109 03:11:46.005" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:11:45.992" endtime="20230109 03:11:46.006"/>
</kw>
<msg timestamp="20230109 03:11:46.006" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230109 03:11:45.991" endtime="20230109 03:11:46.006"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230109 03:11:46.007" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230109 03:11:46.006" endtime="20230109 03:11:46.007"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:11:46.014" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:11:46.078" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:11:46.078" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230109 03:11:46.011" endtime="20230109 03:11:46.078"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:11:46.080" level="INFO"/>
<status status="PASS" starttime="20230109 03:11:46.079" endtime="20230109 03:11:46.080"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:11:46.081" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:11:46.080" endtime="20230109 03:11:46.081"/>
</kw>
<status status="PASS" starttime="20230109 03:11:46.010" endtime="20230109 03:11:46.082"/>
</kw>
<msg timestamp="20230109 03:11:46.082" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:11:46.010" endtime="20230109 03:11:46.083"/>
</kw>
<status status="PASS" starttime="20230109 03:11:46.008" endtime="20230109 03:11:46.084"/>
</kw>
<status status="PASS" starttime="20230109 03:11:46.008" endtime="20230109 03:11:46.084"/>
</kw>
<status status="PASS" starttime="20230109 03:11:45.990" endtime="20230109 03:11:46.084"/>
</kw>
<status status="PASS" starttime="20230109 03:11:45.989" endtime="20230109 03:11:46.084"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Cannot follow link without read access</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Cannot follow link without read access">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:11:46.091" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:11:46.096" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:11:46.096" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230109 03:11:46.088" endtime="20230109 03:11:46.096"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:11:46.098" level="INFO"/>
<status status="PASS" starttime="20230109 03:11:46.097" endtime="20230109 03:11:46.098"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:11:46.099" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:11:46.098" endtime="20230109 03:11:46.099"/>
</kw>
<status status="PASS" starttime="20230109 03:11:46.087" endtime="20230109 03:11:46.099"/>
</kw>
<msg timestamp="20230109 03:11:46.100" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:11:46.086" endtime="20230109 03:11:46.100"/>
</kw>
<status status="PASS" starttime="20230109 03:11:46.086" endtime="20230109 03:11:46.101"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:11:46.107" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:11:46.112" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:11:46.112" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230109 03:11:46.104" endtime="20230109 03:11:46.112"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:11:46.113" level="INFO">scm</msg>
<status status="PASS" starttime="20230109 03:11:46.113" endtime="20230109 03:11:46.114"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:11:46.114" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:11:46.114" endtime="20230109 03:11:46.114"/>
</kw>
<status status="PASS" starttime="20230109 03:11:46.103" endtime="20230109 03:11:46.115"/>
</kw>
<msg timestamp="20230109 03:11:46.115" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:11:46.103" endtime="20230109 03:11:46.116"/>
</kw>
<msg timestamp="20230109 03:11:46.116" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230109 03:11:46.102" endtime="20230109 03:11:46.116"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230109 03:11:46.117" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230109 03:11:46.116" endtime="20230109 03:11:46.117"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:11:46.125" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:11:46.283" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:11:46.283" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230109 03:11:46.122" endtime="20230109 03:11:46.283"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:11:46.284" level="INFO"/>
<status status="PASS" starttime="20230109 03:11:46.283" endtime="20230109 03:11:46.285"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:11:46.286" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:11:46.285" endtime="20230109 03:11:46.286"/>
</kw>
<status status="PASS" starttime="20230109 03:11:46.120" endtime="20230109 03:11:46.287"/>
</kw>
<msg timestamp="20230109 03:11:46.287" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:11:46.119" endtime="20230109 03:11:46.288"/>
</kw>
<status status="PASS" starttime="20230109 03:11:46.118" endtime="20230109 03:11:46.288"/>
</kw>
<status status="PASS" starttime="20230109 03:11:46.117" endtime="20230109 03:11:46.288"/>
</kw>
<status status="PASS" starttime="20230109 03:11:46.101" endtime="20230109 03:11:46.289"/>
</kw>
<status status="PASS" starttime="20230109 03:11:46.101" endtime="20230109 03:11:46.289"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/unreadable-link</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:11:46.293" level="INFO">Running command 'ozone sh key list 93750-target/unreadable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:11:52.539" level="INFO">${rc} = 255</msg>
<msg timestamp="20230109 03:11:52.539" level="INFO">${output} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket Volume:93750-target Bucket:unreadable-link </msg>
<status status="PASS" starttime="20230109 03:11:46.290" endtime="20230109 03:11:52.539"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:11:52.541" level="INFO">PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket Volume:93750-target Bucket:unreadable-link </msg>
<status status="PASS" starttime="20230109 03:11:52.540" endtime="20230109 03:11:52.541"/>
</kw>
<msg timestamp="20230109 03:11:52.542" level="INFO">${result} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket Volume:93750-target Bucket:unreadable-link </msg>
<status status="PASS" starttime="20230109 03:11:46.289" endtime="20230109 03:11:52.542"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230109 03:11:52.542" endtime="20230109 03:11:52.543"/>
</kw>
<status status="PASS" starttime="20230109 03:11:46.085" endtime="20230109 03:11:52.543"/>
</kw>
<status status="PASS" starttime="20230109 03:11:46.084" endtime="20230109 03:11:52.543"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20230109 03:11:45.988" endtime="20230109 03:11:52.544"/>
</test>
<test id="s1-s1-s3-t12" name="ACL verified on source bucket" line="139">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:11:52.553" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:11:52.559" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:11:52.559" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230109 03:11:52.550" endtime="20230109 03:11:52.559"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:11:52.561" level="INFO">scm</msg>
<status status="PASS" starttime="20230109 03:11:52.560" endtime="20230109 03:11:52.561"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:11:52.562" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:11:52.561" endtime="20230109 03:11:52.562"/>
</kw>
<status status="PASS" starttime="20230109 03:11:52.549" endtime="20230109 03:11:52.562"/>
</kw>
<msg timestamp="20230109 03:11:52.563" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:11:52.549" endtime="20230109 03:11:52.563"/>
</kw>
<msg timestamp="20230109 03:11:52.564" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230109 03:11:52.548" endtime="20230109 03:11:52.564"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230109 03:11:52.565" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230109 03:11:52.564" endtime="20230109 03:11:52.565"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:11:52.570" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:11:52.783" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:11:52.783" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230109 03:11:52.567" endtime="20230109 03:11:52.783"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:11:52.787" level="INFO"/>
<status status="PASS" starttime="20230109 03:11:52.786" endtime="20230109 03:11:52.791"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:11:52.795" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:11:52.791" endtime="20230109 03:11:52.795"/>
</kw>
<status status="PASS" starttime="20230109 03:11:52.566" endtime="20230109 03:11:52.796"/>
</kw>
<msg timestamp="20230109 03:11:52.796" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:11:52.566" endtime="20230109 03:11:52.799"/>
</kw>
<status status="PASS" starttime="20230109 03:11:52.565" endtime="20230109 03:11:52.802"/>
</kw>
<status status="PASS" starttime="20230109 03:11:52.565" endtime="20230109 03:11:52.802"/>
</kw>
<status status="PASS" starttime="20230109 03:11:52.547" endtime="20230109 03:11:52.802"/>
</kw>
<status status="PASS" starttime="20230109 03:11:52.546" endtime="20230109 03:11:52.803"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>ACL verified on source bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="ACL verified on source bucket">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:11:52.811" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:11:52.816" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:11:52.816" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230109 03:11:52.807" endtime="20230109 03:11:52.817"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:11:52.818" level="INFO"/>
<status status="PASS" starttime="20230109 03:11:52.817" endtime="20230109 03:11:52.818"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:11:52.819" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:11:52.819" endtime="20230109 03:11:52.820"/>
</kw>
<status status="PASS" starttime="20230109 03:11:52.806" endtime="20230109 03:11:52.820"/>
</kw>
<msg timestamp="20230109 03:11:52.820" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:11:52.805" endtime="20230109 03:11:52.821"/>
</kw>
<status status="PASS" starttime="20230109 03:11:52.804" endtime="20230109 03:11:52.821"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:11:52.830" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:11:52.837" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:11:52.837" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230109 03:11:52.825" endtime="20230109 03:11:52.837"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:11:52.839" level="INFO">scm</msg>
<status status="PASS" starttime="20230109 03:11:52.837" endtime="20230109 03:11:52.839"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:11:52.841" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:11:52.840" endtime="20230109 03:11:52.841"/>
</kw>
<status status="PASS" starttime="20230109 03:11:52.824" endtime="20230109 03:11:52.841"/>
</kw>
<msg timestamp="20230109 03:11:52.842" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:11:52.824" endtime="20230109 03:11:52.842"/>
</kw>
<msg timestamp="20230109 03:11:52.847" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230109 03:11:52.823" endtime="20230109 03:11:52.847"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230109 03:11:52.850" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230109 03:11:52.848" endtime="20230109 03:11:52.850"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:11:52.859" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:11:52.976" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:11:52.976" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230109 03:11:52.855" endtime="20230109 03:11:52.976"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:11:52.978" level="INFO"/>
<status status="PASS" starttime="20230109 03:11:52.977" endtime="20230109 03:11:52.978"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:11:52.979" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:11:52.978" endtime="20230109 03:11:52.979"/>
</kw>
<status status="PASS" starttime="20230109 03:11:52.854" endtime="20230109 03:11:52.980"/>
</kw>
<msg timestamp="20230109 03:11:52.980" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:11:52.853" endtime="20230109 03:11:52.981"/>
</kw>
<status status="PASS" starttime="20230109 03:11:52.852" endtime="20230109 03:11:52.981"/>
</kw>
<status status="PASS" starttime="20230109 03:11:52.851" endtime="20230109 03:11:52.981"/>
</kw>
<status status="PASS" starttime="20230109 03:11:52.822" endtime="20230109 03:11:52.981"/>
</kw>
<status status="PASS" starttime="20230109 03:11:52.821" endtime="20230109 03:11:52.981"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${target}/link-to-unreadable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:11:52.986" level="INFO">Running command 'ozone sh bucket info 93750-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:11:59.322" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:11:59.322" level="INFO">${output} = {
  "volumeName" : "93750-target",
  "bucketName" : "link-to-unreadable-bucket",
  "sourceVolume" : "93750-source",
  "sourceBucket" : "unreadable-bucket",
  "creationTime" : "2023-01-09T03:08:20.775Z...</msg>
<status status="PASS" starttime="20230109 03:11:52.983" endtime="20230109 03:11:59.323"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:11:59.325" level="INFO">{
  "volumeName" : "93750-target",
  "bucketName" : "link-to-unreadable-bucket",
  "sourceVolume" : "93750-source",
  "sourceBucket" : "unreadable-bucket",
  "creationTime" : "2023-01-09T03:08:20.775Z",
  "modificationTime" : "2023-01-09T03:08:51.551Z",
  "owner" : "testuser"
}</msg>
<status status="PASS" starttime="20230109 03:11:59.324" endtime="20230109 03:11:59.325"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:11:59.326" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:11:59.325" endtime="20230109 03:11:59.326"/>
</kw>
<status status="PASS" starttime="20230109 03:11:52.983" endtime="20230109 03:11:59.327"/>
</kw>
<msg timestamp="20230109 03:11:59.327" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:11:52.982" endtime="20230109 03:11:59.328"/>
</kw>
<msg timestamp="20230109 03:11:59.328" level="INFO">${result} = {
  "volumeName" : "93750-target",
  "bucketName" : "link-to-unreadable-bucket",
  "sourceVolume" : "93750-source",
  "sourceBucket" : "unreadable-bucket",
  "creationTime" : "2023-01-09T03:08:20.775Z...</msg>
<status status="PASS" starttime="20230109 03:11:52.982" endtime="20230109 03:11:59.328"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>link-to-unreadable-bucket</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230109 03:11:59.328" endtime="20230109 03:11:59.329"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230109 03:11:59.329" endtime="20230109 03:11:59.330"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/link-to-unreadable-bucket</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:11:59.334" level="INFO">Running command 'ozone sh key list 93750-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:12:04.886" level="INFO">${rc} = 255</msg>
<msg timestamp="20230109 03:12:04.886" level="INFO">${output} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket Volume:93750-source Bucket:unreadable-bucket Key:</msg>
<status status="PASS" starttime="20230109 03:11:59.331" endtime="20230109 03:12:04.886"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:12:04.888" level="INFO">PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket Volume:93750-source Bucket:unreadable-bucket Key:</msg>
<status status="PASS" starttime="20230109 03:12:04.887" endtime="20230109 03:12:04.888"/>
</kw>
<msg timestamp="20230109 03:12:04.889" level="INFO">${result} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket Volume:93750-source Bucket:unreadable-bucket Key:</msg>
<status status="PASS" starttime="20230109 03:11:59.330" endtime="20230109 03:12:04.889"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230109 03:12:04.889" endtime="20230109 03:12:04.890"/>
</kw>
<status status="PASS" starttime="20230109 03:11:52.804" endtime="20230109 03:12:04.890"/>
</kw>
<status status="PASS" starttime="20230109 03:11:52.803" endtime="20230109 03:12:04.890"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20230109 03:11:52.545" endtime="20230109 03:12:04.891"/>
</test>
<test id="s1-s1-s3-t13" name="Loop in link chain is detected" line="142">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:12:04.900" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:12:04.904" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:12:04.904" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230109 03:12:04.897" endtime="20230109 03:12:04.904"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:12:04.906" level="INFO">scm</msg>
<status status="PASS" starttime="20230109 03:12:04.905" endtime="20230109 03:12:04.907"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:12:04.908" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:12:04.907" endtime="20230109 03:12:04.908"/>
</kw>
<status status="PASS" starttime="20230109 03:12:04.896" endtime="20230109 03:12:04.908"/>
</kw>
<msg timestamp="20230109 03:12:04.908" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:12:04.896" endtime="20230109 03:12:04.909"/>
</kw>
<msg timestamp="20230109 03:12:04.910" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230109 03:12:04.895" endtime="20230109 03:12:04.910"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230109 03:12:04.911" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230109 03:12:04.910" endtime="20230109 03:12:04.911"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:12:04.918" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:12:05.076" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:12:05.076" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230109 03:12:04.914" endtime="20230109 03:12:05.076"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:12:05.078" level="INFO"/>
<status status="PASS" starttime="20230109 03:12:05.077" endtime="20230109 03:12:05.078"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:12:05.079" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:12:05.078" endtime="20230109 03:12:05.079"/>
</kw>
<status status="PASS" starttime="20230109 03:12:04.913" endtime="20230109 03:12:05.079"/>
</kw>
<msg timestamp="20230109 03:12:05.079" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:12:04.913" endtime="20230109 03:12:05.080"/>
</kw>
<status status="PASS" starttime="20230109 03:12:04.912" endtime="20230109 03:12:05.081"/>
</kw>
<status status="PASS" starttime="20230109 03:12:04.911" endtime="20230109 03:12:05.081"/>
</kw>
<status status="PASS" starttime="20230109 03:12:04.894" endtime="20230109 03:12:05.081"/>
</kw>
<status status="PASS" starttime="20230109 03:12:04.893" endtime="20230109 03:12:05.081"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${target}/loop1 ${target}/loop2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:12:05.086" level="INFO">Running command 'ozone sh bucket link 93750-target/loop1 93750-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:12:11.363" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:12:11.363" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230109 03:12:05.083" endtime="20230109 03:12:11.363"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:12:11.366" level="INFO"/>
<status status="PASS" starttime="20230109 03:12:11.364" endtime="20230109 03:12:11.366"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:12:11.366" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:12:11.366" endtime="20230109 03:12:11.367"/>
</kw>
<status status="PASS" starttime="20230109 03:12:05.083" endtime="20230109 03:12:11.367"/>
</kw>
<msg timestamp="20230109 03:12:11.367" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:12:05.082" endtime="20230109 03:12:11.368"/>
</kw>
<status status="PASS" starttime="20230109 03:12:05.081" endtime="20230109 03:12:11.368"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${target}/loop2 ${target}/loop3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:12:11.374" level="INFO">Running command 'ozone sh bucket link 93750-target/loop2 93750-target/loop3 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:12:17.177" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:12:17.177" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230109 03:12:11.371" endtime="20230109 03:12:17.178"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:12:17.179" level="INFO"/>
<status status="PASS" starttime="20230109 03:12:17.178" endtime="20230109 03:12:17.180"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:12:17.181" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:12:17.180" endtime="20230109 03:12:17.181"/>
</kw>
<status status="PASS" starttime="20230109 03:12:11.370" endtime="20230109 03:12:17.182"/>
</kw>
<msg timestamp="20230109 03:12:17.182" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:12:11.369" endtime="20230109 03:12:17.182"/>
</kw>
<status status="PASS" starttime="20230109 03:12:11.368" endtime="20230109 03:12:17.183"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${target}/loop3 ${target}/loop1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:12:17.189" level="INFO">Running command 'ozone sh bucket link 93750-target/loop3 93750-target/loop1 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:12:22.891" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:12:22.891" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230109 03:12:17.186" endtime="20230109 03:12:22.891"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:12:22.893" level="INFO"/>
<status status="PASS" starttime="20230109 03:12:22.892" endtime="20230109 03:12:22.893"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:12:22.894" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:12:22.893" endtime="20230109 03:12:22.894"/>
</kw>
<status status="PASS" starttime="20230109 03:12:17.185" endtime="20230109 03:12:22.895"/>
</kw>
<msg timestamp="20230109 03:12:22.895" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:12:17.184" endtime="20230109 03:12:22.895"/>
</kw>
<status status="PASS" starttime="20230109 03:12:17.183" endtime="20230109 03:12:22.896"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/loop2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:12:22.903" level="INFO">Running command 'ozone sh key list 93750-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:12:28.892" level="INFO">${rc} = 255</msg>
<msg timestamp="20230109 03:12:28.892" level="INFO">${output} = DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links. Bucket name: loop2, Volume name: 93750-target</msg>
<status status="PASS" starttime="20230109 03:12:22.898" endtime="20230109 03:12:28.892"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:12:28.894" level="INFO">DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links. Bucket name: loop2, Volume name: 93750-target</msg>
<status status="PASS" starttime="20230109 03:12:28.893" endtime="20230109 03:12:28.894"/>
</kw>
<msg timestamp="20230109 03:12:28.895" level="INFO">${result} = DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links. Bucket name: loop2, Volume name: 93750-target</msg>
<status status="PASS" starttime="20230109 03:12:22.896" endtime="20230109 03:12:28.895"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>DETECTED_LOOP</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230109 03:12:28.895" endtime="20230109 03:12:28.896"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20230109 03:12:04.892" endtime="20230109 03:12:28.896"/>
</test>
<test id="s1-s1-s3-t14" name="Multiple links to same bucket are allowed" line="149">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:12:28.906" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:12:28.910" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:12:28.911" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230109 03:12:28.903" endtime="20230109 03:12:28.911"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:12:28.912" level="INFO">scm</msg>
<status status="PASS" starttime="20230109 03:12:28.911" endtime="20230109 03:12:28.912"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:12:28.913" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:12:28.912" endtime="20230109 03:12:28.913"/>
</kw>
<status status="PASS" starttime="20230109 03:12:28.902" endtime="20230109 03:12:28.914"/>
</kw>
<msg timestamp="20230109 03:12:28.914" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:12:28.902" endtime="20230109 03:12:28.914"/>
</kw>
<msg timestamp="20230109 03:12:28.915" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230109 03:12:28.901" endtime="20230109 03:12:28.915"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230109 03:12:28.916" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230109 03:12:28.915" endtime="20230109 03:12:28.916"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:12:28.922" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:12:28.978" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:12:28.978" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230109 03:12:28.919" endtime="20230109 03:12:28.978"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:12:28.979" level="INFO"/>
<status status="PASS" starttime="20230109 03:12:28.979" endtime="20230109 03:12:28.980"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:12:28.980" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:12:28.980" endtime="20230109 03:12:28.980"/>
</kw>
<status status="PASS" starttime="20230109 03:12:28.919" endtime="20230109 03:12:28.981"/>
</kw>
<msg timestamp="20230109 03:12:28.981" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:12:28.918" endtime="20230109 03:12:28.982"/>
</kw>
<status status="PASS" starttime="20230109 03:12:28.917" endtime="20230109 03:12:28.982"/>
</kw>
<status status="PASS" starttime="20230109 03:12:28.916" endtime="20230109 03:12:28.982"/>
</kw>
<status status="PASS" starttime="20230109 03:12:28.900" endtime="20230109 03:12:28.982"/>
</kw>
<status status="PASS" starttime="20230109 03:12:28.899" endtime="20230109 03:12:28.982"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:12:28.991" level="INFO">Running command 'ozone sh bucket link 93750-source/bucket1 93750-target/link3 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:12:34.610" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:12:34.610" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230109 03:12:28.985" endtime="20230109 03:12:34.610"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:12:34.612" level="INFO"/>
<status status="PASS" starttime="20230109 03:12:34.611" endtime="20230109 03:12:34.612"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:12:34.613" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:12:34.612" endtime="20230109 03:12:34.613"/>
</kw>
<status status="PASS" starttime="20230109 03:12:28.984" endtime="20230109 03:12:34.614"/>
</kw>
<msg timestamp="20230109 03:12:34.614" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:12:28.984" endtime="20230109 03:12:34.614"/>
</kw>
<status status="PASS" starttime="20230109 03:12:28.983" endtime="20230109 03:12:34.615"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${target}/link3/key3 /etc/group</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:12:34.620" level="INFO">Running command 'ozone sh key put 93750-target/link3/key3 /etc/group 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:12:43.857" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:12:43.857" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230109 03:12:34.617" endtime="20230109 03:12:43.857"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:12:43.858" level="INFO"/>
<status status="PASS" starttime="20230109 03:12:43.857" endtime="20230109 03:12:43.858"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:12:43.859" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:12:43.859" endtime="20230109 03:12:43.859"/>
</kw>
<status status="PASS" starttime="20230109 03:12:34.616" endtime="20230109 03:12:43.860"/>
</kw>
<msg timestamp="20230109 03:12:43.860" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:12:34.616" endtime="20230109 03:12:43.861"/>
</kw>
<status status="PASS" starttime="20230109 03:12:34.615" endtime="20230109 03:12:43.861"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${target}/link1/key3</arg>
<arg>/etc/group</arg>
<kw name="Compare Key With Local File" library="shell">
<var>${matches}</var>
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230109 03:12:43.864" level="INFO">${postfix} = 59875</msg>
<status status="PASS" starttime="20230109 03:12:43.863" endtime="20230109 03:12:43.864"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${tmpfile}</var>
<arg>/tmp/tempkey-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230109 03:12:43.864" level="INFO">${tmpfile} = /tmp/tempkey-59875</msg>
<status status="PASS" starttime="20230109 03:12:43.864" endtime="20230109 03:12:43.864"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${key} ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:12:43.869" level="INFO">Running command 'ozone sh key get 93750-target/link1/key3 /tmp/tempkey-59875 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:12:53.208" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:12:53.208" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230109 03:12:43.866" endtime="20230109 03:12:53.208"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:12:53.219" level="INFO"/>
<status status="PASS" starttime="20230109 03:12:53.210" endtime="20230109 03:12:53.219"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:12:53.221" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:12:53.220" endtime="20230109 03:12:53.221"/>
</kw>
<status status="PASS" starttime="20230109 03:12:43.866" endtime="20230109 03:12:53.222"/>
</kw>
<msg timestamp="20230109 03:12:53.222" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:12:43.865" endtime="20230109 03:12:53.223"/>
</kw>
<status status="PASS" starttime="20230109 03:12:43.865" endtime="20230109 03:12:53.223"/>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<var>${rc}</var>
<arg>diff -q ${file} ${tmpfile}</arg>
<doc>Runs the given command in the system and returns the return code.</doc>
<msg timestamp="20230109 03:12:53.227" level="INFO">Running command 'diff -q /etc/group /tmp/tempkey-59875 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:12:53.231" level="INFO">${rc} = 0</msg>
<status status="PASS" starttime="20230109 03:12:53.224" endtime="20230109 03:12:53.231"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:12:53.237" level="INFO">Running command 'rm -f /tmp/tempkey-59875 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:12:53.240" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:12:53.240" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230109 03:12:53.234" endtime="20230109 03:12:53.240"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:12:53.242" level="INFO"/>
<status status="PASS" starttime="20230109 03:12:53.241" endtime="20230109 03:12:53.242"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:12:53.243" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:12:53.242" endtime="20230109 03:12:53.243"/>
</kw>
<status status="PASS" starttime="20230109 03:12:53.234" endtime="20230109 03:12:53.244"/>
</kw>
<msg timestamp="20230109 03:12:53.244" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:12:53.233" endtime="20230109 03:12:53.244"/>
</kw>
<status status="PASS" starttime="20230109 03:12:53.232" endtime="20230109 03:12:53.245"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230109 03:12:53.246" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20230109 03:12:53.245" endtime="20230109 03:12:53.246"/>
</kw>
<msg timestamp="20230109 03:12:53.246" level="INFO">${matches} = True</msg>
<status status="PASS" starttime="20230109 03:12:43.862" endtime="20230109 03:12:53.246"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${matches}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230109 03:12:53.246" endtime="20230109 03:12:53.247"/>
</kw>
<status status="PASS" starttime="20230109 03:12:43.861" endtime="20230109 03:12:53.247"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20230109 03:12:28.898" endtime="20230109 03:12:53.248"/>
</test>
<test id="s1-s1-s3-t15" name="Source bucket not affected by deleting link" line="154">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:12:53.258" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:12:53.263" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:12:53.263" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230109 03:12:53.255" endtime="20230109 03:12:53.263"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:12:53.265" level="INFO">scm</msg>
<status status="PASS" starttime="20230109 03:12:53.264" endtime="20230109 03:12:53.265"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:12:53.267" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:12:53.266" endtime="20230109 03:12:53.267"/>
</kw>
<status status="PASS" starttime="20230109 03:12:53.254" endtime="20230109 03:12:53.267"/>
</kw>
<msg timestamp="20230109 03:12:53.267" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:12:53.254" endtime="20230109 03:12:53.268"/>
</kw>
<msg timestamp="20230109 03:12:53.268" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230109 03:12:53.252" endtime="20230109 03:12:53.268"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230109 03:12:53.269" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230109 03:12:53.269" endtime="20230109 03:12:53.269"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:12:53.276" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:12:53.333" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:12:53.333" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230109 03:12:53.273" endtime="20230109 03:12:53.333"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:12:53.335" level="INFO"/>
<status status="PASS" starttime="20230109 03:12:53.334" endtime="20230109 03:12:53.335"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:12:53.336" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:12:53.335" endtime="20230109 03:12:53.336"/>
</kw>
<status status="PASS" starttime="20230109 03:12:53.272" endtime="20230109 03:12:53.336"/>
</kw>
<msg timestamp="20230109 03:12:53.337" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:12:53.272" endtime="20230109 03:12:53.337"/>
</kw>
<status status="PASS" starttime="20230109 03:12:53.270" endtime="20230109 03:12:53.338"/>
</kw>
<status status="PASS" starttime="20230109 03:12:53.270" endtime="20230109 03:12:53.338"/>
</kw>
<status status="PASS" starttime="20230109 03:12:53.251" endtime="20230109 03:12:53.338"/>
</kw>
<status status="PASS" starttime="20230109 03:12:53.251" endtime="20230109 03:12:53.338"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:12:53.344" level="INFO">Running command 'ozone sh bucket delete 93750-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:12:59.094" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:12:59.094" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230109 03:12:53.340" endtime="20230109 03:12:59.094"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:12:59.096" level="INFO"/>
<status status="PASS" starttime="20230109 03:12:59.095" endtime="20230109 03:12:59.096"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:12:59.097" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:12:59.096" endtime="20230109 03:12:59.097"/>
</kw>
<status status="PASS" starttime="20230109 03:12:53.340" endtime="20230109 03:12:59.097"/>
</kw>
<msg timestamp="20230109 03:12:59.097" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:12:53.339" endtime="20230109 03:12:59.098"/>
</kw>
<status status="PASS" starttime="20230109 03:12:53.338" endtime="20230109 03:12:59.098"/>
</kw>
<kw name="Execute" library="os">
<var>${bucket_list}</var>
<arg>ozone sh bucket list ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:12:59.104" level="INFO">Running command 'ozone sh bucket list 93750-target 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:13:05.208" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:13:05.208" level="INFO">${output} = [ {
  "metadata" : { },
  "volumeName" : "93750-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2023-01-0...</msg>
<status status="PASS" starttime="20230109 03:12:59.101" endtime="20230109 03:13:05.208"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:13:05.210" level="INFO">[ {
  "metadata" : { },
  "volumeName" : "93750-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2023-01-09T03:11:33.448Z",
  "modificationTime" : "2023-01-09T03:11:33.448Z",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY",
  "owner" : "testuser",
  "link" : false
}, {
  "volumeName" : "93750-target",
  "bucketName" : "dangling-link",
  "sourceVolume" : "93750-source",
  "sourceBucket" : "no-such-bucket",
  "creationTime" : "2023-01-09T03:08:58.083Z",
  "modificationTime" : "2023-01-09T03:08:58.083Z",
  "owner" : "testuser"
}, {
  "volumeName" : "93750-target",
  "bucketName" : "link-to-unreadable-bucket",
  "sourceVolume" : "93750-source",
  "sourceBucket" : "unreadable-bucket",
  "creationTime" : "2023-01-09T03:08:20.775Z",
  "modificationTime" : "2023-01-09T03:08:51.551Z",
  "owner" : "testuser"
}, {
  "volumeName" : "93750-target",
  "bucketName" : "link2",
  "sourceVolume" : "93750-source",
  "sourceBucket" : "bucket2",
  "creationTime" : "2023-01-09T03:11:21.469Z",
  "modificationTime" : "2023-01-09T03:11:21.469Z",
  "owner" : "testuser"
}, {
  "volumeName" : "93750-target",
  "bucketName" : "link3",
  "sourceVolume" : "93750-source",
  "sourceBucket" : "bucket1",
  "creationTime" : "2023-01-09T03:12:34.532Z",
  "modificationTime" : "2023-01-09T03:12:34.532Z",
  "owner" : "testuser"
}, {
  "volumeName" : "93750-target",
  "bucketName" : "loop1",
  "sourceVolume" : "93750-target",
  "sourceBucket" : "loop3",
  "creationTime" : "2023-01-09T03:12:22.820Z",
  "modificationTime" : "2023-01-09T03:12:22.820Z",
  "owner" : "testuser"
}, {
  "volumeName" : "93750-target",
  "bucketName" : "loop2",
  "sourceVolume" : "93750-target",
  "sourceBucket" : "loop1",
  "creationTime" : "2023-01-09T03:12:11.062Z",
  "modificationTime" : "2023-01-09T03:12:11.062Z",
  "owner" : "testuser"
}, {
  "volumeName" : "93750-target",
  "bucketName" : "loop3",
  "sourceVolume" : "93750-target",
  "sourceBucket" : "loop2",
  "creationTime" : "2023-01-09T03:12:17.099Z",
  "modificationTime" : "2023-01-09T03:12:17.099Z",
  "owner" : "testuser"
}, {
  "volumeName" : "93750-target",
  "bucketName" : "readable-link",
  "sourceVolume" : "93750-source",
  "sourceBucket" : "readable-bucket",
  "creationTime" : "2023-01-09T03:08:08.572Z",
  "modificationTime" : "2023-01-09T03:08:45.486Z",
  "owner" : "testuser"
}, {
  "volumeName" : "93750-target",
  "bucketName" : "unreadable-link",
  "sourceVolume" : "93750-source",
  "sourceBucket" : "readable-bucket",
  "creationTime" : "2023-01-09T03:08:14.450Z",
  "modificationTime" : "2023-01-09T03:08:14.450Z",
  "owner" : "testuser"
} ]</msg>
<status status="PASS" starttime="20230109 03:13:05.209" endtime="20230109 03:13:05.211"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:13:05.212" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:13:05.211" endtime="20230109 03:13:05.212"/>
</kw>
<status status="PASS" starttime="20230109 03:12:59.100" endtime="20230109 03:13:05.213"/>
</kw>
<msg timestamp="20230109 03:13:05.213" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:12:59.100" endtime="20230109 03:13:05.213"/>
</kw>
<msg timestamp="20230109 03:13:05.214" level="INFO">${bucket_list} = [ {
  "metadata" : { },
  "volumeName" : "93750-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2023-01-0...</msg>
<status status="PASS" starttime="20230109 03:12:59.099" endtime="20230109 03:13:05.214"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${bucket_list}</arg>
<arg>link1</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230109 03:13:05.214" endtime="20230109 03:13:05.215"/>
</kw>
<kw name="Execute" library="os">
<var>${source_list}</var>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:13:05.227" level="INFO">Running command 'ozone sh key list 93750-source/bucket1 | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:13:12.209" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:13:12.209" level="INFO">${output} = key1
key3</msg>
<status status="PASS" starttime="20230109 03:13:05.218" endtime="20230109 03:13:12.209"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:13:12.211" level="INFO">key1
key3</msg>
<status status="PASS" starttime="20230109 03:13:12.210" endtime="20230109 03:13:12.211"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:13:12.212" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:13:12.211" endtime="20230109 03:13:12.212"/>
</kw>
<status status="PASS" starttime="20230109 03:13:05.216" endtime="20230109 03:13:12.212"/>
</kw>
<msg timestamp="20230109 03:13:12.212" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:13:05.216" endtime="20230109 03:13:12.213"/>
</kw>
<msg timestamp="20230109 03:13:12.213" level="INFO">${source_list} = key1
key3</msg>
<status status="PASS" starttime="20230109 03:13:05.215" endtime="20230109 03:13:12.213"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230109 03:13:12.214" endtime="20230109 03:13:12.214"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20230109 03:12:53.249" endtime="20230109 03:13:12.214"/>
</test>
<test id="s1-s1-s3-t16" name="Setting bucket property on link not allowed" line="161">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:13:12.223" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:13:12.227" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:13:12.227" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230109 03:13:12.220" endtime="20230109 03:13:12.227"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:13:12.229" level="INFO">scm</msg>
<status status="PASS" starttime="20230109 03:13:12.228" endtime="20230109 03:13:12.229"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:13:12.230" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:13:12.229" endtime="20230109 03:13:12.230"/>
</kw>
<status status="PASS" starttime="20230109 03:13:12.219" endtime="20230109 03:13:12.230"/>
</kw>
<msg timestamp="20230109 03:13:12.230" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:13:12.219" endtime="20230109 03:13:12.231"/>
</kw>
<msg timestamp="20230109 03:13:12.231" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230109 03:13:12.218" endtime="20230109 03:13:12.231"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230109 03:13:12.232" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230109 03:13:12.232" endtime="20230109 03:13:12.232"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:13:12.238" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:13:12.325" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:13:12.325" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230109 03:13:12.235" endtime="20230109 03:13:12.326"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:13:12.328" level="INFO"/>
<status status="PASS" starttime="20230109 03:13:12.326" endtime="20230109 03:13:12.328"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:13:12.329" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:13:12.328" endtime="20230109 03:13:12.329"/>
</kw>
<status status="PASS" starttime="20230109 03:13:12.234" endtime="20230109 03:13:12.329"/>
</kw>
<msg timestamp="20230109 03:13:12.330" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:13:12.234" endtime="20230109 03:13:12.331"/>
</kw>
<status status="PASS" starttime="20230109 03:13:12.233" endtime="20230109 03:13:12.331"/>
</kw>
<status status="PASS" starttime="20230109 03:13:12.233" endtime="20230109 03:13:12.331"/>
</kw>
<status status="PASS" starttime="20230109 03:13:12.218" endtime="20230109 03:13:12.332"/>
</kw>
<status status="PASS" starttime="20230109 03:13:12.217" endtime="20230109 03:13:12.332"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:13:12.337" level="INFO">Running command 'ozone sh bucket link 93750-source/bucket1 93750-target/link4 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:13:18.271" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:13:18.271" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230109 03:13:12.334" endtime="20230109 03:13:18.271"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:13:18.273" level="INFO"/>
<status status="PASS" starttime="20230109 03:13:18.272" endtime="20230109 03:13:18.273"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:13:18.274" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:13:18.274" endtime="20230109 03:13:18.274"/>
</kw>
<status status="PASS" starttime="20230109 03:13:12.333" endtime="20230109 03:13:18.275"/>
</kw>
<msg timestamp="20230109 03:13:18.275" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:13:12.333" endtime="20230109 03:13:18.276"/>
</kw>
<status status="PASS" starttime="20230109 03:13:12.332" endtime="20230109 03:13:18.276"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh bucket setquota ${target}/link4 --quota 1GB</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:13:18.281" level="INFO">Running command 'ozone sh bucket setquota 93750-target/link4 --quota 1GB 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:13:24.752" level="INFO">${rc} = 255</msg>
<msg timestamp="20230109 03:13:24.752" level="INFO">${output} = NOT_SUPPORTED_OPERATION Cannot set property on link</msg>
<status status="PASS" starttime="20230109 03:13:18.277" endtime="20230109 03:13:24.752"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:13:24.754" level="INFO">NOT_SUPPORTED_OPERATION Cannot set property on link</msg>
<status status="PASS" starttime="20230109 03:13:24.753" endtime="20230109 03:13:24.754"/>
</kw>
<msg timestamp="20230109 03:13:24.755" level="INFO">${result} = NOT_SUPPORTED_OPERATION Cannot set property on link</msg>
<status status="PASS" starttime="20230109 03:13:18.276" endtime="20230109 03:13:24.755"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOT_SUPPORTED_OPERATION</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230109 03:13:24.755" endtime="20230109 03:13:24.756"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${target}/link4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:13:24.761" level="INFO">Running command 'ozone sh bucket info 93750-target/link4 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:13:31.145" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:13:31.145" level="INFO">${output} = {
  "volumeName" : "93750-target",
  "bucketName" : "link4",
  "sourceVolume" : "93750-source",
  "sourceBucket" : "bucket1",
  "creationTime" : "2023-01-09T03:13:18.017Z",
  "modificationTime" : "202...</msg>
<status status="PASS" starttime="20230109 03:13:24.758" endtime="20230109 03:13:31.145"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:13:31.147" level="INFO">{
  "volumeName" : "93750-target",
  "bucketName" : "link4",
  "sourceVolume" : "93750-source",
  "sourceBucket" : "bucket1",
  "creationTime" : "2023-01-09T03:13:18.017Z",
  "modificationTime" : "2023-01-09T03:13:18.017Z",
  "owner" : "testuser"
}</msg>
<status status="PASS" starttime="20230109 03:13:31.146" endtime="20230109 03:13:31.147"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:13:31.148" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:13:31.147" endtime="20230109 03:13:31.148"/>
</kw>
<status status="PASS" starttime="20230109 03:13:24.757" endtime="20230109 03:13:31.149"/>
</kw>
<msg timestamp="20230109 03:13:31.149" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:13:24.757" endtime="20230109 03:13:31.149"/>
</kw>
<msg timestamp="20230109 03:13:31.150" level="INFO">${result} = {
  "volumeName" : "93750-target",
  "bucketName" : "link4",
  "sourceVolume" : "93750-source",
  "sourceBucket" : "bucket1",
  "creationTime" : "2023-01-09T03:13:18.017Z",
  "modificationTime" : "202...</msg>
<status status="PASS" starttime="20230109 03:13:24.756" endtime="20230109 03:13:31.150"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>sourceBucket</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230109 03:13:31.151" endtime="20230109 03:13:31.151"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20230109 03:13:12.216" endtime="20230109 03:13:31.152"/>
</test>
<doc>Test bucket links via Ozone CLI</doc>
<status status="PASS" starttime="20230109 03:07:25.495" endtime="20230109 03:13:31.154"/>
</suite>
<suite id="s1-s1-s4" name="Ozone-Shell-Single" source="/opt/hadoop/smoketest/basic/ozone-shell-single.robot">
<kw name="Generate prefix" library="ozone-shell-lib" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230109 03:13:31.193" level="INFO">${random} = 95732</msg>
<status status="PASS" starttime="20230109 03:13:31.192" endtime="20230109 03:13:31.193"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${prefix}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230109 03:13:31.194" level="INFO">${prefix} = 95732</msg>
<status status="PASS" starttime="20230109 03:13:31.193" endtime="20230109 03:13:31.194"/>
</kw>
<status status="PASS" starttime="20230109 03:13:31.192" endtime="20230109 03:13:31.194"/>
</kw>
<test id="s1-s1-s4-t1" name="Test ozone shell" line="26">
<kw name="Test ozone shell" library="ozone-shell-lib">
<arg>${EMPTY}</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-without-scheme</arg>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:13:31.204" level="INFO">Running command 'ozone sh volume info /95732-without-scheme 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:13:36.772" level="INFO">${rc} = 255</msg>
<msg timestamp="20230109 03:13:36.772" level="INFO">${output} = VOLUME_NOT_FOUND Volume 95732-without-scheme is not found</msg>
<status status="PASS" starttime="20230109 03:13:31.200" endtime="20230109 03:13:36.772"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:13:36.774" level="INFO">VOLUME_NOT_FOUND Volume 95732-without-scheme is not found</msg>
<status status="PASS" starttime="20230109 03:13:36.773" endtime="20230109 03:13:36.774"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:13:36.775" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:13:36.774" endtime="20230109 03:13:36.775"/>
</kw>
<msg timestamp="20230109 03:13:36.776" level="INFO">${result} = VOLUME_NOT_FOUND Volume 95732-without-scheme is not found</msg>
<status status="PASS" starttime="20230109 03:13:31.198" endtime="20230109 03:13:36.776"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230109 03:13:36.776" endtime="20230109 03:13:36.776"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:13:36.782" level="INFO">Running command 'ozone sh volume create /95732-without-scheme --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:13:43.074" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:13:43.074" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230109 03:13:36.779" endtime="20230109 03:13:43.074"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:13:43.076" level="INFO"/>
<status status="PASS" starttime="20230109 03:13:43.075" endtime="20230109 03:13:43.077"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:13:43.077" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:13:43.077" endtime="20230109 03:13:43.078"/>
</kw>
<status status="PASS" starttime="20230109 03:13:36.778" endtime="20230109 03:13:43.078"/>
</kw>
<msg timestamp="20230109 03:13:43.078" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:13:36.778" endtime="20230109 03:13:43.079"/>
</kw>
<msg timestamp="20230109 03:13:43.079" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230109 03:13:36.777" endtime="20230109 03:13:43.079"/>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<arg>${result}</arg>
<doc>Verifies that the given item is empty.</doc>
<msg timestamp="20230109 03:13:43.080" level="INFO">Length is 0</msg>
<status status="PASS" starttime="20230109 03:13:43.079" endtime="20230109 03:13:43.080"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '.[] | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:13:43.085" level="INFO">Running command 'ozone sh volume list / | jq -r '.[] | select(.name=="95732-without-scheme")' 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:13:49.822" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:13:49.822" level="INFO">${output} = {
  "metadata": {},
  "name": "95732-without-scheme",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime"...</msg>
<status status="PASS" starttime="20230109 03:13:43.083" endtime="20230109 03:13:49.822"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:13:49.823" level="INFO">{
  "metadata": {},
  "name": "95732-without-scheme",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2023-01-09T03:13:42.829Z",
  "modificationTime": "2023-01-09T03:13:42.829Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "refCount": 0
}</msg>
<status status="PASS" starttime="20230109 03:13:49.822" endtime="20230109 03:13:49.824"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:13:49.825" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:13:49.824" endtime="20230109 03:13:49.825"/>
</kw>
<status status="PASS" starttime="20230109 03:13:43.082" endtime="20230109 03:13:49.826"/>
</kw>
<msg timestamp="20230109 03:13:49.826" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:13:43.081" endtime="20230109 03:13:49.826"/>
</kw>
<msg timestamp="20230109 03:13:49.827" level="INFO">${result} = {
  "metadata": {},
  "name": "95732-without-scheme",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime"...</msg>
<status status="PASS" starttime="20230109 03:13:43.080" endtime="20230109 03:13:49.827"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230109 03:13:49.827" endtime="20230109 03:13:49.827"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list | jq -r '.[] | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:13:49.832" level="INFO">Running command 'ozone sh volume list | jq -r '.[] | select(.name=="95732-without-scheme")' 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:13:56.371" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:13:56.371" level="INFO">${output} = {
  "metadata": {},
  "name": "95732-without-scheme",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime"...</msg>
<status status="PASS" starttime="20230109 03:13:49.829" endtime="20230109 03:13:56.371"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:13:56.373" level="INFO">{
  "metadata": {},
  "name": "95732-without-scheme",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2023-01-09T03:13:42.829Z",
  "modificationTime": "2023-01-09T03:13:42.829Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "refCount": 0
}</msg>
<status status="PASS" starttime="20230109 03:13:56.372" endtime="20230109 03:13:56.373"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:13:56.374" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:13:56.374" endtime="20230109 03:13:56.375"/>
</kw>
<status status="PASS" starttime="20230109 03:13:49.829" endtime="20230109 03:13:56.375"/>
</kw>
<msg timestamp="20230109 03:13:56.375" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:13:49.828" endtime="20230109 03:13:56.377"/>
</kw>
<msg timestamp="20230109 03:13:56.377" level="INFO">${result} = {
  "metadata": {},
  "name": "95732-without-scheme",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime"...</msg>
<status status="PASS" starttime="20230109 03:13:49.828" endtime="20230109 03:13:56.377"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230109 03:13:56.377" endtime="20230109 03:13:56.378"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:13:56.384" level="INFO">Running command 'ozone sh volume setquota /95732-without-scheme --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:14:02.199" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:14:02.199" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230109 03:13:56.381" endtime="20230109 03:14:02.199"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:14:02.201" level="INFO"/>
<status status="PASS" starttime="20230109 03:14:02.200" endtime="20230109 03:14:02.201"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:14:02.202" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:14:02.201" endtime="20230109 03:14:02.202"/>
</kw>
<status status="PASS" starttime="20230109 03:13:56.380" endtime="20230109 03:14:02.203"/>
</kw>
<msg timestamp="20230109 03:14:02.203" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:13:56.379" endtime="20230109 03:14:02.203"/>
</kw>
<status status="PASS" starttime="20230109 03:13:56.378" endtime="20230109 03:14:02.204"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:14:02.210" level="INFO">Running command 'ozone sh volume info /95732-without-scheme | jq -r '. | select(.name=="95732-without-scheme") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:14:08.506" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:14:08.506" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20230109 03:14:02.207" endtime="20230109 03:14:08.507"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:14:08.508" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20230109 03:14:08.507" endtime="20230109 03:14:08.508"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:14:08.509" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:14:08.508" endtime="20230109 03:14:08.510"/>
</kw>
<status status="PASS" starttime="20230109 03:14:02.206" endtime="20230109 03:14:08.510"/>
</kw>
<msg timestamp="20230109 03:14:08.510" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:14:02.205" endtime="20230109 03:14:08.511"/>
</kw>
<msg timestamp="20230109 03:14:08.511" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20230109 03:14:02.204" endtime="20230109 03:14:08.511"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230109 03:14:08.511" endtime="20230109 03:14:08.512"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:14:08.517" level="INFO">Running command 'ozone sh bucket create /95732-without-scheme/bb1 --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:14:14.557" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:14:14.557" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230109 03:14:08.514" endtime="20230109 03:14:14.558"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:14:14.559" level="INFO"/>
<status status="PASS" starttime="20230109 03:14:14.558" endtime="20230109 03:14:14.559"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:14:14.561" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:14:14.559" endtime="20230109 03:14:14.562"/>
</kw>
<status status="PASS" starttime="20230109 03:14:08.513" endtime="20230109 03:14:14.562"/>
</kw>
<msg timestamp="20230109 03:14:14.562" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:14:08.513" endtime="20230109 03:14:14.563"/>
</kw>
<msg timestamp="20230109 03:14:14.563" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230109 03:14:08.512" endtime="20230109 03:14:14.563"/>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<arg>${result}</arg>
<doc>Verifies that the given item is empty.</doc>
<msg timestamp="20230109 03:14:14.564" level="INFO">Length is 0</msg>
<status status="PASS" starttime="20230109 03:14:14.563" endtime="20230109 03:14:14.564"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:14:14.571" level="INFO">Running command 'ozone sh bucket info /95732-without-scheme/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:14:21.023" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:14:21.023" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20230109 03:14:14.566" endtime="20230109 03:14:21.023"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:14:21.025" level="INFO">DISK</msg>
<status status="PASS" starttime="20230109 03:14:21.024" endtime="20230109 03:14:21.025"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:14:21.026" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:14:21.025" endtime="20230109 03:14:21.026"/>
</kw>
<status status="PASS" starttime="20230109 03:14:14.566" endtime="20230109 03:14:21.027"/>
</kw>
<msg timestamp="20230109 03:14:21.027" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:14:14.565" endtime="20230109 03:14:21.028"/>
</kw>
<msg timestamp="20230109 03:14:21.028" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20230109 03:14:14.564" endtime="20230109 03:14:21.029"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>DISK</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230109 03:14:21.029" endtime="20230109 03:14:21.029"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:14:21.036" level="INFO">Running command 'ozone sh bucket info /95732-without-scheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:14:27.628" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:14:27.628" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20230109 03:14:21.032" endtime="20230109 03:14:27.628"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:14:27.630" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20230109 03:14:27.629" endtime="20230109 03:14:27.630"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:14:27.631" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:14:27.630" endtime="20230109 03:14:27.631"/>
</kw>
<status status="PASS" starttime="20230109 03:14:21.031" endtime="20230109 03:14:27.632"/>
</kw>
<msg timestamp="20230109 03:14:27.632" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:14:21.031" endtime="20230109 03:14:27.633"/>
</kw>
<msg timestamp="20230109 03:14:27.633" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20230109 03:14:21.030" endtime="20230109 03:14:27.634"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230109 03:14:27.634" endtime="20230109 03:14:27.635"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:14:27.641" level="INFO">Running command 'ozone sh bucket info /95732-without-scheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:14:33.830" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:14:33.830" level="INFO">${output} = 100</msg>
<status status="PASS" starttime="20230109 03:14:27.638" endtime="20230109 03:14:33.830"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:14:33.832" level="INFO">100</msg>
<status status="PASS" starttime="20230109 03:14:33.831" endtime="20230109 03:14:33.832"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:14:33.833" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:14:33.832" endtime="20230109 03:14:33.833"/>
</kw>
<status status="PASS" starttime="20230109 03:14:27.637" endtime="20230109 03:14:33.833"/>
</kw>
<msg timestamp="20230109 03:14:33.833" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:14:27.636" endtime="20230109 03:14:33.834"/>
</kw>
<msg timestamp="20230109 03:14:33.834" level="INFO">${result} = 100</msg>
<status status="PASS" starttime="20230109 03:14:27.635" endtime="20230109 03:14:33.834"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>100</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230109 03:14:33.834" endtime="20230109 03:14:33.835"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:14:33.843" level="INFO">Running command 'ozone sh bucket setquota /95732-without-scheme/bb1 --space-quota 1TB --namespace-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:14:39.632" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:14:39.632" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230109 03:14:33.837" endtime="20230109 03:14:39.632"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:14:39.634" level="INFO"/>
<status status="PASS" starttime="20230109 03:14:39.633" endtime="20230109 03:14:39.634"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:14:39.649" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:14:39.635" endtime="20230109 03:14:39.649"/>
</kw>
<status status="PASS" starttime="20230109 03:14:33.837" endtime="20230109 03:14:39.650"/>
</kw>
<msg timestamp="20230109 03:14:39.650" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:14:33.836" endtime="20230109 03:14:39.650"/>
</kw>
<status status="PASS" starttime="20230109 03:14:33.835" endtime="20230109 03:14:39.651"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:14:39.656" level="INFO">Running command 'ozone sh bucket info /95732-without-scheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:14:46.073" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:14:46.073" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" starttime="20230109 03:14:39.653" endtime="20230109 03:14:46.073"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:14:46.075" level="INFO">1099511627776</msg>
<status status="PASS" starttime="20230109 03:14:46.074" endtime="20230109 03:14:46.075"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:14:46.076" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:14:46.075" endtime="20230109 03:14:46.076"/>
</kw>
<status status="PASS" starttime="20230109 03:14:39.652" endtime="20230109 03:14:46.077"/>
</kw>
<msg timestamp="20230109 03:14:46.078" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:14:39.652" endtime="20230109 03:14:46.079"/>
</kw>
<msg timestamp="20230109 03:14:46.080" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" starttime="20230109 03:14:39.651" endtime="20230109 03:14:46.080"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1099511627776</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230109 03:14:46.080" endtime="20230109 03:14:46.080"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:14:46.086" level="INFO">Running command 'ozone sh bucket info /95732-without-scheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:14:52.469" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:14:52.469" level="INFO">${output} = 1000</msg>
<status status="PASS" starttime="20230109 03:14:46.083" endtime="20230109 03:14:52.469"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:14:52.471" level="INFO">1000</msg>
<status status="PASS" starttime="20230109 03:14:52.470" endtime="20230109 03:14:52.471"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:14:52.474" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:14:52.473" endtime="20230109 03:14:52.474"/>
</kw>
<status status="PASS" starttime="20230109 03:14:46.082" endtime="20230109 03:14:52.474"/>
</kw>
<msg timestamp="20230109 03:14:52.475" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:14:46.082" endtime="20230109 03:14:52.475"/>
</kw>
<msg timestamp="20230109 03:14:52.476" level="INFO">${result} = 1000</msg>
<status status="PASS" starttime="20230109 03:14:46.081" endtime="20230109 03:14:52.476"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1000</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230109 03:14:52.476" endtime="20230109 03:14:52.477"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '.[] | select(.name=="bb1") | .volumeName'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:14:52.485" level="INFO">Running command 'ozone sh bucket list /95732-without-scheme/ | jq -r '.[] | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:14:59.429" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:14:59.430" level="INFO">${output} = 95732-without-scheme</msg>
<status status="PASS" starttime="20230109 03:14:52.482" endtime="20230109 03:14:59.430"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:14:59.432" level="INFO">95732-without-scheme</msg>
<status status="PASS" starttime="20230109 03:14:59.430" endtime="20230109 03:14:59.432"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:14:59.433" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:14:59.432" endtime="20230109 03:14:59.433"/>
</kw>
<status status="PASS" starttime="20230109 03:14:52.480" endtime="20230109 03:14:59.434"/>
</kw>
<msg timestamp="20230109 03:14:59.434" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:14:52.478" endtime="20230109 03:14:59.434"/>
</kw>
<msg timestamp="20230109 03:14:59.435" level="INFO">${result} = 95732-without-scheme</msg>
<status status="PASS" starttime="20230109 03:14:52.477" endtime="20230109 03:14:59.435"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${volume}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230109 03:14:59.435" endtime="20230109 03:14:59.436"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Test key handling" library="ozone-shell-lib">
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:14:59.446" level="INFO">Running command 'ozone sh key put /95732-without-scheme/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:15:08.804" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:15:08.804" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230109 03:14:59.440" endtime="20230109 03:15:08.804"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:15:08.806" level="INFO"/>
<status status="PASS" starttime="20230109 03:15:08.805" endtime="20230109 03:15:08.806"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:15:08.807" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:15:08.806" endtime="20230109 03:15:08.807"/>
</kw>
<status status="PASS" starttime="20230109 03:14:59.438" endtime="20230109 03:15:08.807"/>
</kw>
<msg timestamp="20230109 03:15:08.807" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:14:59.438" endtime="20230109 03:15:08.808"/>
</kw>
<status status="PASS" starttime="20230109 03:14:59.437" endtime="20230109 03:15:08.808"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:15:08.814" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:15:08.818" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:15:08.818" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230109 03:15:08.810" endtime="20230109 03:15:08.818"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:15:08.821" level="INFO"/>
<status status="PASS" starttime="20230109 03:15:08.819" endtime="20230109 03:15:08.821"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:15:08.822" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:15:08.821" endtime="20230109 03:15:08.822"/>
</kw>
<status status="PASS" starttime="20230109 03:15:08.810" endtime="20230109 03:15:08.823"/>
</kw>
<msg timestamp="20230109 03:15:08.823" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:15:08.809" endtime="20230109 03:15:08.824"/>
</kw>
<status status="PASS" starttime="20230109 03:15:08.808" endtime="20230109 03:15:08.824"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:15:08.831" level="INFO">Running command 'ozone sh key get /95732-without-scheme/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:15:17.857" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:15:17.857" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230109 03:15:08.828" endtime="20230109 03:15:17.858"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:15:17.860" level="INFO"/>
<status status="PASS" starttime="20230109 03:15:17.859" endtime="20230109 03:15:17.860"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:15:17.861" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:15:17.860" endtime="20230109 03:15:17.861"/>
</kw>
<status status="PASS" starttime="20230109 03:15:08.827" endtime="20230109 03:15:17.862"/>
</kw>
<msg timestamp="20230109 03:15:17.862" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:15:08.826" endtime="20230109 03:15:17.863"/>
</kw>
<status status="PASS" starttime="20230109 03:15:08.825" endtime="20230109 03:15:17.863"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:15:17.869" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:15:17.873" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:15:17.873" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230109 03:15:17.866" endtime="20230109 03:15:17.873"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:15:17.874" level="INFO"/>
<status status="PASS" starttime="20230109 03:15:17.873" endtime="20230109 03:15:17.874"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:15:17.875" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:15:17.875" endtime="20230109 03:15:17.876"/>
</kw>
<status status="PASS" starttime="20230109 03:15:17.864" endtime="20230109 03:15:17.876"/>
</kw>
<msg timestamp="20230109 03:15:17.876" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:15:17.864" endtime="20230109 03:15:17.877"/>
</kw>
<status status="PASS" starttime="20230109 03:15:17.863" endtime="20230109 03:15:17.877"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:15:17.883" level="INFO">Running command 'ozone sh key put -t RATIS /95732-without-scheme/bb1/key1_RATIS /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:15:27.574" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:15:27.574" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230109 03:15:17.881" endtime="20230109 03:15:27.574"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:15:27.575" level="INFO"/>
<status status="PASS" starttime="20230109 03:15:27.574" endtime="20230109 03:15:27.575"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:15:27.576" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:15:27.576" endtime="20230109 03:15:27.576"/>
</kw>
<status status="PASS" starttime="20230109 03:15:17.880" endtime="20230109 03:15:27.577"/>
</kw>
<msg timestamp="20230109 03:15:27.577" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:15:17.879" endtime="20230109 03:15:27.578"/>
</kw>
<status status="PASS" starttime="20230109 03:15:17.878" endtime="20230109 03:15:27.578"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1_RATIS</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:15:27.583" level="INFO">Running command 'rm -f /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:15:27.587" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:15:27.587" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230109 03:15:27.580" endtime="20230109 03:15:27.587"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:15:27.588" level="INFO"/>
<status status="PASS" starttime="20230109 03:15:27.588" endtime="20230109 03:15:27.589"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:15:27.589" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:15:27.589" endtime="20230109 03:15:27.590"/>
</kw>
<status status="PASS" starttime="20230109 03:15:27.579" endtime="20230109 03:15:27.590"/>
</kw>
<msg timestamp="20230109 03:15:27.590" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:15:27.579" endtime="20230109 03:15:27.591"/>
</kw>
<status status="PASS" starttime="20230109 03:15:27.578" endtime="20230109 03:15:27.591"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:15:27.596" level="INFO">Running command 'ozone sh key get /95732-without-scheme/bb1/key1_RATIS /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:15:37.069" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:15:37.069" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230109 03:15:27.593" endtime="20230109 03:15:37.069"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:15:37.071" level="INFO"/>
<status status="PASS" starttime="20230109 03:15:37.070" endtime="20230109 03:15:37.071"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:15:37.072" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:15:37.071" endtime="20230109 03:15:37.072"/>
</kw>
<status status="PASS" starttime="20230109 03:15:27.592" endtime="20230109 03:15:37.072"/>
</kw>
<msg timestamp="20230109 03:15:37.072" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:15:27.592" endtime="20230109 03:15:37.073"/>
</kw>
<status status="PASS" starttime="20230109 03:15:27.591" endtime="20230109 03:15:37.074"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:15:37.079" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:15:37.083" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:15:37.083" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230109 03:15:37.076" endtime="20230109 03:15:37.083"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:15:37.085" level="INFO"/>
<status status="PASS" starttime="20230109 03:15:37.084" endtime="20230109 03:15:37.085"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:15:37.086" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:15:37.085" endtime="20230109 03:15:37.086"/>
</kw>
<status status="PASS" starttime="20230109 03:15:37.075" endtime="20230109 03:15:37.087"/>
</kw>
<msg timestamp="20230109 03:15:37.087" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:15:37.074" endtime="20230109 03:15:37.087"/>
</kw>
<status status="PASS" starttime="20230109 03:15:37.074" endtime="20230109 03:15:37.088"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:15:37.094" level="INFO">Running command 'ozone sh key info /95732-without-scheme/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")' 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:15:43.404" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:15:43.405" level="INFO">${output} = {
  "volumeName": "95732-without-scheme",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17539,
  "creationTime": "2023-01-09T03:15:24.099Z",
  "modificationTime": "2023-01-09T03:15:27.1...</msg>
<status status="PASS" starttime="20230109 03:15:37.090" endtime="20230109 03:15:43.405"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:15:43.406" level="INFO">{
  "volumeName": "95732-without-scheme",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17539,
  "creationTime": "2023-01-09T03:15:24.099Z",
  "modificationTime": "2023-01-09T03:15:27.130Z",
  "replicationConfig": {
    "replicationFactor": "THREE",
    "requiredNodes": 3,
    "replicationType": "RATIS"
  },
  "metadata": {},
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 111677748019200000,
      "length": 17539,
      "offset": 0,
      "keyOffset": 0
    }
  ]
}</msg>
<status status="PASS" starttime="20230109 03:15:43.406" endtime="20230109 03:15:43.407"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:15:43.407" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:15:43.407" endtime="20230109 03:15:43.408"/>
</kw>
<status status="PASS" starttime="20230109 03:15:37.090" endtime="20230109 03:15:43.408"/>
</kw>
<msg timestamp="20230109 03:15:43.408" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:15:37.089" endtime="20230109 03:15:43.409"/>
</kw>
<msg timestamp="20230109 03:15:43.409" level="INFO">${result} = {
  "volumeName": "95732-without-scheme",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17539,
  "creationTime": "2023-01-09T03:15:24.099Z",
  "modificationTime": "2023-01-09T03:15:27.1...</msg>
<status status="PASS" starttime="20230109 03:15:37.088" endtime="20230109 03:15:43.409"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230109 03:15:43.409" endtime="20230109 03:15:43.410"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:15:43.415" level="INFO">Running command 'ozone sh key delete /95732-without-scheme/bb1/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:15:49.853" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:15:49.853" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230109 03:15:43.412" endtime="20230109 03:15:49.853"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:15:49.855" level="INFO"/>
<status status="PASS" starttime="20230109 03:15:49.854" endtime="20230109 03:15:49.855"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:15:49.856" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:15:49.855" endtime="20230109 03:15:49.856"/>
</kw>
<status status="PASS" starttime="20230109 03:15:43.411" endtime="20230109 03:15:49.857"/>
</kw>
<msg timestamp="20230109 03:15:49.857" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:15:43.411" endtime="20230109 03:15:49.858"/>
</kw>
<status status="PASS" starttime="20230109 03:15:43.410" endtime="20230109 03:15:49.858"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:15:49.864" level="INFO">Running command 'ozone sh key cp /95732-without-scheme/bb1 key1 key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:16:00.271" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:16:00.271" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230109 03:15:49.861" endtime="20230109 03:16:00.271"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:16:00.273" level="INFO"/>
<status status="PASS" starttime="20230109 03:16:00.272" endtime="20230109 03:16:00.273"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:16:00.274" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:16:00.273" endtime="20230109 03:16:00.274"/>
</kw>
<status status="PASS" starttime="20230109 03:15:49.860" endtime="20230109 03:16:00.275"/>
</kw>
<msg timestamp="20230109 03:16:00.275" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:15:49.860" endtime="20230109 03:16:00.276"/>
</kw>
<status status="PASS" starttime="20230109 03:15:49.858" endtime="20230109 03:16:00.276"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:16:00.281" level="INFO">Running command 'rm -f /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:16:00.285" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:16:00.285" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230109 03:16:00.278" endtime="20230109 03:16:00.285"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:16:00.286" level="INFO"/>
<status status="PASS" starttime="20230109 03:16:00.286" endtime="20230109 03:16:00.287"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:16:00.289" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:16:00.288" endtime="20230109 03:16:00.289"/>
</kw>
<status status="PASS" starttime="20230109 03:16:00.277" endtime="20230109 03:16:00.290"/>
</kw>
<msg timestamp="20230109 03:16:00.290" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:16:00.277" endtime="20230109 03:16:00.291"/>
</kw>
<status status="PASS" starttime="20230109 03:16:00.276" endtime="20230109 03:16:00.291"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:16:00.299" level="INFO">Running command 'ozone sh key get /95732-without-scheme/bb1/key1-copy /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:16:10.035" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:16:10.035" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230109 03:16:00.295" endtime="20230109 03:16:10.035"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:16:10.037" level="INFO"/>
<status status="PASS" starttime="20230109 03:16:10.036" endtime="20230109 03:16:10.037"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:16:10.037" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:16:10.037" endtime="20230109 03:16:10.038"/>
</kw>
<status status="PASS" starttime="20230109 03:16:00.294" endtime="20230109 03:16:10.038"/>
</kw>
<msg timestamp="20230109 03:16:10.038" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:16:00.292" endtime="20230109 03:16:10.039"/>
</kw>
<status status="PASS" starttime="20230109 03:16:00.291" endtime="20230109 03:16:10.039"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:16:10.044" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:16:10.048" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:16:10.048" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230109 03:16:10.041" endtime="20230109 03:16:10.048"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:16:10.049" level="INFO"/>
<status status="PASS" starttime="20230109 03:16:10.048" endtime="20230109 03:16:10.049"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:16:10.050" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:16:10.049" endtime="20230109 03:16:10.050"/>
</kw>
<status status="PASS" starttime="20230109 03:16:10.040" endtime="20230109 03:16:10.051"/>
</kw>
<msg timestamp="20230109 03:16:10.051" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:16:10.040" endtime="20230109 03:16:10.051"/>
</kw>
<status status="PASS" starttime="20230109 03:16:10.039" endtime="20230109 03:16:10.052"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:16:10.058" level="INFO">Running command 'ozone sh key delete /95732-without-scheme/bb1/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:16:15.862" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:16:15.862" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230109 03:16:10.055" endtime="20230109 03:16:15.862"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:16:15.864" level="INFO"/>
<status status="PASS" starttime="20230109 03:16:15.863" endtime="20230109 03:16:15.864"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:16:15.865" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:16:15.864" endtime="20230109 03:16:15.865"/>
</kw>
<status status="PASS" starttime="20230109 03:16:10.055" endtime="20230109 03:16:15.865"/>
</kw>
<msg timestamp="20230109 03:16:15.866" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:16:10.053" endtime="20230109 03:16:15.866"/>
</kw>
<status status="PASS" starttime="20230109 03:16:10.052" endtime="20230109 03:16:15.866"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:16:15.871" level="INFO">Running command 'ozone sh key get /95732-without-scheme/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:16:21.496" level="INFO">${rc} = 255</msg>
<msg timestamp="20230109 03:16:21.496" level="INFO">${output} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20230109 03:16:15.868" endtime="20230109 03:16:21.497"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:16:21.498" level="INFO">/tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20230109 03:16:21.497" endtime="20230109 03:16:21.498"/>
</kw>
<msg timestamp="20230109 03:16:21.499" level="INFO">${result} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20230109 03:16:15.867" endtime="20230109 03:16:21.499"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230109 03:16:21.499" endtime="20230109 03:16:21.500"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:16:21.505" level="INFO">Running command 'ozone sh key get --force /95732-without-scheme/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:16:31.262" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:16:31.262" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230109 03:16:21.502" endtime="20230109 03:16:31.262"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:16:31.264" level="INFO"/>
<status status="PASS" starttime="20230109 03:16:31.263" endtime="20230109 03:16:31.264"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:16:31.265" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:16:31.264" endtime="20230109 03:16:31.265"/>
</kw>
<status status="PASS" starttime="20230109 03:16:21.501" endtime="20230109 03:16:31.266"/>
</kw>
<msg timestamp="20230109 03:16:31.266" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:16:21.501" endtime="20230109 03:16:31.267"/>
</kw>
<msg timestamp="20230109 03:16:31.267" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230109 03:16:21.500" endtime="20230109 03:16:31.268"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230109 03:16:31.268" endtime="20230109 03:16:31.268"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:16:31.276" level="INFO">Running command 'ozone sh key info /95732-without-scheme/bb1/key1 | jq -r '. | select(.name=="key1")' 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:16:38.025" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:16:38.025" level="INFO">${output} = {
  "volumeName": "95732-without-scheme",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17539,
  "creationTime": "2023-01-09T03:15:05.504Z",
  "modificationTime": "2023-01-09T03:15:08.339Z",
...</msg>
<status status="PASS" starttime="20230109 03:16:31.273" endtime="20230109 03:16:38.025"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:16:38.027" level="INFO">{
  "volumeName": "95732-without-scheme",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17539,
  "creationTime": "2023-01-09T03:15:05.504Z",
  "modificationTime": "2023-01-09T03:15:08.339Z",
  "replicationConfig": {
    "replicationFactor": "THREE",
    "requiredNodes": 3,
    "replicationType": "RATIS"
  },
  "metadata": {},
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 111677748019200000,
      "length": 17539,
      "offset": 0,
      "keyOffset": 0
    }
  ]
}</msg>
<status status="PASS" starttime="20230109 03:16:38.026" endtime="20230109 03:16:38.027"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:16:38.028" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:16:38.027" endtime="20230109 03:16:38.028"/>
</kw>
<status status="PASS" starttime="20230109 03:16:31.271" endtime="20230109 03:16:38.029"/>
</kw>
<msg timestamp="20230109 03:16:38.029" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:16:31.271" endtime="20230109 03:16:38.029"/>
</kw>
<msg timestamp="20230109 03:16:38.030" level="INFO">${result} = {
  "volumeName": "95732-without-scheme",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17539,
  "creationTime": "2023-01-09T03:15:05.504Z",
  "modificationTime": "2023-01-09T03:15:08.339Z",
...</msg>
<status status="PASS" starttime="20230109 03:16:31.269" endtime="20230109 03:16:38.030"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230109 03:16:38.030" endtime="20230109 03:16:38.031"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.[] | select(.name=="key1") | .name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:16:38.037" level="INFO">Running command 'ozone sh key list /95732-without-scheme/bb1 | jq -r '.[] | select(.name=="key1") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:16:44.246" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:16:44.246" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20230109 03:16:38.033" endtime="20230109 03:16:44.246"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:16:44.248" level="INFO">key1</msg>
<status status="PASS" starttime="20230109 03:16:44.247" endtime="20230109 03:16:44.248"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:16:44.249" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:16:44.248" endtime="20230109 03:16:44.249"/>
</kw>
<status status="PASS" starttime="20230109 03:16:38.033" endtime="20230109 03:16:44.249"/>
</kw>
<msg timestamp="20230109 03:16:44.249" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:16:38.032" endtime="20230109 03:16:44.250"/>
</kw>
<msg timestamp="20230109 03:16:44.251" level="INFO">${result} = key1</msg>
<status status="PASS" starttime="20230109 03:16:38.031" endtime="20230109 03:16:44.251"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230109 03:16:44.251" endtime="20230109 03:16:44.251"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:16:44.257" level="INFO">Running command 'ozone sh key rename /95732-without-scheme/bb1 key1 key2 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:16:50.413" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:16:50.413" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230109 03:16:44.254" endtime="20230109 03:16:50.413"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:16:50.415" level="INFO"/>
<status status="PASS" starttime="20230109 03:16:50.414" endtime="20230109 03:16:50.415"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:16:50.416" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:16:50.415" endtime="20230109 03:16:50.416"/>
</kw>
<status status="PASS" starttime="20230109 03:16:44.253" endtime="20230109 03:16:50.417"/>
</kw>
<msg timestamp="20230109 03:16:50.417" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:16:44.253" endtime="20230109 03:16:50.418"/>
</kw>
<status status="PASS" starttime="20230109 03:16:44.252" endtime="20230109 03:16:50.419"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:16:50.425" level="INFO">Running command 'ozone sh key list /95732-without-scheme/bb1 | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:16:57.281" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:16:57.281" level="INFO">${output} = key2</msg>
<status status="PASS" starttime="20230109 03:16:50.422" endtime="20230109 03:16:57.281"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:16:57.283" level="INFO">key2</msg>
<status status="PASS" starttime="20230109 03:16:57.282" endtime="20230109 03:16:57.284"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:16:57.284" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:16:57.284" endtime="20230109 03:16:57.285"/>
</kw>
<status status="PASS" starttime="20230109 03:16:50.420" endtime="20230109 03:16:57.285"/>
</kw>
<msg timestamp="20230109 03:16:57.285" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:16:50.420" endtime="20230109 03:16:57.286"/>
</kw>
<msg timestamp="20230109 03:16:57.288" level="INFO">${result} = key2</msg>
<status status="PASS" starttime="20230109 03:16:50.419" endtime="20230109 03:16:57.288"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230109 03:16:57.288" endtime="20230109 03:16:57.288"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:16:57.313" level="INFO">Running command 'ozone sh key delete /95732-without-scheme/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:17:03.623" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:17:03.623" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230109 03:16:57.301" endtime="20230109 03:17:03.623"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:17:03.625" level="INFO"/>
<status status="PASS" starttime="20230109 03:17:03.624" endtime="20230109 03:17:03.625"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:17:03.626" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:17:03.625" endtime="20230109 03:17:03.626"/>
</kw>
<status status="PASS" starttime="20230109 03:16:57.291" endtime="20230109 03:17:03.627"/>
</kw>
<msg timestamp="20230109 03:17:03.627" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:16:57.290" endtime="20230109 03:17:03.628"/>
</kw>
<status status="PASS" starttime="20230109 03:16:57.289" endtime="20230109 03:17:03.628"/>
</kw>
<status status="PASS" starttime="20230109 03:14:59.436" endtime="20230109 03:17:03.628"/>
</kw>
<status status="PASS" starttime="20230109 03:14:59.436" endtime="20230109 03:17:03.628"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --space-quota ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:17:03.635" level="INFO">Running command 'ozone sh volume clrquota --space-quota /95732-without-scheme 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:17:09.671" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:17:09.671" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230109 03:17:03.632" endtime="20230109 03:17:09.671"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:17:09.674" level="INFO"/>
<status status="PASS" starttime="20230109 03:17:09.672" endtime="20230109 03:17:09.674"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:17:09.676" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:17:09.674" endtime="20230109 03:17:09.677"/>
</kw>
<status status="PASS" starttime="20230109 03:17:03.630" endtime="20230109 03:17:09.677"/>
</kw>
<msg timestamp="20230109 03:17:09.677" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:17:03.630" endtime="20230109 03:17:09.679"/>
</kw>
<status status="PASS" starttime="20230109 03:17:03.629" endtime="20230109 03:17:09.680"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:17:09.687" level="INFO">Running command 'ozone sh volume info /95732-without-scheme | jq -r '. | select(.name=="95732-without-scheme") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:17:16.583" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:17:16.583" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20230109 03:17:09.684" endtime="20230109 03:17:16.583"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:17:16.585" level="INFO">-1</msg>
<status status="PASS" starttime="20230109 03:17:16.584" endtime="20230109 03:17:16.585"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:17:16.586" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:17:16.585" endtime="20230109 03:17:16.586"/>
</kw>
<status status="PASS" starttime="20230109 03:17:09.683" endtime="20230109 03:17:16.587"/>
</kw>
<msg timestamp="20230109 03:17:16.587" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:17:09.682" endtime="20230109 03:17:16.588"/>
</kw>
<msg timestamp="20230109 03:17:16.588" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20230109 03:17:09.680" endtime="20230109 03:17:16.588"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230109 03:17:16.588" endtime="20230109 03:17:16.589"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --namespace-quota ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:17:16.595" level="INFO">Running command 'ozone sh volume clrquota --namespace-quota /95732-without-scheme 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:17:22.799" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:17:22.799" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230109 03:17:16.591" endtime="20230109 03:17:22.799"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:17:22.801" level="INFO"/>
<status status="PASS" starttime="20230109 03:17:22.800" endtime="20230109 03:17:22.801"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:17:22.802" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:17:22.801" endtime="20230109 03:17:22.802"/>
</kw>
<status status="PASS" starttime="20230109 03:17:16.591" endtime="20230109 03:17:22.803"/>
</kw>
<msg timestamp="20230109 03:17:22.803" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:17:16.590" endtime="20230109 03:17:22.804"/>
</kw>
<status status="PASS" starttime="20230109 03:17:16.589" endtime="20230109 03:17:22.805"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:17:22.812" level="INFO">Running command 'ozone sh volume info /95732-without-scheme | jq -r '. | select(.name=="95732-without-scheme") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:17:29.487" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:17:29.487" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20230109 03:17:22.808" endtime="20230109 03:17:29.487"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:17:29.489" level="INFO">-1</msg>
<status status="PASS" starttime="20230109 03:17:29.488" endtime="20230109 03:17:29.489"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:17:29.490" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:17:29.489" endtime="20230109 03:17:29.490"/>
</kw>
<status status="PASS" starttime="20230109 03:17:22.807" endtime="20230109 03:17:29.490"/>
</kw>
<msg timestamp="20230109 03:17:29.490" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:17:22.807" endtime="20230109 03:17:29.491"/>
</kw>
<msg timestamp="20230109 03:17:29.491" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20230109 03:17:22.805" endtime="20230109 03:17:29.491"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230109 03:17:29.491" endtime="20230109 03:17:29.492"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --space-quota ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:17:29.498" level="INFO">Running command 'ozone sh bucket clrquota --space-quota /95732-without-scheme/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:17:35.284" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:17:35.284" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230109 03:17:29.495" endtime="20230109 03:17:35.284"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:17:35.285" level="INFO"/>
<status status="PASS" starttime="20230109 03:17:35.284" endtime="20230109 03:17:35.286"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:17:35.286" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:17:35.286" endtime="20230109 03:17:35.287"/>
</kw>
<status status="PASS" starttime="20230109 03:17:29.494" endtime="20230109 03:17:35.287"/>
</kw>
<msg timestamp="20230109 03:17:35.287" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:17:29.493" endtime="20230109 03:17:35.288"/>
</kw>
<status status="PASS" starttime="20230109 03:17:29.492" endtime="20230109 03:17:35.288"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:17:35.294" level="INFO">Running command 'ozone sh bucket info /95732-without-scheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:17:41.110" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:17:41.110" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20230109 03:17:35.291" endtime="20230109 03:17:41.110"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:17:41.112" level="INFO">-1</msg>
<status status="PASS" starttime="20230109 03:17:41.111" endtime="20230109 03:17:41.112"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:17:41.113" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:17:41.112" endtime="20230109 03:17:41.113"/>
</kw>
<status status="PASS" starttime="20230109 03:17:35.290" endtime="20230109 03:17:41.114"/>
</kw>
<msg timestamp="20230109 03:17:41.114" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:17:35.290" endtime="20230109 03:17:41.114"/>
</kw>
<msg timestamp="20230109 03:17:41.115" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20230109 03:17:35.288" endtime="20230109 03:17:41.115"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230109 03:17:41.115" endtime="20230109 03:17:41.116"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --namespace-quota ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:17:41.121" level="INFO">Running command 'ozone sh bucket clrquota --namespace-quota /95732-without-scheme/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:17:47.280" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:17:47.280" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230109 03:17:41.118" endtime="20230109 03:17:47.281"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:17:47.282" level="INFO"/>
<status status="PASS" starttime="20230109 03:17:47.281" endtime="20230109 03:17:47.283"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:17:47.284" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:17:47.283" endtime="20230109 03:17:47.284"/>
</kw>
<status status="PASS" starttime="20230109 03:17:41.117" endtime="20230109 03:17:47.285"/>
</kw>
<msg timestamp="20230109 03:17:47.285" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:17:41.117" endtime="20230109 03:17:47.286"/>
</kw>
<status status="PASS" starttime="20230109 03:17:41.116" endtime="20230109 03:17:47.286"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:17:47.293" level="INFO">Running command 'ozone sh bucket info /95732-without-scheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:17:53.873" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:17:53.873" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20230109 03:17:47.290" endtime="20230109 03:17:53.873"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:17:53.875" level="INFO">-1</msg>
<status status="PASS" starttime="20230109 03:17:53.874" endtime="20230109 03:17:53.875"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:17:53.876" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:17:53.875" endtime="20230109 03:17:53.876"/>
</kw>
<status status="PASS" starttime="20230109 03:17:47.289" endtime="20230109 03:17:53.877"/>
</kw>
<msg timestamp="20230109 03:17:53.877" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:17:47.288" endtime="20230109 03:17:53.878"/>
</kw>
<msg timestamp="20230109 03:17:53.879" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20230109 03:17:47.287" endtime="20230109 03:17:53.879"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230109 03:17:53.879" endtime="20230109 03:17:53.880"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:17:53.886" level="INFO">Running command 'ozone sh bucket delete /95732-without-scheme/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:17:59.860" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:17:59.860" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230109 03:17:53.883" endtime="20230109 03:17:59.861"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:17:59.862" level="INFO"/>
<status status="PASS" starttime="20230109 03:17:59.861" endtime="20230109 03:17:59.863"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:17:59.864" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:17:59.863" endtime="20230109 03:17:59.864"/>
</kw>
<status status="PASS" starttime="20230109 03:17:53.882" endtime="20230109 03:17:59.864"/>
</kw>
<msg timestamp="20230109 03:17:59.864" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:17:53.881" endtime="20230109 03:17:59.865"/>
</kw>
<status status="PASS" starttime="20230109 03:17:53.880" endtime="20230109 03:17:59.865"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:17:59.871" level="INFO">Running command 'ozone sh volume delete /95732-without-scheme 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:18:05.812" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:18:05.812" level="INFO">${output} = Volume 95732-without-scheme is deleted</msg>
<status status="PASS" starttime="20230109 03:17:59.868" endtime="20230109 03:18:05.812"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:18:05.814" level="INFO">Volume 95732-without-scheme is deleted</msg>
<status status="PASS" starttime="20230109 03:18:05.813" endtime="20230109 03:18:05.814"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:18:05.815" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:18:05.814" endtime="20230109 03:18:05.815"/>
</kw>
<status status="PASS" starttime="20230109 03:17:59.867" endtime="20230109 03:18:05.816"/>
</kw>
<msg timestamp="20230109 03:18:05.816" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:17:59.867" endtime="20230109 03:18:05.816"/>
</kw>
<status status="PASS" starttime="20230109 03:17:59.866" endtime="20230109 03:18:05.817"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:18:05.822" level="INFO">Running command 'ozone sh volume create /95732-without-scheme 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:18:11.581" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:18:11.582" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230109 03:18:05.819" endtime="20230109 03:18:11.582"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:18:11.583" level="INFO"/>
<status status="PASS" starttime="20230109 03:18:11.582" endtime="20230109 03:18:11.583"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:18:11.584" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:18:11.584" endtime="20230109 03:18:11.584"/>
</kw>
<status status="PASS" starttime="20230109 03:18:05.818" endtime="20230109 03:18:11.585"/>
</kw>
<msg timestamp="20230109 03:18:11.585" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:18:05.818" endtime="20230109 03:18:11.586"/>
</kw>
<status status="PASS" starttime="20230109 03:18:05.817" endtime="20230109 03:18:11.586"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:18:11.592" level="INFO">Running command 'ozone sh volume info /95732-without-scheme | jq -r '. | select(.name=="95732-without-scheme") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:18:17.788" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:18:17.788" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20230109 03:18:11.589" endtime="20230109 03:18:17.788"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:18:17.790" level="INFO">-1</msg>
<status status="PASS" starttime="20230109 03:18:17.789" endtime="20230109 03:18:17.790"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:18:17.791" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:18:17.790" endtime="20230109 03:18:17.791"/>
</kw>
<status status="PASS" starttime="20230109 03:18:11.588" endtime="20230109 03:18:17.792"/>
</kw>
<msg timestamp="20230109 03:18:17.792" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:18:11.587" endtime="20230109 03:18:17.792"/>
</kw>
<msg timestamp="20230109 03:18:17.793" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20230109 03:18:11.586" endtime="20230109 03:18:17.793"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230109 03:18:17.793" endtime="20230109 03:18:17.794"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:18:17.800" level="INFO">Running command 'ozone sh volume info /95732-without-scheme | jq -r '. | select(.name=="95732-without-scheme") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:18:24.018" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:18:24.018" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20230109 03:18:17.796" endtime="20230109 03:18:24.018"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:18:24.021" level="INFO">-1</msg>
<status status="PASS" starttime="20230109 03:18:24.019" endtime="20230109 03:18:24.021"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:18:24.022" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:18:24.021" endtime="20230109 03:18:24.022"/>
</kw>
<status status="PASS" starttime="20230109 03:18:17.796" endtime="20230109 03:18:24.023"/>
</kw>
<msg timestamp="20230109 03:18:24.023" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:18:17.795" endtime="20230109 03:18:24.024"/>
</kw>
<msg timestamp="20230109 03:18:24.024" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20230109 03:18:17.794" endtime="20230109 03:18:24.024"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230109 03:18:24.024" endtime="20230109 03:18:24.025"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:18:24.031" level="INFO">Running command 'ozone sh bucket create /95732-without-scheme/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:18:30.499" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:18:30.499" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230109 03:18:24.028" endtime="20230109 03:18:30.499"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:18:30.501" level="INFO"/>
<status status="PASS" starttime="20230109 03:18:30.500" endtime="20230109 03:18:30.501"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:18:30.503" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:18:30.502" endtime="20230109 03:18:30.503"/>
</kw>
<status status="PASS" starttime="20230109 03:18:24.027" endtime="20230109 03:18:30.503"/>
</kw>
<msg timestamp="20230109 03:18:30.504" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:18:24.026" endtime="20230109 03:18:30.505"/>
</kw>
<status status="PASS" starttime="20230109 03:18:24.025" endtime="20230109 03:18:30.505"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:18:30.512" level="INFO">Running command 'ozone sh bucket info /95732-without-scheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:18:31.195" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20230109 03:18:30.508" endtime="20230109 03:18:31.196"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230109 03:18:31.197" endtime="20230109 03:18:31.197"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20230109 03:18:31.197" endtime="20230109 03:18:31.197"/>
</kw>
<status status="FAIL" starttime="20230109 03:18:30.507" endtime="20230109 03:18:31.198"/>
</kw>
<msg timestamp="20230109 03:18:31.198" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20230109 03:18:30.507" endtime="20230109 03:18:31.199"/>
</kw>
<status status="FAIL" starttime="20230109 03:18:30.505" endtime="20230109 03:18:31.200"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20230109 03:18:31.200" endtime="20230109 03:18:31.200"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20230109 03:18:31.201" endtime="20230109 03:18:31.201"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20230109 03:18:31.201" endtime="20230109 03:18:31.201"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20230109 03:18:31.203" endtime="20230109 03:18:31.203"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20230109 03:18:31.204" endtime="20230109 03:18:31.204"/>
</kw>
<status status="FAIL" starttime="20230109 03:13:31.196" endtime="20230109 03:18:31.204"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20230109 03:13:31.195" endtime="20230109 03:18:31.208">Test timeout 5 minutes exceeded.</status>
</test>
<doc>Test ozone shell CLI usage</doc>
<status status="FAIL" starttime="20230109 03:13:31.159" endtime="20230109 03:18:31.212"/>
</suite>
<suite id="s1-s1-s5" name="Ozone-Shell" source="/opt/hadoop/smoketest/basic/ozone-shell.robot">
<kw name="Generate prefix" library="ozone-shell-lib" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230109 03:18:31.266" level="INFO">${random} = 84704</msg>
<status status="PASS" starttime="20230109 03:18:31.265" endtime="20230109 03:18:31.266"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${prefix}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230109 03:18:31.267" level="INFO">${prefix} = 84704</msg>
<status status="PASS" starttime="20230109 03:18:31.267" endtime="20230109 03:18:31.267"/>
</kw>
<status status="PASS" starttime="20230109 03:18:31.250" endtime="20230109 03:18:31.268"/>
</kw>
<test id="s1-s1-s5-t1" name="RpcClient with port" line="26">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:18:31.278" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:18:31.295" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:18:31.295" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230109 03:18:31.274" endtime="20230109 03:18:31.295"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:18:31.297" level="INFO">scm</msg>
<status status="PASS" starttime="20230109 03:18:31.296" endtime="20230109 03:18:31.297"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:18:31.298" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:18:31.297" endtime="20230109 03:18:31.298"/>
</kw>
<status status="PASS" starttime="20230109 03:18:31.273" endtime="20230109 03:18:31.299"/>
</kw>
<msg timestamp="20230109 03:18:31.299" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:18:31.272" endtime="20230109 03:18:31.300"/>
</kw>
<msg timestamp="20230109 03:18:31.300" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230109 03:18:31.272" endtime="20230109 03:18:31.301"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230109 03:18:31.303" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230109 03:18:31.301" endtime="20230109 03:18:31.304"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:18:31.311" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:18:31.524" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:18:31.524" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230109 03:18:31.307" endtime="20230109 03:18:31.524"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:18:31.527" level="INFO"/>
<status status="PASS" starttime="20230109 03:18:31.525" endtime="20230109 03:18:31.527"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:18:31.528" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:18:31.527" endtime="20230109 03:18:31.528"/>
</kw>
<status status="PASS" starttime="20230109 03:18:31.306" endtime="20230109 03:18:31.529"/>
</kw>
<msg timestamp="20230109 03:18:31.529" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:18:31.305" endtime="20230109 03:18:31.532"/>
</kw>
<status status="PASS" starttime="20230109 03:18:31.304" endtime="20230109 03:18:31.532"/>
</kw>
<status status="PASS" starttime="20230109 03:18:31.304" endtime="20230109 03:18:31.532"/>
</kw>
<status status="PASS" starttime="20230109 03:18:31.271" endtime="20230109 03:18:31.534"/>
</kw>
<status status="PASS" starttime="20230109 03:18:31.270" endtime="20230109 03:18:31.535"/>
</kw>
<kw name="Test ozone shell" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-with-host</arg>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:18:31.552" level="INFO">Running command 'ozone sh volume info o3://om:9862/84704-with-host 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:18:42.795" level="INFO">${rc} = 255</msg>
<msg timestamp="20230109 03:18:42.796" level="INFO">${output} = VOLUME_NOT_FOUND Volume 84704-with-host is not found</msg>
<status status="PASS" starttime="20230109 03:18:31.540" endtime="20230109 03:18:42.796"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:18:42.797" level="INFO">VOLUME_NOT_FOUND Volume 84704-with-host is not found</msg>
<status status="PASS" starttime="20230109 03:18:42.796" endtime="20230109 03:18:42.798"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:18:42.798" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:18:42.798" endtime="20230109 03:18:42.798"/>
</kw>
<msg timestamp="20230109 03:18:42.799" level="INFO">${result} = VOLUME_NOT_FOUND Volume 84704-with-host is not found</msg>
<status status="PASS" starttime="20230109 03:18:31.538" endtime="20230109 03:18:42.799"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230109 03:18:42.799" endtime="20230109 03:18:42.800"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:18:42.813" level="INFO">Running command 'ozone sh volume create o3://om:9862/84704-with-host --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:18:49.000" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:18:49.000" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230109 03:18:42.802" endtime="20230109 03:18:49.000"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:18:49.002" level="INFO"/>
<status status="PASS" starttime="20230109 03:18:49.001" endtime="20230109 03:18:49.003"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:18:49.003" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:18:49.003" endtime="20230109 03:18:49.004"/>
</kw>
<status status="PASS" starttime="20230109 03:18:42.801" endtime="20230109 03:18:49.004"/>
</kw>
<msg timestamp="20230109 03:18:49.004" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:18:42.801" endtime="20230109 03:18:49.005"/>
</kw>
<msg timestamp="20230109 03:18:49.005" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230109 03:18:42.800" endtime="20230109 03:18:49.005"/>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<arg>${result}</arg>
<doc>Verifies that the given item is empty.</doc>
<msg timestamp="20230109 03:18:49.006" level="INFO">Length is 0</msg>
<status status="PASS" starttime="20230109 03:18:49.005" endtime="20230109 03:18:49.006"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '.[] | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:18:49.012" level="INFO">Running command 'ozone sh volume list o3://om:9862/ | jq -r '.[] | select(.name=="84704-with-host")' 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:18:55.323" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:18:55.323" level="INFO">${output} = {
  "metadata": {},
  "name": "84704-with-host",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "20...</msg>
<status status="PASS" starttime="20230109 03:18:49.009" endtime="20230109 03:18:55.323"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:18:55.325" level="INFO">{
  "metadata": {},
  "name": "84704-with-host",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2023-01-09T03:18:48.697Z",
  "modificationTime": "2023-01-09T03:18:48.697Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "refCount": 0
}</msg>
<status status="PASS" starttime="20230109 03:18:55.324" endtime="20230109 03:18:55.325"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:18:55.326" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:18:55.325" endtime="20230109 03:18:55.326"/>
</kw>
<status status="PASS" starttime="20230109 03:18:49.008" endtime="20230109 03:18:55.327"/>
</kw>
<msg timestamp="20230109 03:18:55.327" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:18:49.007" endtime="20230109 03:18:55.327"/>
</kw>
<msg timestamp="20230109 03:18:55.328" level="INFO">${result} = {
  "metadata": {},
  "name": "84704-with-host",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "20...</msg>
<status status="PASS" starttime="20230109 03:18:49.006" endtime="20230109 03:18:55.328"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230109 03:18:55.328" endtime="20230109 03:18:55.329"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list | jq -r '.[] | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:18:55.334" level="INFO">Running command 'ozone sh volume list | jq -r '.[] | select(.name=="84704-with-host")' 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:19:01.512" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:19:01.512" level="INFO">${output} = {
  "metadata": {},
  "name": "84704-with-host",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "20...</msg>
<status status="PASS" starttime="20230109 03:18:55.331" endtime="20230109 03:19:01.512"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:19:01.513" level="INFO">{
  "metadata": {},
  "name": "84704-with-host",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2023-01-09T03:18:48.697Z",
  "modificationTime": "2023-01-09T03:18:48.697Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "refCount": 0
}</msg>
<status status="PASS" starttime="20230109 03:19:01.512" endtime="20230109 03:19:01.513"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:19:01.516" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:19:01.514" endtime="20230109 03:19:01.516"/>
</kw>
<status status="PASS" starttime="20230109 03:18:55.330" endtime="20230109 03:19:01.517"/>
</kw>
<msg timestamp="20230109 03:19:01.517" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:18:55.330" endtime="20230109 03:19:01.517"/>
</kw>
<msg timestamp="20230109 03:19:01.518" level="INFO">${result} = {
  "metadata": {},
  "name": "84704-with-host",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "20...</msg>
<status status="PASS" starttime="20230109 03:18:55.329" endtime="20230109 03:19:01.518"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230109 03:19:01.518" endtime="20230109 03:19:01.519"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:19:01.524" level="INFO">Running command 'ozone sh volume setquota o3://om:9862/84704-with-host --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:19:07.405" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:19:07.407" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230109 03:19:01.521" endtime="20230109 03:19:07.407"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:19:07.413" level="INFO"/>
<status status="PASS" starttime="20230109 03:19:07.412" endtime="20230109 03:19:07.413"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:19:07.414" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:19:07.414" endtime="20230109 03:19:07.415"/>
</kw>
<status status="PASS" starttime="20230109 03:19:01.520" endtime="20230109 03:19:07.415"/>
</kw>
<msg timestamp="20230109 03:19:07.415" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:19:01.520" endtime="20230109 03:19:07.416"/>
</kw>
<status status="PASS" starttime="20230109 03:19:01.519" endtime="20230109 03:19:07.417"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:19:07.424" level="INFO">Running command 'ozone sh volume info o3://om:9862/84704-with-host | jq -r '. | select(.name=="84704-with-host") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:19:13.926" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:19:13.926" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20230109 03:19:07.420" endtime="20230109 03:19:13.926"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:19:13.928" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20230109 03:19:13.927" endtime="20230109 03:19:13.928"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:19:13.929" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:19:13.928" endtime="20230109 03:19:13.929"/>
</kw>
<status status="PASS" starttime="20230109 03:19:07.419" endtime="20230109 03:19:13.929"/>
</kw>
<msg timestamp="20230109 03:19:13.930" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:19:07.418" endtime="20230109 03:19:13.930"/>
</kw>
<msg timestamp="20230109 03:19:13.931" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20230109 03:19:07.417" endtime="20230109 03:19:13.931"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230109 03:19:13.931" endtime="20230109 03:19:13.931"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:19:13.936" level="INFO">Running command 'ozone sh bucket create o3://om:9862/84704-with-host/bb1 --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:19:19.922" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:19:19.922" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230109 03:19:13.934" endtime="20230109 03:19:19.922"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:19:19.924" level="INFO"/>
<status status="PASS" starttime="20230109 03:19:19.923" endtime="20230109 03:19:19.924"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:19:19.925" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:19:19.924" endtime="20230109 03:19:19.925"/>
</kw>
<status status="PASS" starttime="20230109 03:19:13.933" endtime="20230109 03:19:19.925"/>
</kw>
<msg timestamp="20230109 03:19:19.925" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:19:13.932" endtime="20230109 03:19:19.926"/>
</kw>
<msg timestamp="20230109 03:19:19.926" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230109 03:19:13.931" endtime="20230109 03:19:19.926"/>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<arg>${result}</arg>
<doc>Verifies that the given item is empty.</doc>
<msg timestamp="20230109 03:19:19.927" level="INFO">Length is 0</msg>
<status status="PASS" starttime="20230109 03:19:19.927" endtime="20230109 03:19:19.927"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:19:19.933" level="INFO">Running command 'ozone sh bucket info o3://om:9862/84704-with-host/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:19:26.515" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:19:26.515" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20230109 03:19:19.930" endtime="20230109 03:19:26.516"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:19:26.519" level="INFO">DISK</msg>
<status status="PASS" starttime="20230109 03:19:26.517" endtime="20230109 03:19:26.519"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:19:26.520" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:19:26.519" endtime="20230109 03:19:26.520"/>
</kw>
<status status="PASS" starttime="20230109 03:19:19.929" endtime="20230109 03:19:26.520"/>
</kw>
<msg timestamp="20230109 03:19:26.520" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:19:19.929" endtime="20230109 03:19:26.521"/>
</kw>
<msg timestamp="20230109 03:19:26.522" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20230109 03:19:19.928" endtime="20230109 03:19:26.522"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>DISK</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230109 03:19:26.522" endtime="20230109 03:19:26.523"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:19:26.532" level="INFO">Running command 'ozone sh bucket info o3://om:9862/84704-with-host/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:19:33.369" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:19:33.369" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20230109 03:19:26.527" endtime="20230109 03:19:33.369"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:19:33.371" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20230109 03:19:33.370" endtime="20230109 03:19:33.371"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:19:33.372" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:19:33.371" endtime="20230109 03:19:33.372"/>
</kw>
<status status="PASS" starttime="20230109 03:19:26.526" endtime="20230109 03:19:33.372"/>
</kw>
<msg timestamp="20230109 03:19:33.373" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:19:26.525" endtime="20230109 03:19:33.374"/>
</kw>
<msg timestamp="20230109 03:19:33.375" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20230109 03:19:26.523" endtime="20230109 03:19:33.375"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230109 03:19:33.375" endtime="20230109 03:19:33.376"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:19:33.382" level="INFO">Running command 'ozone sh bucket info o3://om:9862/84704-with-host/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:19:39.771" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:19:39.772" level="INFO">${output} = 100</msg>
<status status="PASS" starttime="20230109 03:19:33.378" endtime="20230109 03:19:39.772"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:19:39.773" level="INFO">100</msg>
<status status="PASS" starttime="20230109 03:19:39.772" endtime="20230109 03:19:39.774"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:19:39.775" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:19:39.774" endtime="20230109 03:19:39.775"/>
</kw>
<status status="PASS" starttime="20230109 03:19:33.378" endtime="20230109 03:19:39.776"/>
</kw>
<msg timestamp="20230109 03:19:39.776" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:19:33.377" endtime="20230109 03:19:39.776"/>
</kw>
<msg timestamp="20230109 03:19:39.777" level="INFO">${result} = 100</msg>
<status status="PASS" starttime="20230109 03:19:33.376" endtime="20230109 03:19:39.777"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>100</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230109 03:19:39.777" endtime="20230109 03:19:39.778"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:19:39.784" level="INFO">Running command 'ozone sh bucket setquota o3://om:9862/84704-with-host/bb1 --space-quota 1TB --namespace-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:19:45.168" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:19:45.168" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230109 03:19:39.781" endtime="20230109 03:19:45.168"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:19:45.170" level="INFO"/>
<status status="PASS" starttime="20230109 03:19:45.169" endtime="20230109 03:19:45.170"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:19:45.171" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:19:45.170" endtime="20230109 03:19:45.171"/>
</kw>
<status status="PASS" starttime="20230109 03:19:39.780" endtime="20230109 03:19:45.172"/>
</kw>
<msg timestamp="20230109 03:19:45.172" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:19:39.779" endtime="20230109 03:19:45.172"/>
</kw>
<status status="PASS" starttime="20230109 03:19:39.778" endtime="20230109 03:19:45.173"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:19:45.179" level="INFO">Running command 'ozone sh bucket info o3://om:9862/84704-with-host/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:19:51.238" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:19:51.238" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" starttime="20230109 03:19:45.176" endtime="20230109 03:19:51.238"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:19:51.240" level="INFO">1099511627776</msg>
<status status="PASS" starttime="20230109 03:19:51.239" endtime="20230109 03:19:51.240"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:19:51.245" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:19:51.244" endtime="20230109 03:19:51.245"/>
</kw>
<status status="PASS" starttime="20230109 03:19:45.175" endtime="20230109 03:19:51.245"/>
</kw>
<msg timestamp="20230109 03:19:51.246" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:19:45.174" endtime="20230109 03:19:51.246"/>
</kw>
<msg timestamp="20230109 03:19:51.247" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" starttime="20230109 03:19:45.173" endtime="20230109 03:19:51.247"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1099511627776</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230109 03:19:51.247" endtime="20230109 03:19:51.247"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:19:51.255" level="INFO">Running command 'ozone sh bucket info o3://om:9862/84704-with-host/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:19:57.983" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:19:57.983" level="INFO">${output} = 1000</msg>
<status status="PASS" starttime="20230109 03:19:51.251" endtime="20230109 03:19:57.983"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:19:57.985" level="INFO">1000</msg>
<status status="PASS" starttime="20230109 03:19:57.984" endtime="20230109 03:19:57.986"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:19:57.987" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:19:57.986" endtime="20230109 03:19:57.987"/>
</kw>
<status status="PASS" starttime="20230109 03:19:51.250" endtime="20230109 03:19:57.987"/>
</kw>
<msg timestamp="20230109 03:19:57.987" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:19:51.249" endtime="20230109 03:19:57.988"/>
</kw>
<msg timestamp="20230109 03:19:57.989" level="INFO">${result} = 1000</msg>
<status status="PASS" starttime="20230109 03:19:51.248" endtime="20230109 03:19:57.989"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1000</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230109 03:19:57.989" endtime="20230109 03:19:57.990"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '.[] | select(.name=="bb1") | .volumeName'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:19:57.996" level="INFO">Running command 'ozone sh bucket list o3://om:9862/84704-with-host/ | jq -r '.[] | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:20:04.372" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:20:04.373" level="INFO">${output} = 84704-with-host</msg>
<status status="PASS" starttime="20230109 03:19:57.993" endtime="20230109 03:20:04.373"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:20:04.375" level="INFO">84704-with-host</msg>
<status status="PASS" starttime="20230109 03:20:04.374" endtime="20230109 03:20:04.375"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:20:04.376" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:20:04.376" endtime="20230109 03:20:04.376"/>
</kw>
<status status="PASS" starttime="20230109 03:19:57.992" endtime="20230109 03:20:04.377"/>
</kw>
<msg timestamp="20230109 03:20:04.377" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:19:57.991" endtime="20230109 03:20:04.378"/>
</kw>
<msg timestamp="20230109 03:20:04.378" level="INFO">${result} = 84704-with-host</msg>
<status status="PASS" starttime="20230109 03:19:57.990" endtime="20230109 03:20:04.378"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${volume}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230109 03:20:04.378" endtime="20230109 03:20:04.379"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Test key handling" library="ozone-shell-lib">
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:20:04.385" level="INFO">Running command 'ozone sh key put o3://om:9862/84704-with-host/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:20:14.337" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:20:14.337" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230109 03:20:04.382" endtime="20230109 03:20:14.337"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:20:14.341" level="INFO"/>
<status status="PASS" starttime="20230109 03:20:14.338" endtime="20230109 03:20:14.341"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:20:14.344" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:20:14.342" endtime="20230109 03:20:14.345"/>
</kw>
<status status="PASS" starttime="20230109 03:20:04.381" endtime="20230109 03:20:14.345"/>
</kw>
<msg timestamp="20230109 03:20:14.345" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:20:04.381" endtime="20230109 03:20:14.346"/>
</kw>
<status status="PASS" starttime="20230109 03:20:04.380" endtime="20230109 03:20:14.346"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:20:14.352" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:20:14.356" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:20:14.357" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230109 03:20:14.349" endtime="20230109 03:20:14.357"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:20:14.358" level="INFO"/>
<status status="PASS" starttime="20230109 03:20:14.357" endtime="20230109 03:20:14.358"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:20:14.359" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:20:14.358" endtime="20230109 03:20:14.359"/>
</kw>
<status status="PASS" starttime="20230109 03:20:14.348" endtime="20230109 03:20:14.360"/>
</kw>
<msg timestamp="20230109 03:20:14.360" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:20:14.348" endtime="20230109 03:20:14.361"/>
</kw>
<status status="PASS" starttime="20230109 03:20:14.347" endtime="20230109 03:20:14.361"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:20:14.368" level="INFO">Running command 'ozone sh key get o3://om:9862/84704-with-host/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:20:23.742" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:20:23.742" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230109 03:20:14.364" endtime="20230109 03:20:23.742"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:20:23.744" level="INFO"/>
<status status="PASS" starttime="20230109 03:20:23.743" endtime="20230109 03:20:23.744"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:20:23.745" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:20:23.744" endtime="20230109 03:20:23.745"/>
</kw>
<status status="PASS" starttime="20230109 03:20:14.363" endtime="20230109 03:20:23.745"/>
</kw>
<msg timestamp="20230109 03:20:23.745" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:20:14.363" endtime="20230109 03:20:23.746"/>
</kw>
<status status="PASS" starttime="20230109 03:20:14.362" endtime="20230109 03:20:23.746"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:20:23.751" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:20:23.755" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:20:23.755" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230109 03:20:23.749" endtime="20230109 03:20:23.755"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:20:23.757" level="INFO"/>
<status status="PASS" starttime="20230109 03:20:23.756" endtime="20230109 03:20:23.757"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:20:23.758" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:20:23.757" endtime="20230109 03:20:23.758"/>
</kw>
<status status="PASS" starttime="20230109 03:20:23.748" endtime="20230109 03:20:23.759"/>
</kw>
<msg timestamp="20230109 03:20:23.759" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:20:23.747" endtime="20230109 03:20:23.760"/>
</kw>
<status status="PASS" starttime="20230109 03:20:23.747" endtime="20230109 03:20:23.760"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:20:23.765" level="INFO">Running command 'ozone sh key put -t RATIS o3://om:9862/84704-with-host/bb1/key1_RATIS /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:20:34.462" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:20:34.462" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230109 03:20:23.762" endtime="20230109 03:20:34.463"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:20:34.465" level="INFO"/>
<status status="PASS" starttime="20230109 03:20:34.464" endtime="20230109 03:20:34.465"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:20:34.466" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:20:34.465" endtime="20230109 03:20:34.466"/>
</kw>
<status status="PASS" starttime="20230109 03:20:23.761" endtime="20230109 03:20:34.467"/>
</kw>
<msg timestamp="20230109 03:20:34.467" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:20:23.761" endtime="20230109 03:20:34.468"/>
</kw>
<status status="PASS" starttime="20230109 03:20:23.760" endtime="20230109 03:20:34.468"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1_RATIS</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:20:34.475" level="INFO">Running command 'rm -f /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:20:34.478" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:20:34.479" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230109 03:20:34.471" endtime="20230109 03:20:34.479"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:20:34.481" level="INFO"/>
<status status="PASS" starttime="20230109 03:20:34.480" endtime="20230109 03:20:34.481"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:20:34.482" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:20:34.481" endtime="20230109 03:20:34.482"/>
</kw>
<status status="PASS" starttime="20230109 03:20:34.470" endtime="20230109 03:20:34.482"/>
</kw>
<msg timestamp="20230109 03:20:34.483" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:20:34.469" endtime="20230109 03:20:34.484"/>
</kw>
<status status="PASS" starttime="20230109 03:20:34.468" endtime="20230109 03:20:34.484"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:20:34.490" level="INFO">Running command 'ozone sh key get o3://om:9862/84704-with-host/bb1/key1_RATIS /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:20:44.724" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:20:44.724" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230109 03:20:34.486" endtime="20230109 03:20:44.724"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:20:44.726" level="INFO"/>
<status status="PASS" starttime="20230109 03:20:44.725" endtime="20230109 03:20:44.726"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:20:44.727" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:20:44.727" endtime="20230109 03:20:44.728"/>
</kw>
<status status="PASS" starttime="20230109 03:20:34.486" endtime="20230109 03:20:44.728"/>
</kw>
<msg timestamp="20230109 03:20:44.728" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:20:34.485" endtime="20230109 03:20:44.729"/>
</kw>
<status status="PASS" starttime="20230109 03:20:34.484" endtime="20230109 03:20:44.730"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:20:44.736" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:20:44.740" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:20:44.740" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230109 03:20:44.733" endtime="20230109 03:20:44.740"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:20:44.742" level="INFO"/>
<status status="PASS" starttime="20230109 03:20:44.741" endtime="20230109 03:20:44.743"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:20:44.744" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:20:44.743" endtime="20230109 03:20:44.744"/>
</kw>
<status status="PASS" starttime="20230109 03:20:44.731" endtime="20230109 03:20:44.744"/>
</kw>
<msg timestamp="20230109 03:20:44.744" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:20:44.731" endtime="20230109 03:20:44.745"/>
</kw>
<status status="PASS" starttime="20230109 03:20:44.730" endtime="20230109 03:20:44.746"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:20:44.752" level="INFO">Running command 'ozone sh key info o3://om:9862/84704-with-host/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")' 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:20:52.029" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:20:52.029" level="INFO">${output} = {
  "volumeName": "84704-with-host",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17539,
  "creationTime": "2023-01-09T03:20:30.377Z",
  "modificationTime": "2023-01-09T03:20:33.983Z",...</msg>
<status status="PASS" starttime="20230109 03:20:44.749" endtime="20230109 03:20:52.029"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:20:52.030" level="INFO">{
  "volumeName": "84704-with-host",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17539,
  "creationTime": "2023-01-09T03:20:30.377Z",
  "modificationTime": "2023-01-09T03:20:33.983Z",
  "replicationConfig": {
    "replicationFactor": "THREE",
    "requiredNodes": 3,
    "replicationType": "RATIS"
  },
  "metadata": {},
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 111677748019200020,
      "length": 17539,
      "offset": 0,
      "keyOffset": 0
    }
  ]
}</msg>
<status status="PASS" starttime="20230109 03:20:52.030" endtime="20230109 03:20:52.031"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:20:52.031" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:20:52.031" endtime="20230109 03:20:52.032"/>
</kw>
<status status="PASS" starttime="20230109 03:20:44.748" endtime="20230109 03:20:52.032"/>
</kw>
<msg timestamp="20230109 03:20:52.032" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:20:44.747" endtime="20230109 03:20:52.033"/>
</kw>
<msg timestamp="20230109 03:20:52.033" level="INFO">${result} = {
  "volumeName": "84704-with-host",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17539,
  "creationTime": "2023-01-09T03:20:30.377Z",
  "modificationTime": "2023-01-09T03:20:33.983Z",...</msg>
<status status="PASS" starttime="20230109 03:20:44.746" endtime="20230109 03:20:52.033"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230109 03:20:52.037" endtime="20230109 03:20:52.038"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:20:52.044" level="INFO">Running command 'ozone sh key delete o3://om:9862/84704-with-host/bb1/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:20:58.672" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:20:58.672" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230109 03:20:52.040" endtime="20230109 03:20:58.672"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:20:58.674" level="INFO"/>
<status status="PASS" starttime="20230109 03:20:58.673" endtime="20230109 03:20:58.674"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:20:58.675" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:20:58.674" endtime="20230109 03:20:58.675"/>
</kw>
<status status="PASS" starttime="20230109 03:20:52.039" endtime="20230109 03:20:58.675"/>
</kw>
<msg timestamp="20230109 03:20:58.676" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:20:52.039" endtime="20230109 03:20:58.676"/>
</kw>
<status status="PASS" starttime="20230109 03:20:52.038" endtime="20230109 03:20:58.677"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:20:58.682" level="INFO">Running command 'ozone sh key cp o3://om:9862/84704-with-host/bb1 key1 key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:21:09.991" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:21:09.991" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230109 03:20:58.679" endtime="20230109 03:21:09.991"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:21:09.993" level="INFO"/>
<status status="PASS" starttime="20230109 03:21:09.992" endtime="20230109 03:21:09.993"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:21:09.994" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:21:09.993" endtime="20230109 03:21:09.994"/>
</kw>
<status status="PASS" starttime="20230109 03:20:58.678" endtime="20230109 03:21:09.994"/>
</kw>
<msg timestamp="20230109 03:21:09.994" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:20:58.678" endtime="20230109 03:21:09.995"/>
</kw>
<status status="PASS" starttime="20230109 03:20:58.677" endtime="20230109 03:21:09.996"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:21:10.001" level="INFO">Running command 'rm -f /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:21:10.005" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:21:10.005" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230109 03:21:09.997" endtime="20230109 03:21:10.005"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:21:10.007" level="INFO"/>
<status status="PASS" starttime="20230109 03:21:10.006" endtime="20230109 03:21:10.007"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:21:10.008" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:21:10.008" endtime="20230109 03:21:10.009"/>
</kw>
<status status="PASS" starttime="20230109 03:21:09.997" endtime="20230109 03:21:10.009"/>
</kw>
<msg timestamp="20230109 03:21:10.009" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:21:09.996" endtime="20230109 03:21:10.010"/>
</kw>
<status status="PASS" starttime="20230109 03:21:09.996" endtime="20230109 03:21:10.011"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:21:10.018" level="INFO">Running command 'ozone sh key get o3://om:9862/84704-with-host/bb1/key1-copy /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:21:19.243" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:21:19.243" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230109 03:21:10.014" endtime="20230109 03:21:19.243"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:21:19.245" level="INFO"/>
<status status="PASS" starttime="20230109 03:21:19.244" endtime="20230109 03:21:19.245"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:21:19.246" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:21:19.245" endtime="20230109 03:21:19.246"/>
</kw>
<status status="PASS" starttime="20230109 03:21:10.013" endtime="20230109 03:21:19.246"/>
</kw>
<msg timestamp="20230109 03:21:19.247" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:21:10.012" endtime="20230109 03:21:19.247"/>
</kw>
<status status="PASS" starttime="20230109 03:21:10.011" endtime="20230109 03:21:19.248"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:21:19.254" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:21:19.259" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:21:19.259" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230109 03:21:19.251" endtime="20230109 03:21:19.259"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:21:19.262" level="INFO"/>
<status status="PASS" starttime="20230109 03:21:19.260" endtime="20230109 03:21:19.262"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:21:19.263" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:21:19.262" endtime="20230109 03:21:19.263"/>
</kw>
<status status="PASS" starttime="20230109 03:21:19.249" endtime="20230109 03:21:19.264"/>
</kw>
<msg timestamp="20230109 03:21:19.264" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:21:19.249" endtime="20230109 03:21:19.264"/>
</kw>
<status status="PASS" starttime="20230109 03:21:19.248" endtime="20230109 03:21:19.265"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:21:19.270" level="INFO">Running command 'ozone sh key delete o3://om:9862/84704-with-host/bb1/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:21:25.447" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:21:25.447" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230109 03:21:19.267" endtime="20230109 03:21:25.447"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:21:25.449" level="INFO"/>
<status status="PASS" starttime="20230109 03:21:25.447" endtime="20230109 03:21:25.449"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:21:25.450" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:21:25.449" endtime="20230109 03:21:25.450"/>
</kw>
<status status="PASS" starttime="20230109 03:21:19.267" endtime="20230109 03:21:25.450"/>
</kw>
<msg timestamp="20230109 03:21:25.450" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:21:19.266" endtime="20230109 03:21:25.451"/>
</kw>
<status status="PASS" starttime="20230109 03:21:19.265" endtime="20230109 03:21:25.452"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:21:25.457" level="INFO">Running command 'ozone sh key get o3://om:9862/84704-with-host/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:21:31.976" level="INFO">${rc} = 255</msg>
<msg timestamp="20230109 03:21:31.976" level="INFO">${output} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20230109 03:21:25.453" endtime="20230109 03:21:31.976"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:21:31.978" level="INFO">/tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20230109 03:21:31.977" endtime="20230109 03:21:31.978"/>
</kw>
<msg timestamp="20230109 03:21:31.978" level="INFO">${result} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20230109 03:21:25.452" endtime="20230109 03:21:31.979"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230109 03:21:31.979" endtime="20230109 03:21:31.980"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:21:31.986" level="INFO">Running command 'ozone sh key get --force o3://om:9862/84704-with-host/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:21:41.770" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:21:41.770" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230109 03:21:31.983" endtime="20230109 03:21:41.770"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:21:41.772" level="INFO"/>
<status status="PASS" starttime="20230109 03:21:41.771" endtime="20230109 03:21:41.772"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:21:41.773" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:21:41.772" endtime="20230109 03:21:41.773"/>
</kw>
<status status="PASS" starttime="20230109 03:21:31.982" endtime="20230109 03:21:41.774"/>
</kw>
<msg timestamp="20230109 03:21:41.774" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:21:31.981" endtime="20230109 03:21:41.775"/>
</kw>
<msg timestamp="20230109 03:21:41.775" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230109 03:21:31.980" endtime="20230109 03:21:41.775"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230109 03:21:41.775" endtime="20230109 03:21:41.776"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:21:41.782" level="INFO">Running command 'ozone sh key info o3://om:9862/84704-with-host/bb1/key1 | jq -r '. | select(.name=="key1")' 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:21:48.654" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:21:48.654" level="INFO">${output} = {
  "volumeName": "84704-with-host",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17539,
  "creationTime": "2023-01-09T03:20:10.509Z",
  "modificationTime": "2023-01-09T03:20:13.764Z",
  "re...</msg>
<status status="PASS" starttime="20230109 03:21:41.779" endtime="20230109 03:21:48.654"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:21:48.658" level="INFO">{
  "volumeName": "84704-with-host",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17539,
  "creationTime": "2023-01-09T03:20:10.509Z",
  "modificationTime": "2023-01-09T03:20:13.764Z",
  "replicationConfig": {
    "replicationFactor": "THREE",
    "requiredNodes": 3,
    "replicationType": "RATIS"
  },
  "metadata": {},
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 111677748019200020,
      "length": 17539,
      "offset": 0,
      "keyOffset": 0
    }
  ]
}</msg>
<status status="PASS" starttime="20230109 03:21:48.655" endtime="20230109 03:21:48.659"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:21:48.660" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:21:48.659" endtime="20230109 03:21:48.660"/>
</kw>
<status status="PASS" starttime="20230109 03:21:41.778" endtime="20230109 03:21:48.661"/>
</kw>
<msg timestamp="20230109 03:21:48.661" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:21:41.777" endtime="20230109 03:21:48.662"/>
</kw>
<msg timestamp="20230109 03:21:48.662" level="INFO">${result} = {
  "volumeName": "84704-with-host",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17539,
  "creationTime": "2023-01-09T03:20:10.509Z",
  "modificationTime": "2023-01-09T03:20:13.764Z",
  "re...</msg>
<status status="PASS" starttime="20230109 03:21:41.776" endtime="20230109 03:21:48.662"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230109 03:21:48.662" endtime="20230109 03:21:48.663"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.[] | select(.name=="key1") | .name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:21:48.670" level="INFO">Running command 'ozone sh key list o3://om:9862/84704-with-host/bb1 | jq -r '.[] | select(.name=="key1") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:21:55.605" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:21:55.605" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20230109 03:21:48.666" endtime="20230109 03:21:55.605"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:21:55.607" level="INFO">key1</msg>
<status status="PASS" starttime="20230109 03:21:55.606" endtime="20230109 03:21:55.607"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:21:55.608" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:21:55.607" endtime="20230109 03:21:55.608"/>
</kw>
<status status="PASS" starttime="20230109 03:21:48.665" endtime="20230109 03:21:55.609"/>
</kw>
<msg timestamp="20230109 03:21:55.609" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:21:48.665" endtime="20230109 03:21:55.610"/>
</kw>
<msg timestamp="20230109 03:21:55.610" level="INFO">${result} = key1</msg>
<status status="PASS" starttime="20230109 03:21:48.663" endtime="20230109 03:21:55.610"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230109 03:21:55.610" endtime="20230109 03:21:55.611"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:21:55.617" level="INFO">Running command 'ozone sh key rename o3://om:9862/84704-with-host/bb1 key1 key2 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:22:01.545" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:22:01.545" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230109 03:21:55.614" endtime="20230109 03:22:01.545"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:22:01.551" level="INFO"/>
<status status="PASS" starttime="20230109 03:22:01.546" endtime="20230109 03:22:01.551"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:22:01.553" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:22:01.552" endtime="20230109 03:22:01.553"/>
</kw>
<status status="PASS" starttime="20230109 03:21:55.613" endtime="20230109 03:22:01.554"/>
</kw>
<msg timestamp="20230109 03:22:01.554" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:21:55.612" endtime="20230109 03:22:01.556"/>
</kw>
<status status="PASS" starttime="20230109 03:21:55.611" endtime="20230109 03:22:01.559"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:22:01.566" level="INFO">Running command 'ozone sh key list o3://om:9862/84704-with-host/bb1 | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:22:08.753" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:22:08.753" level="INFO">${output} = key2</msg>
<status status="PASS" starttime="20230109 03:22:01.562" endtime="20230109 03:22:08.753"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:22:08.754" level="INFO">key2</msg>
<status status="PASS" starttime="20230109 03:22:08.754" endtime="20230109 03:22:08.755"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:22:08.756" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:22:08.755" endtime="20230109 03:22:08.756"/>
</kw>
<status status="PASS" starttime="20230109 03:22:01.561" endtime="20230109 03:22:08.756"/>
</kw>
<msg timestamp="20230109 03:22:08.756" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:22:01.561" endtime="20230109 03:22:08.757"/>
</kw>
<msg timestamp="20230109 03:22:08.758" level="INFO">${result} = key2</msg>
<status status="PASS" starttime="20230109 03:22:01.560" endtime="20230109 03:22:08.758"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230109 03:22:08.758" endtime="20230109 03:22:08.758"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:22:08.764" level="INFO">Running command 'ozone sh key delete o3://om:9862/84704-with-host/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:22:15.615" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:22:15.615" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230109 03:22:08.760" endtime="20230109 03:22:15.615"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:22:15.617" level="INFO"/>
<status status="PASS" starttime="20230109 03:22:15.616" endtime="20230109 03:22:15.617"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:22:15.618" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:22:15.617" endtime="20230109 03:22:15.618"/>
</kw>
<status status="PASS" starttime="20230109 03:22:08.760" endtime="20230109 03:22:15.618"/>
</kw>
<msg timestamp="20230109 03:22:15.619" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:22:08.759" endtime="20230109 03:22:15.619"/>
</kw>
<status status="PASS" starttime="20230109 03:22:08.759" endtime="20230109 03:22:15.620"/>
</kw>
<status status="PASS" starttime="20230109 03:20:04.379" endtime="20230109 03:22:15.620"/>
</kw>
<status status="PASS" starttime="20230109 03:20:04.379" endtime="20230109 03:22:15.620"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --space-quota ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:22:15.626" level="INFO">Running command 'ozone sh volume clrquota --space-quota o3://om:9862/84704-with-host 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:22:22.056" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:22:22.056" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230109 03:22:15.622" endtime="20230109 03:22:22.056"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:22:22.057" level="INFO"/>
<status status="PASS" starttime="20230109 03:22:22.056" endtime="20230109 03:22:22.057"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:22:22.058" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:22:22.058" endtime="20230109 03:22:22.059"/>
</kw>
<status status="PASS" starttime="20230109 03:22:15.622" endtime="20230109 03:22:22.060"/>
</kw>
<msg timestamp="20230109 03:22:22.060" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:22:15.621" endtime="20230109 03:22:22.060"/>
</kw>
<status status="PASS" starttime="20230109 03:22:15.620" endtime="20230109 03:22:22.061"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:22:22.069" level="INFO">Running command 'ozone sh volume info o3://om:9862/84704-with-host | jq -r '. | select(.name=="84704-with-host") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:22:29.405" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:22:29.405" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20230109 03:22:22.064" endtime="20230109 03:22:29.405"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:22:29.411" level="INFO">-1</msg>
<status status="PASS" starttime="20230109 03:22:29.407" endtime="20230109 03:22:29.411"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:22:29.412" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:22:29.411" endtime="20230109 03:22:29.412"/>
</kw>
<status status="PASS" starttime="20230109 03:22:22.063" endtime="20230109 03:22:29.413"/>
</kw>
<msg timestamp="20230109 03:22:29.413" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:22:22.063" endtime="20230109 03:22:29.413"/>
</kw>
<msg timestamp="20230109 03:22:29.414" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20230109 03:22:22.061" endtime="20230109 03:22:29.414"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230109 03:22:29.414" endtime="20230109 03:22:29.415"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --namespace-quota ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:22:29.421" level="INFO">Running command 'ozone sh volume clrquota --namespace-quota o3://om:9862/84704-with-host 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:22:36.129" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:22:36.129" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230109 03:22:29.418" endtime="20230109 03:22:36.129"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:22:36.130" level="INFO"/>
<status status="PASS" starttime="20230109 03:22:36.129" endtime="20230109 03:22:36.130"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:22:36.132" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:22:36.131" endtime="20230109 03:22:36.132"/>
</kw>
<status status="PASS" starttime="20230109 03:22:29.417" endtime="20230109 03:22:36.132"/>
</kw>
<msg timestamp="20230109 03:22:36.132" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:22:29.416" endtime="20230109 03:22:36.133"/>
</kw>
<status status="PASS" starttime="20230109 03:22:29.415" endtime="20230109 03:22:36.134"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:22:36.140" level="INFO">Running command 'ozone sh volume info o3://om:9862/84704-with-host | jq -r '. | select(.name=="84704-with-host") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:22:43.081" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:22:43.081" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20230109 03:22:36.136" endtime="20230109 03:22:43.081"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:22:43.083" level="INFO">-1</msg>
<status status="PASS" starttime="20230109 03:22:43.082" endtime="20230109 03:22:43.083"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:22:43.084" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:22:43.083" endtime="20230109 03:22:43.084"/>
</kw>
<status status="PASS" starttime="20230109 03:22:36.136" endtime="20230109 03:22:43.084"/>
</kw>
<msg timestamp="20230109 03:22:43.084" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:22:36.135" endtime="20230109 03:22:43.085"/>
</kw>
<msg timestamp="20230109 03:22:43.085" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20230109 03:22:36.134" endtime="20230109 03:22:43.086"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230109 03:22:43.086" endtime="20230109 03:22:43.086"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --space-quota ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:22:43.092" level="INFO">Running command 'ozone sh bucket clrquota --space-quota o3://om:9862/84704-with-host/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:22:49.458" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:22:49.458" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230109 03:22:43.089" endtime="20230109 03:22:49.458"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:22:49.461" level="INFO"/>
<status status="PASS" starttime="20230109 03:22:49.459" endtime="20230109 03:22:49.461"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:22:49.462" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:22:49.461" endtime="20230109 03:22:49.462"/>
</kw>
<status status="PASS" starttime="20230109 03:22:43.088" endtime="20230109 03:22:49.463"/>
</kw>
<msg timestamp="20230109 03:22:49.463" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:22:43.087" endtime="20230109 03:22:49.463"/>
</kw>
<status status="PASS" starttime="20230109 03:22:43.086" endtime="20230109 03:22:49.464"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:22:49.470" level="INFO">Running command 'ozone sh bucket info o3://om:9862/84704-with-host/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:22:56.305" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:22:56.305" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20230109 03:22:49.467" endtime="20230109 03:22:56.305"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:22:56.308" level="INFO">-1</msg>
<status status="PASS" starttime="20230109 03:22:56.307" endtime="20230109 03:22:56.309"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:22:56.309" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:22:56.309" endtime="20230109 03:22:56.310"/>
</kw>
<status status="PASS" starttime="20230109 03:22:49.466" endtime="20230109 03:22:56.311"/>
</kw>
<msg timestamp="20230109 03:22:56.311" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:22:49.466" endtime="20230109 03:22:56.313"/>
</kw>
<msg timestamp="20230109 03:22:56.313" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20230109 03:22:49.464" endtime="20230109 03:22:56.313"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230109 03:22:56.314" endtime="20230109 03:22:56.314"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --namespace-quota ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:22:56.329" level="INFO">Running command 'ozone sh bucket clrquota --namespace-quota o3://om:9862/84704-with-host/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:23:02.394" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:23:02.394" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230109 03:22:56.324" endtime="20230109 03:23:02.394"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:23:02.396" level="INFO"/>
<status status="PASS" starttime="20230109 03:23:02.395" endtime="20230109 03:23:02.396"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:23:02.397" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:23:02.397" endtime="20230109 03:23:02.397"/>
</kw>
<status status="PASS" starttime="20230109 03:22:56.323" endtime="20230109 03:23:02.398"/>
</kw>
<msg timestamp="20230109 03:23:02.398" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:22:56.323" endtime="20230109 03:23:02.399"/>
</kw>
<status status="PASS" starttime="20230109 03:22:56.314" endtime="20230109 03:23:02.400"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:23:02.407" level="INFO">Running command 'ozone sh bucket info o3://om:9862/84704-with-host/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:23:09.430" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:23:09.430" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20230109 03:23:02.402" endtime="20230109 03:23:09.430"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:23:09.432" level="INFO">-1</msg>
<status status="PASS" starttime="20230109 03:23:09.431" endtime="20230109 03:23:09.432"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:23:09.433" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:23:09.432" endtime="20230109 03:23:09.433"/>
</kw>
<status status="PASS" starttime="20230109 03:23:02.402" endtime="20230109 03:23:09.434"/>
</kw>
<msg timestamp="20230109 03:23:09.435" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:23:02.401" endtime="20230109 03:23:09.435"/>
</kw>
<msg timestamp="20230109 03:23:09.436" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20230109 03:23:02.400" endtime="20230109 03:23:09.436"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230109 03:23:09.436" endtime="20230109 03:23:09.437"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:23:09.442" level="INFO">Running command 'ozone sh bucket delete o3://om:9862/84704-with-host/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:23:15.849" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:23:15.849" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230109 03:23:09.439" endtime="20230109 03:23:15.849"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:23:15.852" level="INFO"/>
<status status="PASS" starttime="20230109 03:23:15.850" endtime="20230109 03:23:15.852"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:23:15.853" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:23:15.852" endtime="20230109 03:23:15.853"/>
</kw>
<status status="PASS" starttime="20230109 03:23:09.438" endtime="20230109 03:23:15.854"/>
</kw>
<msg timestamp="20230109 03:23:15.854" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:23:09.438" endtime="20230109 03:23:15.854"/>
</kw>
<status status="PASS" starttime="20230109 03:23:09.437" endtime="20230109 03:23:15.855"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:23:15.863" level="INFO">Running command 'ozone sh volume delete o3://om:9862/84704-with-host 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:23:22.238" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:23:22.238" level="INFO">${output} = Volume 84704-with-host is deleted</msg>
<status status="PASS" starttime="20230109 03:23:15.858" endtime="20230109 03:23:22.238"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:23:22.240" level="INFO">Volume 84704-with-host is deleted</msg>
<status status="PASS" starttime="20230109 03:23:22.239" endtime="20230109 03:23:22.240"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:23:22.242" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:23:22.240" endtime="20230109 03:23:22.243"/>
</kw>
<status status="PASS" starttime="20230109 03:23:15.858" endtime="20230109 03:23:22.244"/>
</kw>
<msg timestamp="20230109 03:23:22.244" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:23:15.857" endtime="20230109 03:23:22.245"/>
</kw>
<status status="PASS" starttime="20230109 03:23:15.856" endtime="20230109 03:23:22.245"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:23:22.253" level="INFO">Running command 'ozone sh volume create o3://om:9862/84704-with-host 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:23:28.736" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:23:28.737" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230109 03:23:22.248" endtime="20230109 03:23:28.737"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:23:28.738" level="INFO"/>
<status status="PASS" starttime="20230109 03:23:28.737" endtime="20230109 03:23:28.738"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:23:28.739" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:23:28.739" endtime="20230109 03:23:28.739"/>
</kw>
<status status="PASS" starttime="20230109 03:23:22.247" endtime="20230109 03:23:28.740"/>
</kw>
<msg timestamp="20230109 03:23:28.740" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:23:22.247" endtime="20230109 03:23:28.741"/>
</kw>
<status status="PASS" starttime="20230109 03:23:22.245" endtime="20230109 03:23:28.741"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:23:28.747" level="INFO">Running command 'ozone sh volume info o3://om:9862/84704-with-host | jq -r '. | select(.name=="84704-with-host") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:23:31.269" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20230109 03:23:28.744" endtime="20230109 03:23:31.269"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230109 03:23:31.270" endtime="20230109 03:23:31.270"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20230109 03:23:31.270" endtime="20230109 03:23:31.270"/>
</kw>
<status status="FAIL" starttime="20230109 03:23:28.743" endtime="20230109 03:23:31.271"/>
</kw>
<msg timestamp="20230109 03:23:31.271" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20230109 03:23:28.742" endtime="20230109 03:23:31.272"/>
</kw>
<status status="FAIL" starttime="20230109 03:23:28.741" endtime="20230109 03:23:31.272"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20230109 03:23:31.272" endtime="20230109 03:23:31.273"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20230109 03:23:31.273" endtime="20230109 03:23:31.273"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20230109 03:23:31.273" endtime="20230109 03:23:31.273"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20230109 03:23:31.273" endtime="20230109 03:23:31.273"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20230109 03:23:31.274" endtime="20230109 03:23:31.274"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20230109 03:23:31.274" endtime="20230109 03:23:31.274"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20230109 03:23:31.274" endtime="20230109 03:23:31.274"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20230109 03:23:31.274" endtime="20230109 03:23:31.275"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20230109 03:23:31.275" endtime="20230109 03:23:31.275"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20230109 03:23:31.276" endtime="20230109 03:23:31.277"/>
</kw>
<status status="FAIL" starttime="20230109 03:18:31.535" endtime="20230109 03:23:31.279"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20230109 03:18:31.268" endtime="20230109 03:23:31.279">Test timeout 5 minutes exceeded.</status>
</test>
<test id="s1-s1-s5-t2" name="RpcClient with execution errors" line="29">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:23:31.327" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:23:31.356" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:23:31.356" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230109 03:23:31.304" endtime="20230109 03:23:31.356"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:23:31.359" level="INFO">scm</msg>
<status status="PASS" starttime="20230109 03:23:31.358" endtime="20230109 03:23:31.360"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:23:31.361" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:23:31.360" endtime="20230109 03:23:31.361"/>
</kw>
<status status="PASS" starttime="20230109 03:23:31.301" endtime="20230109 03:23:31.361"/>
</kw>
<msg timestamp="20230109 03:23:31.361" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:23:31.300" endtime="20230109 03:23:31.363"/>
</kw>
<msg timestamp="20230109 03:23:31.363" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230109 03:23:31.297" endtime="20230109 03:23:31.364"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230109 03:23:31.370" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230109 03:23:31.365" endtime="20230109 03:23:31.371"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:23:31.397" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:23:31.639" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:23:31.639" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230109 03:23:31.383" endtime="20230109 03:23:31.639"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:23:31.642" level="INFO"/>
<status status="PASS" starttime="20230109 03:23:31.640" endtime="20230109 03:23:31.642"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:23:31.643" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:23:31.642" endtime="20230109 03:23:31.643"/>
</kw>
<status status="PASS" starttime="20230109 03:23:31.381" endtime="20230109 03:23:31.644"/>
</kw>
<msg timestamp="20230109 03:23:31.644" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:23:31.378" endtime="20230109 03:23:31.645"/>
</kw>
<status status="PASS" starttime="20230109 03:23:31.375" endtime="20230109 03:23:31.645"/>
</kw>
<status status="PASS" starttime="20230109 03:23:31.372" endtime="20230109 03:23:31.649"/>
</kw>
<status status="PASS" starttime="20230109 03:23:31.295" endtime="20230109 03:23:31.649"/>
</kw>
<status status="PASS" starttime="20230109 03:23:31.293" endtime="20230109 03:23:31.651"/>
</kw>
<kw name="Test ozone shell errors" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-with-errors</arg>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota invalid</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:23:31.675" level="INFO">Running command 'ozone sh volume create o3://om:9862/84704-with-errors --space-quota invalid 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:23:41.560" level="INFO">${rc} = 255</msg>
<msg timestamp="20230109 03:23:41.560" level="INFO">${output} = Invalid values for quota, to ensure that the Quota format is legal(supported values are B, KB, MB, GB and TB). And the quota value cannot be greater than Long.MAX_VALUE BYTES</msg>
<status status="PASS" starttime="20230109 03:23:31.659" endtime="20230109 03:23:41.560"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:23:41.562" level="INFO">Invalid values for quota, to ensure that the Quota format is legal(supported values are B, KB, MB, GB and TB). And the quota value cannot be greater than Long.MAX_VALUE BYTES</msg>
<status status="PASS" starttime="20230109 03:23:41.561" endtime="20230109 03:23:41.562"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:23:41.563" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:23:41.562" endtime="20230109 03:23:41.563"/>
</kw>
<msg timestamp="20230109 03:23:41.564" level="INFO">${result} = Invalid values for quota, to ensure that the Quota format is legal(supported values are B, KB, MB, GB and TB). And the quota value cannot be greater than Long.MAX_VALUE BYTES</msg>
<status status="PASS" starttime="20230109 03:23:31.657" endtime="20230109 03:23:41.564"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Invalid</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230109 03:23:41.564" endtime="20230109 03:23:41.564"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:23:41.569" level="INFO">Running command 'ozone sh volume create o3://om:9862/84704-with-errors 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:23:47.776" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:23:47.776" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230109 03:23:41.566" endtime="20230109 03:23:47.776"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:23:47.778" level="INFO"/>
<status status="PASS" starttime="20230109 03:23:47.777" endtime="20230109 03:23:47.778"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:23:47.779" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:23:47.778" endtime="20230109 03:23:47.779"/>
</kw>
<status status="PASS" starttime="20230109 03:23:41.565" endtime="20230109 03:23:47.779"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bucket_1</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:23:47.784" level="INFO">Running command 'ozone sh bucket create o3://om:9862/84704-with-errors/bucket_1 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:23:54.167" level="INFO">${rc} = 255</msg>
<msg timestamp="20230109 03:23:54.167" level="INFO">${output} = INVALID_BUCKET_NAME Bucket or Volume name has an unsupported character : _</msg>
<status status="PASS" starttime="20230109 03:23:47.781" endtime="20230109 03:23:54.167"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:23:54.169" level="INFO">INVALID_BUCKET_NAME Bucket or Volume name has an unsupported character : _</msg>
<status status="PASS" starttime="20230109 03:23:54.168" endtime="20230109 03:23:54.169"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:23:54.170" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:23:54.169" endtime="20230109 03:23:54.170"/>
</kw>
<msg timestamp="20230109 03:23:54.171" level="INFO">${result} = INVALID_BUCKET_NAME Bucket or Volume name has an unsupported character : _</msg>
<status status="PASS" starttime="20230109 03:23:47.780" endtime="20230109 03:23:54.171"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>INVALID_BUCKET_NAME</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230109 03:23:54.171" endtime="20230109 03:23:54.172"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bucket1 --layout Invalid</arg>
<arg>2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:23:54.176" level="INFO">Running command 'ozone sh bucket create o3://om:9862/84704-with-errors/bucket1 --layout Invalid 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:23:57.895" level="INFO">${rc} = 2</msg>
<msg timestamp="20230109 03:23:57.895" level="INFO">${output} = Invalid value for option '--layout': expected one of [FILE_SYSTEM_OPTIMIZED, OBJECT_STORE, LEGACY] (case-sensitive) but was 'Invalid'
Usage: ozone sh bucket create [-ghV] [-k=&lt;bekName&gt;] [-l=&lt;allowedBu...</msg>
<status status="PASS" starttime="20230109 03:23:54.173" endtime="20230109 03:23:57.895"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:23:57.897" level="INFO">Invalid value for option '--layout': expected one of [FILE_SYSTEM_OPTIMIZED, OBJECT_STORE, LEGACY] (case-sensitive) but was 'Invalid'
Usage: ozone sh bucket create [-ghV] [-k=&lt;bekName&gt;] [-l=&lt;allowedBucketLayout&gt;]
                              [--namespace-quota=&lt;quotaInNamespace&gt;]
                              [--quota=&lt;quotaInBytes&gt;] [-r=&lt;replication&gt;]
                              [-t=&lt;type&gt;] [-u=&lt;ownerName&gt;] &lt;value&gt;
creates a bucket in a given volume
      &lt;value&gt;              URI of the volume/bucket.
                           Ozone URI could either be a full URI or short URI.
                           Full URI should start with o3://, in case of non-HA
                           clusters it should be followed by the host name and
                           optionally the port number. In case of HA clusters
                           the service id should be used. Service id provides a
                           logical name for multiple hosts and it is defined
                           in the property ozone.om.service.ids.
                           Example of a full URI with host name and port number
                           for a key:
                           o3://omhostname:9862/vol1/bucket1/key1
                           With a service id for a volume:
                           o3://omserviceid/vol1/
                           Short URI should start from the volume.
                           Example of a short URI for a bucket:
                           vol1/bucket1
                           Any unspecified information will be identified from
                           the config files.

  -g, --enforcegdpr        if true, indicates GDPR enforced bucket,
                             false/unspecified indicates otherwise
  -h, --help               Show this help message and exit.
  -k, --bucketkey=&lt;bekName&gt;
                           bucket encryption key name
  -l, --layout=&lt;allowedBucketLayout&gt;
                           Allowed Bucket Layouts: FILE_SYSTEM_OPTIMIZED,
                             OBJECT_STORE, LEGACY
      --namespace-quota=&lt;quotaInNamespace&gt;
                           For volume this parameter represents the number of
                             buckets, and for buckets represents the number of
                             keys (eg. 5)
      --quota, --space-quota=&lt;quotaInBytes&gt;
                           The maximum space quota can be used (eg. 1GB)
  -r, --replication=&lt;replication&gt;
                           Replication definition. Valid values are replication
                             type-specific.  For RATIS: ONE or THREE. In case
                             of EC, pass CODEC-DATA-PARITY-CHUNKSIZE,  e.g.
                             rs-3-2-1024k, rs-6-3-1024k, rs-10-4-1024k
  -t, --type, --replication-type=&lt;type&gt;
                           Replication type. Supported types are: RATIS, EC
  -u, --user=&lt;ownerName&gt;   Owner of the bucket. Defaults to current user if not
                             specified
  -V, --version            Print version information and exit.</msg>
<status status="PASS" starttime="20230109 03:23:57.895" endtime="20230109 03:23:57.897"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:23:57.898" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:23:57.898" endtime="20230109 03:23:57.898"/>
</kw>
<msg timestamp="20230109 03:23:57.899" level="INFO">${result} = Invalid value for option '--layout': expected one of [FILE_SYSTEM_OPTIMIZED, OBJECT_STORE, LEGACY] (case-sensitive) but was 'Invalid'
Usage: ozone sh bucket create [-ghV] [-k=&lt;bekName&gt;] [-l=&lt;allowedBu...</msg>
<status status="PASS" starttime="20230109 03:23:54.172" endtime="20230109 03:23:57.899"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Usage</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230109 03:23:57.899" endtime="20230109 03:23:57.900"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bucket1</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:23:57.905" level="INFO">Running command 'ozone sh bucket create o3://om:9862/84704-with-errors/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:24:04.693" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:24:04.693" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230109 03:23:57.901" endtime="20230109 03:24:04.693"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:24:04.695" level="INFO"/>
<status status="PASS" starttime="20230109 03:24:04.694" endtime="20230109 03:24:04.695"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:24:04.696" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:24:04.695" endtime="20230109 03:24:04.696"/>
</kw>
<status status="PASS" starttime="20230109 03:23:57.900" endtime="20230109 03:24:04.697"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bucket1/non-existing</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:24:04.701" level="INFO">Running command 'ozone sh key info o3://om:9862/84704-with-errors/bucket1/non-existing 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:24:10.896" level="INFO">${rc} = 255</msg>
<msg timestamp="20230109 03:24:10.896" level="INFO">${output} = KEY_NOT_FOUND Key:non-existing not found</msg>
<status status="PASS" starttime="20230109 03:24:04.698" endtime="20230109 03:24:10.896"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:24:10.898" level="INFO">KEY_NOT_FOUND Key:non-existing not found</msg>
<status status="PASS" starttime="20230109 03:24:10.897" endtime="20230109 03:24:10.898"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:24:10.899" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:24:10.898" endtime="20230109 03:24:10.899"/>
</kw>
<msg timestamp="20230109 03:24:10.900" level="INFO">${result} = KEY_NOT_FOUND Key:non-existing not found</msg>
<status status="PASS" starttime="20230109 03:24:04.697" endtime="20230109 03:24:10.900"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>KEY_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230109 03:24:10.900" endtime="20230109 03:24:10.901"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh key put ${protocol}${server}/${volume}/bucket1/key1 unexisting --type invalid</arg>
<arg>2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:24:10.905" level="INFO">Running command 'ozone sh key put o3://om:9862/84704-with-errors/bucket1/key1 unexisting --type invalid 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:24:14.318" level="INFO">${rc} = 2</msg>
<msg timestamp="20230109 03:24:14.318" level="INFO">${output} = Could not invoke public void org.apache.hadoop.ozone.shell.ShellReplicationOptions.setType(java.lang.String) with invalid (java.lang.IllegalArgumentException: Invalid value 'invalid' for option '--typ...</msg>
<status status="PASS" starttime="20230109 03:24:10.902" endtime="20230109 03:24:14.318"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:24:14.320" level="INFO">Could not invoke public void org.apache.hadoop.ozone.shell.ShellReplicationOptions.setType(java.lang.String) with invalid (java.lang.IllegalArgumentException: Invalid value 'invalid' for option '--type'. No enum constant org.apache.hadoop.hdds.client.ReplicationType.invalid. Supported values are: RATIS, EC.)
Usage: ozone sh key put [-hV] [--stream] [-r=&lt;replication&gt;] [-t=&lt;type&gt;] &lt;value&gt;
                        &lt;fileName&gt;
creates or overwrites an existing key
      &lt;value&gt;      URI of the volume/bucket/key.
                   Ozone URI could either be a full URI or short URI.
                   Full URI should start with o3://, in case of non-HA
                   clusters it should be followed by the host name and
                   optionally the port number. In case of HA clusters
                   the service id should be used. Service id provides a
                   logical name for multiple hosts and it is defined
                   in the property ozone.om.service.ids.
                   Example of a full URI with host name and port number
                   for a key:
                   o3://omhostname:9862/vol1/bucket1/key1
                   With a service id for a volume:
                   o3://omserviceid/vol1/
                   Short URI should start from the volume.
                   Example of a short URI for a bucket:
                   vol1/bucket1
                   Any unspecified information will be identified from
                   the config files.

      &lt;fileName&gt;   File to upload
  -h, --help       Show this help message and exit.
  -r, --replication=&lt;replication&gt;
                   Replication definition. Valid values are replication
                     type-specific.  For RATIS: ONE or THREE. In case of EC,
                     pass CODEC-DATA-PARITY-CHUNKSIZE,  e.g. rs-3-2-1024k,
                     rs-6-3-1024k, rs-10-4-1024k
      --stream
  -t, --type, --replication-type=&lt;type&gt;
                   Replication type. Supported types are: RATIS, EC
  -V, --version    Print version information and exit.</msg>
<status status="PASS" starttime="20230109 03:24:14.319" endtime="20230109 03:24:14.320"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:24:14.321" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:24:14.320" endtime="20230109 03:24:14.321"/>
</kw>
<msg timestamp="20230109 03:24:14.321" level="INFO">${result} = Could not invoke public void org.apache.hadoop.ozone.shell.ShellReplicationOptions.setType(java.lang.String) with invalid (java.lang.IllegalArgumentException: Invalid value 'invalid' for option '--typ...</msg>
<status status="PASS" starttime="20230109 03:24:10.901" endtime="20230109 03:24:14.321"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bucket1</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:24:14.327" level="INFO">Running command 'ozone sh bucket delete o3://om:9862/84704-with-errors/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:24:20.797" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:24:20.797" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230109 03:24:14.322" endtime="20230109 03:24:20.797"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:24:20.800" level="INFO"/>
<status status="PASS" starttime="20230109 03:24:20.798" endtime="20230109 03:24:20.800"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:24:20.800" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:24:20.800" endtime="20230109 03:24:20.801"/>
</kw>
<status status="PASS" starttime="20230109 03:24:14.321" endtime="20230109 03:24:20.801"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:24:20.805" level="INFO">Running command 'ozone sh volume delete o3://om:9862/84704-with-errors 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:24:27.288" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:24:27.288" level="INFO">${output} = Volume 84704-with-errors is deleted</msg>
<status status="PASS" starttime="20230109 03:24:20.802" endtime="20230109 03:24:27.288"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:24:27.290" level="INFO">Volume 84704-with-errors is deleted</msg>
<status status="PASS" starttime="20230109 03:24:27.289" endtime="20230109 03:24:27.290"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:24:27.291" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:24:27.290" endtime="20230109 03:24:27.291"/>
</kw>
<status status="PASS" starttime="20230109 03:24:20.801" endtime="20230109 03:24:27.292"/>
</kw>
<status status="PASS" starttime="20230109 03:23:31.651" endtime="20230109 03:24:27.292"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230109 03:23:31.285" endtime="20230109 03:24:27.292"/>
</test>
<test id="s1-s1-s5-t3" name="RpcClient volume acls" line="32">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:24:27.301" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:24:27.307" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:24:27.307" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230109 03:24:27.298" endtime="20230109 03:24:27.307"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:24:27.309" level="INFO">scm</msg>
<status status="PASS" starttime="20230109 03:24:27.308" endtime="20230109 03:24:27.310"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:24:27.310" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:24:27.310" endtime="20230109 03:24:27.311"/>
</kw>
<status status="PASS" starttime="20230109 03:24:27.298" endtime="20230109 03:24:27.311"/>
</kw>
<msg timestamp="20230109 03:24:27.311" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:24:27.297" endtime="20230109 03:24:27.312"/>
</kw>
<msg timestamp="20230109 03:24:27.312" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230109 03:24:27.297" endtime="20230109 03:24:27.312"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230109 03:24:27.313" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230109 03:24:27.313" endtime="20230109 03:24:27.313"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:24:27.321" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:24:27.514" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:24:27.514" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230109 03:24:27.317" endtime="20230109 03:24:27.514"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:24:27.516" level="INFO"/>
<status status="PASS" starttime="20230109 03:24:27.515" endtime="20230109 03:24:27.516"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:24:27.517" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:24:27.516" endtime="20230109 03:24:27.517"/>
</kw>
<status status="PASS" starttime="20230109 03:24:27.317" endtime="20230109 03:24:27.518"/>
</kw>
<msg timestamp="20230109 03:24:27.518" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:24:27.316" endtime="20230109 03:24:27.518"/>
</kw>
<status status="PASS" starttime="20230109 03:24:27.314" endtime="20230109 03:24:27.519"/>
</kw>
<status status="PASS" starttime="20230109 03:24:27.313" endtime="20230109 03:24:27.519"/>
</kw>
<status status="PASS" starttime="20230109 03:24:27.296" endtime="20230109 03:24:27.519"/>
</kw>
<status status="PASS" starttime="20230109 03:24:27.295" endtime="20230109 03:24:27.519"/>
</kw>
<kw name="Test Volume Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-acls</arg>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:24:27.526" level="INFO">Running command 'ozone sh volume create o3://om:9862/84704-acls 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:24:34.077" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:24:34.077" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230109 03:24:27.523" endtime="20230109 03:24:34.077"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:24:34.079" level="INFO"/>
<status status="PASS" starttime="20230109 03:24:34.078" endtime="20230109 03:24:34.079"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:24:34.080" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:24:34.080" endtime="20230109 03:24:34.080"/>
</kw>
<status status="PASS" starttime="20230109 03:24:27.522" endtime="20230109 03:24:34.081"/>
</kw>
<msg timestamp="20230109 03:24:34.081" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:24:27.522" endtime="20230109 03:24:34.082"/>
</kw>
<status status="PASS" starttime="20230109 03:24:27.521" endtime="20230109 03:24:34.082"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:24:34.087" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/84704-acls 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:24:40.336" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:24:40.337" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20230109 03:24:34.084" endtime="20230109 03:24:40.337"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:24:40.338" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20230109 03:24:40.337" endtime="20230109 03:24:40.339"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:24:40.339" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:24:40.339" endtime="20230109 03:24:40.340"/>
</kw>
<status status="PASS" starttime="20230109 03:24:34.084" endtime="20230109 03:24:40.340"/>
</kw>
<msg timestamp="20230109 03:24:40.340" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:24:34.083" endtime="20230109 03:24:40.341"/>
</kw>
<msg timestamp="20230109 03:24:40.341" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20230109 03:24:34.082" endtime="20230109 03:24:40.341"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20230109 03:24:40.342" endtime="20230109 03:24:40.343"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume addacl ${protocol}${server}/${volume} -a user:superuser1:rwxy[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:24:40.350" level="INFO">Running command 'ozone sh volume addacl o3://om:9862/84704-acls -a user:superuser1:rwxy[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:24:46.350" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:24:46.351" level="INFO">${output} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20230109 03:24:40.346" endtime="20230109 03:24:46.351"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:24:46.355" level="INFO">ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20230109 03:24:46.351" endtime="20230109 03:24:46.355"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:24:46.356" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:24:46.356" endtime="20230109 03:24:46.357"/>
</kw>
<status status="PASS" starttime="20230109 03:24:40.344" endtime="20230109 03:24:46.357"/>
</kw>
<msg timestamp="20230109 03:24:46.357" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:24:40.344" endtime="20230109 03:24:46.358"/>
</kw>
<msg timestamp="20230109 03:24:46.358" level="INFO">${result} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20230109 03:24:40.343" endtime="20230109 03:24:46.358"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:24:46.364" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/84704-acls 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:24:53.128" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:24:53.129" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "...</msg>
<status status="PASS" starttime="20230109 03:24:46.360" endtime="20230109 03:24:53.129"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:24:53.131" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20230109 03:24:53.130" endtime="20230109 03:24:53.131"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:24:53.132" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:24:53.131" endtime="20230109 03:24:53.132"/>
</kw>
<status status="PASS" starttime="20230109 03:24:46.359" endtime="20230109 03:24:53.133"/>
</kw>
<msg timestamp="20230109 03:24:53.133" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:24:46.359" endtime="20230109 03:24:53.133"/>
</kw>
<msg timestamp="20230109 03:24:53.134" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "...</msg>
<status status="PASS" starttime="20230109 03:24:46.358" endtime="20230109 03:24:53.134"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20230109 03:24:53.134" endtime="20230109 03:24:53.135"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume removeacl ${protocol}${server}/${volume} -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:24:53.141" level="INFO">Running command 'ozone sh volume removeacl o3://om:9862/84704-acls -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:24:59.712" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:24:59.712" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20230109 03:24:53.138" endtime="20230109 03:24:59.712"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:24:59.714" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20230109 03:24:59.713" endtime="20230109 03:24:59.714"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:24:59.715" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:24:59.714" endtime="20230109 03:24:59.715"/>
</kw>
<status status="PASS" starttime="20230109 03:24:53.137" endtime="20230109 03:24:59.716"/>
</kw>
<msg timestamp="20230109 03:24:59.716" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:24:53.137" endtime="20230109 03:24:59.716"/>
</kw>
<msg timestamp="20230109 03:24:59.717" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20230109 03:24:53.136" endtime="20230109 03:24:59.717"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:24:59.724" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/84704-acls 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:25:06.881" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:25:06.882" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "...</msg>
<status status="PASS" starttime="20230109 03:24:59.719" endtime="20230109 03:25:06.882"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:25:06.883" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20230109 03:25:06.882" endtime="20230109 03:25:06.883"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:25:06.884" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:25:06.883" endtime="20230109 03:25:06.884"/>
</kw>
<status status="PASS" starttime="20230109 03:24:59.718" endtime="20230109 03:25:06.886"/>
</kw>
<msg timestamp="20230109 03:25:06.887" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:24:59.718" endtime="20230109 03:25:06.888"/>
</kw>
<msg timestamp="20230109 03:25:06.888" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "...</msg>
<status status="PASS" starttime="20230109 03:24:59.717" endtime="20230109 03:25:06.888"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20230109 03:25:06.888" endtime="20230109 03:25:06.889"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume setacl ${protocol}${server}/${volume} -al user:superuser1:rwxy[DEFAULT],group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:25:06.895" level="INFO">Running command 'ozone sh volume setacl o3://om:9862/84704-acls -al user:superuser1:rwxy[DEFAULT],group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:25:13.214" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:25:13.214" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20230109 03:25:06.892" endtime="20230109 03:25:13.214"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:25:13.218" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20230109 03:25:13.215" endtime="20230109 03:25:13.218"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:25:13.219" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:25:13.218" endtime="20230109 03:25:13.219"/>
</kw>
<status status="PASS" starttime="20230109 03:25:06.891" endtime="20230109 03:25:13.219"/>
</kw>
<msg timestamp="20230109 03:25:13.219" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:25:06.890" endtime="20230109 03:25:13.220"/>
</kw>
<msg timestamp="20230109 03:25:13.221" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20230109 03:25:06.890" endtime="20230109 03:25:13.221"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:25:13.228" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/84704-acls 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:25:19.776" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:25:19.776" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20230109 03:25:13.223" endtime="20230109 03:25:19.777"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:25:19.778" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20230109 03:25:19.777" endtime="20230109 03:25:19.779"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:25:19.780" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:25:19.779" endtime="20230109 03:25:19.780"/>
</kw>
<status status="PASS" starttime="20230109 03:25:13.222" endtime="20230109 03:25:19.780"/>
</kw>
<msg timestamp="20230109 03:25:19.781" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:25:13.222" endtime="20230109 03:25:19.781"/>
</kw>
<msg timestamp="20230109 03:25:19.782" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20230109 03:25:13.221" endtime="20230109 03:25:19.782"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20230109 03:25:19.782" endtime="20230109 03:25:19.783"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20230109 03:25:19.783" endtime="20230109 03:25:19.784"/>
</kw>
<status status="PASS" starttime="20230109 03:24:27.520" endtime="20230109 03:25:19.784"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230109 03:24:27.294" endtime="20230109 03:25:19.785"/>
</test>
<test id="s1-s1-s5-t4" name="RpcClient bucket acls" line="35">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:25:19.800" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:25:19.805" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:25:19.805" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230109 03:25:19.796" endtime="20230109 03:25:19.805"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:25:19.806" level="INFO">scm</msg>
<status status="PASS" starttime="20230109 03:25:19.805" endtime="20230109 03:25:19.806"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:25:19.807" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:25:19.806" endtime="20230109 03:25:19.807"/>
</kw>
<status status="PASS" starttime="20230109 03:25:19.795" endtime="20230109 03:25:19.808"/>
</kw>
<msg timestamp="20230109 03:25:19.808" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:25:19.794" endtime="20230109 03:25:19.808"/>
</kw>
<msg timestamp="20230109 03:25:19.809" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230109 03:25:19.793" endtime="20230109 03:25:19.809"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230109 03:25:19.810" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230109 03:25:19.809" endtime="20230109 03:25:19.810"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:25:19.815" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:25:19.969" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:25:19.969" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230109 03:25:19.813" endtime="20230109 03:25:19.969"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:25:19.971" level="INFO"/>
<status status="PASS" starttime="20230109 03:25:19.970" endtime="20230109 03:25:19.971"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:25:19.972" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:25:19.971" endtime="20230109 03:25:19.972"/>
</kw>
<status status="PASS" starttime="20230109 03:25:19.812" endtime="20230109 03:25:19.973"/>
</kw>
<msg timestamp="20230109 03:25:19.973" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:25:19.811" endtime="20230109 03:25:19.974"/>
</kw>
<status status="PASS" starttime="20230109 03:25:19.810" endtime="20230109 03:25:19.975"/>
</kw>
<status status="PASS" starttime="20230109 03:25:19.810" endtime="20230109 03:25:19.976"/>
</kw>
<status status="PASS" starttime="20230109 03:25:19.792" endtime="20230109 03:25:19.976"/>
</kw>
<status status="PASS" starttime="20230109 03:25:19.792" endtime="20230109 03:25:19.977"/>
</kw>
<kw name="Test Bucket Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-acls</arg>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:25:19.985" level="INFO">Running command 'ozone sh bucket create o3://om:9862/84704-acls/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:25:26.958" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:25:26.958" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230109 03:25:19.981" endtime="20230109 03:25:26.958"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:25:26.960" level="INFO"/>
<status status="PASS" starttime="20230109 03:25:26.959" endtime="20230109 03:25:26.960"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:25:26.961" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:25:26.960" endtime="20230109 03:25:26.961"/>
</kw>
<status status="PASS" starttime="20230109 03:25:19.980" endtime="20230109 03:25:26.961"/>
</kw>
<msg timestamp="20230109 03:25:26.961" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:25:19.979" endtime="20230109 03:25:26.962"/>
</kw>
<status status="PASS" starttime="20230109 03:25:19.978" endtime="20230109 03:25:26.962"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:25:26.968" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/84704-acls/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:25:33.825" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:25:33.825" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ ...</msg>
<status status="PASS" starttime="20230109 03:25:26.965" endtime="20230109 03:25:33.825"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:25:33.827" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20230109 03:25:33.826" endtime="20230109 03:25:33.827"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:25:33.828" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:25:33.827" endtime="20230109 03:25:33.828"/>
</kw>
<status status="PASS" starttime="20230109 03:25:26.964" endtime="20230109 03:25:33.828"/>
</kw>
<msg timestamp="20230109 03:25:33.828" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:25:26.964" endtime="20230109 03:25:33.829"/>
</kw>
<msg timestamp="20230109 03:25:33.829" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ ...</msg>
<status status="PASS" starttime="20230109 03:25:26.963" endtime="20230109 03:25:33.829"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20230109 03:25:33.830" endtime="20230109 03:25:33.830"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket addacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:rwxy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:25:33.837" level="INFO">Running command 'ozone sh bucket addacl o3://om:9862/84704-acls/bb1 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:25:40.621" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:25:40.621" level="INFO">${output} = ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20230109 03:25:33.833" endtime="20230109 03:25:40.621"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:25:40.623" level="INFO">ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20230109 03:25:40.622" endtime="20230109 03:25:40.623"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:25:40.624" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:25:40.623" endtime="20230109 03:25:40.624"/>
</kw>
<status status="PASS" starttime="20230109 03:25:33.832" endtime="20230109 03:25:40.624"/>
</kw>
<msg timestamp="20230109 03:25:40.625" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:25:33.832" endtime="20230109 03:25:40.626"/>
</kw>
<msg timestamp="20230109 03:25:40.626" level="INFO">${result} = ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20230109 03:25:33.831" endtime="20230109 03:25:40.626"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:25:40.632" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/84704-acls/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:25:47.441" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:25:47.441" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ ...</msg>
<status status="PASS" starttime="20230109 03:25:40.629" endtime="20230109 03:25:47.441"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:25:47.443" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20230109 03:25:47.442" endtime="20230109 03:25:47.443"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:25:47.444" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:25:47.444" endtime="20230109 03:25:47.445"/>
</kw>
<status status="PASS" starttime="20230109 03:25:40.628" endtime="20230109 03:25:47.445"/>
</kw>
<msg timestamp="20230109 03:25:47.445" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:25:40.627" endtime="20230109 03:25:47.446"/>
</kw>
<msg timestamp="20230109 03:25:47.446" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ ...</msg>
<status status="PASS" starttime="20230109 03:25:40.626" endtime="20230109 03:25:47.446"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20230109 03:25:47.446" endtime="20230109 03:25:47.448"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket removeacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:25:47.454" level="INFO">Running command 'ozone sh bucket removeacl o3://om:9862/84704-acls/bb1 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:25:53.646" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:25:53.646" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20230109 03:25:47.450" endtime="20230109 03:25:53.646"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:25:53.648" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20230109 03:25:53.647" endtime="20230109 03:25:53.648"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:25:53.649" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:25:53.649" endtime="20230109 03:25:53.649"/>
</kw>
<status status="PASS" starttime="20230109 03:25:47.450" endtime="20230109 03:25:53.650"/>
</kw>
<msg timestamp="20230109 03:25:53.650" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:25:47.449" endtime="20230109 03:25:53.651"/>
</kw>
<msg timestamp="20230109 03:25:53.651" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20230109 03:25:47.448" endtime="20230109 03:25:53.651"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:25:53.657" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/84704-acls/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:26:00.075" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:26:00.075" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ ...</msg>
<status status="PASS" starttime="20230109 03:25:53.653" endtime="20230109 03:26:00.075"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:26:00.077" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20230109 03:26:00.076" endtime="20230109 03:26:00.077"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:26:00.078" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:26:00.078" endtime="20230109 03:26:00.078"/>
</kw>
<status status="PASS" starttime="20230109 03:25:53.653" endtime="20230109 03:26:00.079"/>
</kw>
<msg timestamp="20230109 03:26:00.079" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:25:53.652" endtime="20230109 03:26:00.080"/>
</kw>
<msg timestamp="20230109 03:26:00.081" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ ...</msg>
<status status="PASS" starttime="20230109 03:25:53.651" endtime="20230109 03:26:00.081"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20230109 03:26:00.081" endtime="20230109 03:26:00.082"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket setacl ${protocol}${server}/${volume}/bb1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:26:00.088" level="INFO">Running command 'ozone sh bucket setacl o3://om:9862/84704-acls/bb1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:26:06.368" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:26:06.368" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20230109 03:26:00.085" endtime="20230109 03:26:06.368"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:26:06.370" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20230109 03:26:06.369" endtime="20230109 03:26:06.370"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:26:06.371" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:26:06.370" endtime="20230109 03:26:06.371"/>
</kw>
<status status="PASS" starttime="20230109 03:26:00.085" endtime="20230109 03:26:06.372"/>
</kw>
<msg timestamp="20230109 03:26:06.372" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:26:00.084" endtime="20230109 03:26:06.373"/>
</kw>
<msg timestamp="20230109 03:26:06.373" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20230109 03:26:00.083" endtime="20230109 03:26:06.373"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:26:06.379" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/84704-acls/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:26:13.502" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:26:13.502" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20230109 03:26:06.376" endtime="20230109 03:26:13.502"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:26:13.504" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20230109 03:26:13.503" endtime="20230109 03:26:13.504"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:26:13.505" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:26:13.505" endtime="20230109 03:26:13.506"/>
</kw>
<status status="PASS" starttime="20230109 03:26:06.375" endtime="20230109 03:26:13.506"/>
</kw>
<msg timestamp="20230109 03:26:13.506" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:26:06.375" endtime="20230109 03:26:13.507"/>
</kw>
<msg timestamp="20230109 03:26:13.508" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20230109 03:26:06.374" endtime="20230109 03:26:13.508"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20230109 03:26:13.508" endtime="20230109 03:26:13.508"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20230109 03:26:13.509" endtime="20230109 03:26:13.509"/>
</kw>
<status status="PASS" starttime="20230109 03:25:19.977" endtime="20230109 03:26:13.509"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230109 03:25:19.789" endtime="20230109 03:26:13.510"/>
</test>
<test id="s1-s1-s5-t5" name="RpcClient key acls" line="38">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:26:13.519" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:26:13.526" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:26:13.526" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230109 03:26:13.515" endtime="20230109 03:26:13.526"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:26:13.528" level="INFO">scm</msg>
<status status="PASS" starttime="20230109 03:26:13.526" endtime="20230109 03:26:13.528"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:26:13.529" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:26:13.528" endtime="20230109 03:26:13.529"/>
</kw>
<status status="PASS" starttime="20230109 03:26:13.514" endtime="20230109 03:26:13.529"/>
</kw>
<msg timestamp="20230109 03:26:13.529" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:26:13.514" endtime="20230109 03:26:13.530"/>
</kw>
<msg timestamp="20230109 03:26:13.530" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230109 03:26:13.513" endtime="20230109 03:26:13.531"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230109 03:26:13.532" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230109 03:26:13.531" endtime="20230109 03:26:13.532"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:26:13.538" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:26:13.726" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:26:13.726" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230109 03:26:13.535" endtime="20230109 03:26:13.726"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:26:13.728" level="INFO"/>
<status status="PASS" starttime="20230109 03:26:13.727" endtime="20230109 03:26:13.728"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:26:13.729" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:26:13.728" endtime="20230109 03:26:13.729"/>
</kw>
<status status="PASS" starttime="20230109 03:26:13.534" endtime="20230109 03:26:13.729"/>
</kw>
<msg timestamp="20230109 03:26:13.730" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:26:13.534" endtime="20230109 03:26:13.730"/>
</kw>
<status status="PASS" starttime="20230109 03:26:13.533" endtime="20230109 03:26:13.731"/>
</kw>
<status status="PASS" starttime="20230109 03:26:13.532" endtime="20230109 03:26:13.731"/>
</kw>
<status status="PASS" starttime="20230109 03:26:13.513" endtime="20230109 03:26:13.731"/>
</kw>
<status status="PASS" starttime="20230109 03:26:13.512" endtime="20230109 03:26:13.731"/>
</kw>
<kw name="Test key Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-acls</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key2 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:26:13.738" level="INFO">Running command 'ozone sh key put o3://om:9862/84704-acls/bb1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:26:24.023" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:26:24.023" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230109 03:26:13.734" endtime="20230109 03:26:24.023"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:26:24.026" level="INFO"/>
<status status="PASS" starttime="20230109 03:26:24.024" endtime="20230109 03:26:24.026"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:26:24.027" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:26:24.027" endtime="20230109 03:26:24.027"/>
</kw>
<status status="PASS" starttime="20230109 03:26:13.734" endtime="20230109 03:26:24.028"/>
</kw>
<msg timestamp="20230109 03:26:24.028" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:26:13.733" endtime="20230109 03:26:24.028"/>
</kw>
<status status="PASS" starttime="20230109 03:26:13.732" endtime="20230109 03:26:24.029"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:26:24.035" level="INFO">Running command 'ozone sh key getacl o3://om:9862/84704-acls/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:26:30.531" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:26:30.531" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ ...</msg>
<status status="PASS" starttime="20230109 03:26:24.031" endtime="20230109 03:26:30.531"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:26:30.533" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20230109 03:26:30.532" endtime="20230109 03:26:30.533"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:26:30.534" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:26:30.533" endtime="20230109 03:26:30.535"/>
</kw>
<status status="PASS" starttime="20230109 03:26:24.030" endtime="20230109 03:26:30.535"/>
</kw>
<msg timestamp="20230109 03:26:30.535" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:26:24.030" endtime="20230109 03:26:30.536"/>
</kw>
<msg timestamp="20230109 03:26:30.536" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ ...</msg>
<status status="PASS" starttime="20230109 03:26:24.029" endtime="20230109 03:26:30.536"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20230109 03:26:30.537" endtime="20230109 03:26:30.537"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key addacl ${protocol}${server}/${volume}/bb1/key2 -a user:superuser1:rwxy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:26:30.544" level="INFO">Running command 'ozone sh key addacl o3://om:9862/84704-acls/bb1/key2 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:26:36.749" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:26:36.749" level="INFO">${output} = ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20230109 03:26:30.540" endtime="20230109 03:26:36.749"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:26:36.751" level="INFO">ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20230109 03:26:36.750" endtime="20230109 03:26:36.751"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:26:36.752" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:26:36.751" endtime="20230109 03:26:36.752"/>
</kw>
<status status="PASS" starttime="20230109 03:26:30.539" endtime="20230109 03:26:36.753"/>
</kw>
<msg timestamp="20230109 03:26:36.753" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:26:30.539" endtime="20230109 03:26:36.754"/>
</kw>
<msg timestamp="20230109 03:26:36.754" level="INFO">${result} = ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20230109 03:26:30.538" endtime="20230109 03:26:36.754"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:26:36.761" level="INFO">Running command 'ozone sh key getacl o3://om:9862/84704-acls/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:26:43.522" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:26:43.522" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ ...</msg>
<status status="PASS" starttime="20230109 03:26:36.757" endtime="20230109 03:26:43.522"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:26:43.524" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20230109 03:26:43.523" endtime="20230109 03:26:43.525"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:26:43.526" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:26:43.525" endtime="20230109 03:26:43.526"/>
</kw>
<status status="PASS" starttime="20230109 03:26:36.756" endtime="20230109 03:26:43.527"/>
</kw>
<msg timestamp="20230109 03:26:43.527" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:26:36.756" endtime="20230109 03:26:43.528"/>
</kw>
<msg timestamp="20230109 03:26:43.529" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ ...</msg>
<status status="PASS" starttime="20230109 03:26:36.755" endtime="20230109 03:26:43.529"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20230109 03:26:43.530" endtime="20230109 03:26:43.531"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key removeacl ${protocol}${server}/${volume}/bb1/key2 -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:26:43.537" level="INFO">Running command 'ozone sh key removeacl o3://om:9862/84704-acls/bb1/key2 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:26:49.380" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:26:49.380" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20230109 03:26:43.533" endtime="20230109 03:26:49.380"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:26:49.383" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20230109 03:26:49.381" endtime="20230109 03:26:49.383"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:26:49.384" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:26:49.383" endtime="20230109 03:26:49.384"/>
</kw>
<status status="PASS" starttime="20230109 03:26:43.533" endtime="20230109 03:26:49.385"/>
</kw>
<msg timestamp="20230109 03:26:49.385" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:26:43.532" endtime="20230109 03:26:49.386"/>
</kw>
<msg timestamp="20230109 03:26:49.387" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20230109 03:26:43.531" endtime="20230109 03:26:49.387"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:26:49.392" level="INFO">Running command 'ozone sh key getacl o3://om:9862/84704-acls/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:26:55.672" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:26:55.672" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ ...</msg>
<status status="PASS" starttime="20230109 03:26:49.389" endtime="20230109 03:26:55.672"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:26:55.674" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
} ]</msg>
<status status="PASS" starttime="20230109 03:26:55.673" endtime="20230109 03:26:55.674"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:26:55.675" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:26:55.674" endtime="20230109 03:26:55.675"/>
</kw>
<status status="PASS" starttime="20230109 03:26:49.388" endtime="20230109 03:26:55.676"/>
</kw>
<msg timestamp="20230109 03:26:55.676" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:26:49.388" endtime="20230109 03:26:55.676"/>
</kw>
<msg timestamp="20230109 03:26:55.677" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ ...</msg>
<status status="PASS" starttime="20230109 03:26:49.387" endtime="20230109 03:26:55.677"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20230109 03:26:55.677" endtime="20230109 03:26:55.678"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key setacl ${protocol}${server}/${volume}/bb1/key2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:26:55.684" level="INFO">Running command 'ozone sh key setacl o3://om:9862/84704-acls/bb1/key2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:27:01.506" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:27:01.506" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20230109 03:26:55.680" endtime="20230109 03:27:01.506"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:27:01.508" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20230109 03:27:01.507" endtime="20230109 03:27:01.508"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:27:01.509" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:27:01.509" endtime="20230109 03:27:01.509"/>
</kw>
<status status="PASS" starttime="20230109 03:26:55.679" endtime="20230109 03:27:01.510"/>
</kw>
<msg timestamp="20230109 03:27:01.510" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:26:55.679" endtime="20230109 03:27:01.511"/>
</kw>
<msg timestamp="20230109 03:27:01.511" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20230109 03:26:55.678" endtime="20230109 03:27:01.511"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:27:01.518" level="INFO">Running command 'ozone sh key getacl o3://om:9862/84704-acls/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:27:08.344" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:27:08.344" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20230109 03:27:01.515" endtime="20230109 03:27:08.344"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:27:08.346" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20230109 03:27:08.345" endtime="20230109 03:27:08.346"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:27:08.347" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:27:08.346" endtime="20230109 03:27:08.347"/>
</kw>
<status status="PASS" starttime="20230109 03:27:01.514" endtime="20230109 03:27:08.347"/>
</kw>
<msg timestamp="20230109 03:27:08.348" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:27:01.513" endtime="20230109 03:27:08.348"/>
</kw>
<msg timestamp="20230109 03:27:08.349" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20230109 03:27:01.512" endtime="20230109 03:27:08.349"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20230109 03:27:08.349" endtime="20230109 03:27:08.350"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20230109 03:27:08.350" endtime="20230109 03:27:08.351"/>
</kw>
<status status="PASS" starttime="20230109 03:26:13.731" endtime="20230109 03:27:08.352"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230109 03:26:13.511" endtime="20230109 03:27:08.352"/>
</test>
<test id="s1-s1-s5-t6" name="RpcClient prefix acls" line="41">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:27:08.361" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:27:08.366" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:27:08.366" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230109 03:27:08.358" endtime="20230109 03:27:08.366"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:27:08.368" level="INFO">scm</msg>
<status status="PASS" starttime="20230109 03:27:08.367" endtime="20230109 03:27:08.368"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:27:08.369" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:27:08.368" endtime="20230109 03:27:08.369"/>
</kw>
<status status="PASS" starttime="20230109 03:27:08.357" endtime="20230109 03:27:08.370"/>
</kw>
<msg timestamp="20230109 03:27:08.370" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:27:08.357" endtime="20230109 03:27:08.371"/>
</kw>
<msg timestamp="20230109 03:27:08.371" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230109 03:27:08.356" endtime="20230109 03:27:08.371"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230109 03:27:08.372" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230109 03:27:08.372" endtime="20230109 03:27:08.372"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:27:08.378" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:27:08.498" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:27:08.498" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230109 03:27:08.375" endtime="20230109 03:27:08.498"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:27:08.500" level="INFO"/>
<status status="PASS" starttime="20230109 03:27:08.499" endtime="20230109 03:27:08.500"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:27:08.501" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:27:08.500" endtime="20230109 03:27:08.502"/>
</kw>
<status status="PASS" starttime="20230109 03:27:08.374" endtime="20230109 03:27:08.502"/>
</kw>
<msg timestamp="20230109 03:27:08.502" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:27:08.374" endtime="20230109 03:27:08.503"/>
</kw>
<status status="PASS" starttime="20230109 03:27:08.373" endtime="20230109 03:27:08.503"/>
</kw>
<status status="PASS" starttime="20230109 03:27:08.372" endtime="20230109 03:27:08.504"/>
</kw>
<status status="PASS" starttime="20230109 03:27:08.355" endtime="20230109 03:27:08.504"/>
</kw>
<status status="PASS" starttime="20230109 03:27:08.355" endtime="20230109 03:27:08.504"/>
</kw>
<kw name="Test prefix Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-acls</arg>
<kw name="Execute" library="os">
<arg>ozone sh prefix addacl ${protocol}${server}/${volume}/bb1/prefix1/ -a user:superuser1:rwxy[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:27:08.512" level="INFO">Running command 'ozone sh prefix addacl o3://om:9862/84704-acls/bb1/prefix1/ -a user:superuser1:rwxy[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:27:15.156" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:27:15.156" level="INFO">${output} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20230109 03:27:08.508" endtime="20230109 03:27:15.156"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:27:15.158" level="INFO">ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20230109 03:27:15.157" endtime="20230109 03:27:15.158"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:27:15.159" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:27:15.158" endtime="20230109 03:27:15.159"/>
</kw>
<status status="PASS" starttime="20230109 03:27:08.507" endtime="20230109 03:27:15.160"/>
</kw>
<msg timestamp="20230109 03:27:15.160" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:27:08.507" endtime="20230109 03:27:15.161"/>
</kw>
<status status="PASS" starttime="20230109 03:27:08.506" endtime="20230109 03:27:15.161"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix getacl ${protocol}${server}/${volume}/bb1/prefix1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:27:15.168" level="INFO">Running command 'ozone sh prefix getacl o3://om:9862/84704-acls/bb1/prefix1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:27:21.696" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:27:21.696" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20230109 03:27:15.164" endtime="20230109 03:27:21.696"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:27:21.698" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20230109 03:27:21.697" endtime="20230109 03:27:21.698"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:27:21.699" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:27:21.698" endtime="20230109 03:27:21.699"/>
</kw>
<status status="PASS" starttime="20230109 03:27:15.163" endtime="20230109 03:27:21.700"/>
</kw>
<msg timestamp="20230109 03:27:21.700" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:27:15.163" endtime="20230109 03:27:21.701"/>
</kw>
<msg timestamp="20230109 03:27:21.702" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20230109 03:27:15.161" endtime="20230109 03:27:21.702"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20230109 03:27:21.702" endtime="20230109 03:27:21.703"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix removeacl ${protocol}${server}/${volume}/bb1/prefix1/ -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:27:21.720" level="INFO">Running command 'ozone sh prefix removeacl o3://om:9862/84704-acls/bb1/prefix1/ -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:27:27.839" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:27:27.840" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20230109 03:27:21.715" endtime="20230109 03:27:27.840"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:27:27.841" level="INFO">ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20230109 03:27:27.840" endtime="20230109 03:27:27.842"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:27:27.842" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:27:27.842" endtime="20230109 03:27:27.843"/>
</kw>
<status status="PASS" starttime="20230109 03:27:21.714" endtime="20230109 03:27:27.843"/>
</kw>
<msg timestamp="20230109 03:27:27.843" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:27:21.713" endtime="20230109 03:27:27.844"/>
</kw>
<msg timestamp="20230109 03:27:27.844" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20230109 03:27:21.703" endtime="20230109 03:27:27.844"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix getacl ${protocol}${server}/${volume}/bb1/prefix1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:27:27.850" level="INFO">Running command 'ozone sh prefix getacl o3://om:9862/84704-acls/bb1/prefix1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:27:34.455" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:27:34.455" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20230109 03:27:27.847" endtime="20230109 03:27:34.455"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:27:34.458" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20230109 03:27:34.456" endtime="20230109 03:27:34.458"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:27:34.459" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:27:34.458" endtime="20230109 03:27:34.459"/>
</kw>
<status status="PASS" starttime="20230109 03:27:27.846" endtime="20230109 03:27:34.459"/>
</kw>
<msg timestamp="20230109 03:27:34.460" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:27:27.846" endtime="20230109 03:27:34.460"/>
</kw>
<msg timestamp="20230109 03:27:34.461" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20230109 03:27:27.845" endtime="20230109 03:27:34.461"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20230109 03:27:34.461" endtime="20230109 03:27:34.462"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix setacl ${protocol}${server}/${volume}/bb1/prefix1/ -al user:superuser1:rwxy[DEFAULT],group:superuser1:a[DEFAULT],user:testuser/scm@EXAMPLE.COM:rwxyc</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:27:34.469" level="INFO">Running command 'ozone sh prefix setacl o3://om:9862/84704-acls/bb1/prefix1/ -al user:superuser1:rwxy[DEFAULT],group:superuser1:a[DEFAULT],user:testuser/scm@EXAMPLE.COM:rwxyc 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:27:40.300" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:27:40.300" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20230109 03:27:34.465" endtime="20230109 03:27:40.300"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:27:40.302" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20230109 03:27:40.301" endtime="20230109 03:27:40.302"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:27:40.303" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:27:40.303" endtime="20230109 03:27:40.303"/>
</kw>
<status status="PASS" starttime="20230109 03:27:34.464" endtime="20230109 03:27:40.304"/>
</kw>
<msg timestamp="20230109 03:27:40.304" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:27:34.464" endtime="20230109 03:27:40.305"/>
</kw>
<msg timestamp="20230109 03:27:40.305" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20230109 03:27:34.463" endtime="20230109 03:27:40.305"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix getacl ${protocol}${server}/${volume}/bb1/prefix1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:27:40.311" level="INFO">Running command 'ozone sh prefix getacl o3://om:9862/84704-acls/bb1/prefix1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:27:46.556" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:27:46.556" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "D...</msg>
<status status="PASS" starttime="20230109 03:27:40.308" endtime="20230109 03:27:46.557"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:27:46.558" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20230109 03:27:46.557" endtime="20230109 03:27:46.558"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:27:46.559" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:27:46.559" endtime="20230109 03:27:46.560"/>
</kw>
<status status="PASS" starttime="20230109 03:27:40.307" endtime="20230109 03:27:46.560"/>
</kw>
<msg timestamp="20230109 03:27:46.560" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:27:40.306" endtime="20230109 03:27:46.561"/>
</kw>
<msg timestamp="20230109 03:27:46.561" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "D...</msg>
<status status="PASS" starttime="20230109 03:27:40.305" endtime="20230109 03:27:46.562"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20230109 03:27:46.562" endtime="20230109 03:27:46.563"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20230109 03:27:46.563" endtime="20230109 03:27:46.564"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/prefix1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:27:46.569" level="INFO">Running command 'ozone sh key put o3://om:9862/84704-acls/bb1/prefix1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:27:56.354" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:27:56.354" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230109 03:27:46.566" endtime="20230109 03:27:56.354"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:27:56.355" level="INFO"/>
<status status="PASS" starttime="20230109 03:27:56.354" endtime="20230109 03:27:56.356"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:27:56.356" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:27:56.356" endtime="20230109 03:27:56.356"/>
</kw>
<status status="PASS" starttime="20230109 03:27:46.565" endtime="20230109 03:27:56.357"/>
</kw>
<msg timestamp="20230109 03:27:56.357" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:27:46.565" endtime="20230109 03:27:56.358"/>
</kw>
<status status="PASS" starttime="20230109 03:27:46.564" endtime="20230109 03:27:56.358"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/prefix1/key1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:27:56.363" level="INFO">Running command 'ozone sh key getacl o3://om:9862/84704-acls/bb1/prefix1/key1 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:28:02.998" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:28:02.998" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ ...</msg>
<status status="PASS" starttime="20230109 03:27:56.360" endtime="20230109 03:28:02.998"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:28:03.000" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20230109 03:28:02.999" endtime="20230109 03:28:03.000"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:28:03.001" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:28:03.001" endtime="20230109 03:28:03.002"/>
</kw>
<status status="PASS" starttime="20230109 03:27:56.359" endtime="20230109 03:28:03.002"/>
</kw>
<msg timestamp="20230109 03:28:03.002" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:27:56.359" endtime="20230109 03:28:03.003"/>
</kw>
<msg timestamp="20230109 03:28:03.005" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ ...</msg>
<status status="PASS" starttime="20230109 03:27:56.358" endtime="20230109 03:28:03.005"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20230109 03:28:03.005" endtime="20230109 03:28:03.006"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20230109 03:28:03.006" endtime="20230109 03:28:03.007"/>
</kw>
<status status="PASS" starttime="20230109 03:27:08.504" endtime="20230109 03:28:03.007"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230109 03:27:08.354" endtime="20230109 03:28:03.008"/>
</test>
<test id="s1-s1-s5-t7" name="RpcClient without host" line="44">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:28:03.018" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:28:03.024" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:28:03.024" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230109 03:28:03.014" endtime="20230109 03:28:03.024"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:28:03.026" level="INFO">scm</msg>
<status status="PASS" starttime="20230109 03:28:03.025" endtime="20230109 03:28:03.026"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:28:03.027" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:28:03.027" endtime="20230109 03:28:03.028"/>
</kw>
<status status="PASS" starttime="20230109 03:28:03.013" endtime="20230109 03:28:03.028"/>
</kw>
<msg timestamp="20230109 03:28:03.028" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:28:03.013" endtime="20230109 03:28:03.029"/>
</kw>
<msg timestamp="20230109 03:28:03.030" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230109 03:28:03.012" endtime="20230109 03:28:03.030"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230109 03:28:03.031" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230109 03:28:03.030" endtime="20230109 03:28:03.031"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:28:03.039" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:28:03.162" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:28:03.162" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230109 03:28:03.036" endtime="20230109 03:28:03.162"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:28:03.165" level="INFO"/>
<status status="PASS" starttime="20230109 03:28:03.164" endtime="20230109 03:28:03.166"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:28:03.167" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:28:03.166" endtime="20230109 03:28:03.167"/>
</kw>
<status status="PASS" starttime="20230109 03:28:03.035" endtime="20230109 03:28:03.167"/>
</kw>
<msg timestamp="20230109 03:28:03.168" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:28:03.034" endtime="20230109 03:28:03.168"/>
</kw>
<status status="PASS" starttime="20230109 03:28:03.033" endtime="20230109 03:28:03.169"/>
</kw>
<status status="PASS" starttime="20230109 03:28:03.031" endtime="20230109 03:28:03.169"/>
</kw>
<status status="PASS" starttime="20230109 03:28:03.011" endtime="20230109 03:28:03.169"/>
</kw>
<status status="PASS" starttime="20230109 03:28:03.010" endtime="20230109 03:28:03.169"/>
</kw>
<kw name="Test ozone shell" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-without-host</arg>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:28:03.175" level="INFO">Running command 'ozone sh volume info o3:///84704-without-host 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:28:09.416" level="INFO">${rc} = 255</msg>
<msg timestamp="20230109 03:28:09.416" level="INFO">${output} = VOLUME_NOT_FOUND Volume 84704-without-host is not found</msg>
<status status="PASS" starttime="20230109 03:28:03.172" endtime="20230109 03:28:09.416"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:28:09.418" level="INFO">VOLUME_NOT_FOUND Volume 84704-without-host is not found</msg>
<status status="PASS" starttime="20230109 03:28:09.417" endtime="20230109 03:28:09.419"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:28:09.419" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:28:09.419" endtime="20230109 03:28:09.420"/>
</kw>
<msg timestamp="20230109 03:28:09.420" level="INFO">${result} = VOLUME_NOT_FOUND Volume 84704-without-host is not found</msg>
<status status="PASS" starttime="20230109 03:28:03.171" endtime="20230109 03:28:09.420"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230109 03:28:09.421" endtime="20230109 03:28:09.421"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:28:09.428" level="INFO">Running command 'ozone sh volume create o3:///84704-without-host --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:28:15.657" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:28:15.657" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230109 03:28:09.424" endtime="20230109 03:28:15.657"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:28:15.658" level="INFO"/>
<status status="PASS" starttime="20230109 03:28:15.657" endtime="20230109 03:28:15.659"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:28:15.659" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:28:15.659" endtime="20230109 03:28:15.659"/>
</kw>
<status status="PASS" starttime="20230109 03:28:09.423" endtime="20230109 03:28:15.660"/>
</kw>
<msg timestamp="20230109 03:28:15.660" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:28:09.422" endtime="20230109 03:28:15.661"/>
</kw>
<msg timestamp="20230109 03:28:15.661" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230109 03:28:09.421" endtime="20230109 03:28:15.661"/>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<arg>${result}</arg>
<doc>Verifies that the given item is empty.</doc>
<msg timestamp="20230109 03:28:15.662" level="INFO">Length is 0</msg>
<status status="PASS" starttime="20230109 03:28:15.661" endtime="20230109 03:28:15.662"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '.[] | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:28:15.679" level="INFO">Running command 'ozone sh volume list o3:/// | jq -r '.[] | select(.name=="84704-without-host")' 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:28:22.284" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:28:22.284" level="INFO">${output} = {
  "metadata": {},
  "name": "84704-without-host",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": ...</msg>
<status status="PASS" starttime="20230109 03:28:15.674" endtime="20230109 03:28:22.284"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:28:22.286" level="INFO">{
  "metadata": {},
  "name": "84704-without-host",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2023-01-09T03:28:15.244Z",
  "modificationTime": "2023-01-09T03:28:15.244Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "refCount": 0
}</msg>
<status status="PASS" starttime="20230109 03:28:22.285" endtime="20230109 03:28:22.286"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:28:22.287" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:28:22.287" endtime="20230109 03:28:22.287"/>
</kw>
<status status="PASS" starttime="20230109 03:28:15.673" endtime="20230109 03:28:22.288"/>
</kw>
<msg timestamp="20230109 03:28:22.288" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:28:15.672" endtime="20230109 03:28:22.288"/>
</kw>
<msg timestamp="20230109 03:28:22.289" level="INFO">${result} = {
  "metadata": {},
  "name": "84704-without-host",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": ...</msg>
<status status="PASS" starttime="20230109 03:28:15.662" endtime="20230109 03:28:22.289"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230109 03:28:22.289" endtime="20230109 03:28:22.289"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list | jq -r '.[] | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:28:22.294" level="INFO">Running command 'ozone sh volume list | jq -r '.[] | select(.name=="84704-without-host")' 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:28:28.885" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:28:28.885" level="INFO">${output} = {
  "metadata": {},
  "name": "84704-without-host",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": ...</msg>
<status status="PASS" starttime="20230109 03:28:22.291" endtime="20230109 03:28:28.885"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:28:28.886" level="INFO">{
  "metadata": {},
  "name": "84704-without-host",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2023-01-09T03:28:15.244Z",
  "modificationTime": "2023-01-09T03:28:15.244Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "refCount": 0
}</msg>
<status status="PASS" starttime="20230109 03:28:28.885" endtime="20230109 03:28:28.887"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:28:28.888" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:28:28.887" endtime="20230109 03:28:28.888"/>
</kw>
<status status="PASS" starttime="20230109 03:28:22.291" endtime="20230109 03:28:28.888"/>
</kw>
<msg timestamp="20230109 03:28:28.888" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:28:22.290" endtime="20230109 03:28:28.889"/>
</kw>
<msg timestamp="20230109 03:28:28.889" level="INFO">${result} = {
  "metadata": {},
  "name": "84704-without-host",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": ...</msg>
<status status="PASS" starttime="20230109 03:28:22.290" endtime="20230109 03:28:28.890"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230109 03:28:28.890" endtime="20230109 03:28:28.890"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:28:28.897" level="INFO">Running command 'ozone sh volume setquota o3:///84704-without-host --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:28:35.477" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:28:35.477" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230109 03:28:28.894" endtime="20230109 03:28:35.477"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:28:35.479" level="INFO"/>
<status status="PASS" starttime="20230109 03:28:35.478" endtime="20230109 03:28:35.479"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:28:35.480" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:28:35.480" endtime="20230109 03:28:35.481"/>
</kw>
<status status="PASS" starttime="20230109 03:28:28.893" endtime="20230109 03:28:35.481"/>
</kw>
<msg timestamp="20230109 03:28:35.481" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:28:28.893" endtime="20230109 03:28:35.482"/>
</kw>
<status status="PASS" starttime="20230109 03:28:28.891" endtime="20230109 03:28:35.482"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:28:35.488" level="INFO">Running command 'ozone sh volume info o3:///84704-without-host | jq -r '. | select(.name=="84704-without-host") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:28:42.336" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:28:42.336" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20230109 03:28:35.485" endtime="20230109 03:28:42.336"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:28:42.338" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20230109 03:28:42.337" endtime="20230109 03:28:42.339"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:28:42.340" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:28:42.339" endtime="20230109 03:28:42.340"/>
</kw>
<status status="PASS" starttime="20230109 03:28:35.484" endtime="20230109 03:28:42.341"/>
</kw>
<msg timestamp="20230109 03:28:42.341" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:28:35.484" endtime="20230109 03:28:42.341"/>
</kw>
<msg timestamp="20230109 03:28:42.342" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20230109 03:28:35.483" endtime="20230109 03:28:42.342"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230109 03:28:42.342" endtime="20230109 03:28:42.343"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:28:42.349" level="INFO">Running command 'ozone sh bucket create o3:///84704-without-host/bb1 --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:28:48.466" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:28:48.466" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230109 03:28:42.346" endtime="20230109 03:28:48.466"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:28:48.468" level="INFO"/>
<status status="PASS" starttime="20230109 03:28:48.467" endtime="20230109 03:28:48.469"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:28:48.472" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:28:48.469" endtime="20230109 03:28:48.472"/>
</kw>
<status status="PASS" starttime="20230109 03:28:42.345" endtime="20230109 03:28:48.473"/>
</kw>
<msg timestamp="20230109 03:28:48.473" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:28:42.345" endtime="20230109 03:28:48.473"/>
</kw>
<msg timestamp="20230109 03:28:48.474" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230109 03:28:42.344" endtime="20230109 03:28:48.474"/>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<arg>${result}</arg>
<doc>Verifies that the given item is empty.</doc>
<msg timestamp="20230109 03:28:48.475" level="INFO">Length is 0</msg>
<status status="PASS" starttime="20230109 03:28:48.474" endtime="20230109 03:28:48.475"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:28:48.481" level="INFO">Running command 'ozone sh bucket info o3:///84704-without-host/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:28:55.158" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:28:55.159" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20230109 03:28:48.478" endtime="20230109 03:28:55.159"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:28:55.161" level="INFO">DISK</msg>
<status status="PASS" starttime="20230109 03:28:55.160" endtime="20230109 03:28:55.161"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:28:55.162" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:28:55.161" endtime="20230109 03:28:55.162"/>
</kw>
<status status="PASS" starttime="20230109 03:28:48.477" endtime="20230109 03:28:55.162"/>
</kw>
<msg timestamp="20230109 03:28:55.162" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:28:48.476" endtime="20230109 03:28:55.163"/>
</kw>
<msg timestamp="20230109 03:28:55.164" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20230109 03:28:48.475" endtime="20230109 03:28:55.164"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>DISK</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230109 03:28:55.164" endtime="20230109 03:28:55.164"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:28:55.170" level="INFO">Running command 'ozone sh bucket info o3:///84704-without-host/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:29:01.967" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:29:01.967" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20230109 03:28:55.167" endtime="20230109 03:29:01.967"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:29:01.970" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20230109 03:29:01.968" endtime="20230109 03:29:01.970"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:29:01.971" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:29:01.970" endtime="20230109 03:29:01.971"/>
</kw>
<status status="PASS" starttime="20230109 03:28:55.166" endtime="20230109 03:29:01.972"/>
</kw>
<msg timestamp="20230109 03:29:01.972" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:28:55.166" endtime="20230109 03:29:01.973"/>
</kw>
<msg timestamp="20230109 03:29:01.974" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20230109 03:28:55.165" endtime="20230109 03:29:01.975"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230109 03:29:01.975" endtime="20230109 03:29:01.976"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:29:01.981" level="INFO">Running command 'ozone sh bucket info o3:///84704-without-host/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:29:09.217" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:29:09.218" level="INFO">${output} = 100</msg>
<status status="PASS" starttime="20230109 03:29:01.978" endtime="20230109 03:29:09.218"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:29:09.220" level="INFO">100</msg>
<status status="PASS" starttime="20230109 03:29:09.219" endtime="20230109 03:29:09.220"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:29:09.221" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:29:09.220" endtime="20230109 03:29:09.221"/>
</kw>
<status status="PASS" starttime="20230109 03:29:01.978" endtime="20230109 03:29:09.221"/>
</kw>
<msg timestamp="20230109 03:29:09.221" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:29:01.977" endtime="20230109 03:29:09.222"/>
</kw>
<msg timestamp="20230109 03:29:09.223" level="INFO">${result} = 100</msg>
<status status="PASS" starttime="20230109 03:29:01.976" endtime="20230109 03:29:09.223"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>100</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230109 03:29:09.223" endtime="20230109 03:29:09.224"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:29:09.230" level="INFO">Running command 'ozone sh bucket setquota o3:///84704-without-host/bb1 --space-quota 1TB --namespace-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:29:15.459" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:29:15.460" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230109 03:29:09.226" endtime="20230109 03:29:15.460"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:29:15.462" level="INFO"/>
<status status="PASS" starttime="20230109 03:29:15.460" endtime="20230109 03:29:15.462"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:29:15.463" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:29:15.462" endtime="20230109 03:29:15.464"/>
</kw>
<status status="PASS" starttime="20230109 03:29:09.225" endtime="20230109 03:29:15.464"/>
</kw>
<msg timestamp="20230109 03:29:15.464" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:29:09.225" endtime="20230109 03:29:15.465"/>
</kw>
<status status="PASS" starttime="20230109 03:29:09.224" endtime="20230109 03:29:15.466"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:29:15.476" level="INFO">Running command 'ozone sh bucket info o3:///84704-without-host/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:29:22.592" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:29:22.592" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" starttime="20230109 03:29:15.472" endtime="20230109 03:29:22.592"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:29:22.594" level="INFO">1099511627776</msg>
<status status="PASS" starttime="20230109 03:29:22.593" endtime="20230109 03:29:22.594"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:29:22.595" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:29:22.594" endtime="20230109 03:29:22.595"/>
</kw>
<status status="PASS" starttime="20230109 03:29:15.470" endtime="20230109 03:29:22.595"/>
</kw>
<msg timestamp="20230109 03:29:22.595" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:29:15.469" endtime="20230109 03:29:22.596"/>
</kw>
<msg timestamp="20230109 03:29:22.597" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" starttime="20230109 03:29:15.466" endtime="20230109 03:29:22.597"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1099511627776</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230109 03:29:22.597" endtime="20230109 03:29:22.598"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:29:22.604" level="INFO">Running command 'ozone sh bucket info o3:///84704-without-host/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:29:29.175" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:29:29.176" level="INFO">${output} = 1000</msg>
<status status="PASS" starttime="20230109 03:29:22.601" endtime="20230109 03:29:29.176"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:29:29.178" level="INFO">1000</msg>
<status status="PASS" starttime="20230109 03:29:29.177" endtime="20230109 03:29:29.178"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:29:29.179" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:29:29.178" endtime="20230109 03:29:29.179"/>
</kw>
<status status="PASS" starttime="20230109 03:29:22.600" endtime="20230109 03:29:29.179"/>
</kw>
<msg timestamp="20230109 03:29:29.179" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:29:22.600" endtime="20230109 03:29:29.180"/>
</kw>
<msg timestamp="20230109 03:29:29.180" level="INFO">${result} = 1000</msg>
<status status="PASS" starttime="20230109 03:29:22.598" endtime="20230109 03:29:29.181"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1000</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230109 03:29:29.181" endtime="20230109 03:29:29.182"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '.[] | select(.name=="bb1") | .volumeName'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:29:29.188" level="INFO">Running command 'ozone sh bucket list o3:///84704-without-host/ | jq -r '.[] | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:29:35.781" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:29:35.781" level="INFO">${output} = 84704-without-host</msg>
<status status="PASS" starttime="20230109 03:29:29.184" endtime="20230109 03:29:35.781"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:29:35.783" level="INFO">84704-without-host</msg>
<status status="PASS" starttime="20230109 03:29:35.782" endtime="20230109 03:29:35.783"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:29:35.784" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:29:35.784" endtime="20230109 03:29:35.785"/>
</kw>
<status status="PASS" starttime="20230109 03:29:29.184" endtime="20230109 03:29:35.785"/>
</kw>
<msg timestamp="20230109 03:29:35.785" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:29:29.183" endtime="20230109 03:29:35.786"/>
</kw>
<msg timestamp="20230109 03:29:35.786" level="INFO">${result} = 84704-without-host</msg>
<status status="PASS" starttime="20230109 03:29:29.182" endtime="20230109 03:29:35.786"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${volume}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230109 03:29:35.786" endtime="20230109 03:29:35.787"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Test key handling" library="ozone-shell-lib">
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:29:35.794" level="INFO">Running command 'ozone sh key put o3:///84704-without-host/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:29:45.800" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:29:45.800" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230109 03:29:35.791" endtime="20230109 03:29:45.800"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:29:45.801" level="INFO"/>
<status status="PASS" starttime="20230109 03:29:45.800" endtime="20230109 03:29:45.801"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:29:45.803" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:29:45.802" endtime="20230109 03:29:45.803"/>
</kw>
<status status="PASS" starttime="20230109 03:29:35.790" endtime="20230109 03:29:45.803"/>
</kw>
<msg timestamp="20230109 03:29:45.803" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:29:35.789" endtime="20230109 03:29:45.804"/>
</kw>
<status status="PASS" starttime="20230109 03:29:35.788" endtime="20230109 03:29:45.804"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:29:45.809" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:29:45.814" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:29:45.814" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230109 03:29:45.806" endtime="20230109 03:29:45.814"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:29:45.816" level="INFO"/>
<status status="PASS" starttime="20230109 03:29:45.815" endtime="20230109 03:29:45.816"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:29:45.817" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:29:45.816" endtime="20230109 03:29:45.817"/>
</kw>
<status status="PASS" starttime="20230109 03:29:45.806" endtime="20230109 03:29:45.818"/>
</kw>
<msg timestamp="20230109 03:29:45.818" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:29:45.805" endtime="20230109 03:29:45.819"/>
</kw>
<status status="PASS" starttime="20230109 03:29:45.805" endtime="20230109 03:29:45.819"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:29:45.827" level="INFO">Running command 'ozone sh key get o3:///84704-without-host/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:29:55.462" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:29:55.462" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230109 03:29:45.824" endtime="20230109 03:29:55.462"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:29:55.464" level="INFO"/>
<status status="PASS" starttime="20230109 03:29:55.463" endtime="20230109 03:29:55.464"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:29:55.465" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:29:55.465" endtime="20230109 03:29:55.465"/>
</kw>
<status status="PASS" starttime="20230109 03:29:45.821" endtime="20230109 03:29:55.466"/>
</kw>
<msg timestamp="20230109 03:29:55.466" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:29:45.820" endtime="20230109 03:29:55.467"/>
</kw>
<status status="PASS" starttime="20230109 03:29:45.819" endtime="20230109 03:29:55.467"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:29:55.473" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:29:55.478" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:29:55.478" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230109 03:29:55.470" endtime="20230109 03:29:55.478"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:29:55.480" level="INFO"/>
<status status="PASS" starttime="20230109 03:29:55.479" endtime="20230109 03:29:55.480"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:29:55.481" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:29:55.480" endtime="20230109 03:29:55.481"/>
</kw>
<status status="PASS" starttime="20230109 03:29:55.469" endtime="20230109 03:29:55.482"/>
</kw>
<msg timestamp="20230109 03:29:55.482" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:29:55.468" endtime="20230109 03:29:55.483"/>
</kw>
<status status="PASS" starttime="20230109 03:29:55.468" endtime="20230109 03:29:55.484"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:29:55.490" level="INFO">Running command 'ozone sh key put -t RATIS o3:///84704-without-host/bb1/key1_RATIS /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:30:05.821" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:30:05.821" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230109 03:29:55.486" endtime="20230109 03:30:05.821"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:30:05.823" level="INFO"/>
<status status="PASS" starttime="20230109 03:30:05.822" endtime="20230109 03:30:05.823"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:30:05.824" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:30:05.823" endtime="20230109 03:30:05.824"/>
</kw>
<status status="PASS" starttime="20230109 03:29:55.485" endtime="20230109 03:30:05.824"/>
</kw>
<msg timestamp="20230109 03:30:05.825" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:29:55.485" endtime="20230109 03:30:05.826"/>
</kw>
<status status="PASS" starttime="20230109 03:29:55.484" endtime="20230109 03:30:05.826"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1_RATIS</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:30:05.834" level="INFO">Running command 'rm -f /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:30:05.837" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:30:05.838" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230109 03:30:05.829" endtime="20230109 03:30:05.838"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:30:05.840" level="INFO"/>
<status status="PASS" starttime="20230109 03:30:05.838" endtime="20230109 03:30:05.840"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:30:05.841" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:30:05.840" endtime="20230109 03:30:05.841"/>
</kw>
<status status="PASS" starttime="20230109 03:30:05.827" endtime="20230109 03:30:05.842"/>
</kw>
<msg timestamp="20230109 03:30:05.842" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:30:05.827" endtime="20230109 03:30:05.843"/>
</kw>
<status status="PASS" starttime="20230109 03:30:05.826" endtime="20230109 03:30:05.843"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:30:05.848" level="INFO">Running command 'ozone sh key get o3:///84704-without-host/bb1/key1_RATIS /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:30:14.733" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:30:14.733" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230109 03:30:05.845" endtime="20230109 03:30:14.733"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:30:14.735" level="INFO"/>
<status status="PASS" starttime="20230109 03:30:14.734" endtime="20230109 03:30:14.735"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:30:14.736" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:30:14.736" endtime="20230109 03:30:14.737"/>
</kw>
<status status="PASS" starttime="20230109 03:30:05.845" endtime="20230109 03:30:14.737"/>
</kw>
<msg timestamp="20230109 03:30:14.738" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:30:05.844" endtime="20230109 03:30:14.738"/>
</kw>
<status status="PASS" starttime="20230109 03:30:05.843" endtime="20230109 03:30:14.739"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:30:14.745" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:30:14.751" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:30:14.751" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230109 03:30:14.742" endtime="20230109 03:30:14.751"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:30:14.753" level="INFO"/>
<status status="PASS" starttime="20230109 03:30:14.752" endtime="20230109 03:30:14.753"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:30:14.754" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:30:14.753" endtime="20230109 03:30:14.754"/>
</kw>
<status status="PASS" starttime="20230109 03:30:14.741" endtime="20230109 03:30:14.755"/>
</kw>
<msg timestamp="20230109 03:30:14.755" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:30:14.740" endtime="20230109 03:30:14.756"/>
</kw>
<status status="PASS" starttime="20230109 03:30:14.739" endtime="20230109 03:30:14.756"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:30:14.763" level="INFO">Running command 'ozone sh key info o3:///84704-without-host/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")' 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:30:21.584" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:30:21.584" level="INFO">${output} = {
  "volumeName": "84704-without-host",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17539,
  "creationTime": "2023-01-09T03:30:01.655Z",
  "modificationTime": "2023-01-09T03:30:05.227...</msg>
<status status="PASS" starttime="20230109 03:30:14.759" endtime="20230109 03:30:21.584"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:30:21.585" level="INFO">{
  "volumeName": "84704-without-host",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17539,
  "creationTime": "2023-01-09T03:30:01.655Z",
  "modificationTime": "2023-01-09T03:30:05.227Z",
  "replicationConfig": {
    "replicationFactor": "THREE",
    "requiredNodes": 3,
    "replicationType": "RATIS"
  },
  "metadata": {},
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 111677748019200020,
      "length": 17539,
      "offset": 0,
      "keyOffset": 0
    }
  ]
}</msg>
<status status="PASS" starttime="20230109 03:30:21.584" endtime="20230109 03:30:21.585"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:30:21.586" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:30:21.586" endtime="20230109 03:30:21.586"/>
</kw>
<status status="PASS" starttime="20230109 03:30:14.758" endtime="20230109 03:30:21.587"/>
</kw>
<msg timestamp="20230109 03:30:21.587" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:30:14.758" endtime="20230109 03:30:21.588"/>
</kw>
<msg timestamp="20230109 03:30:21.588" level="INFO">${result} = {
  "volumeName": "84704-without-host",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17539,
  "creationTime": "2023-01-09T03:30:01.655Z",
  "modificationTime": "2023-01-09T03:30:05.227...</msg>
<status status="PASS" starttime="20230109 03:30:14.756" endtime="20230109 03:30:21.588"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230109 03:30:21.588" endtime="20230109 03:30:21.589"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:30:21.597" level="INFO">Running command 'ozone sh key delete o3:///84704-without-host/bb1/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:30:28.535" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:30:28.535" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230109 03:30:21.593" endtime="20230109 03:30:28.535"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:30:28.536" level="INFO"/>
<status status="PASS" starttime="20230109 03:30:28.535" endtime="20230109 03:30:28.537"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:30:28.537" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:30:28.537" endtime="20230109 03:30:28.537"/>
</kw>
<status status="PASS" starttime="20230109 03:30:21.592" endtime="20230109 03:30:28.538"/>
</kw>
<msg timestamp="20230109 03:30:28.538" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:30:21.590" endtime="20230109 03:30:28.539"/>
</kw>
<status status="PASS" starttime="20230109 03:30:21.589" endtime="20230109 03:30:28.539"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:30:28.546" level="INFO">Running command 'ozone sh key cp o3:///84704-without-host/bb1 key1 key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:30:39.223" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:30:39.223" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230109 03:30:28.543" endtime="20230109 03:30:39.223"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:30:39.225" level="INFO"/>
<status status="PASS" starttime="20230109 03:30:39.224" endtime="20230109 03:30:39.225"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:30:39.226" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:30:39.225" endtime="20230109 03:30:39.226"/>
</kw>
<status status="PASS" starttime="20230109 03:30:28.542" endtime="20230109 03:30:39.227"/>
</kw>
<msg timestamp="20230109 03:30:39.227" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:30:28.541" endtime="20230109 03:30:39.228"/>
</kw>
<status status="PASS" starttime="20230109 03:30:28.540" endtime="20230109 03:30:39.228"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:30:39.236" level="INFO">Running command 'rm -f /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:30:39.239" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:30:39.240" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230109 03:30:39.230" endtime="20230109 03:30:39.240"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:30:39.241" level="INFO"/>
<status status="PASS" starttime="20230109 03:30:39.240" endtime="20230109 03:30:39.241"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:30:39.242" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:30:39.241" endtime="20230109 03:30:39.242"/>
</kw>
<status status="PASS" starttime="20230109 03:30:39.230" endtime="20230109 03:30:39.242"/>
</kw>
<msg timestamp="20230109 03:30:39.243" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:30:39.229" endtime="20230109 03:30:39.243"/>
</kw>
<status status="PASS" starttime="20230109 03:30:39.229" endtime="20230109 03:30:39.244"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:30:39.252" level="INFO">Running command 'ozone sh key get o3:///84704-without-host/bb1/key1-copy /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:30:48.618" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:30:48.618" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230109 03:30:39.246" endtime="20230109 03:30:48.618"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:30:48.620" level="INFO"/>
<status status="PASS" starttime="20230109 03:30:48.619" endtime="20230109 03:30:48.620"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:30:48.621" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:30:48.620" endtime="20230109 03:30:48.621"/>
</kw>
<status status="PASS" starttime="20230109 03:30:39.245" endtime="20230109 03:30:48.622"/>
</kw>
<msg timestamp="20230109 03:30:48.622" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:30:39.245" endtime="20230109 03:30:48.623"/>
</kw>
<status status="PASS" starttime="20230109 03:30:39.244" endtime="20230109 03:30:48.623"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:30:48.628" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:30:48.633" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:30:48.633" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230109 03:30:48.625" endtime="20230109 03:30:48.633"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:30:48.635" level="INFO"/>
<status status="PASS" starttime="20230109 03:30:48.634" endtime="20230109 03:30:48.636"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:30:48.637" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:30:48.636" endtime="20230109 03:30:48.637"/>
</kw>
<status status="PASS" starttime="20230109 03:30:48.624" endtime="20230109 03:30:48.637"/>
</kw>
<msg timestamp="20230109 03:30:48.638" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:30:48.624" endtime="20230109 03:30:48.638"/>
</kw>
<status status="PASS" starttime="20230109 03:30:48.623" endtime="20230109 03:30:48.639"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:30:48.646" level="INFO">Running command 'ozone sh key delete o3:///84704-without-host/bb1/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:30:55.010" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:30:55.010" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230109 03:30:48.642" endtime="20230109 03:30:55.010"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:30:55.013" level="INFO"/>
<status status="PASS" starttime="20230109 03:30:55.011" endtime="20230109 03:30:55.013"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:30:55.014" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:30:55.013" endtime="20230109 03:30:55.014"/>
</kw>
<status status="PASS" starttime="20230109 03:30:48.641" endtime="20230109 03:30:55.015"/>
</kw>
<msg timestamp="20230109 03:30:55.015" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:30:48.641" endtime="20230109 03:30:55.016"/>
</kw>
<status status="PASS" starttime="20230109 03:30:48.639" endtime="20230109 03:30:55.017"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:30:55.026" level="INFO">Running command 'ozone sh key get o3:///84704-without-host/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:31:01.722" level="INFO">${rc} = 255</msg>
<msg timestamp="20230109 03:31:01.722" level="INFO">${output} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20230109 03:30:55.019" endtime="20230109 03:31:01.722"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:31:01.724" level="INFO">/tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20230109 03:31:01.723" endtime="20230109 03:31:01.724"/>
</kw>
<msg timestamp="20230109 03:31:01.725" level="INFO">${result} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20230109 03:30:55.017" endtime="20230109 03:31:01.725"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230109 03:31:01.725" endtime="20230109 03:31:01.726"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:31:01.733" level="INFO">Running command 'ozone sh key get --force o3:///84704-without-host/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:31:11.814" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:31:11.814" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230109 03:31:01.729" endtime="20230109 03:31:11.814"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:31:11.815" level="INFO"/>
<status status="PASS" starttime="20230109 03:31:11.814" endtime="20230109 03:31:11.815"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:31:11.816" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:31:11.816" endtime="20230109 03:31:11.816"/>
</kw>
<status status="PASS" starttime="20230109 03:31:01.728" endtime="20230109 03:31:11.817"/>
</kw>
<msg timestamp="20230109 03:31:11.817" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:31:01.728" endtime="20230109 03:31:11.818"/>
</kw>
<msg timestamp="20230109 03:31:11.818" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230109 03:31:01.726" endtime="20230109 03:31:11.818"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230109 03:31:11.818" endtime="20230109 03:31:11.819"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:31:11.824" level="INFO">Running command 'ozone sh key info o3:///84704-without-host/bb1/key1 | jq -r '. | select(.name=="key1")' 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:31:19.193" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:31:19.193" level="INFO">${output} = {
  "volumeName": "84704-without-host",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17539,
  "creationTime": "2023-01-09T03:29:41.982Z",
  "modificationTime": "2023-01-09T03:29:45.271Z",
  ...</msg>
<status status="PASS" starttime="20230109 03:31:11.821" endtime="20230109 03:31:19.193"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:31:19.195" level="INFO">{
  "volumeName": "84704-without-host",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17539,
  "creationTime": "2023-01-09T03:29:41.982Z",
  "modificationTime": "2023-01-09T03:29:45.271Z",
  "replicationConfig": {
    "replicationFactor": "THREE",
    "requiredNodes": 3,
    "replicationType": "RATIS"
  },
  "metadata": {},
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 111677748019200020,
      "length": 17539,
      "offset": 0,
      "keyOffset": 0
    }
  ]
}</msg>
<status status="PASS" starttime="20230109 03:31:19.194" endtime="20230109 03:31:19.196"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:31:19.197" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:31:19.196" endtime="20230109 03:31:19.197"/>
</kw>
<status status="PASS" starttime="20230109 03:31:11.820" endtime="20230109 03:31:19.198"/>
</kw>
<msg timestamp="20230109 03:31:19.198" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:31:11.820" endtime="20230109 03:31:19.199"/>
</kw>
<msg timestamp="20230109 03:31:19.199" level="INFO">${result} = {
  "volumeName": "84704-without-host",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17539,
  "creationTime": "2023-01-09T03:29:41.982Z",
  "modificationTime": "2023-01-09T03:29:45.271Z",
  ...</msg>
<status status="PASS" starttime="20230109 03:31:11.819" endtime="20230109 03:31:19.199"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230109 03:31:19.200" endtime="20230109 03:31:19.200"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.[] | select(.name=="key1") | .name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:31:19.208" level="INFO">Running command 'ozone sh key list o3:///84704-without-host/bb1 | jq -r '.[] | select(.name=="key1") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:31:26.678" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:31:26.678" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20230109 03:31:19.203" endtime="20230109 03:31:26.678"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:31:26.680" level="INFO">key1</msg>
<status status="PASS" starttime="20230109 03:31:26.679" endtime="20230109 03:31:26.680"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:31:26.681" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:31:26.680" endtime="20230109 03:31:26.681"/>
</kw>
<status status="PASS" starttime="20230109 03:31:19.203" endtime="20230109 03:31:26.682"/>
</kw>
<msg timestamp="20230109 03:31:26.682" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:31:19.202" endtime="20230109 03:31:26.682"/>
</kw>
<msg timestamp="20230109 03:31:26.683" level="INFO">${result} = key1</msg>
<status status="PASS" starttime="20230109 03:31:19.201" endtime="20230109 03:31:26.684"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230109 03:31:26.684" endtime="20230109 03:31:26.685"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:31:26.693" level="INFO">Running command 'ozone sh key rename o3:///84704-without-host/bb1 key1 key2 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:31:32.745" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:31:32.745" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230109 03:31:26.688" endtime="20230109 03:31:32.745"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:31:32.747" level="INFO"/>
<status status="PASS" starttime="20230109 03:31:32.746" endtime="20230109 03:31:32.748"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:31:32.748" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:31:32.748" endtime="20230109 03:31:32.749"/>
</kw>
<status status="PASS" starttime="20230109 03:31:26.687" endtime="20230109 03:31:32.749"/>
</kw>
<msg timestamp="20230109 03:31:32.749" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:31:26.687" endtime="20230109 03:31:32.750"/>
</kw>
<status status="PASS" starttime="20230109 03:31:26.685" endtime="20230109 03:31:32.751"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:31:32.758" level="INFO">Running command 'ozone sh key list o3:///84704-without-host/bb1 | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:31:39.660" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:31:39.660" level="INFO">${output} = key2</msg>
<status status="PASS" starttime="20230109 03:31:32.754" endtime="20230109 03:31:39.660"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:31:39.662" level="INFO">key2</msg>
<status status="PASS" starttime="20230109 03:31:39.661" endtime="20230109 03:31:39.662"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:31:39.663" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:31:39.662" endtime="20230109 03:31:39.664"/>
</kw>
<status status="PASS" starttime="20230109 03:31:32.753" endtime="20230109 03:31:39.664"/>
</kw>
<msg timestamp="20230109 03:31:39.664" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:31:32.753" endtime="20230109 03:31:39.665"/>
</kw>
<msg timestamp="20230109 03:31:39.665" level="INFO">${result} = key2</msg>
<status status="PASS" starttime="20230109 03:31:32.751" endtime="20230109 03:31:39.665"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230109 03:31:39.666" endtime="20230109 03:31:39.666"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:31:39.674" level="INFO">Running command 'ozone sh key delete o3:///84704-without-host/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:31:45.838" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:31:45.839" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230109 03:31:39.669" endtime="20230109 03:31:45.839"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:31:45.840" level="INFO"/>
<status status="PASS" starttime="20230109 03:31:45.839" endtime="20230109 03:31:45.840"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:31:45.841" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:31:45.841" endtime="20230109 03:31:45.842"/>
</kw>
<status status="PASS" starttime="20230109 03:31:39.668" endtime="20230109 03:31:45.842"/>
</kw>
<msg timestamp="20230109 03:31:45.842" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:31:39.668" endtime="20230109 03:31:45.843"/>
</kw>
<status status="PASS" starttime="20230109 03:31:39.667" endtime="20230109 03:31:45.843"/>
</kw>
<status status="PASS" starttime="20230109 03:29:35.787" endtime="20230109 03:31:45.844"/>
</kw>
<status status="PASS" starttime="20230109 03:29:35.787" endtime="20230109 03:31:45.844"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --space-quota ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:31:45.849" level="INFO">Running command 'ozone sh volume clrquota --space-quota o3:///84704-without-host 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:31:52.494" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:31:52.494" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230109 03:31:45.846" endtime="20230109 03:31:52.494"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:31:52.496" level="INFO"/>
<status status="PASS" starttime="20230109 03:31:52.495" endtime="20230109 03:31:52.496"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:31:52.497" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:31:52.497" endtime="20230109 03:31:52.497"/>
</kw>
<status status="PASS" starttime="20230109 03:31:45.846" endtime="20230109 03:31:52.498"/>
</kw>
<msg timestamp="20230109 03:31:52.498" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:31:45.845" endtime="20230109 03:31:52.499"/>
</kw>
<status status="PASS" starttime="20230109 03:31:45.844" endtime="20230109 03:31:52.499"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:31:52.509" level="INFO">Running command 'ozone sh volume info o3:///84704-without-host | jq -r '. | select(.name=="84704-without-host") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:31:59.469" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:31:59.469" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20230109 03:31:52.502" endtime="20230109 03:31:59.469"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:31:59.471" level="INFO">-1</msg>
<status status="PASS" starttime="20230109 03:31:59.470" endtime="20230109 03:31:59.471"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:31:59.472" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:31:59.471" endtime="20230109 03:31:59.472"/>
</kw>
<status status="PASS" starttime="20230109 03:31:52.502" endtime="20230109 03:31:59.472"/>
</kw>
<msg timestamp="20230109 03:31:59.473" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:31:52.501" endtime="20230109 03:31:59.473"/>
</kw>
<msg timestamp="20230109 03:31:59.474" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20230109 03:31:52.499" endtime="20230109 03:31:59.474"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230109 03:31:59.474" endtime="20230109 03:31:59.475"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --namespace-quota ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:31:59.481" level="INFO">Running command 'ozone sh volume clrquota --namespace-quota o3:///84704-without-host 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:32:05.857" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:32:05.857" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230109 03:31:59.478" endtime="20230109 03:32:05.857"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:32:05.859" level="INFO"/>
<status status="PASS" starttime="20230109 03:32:05.858" endtime="20230109 03:32:05.859"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:32:05.860" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:32:05.860" endtime="20230109 03:32:05.860"/>
</kw>
<status status="PASS" starttime="20230109 03:31:59.477" endtime="20230109 03:32:05.861"/>
</kw>
<msg timestamp="20230109 03:32:05.861" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:31:59.476" endtime="20230109 03:32:05.862"/>
</kw>
<status status="PASS" starttime="20230109 03:31:59.475" endtime="20230109 03:32:05.862"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:32:05.868" level="INFO">Running command 'ozone sh volume info o3:///84704-without-host | jq -r '. | select(.name=="84704-without-host") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:32:12.844" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:32:12.845" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20230109 03:32:05.865" endtime="20230109 03:32:12.845"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:32:12.847" level="INFO">-1</msg>
<status status="PASS" starttime="20230109 03:32:12.845" endtime="20230109 03:32:12.847"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:32:12.848" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:32:12.847" endtime="20230109 03:32:12.849"/>
</kw>
<status status="PASS" starttime="20230109 03:32:05.864" endtime="20230109 03:32:12.849"/>
</kw>
<msg timestamp="20230109 03:32:12.850" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:32:05.864" endtime="20230109 03:32:12.850"/>
</kw>
<msg timestamp="20230109 03:32:12.851" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20230109 03:32:05.862" endtime="20230109 03:32:12.851"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230109 03:32:12.851" endtime="20230109 03:32:12.852"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --space-quota ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:32:12.858" level="INFO">Running command 'ozone sh bucket clrquota --space-quota o3:///84704-without-host/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:32:19.528" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:32:19.528" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230109 03:32:12.854" endtime="20230109 03:32:19.528"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:32:19.530" level="INFO"/>
<status status="PASS" starttime="20230109 03:32:19.529" endtime="20230109 03:32:19.530"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:32:19.531" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:32:19.530" endtime="20230109 03:32:19.532"/>
</kw>
<status status="PASS" starttime="20230109 03:32:12.853" endtime="20230109 03:32:19.532"/>
</kw>
<msg timestamp="20230109 03:32:19.532" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:32:12.853" endtime="20230109 03:32:19.533"/>
</kw>
<status status="PASS" starttime="20230109 03:32:12.852" endtime="20230109 03:32:19.533"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:32:19.539" level="INFO">Running command 'ozone sh bucket info o3:///84704-without-host/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:32:26.726" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:32:26.726" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20230109 03:32:19.536" endtime="20230109 03:32:26.727"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:32:26.729" level="INFO">-1</msg>
<status status="PASS" starttime="20230109 03:32:26.727" endtime="20230109 03:32:26.729"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:32:26.730" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:32:26.729" endtime="20230109 03:32:26.730"/>
</kw>
<status status="PASS" starttime="20230109 03:32:19.535" endtime="20230109 03:32:26.730"/>
</kw>
<msg timestamp="20230109 03:32:26.730" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:32:19.535" endtime="20230109 03:32:26.741"/>
</kw>
<msg timestamp="20230109 03:32:26.742" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20230109 03:32:19.533" endtime="20230109 03:32:26.742"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230109 03:32:26.743" endtime="20230109 03:32:26.743"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --namespace-quota ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:32:26.752" level="INFO">Running command 'ozone sh bucket clrquota --namespace-quota o3:///84704-without-host/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:32:33.458" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:32:33.458" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230109 03:32:26.748" endtime="20230109 03:32:33.458"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:32:33.460" level="INFO"/>
<status status="PASS" starttime="20230109 03:32:33.458" endtime="20230109 03:32:33.460"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:32:33.461" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:32:33.460" endtime="20230109 03:32:33.461"/>
</kw>
<status status="PASS" starttime="20230109 03:32:26.745" endtime="20230109 03:32:33.462"/>
</kw>
<msg timestamp="20230109 03:32:33.462" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:32:26.744" endtime="20230109 03:32:33.462"/>
</kw>
<status status="PASS" starttime="20230109 03:32:26.744" endtime="20230109 03:32:33.462"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:32:33.468" level="INFO">Running command 'ozone sh bucket info o3:///84704-without-host/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:32:40.913" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:32:40.913" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20230109 03:32:33.465" endtime="20230109 03:32:40.913"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:32:40.915" level="INFO">-1</msg>
<status status="PASS" starttime="20230109 03:32:40.914" endtime="20230109 03:32:40.915"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:32:40.916" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:32:40.915" endtime="20230109 03:32:40.916"/>
</kw>
<status status="PASS" starttime="20230109 03:32:33.464" endtime="20230109 03:32:40.916"/>
</kw>
<msg timestamp="20230109 03:32:40.916" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:32:33.464" endtime="20230109 03:32:40.917"/>
</kw>
<msg timestamp="20230109 03:32:40.918" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20230109 03:32:33.463" endtime="20230109 03:32:40.919"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230109 03:32:40.919" endtime="20230109 03:32:40.920"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:32:40.925" level="INFO">Running command 'ozone sh bucket delete o3:///84704-without-host/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:32:46.744" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:32:46.744" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230109 03:32:40.922" endtime="20230109 03:32:46.744"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:32:46.745" level="INFO"/>
<status status="PASS" starttime="20230109 03:32:46.744" endtime="20230109 03:32:46.745"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:32:46.746" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:32:46.746" endtime="20230109 03:32:46.746"/>
</kw>
<status status="PASS" starttime="20230109 03:32:40.921" endtime="20230109 03:32:46.747"/>
</kw>
<msg timestamp="20230109 03:32:46.747" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:32:40.921" endtime="20230109 03:32:46.748"/>
</kw>
<status status="PASS" starttime="20230109 03:32:40.920" endtime="20230109 03:32:46.748"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:32:46.753" level="INFO">Running command 'ozone sh volume delete o3:///84704-without-host 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:32:53.044" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:32:53.044" level="INFO">${output} = Volume 84704-without-host is deleted</msg>
<status status="PASS" starttime="20230109 03:32:46.750" endtime="20230109 03:32:53.044"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:32:53.046" level="INFO">Volume 84704-without-host is deleted</msg>
<status status="PASS" starttime="20230109 03:32:53.045" endtime="20230109 03:32:53.046"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:32:53.047" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:32:53.046" endtime="20230109 03:32:53.047"/>
</kw>
<status status="PASS" starttime="20230109 03:32:46.749" endtime="20230109 03:32:53.047"/>
</kw>
<msg timestamp="20230109 03:32:53.048" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:32:46.749" endtime="20230109 03:32:53.048"/>
</kw>
<status status="PASS" starttime="20230109 03:32:46.748" endtime="20230109 03:32:53.048"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:32:53.053" level="INFO">Running command 'ozone sh volume create o3:///84704-without-host 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:32:58.652" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:32:58.652" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230109 03:32:53.050" endtime="20230109 03:32:58.652"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:32:58.654" level="INFO"/>
<status status="PASS" starttime="20230109 03:32:58.653" endtime="20230109 03:32:58.654"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:32:58.655" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:32:58.655" endtime="20230109 03:32:58.656"/>
</kw>
<status status="PASS" starttime="20230109 03:32:53.050" endtime="20230109 03:32:58.657"/>
</kw>
<msg timestamp="20230109 03:32:58.657" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:32:53.049" endtime="20230109 03:32:58.658"/>
</kw>
<status status="PASS" starttime="20230109 03:32:53.049" endtime="20230109 03:32:58.658"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:32:58.669" level="INFO">Running command 'ozone sh volume info o3:///84704-without-host | jq -r '. | select(.name=="84704-without-host") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:33:03.012" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20230109 03:32:58.662" endtime="20230109 03:33:03.012"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230109 03:33:03.013" endtime="20230109 03:33:03.013"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20230109 03:33:03.014" endtime="20230109 03:33:03.014"/>
</kw>
<status status="FAIL" starttime="20230109 03:32:58.660" endtime="20230109 03:33:03.015"/>
</kw>
<msg timestamp="20230109 03:33:03.017" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20230109 03:32:58.660" endtime="20230109 03:33:03.020"/>
</kw>
<status status="FAIL" starttime="20230109 03:32:58.659" endtime="20230109 03:33:03.022"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20230109 03:33:03.022" endtime="20230109 03:33:03.022"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20230109 03:33:03.023" endtime="20230109 03:33:03.023"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20230109 03:33:03.024" endtime="20230109 03:33:03.024"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20230109 03:33:03.024" endtime="20230109 03:33:03.024"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20230109 03:33:03.025" endtime="20230109 03:33:03.025"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20230109 03:33:03.025" endtime="20230109 03:33:03.043"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20230109 03:33:03.043" endtime="20230109 03:33:03.043"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20230109 03:33:03.045" endtime="20230109 03:33:03.045"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20230109 03:33:03.045" endtime="20230109 03:33:03.045"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20230109 03:33:03.046" endtime="20230109 03:33:03.046"/>
</kw>
<status status="FAIL" starttime="20230109 03:28:03.169" endtime="20230109 03:33:03.047"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20230109 03:28:03.009" endtime="20230109 03:33:03.049">Test timeout 5 minutes exceeded.</status>
</test>
<doc>Test ozone shell CLI usage</doc>
<status status="FAIL" starttime="20230109 03:18:31.217" endtime="20230109 03:33:03.052"/>
</suite>
<suite id="s1-s1-s6" name="Single Node" source="/opt/hadoop/smoketest/basic/single_node.robot">
<test id="s1-s1-s6-t1" name="Basic Freon smoketest for one datanode" line="25">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:33:03.122" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:33:03.138" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:33:03.138" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230109 03:33:03.111" endtime="20230109 03:33:03.138"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:33:03.140" level="INFO">scm</msg>
<status status="PASS" starttime="20230109 03:33:03.139" endtime="20230109 03:33:03.140"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:33:03.141" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:33:03.140" endtime="20230109 03:33:03.141"/>
</kw>
<status status="PASS" starttime="20230109 03:33:03.109" endtime="20230109 03:33:03.142"/>
</kw>
<msg timestamp="20230109 03:33:03.142" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:33:03.108" endtime="20230109 03:33:03.143"/>
</kw>
<msg timestamp="20230109 03:33:03.143" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230109 03:33:03.107" endtime="20230109 03:33:03.143"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230109 03:33:03.148" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230109 03:33:03.143" endtime="20230109 03:33:03.148"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:33:03.170" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:33:03.399" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:33:03.400" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230109 03:33:03.155" endtime="20230109 03:33:03.400"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:33:03.402" level="INFO"/>
<status status="PASS" starttime="20230109 03:33:03.401" endtime="20230109 03:33:03.402"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:33:03.403" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:33:03.402" endtime="20230109 03:33:03.403"/>
</kw>
<status status="PASS" starttime="20230109 03:33:03.153" endtime="20230109 03:33:03.404"/>
</kw>
<msg timestamp="20230109 03:33:03.404" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:33:03.153" endtime="20230109 03:33:03.405"/>
</kw>
<status status="PASS" starttime="20230109 03:33:03.151" endtime="20230109 03:33:03.406"/>
</kw>
<status status="PASS" starttime="20230109 03:33:03.148" endtime="20230109 03:33:03.406"/>
</kw>
<status status="PASS" starttime="20230109 03:33:03.104" endtime="20230109 03:33:03.407"/>
</kw>
<status status="PASS" starttime="20230109 03:33:03.102" endtime="20230109 03:33:03.407"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>10</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230109 03:33:03.412" level="INFO">${random} = kecopnKedi</msg>
<status status="PASS" starttime="20230109 03:33:03.410" endtime="20230109 03:33:03.412"/>
</kw>
<kw name="Freon OCKG" library="freon">
<arg>prefix=${random}</arg>
<arg>args=--replication ONE --replication-type RATIS</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:33:03.432" level="INFO">Running command 'ozone freon ockg  -t 1 -n1 -p kecopnKedi --replication ONE --replication-type RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:33:15.411" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:33:15.411" level="INFO">${output} = 2023-01-09 03:33:07,915 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-01-09 03:33:08,169 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230109 03:33:03.424" endtime="20230109 03:33:15.411"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:33:15.413" level="INFO">2023-01-09 03:33:07,915 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-01-09 03:33:08,169 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-01-09 03:33:08,170 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-01-09 03:33:08,478 [main] INFO freon.BaseFreonGenerator: Executing test with prefix kecopnKedi and number-of-tests 1
2023-01-09 03:33:08,603 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-01-09 03:33:09,610 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-01-09 03:33:10,611 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-01-09 03:33:11,621 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-01-09 03:33:11,634 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2023-01-09 03:33:11,706 [pool-2-thread-1] INFO netty.NettyConfigKeys$DataStream: setTlsConf GrpcTlsConfig0-
2023-01-09 03:33:12,124 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2023-01-09 03:33:12,623 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-01-09 03:33:13,624 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-01-09 03:33:14,624 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2023-01-09 03:33:15,040 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=1, min=3011.215903, max=3011.215903, mean=3011.215903, stddev=0.0, median=3011.215903, p75=3011.215903, p95=3011.215903, p98=3011.215903, p99=3011.215903, p999=3011.215903, mean_rate=0.24204192959779303, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-01-09 03:33:15,041 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 6
2023-01-09 03:33:15,041 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-01-09 03:33:15,041 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20230109 03:33:15.412" endtime="20230109 03:33:15.413"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:33:15.414" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:33:15.413" endtime="20230109 03:33:15.414"/>
</kw>
<status status="PASS" starttime="20230109 03:33:03.423" endtime="20230109 03:33:15.414"/>
</kw>
<msg timestamp="20230109 03:33:15.414" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:33:03.423" endtime="20230109 03:33:15.415"/>
</kw>
<msg timestamp="20230109 03:33:15.416" level="INFO">${result} = 2023-01-09 03:33:07,915 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-01-09 03:33:08,169 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230109 03:33:03.416" endtime="20230109 03:33:15.416"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230109 03:33:15.416" endtime="20230109 03:33:15.417"/>
</kw>
<status status="PASS" starttime="20230109 03:33:03.413" endtime="20230109 03:33:15.418"/>
</kw>
<kw name="Freon OCKV" library="freon">
<arg>prefix=${random}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockv ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:33:15.425" level="INFO">Running command 'ozone freon ockv  -t 1 -n1 -p kecopnKedi  2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:33:26.467" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:33:26.468" level="INFO">${output} = 2023-01-09 03:33:18,963 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-01-09 03:33:19,264 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230109 03:33:15.422" endtime="20230109 03:33:26.468"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:33:26.470" level="INFO">2023-01-09 03:33:18,963 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-01-09 03:33:19,264 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-01-09 03:33:19,264 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-01-09 03:33:19,577 [main] INFO freon.BaseFreonGenerator: Executing test with prefix kecopnKedi and number-of-tests 1
2023-01-09 03:33:19,756 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-01-09 03:33:20,759 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-01-09 03:33:21,760 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-01-09 03:33:22,762 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-01-09 03:33:22,919 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2023-01-09 03:33:23,762 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-01-09 03:33:24,764 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-01-09 03:33:25,764 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2023-01-09 03:33:26,063 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-validate, count=1, min=64.861654, max=64.861654, mean=64.861654, stddev=0.0, median=64.861654, p75=64.861654, p95=64.861654, p98=64.861654, p99=64.861654, p999=64.861654, mean_rate=0.855558062454753, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-01-09 03:33:26,066 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 6
2023-01-09 03:33:26,067 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-01-09 03:33:26,067 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20230109 03:33:26.469" endtime="20230109 03:33:26.470"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:33:26.471" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:33:26.471" endtime="20230109 03:33:26.471"/>
</kw>
<status status="PASS" starttime="20230109 03:33:15.421" endtime="20230109 03:33:26.472"/>
</kw>
<msg timestamp="20230109 03:33:26.472" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:33:15.421" endtime="20230109 03:33:26.473"/>
</kw>
<msg timestamp="20230109 03:33:26.473" level="INFO">${result} = 2023-01-09 03:33:18,963 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-01-09 03:33:19,264 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230109 03:33:15.420" endtime="20230109 03:33:26.473"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230109 03:33:26.474" endtime="20230109 03:33:26.474"/>
</kw>
<status status="PASS" starttime="20230109 03:33:15.418" endtime="20230109 03:33:26.474"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230109 03:33:03.098" endtime="20230109 03:33:26.475"/>
</test>
<doc>Smoketest for one datanode</doc>
<status status="PASS" starttime="20230109 03:33:03.062" endtime="20230109 03:33:26.477"/>
</suite>
<status status="FAIL" starttime="20230109 03:06:41.135" endtime="20230109 03:33:26.482"/>
</suite>
<suite id="s1-s2" name="Kinit" source="/opt/hadoop/smoketest/kinit.robot">
<test id="s1-s2-t1" name="Kinit" line="27">
<kw name="Kinit test user" library="commonlib">
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:06:33.000" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:06:33.006" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:06:33.006" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230109 03:06:32.994" endtime="20230109 03:06:33.006"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:06:33.008" level="INFO">scm</msg>
<status status="PASS" starttime="20230109 03:06:33.007" endtime="20230109 03:06:33.008"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:06:33.018" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:06:33.008" endtime="20230109 03:06:33.018"/>
</kw>
<status status="PASS" starttime="20230109 03:06:32.993" endtime="20230109 03:06:33.018"/>
</kw>
<msg timestamp="20230109 03:06:33.018" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:06:32.993" endtime="20230109 03:06:33.020"/>
</kw>
<msg timestamp="20230109 03:06:33.021" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230109 03:06:32.992" endtime="20230109 03:06:33.021"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230109 03:06:33.022" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230109 03:06:33.021" endtime="20230109 03:06:33.022"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230109 03:06:33.028" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20230109 03:06:33.124" level="INFO">${rc} = 0</msg>
<msg timestamp="20230109 03:06:33.124" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230109 03:06:33.025" endtime="20230109 03:06:33.124"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230109 03:06:33.132" level="INFO"/>
<status status="PASS" starttime="20230109 03:06:33.130" endtime="20230109 03:06:33.132"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230109 03:06:33.133" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230109 03:06:33.132" endtime="20230109 03:06:33.133"/>
</kw>
<status status="PASS" starttime="20230109 03:06:33.024" endtime="20230109 03:06:33.134"/>
</kw>
<msg timestamp="20230109 03:06:33.138" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230109 03:06:33.024" endtime="20230109 03:06:33.138"/>
</kw>
<status status="PASS" starttime="20230109 03:06:33.023" endtime="20230109 03:06:33.139"/>
</kw>
<status status="PASS" starttime="20230109 03:06:33.022" endtime="20230109 03:06:33.139"/>
</kw>
<status status="PASS" starttime="20230109 03:06:32.991" endtime="20230109 03:06:33.140"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20230109 03:06:32.990" endtime="20230109 03:06:33.140"/>
</test>
<doc>Kinit test user</doc>
<status status="PASS" starttime="20230109 03:06:32.911" endtime="20230109 03:06:33.144"/>
</suite>
<status status="FAIL" starttime="N/A" endtime="N/A" elapsedtime="1605580"/>
</suite>
<statistics>
<total>
<stat pass="29" fail="3" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="29" fail="3" skip="0" id="s1" name="ozonesecure">ozonesecure</stat>
<stat pass="28" fail="3" skip="0" id="s1-s1" name="Basic">ozonesecure.Basic</stat>
<stat pass="2" fail="0" skip="0" id="s1-s1-s1" name="Basic">ozonesecure.Basic.Basic</stat>
<stat pass="4" fail="0" skip="0" id="s1-s1-s2" name="Getconf">ozonesecure.Basic.Getconf</stat>
<stat pass="16" fail="0" skip="0" id="s1-s1-s3" name="Links">ozonesecure.Basic.Links</stat>
<stat pass="0" fail="1" skip="0" id="s1-s1-s4" name="Ozone-Shell-Single">ozonesecure.Basic.Ozone-Shell-Single</stat>
<stat pass="5" fail="2" skip="0" id="s1-s1-s5" name="Ozone-Shell">ozonesecure.Basic.Ozone-Shell</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1-s6" name="Single Node">ozonesecure.Basic.Single Node</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2" name="Kinit">ozonesecure.Kinit</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
